### YamlMime:ManagedReference
items:
- uid: AlgoSdk.Wallet
  commentId: T:AlgoSdk.Wallet
  id: Wallet
  parent: AlgoSdk
  children:
  - AlgoSdk.Wallet.DriverName
  - AlgoSdk.Wallet.DriverVersion
  - AlgoSdk.Wallet.Equals(AlgoSdk.Wallet)
  - AlgoSdk.Wallet.Id
  - AlgoSdk.Wallet.MnemonicUx
  - AlgoSdk.Wallet.Name
  - AlgoSdk.Wallet.SupportedTransactions
  langs:
  - csharp
  - vb
  name: Wallet
  nameWithType: Wallet
  fullName: AlgoSdk.Wallet
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Wallets/Wallet.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Wallet
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Wallets/Wallet.cs
    startLine: 5
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: 'public struct Wallet : IEquatable<Wallet>'
    content.vb: >-
      Public Structure Wallet
          Implements IEquatable(Of Wallet)
  implements:
  - System.IEquatable{AlgoSdk.Wallet}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: AlgoSdk.Wallet.DriverName
  commentId: F:AlgoSdk.Wallet.DriverName
  id: DriverName
  parent: AlgoSdk.Wallet
  langs:
  - csharp
  - vb
  name: DriverName
  nameWithType: Wallet.DriverName
  fullName: AlgoSdk.Wallet.DriverName
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Wallets/Wallet.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: DriverName
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Wallets/Wallet.cs
    startLine: 10
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("driver_name", null, false)]

      public FixedString64Bytes DriverName
    return:
      type: Unity.Collections.FixedString64Bytes
    content.vb: >-
      <AlgoApiField("driver_name", Nothing, False)>

      Public DriverName As FixedString64Bytes
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: driver_name
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Wallet.DriverVersion
  commentId: F:AlgoSdk.Wallet.DriverVersion
  id: DriverVersion
  parent: AlgoSdk.Wallet
  langs:
  - csharp
  - vb
  name: DriverVersion
  nameWithType: Wallet.DriverVersion
  fullName: AlgoSdk.Wallet.DriverVersion
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Wallets/Wallet.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: DriverVersion
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Wallets/Wallet.cs
    startLine: 13
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("driver_version", null, false)]

      public uint DriverVersion
    return:
      type: System.UInt32
    content.vb: >-
      <AlgoApiField("driver_version", Nothing, False)>

      Public DriverVersion As UInteger
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: driver_version
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Wallet.Id
  commentId: F:AlgoSdk.Wallet.Id
  id: Id
  parent: AlgoSdk.Wallet
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Wallet.Id
  fullName: AlgoSdk.Wallet.Id
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Wallets/Wallet.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Id
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Wallets/Wallet.cs
    startLine: 16
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("id", null, false)]

      public FixedString128Bytes Id
    return:
      type: Unity.Collections.FixedString128Bytes
    content.vb: >-
      <AlgoApiField("id", Nothing, False)>

      Public Id As FixedString128Bytes
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: id
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Wallet.MnemonicUx
  commentId: F:AlgoSdk.Wallet.MnemonicUx
  id: MnemonicUx
  parent: AlgoSdk.Wallet
  langs:
  - csharp
  - vb
  name: MnemonicUx
  nameWithType: Wallet.MnemonicUx
  fullName: AlgoSdk.Wallet.MnemonicUx
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Wallets/Wallet.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: MnemonicUx
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Wallets/Wallet.cs
    startLine: 19
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("mnemonic_ux", null, false)]

      public Optional<bool> MnemonicUx
    return:
      type: AlgoSdk.Optional{System.Boolean}
    content.vb: "<AlgoApiField(\"mnemonic_ux\", Nothing, False)>\nPublic MnemonicUx As "
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: mnemonic_ux
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Wallet.Name
  commentId: F:AlgoSdk.Wallet.Name
  id: Name
  parent: AlgoSdk.Wallet
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Wallet.Name
  fullName: AlgoSdk.Wallet.Name
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Wallets/Wallet.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Name
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Wallets/Wallet.cs
    startLine: 22
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("name", null, false)]

      public FixedString64Bytes Name
    return:
      type: Unity.Collections.FixedString64Bytes
    content.vb: >-
      <AlgoApiField("name", Nothing, False)>

      Public Name As FixedString64Bytes
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: name
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Wallet.SupportedTransactions
  commentId: F:AlgoSdk.Wallet.SupportedTransactions
  id: SupportedTransactions
  parent: AlgoSdk.Wallet
  langs:
  - csharp
  - vb
  name: SupportedTransactions
  nameWithType: Wallet.SupportedTransactions
  fullName: AlgoSdk.Wallet.SupportedTransactions
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Wallets/Wallet.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: SupportedTransactions
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Wallets/Wallet.cs
    startLine: 25
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("supported_txs", null, false)]

      public TransactionType[] SupportedTransactions
    return:
      type: AlgoSdk.TransactionType[]
    content.vb: >-
      <AlgoApiField("supported_txs", Nothing, False)>

      Public SupportedTransactions As TransactionType()
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: supported_txs
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Wallet.Equals(AlgoSdk.Wallet)
  commentId: M:AlgoSdk.Wallet.Equals(AlgoSdk.Wallet)
  id: Equals(AlgoSdk.Wallet)
  parent: AlgoSdk.Wallet
  langs:
  - csharp
  - vb
  name: Equals(Wallet)
  nameWithType: Wallet.Equals(Wallet)
  fullName: AlgoSdk.Wallet.Equals(AlgoSdk.Wallet)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Wallets/Wallet.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Equals
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Wallets/Wallet.cs
    startLine: 27
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public bool Equals(Wallet other)
    parameters:
    - id: other
      type: AlgoSdk.Wallet
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Wallet) As Boolean
  overload: AlgoSdk.Wallet.Equals*
  implements:
  - System.IEquatable{AlgoSdk.Wallet}.Equals(AlgoSdk.Wallet)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: System.IEquatable{AlgoSdk.Wallet}
  commentId: T:System.IEquatable{AlgoSdk.Wallet}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Wallet>
  nameWithType: IEquatable<Wallet>
  fullName: System.IEquatable<AlgoSdk.Wallet>
  nameWithType.vb: IEquatable(Of Wallet)
  fullName.vb: System.IEquatable(Of AlgoSdk.Wallet)
  name.vb: IEquatable(Of Wallet)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.Wallet
    name: Wallet
    nameWithType: Wallet
    fullName: AlgoSdk.Wallet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.Wallet
    name: Wallet
    nameWithType: Wallet
    fullName: AlgoSdk.Wallet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Unity.Collections.FixedString64Bytes
  commentId: T:Unity.Collections.FixedString64Bytes
  parent: Unity.Collections
  name: FixedString64Bytes
  nameWithType: FixedString64Bytes
  fullName: Unity.Collections.FixedString64Bytes
- uid: Unity.Collections
  commentId: N:Unity.Collections
  name: Unity.Collections
  nameWithType: Unity.Collections
  fullName: Unity.Collections
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Unity.Collections.FixedString128Bytes
  commentId: T:Unity.Collections.FixedString128Bytes
  parent: Unity.Collections
  name: FixedString128Bytes
  nameWithType: FixedString128Bytes
  fullName: Unity.Collections.FixedString128Bytes
- uid: AlgoSdk.Optional{System.Boolean}
  commentId: T:AlgoSdk.Optional{System.Boolean}
  parent: AlgoSdk
  definition: AlgoSdk.Optional`1
  name: Optional<Boolean>
  nameWithType: Optional<Boolean>
  fullName: AlgoSdk.Optional<System.Boolean>
  nameWithType.vb: Optional(Of Boolean)
  fullName.vb: AlgoSdk.Optional(Of System.Boolean)
  name.vb: Optional(Of Boolean)
  spec.csharp:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.Optional`1
  commentId: T:AlgoSdk.Optional`1
  parent: AlgoSdk
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: AlgoSdk.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: AlgoSdk.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.TransactionType[]
  isExternal: true
  name: TransactionType[]
  nameWithType: TransactionType[]
  fullName: AlgoSdk.TransactionType[]
  nameWithType.vb: TransactionType()
  fullName.vb: AlgoSdk.TransactionType()
  name.vb: TransactionType()
  spec.csharp:
  - uid: AlgoSdk.TransactionType
    name: TransactionType
    nameWithType: TransactionType
    fullName: AlgoSdk.TransactionType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: AlgoSdk.TransactionType
    name: TransactionType
    nameWithType: TransactionType
    fullName: AlgoSdk.TransactionType
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AlgoSdk.Wallet.Equals*
  commentId: Overload:AlgoSdk.Wallet.Equals
  name: Equals
  nameWithType: Wallet.Equals
  fullName: AlgoSdk.Wallet.Equals
- uid: System.IEquatable{AlgoSdk.Wallet}.Equals(AlgoSdk.Wallet)
  commentId: M:System.IEquatable{AlgoSdk.Wallet}.Equals(AlgoSdk.Wallet)
  parent: System.IEquatable{AlgoSdk.Wallet}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Wallet)
  nameWithType: IEquatable<Wallet>.Equals(Wallet)
  fullName: System.IEquatable<AlgoSdk.Wallet>.Equals(AlgoSdk.Wallet)
  nameWithType.vb: IEquatable(Of Wallet).Equals(Wallet)
  fullName.vb: System.IEquatable(Of AlgoSdk.Wallet).Equals(AlgoSdk.Wallet)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Wallet>.Equals
    fullName: System.IEquatable<AlgoSdk.Wallet>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.Wallet
    name: Wallet
    nameWithType: Wallet
    fullName: AlgoSdk.Wallet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Wallet).Equals
    fullName: System.IEquatable(Of AlgoSdk.Wallet).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.Wallet
    name: Wallet
    nameWithType: Wallet
    fullName: AlgoSdk.Wallet
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.Wallet
  commentId: T:AlgoSdk.Wallet
  parent: AlgoSdk
  name: Wallet
  nameWithType: Wallet
  fullName: AlgoSdk.Wallet
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
