### YamlMime:ManagedReference
items:
- uid: AlgoSdk.MessagePack.ExtensionHeader
  commentId: T:AlgoSdk.MessagePack.ExtensionHeader
  id: ExtensionHeader
  parent: AlgoSdk.MessagePack
  children:
  - AlgoSdk.MessagePack.ExtensionHeader.#ctor(System.SByte,System.Int32)
  - AlgoSdk.MessagePack.ExtensionHeader.#ctor(System.SByte,System.UInt32)
  - AlgoSdk.MessagePack.ExtensionHeader.Equals(AlgoSdk.MessagePack.ExtensionHeader)
  - AlgoSdk.MessagePack.ExtensionHeader.Length
  - AlgoSdk.MessagePack.ExtensionHeader.TypeCode
  langs:
  - csharp
  - vb
  name: ExtensionHeader
  nameWithType: ExtensionHeader
  fullName: AlgoSdk.MessagePack.ExtensionHeader
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/ExtensionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ExtensionHeader
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/ExtensionHeader.cs
    startLine: 4
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: 'public struct ExtensionHeader : IEquatable<ExtensionHeader>'
    content.vb: >-
      Public Structure ExtensionHeader
          Implements IEquatable(Of ExtensionHeader)
  implements:
  - System.IEquatable{AlgoSdk.MessagePack.ExtensionHeader}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: AlgoSdk.MessagePack.ExtensionHeader.TypeCode
  commentId: F:AlgoSdk.MessagePack.ExtensionHeader.TypeCode
  id: TypeCode
  parent: AlgoSdk.MessagePack.ExtensionHeader
  langs:
  - csharp
  - vb
  name: TypeCode
  nameWithType: ExtensionHeader.TypeCode
  fullName: AlgoSdk.MessagePack.ExtensionHeader.TypeCode
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/ExtensionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TypeCode
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/ExtensionHeader.cs
    startLine: 6
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public readonly sbyte TypeCode
    return:
      type: System.SByte
    content.vb: Public ReadOnly TypeCode As SByte
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AlgoSdk.MessagePack.ExtensionHeader.Length
  commentId: F:AlgoSdk.MessagePack.ExtensionHeader.Length
  id: Length
  parent: AlgoSdk.MessagePack.ExtensionHeader
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: ExtensionHeader.Length
  fullName: AlgoSdk.MessagePack.ExtensionHeader.Length
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/ExtensionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Length
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/ExtensionHeader.cs
    startLine: 8
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public readonly uint Length
    return:
      type: System.UInt32
    content.vb: Public ReadOnly Length As UInteger
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AlgoSdk.MessagePack.ExtensionHeader.#ctor(System.SByte,System.UInt32)
  commentId: M:AlgoSdk.MessagePack.ExtensionHeader.#ctor(System.SByte,System.UInt32)
  id: '#ctor(System.SByte,System.UInt32)'
  parent: AlgoSdk.MessagePack.ExtensionHeader
  langs:
  - csharp
  - vb
  name: ExtensionHeader(SByte, UInt32)
  nameWithType: ExtensionHeader.ExtensionHeader(SByte, UInt32)
  fullName: AlgoSdk.MessagePack.ExtensionHeader.ExtensionHeader(System.SByte, System.UInt32)
  type: Constructor
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/ExtensionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: .ctor
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/ExtensionHeader.cs
    startLine: 10
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public ExtensionHeader(sbyte typeCode, uint length)
    parameters:
    - id: typeCode
      type: System.SByte
    - id: length
      type: System.UInt32
    content.vb: Public Sub New(typeCode As SByte, length As UInteger)
  overload: AlgoSdk.MessagePack.ExtensionHeader.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.MessagePack.ExtensionHeader.#ctor(System.SByte,System.Int32)
  commentId: M:AlgoSdk.MessagePack.ExtensionHeader.#ctor(System.SByte,System.Int32)
  id: '#ctor(System.SByte,System.Int32)'
  parent: AlgoSdk.MessagePack.ExtensionHeader
  langs:
  - csharp
  - vb
  name: ExtensionHeader(SByte, Int32)
  nameWithType: ExtensionHeader.ExtensionHeader(SByte, Int32)
  fullName: AlgoSdk.MessagePack.ExtensionHeader.ExtensionHeader(System.SByte, System.Int32)
  type: Constructor
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/ExtensionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: .ctor
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/ExtensionHeader.cs
    startLine: 16
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public ExtensionHeader(sbyte typeCode, int length)
    parameters:
    - id: typeCode
      type: System.SByte
    - id: length
      type: System.Int32
    content.vb: Public Sub New(typeCode As SByte, length As Integer)
  overload: AlgoSdk.MessagePack.ExtensionHeader.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.MessagePack.ExtensionHeader.Equals(AlgoSdk.MessagePack.ExtensionHeader)
  commentId: M:AlgoSdk.MessagePack.ExtensionHeader.Equals(AlgoSdk.MessagePack.ExtensionHeader)
  id: Equals(AlgoSdk.MessagePack.ExtensionHeader)
  parent: AlgoSdk.MessagePack.ExtensionHeader
  langs:
  - csharp
  - vb
  name: Equals(ExtensionHeader)
  nameWithType: ExtensionHeader.Equals(ExtensionHeader)
  fullName: AlgoSdk.MessagePack.ExtensionHeader.Equals(AlgoSdk.MessagePack.ExtensionHeader)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/ExtensionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Equals
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/ExtensionHeader.cs
    startLine: 22
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public bool Equals(ExtensionHeader other)
    parameters:
    - id: other
      type: AlgoSdk.MessagePack.ExtensionHeader
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As ExtensionHeader) As Boolean
  overload: AlgoSdk.MessagePack.ExtensionHeader.Equals*
  implements:
  - System.IEquatable{AlgoSdk.MessagePack.ExtensionHeader}.Equals(AlgoSdk.MessagePack.ExtensionHeader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AlgoSdk.MessagePack
  commentId: N:AlgoSdk.MessagePack
  name: AlgoSdk.MessagePack
  nameWithType: AlgoSdk.MessagePack
  fullName: AlgoSdk.MessagePack
- uid: System.IEquatable{AlgoSdk.MessagePack.ExtensionHeader}
  commentId: T:System.IEquatable{AlgoSdk.MessagePack.ExtensionHeader}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<ExtensionHeader>
  nameWithType: IEquatable<ExtensionHeader>
  fullName: System.IEquatable<AlgoSdk.MessagePack.ExtensionHeader>
  nameWithType.vb: IEquatable(Of ExtensionHeader)
  fullName.vb: System.IEquatable(Of AlgoSdk.MessagePack.ExtensionHeader)
  name.vb: IEquatable(Of ExtensionHeader)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.MessagePack.ExtensionHeader
    name: ExtensionHeader
    nameWithType: ExtensionHeader
    fullName: AlgoSdk.MessagePack.ExtensionHeader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.MessagePack.ExtensionHeader
    name: ExtensionHeader
    nameWithType: ExtensionHeader
    fullName: AlgoSdk.MessagePack.ExtensionHeader
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.SByte
  commentId: T:System.SByte
  parent: System
  isExternal: true
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: AlgoSdk.MessagePack.ExtensionHeader.#ctor*
  commentId: Overload:AlgoSdk.MessagePack.ExtensionHeader.#ctor
  name: ExtensionHeader
  nameWithType: ExtensionHeader.ExtensionHeader
  fullName: AlgoSdk.MessagePack.ExtensionHeader.ExtensionHeader
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: AlgoSdk.MessagePack.ExtensionHeader.Equals*
  commentId: Overload:AlgoSdk.MessagePack.ExtensionHeader.Equals
  name: Equals
  nameWithType: ExtensionHeader.Equals
  fullName: AlgoSdk.MessagePack.ExtensionHeader.Equals
- uid: System.IEquatable{AlgoSdk.MessagePack.ExtensionHeader}.Equals(AlgoSdk.MessagePack.ExtensionHeader)
  commentId: M:System.IEquatable{AlgoSdk.MessagePack.ExtensionHeader}.Equals(AlgoSdk.MessagePack.ExtensionHeader)
  parent: System.IEquatable{AlgoSdk.MessagePack.ExtensionHeader}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(ExtensionHeader)
  nameWithType: IEquatable<ExtensionHeader>.Equals(ExtensionHeader)
  fullName: System.IEquatable<AlgoSdk.MessagePack.ExtensionHeader>.Equals(AlgoSdk.MessagePack.ExtensionHeader)
  nameWithType.vb: IEquatable(Of ExtensionHeader).Equals(ExtensionHeader)
  fullName.vb: System.IEquatable(Of AlgoSdk.MessagePack.ExtensionHeader).Equals(AlgoSdk.MessagePack.ExtensionHeader)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<ExtensionHeader>.Equals
    fullName: System.IEquatable<AlgoSdk.MessagePack.ExtensionHeader>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.MessagePack.ExtensionHeader
    name: ExtensionHeader
    nameWithType: ExtensionHeader
    fullName: AlgoSdk.MessagePack.ExtensionHeader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of ExtensionHeader).Equals
    fullName: System.IEquatable(Of AlgoSdk.MessagePack.ExtensionHeader).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.MessagePack.ExtensionHeader
    name: ExtensionHeader
    nameWithType: ExtensionHeader
    fullName: AlgoSdk.MessagePack.ExtensionHeader
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.MessagePack.ExtensionHeader
  commentId: T:AlgoSdk.MessagePack.ExtensionHeader
  parent: AlgoSdk.MessagePack
  name: ExtensionHeader
  nameWithType: ExtensionHeader
  fullName: AlgoSdk.MessagePack.ExtensionHeader
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
