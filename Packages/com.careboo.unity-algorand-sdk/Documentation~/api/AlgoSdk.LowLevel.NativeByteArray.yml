### YamlMime:ManagedReference
items:
- uid: AlgoSdk.LowLevel.NativeByteArray
  commentId: T:AlgoSdk.LowLevel.NativeByteArray
  id: NativeByteArray
  parent: AlgoSdk.LowLevel
  children:
  - AlgoSdk.LowLevel.NativeByteArray.#ctor(System.Byte[],Unity.Collections.Allocator)
  - AlgoSdk.LowLevel.NativeByteArray.#ctor(System.Int32,Unity.Collections.Allocator)
  - AlgoSdk.LowLevel.NativeByteArray.Dispose
  - AlgoSdk.LowLevel.NativeByteArray.Dispose(Unity.Jobs.JobHandle)
  - AlgoSdk.LowLevel.NativeByteArray.Equals(AlgoSdk.LowLevel.NativeByteArray)
  - AlgoSdk.LowLevel.NativeByteArray.GetUnsafePtr
  - AlgoSdk.LowLevel.NativeByteArray.Item(System.Int32)
  - AlgoSdk.LowLevel.NativeByteArray.Length
  langs:
  - csharp
  - vb
  name: NativeByteArray
  nameWithType: NativeByteArray
  fullName: AlgoSdk.LowLevel.NativeByteArray
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.LowLevel/NativeByteArray.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: NativeByteArray
    path: ../CareBoo.AlgoSdk.LowLevel/NativeByteArray.cs
    startLine: 10
  assemblies:
  - CareBoo.AlgoSdk.LowLevel
  namespace: AlgoSdk.LowLevel
  summary: "\nA wrapper around <xref href=\"Unity.Collections.NativeArray%601\" data-throw-if-not-resolved=\"false\"></xref> that implements <xref href=\"AlgoSdk.LowLevel.IByteArray\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public struct NativeByteArray : IByteArray, IContiguousArray<byte>, IArray<byte>, IEquatable<NativeByteArray>, INativeDisposable, IDisposable'
    content.vb: >-
      Public Structure NativeByteArray
          Implements IByteArray, IContiguousArray(Of Byte), IArray(Of Byte), IEquatable(Of NativeByteArray), INativeDisposable, IDisposable
  implements:
  - AlgoSdk.LowLevel.IByteArray
  - AlgoSdk.LowLevel.IContiguousArray{System.Byte}
  - AlgoSdk.LowLevel.IArray{System.Byte}
  - System.IEquatable{AlgoSdk.LowLevel.NativeByteArray}
  - Unity.Collections.INativeDisposable
  - System.IDisposable
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - AlgoSdk.LowLevel.NativeByteArray.AlgoSdk.LowLevel.ByteArray.GetByteAt``1(System.Int32)
  - AlgoSdk.LowLevel.NativeByteArray.AlgoSdk.LowLevel.ByteArray.SetByteAt``1(System.Int32,System.Byte)
  - AlgoSdk.LowLevel.NativeByteArray.AlgoSdk.LowLevel.ByteArray.CopyFrom``2({U},System.Int32,System.Int32)
  - AlgoSdk.LowLevel.NativeByteArray.AlgoSdk.LowLevel.ByteArray.CopyFrom``1(System.Byte[],System.Int32,System.Int32)
  - AlgoSdk.LowLevel.NativeByteArray.AlgoSdk.LowLevel.ByteArray.CopyFrom``1(Unity.Collections.NativeArray{System.Byte},System.Int32,System.Int32)
  - AlgoSdk.LowLevel.NativeByteArray.AlgoSdk.LowLevel.ByteArray.CopyTo``2({U}@,System.Int32,System.Int32)
  - AlgoSdk.LowLevel.NativeByteArray.AlgoSdk.LowLevel.ByteArray.CopyTo``2({U}@)
  - AlgoSdk.LowLevel.NativeByteArray.AlgoSdk.LowLevel.ByteArray.ToArray``1
  - AlgoSdk.LowLevel.NativeByteArray.AlgoSdk.Base64Encoding.CopyToBase64``2({T}@)
  - AlgoSdk.LowLevel.NativeByteArray.AlgoSdk.Base64Encoding.CopyFromBase64``2({T}@,System.Int32)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: AlgoSdk.LowLevel.NativeByteArray.Item(System.Int32)
  commentId: P:AlgoSdk.LowLevel.NativeByteArray.Item(System.Int32)
  id: Item(System.Int32)
  parent: AlgoSdk.LowLevel.NativeByteArray
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: NativeByteArray.Item[Int32]
  fullName: AlgoSdk.LowLevel.NativeByteArray.Item[System.Int32]
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.LowLevel/NativeByteArray.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: this[]
    path: ../CareBoo.AlgoSdk.LowLevel/NativeByteArray.cs
    startLine: 15
  assemblies:
  - CareBoo.AlgoSdk.LowLevel
  namespace: AlgoSdk.LowLevel
  syntax:
    content: public byte this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Byte
    content.vb: Public Property Item(index As Integer) As Byte
  overload: AlgoSdk.LowLevel.NativeByteArray.Item*
  implements:
  - AlgoSdk.LowLevel.IArray{System.Byte}.Item(System.Int32)
  nameWithType.vb: NativeByteArray.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.LowLevel.NativeByteArray.Item(System.Int32)
  name.vb: Item(Int32)
- uid: AlgoSdk.LowLevel.NativeByteArray.Length
  commentId: P:AlgoSdk.LowLevel.NativeByteArray.Length
  id: Length
  parent: AlgoSdk.LowLevel.NativeByteArray
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: NativeByteArray.Length
  fullName: AlgoSdk.LowLevel.NativeByteArray.Length
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.LowLevel/NativeByteArray.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Length
    path: ../CareBoo.AlgoSdk.LowLevel/NativeByteArray.cs
    startLine: 17
  assemblies:
  - CareBoo.AlgoSdk.LowLevel
  namespace: AlgoSdk.LowLevel
  syntax:
    content: public int Length { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Length As Integer
  overload: AlgoSdk.LowLevel.NativeByteArray.Length*
  implements:
  - AlgoSdk.LowLevel.IArray{System.Byte}.Length
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AlgoSdk.LowLevel.NativeByteArray.#ctor(System.Int32,Unity.Collections.Allocator)
  commentId: M:AlgoSdk.LowLevel.NativeByteArray.#ctor(System.Int32,Unity.Collections.Allocator)
  id: '#ctor(System.Int32,Unity.Collections.Allocator)'
  parent: AlgoSdk.LowLevel.NativeByteArray
  langs:
  - csharp
  - vb
  name: NativeByteArray(Int32, Allocator)
  nameWithType: NativeByteArray.NativeByteArray(Int32, Allocator)
  fullName: AlgoSdk.LowLevel.NativeByteArray.NativeByteArray(System.Int32, Unity.Collections.Allocator)
  type: Constructor
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.LowLevel/NativeByteArray.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: .ctor
    path: ../CareBoo.AlgoSdk.LowLevel/NativeByteArray.cs
    startLine: 21
  assemblies:
  - CareBoo.AlgoSdk.LowLevel
  namespace: AlgoSdk.LowLevel
  syntax:
    content: public NativeByteArray(int capacity, Allocator allocator)
    parameters:
    - id: capacity
      type: System.Int32
    - id: allocator
      type: Unity.Collections.Allocator
    content.vb: Public Sub New(capacity As Integer, allocator As Allocator)
  overload: AlgoSdk.LowLevel.NativeByteArray.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.LowLevel.NativeByteArray.#ctor(System.Byte[],Unity.Collections.Allocator)
  commentId: M:AlgoSdk.LowLevel.NativeByteArray.#ctor(System.Byte[],Unity.Collections.Allocator)
  id: '#ctor(System.Byte[],Unity.Collections.Allocator)'
  parent: AlgoSdk.LowLevel.NativeByteArray
  langs:
  - csharp
  - vb
  name: NativeByteArray(Byte[], Allocator)
  nameWithType: NativeByteArray.NativeByteArray(Byte[], Allocator)
  fullName: AlgoSdk.LowLevel.NativeByteArray.NativeByteArray(System.Byte[], Unity.Collections.Allocator)
  type: Constructor
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.LowLevel/NativeByteArray.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: .ctor
    path: ../CareBoo.AlgoSdk.LowLevel/NativeByteArray.cs
    startLine: 26
  assemblies:
  - CareBoo.AlgoSdk.LowLevel
  namespace: AlgoSdk.LowLevel
  syntax:
    content: public NativeByteArray(byte[] arr, Allocator allocator)
    parameters:
    - id: arr
      type: System.Byte[]
    - id: allocator
      type: Unity.Collections.Allocator
    content.vb: Public Sub New(arr As Byte(), allocator As Allocator)
  overload: AlgoSdk.LowLevel.NativeByteArray.#ctor*
  nameWithType.vb: NativeByteArray.NativeByteArray(Byte(), Allocator)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.LowLevel.NativeByteArray.NativeByteArray(System.Byte(), Unity.Collections.Allocator)
  name.vb: NativeByteArray(Byte(), Allocator)
- uid: AlgoSdk.LowLevel.NativeByteArray.GetUnsafePtr
  commentId: M:AlgoSdk.LowLevel.NativeByteArray.GetUnsafePtr
  id: GetUnsafePtr
  parent: AlgoSdk.LowLevel.NativeByteArray
  langs:
  - csharp
  - vb
  name: GetUnsafePtr()
  nameWithType: NativeByteArray.GetUnsafePtr()
  fullName: AlgoSdk.LowLevel.NativeByteArray.GetUnsafePtr()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.LowLevel/NativeByteArray.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetUnsafePtr
    path: ../CareBoo.AlgoSdk.LowLevel/NativeByteArray.cs
    startLine: 31
  assemblies:
  - CareBoo.AlgoSdk.LowLevel
  namespace: AlgoSdk.LowLevel
  syntax:
    content: public void *GetUnsafePtr()
    return:
      type: System.Void*
    content.vb: 'Public Function GetUnsafePtr As '
  overload: AlgoSdk.LowLevel.NativeByteArray.GetUnsafePtr*
  implements:
  - AlgoSdk.LowLevel.IContiguousArray{System.Byte}.GetUnsafePtr
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.LowLevel.NativeByteArray.Equals(AlgoSdk.LowLevel.NativeByteArray)
  commentId: M:AlgoSdk.LowLevel.NativeByteArray.Equals(AlgoSdk.LowLevel.NativeByteArray)
  id: Equals(AlgoSdk.LowLevel.NativeByteArray)
  parent: AlgoSdk.LowLevel.NativeByteArray
  langs:
  - csharp
  - vb
  name: Equals(NativeByteArray)
  nameWithType: NativeByteArray.Equals(NativeByteArray)
  fullName: AlgoSdk.LowLevel.NativeByteArray.Equals(AlgoSdk.LowLevel.NativeByteArray)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.LowLevel/NativeByteArray.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Equals
    path: ../CareBoo.AlgoSdk.LowLevel/NativeByteArray.cs
    startLine: 33
  assemblies:
  - CareBoo.AlgoSdk.LowLevel
  namespace: AlgoSdk.LowLevel
  syntax:
    content: public bool Equals(NativeByteArray other)
    parameters:
    - id: other
      type: AlgoSdk.LowLevel.NativeByteArray
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As NativeByteArray) As Boolean
  overload: AlgoSdk.LowLevel.NativeByteArray.Equals*
  implements:
  - System.IEquatable{AlgoSdk.LowLevel.NativeByteArray}.Equals(AlgoSdk.LowLevel.NativeByteArray)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.LowLevel.NativeByteArray.Dispose(Unity.Jobs.JobHandle)
  commentId: M:AlgoSdk.LowLevel.NativeByteArray.Dispose(Unity.Jobs.JobHandle)
  id: Dispose(Unity.Jobs.JobHandle)
  parent: AlgoSdk.LowLevel.NativeByteArray
  langs:
  - csharp
  - vb
  name: Dispose(JobHandle)
  nameWithType: NativeByteArray.Dispose(JobHandle)
  fullName: AlgoSdk.LowLevel.NativeByteArray.Dispose(Unity.Jobs.JobHandle)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.LowLevel/NativeByteArray.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Dispose
    path: ../CareBoo.AlgoSdk.LowLevel/NativeByteArray.cs
    startLine: 38
  assemblies:
  - CareBoo.AlgoSdk.LowLevel
  namespace: AlgoSdk.LowLevel
  syntax:
    content: public JobHandle Dispose(JobHandle inputDeps)
    parameters:
    - id: inputDeps
      type: Unity.Jobs.JobHandle
    return:
      type: Unity.Jobs.JobHandle
    content.vb: Public Function Dispose(inputDeps As JobHandle) As JobHandle
  overload: AlgoSdk.LowLevel.NativeByteArray.Dispose*
  implements:
  - Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.LowLevel.NativeByteArray.Dispose
  commentId: M:AlgoSdk.LowLevel.NativeByteArray.Dispose
  id: Dispose
  parent: AlgoSdk.LowLevel.NativeByteArray
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: NativeByteArray.Dispose()
  fullName: AlgoSdk.LowLevel.NativeByteArray.Dispose()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.LowLevel/NativeByteArray.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Dispose
    path: ../CareBoo.AlgoSdk.LowLevel/NativeByteArray.cs
    startLine: 43
  assemblies:
  - CareBoo.AlgoSdk.LowLevel
  namespace: AlgoSdk.LowLevel
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: AlgoSdk.LowLevel.NativeByteArray.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Unity.Collections.NativeArray`1
  commentId: T:Unity.Collections.NativeArray`1
  isExternal: true
  name: NativeArray<T>
  nameWithType: NativeArray<T>
  fullName: Unity.Collections.NativeArray<T>
  nameWithType.vb: NativeArray(Of T)
  fullName.vb: Unity.Collections.NativeArray(Of T)
  name.vb: NativeArray(Of T)
  spec.csharp:
  - uid: Unity.Collections.NativeArray`1
    name: NativeArray
    nameWithType: NativeArray
    fullName: Unity.Collections.NativeArray
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Unity.Collections.NativeArray`1
    name: NativeArray
    nameWithType: NativeArray
    fullName: Unity.Collections.NativeArray
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.IByteArray
  commentId: T:AlgoSdk.LowLevel.IByteArray
  parent: AlgoSdk.LowLevel
  name: IByteArray
  nameWithType: IByteArray
  fullName: AlgoSdk.LowLevel.IByteArray
- uid: AlgoSdk.LowLevel
  commentId: N:AlgoSdk.LowLevel
  name: AlgoSdk.LowLevel
  nameWithType: AlgoSdk.LowLevel
  fullName: AlgoSdk.LowLevel
- uid: AlgoSdk.LowLevel.IContiguousArray{System.Byte}
  commentId: T:AlgoSdk.LowLevel.IContiguousArray{System.Byte}
  parent: AlgoSdk.LowLevel
  definition: AlgoSdk.LowLevel.IContiguousArray`1
  name: IContiguousArray<Byte>
  nameWithType: IContiguousArray<Byte>
  fullName: AlgoSdk.LowLevel.IContiguousArray<System.Byte>
  nameWithType.vb: IContiguousArray(Of Byte)
  fullName.vb: AlgoSdk.LowLevel.IContiguousArray(Of System.Byte)
  name.vb: IContiguousArray(Of Byte)
  spec.csharp:
  - uid: AlgoSdk.LowLevel.IContiguousArray`1
    name: IContiguousArray
    nameWithType: IContiguousArray
    fullName: AlgoSdk.LowLevel.IContiguousArray
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.LowLevel.IContiguousArray`1
    name: IContiguousArray
    nameWithType: IContiguousArray
    fullName: AlgoSdk.LowLevel.IContiguousArray
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.IArray{System.Byte}
  commentId: T:AlgoSdk.LowLevel.IArray{System.Byte}
  parent: AlgoSdk.LowLevel
  definition: AlgoSdk.LowLevel.IArray`1
  name: IArray<Byte>
  nameWithType: IArray<Byte>
  fullName: AlgoSdk.LowLevel.IArray<System.Byte>
  nameWithType.vb: IArray(Of Byte)
  fullName.vb: AlgoSdk.LowLevel.IArray(Of System.Byte)
  name.vb: IArray(Of Byte)
  spec.csharp:
  - uid: AlgoSdk.LowLevel.IArray`1
    name: IArray
    nameWithType: IArray
    fullName: AlgoSdk.LowLevel.IArray
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.LowLevel.IArray`1
    name: IArray
    nameWithType: IArray
    fullName: AlgoSdk.LowLevel.IArray
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{AlgoSdk.LowLevel.NativeByteArray}
  commentId: T:System.IEquatable{AlgoSdk.LowLevel.NativeByteArray}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<NativeByteArray>
  nameWithType: IEquatable<NativeByteArray>
  fullName: System.IEquatable<AlgoSdk.LowLevel.NativeByteArray>
  nameWithType.vb: IEquatable(Of NativeByteArray)
  fullName.vb: System.IEquatable(Of AlgoSdk.LowLevel.NativeByteArray)
  name.vb: IEquatable(Of NativeByteArray)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.LowLevel.NativeByteArray
    name: NativeByteArray
    nameWithType: NativeByteArray
    fullName: AlgoSdk.LowLevel.NativeByteArray
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.LowLevel.NativeByteArray
    name: NativeByteArray
    nameWithType: NativeByteArray
    fullName: AlgoSdk.LowLevel.NativeByteArray
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Collections.INativeDisposable
  commentId: T:Unity.Collections.INativeDisposable
  parent: Unity.Collections
  name: INativeDisposable
  nameWithType: INativeDisposable
  fullName: Unity.Collections.INativeDisposable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.NativeByteArray.AlgoSdk.LowLevel.ByteArray.GetByteAt``1(System.Int32)
  commentId: M:AlgoSdk.LowLevel.ByteArray.GetByteAt``1(``0@,System.Int32)
  parent: AlgoSdk.LowLevel.ByteArray
  definition: AlgoSdk.LowLevel.ByteArray.GetByteAt``1(``0@,System.Int32)
  name: GetByteAt<NativeByteArray>(Int32)
  nameWithType: ByteArray.GetByteAt<NativeByteArray>(Int32)
  fullName: AlgoSdk.LowLevel.ByteArray.GetByteAt<AlgoSdk.LowLevel.NativeByteArray>(System.Int32)
  nameWithType.vb: ByteArray.GetByteAt(Of NativeByteArray)(Int32)
  fullName.vb: AlgoSdk.LowLevel.ByteArray.GetByteAt(Of AlgoSdk.LowLevel.NativeByteArray)(System.Int32)
  name.vb: GetByteAt(Of NativeByteArray)(Int32)
  spec.csharp:
  - uid: AlgoSdk.LowLevel.ByteArray.GetByteAt``1(System.Int32)
    name: GetByteAt<NativeByteArray>
    nameWithType: ByteArray.GetByteAt<NativeByteArray>
    fullName: AlgoSdk.LowLevel.ByteArray.GetByteAt<AlgoSdk.LowLevel.NativeByteArray>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.LowLevel.ByteArray.GetByteAt``1(System.Int32)
    name: GetByteAt(Of NativeByteArray)
    nameWithType: ByteArray.GetByteAt(Of NativeByteArray)
    fullName: AlgoSdk.LowLevel.ByteArray.GetByteAt(Of AlgoSdk.LowLevel.NativeByteArray)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.NativeByteArray.AlgoSdk.LowLevel.ByteArray.SetByteAt``1(System.Int32,System.Byte)
  commentId: M:AlgoSdk.LowLevel.ByteArray.SetByteAt``1(``0@,System.Int32,System.Byte)
  parent: AlgoSdk.LowLevel.ByteArray
  definition: AlgoSdk.LowLevel.ByteArray.SetByteAt``1(``0@,System.Int32,System.Byte)
  name: SetByteAt<NativeByteArray>(Int32, Byte)
  nameWithType: ByteArray.SetByteAt<NativeByteArray>(Int32, Byte)
  fullName: AlgoSdk.LowLevel.ByteArray.SetByteAt<AlgoSdk.LowLevel.NativeByteArray>(System.Int32, System.Byte)
  nameWithType.vb: ByteArray.SetByteAt(Of NativeByteArray)(Int32, Byte)
  fullName.vb: AlgoSdk.LowLevel.ByteArray.SetByteAt(Of AlgoSdk.LowLevel.NativeByteArray)(System.Int32, System.Byte)
  name.vb: SetByteAt(Of NativeByteArray)(Int32, Byte)
  spec.csharp:
  - uid: AlgoSdk.LowLevel.ByteArray.SetByteAt``1(System.Int32,System.Byte)
    name: SetByteAt<NativeByteArray>
    nameWithType: ByteArray.SetByteAt<NativeByteArray>
    fullName: AlgoSdk.LowLevel.ByteArray.SetByteAt<AlgoSdk.LowLevel.NativeByteArray>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.LowLevel.ByteArray.SetByteAt``1(System.Int32,System.Byte)
    name: SetByteAt(Of NativeByteArray)
    nameWithType: ByteArray.SetByteAt(Of NativeByteArray)
    fullName: AlgoSdk.LowLevel.ByteArray.SetByteAt(Of AlgoSdk.LowLevel.NativeByteArray)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.NativeByteArray.AlgoSdk.LowLevel.ByteArray.CopyFrom``2({U},System.Int32,System.Int32)
  commentId: M:AlgoSdk.LowLevel.ByteArray.CopyFrom``2(``0@,``1,System.Int32,System.Int32)
  parent: AlgoSdk.LowLevel.ByteArray
  definition: AlgoSdk.LowLevel.ByteArray.CopyFrom``2(``0@,``1,System.Int32,System.Int32)
  name: CopyFrom<NativeByteArray, U>(U, Int32, Int32)
  nameWithType: ByteArray.CopyFrom<NativeByteArray, U>(U, Int32, Int32)
  fullName: AlgoSdk.LowLevel.ByteArray.CopyFrom<AlgoSdk.LowLevel.NativeByteArray, U>(U, System.Int32, System.Int32)
  nameWithType.vb: ByteArray.CopyFrom(Of NativeByteArray, U)(U, Int32, Int32)
  fullName.vb: AlgoSdk.LowLevel.ByteArray.CopyFrom(Of AlgoSdk.LowLevel.NativeByteArray, U)(U, System.Int32, System.Int32)
  name.vb: CopyFrom(Of NativeByteArray, U)(U, Int32, Int32)
  spec.csharp:
  - uid: AlgoSdk.LowLevel.ByteArray.CopyFrom``2(``1,System.Int32,System.Int32)
    name: CopyFrom<NativeByteArray, U>
    nameWithType: ByteArray.CopyFrom<NativeByteArray, U>
    fullName: AlgoSdk.LowLevel.ByteArray.CopyFrom<AlgoSdk.LowLevel.NativeByteArray, U>
  - name: (
    nameWithType: (
    fullName: (
  - name: U
    nameWithType: U
    fullName: U
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.LowLevel.ByteArray.CopyFrom``2(``1,System.Int32,System.Int32)
    name: CopyFrom(Of NativeByteArray, U)
    nameWithType: ByteArray.CopyFrom(Of NativeByteArray, U)
    fullName: AlgoSdk.LowLevel.ByteArray.CopyFrom(Of AlgoSdk.LowLevel.NativeByteArray, U)
  - name: (
    nameWithType: (
    fullName: (
  - name: U
    nameWithType: U
    fullName: U
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.NativeByteArray.AlgoSdk.LowLevel.ByteArray.CopyFrom``1(System.Byte[],System.Int32,System.Int32)
  commentId: M:AlgoSdk.LowLevel.ByteArray.CopyFrom``1(``0@,System.Byte[],System.Int32,System.Int32)
  parent: AlgoSdk.LowLevel.ByteArray
  definition: AlgoSdk.LowLevel.ByteArray.CopyFrom``1(``0@,System.Byte[],System.Int32,System.Int32)
  name: CopyFrom<NativeByteArray>(Byte[], Int32, Int32)
  nameWithType: ByteArray.CopyFrom<NativeByteArray>(Byte[], Int32, Int32)
  fullName: AlgoSdk.LowLevel.ByteArray.CopyFrom<AlgoSdk.LowLevel.NativeByteArray>(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: ByteArray.CopyFrom(Of NativeByteArray)(Byte(), Int32, Int32)
  fullName.vb: AlgoSdk.LowLevel.ByteArray.CopyFrom(Of AlgoSdk.LowLevel.NativeByteArray)(System.Byte(), System.Int32, System.Int32)
  name.vb: CopyFrom(Of NativeByteArray)(Byte(), Int32, Int32)
  spec.csharp:
  - uid: AlgoSdk.LowLevel.ByteArray.CopyFrom``1(System.Byte[],System.Int32,System.Int32)
    name: CopyFrom<NativeByteArray>
    nameWithType: ByteArray.CopyFrom<NativeByteArray>
    fullName: AlgoSdk.LowLevel.ByteArray.CopyFrom<AlgoSdk.LowLevel.NativeByteArray>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.LowLevel.ByteArray.CopyFrom``1(System.Byte[],System.Int32,System.Int32)
    name: CopyFrom(Of NativeByteArray)
    nameWithType: ByteArray.CopyFrom(Of NativeByteArray)
    fullName: AlgoSdk.LowLevel.ByteArray.CopyFrom(Of AlgoSdk.LowLevel.NativeByteArray)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.NativeByteArray.AlgoSdk.LowLevel.ByteArray.CopyFrom``1(Unity.Collections.NativeArray{System.Byte},System.Int32,System.Int32)
  commentId: M:AlgoSdk.LowLevel.ByteArray.CopyFrom``1(``0@,Unity.Collections.NativeArray{System.Byte},System.Int32,System.Int32)
  parent: AlgoSdk.LowLevel.ByteArray
  definition: AlgoSdk.LowLevel.ByteArray.CopyFrom``1(``0@,Unity.Collections.NativeArray{System.Byte},System.Int32,System.Int32)
  name: CopyFrom<NativeByteArray>(NativeArray<Byte>, Int32, Int32)
  nameWithType: ByteArray.CopyFrom<NativeByteArray>(NativeArray<Byte>, Int32, Int32)
  fullName: AlgoSdk.LowLevel.ByteArray.CopyFrom<AlgoSdk.LowLevel.NativeByteArray>(Unity.Collections.NativeArray<System.Byte>, System.Int32, System.Int32)
  nameWithType.vb: ByteArray.CopyFrom(Of NativeByteArray)(NativeArray(Of Byte), Int32, Int32)
  fullName.vb: AlgoSdk.LowLevel.ByteArray.CopyFrom(Of AlgoSdk.LowLevel.NativeByteArray)(Unity.Collections.NativeArray(Of System.Byte), System.Int32, System.Int32)
  name.vb: CopyFrom(Of NativeByteArray)(NativeArray(Of Byte), Int32, Int32)
  spec.csharp:
  - uid: AlgoSdk.LowLevel.ByteArray.CopyFrom``1(Unity.Collections.NativeArray{System.Byte},System.Int32,System.Int32)
    name: CopyFrom<NativeByteArray>
    nameWithType: ByteArray.CopyFrom<NativeByteArray>
    fullName: AlgoSdk.LowLevel.ByteArray.CopyFrom<AlgoSdk.LowLevel.NativeByteArray>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Unity.Collections.NativeArray`1
    name: NativeArray
    nameWithType: NativeArray
    fullName: Unity.Collections.NativeArray
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.LowLevel.ByteArray.CopyFrom``1(Unity.Collections.NativeArray{System.Byte},System.Int32,System.Int32)
    name: CopyFrom(Of NativeByteArray)
    nameWithType: ByteArray.CopyFrom(Of NativeByteArray)
    fullName: AlgoSdk.LowLevel.ByteArray.CopyFrom(Of AlgoSdk.LowLevel.NativeByteArray)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Unity.Collections.NativeArray`1
    name: NativeArray
    nameWithType: NativeArray
    fullName: Unity.Collections.NativeArray
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.NativeByteArray.AlgoSdk.LowLevel.ByteArray.CopyTo``2({U}@,System.Int32,System.Int32)
  commentId: M:AlgoSdk.LowLevel.ByteArray.CopyTo``2(``0,``1@,System.Int32,System.Int32)
  parent: AlgoSdk.LowLevel.ByteArray
  definition: AlgoSdk.LowLevel.ByteArray.CopyTo``2(``0,``1@,System.Int32,System.Int32)
  name: CopyTo<NativeByteArray, U>(U, Int32, Int32)
  nameWithType: ByteArray.CopyTo<NativeByteArray, U>(U, Int32, Int32)
  fullName: AlgoSdk.LowLevel.ByteArray.CopyTo<AlgoSdk.LowLevel.NativeByteArray, U>(U, System.Int32, System.Int32)
  nameWithType.vb: ByteArray.CopyTo(Of NativeByteArray, U)(U, Int32, Int32)
  fullName.vb: AlgoSdk.LowLevel.ByteArray.CopyTo(Of AlgoSdk.LowLevel.NativeByteArray, U)(U, System.Int32, System.Int32)
  name.vb: CopyTo(Of NativeByteArray, U)(U, Int32, Int32)
  spec.csharp:
  - uid: AlgoSdk.LowLevel.ByteArray.CopyTo``2(``1@,System.Int32,System.Int32)
    name: CopyTo<NativeByteArray, U>
    nameWithType: ByteArray.CopyTo<NativeByteArray, U>
    fullName: AlgoSdk.LowLevel.ByteArray.CopyTo<AlgoSdk.LowLevel.NativeByteArray, U>
  - name: (
    nameWithType: (
    fullName: (
  - name: U
    nameWithType: U
    fullName: U
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.LowLevel.ByteArray.CopyTo``2(``1@,System.Int32,System.Int32)
    name: CopyTo(Of NativeByteArray, U)
    nameWithType: ByteArray.CopyTo(Of NativeByteArray, U)
    fullName: AlgoSdk.LowLevel.ByteArray.CopyTo(Of AlgoSdk.LowLevel.NativeByteArray, U)
  - name: (
    nameWithType: (
    fullName: (
  - name: U
    nameWithType: U
    fullName: U
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.NativeByteArray.AlgoSdk.LowLevel.ByteArray.CopyTo``2({U}@)
  commentId: M:AlgoSdk.LowLevel.ByteArray.CopyTo``2(``0,``1@)
  parent: AlgoSdk.LowLevel.ByteArray
  definition: AlgoSdk.LowLevel.ByteArray.CopyTo``2(``0,``1@)
  name: CopyTo<NativeByteArray, U>(U)
  nameWithType: ByteArray.CopyTo<NativeByteArray, U>(U)
  fullName: AlgoSdk.LowLevel.ByteArray.CopyTo<AlgoSdk.LowLevel.NativeByteArray, U>(U)
  nameWithType.vb: ByteArray.CopyTo(Of NativeByteArray, U)(U)
  fullName.vb: AlgoSdk.LowLevel.ByteArray.CopyTo(Of AlgoSdk.LowLevel.NativeByteArray, U)(U)
  name.vb: CopyTo(Of NativeByteArray, U)(U)
  spec.csharp:
  - uid: AlgoSdk.LowLevel.ByteArray.CopyTo``2(``1@)
    name: CopyTo<NativeByteArray, U>
    nameWithType: ByteArray.CopyTo<NativeByteArray, U>
    fullName: AlgoSdk.LowLevel.ByteArray.CopyTo<AlgoSdk.LowLevel.NativeByteArray, U>
  - name: (
    nameWithType: (
    fullName: (
  - name: U
    nameWithType: U
    fullName: U
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.LowLevel.ByteArray.CopyTo``2(``1@)
    name: CopyTo(Of NativeByteArray, U)
    nameWithType: ByteArray.CopyTo(Of NativeByteArray, U)
    fullName: AlgoSdk.LowLevel.ByteArray.CopyTo(Of AlgoSdk.LowLevel.NativeByteArray, U)
  - name: (
    nameWithType: (
    fullName: (
  - name: U
    nameWithType: U
    fullName: U
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.NativeByteArray.AlgoSdk.LowLevel.ByteArray.ToArray``1
  commentId: M:AlgoSdk.LowLevel.ByteArray.ToArray``1(``0@)
  parent: AlgoSdk.LowLevel.ByteArray
  definition: AlgoSdk.LowLevel.ByteArray.ToArray``1(``0@)
  name: ToArray<NativeByteArray>()
  nameWithType: ByteArray.ToArray<NativeByteArray>()
  fullName: AlgoSdk.LowLevel.ByteArray.ToArray<AlgoSdk.LowLevel.NativeByteArray>()
  nameWithType.vb: ByteArray.ToArray(Of NativeByteArray)()
  fullName.vb: AlgoSdk.LowLevel.ByteArray.ToArray(Of AlgoSdk.LowLevel.NativeByteArray)()
  name.vb: ToArray(Of NativeByteArray)()
  spec.csharp:
  - uid: AlgoSdk.LowLevel.ByteArray.ToArray``1
    name: ToArray<NativeByteArray>
    nameWithType: ByteArray.ToArray<NativeByteArray>
    fullName: AlgoSdk.LowLevel.ByteArray.ToArray<AlgoSdk.LowLevel.NativeByteArray>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.LowLevel.ByteArray.ToArray``1
    name: ToArray(Of NativeByteArray)
    nameWithType: ByteArray.ToArray(Of NativeByteArray)
    fullName: AlgoSdk.LowLevel.ByteArray.ToArray(Of AlgoSdk.LowLevel.NativeByteArray)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.NativeByteArray.AlgoSdk.Base64Encoding.CopyToBase64``2({T}@)
  commentId: M:AlgoSdk.Base64Encoding.CopyToBase64``2(``0,``1@)
  parent: AlgoSdk.Base64Encoding
  definition: AlgoSdk.Base64Encoding.CopyToBase64``2(``0,``1@)
  name: CopyToBase64<NativeByteArray, T>(T)
  nameWithType: Base64Encoding.CopyToBase64<NativeByteArray, T>(T)
  fullName: AlgoSdk.Base64Encoding.CopyToBase64<AlgoSdk.LowLevel.NativeByteArray, T>(T)
  nameWithType.vb: Base64Encoding.CopyToBase64(Of NativeByteArray, T)(T)
  fullName.vb: AlgoSdk.Base64Encoding.CopyToBase64(Of AlgoSdk.LowLevel.NativeByteArray, T)(T)
  name.vb: CopyToBase64(Of NativeByteArray, T)(T)
  spec.csharp:
  - uid: AlgoSdk.Base64Encoding.CopyToBase64``2(``1@)
    name: CopyToBase64<NativeByteArray, T>
    nameWithType: Base64Encoding.CopyToBase64<NativeByteArray, T>
    fullName: AlgoSdk.Base64Encoding.CopyToBase64<AlgoSdk.LowLevel.NativeByteArray, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.Base64Encoding.CopyToBase64``2(``1@)
    name: CopyToBase64(Of NativeByteArray, T)
    nameWithType: Base64Encoding.CopyToBase64(Of NativeByteArray, T)
    fullName: AlgoSdk.Base64Encoding.CopyToBase64(Of AlgoSdk.LowLevel.NativeByteArray, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.NativeByteArray.AlgoSdk.Base64Encoding.CopyFromBase64``2({T}@,System.Int32)
  commentId: M:AlgoSdk.Base64Encoding.CopyFromBase64``2(``0@,``1@,System.Int32)
  parent: AlgoSdk.Base64Encoding
  definition: AlgoSdk.Base64Encoding.CopyFromBase64``2(``0@,``1@,System.Int32)
  name: CopyFromBase64<NativeByteArray, T>(T, Int32)
  nameWithType: Base64Encoding.CopyFromBase64<NativeByteArray, T>(T, Int32)
  fullName: AlgoSdk.Base64Encoding.CopyFromBase64<AlgoSdk.LowLevel.NativeByteArray, T>(T, System.Int32)
  nameWithType.vb: Base64Encoding.CopyFromBase64(Of NativeByteArray, T)(T, Int32)
  fullName.vb: AlgoSdk.Base64Encoding.CopyFromBase64(Of AlgoSdk.LowLevel.NativeByteArray, T)(T, System.Int32)
  name.vb: CopyFromBase64(Of NativeByteArray, T)(T, Int32)
  spec.csharp:
  - uid: AlgoSdk.Base64Encoding.CopyFromBase64``2(``1@,System.Int32)
    name: CopyFromBase64<NativeByteArray, T>
    nameWithType: Base64Encoding.CopyFromBase64<NativeByteArray, T>
    fullName: AlgoSdk.Base64Encoding.CopyFromBase64<AlgoSdk.LowLevel.NativeByteArray, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.Base64Encoding.CopyFromBase64``2(``1@,System.Int32)
    name: CopyFromBase64(Of NativeByteArray, T)
    nameWithType: Base64Encoding.CopyFromBase64(Of NativeByteArray, T)
    fullName: AlgoSdk.Base64Encoding.CopyFromBase64(Of AlgoSdk.LowLevel.NativeByteArray, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.IContiguousArray`1
  commentId: T:AlgoSdk.LowLevel.IContiguousArray`1
  name: IContiguousArray<T>
  nameWithType: IContiguousArray<T>
  fullName: AlgoSdk.LowLevel.IContiguousArray<T>
  nameWithType.vb: IContiguousArray(Of T)
  fullName.vb: AlgoSdk.LowLevel.IContiguousArray(Of T)
  name.vb: IContiguousArray(Of T)
  spec.csharp:
  - uid: AlgoSdk.LowLevel.IContiguousArray`1
    name: IContiguousArray
    nameWithType: IContiguousArray
    fullName: AlgoSdk.LowLevel.IContiguousArray
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.LowLevel.IContiguousArray`1
    name: IContiguousArray
    nameWithType: IContiguousArray
    fullName: AlgoSdk.LowLevel.IContiguousArray
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.IArray`1
  commentId: T:AlgoSdk.LowLevel.IArray`1
  name: IArray<T>
  nameWithType: IArray<T>
  fullName: AlgoSdk.LowLevel.IArray<T>
  nameWithType.vb: IArray(Of T)
  fullName.vb: AlgoSdk.LowLevel.IArray(Of T)
  name.vb: IArray(Of T)
  spec.csharp:
  - uid: AlgoSdk.LowLevel.IArray`1
    name: IArray
    nameWithType: IArray
    fullName: AlgoSdk.LowLevel.IArray
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.LowLevel.IArray`1
    name: IArray
    nameWithType: IArray
    fullName: AlgoSdk.LowLevel.IArray
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Unity.Collections
  commentId: N:Unity.Collections
  name: Unity.Collections
  nameWithType: Unity.Collections
  fullName: Unity.Collections
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AlgoSdk.LowLevel.ByteArray.GetByteAt``1(``0@,System.Int32)
  commentId: M:AlgoSdk.LowLevel.ByteArray.GetByteAt``1(``0@,System.Int32)
  isExternal: true
  name: GetByteAt<TByteArray>(TByteArray, Int32)
  nameWithType: ByteArray.GetByteAt<TByteArray>(TByteArray, Int32)
  fullName: AlgoSdk.LowLevel.ByteArray.GetByteAt<TByteArray>(TByteArray, System.Int32)
  nameWithType.vb: ByteArray.GetByteAt(Of TByteArray)(TByteArray, Int32)
  fullName.vb: AlgoSdk.LowLevel.ByteArray.GetByteAt(Of TByteArray)(TByteArray, System.Int32)
  name.vb: GetByteAt(Of TByteArray)(TByteArray, Int32)
  spec.csharp:
  - uid: AlgoSdk.LowLevel.ByteArray.GetByteAt``1(``0@,System.Int32)
    name: GetByteAt<TByteArray>
    nameWithType: ByteArray.GetByteAt<TByteArray>
    fullName: AlgoSdk.LowLevel.ByteArray.GetByteAt<TByteArray>
  - name: (
    nameWithType: (
    fullName: (
  - name: TByteArray
    nameWithType: TByteArray
    fullName: TByteArray
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.LowLevel.ByteArray.GetByteAt``1(``0@,System.Int32)
    name: GetByteAt(Of TByteArray)
    nameWithType: ByteArray.GetByteAt(Of TByteArray)
    fullName: AlgoSdk.LowLevel.ByteArray.GetByteAt(Of TByteArray)
  - name: (
    nameWithType: (
    fullName: (
  - name: TByteArray
    nameWithType: TByteArray
    fullName: TByteArray
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.ByteArray
  commentId: T:AlgoSdk.LowLevel.ByteArray
  parent: AlgoSdk.LowLevel
  name: ByteArray
  nameWithType: ByteArray
  fullName: AlgoSdk.LowLevel.ByteArray
- uid: AlgoSdk.LowLevel.ByteArray.SetByteAt``1(``0@,System.Int32,System.Byte)
  commentId: M:AlgoSdk.LowLevel.ByteArray.SetByteAt``1(``0@,System.Int32,System.Byte)
  isExternal: true
  name: SetByteAt<TByteArray>(TByteArray, Int32, Byte)
  nameWithType: ByteArray.SetByteAt<TByteArray>(TByteArray, Int32, Byte)
  fullName: AlgoSdk.LowLevel.ByteArray.SetByteAt<TByteArray>(TByteArray, System.Int32, System.Byte)
  nameWithType.vb: ByteArray.SetByteAt(Of TByteArray)(TByteArray, Int32, Byte)
  fullName.vb: AlgoSdk.LowLevel.ByteArray.SetByteAt(Of TByteArray)(TByteArray, System.Int32, System.Byte)
  name.vb: SetByteAt(Of TByteArray)(TByteArray, Int32, Byte)
  spec.csharp:
  - uid: AlgoSdk.LowLevel.ByteArray.SetByteAt``1(``0@,System.Int32,System.Byte)
    name: SetByteAt<TByteArray>
    nameWithType: ByteArray.SetByteAt<TByteArray>
    fullName: AlgoSdk.LowLevel.ByteArray.SetByteAt<TByteArray>
  - name: (
    nameWithType: (
    fullName: (
  - name: TByteArray
    nameWithType: TByteArray
    fullName: TByteArray
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.LowLevel.ByteArray.SetByteAt``1(``0@,System.Int32,System.Byte)
    name: SetByteAt(Of TByteArray)
    nameWithType: ByteArray.SetByteAt(Of TByteArray)
    fullName: AlgoSdk.LowLevel.ByteArray.SetByteAt(Of TByteArray)
  - name: (
    nameWithType: (
    fullName: (
  - name: TByteArray
    nameWithType: TByteArray
    fullName: TByteArray
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.ByteArray.CopyFrom``2(``0@,``1,System.Int32,System.Int32)
  commentId: M:AlgoSdk.LowLevel.ByteArray.CopyFrom``2(``0@,``1,System.Int32,System.Int32)
  isExternal: true
  name: CopyFrom<T, U>(T, U, Int32, Int32)
  nameWithType: ByteArray.CopyFrom<T, U>(T, U, Int32, Int32)
  fullName: AlgoSdk.LowLevel.ByteArray.CopyFrom<T, U>(T, U, System.Int32, System.Int32)
  nameWithType.vb: ByteArray.CopyFrom(Of T, U)(T, U, Int32, Int32)
  fullName.vb: AlgoSdk.LowLevel.ByteArray.CopyFrom(Of T, U)(T, U, System.Int32, System.Int32)
  name.vb: CopyFrom(Of T, U)(T, U, Int32, Int32)
  spec.csharp:
  - uid: AlgoSdk.LowLevel.ByteArray.CopyFrom``2(``0@,``1,System.Int32,System.Int32)
    name: CopyFrom<T, U>
    nameWithType: ByteArray.CopyFrom<T, U>
    fullName: AlgoSdk.LowLevel.ByteArray.CopyFrom<T, U>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: U
    nameWithType: U
    fullName: U
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.LowLevel.ByteArray.CopyFrom``2(``0@,``1,System.Int32,System.Int32)
    name: CopyFrom(Of T, U)
    nameWithType: ByteArray.CopyFrom(Of T, U)
    fullName: AlgoSdk.LowLevel.ByteArray.CopyFrom(Of T, U)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: U
    nameWithType: U
    fullName: U
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.ByteArray.CopyFrom``1(``0@,System.Byte[],System.Int32,System.Int32)
  commentId: M:AlgoSdk.LowLevel.ByteArray.CopyFrom``1(``0@,System.Byte[],System.Int32,System.Int32)
  isExternal: true
  name: CopyFrom<T>(T, Byte[], Int32, Int32)
  nameWithType: ByteArray.CopyFrom<T>(T, Byte[], Int32, Int32)
  fullName: AlgoSdk.LowLevel.ByteArray.CopyFrom<T>(T, System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: ByteArray.CopyFrom(Of T)(T, Byte(), Int32, Int32)
  fullName.vb: AlgoSdk.LowLevel.ByteArray.CopyFrom(Of T)(T, System.Byte(), System.Int32, System.Int32)
  name.vb: CopyFrom(Of T)(T, Byte(), Int32, Int32)
  spec.csharp:
  - uid: AlgoSdk.LowLevel.ByteArray.CopyFrom``1(``0@,System.Byte[],System.Int32,System.Int32)
    name: CopyFrom<T>
    nameWithType: ByteArray.CopyFrom<T>
    fullName: AlgoSdk.LowLevel.ByteArray.CopyFrom<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.LowLevel.ByteArray.CopyFrom``1(``0@,System.Byte[],System.Int32,System.Int32)
    name: CopyFrom(Of T)
    nameWithType: ByteArray.CopyFrom(Of T)
    fullName: AlgoSdk.LowLevel.ByteArray.CopyFrom(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.ByteArray.CopyFrom``1(``0@,Unity.Collections.NativeArray{System.Byte},System.Int32,System.Int32)
  commentId: M:AlgoSdk.LowLevel.ByteArray.CopyFrom``1(``0@,Unity.Collections.NativeArray{System.Byte},System.Int32,System.Int32)
  isExternal: true
  name: CopyFrom<T>(T, NativeArray<Byte>, Int32, Int32)
  nameWithType: ByteArray.CopyFrom<T>(T, NativeArray<Byte>, Int32, Int32)
  fullName: AlgoSdk.LowLevel.ByteArray.CopyFrom<T>(T, Unity.Collections.NativeArray<System.Byte>, System.Int32, System.Int32)
  nameWithType.vb: ByteArray.CopyFrom(Of T)(T, NativeArray(Of Byte), Int32, Int32)
  fullName.vb: AlgoSdk.LowLevel.ByteArray.CopyFrom(Of T)(T, Unity.Collections.NativeArray(Of System.Byte), System.Int32, System.Int32)
  name.vb: CopyFrom(Of T)(T, NativeArray(Of Byte), Int32, Int32)
  spec.csharp:
  - uid: AlgoSdk.LowLevel.ByteArray.CopyFrom``1(``0@,Unity.Collections.NativeArray{System.Byte},System.Int32,System.Int32)
    name: CopyFrom<T>
    nameWithType: ByteArray.CopyFrom<T>
    fullName: AlgoSdk.LowLevel.ByteArray.CopyFrom<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Unity.Collections.NativeArray`1
    name: NativeArray
    nameWithType: NativeArray
    fullName: Unity.Collections.NativeArray
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.LowLevel.ByteArray.CopyFrom``1(``0@,Unity.Collections.NativeArray{System.Byte},System.Int32,System.Int32)
    name: CopyFrom(Of T)
    nameWithType: ByteArray.CopyFrom(Of T)
    fullName: AlgoSdk.LowLevel.ByteArray.CopyFrom(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Unity.Collections.NativeArray`1
    name: NativeArray
    nameWithType: NativeArray
    fullName: Unity.Collections.NativeArray
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.ByteArray.CopyTo``2(``0,``1@,System.Int32,System.Int32)
  commentId: M:AlgoSdk.LowLevel.ByteArray.CopyTo``2(``0,``1@,System.Int32,System.Int32)
  isExternal: true
  name: CopyTo<T, U>(T, U, Int32, Int32)
  nameWithType: ByteArray.CopyTo<T, U>(T, U, Int32, Int32)
  fullName: AlgoSdk.LowLevel.ByteArray.CopyTo<T, U>(T, U, System.Int32, System.Int32)
  nameWithType.vb: ByteArray.CopyTo(Of T, U)(T, U, Int32, Int32)
  fullName.vb: AlgoSdk.LowLevel.ByteArray.CopyTo(Of T, U)(T, U, System.Int32, System.Int32)
  name.vb: CopyTo(Of T, U)(T, U, Int32, Int32)
  spec.csharp:
  - uid: AlgoSdk.LowLevel.ByteArray.CopyTo``2(``0,``1@,System.Int32,System.Int32)
    name: CopyTo<T, U>
    nameWithType: ByteArray.CopyTo<T, U>
    fullName: AlgoSdk.LowLevel.ByteArray.CopyTo<T, U>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: U
    nameWithType: U
    fullName: U
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.LowLevel.ByteArray.CopyTo``2(``0,``1@,System.Int32,System.Int32)
    name: CopyTo(Of T, U)
    nameWithType: ByteArray.CopyTo(Of T, U)
    fullName: AlgoSdk.LowLevel.ByteArray.CopyTo(Of T, U)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: U
    nameWithType: U
    fullName: U
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.ByteArray.CopyTo``2(``0,``1@)
  commentId: M:AlgoSdk.LowLevel.ByteArray.CopyTo``2(``0,``1@)
  name: CopyTo<T, U>(T, U)
  nameWithType: ByteArray.CopyTo<T, U>(T, U)
  fullName: AlgoSdk.LowLevel.ByteArray.CopyTo<T, U>(T, U)
  nameWithType.vb: ByteArray.CopyTo(Of T, U)(T, U)
  fullName.vb: AlgoSdk.LowLevel.ByteArray.CopyTo(Of T, U)(T, U)
  name.vb: CopyTo(Of T, U)(T, U)
  spec.csharp:
  - uid: AlgoSdk.LowLevel.ByteArray.CopyTo``2(``0,``1@)
    name: CopyTo<T, U>
    nameWithType: ByteArray.CopyTo<T, U>
    fullName: AlgoSdk.LowLevel.ByteArray.CopyTo<T, U>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: U
    nameWithType: U
    fullName: U
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.LowLevel.ByteArray.CopyTo``2(``0,``1@)
    name: CopyTo(Of T, U)
    nameWithType: ByteArray.CopyTo(Of T, U)
    fullName: AlgoSdk.LowLevel.ByteArray.CopyTo(Of T, U)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: U
    nameWithType: U
    fullName: U
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.ByteArray.ToArray``1(``0@)
  commentId: M:AlgoSdk.LowLevel.ByteArray.ToArray``1(``0@)
  name: ToArray<TByteArray>(TByteArray)
  nameWithType: ByteArray.ToArray<TByteArray>(TByteArray)
  fullName: AlgoSdk.LowLevel.ByteArray.ToArray<TByteArray>(TByteArray)
  nameWithType.vb: ByteArray.ToArray(Of TByteArray)(TByteArray)
  fullName.vb: AlgoSdk.LowLevel.ByteArray.ToArray(Of TByteArray)(TByteArray)
  name.vb: ToArray(Of TByteArray)(TByteArray)
  spec.csharp:
  - uid: AlgoSdk.LowLevel.ByteArray.ToArray``1(``0@)
    name: ToArray<TByteArray>
    nameWithType: ByteArray.ToArray<TByteArray>
    fullName: AlgoSdk.LowLevel.ByteArray.ToArray<TByteArray>
  - name: (
    nameWithType: (
    fullName: (
  - name: TByteArray
    nameWithType: TByteArray
    fullName: TByteArray
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.LowLevel.ByteArray.ToArray``1(``0@)
    name: ToArray(Of TByteArray)
    nameWithType: ByteArray.ToArray(Of TByteArray)
    fullName: AlgoSdk.LowLevel.ByteArray.ToArray(Of TByteArray)
  - name: (
    nameWithType: (
    fullName: (
  - name: TByteArray
    nameWithType: TByteArray
    fullName: TByteArray
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.Base64Encoding.CopyToBase64``2(``0,``1@)
  commentId: M:AlgoSdk.Base64Encoding.CopyToBase64``2(``0,``1@)
  name: CopyToBase64<TBytes, T>(TBytes, T)
  nameWithType: Base64Encoding.CopyToBase64<TBytes, T>(TBytes, T)
  fullName: AlgoSdk.Base64Encoding.CopyToBase64<TBytes, T>(TBytes, T)
  nameWithType.vb: Base64Encoding.CopyToBase64(Of TBytes, T)(TBytes, T)
  fullName.vb: AlgoSdk.Base64Encoding.CopyToBase64(Of TBytes, T)(TBytes, T)
  name.vb: CopyToBase64(Of TBytes, T)(TBytes, T)
  spec.csharp:
  - uid: AlgoSdk.Base64Encoding.CopyToBase64``2(``0,``1@)
    name: CopyToBase64<TBytes, T>
    nameWithType: Base64Encoding.CopyToBase64<TBytes, T>
    fullName: AlgoSdk.Base64Encoding.CopyToBase64<TBytes, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TBytes
    nameWithType: TBytes
    fullName: TBytes
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.Base64Encoding.CopyToBase64``2(``0,``1@)
    name: CopyToBase64(Of TBytes, T)
    nameWithType: Base64Encoding.CopyToBase64(Of TBytes, T)
    fullName: AlgoSdk.Base64Encoding.CopyToBase64(Of TBytes, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TBytes
    nameWithType: TBytes
    fullName: TBytes
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.Base64Encoding
  commentId: T:AlgoSdk.Base64Encoding
  parent: AlgoSdk
  name: Base64Encoding
  nameWithType: Base64Encoding
  fullName: AlgoSdk.Base64Encoding
- uid: AlgoSdk.Base64Encoding.CopyFromBase64``2(``0@,``1@,System.Int32)
  commentId: M:AlgoSdk.Base64Encoding.CopyFromBase64``2(``0@,``1@,System.Int32)
  isExternal: true
  name: CopyFromBase64<TByteArray, T>(TByteArray, T, Int32)
  nameWithType: Base64Encoding.CopyFromBase64<TByteArray, T>(TByteArray, T, Int32)
  fullName: AlgoSdk.Base64Encoding.CopyFromBase64<TByteArray, T>(TByteArray, T, System.Int32)
  nameWithType.vb: Base64Encoding.CopyFromBase64(Of TByteArray, T)(TByteArray, T, Int32)
  fullName.vb: AlgoSdk.Base64Encoding.CopyFromBase64(Of TByteArray, T)(TByteArray, T, System.Int32)
  name.vb: CopyFromBase64(Of TByteArray, T)(TByteArray, T, Int32)
  spec.csharp:
  - uid: AlgoSdk.Base64Encoding.CopyFromBase64``2(``0@,``1@,System.Int32)
    name: CopyFromBase64<TByteArray, T>
    nameWithType: Base64Encoding.CopyFromBase64<TByteArray, T>
    fullName: AlgoSdk.Base64Encoding.CopyFromBase64<TByteArray, T>
  - name: (
    nameWithType: (
    fullName: (
  - name: TByteArray
    nameWithType: TByteArray
    fullName: TByteArray
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.Base64Encoding.CopyFromBase64``2(``0@,``1@,System.Int32)
    name: CopyFromBase64(Of TByteArray, T)
    nameWithType: Base64Encoding.CopyFromBase64(Of TByteArray, T)
    fullName: AlgoSdk.Base64Encoding.CopyFromBase64(Of TByteArray, T)
  - name: (
    nameWithType: (
    fullName: (
  - name: TByteArray
    nameWithType: TByteArray
    fullName: TByteArray
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: AlgoSdk.LowLevel.NativeByteArray.Item*
  commentId: Overload:AlgoSdk.LowLevel.NativeByteArray.Item
  name: Item
  nameWithType: NativeByteArray.Item
  fullName: AlgoSdk.LowLevel.NativeByteArray.Item
- uid: AlgoSdk.LowLevel.IArray{System.Byte}.Item(System.Int32)
  commentId: P:AlgoSdk.LowLevel.IArray{System.Byte}.Item(System.Int32)
  parent: AlgoSdk.LowLevel.IArray{System.Byte}
  definition: AlgoSdk.LowLevel.IArray`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: IArray<Byte>.Item[Int32]
  fullName: AlgoSdk.LowLevel.IArray<System.Byte>.Item[System.Int32]
  nameWithType.vb: IArray(Of Byte).Item(Int32)
  fullName.vb: AlgoSdk.LowLevel.IArray(Of System.Byte).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: AlgoSdk.LowLevel.IArray`1.Item(System.Int32)
    name: Item
    nameWithType: IArray<Byte>.Item
    fullName: AlgoSdk.LowLevel.IArray<System.Byte>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: AlgoSdk.LowLevel.IArray`1.Item(System.Int32)
    name: Item
    nameWithType: IArray(Of Byte).Item
    fullName: AlgoSdk.LowLevel.IArray(Of System.Byte).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: AlgoSdk.LowLevel.IArray`1.Item(System.Int32)
  commentId: P:AlgoSdk.LowLevel.IArray`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: IArray<T>.Item[Int32]
  fullName: AlgoSdk.LowLevel.IArray<T>.Item[System.Int32]
  nameWithType.vb: IArray(Of T).Item(Int32)
  fullName.vb: AlgoSdk.LowLevel.IArray(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: AlgoSdk.LowLevel.IArray`1.Item(System.Int32)
    name: Item
    nameWithType: IArray<T>.Item
    fullName: AlgoSdk.LowLevel.IArray<T>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: AlgoSdk.LowLevel.IArray`1.Item(System.Int32)
    name: Item
    nameWithType: IArray(Of T).Item
    fullName: AlgoSdk.LowLevel.IArray(Of T).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.NativeByteArray.Length*
  commentId: Overload:AlgoSdk.LowLevel.NativeByteArray.Length
  name: Length
  nameWithType: NativeByteArray.Length
  fullName: AlgoSdk.LowLevel.NativeByteArray.Length
- uid: AlgoSdk.LowLevel.IArray{System.Byte}.Length
  commentId: P:AlgoSdk.LowLevel.IArray{System.Byte}.Length
  parent: AlgoSdk.LowLevel.IArray{System.Byte}
  definition: AlgoSdk.LowLevel.IArray`1.Length
  name: Length
  nameWithType: IArray<Byte>.Length
  fullName: AlgoSdk.LowLevel.IArray<System.Byte>.Length
  nameWithType.vb: IArray(Of Byte).Length
  fullName.vb: AlgoSdk.LowLevel.IArray(Of System.Byte).Length
- uid: AlgoSdk.LowLevel.IArray`1.Length
  commentId: P:AlgoSdk.LowLevel.IArray`1.Length
  name: Length
  nameWithType: IArray<T>.Length
  fullName: AlgoSdk.LowLevel.IArray<T>.Length
  nameWithType.vb: IArray(Of T).Length
  fullName.vb: AlgoSdk.LowLevel.IArray(Of T).Length
- uid: AlgoSdk.LowLevel.NativeByteArray.#ctor*
  commentId: Overload:AlgoSdk.LowLevel.NativeByteArray.#ctor
  name: NativeByteArray
  nameWithType: NativeByteArray.NativeByteArray
  fullName: AlgoSdk.LowLevel.NativeByteArray.NativeByteArray
- uid: Unity.Collections.Allocator
  commentId: T:Unity.Collections.Allocator
  parent: Unity.Collections
  isExternal: true
  name: Allocator
  nameWithType: Allocator
  fullName: Unity.Collections.Allocator
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AlgoSdk.LowLevel.NativeByteArray.GetUnsafePtr*
  commentId: Overload:AlgoSdk.LowLevel.NativeByteArray.GetUnsafePtr
  name: GetUnsafePtr
  nameWithType: NativeByteArray.GetUnsafePtr
  fullName: AlgoSdk.LowLevel.NativeByteArray.GetUnsafePtr
- uid: AlgoSdk.LowLevel.IContiguousArray{System.Byte}.GetUnsafePtr
  commentId: M:AlgoSdk.LowLevel.IContiguousArray{System.Byte}.GetUnsafePtr
  parent: AlgoSdk.LowLevel.IContiguousArray{System.Byte}
  definition: AlgoSdk.LowLevel.IContiguousArray`1.GetUnsafePtr
  name: GetUnsafePtr()
  nameWithType: IContiguousArray<Byte>.GetUnsafePtr()
  fullName: AlgoSdk.LowLevel.IContiguousArray<System.Byte>.GetUnsafePtr()
  nameWithType.vb: IContiguousArray(Of Byte).GetUnsafePtr()
  fullName.vb: AlgoSdk.LowLevel.IContiguousArray(Of System.Byte).GetUnsafePtr()
  spec.csharp:
  - uid: AlgoSdk.LowLevel.IContiguousArray`1.GetUnsafePtr
    name: GetUnsafePtr
    nameWithType: IContiguousArray<Byte>.GetUnsafePtr
    fullName: AlgoSdk.LowLevel.IContiguousArray<System.Byte>.GetUnsafePtr
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.LowLevel.IContiguousArray`1.GetUnsafePtr
    name: GetUnsafePtr
    nameWithType: IContiguousArray(Of Byte).GetUnsafePtr
    fullName: AlgoSdk.LowLevel.IContiguousArray(Of System.Byte).GetUnsafePtr
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Void*
  isExternal: true
  name: Void*
  nameWithType: Void*
  fullName: System.Void*
  spec.csharp:
  - uid: System.Void
    name: Void
    nameWithType: Void
    fullName: System.Void
    isExternal: true
  - name: '*'
    nameWithType: '*'
    fullName: '*'
  spec.vb:
  - uid: System.Void
    name: Void
    nameWithType: Void
    fullName: System.Void
    isExternal: true
  - name: '*'
    nameWithType: '*'
    fullName: '*'
- uid: AlgoSdk.LowLevel.IContiguousArray`1.GetUnsafePtr
  commentId: M:AlgoSdk.LowLevel.IContiguousArray`1.GetUnsafePtr
  name: GetUnsafePtr()
  nameWithType: IContiguousArray<T>.GetUnsafePtr()
  fullName: AlgoSdk.LowLevel.IContiguousArray<T>.GetUnsafePtr()
  nameWithType.vb: IContiguousArray(Of T).GetUnsafePtr()
  fullName.vb: AlgoSdk.LowLevel.IContiguousArray(Of T).GetUnsafePtr()
  spec.csharp:
  - uid: AlgoSdk.LowLevel.IContiguousArray`1.GetUnsafePtr
    name: GetUnsafePtr
    nameWithType: IContiguousArray<T>.GetUnsafePtr
    fullName: AlgoSdk.LowLevel.IContiguousArray<T>.GetUnsafePtr
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.LowLevel.IContiguousArray`1.GetUnsafePtr
    name: GetUnsafePtr
    nameWithType: IContiguousArray(Of T).GetUnsafePtr
    fullName: AlgoSdk.LowLevel.IContiguousArray(Of T).GetUnsafePtr
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.NativeByteArray.Equals*
  commentId: Overload:AlgoSdk.LowLevel.NativeByteArray.Equals
  name: Equals
  nameWithType: NativeByteArray.Equals
  fullName: AlgoSdk.LowLevel.NativeByteArray.Equals
- uid: System.IEquatable{AlgoSdk.LowLevel.NativeByteArray}.Equals(AlgoSdk.LowLevel.NativeByteArray)
  commentId: M:System.IEquatable{AlgoSdk.LowLevel.NativeByteArray}.Equals(AlgoSdk.LowLevel.NativeByteArray)
  parent: System.IEquatable{AlgoSdk.LowLevel.NativeByteArray}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(NativeByteArray)
  nameWithType: IEquatable<NativeByteArray>.Equals(NativeByteArray)
  fullName: System.IEquatable<AlgoSdk.LowLevel.NativeByteArray>.Equals(AlgoSdk.LowLevel.NativeByteArray)
  nameWithType.vb: IEquatable(Of NativeByteArray).Equals(NativeByteArray)
  fullName.vb: System.IEquatable(Of AlgoSdk.LowLevel.NativeByteArray).Equals(AlgoSdk.LowLevel.NativeByteArray)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<NativeByteArray>.Equals
    fullName: System.IEquatable<AlgoSdk.LowLevel.NativeByteArray>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.LowLevel.NativeByteArray
    name: NativeByteArray
    nameWithType: NativeByteArray
    fullName: AlgoSdk.LowLevel.NativeByteArray
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of NativeByteArray).Equals
    fullName: System.IEquatable(Of AlgoSdk.LowLevel.NativeByteArray).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.LowLevel.NativeByteArray
    name: NativeByteArray
    nameWithType: NativeByteArray
    fullName: AlgoSdk.LowLevel.NativeByteArray
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.NativeByteArray
  commentId: T:AlgoSdk.LowLevel.NativeByteArray
  parent: AlgoSdk.LowLevel
  name: NativeByteArray
  nameWithType: NativeByteArray
  fullName: AlgoSdk.LowLevel.NativeByteArray
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.NativeByteArray.Dispose*
  commentId: Overload:AlgoSdk.LowLevel.NativeByteArray.Dispose
  name: Dispose
  nameWithType: NativeByteArray.Dispose
  fullName: AlgoSdk.LowLevel.NativeByteArray.Dispose
- uid: Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
  commentId: M:Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
  parent: Unity.Collections.INativeDisposable
  isExternal: true
  name: Dispose(JobHandle)
  nameWithType: INativeDisposable.Dispose(JobHandle)
  fullName: Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
  spec.csharp:
  - uid: Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
    name: Dispose
    nameWithType: INativeDisposable.Dispose
    fullName: Unity.Collections.INativeDisposable.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: Unity.Jobs.JobHandle
    name: JobHandle
    nameWithType: JobHandle
    fullName: Unity.Jobs.JobHandle
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
    name: Dispose
    nameWithType: INativeDisposable.Dispose
    fullName: Unity.Collections.INativeDisposable.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: Unity.Jobs.JobHandle
    name: JobHandle
    nameWithType: JobHandle
    fullName: Unity.Jobs.JobHandle
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Jobs.JobHandle
  commentId: T:Unity.Jobs.JobHandle
  parent: Unity.Jobs
  isExternal: true
  name: JobHandle
  nameWithType: JobHandle
  fullName: Unity.Jobs.JobHandle
- uid: Unity.Jobs
  commentId: N:Unity.Jobs
  isExternal: true
  name: Unity.Jobs
  nameWithType: Unity.Jobs
  fullName: Unity.Jobs
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
