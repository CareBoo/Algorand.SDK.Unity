### YamlMime:ManagedReference
items:
- uid: AlgoSdk.SignatureTypeExtensions
  commentId: T:AlgoSdk.SignatureTypeExtensions
  id: SignatureTypeExtensions
  parent: AlgoSdk
  children:
  - AlgoSdk.SignatureTypeExtensions.ToFixedString(AlgoSdk.SignatureType)
  - AlgoSdk.SignatureTypeExtensions.ToOptionalFixedString(AlgoSdk.SignatureType)
  - AlgoSdk.SignatureTypeExtensions.TypeToString
  langs:
  - csharp
  - vb
  name: SignatureTypeExtensions
  nameWithType: SignatureTypeExtensions
  fullName: AlgoSdk.SignatureTypeExtensions
  type: Class
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/SignatureType.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: SignatureTypeExtensions
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/SignatureType.cs
    startLine: 14
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public static class SignatureTypeExtensions
    content.vb: Public Module SignatureTypeExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: AlgoSdk.SignatureTypeExtensions.TypeToString
  commentId: F:AlgoSdk.SignatureTypeExtensions.TypeToString
  id: TypeToString
  parent: AlgoSdk.SignatureTypeExtensions
  langs:
  - csharp
  - vb
  name: TypeToString
  nameWithType: SignatureTypeExtensions.TypeToString
  fullName: AlgoSdk.SignatureTypeExtensions.TypeToString
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/SignatureType.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TypeToString
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/SignatureType.cs
    startLine: 16
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public static readonly FixedString32Bytes[] TypeToString
    return:
      type: Unity.Collections.FixedString32Bytes[]
    content.vb: Public Shared ReadOnly TypeToString As FixedString32Bytes()
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: AlgoSdk.SignatureTypeExtensions.ToFixedString(AlgoSdk.SignatureType)
  commentId: M:AlgoSdk.SignatureTypeExtensions.ToFixedString(AlgoSdk.SignatureType)
  id: ToFixedString(AlgoSdk.SignatureType)
  isExtensionMethod: true
  parent: AlgoSdk.SignatureTypeExtensions
  langs:
  - csharp
  - vb
  name: ToFixedString(SignatureType)
  nameWithType: SignatureTypeExtensions.ToFixedString(SignatureType)
  fullName: AlgoSdk.SignatureTypeExtensions.ToFixedString(AlgoSdk.SignatureType)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/SignatureType.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ToFixedString
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/SignatureType.cs
    startLine: 24
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public static FixedString32Bytes ToFixedString(this SignatureType sigType)
    parameters:
    - id: sigType
      type: AlgoSdk.SignatureType
    return:
      type: Unity.Collections.FixedString32Bytes
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToFixedString(sigType As SignatureType) As FixedString32Bytes
  overload: AlgoSdk.SignatureTypeExtensions.ToFixedString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AlgoSdk.SignatureTypeExtensions.ToOptionalFixedString(AlgoSdk.SignatureType)
  commentId: M:AlgoSdk.SignatureTypeExtensions.ToOptionalFixedString(AlgoSdk.SignatureType)
  id: ToOptionalFixedString(AlgoSdk.SignatureType)
  isExtensionMethod: true
  parent: AlgoSdk.SignatureTypeExtensions
  langs:
  - csharp
  - vb
  name: ToOptionalFixedString(SignatureType)
  nameWithType: SignatureTypeExtensions.ToOptionalFixedString(SignatureType)
  fullName: AlgoSdk.SignatureTypeExtensions.ToOptionalFixedString(AlgoSdk.SignatureType)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/SignatureType.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ToOptionalFixedString
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/SignatureType.cs
    startLine: 29
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public static Optional<FixedString32Bytes> ToOptionalFixedString(this SignatureType sigType)
    parameters:
    - id: sigType
      type: AlgoSdk.SignatureType
    return:
      type: AlgoSdk.Optional{Unity.Collections.FixedString32Bytes}
    content.vb: "<ExtensionAttribute>\nPublic Shared Function ToOptionalFixedString(sigType As SignatureType) As "
  overload: AlgoSdk.SignatureTypeExtensions.ToOptionalFixedString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Unity.Collections.FixedString32Bytes[]
  isExternal: true
  name: FixedString32Bytes[]
  nameWithType: FixedString32Bytes[]
  fullName: Unity.Collections.FixedString32Bytes[]
  nameWithType.vb: FixedString32Bytes()
  fullName.vb: Unity.Collections.FixedString32Bytes()
  name.vb: FixedString32Bytes()
  spec.csharp:
  - uid: Unity.Collections.FixedString32Bytes
    name: FixedString32Bytes
    nameWithType: FixedString32Bytes
    fullName: Unity.Collections.FixedString32Bytes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Unity.Collections.FixedString32Bytes
    name: FixedString32Bytes
    nameWithType: FixedString32Bytes
    fullName: Unity.Collections.FixedString32Bytes
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AlgoSdk.SignatureTypeExtensions.ToFixedString*
  commentId: Overload:AlgoSdk.SignatureTypeExtensions.ToFixedString
  name: ToFixedString
  nameWithType: SignatureTypeExtensions.ToFixedString
  fullName: AlgoSdk.SignatureTypeExtensions.ToFixedString
- uid: AlgoSdk.SignatureType
  commentId: T:AlgoSdk.SignatureType
  parent: AlgoSdk
  name: SignatureType
  nameWithType: SignatureType
  fullName: AlgoSdk.SignatureType
- uid: Unity.Collections.FixedString32Bytes
  commentId: T:Unity.Collections.FixedString32Bytes
  parent: Unity.Collections
  name: FixedString32Bytes
  nameWithType: FixedString32Bytes
  fullName: Unity.Collections.FixedString32Bytes
- uid: Unity.Collections
  commentId: N:Unity.Collections
  name: Unity.Collections
  nameWithType: Unity.Collections
  fullName: Unity.Collections
- uid: AlgoSdk.SignatureTypeExtensions.ToOptionalFixedString*
  commentId: Overload:AlgoSdk.SignatureTypeExtensions.ToOptionalFixedString
  name: ToOptionalFixedString
  nameWithType: SignatureTypeExtensions.ToOptionalFixedString
  fullName: AlgoSdk.SignatureTypeExtensions.ToOptionalFixedString
- uid: AlgoSdk.Optional{Unity.Collections.FixedString32Bytes}
  commentId: T:AlgoSdk.Optional{Unity.Collections.FixedString32Bytes}
  parent: AlgoSdk
  definition: AlgoSdk.Optional`1
  name: Optional<FixedString32Bytes>
  nameWithType: Optional<FixedString32Bytes>
  fullName: AlgoSdk.Optional<Unity.Collections.FixedString32Bytes>
  nameWithType.vb: Optional(Of FixedString32Bytes)
  fullName.vb: AlgoSdk.Optional(Of Unity.Collections.FixedString32Bytes)
  name.vb: Optional(Of FixedString32Bytes)
  spec.csharp:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Collections.FixedString32Bytes
    name: FixedString32Bytes
    nameWithType: FixedString32Bytes
    fullName: Unity.Collections.FixedString32Bytes
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Collections.FixedString32Bytes
    name: FixedString32Bytes
    nameWithType: FixedString32Bytes
    fullName: Unity.Collections.FixedString32Bytes
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.Optional`1
  commentId: T:AlgoSdk.Optional`1
  parent: AlgoSdk
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: AlgoSdk.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: AlgoSdk.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
