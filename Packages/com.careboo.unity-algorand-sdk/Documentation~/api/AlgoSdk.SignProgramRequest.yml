### YamlMime:ManagedReference
items:
- uid: AlgoSdk.SignProgramRequest
  commentId: T:AlgoSdk.SignProgramRequest
  id: SignProgramRequest
  parent: AlgoSdk
  children:
  - AlgoSdk.SignProgramRequest.Address
  - AlgoSdk.SignProgramRequest.Data
  - AlgoSdk.SignProgramRequest.Equals(AlgoSdk.SignProgramRequest)
  - AlgoSdk.SignProgramRequest.WalletHandleToken
  - AlgoSdk.SignProgramRequest.WalletPassword
  langs:
  - csharp
  - vb
  name: SignProgramRequest
  nameWithType: SignProgramRequest
  fullName: AlgoSdk.SignProgramRequest
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/SignProgramRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: SignProgramRequest
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/SignProgramRequest.cs
    startLine: 5
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: 'public struct SignProgramRequest : IEquatable<SignProgramRequest>'
    content.vb: >-
      Public Structure SignProgramRequest
          Implements IEquatable(Of SignProgramRequest)
  implements:
  - System.IEquatable{AlgoSdk.SignProgramRequest}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: AlgoSdk.SignProgramRequest.Address
  commentId: F:AlgoSdk.SignProgramRequest.Address
  id: Address
  parent: AlgoSdk.SignProgramRequest
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: SignProgramRequest.Address
  fullName: AlgoSdk.SignProgramRequest.Address
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/SignProgramRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Address
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/SignProgramRequest.cs
    startLine: 10
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("address", null, false)]

      public Address Address
    return:
      type: AlgoSdk.Address
    content.vb: >-
      <AlgoApiField("address", Nothing, False)>

      Public Address As Address
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: address
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.SignProgramRequest.Data
  commentId: F:AlgoSdk.SignProgramRequest.Data
  id: Data
  parent: AlgoSdk.SignProgramRequest
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: SignProgramRequest.Data
  fullName: AlgoSdk.SignProgramRequest.Data
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/SignProgramRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Data
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/SignProgramRequest.cs
    startLine: 13
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("data", null, false)]

      public byte[] Data
    return:
      type: System.Byte[]
    content.vb: >-
      <AlgoApiField("data", Nothing, False)>

      Public Data As Byte()
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: data
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.SignProgramRequest.WalletHandleToken
  commentId: F:AlgoSdk.SignProgramRequest.WalletHandleToken
  id: WalletHandleToken
  parent: AlgoSdk.SignProgramRequest
  langs:
  - csharp
  - vb
  name: WalletHandleToken
  nameWithType: SignProgramRequest.WalletHandleToken
  fullName: AlgoSdk.SignProgramRequest.WalletHandleToken
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/SignProgramRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: WalletHandleToken
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/SignProgramRequest.cs
    startLine: 16
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("wallet_handle_token", null, false)]

      public FixedString128Bytes WalletHandleToken
    return:
      type: Unity.Collections.FixedString128Bytes
    content.vb: >-
      <AlgoApiField("wallet_handle_token", Nothing, False)>

      Public WalletHandleToken As FixedString128Bytes
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: wallet_handle_token
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.SignProgramRequest.WalletPassword
  commentId: F:AlgoSdk.SignProgramRequest.WalletPassword
  id: WalletPassword
  parent: AlgoSdk.SignProgramRequest
  langs:
  - csharp
  - vb
  name: WalletPassword
  nameWithType: SignProgramRequest.WalletPassword
  fullName: AlgoSdk.SignProgramRequest.WalletPassword
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/SignProgramRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: WalletPassword
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/SignProgramRequest.cs
    startLine: 19
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("wallet_password", null, false)]

      public FixedString128Bytes WalletPassword
    return:
      type: Unity.Collections.FixedString128Bytes
    content.vb: >-
      <AlgoApiField("wallet_password", Nothing, False)>

      Public WalletPassword As FixedString128Bytes
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: wallet_password
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.SignProgramRequest.Equals(AlgoSdk.SignProgramRequest)
  commentId: M:AlgoSdk.SignProgramRequest.Equals(AlgoSdk.SignProgramRequest)
  id: Equals(AlgoSdk.SignProgramRequest)
  parent: AlgoSdk.SignProgramRequest
  langs:
  - csharp
  - vb
  name: Equals(SignProgramRequest)
  nameWithType: SignProgramRequest.Equals(SignProgramRequest)
  fullName: AlgoSdk.SignProgramRequest.Equals(AlgoSdk.SignProgramRequest)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/SignProgramRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Equals
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/SignProgramRequest.cs
    startLine: 21
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public bool Equals(SignProgramRequest other)
    parameters:
    - id: other
      type: AlgoSdk.SignProgramRequest
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As SignProgramRequest) As Boolean
  overload: AlgoSdk.SignProgramRequest.Equals*
  implements:
  - System.IEquatable{AlgoSdk.SignProgramRequest}.Equals(AlgoSdk.SignProgramRequest)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: System.IEquatable{AlgoSdk.SignProgramRequest}
  commentId: T:System.IEquatable{AlgoSdk.SignProgramRequest}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<SignProgramRequest>
  nameWithType: IEquatable<SignProgramRequest>
  fullName: System.IEquatable<AlgoSdk.SignProgramRequest>
  nameWithType.vb: IEquatable(Of SignProgramRequest)
  fullName.vb: System.IEquatable(Of AlgoSdk.SignProgramRequest)
  name.vb: IEquatable(Of SignProgramRequest)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.SignProgramRequest
    name: SignProgramRequest
    nameWithType: SignProgramRequest
    fullName: AlgoSdk.SignProgramRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.SignProgramRequest
    name: SignProgramRequest
    nameWithType: SignProgramRequest
    fullName: AlgoSdk.SignProgramRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AlgoSdk.Address
  commentId: T:AlgoSdk.Address
  parent: AlgoSdk
  name: Address
  nameWithType: Address
  fullName: AlgoSdk.Address
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Unity.Collections.FixedString128Bytes
  commentId: T:Unity.Collections.FixedString128Bytes
  parent: Unity.Collections
  name: FixedString128Bytes
  nameWithType: FixedString128Bytes
  fullName: Unity.Collections.FixedString128Bytes
- uid: Unity.Collections
  commentId: N:Unity.Collections
  name: Unity.Collections
  nameWithType: Unity.Collections
  fullName: Unity.Collections
- uid: AlgoSdk.SignProgramRequest.Equals*
  commentId: Overload:AlgoSdk.SignProgramRequest.Equals
  name: Equals
  nameWithType: SignProgramRequest.Equals
  fullName: AlgoSdk.SignProgramRequest.Equals
- uid: System.IEquatable{AlgoSdk.SignProgramRequest}.Equals(AlgoSdk.SignProgramRequest)
  commentId: M:System.IEquatable{AlgoSdk.SignProgramRequest}.Equals(AlgoSdk.SignProgramRequest)
  parent: System.IEquatable{AlgoSdk.SignProgramRequest}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(SignProgramRequest)
  nameWithType: IEquatable<SignProgramRequest>.Equals(SignProgramRequest)
  fullName: System.IEquatable<AlgoSdk.SignProgramRequest>.Equals(AlgoSdk.SignProgramRequest)
  nameWithType.vb: IEquatable(Of SignProgramRequest).Equals(SignProgramRequest)
  fullName.vb: System.IEquatable(Of AlgoSdk.SignProgramRequest).Equals(AlgoSdk.SignProgramRequest)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<SignProgramRequest>.Equals
    fullName: System.IEquatable<AlgoSdk.SignProgramRequest>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.SignProgramRequest
    name: SignProgramRequest
    nameWithType: SignProgramRequest
    fullName: AlgoSdk.SignProgramRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of SignProgramRequest).Equals
    fullName: System.IEquatable(Of AlgoSdk.SignProgramRequest).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.SignProgramRequest
    name: SignProgramRequest
    nameWithType: SignProgramRequest
    fullName: AlgoSdk.SignProgramRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.SignProgramRequest
  commentId: T:AlgoSdk.SignProgramRequest
  parent: AlgoSdk
  name: SignProgramRequest
  nameWithType: SignProgramRequest
  fullName: AlgoSdk.SignProgramRequest
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
