### YamlMime:ManagedReference
items:
- uid: AlgoSdk.TransactionGroup
  commentId: T:AlgoSdk.TransactionGroup
  id: TransactionGroup
  parent: AlgoSdk
  children:
  - AlgoSdk.TransactionGroup.Equals(AlgoSdk.TransactionGroup)
  - AlgoSdk.TransactionGroup.GetId
  - AlgoSdk.TransactionGroup.IdPrefix
  - AlgoSdk.TransactionGroup.MaxSize
  - AlgoSdk.TransactionGroup.Txns
  langs:
  - csharp
  - vb
  name: TransactionGroup
  nameWithType: TransactionGroup
  fullName: AlgoSdk.TransactionGroup
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionGroup.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TransactionGroup
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionGroup.cs
    startLine: 8
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: 'public struct TransactionGroup : IEquatable<TransactionGroup>'
    content.vb: >-
      Public Structure TransactionGroup
          Implements IEquatable(Of TransactionGroup)
  implements:
  - System.IEquatable{AlgoSdk.TransactionGroup}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: AlgoSdk.TransactionGroup.MaxSize
  commentId: F:AlgoSdk.TransactionGroup.MaxSize
  id: MaxSize
  parent: AlgoSdk.TransactionGroup
  langs:
  - csharp
  - vb
  name: MaxSize
  nameWithType: TransactionGroup.MaxSize
  fullName: AlgoSdk.TransactionGroup.MaxSize
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionGroup.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: MaxSize
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionGroup.cs
    startLine: 12
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public const int MaxSize = 16
    return:
      type: System.Int32
    content.vb: Public Const MaxSize As Integer = 16
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: AlgoSdk.TransactionGroup.IdPrefix
  commentId: F:AlgoSdk.TransactionGroup.IdPrefix
  id: IdPrefix
  parent: AlgoSdk.TransactionGroup
  langs:
  - csharp
  - vb
  name: IdPrefix
  nameWithType: TransactionGroup.IdPrefix
  fullName: AlgoSdk.TransactionGroup.IdPrefix
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionGroup.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: IdPrefix
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionGroup.cs
    startLine: 14
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public static readonly byte[] IdPrefix
    return:
      type: System.Byte[]
    content.vb: Public Shared ReadOnly IdPrefix As Byte()
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: AlgoSdk.TransactionGroup.Txns
  commentId: F:AlgoSdk.TransactionGroup.Txns
  id: Txns
  parent: AlgoSdk.TransactionGroup
  langs:
  - csharp
  - vb
  name: Txns
  nameWithType: TransactionGroup.Txns
  fullName: AlgoSdk.TransactionGroup.Txns
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionGroup.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Txns
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionGroup.cs
    startLine: 17
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("txlist", "txlist", false)]

      public TransactionId[] Txns
    return:
      type: AlgoSdk.TransactionId[]
    content.vb: >-
      <AlgoApiField("txlist", "txlist", False)>

      Public Txns As TransactionId()
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: txlist
    - type: System.String
      value: txlist
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.TransactionGroup.Equals(AlgoSdk.TransactionGroup)
  commentId: M:AlgoSdk.TransactionGroup.Equals(AlgoSdk.TransactionGroup)
  id: Equals(AlgoSdk.TransactionGroup)
  parent: AlgoSdk.TransactionGroup
  langs:
  - csharp
  - vb
  name: Equals(TransactionGroup)
  nameWithType: TransactionGroup.Equals(TransactionGroup)
  fullName: AlgoSdk.TransactionGroup.Equals(AlgoSdk.TransactionGroup)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionGroup.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Equals
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionGroup.cs
    startLine: 20
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public bool Equals(TransactionGroup other)
    parameters:
    - id: other
      type: AlgoSdk.TransactionGroup
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As TransactionGroup) As Boolean
  overload: AlgoSdk.TransactionGroup.Equals*
  implements:
  - System.IEquatable{AlgoSdk.TransactionGroup}.Equals(AlgoSdk.TransactionGroup)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.TransactionGroup.GetId
  commentId: M:AlgoSdk.TransactionGroup.GetId
  id: GetId
  parent: AlgoSdk.TransactionGroup
  langs:
  - csharp
  - vb
  name: GetId()
  nameWithType: TransactionGroup.GetId()
  fullName: AlgoSdk.TransactionGroup.GetId()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionGroup.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetId
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionGroup.cs
    startLine: 25
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public TransactionId GetId()
    return:
      type: AlgoSdk.TransactionId
    content.vb: Public Function GetId As TransactionId
  overload: AlgoSdk.TransactionGroup.GetId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: System.IEquatable{AlgoSdk.TransactionGroup}
  commentId: T:System.IEquatable{AlgoSdk.TransactionGroup}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<TransactionGroup>
  nameWithType: IEquatable<TransactionGroup>
  fullName: System.IEquatable<AlgoSdk.TransactionGroup>
  nameWithType.vb: IEquatable(Of TransactionGroup)
  fullName.vb: System.IEquatable(Of AlgoSdk.TransactionGroup)
  name.vb: IEquatable(Of TransactionGroup)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.TransactionGroup
    name: TransactionGroup
    nameWithType: TransactionGroup
    fullName: AlgoSdk.TransactionGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.TransactionGroup
    name: TransactionGroup
    nameWithType: TransactionGroup
    fullName: AlgoSdk.TransactionGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AlgoSdk.TransactionId[]
  isExternal: true
  name: TransactionId[]
  nameWithType: TransactionId[]
  fullName: AlgoSdk.TransactionId[]
  nameWithType.vb: TransactionId()
  fullName.vb: AlgoSdk.TransactionId()
  name.vb: TransactionId()
  spec.csharp:
  - uid: AlgoSdk.TransactionId
    name: TransactionId
    nameWithType: TransactionId
    fullName: AlgoSdk.TransactionId
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: AlgoSdk.TransactionId
    name: TransactionId
    nameWithType: TransactionId
    fullName: AlgoSdk.TransactionId
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AlgoSdk.TransactionGroup.Equals*
  commentId: Overload:AlgoSdk.TransactionGroup.Equals
  name: Equals
  nameWithType: TransactionGroup.Equals
  fullName: AlgoSdk.TransactionGroup.Equals
- uid: System.IEquatable{AlgoSdk.TransactionGroup}.Equals(AlgoSdk.TransactionGroup)
  commentId: M:System.IEquatable{AlgoSdk.TransactionGroup}.Equals(AlgoSdk.TransactionGroup)
  parent: System.IEquatable{AlgoSdk.TransactionGroup}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(TransactionGroup)
  nameWithType: IEquatable<TransactionGroup>.Equals(TransactionGroup)
  fullName: System.IEquatable<AlgoSdk.TransactionGroup>.Equals(AlgoSdk.TransactionGroup)
  nameWithType.vb: IEquatable(Of TransactionGroup).Equals(TransactionGroup)
  fullName.vb: System.IEquatable(Of AlgoSdk.TransactionGroup).Equals(AlgoSdk.TransactionGroup)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<TransactionGroup>.Equals
    fullName: System.IEquatable<AlgoSdk.TransactionGroup>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.TransactionGroup
    name: TransactionGroup
    nameWithType: TransactionGroup
    fullName: AlgoSdk.TransactionGroup
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of TransactionGroup).Equals
    fullName: System.IEquatable(Of AlgoSdk.TransactionGroup).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.TransactionGroup
    name: TransactionGroup
    nameWithType: TransactionGroup
    fullName: AlgoSdk.TransactionGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.TransactionGroup
  commentId: T:AlgoSdk.TransactionGroup
  parent: AlgoSdk
  name: TransactionGroup
  nameWithType: TransactionGroup
  fullName: AlgoSdk.TransactionGroup
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.TransactionGroup.GetId*
  commentId: Overload:AlgoSdk.TransactionGroup.GetId
  name: GetId
  nameWithType: TransactionGroup.GetId
  fullName: AlgoSdk.TransactionGroup.GetId
- uid: AlgoSdk.TransactionId
  commentId: T:AlgoSdk.TransactionId
  parent: AlgoSdk
  name: TransactionId
  nameWithType: TransactionId
  fullName: AlgoSdk.TransactionId
