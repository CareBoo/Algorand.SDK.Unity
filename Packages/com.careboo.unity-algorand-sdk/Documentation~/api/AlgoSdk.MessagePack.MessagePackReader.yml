### YamlMime:ManagedReference
items:
- uid: AlgoSdk.MessagePack.MessagePackReader
  commentId: T:AlgoSdk.MessagePack.MessagePackReader
  id: MessagePackReader
  parent: AlgoSdk.MessagePack
  children:
  - AlgoSdk.MessagePack.MessagePackReader.#ctor(Unity.Collections.NativeArray{System.Byte}.ReadOnly)
  - AlgoSdk.MessagePack.MessagePackReader.Peek
  - AlgoSdk.MessagePack.MessagePackReader.ReadArrayHeader
  - AlgoSdk.MessagePack.MessagePackReader.ReadBool
  - AlgoSdk.MessagePack.MessagePackReader.ReadByte
  - AlgoSdk.MessagePack.MessagePackReader.ReadBytes
  - AlgoSdk.MessagePack.MessagePackReader.ReadBytes``1
  - AlgoSdk.MessagePack.MessagePackReader.ReadInt16
  - AlgoSdk.MessagePack.MessagePackReader.ReadInt32
  - AlgoSdk.MessagePack.MessagePackReader.ReadInt64
  - AlgoSdk.MessagePack.MessagePackReader.ReadInt8
  - AlgoSdk.MessagePack.MessagePackReader.ReadMapHeader
  - AlgoSdk.MessagePack.MessagePackReader.ReadRaw(Unity.Collections.NativeList{System.Byte})
  - AlgoSdk.MessagePack.MessagePackReader.ReadSByte
  - AlgoSdk.MessagePack.MessagePackReader.ReadString``1(``0@)
  - AlgoSdk.MessagePack.MessagePackReader.ReadUInt16
  - AlgoSdk.MessagePack.MessagePackReader.ReadUInt32
  - AlgoSdk.MessagePack.MessagePackReader.ReadUInt64
  - AlgoSdk.MessagePack.MessagePackReader.ReadUInt8
  - AlgoSdk.MessagePack.MessagePackReader.Skip
  - AlgoSdk.MessagePack.MessagePackReader.TryPeek(System.Byte@)
  - AlgoSdk.MessagePack.MessagePackReader.TryRead(System.Byte@)
  - AlgoSdk.MessagePack.MessagePackReader.TryRead(System.SByte@)
  - AlgoSdk.MessagePack.MessagePackReader.TryReadArrayHeader(System.Int32@)
  - AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(System.Int16@)
  - AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(System.Int32@)
  - AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(System.Int64@)
  - AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(System.UInt16@)
  - AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(System.UInt32@)
  - AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(System.UInt64@)
  - AlgoSdk.MessagePack.MessagePackReader.TryReadBytes(Unity.Collections.NativeSlice{System.Byte}@)
  - AlgoSdk.MessagePack.MessagePackReader.TryReadExtensionFormatHeader(AlgoSdk.MessagePack.ExtensionHeader@)
  - AlgoSdk.MessagePack.MessagePackReader.TryReadMapHeader(System.Int32@)
  - AlgoSdk.MessagePack.MessagePackReader.TryReadNil
  - AlgoSdk.MessagePack.MessagePackReader.TryReadRaw(Unity.Collections.NativeList{System.Byte})
  - AlgoSdk.MessagePack.MessagePackReader.TryReadString``1(``0@)
  - AlgoSdk.MessagePack.MessagePackReader.TrySkip
  - AlgoSdk.MessagePack.MessagePackReader.UnsafeReadBytes(System.Void*,System.Int32)
  langs:
  - csharp
  - vb
  name: MessagePackReader
  nameWithType: MessagePackReader
  fullName: AlgoSdk.MessagePack.MessagePackReader
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.String.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: MessagePackReader
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.String.cs
    startLine: 4
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public struct MessagePackReader
    content.vb: Public Structure MessagePackReader
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadBool
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.ReadBool
  id: ReadBool
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: ReadBool()
  nameWithType: MessagePackReader.ReadBool()
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadBool()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Boolean.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ReadBool
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Boolean.cs
    startLine: 4
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public bool ReadBool()
    return:
      type: System.Boolean
    content.vb: Public Function ReadBool As Boolean
  overload: AlgoSdk.MessagePack.MessagePackReader.ReadBool*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.MessagePack.MessagePackReader.#ctor(Unity.Collections.NativeArray{System.Byte}.ReadOnly)
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.#ctor(Unity.Collections.NativeArray{System.Byte}.ReadOnly)
  id: '#ctor(Unity.Collections.NativeArray{System.Byte}.ReadOnly)'
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: MessagePackReader(NativeArray<Byte>.ReadOnly)
  nameWithType: MessagePackReader.MessagePackReader(NativeArray<Byte>.ReadOnly)
  fullName: AlgoSdk.MessagePack.MessagePackReader.MessagePackReader(Unity.Collections.NativeArray<System.Byte>.ReadOnly)
  type: Constructor
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: .ctor
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.cs
    startLine: 11
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public MessagePackReader(NativeArray<byte>.ReadOnly data)
    parameters:
    - id: data
      type: Unity.Collections.NativeArray{System.Byte}.ReadOnly
    content.vb: Public Sub New(data As NativeArray(Of Byte).ReadOnly)
  overload: AlgoSdk.MessagePack.MessagePackReader.#ctor*
  nameWithType.vb: MessagePackReader.MessagePackReader(NativeArray(Of Byte).ReadOnly)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.MessagePack.MessagePackReader.MessagePackReader(Unity.Collections.NativeArray(Of System.Byte).ReadOnly)
  name.vb: MessagePackReader(NativeArray(Of Byte).ReadOnly)
- uid: AlgoSdk.MessagePack.MessagePackReader.Peek
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.Peek
  id: Peek
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: Peek()
  nameWithType: MessagePackReader.Peek()
  fullName: AlgoSdk.MessagePack.MessagePackReader.Peek()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Peek
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.cs
    startLine: 17
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public byte Peek()
    return:
      type: System.Byte
    content.vb: Public Function Peek As Byte
  overload: AlgoSdk.MessagePack.MessagePackReader.Peek*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadByte
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.ReadByte
  id: ReadByte
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: ReadByte()
  nameWithType: MessagePackReader.ReadByte()
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadByte()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ReadByte
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.cs
    startLine: 24
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public byte ReadByte()
    return:
      type: System.Byte
    content.vb: Public Function ReadByte As Byte
  overload: AlgoSdk.MessagePack.MessagePackReader.ReadByte*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadSByte
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.ReadSByte
  id: ReadSByte
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: ReadSByte()
  nameWithType: MessagePackReader.ReadSByte()
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadSByte()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ReadSByte
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.cs
    startLine: 31
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public sbyte ReadSByte()
    return:
      type: System.SByte
    content.vb: Public Function ReadSByte As SByte
  overload: AlgoSdk.MessagePack.MessagePackReader.ReadSByte*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.MessagePack.MessagePackReader.Skip
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.Skip
  id: Skip
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: Skip()
  nameWithType: MessagePackReader.Skip()
  fullName: AlgoSdk.MessagePack.MessagePackReader.Skip()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Skip
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.cs
    startLine: 38
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public void Skip()
    content.vb: Public Sub Skip
  overload: AlgoSdk.MessagePack.MessagePackReader.Skip*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadRaw(Unity.Collections.NativeList{System.Byte})
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.ReadRaw(Unity.Collections.NativeList{System.Byte})
  id: ReadRaw(Unity.Collections.NativeList{System.Byte})
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: ReadRaw(NativeList<Byte>)
  nameWithType: MessagePackReader.ReadRaw(NativeList<Byte>)
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadRaw(Unity.Collections.NativeList<System.Byte>)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ReadRaw
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.cs
    startLine: 44
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public void ReadRaw(NativeList<byte> bytes)
    parameters:
    - id: bytes
      type: Unity.Collections.NativeList{System.Byte}
    content.vb: Public Sub ReadRaw(bytes As NativeList(Of Byte))
  overload: AlgoSdk.MessagePack.MessagePackReader.ReadRaw*
  nameWithType.vb: MessagePackReader.ReadRaw(NativeList(Of Byte))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.MessagePack.MessagePackReader.ReadRaw(Unity.Collections.NativeList(Of System.Byte))
  name.vb: ReadRaw(NativeList(Of Byte))
- uid: AlgoSdk.MessagePack.MessagePackReader.TryRead(System.Byte@)
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.TryRead(System.Byte@)
  id: TryRead(System.Byte@)
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: TryRead(out Byte)
  nameWithType: MessagePackReader.TryRead(out Byte)
  fullName: AlgoSdk.MessagePack.MessagePackReader.TryRead(out System.Byte)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TryRead
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.cs
    startLine: 64
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public bool TryRead(out byte code)
    parameters:
    - id: code
      type: System.Byte
    return:
      type: System.Boolean
    content.vb: Public Function TryRead(ByRef code As Byte) As Boolean
  overload: AlgoSdk.MessagePack.MessagePackReader.TryRead*
  nameWithType.vb: MessagePackReader.TryRead(ByRef Byte)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.MessagePack.MessagePackReader.TryRead(ByRef System.Byte)
  name.vb: TryRead(ByRef Byte)
- uid: AlgoSdk.MessagePack.MessagePackReader.TryRead(System.SByte@)
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.TryRead(System.SByte@)
  id: TryRead(System.SByte@)
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: TryRead(out SByte)
  nameWithType: MessagePackReader.TryRead(out SByte)
  fullName: AlgoSdk.MessagePack.MessagePackReader.TryRead(out System.SByte)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TryRead
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.cs
    startLine: 74
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public bool TryRead(out sbyte value)
    parameters:
    - id: value
      type: System.SByte
    return:
      type: System.Boolean
    content.vb: Public Function TryRead(ByRef value As SByte) As Boolean
  overload: AlgoSdk.MessagePack.MessagePackReader.TryRead*
  nameWithType.vb: MessagePackReader.TryRead(ByRef SByte)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.MessagePack.MessagePackReader.TryRead(ByRef System.SByte)
  name.vb: TryRead(ByRef SByte)
- uid: AlgoSdk.MessagePack.MessagePackReader.TryPeek(System.Byte@)
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.TryPeek(System.Byte@)
  id: TryPeek(System.Byte@)
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: TryPeek(out Byte)
  nameWithType: MessagePackReader.TryPeek(out Byte)
  fullName: AlgoSdk.MessagePack.MessagePackReader.TryPeek(out System.Byte)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TryPeek
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.cs
    startLine: 85
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public bool TryPeek(out byte code)
    parameters:
    - id: code
      type: System.Byte
    return:
      type: System.Boolean
    content.vb: Public Function TryPeek(ByRef code As Byte) As Boolean
  overload: AlgoSdk.MessagePack.MessagePackReader.TryPeek*
  nameWithType.vb: MessagePackReader.TryPeek(ByRef Byte)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.MessagePack.MessagePackReader.TryPeek(ByRef System.Byte)
  name.vb: TryPeek(ByRef Byte)
- uid: AlgoSdk.MessagePack.MessagePackReader.TryReadRaw(Unity.Collections.NativeList{System.Byte})
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.TryReadRaw(Unity.Collections.NativeList{System.Byte})
  id: TryReadRaw(Unity.Collections.NativeList{System.Byte})
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: TryReadRaw(NativeList<Byte>)
  nameWithType: MessagePackReader.TryReadRaw(NativeList<Byte>)
  fullName: AlgoSdk.MessagePack.MessagePackReader.TryReadRaw(Unity.Collections.NativeList<System.Byte>)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TryReadRaw
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.cs
    startLine: 94
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public bool TryReadRaw(NativeList<byte> bytes)
    parameters:
    - id: bytes
      type: Unity.Collections.NativeList{System.Byte}
    return:
      type: System.Boolean
    content.vb: Public Function TryReadRaw(bytes As NativeList(Of Byte)) As Boolean
  overload: AlgoSdk.MessagePack.MessagePackReader.TryReadRaw*
  nameWithType.vb: MessagePackReader.TryReadRaw(NativeList(Of Byte))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.MessagePack.MessagePackReader.TryReadRaw(Unity.Collections.NativeList(Of System.Byte))
  name.vb: TryReadRaw(NativeList(Of Byte))
- uid: AlgoSdk.MessagePack.MessagePackReader.TrySkip
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.TrySkip
  id: TrySkip
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: TrySkip()
  nameWithType: MessagePackReader.TrySkip()
  fullName: AlgoSdk.MessagePack.MessagePackReader.TrySkip()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TrySkip
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.cs
    startLine: 166
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public bool TrySkip()
    return:
      type: System.Boolean
    content.vb: Public Function TrySkip As Boolean
  overload: AlgoSdk.MessagePack.MessagePackReader.TrySkip*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.MessagePack.MessagePackReader.TryReadExtensionFormatHeader(AlgoSdk.MessagePack.ExtensionHeader@)
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.TryReadExtensionFormatHeader(AlgoSdk.MessagePack.ExtensionHeader@)
  id: TryReadExtensionFormatHeader(AlgoSdk.MessagePack.ExtensionHeader@)
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: TryReadExtensionFormatHeader(out ExtensionHeader)
  nameWithType: MessagePackReader.TryReadExtensionFormatHeader(out ExtensionHeader)
  fullName: AlgoSdk.MessagePack.MessagePackReader.TryReadExtensionFormatHeader(out AlgoSdk.MessagePack.ExtensionHeader)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.ExtensionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TryReadExtensionFormatHeader
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.ExtensionHeader.cs
    startLine: 6
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public bool TryReadExtensionFormatHeader(out ExtensionHeader header)
    parameters:
    - id: header
      type: AlgoSdk.MessagePack.ExtensionHeader
    return:
      type: System.Boolean
    content.vb: Public Function TryReadExtensionFormatHeader(ByRef header As ExtensionHeader) As Boolean
  overload: AlgoSdk.MessagePack.MessagePackReader.TryReadExtensionFormatHeader*
  nameWithType.vb: MessagePackReader.TryReadExtensionFormatHeader(ByRef ExtensionHeader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.MessagePack.MessagePackReader.TryReadExtensionFormatHeader(ByRef AlgoSdk.MessagePack.ExtensionHeader)
  name.vb: TryReadExtensionFormatHeader(ByRef ExtensionHeader)
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadInt8
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.ReadInt8
  id: ReadInt8
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: ReadInt8()
  nameWithType: MessagePackReader.ReadInt8()
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadInt8()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Integers.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ReadInt8
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Integers.cs
    startLine: 6
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public sbyte ReadInt8()
    return:
      type: System.SByte
    content.vb: Public Function ReadInt8 As SByte
  overload: AlgoSdk.MessagePack.MessagePackReader.ReadInt8*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadInt16
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.ReadInt16
  id: ReadInt16
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: ReadInt16()
  nameWithType: MessagePackReader.ReadInt16()
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadInt16()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Integers.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ReadInt16
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Integers.cs
    startLine: 60
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public short ReadInt16()
    return:
      type: System.Int16
    content.vb: Public Function ReadInt16 As Short
  overload: AlgoSdk.MessagePack.MessagePackReader.ReadInt16*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadInt32
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.ReadInt32
  id: ReadInt32
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: ReadInt32()
  nameWithType: MessagePackReader.ReadInt32()
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadInt32()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Integers.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ReadInt32
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Integers.cs
    startLine: 114
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public int ReadInt32()
    return:
      type: System.Int32
    content.vb: Public Function ReadInt32 As Integer
  overload: AlgoSdk.MessagePack.MessagePackReader.ReadInt32*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadInt64
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.ReadInt64
  id: ReadInt64
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: ReadInt64()
  nameWithType: MessagePackReader.ReadInt64()
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadInt64()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Integers.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ReadInt64
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Integers.cs
    startLine: 168
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public long ReadInt64()
    return:
      type: System.Int64
    content.vb: Public Function ReadInt64 As Long
  overload: AlgoSdk.MessagePack.MessagePackReader.ReadInt64*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadUInt8
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.ReadUInt8
  id: ReadUInt8
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: ReadUInt8()
  nameWithType: MessagePackReader.ReadUInt8()
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadUInt8()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Integers.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ReadUInt8
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Integers.cs
    startLine: 222
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public byte ReadUInt8()
    return:
      type: System.Byte
    content.vb: Public Function ReadUInt8 As Byte
  overload: AlgoSdk.MessagePack.MessagePackReader.ReadUInt8*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadUInt16
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.ReadUInt16
  id: ReadUInt16
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: ReadUInt16()
  nameWithType: MessagePackReader.ReadUInt16()
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadUInt16()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Integers.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ReadUInt16
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Integers.cs
    startLine: 276
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public ushort ReadUInt16()
    return:
      type: System.UInt16
    content.vb: Public Function ReadUInt16 As UShort
  overload: AlgoSdk.MessagePack.MessagePackReader.ReadUInt16*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadUInt32
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.ReadUInt32
  id: ReadUInt32
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: ReadUInt32()
  nameWithType: MessagePackReader.ReadUInt32()
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadUInt32()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Integers.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ReadUInt32
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Integers.cs
    startLine: 330
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public uint ReadUInt32()
    return:
      type: System.UInt32
    content.vb: Public Function ReadUInt32 As UInteger
  overload: AlgoSdk.MessagePack.MessagePackReader.ReadUInt32*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadUInt64
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.ReadUInt64
  id: ReadUInt64
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: ReadUInt64()
  nameWithType: MessagePackReader.ReadUInt64()
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadUInt64()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Integers.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ReadUInt64
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Integers.cs
    startLine: 384
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public ulong ReadUInt64()
    return:
      type: System.UInt64
    content.vb: Public Function ReadUInt64 As ULong
  overload: AlgoSdk.MessagePack.MessagePackReader.ReadUInt64*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadArrayHeader
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.ReadArrayHeader
  id: ReadArrayHeader
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: ReadArrayHeader()
  nameWithType: MessagePackReader.ReadArrayHeader()
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadArrayHeader()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Array.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ReadArrayHeader
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Array.cs
    startLine: 6
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public int ReadArrayHeader()
    return:
      type: System.Int32
    content.vb: Public Function ReadArrayHeader As Integer
  overload: AlgoSdk.MessagePack.MessagePackReader.ReadArrayHeader*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.MessagePack.MessagePackReader.TryReadArrayHeader(System.Int32@)
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.TryReadArrayHeader(System.Int32@)
  id: TryReadArrayHeader(System.Int32@)
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: TryReadArrayHeader(out Int32)
  nameWithType: MessagePackReader.TryReadArrayHeader(out Int32)
  fullName: AlgoSdk.MessagePack.MessagePackReader.TryReadArrayHeader(out System.Int32)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Array.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TryReadArrayHeader
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Array.cs
    startLine: 12
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public bool TryReadArrayHeader(out int count)
    parameters:
    - id: count
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function TryReadArrayHeader(ByRef count As Integer) As Boolean
  overload: AlgoSdk.MessagePack.MessagePackReader.TryReadArrayHeader*
  nameWithType.vb: MessagePackReader.TryReadArrayHeader(ByRef Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.MessagePack.MessagePackReader.TryReadArrayHeader(ByRef System.Int32)
  name.vb: TryReadArrayHeader(ByRef Int32)
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadBytes
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.ReadBytes
  id: ReadBytes
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: ReadBytes()
  nameWithType: MessagePackReader.ReadBytes()
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadBytes()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Bytes.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ReadBytes
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Bytes.cs
    startLine: 8
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public NativeSlice<byte> ReadBytes()
    return:
      type: Unity.Collections.NativeSlice{System.Byte}
    content.vb: Public Function ReadBytes As NativeSlice(Of Byte)
  overload: AlgoSdk.MessagePack.MessagePackReader.ReadBytes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadBytes``1
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.ReadBytes``1
  id: ReadBytes``1
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: ReadBytes<T>()
  nameWithType: MessagePackReader.ReadBytes<T>()
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadBytes<T>()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Bytes.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ReadBytes
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Bytes.cs
    startLine: 15
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: >-
      public T ReadBytes<T>()
          where T : struct, IByteArray
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function ReadBytes(Of T As {Structure, IByteArray}) As T
  overload: AlgoSdk.MessagePack.MessagePackReader.ReadBytes*
  nameWithType.vb: MessagePackReader.ReadBytes(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.MessagePack.MessagePackReader.ReadBytes(Of T)()
  name.vb: ReadBytes(Of T)()
- uid: AlgoSdk.MessagePack.MessagePackReader.UnsafeReadBytes(System.Void*,System.Int32)
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.UnsafeReadBytes(System.Void*,System.Int32)
  id: UnsafeReadBytes(System.Void*,System.Int32)
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: UnsafeReadBytes(Void*, Int32)
  nameWithType: MessagePackReader.UnsafeReadBytes(Void*, Int32)
  fullName: AlgoSdk.MessagePack.MessagePackReader.UnsafeReadBytes(System.Void*, System.Int32)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Bytes.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: UnsafeReadBytes
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Bytes.cs
    startLine: 26
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public void UnsafeReadBytes(void *ptr, int length)
    parameters:
    - id: ptr
      type: System.Void*
    - id: length
      type: System.Int32
    content.vb: Public Sub UnsafeReadBytes(ptr As  *, length As Integer)
  overload: AlgoSdk.MessagePack.MessagePackReader.UnsafeReadBytes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.MessagePack.MessagePackReader.TryReadBytes(Unity.Collections.NativeSlice{System.Byte}@)
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.TryReadBytes(Unity.Collections.NativeSlice{System.Byte}@)
  id: TryReadBytes(Unity.Collections.NativeSlice{System.Byte}@)
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: TryReadBytes(out NativeSlice<Byte>)
  nameWithType: MessagePackReader.TryReadBytes(out NativeSlice<Byte>)
  fullName: AlgoSdk.MessagePack.MessagePackReader.TryReadBytes(out Unity.Collections.NativeSlice<System.Byte>)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Bytes.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TryReadBytes
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Bytes.cs
    startLine: 40
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public bool TryReadBytes(out NativeSlice<byte> bytes)
    parameters:
    - id: bytes
      type: Unity.Collections.NativeSlice{System.Byte}
    return:
      type: System.Boolean
    content.vb: Public Function TryReadBytes(ByRef bytes As NativeSlice(Of Byte)) As Boolean
  overload: AlgoSdk.MessagePack.MessagePackReader.TryReadBytes*
  nameWithType.vb: MessagePackReader.TryReadBytes(ByRef NativeSlice(Of Byte))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.MessagePack.MessagePackReader.TryReadBytes(ByRef Unity.Collections.NativeSlice(Of System.Byte))
  name.vb: TryReadBytes(ByRef NativeSlice(Of Byte))
- uid: AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(System.Int16@)
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(System.Int16@)
  id: TryReadBigEndian(System.Int16@)
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: TryReadBigEndian(out Int16)
  nameWithType: MessagePackReader.TryReadBigEndian(out Int16)
  fullName: AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(out System.Int16)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.BigEndian.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TryReadBigEndian
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.BigEndian.cs
    startLine: 7
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public bool TryReadBigEndian(out short value)
    parameters:
    - id: value
      type: System.Int16
    return:
      type: System.Boolean
    content.vb: Public Function TryReadBigEndian(ByRef value As Short) As Boolean
  overload: AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian*
  nameWithType.vb: MessagePackReader.TryReadBigEndian(ByRef Int16)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(ByRef System.Int16)
  name.vb: TryReadBigEndian(ByRef Int16)
- uid: AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(System.UInt16@)
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(System.UInt16@)
  id: TryReadBigEndian(System.UInt16@)
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: TryReadBigEndian(out UInt16)
  nameWithType: MessagePackReader.TryReadBigEndian(out UInt16)
  fullName: AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(out System.UInt16)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.BigEndian.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TryReadBigEndian
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.BigEndian.cs
    startLine: 16
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public bool TryReadBigEndian(out ushort value)
    parameters:
    - id: value
      type: System.UInt16
    return:
      type: System.Boolean
    content.vb: Public Function TryReadBigEndian(ByRef value As UShort) As Boolean
  overload: AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian*
  nameWithType.vb: MessagePackReader.TryReadBigEndian(ByRef UInt16)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(ByRef System.UInt16)
  name.vb: TryReadBigEndian(ByRef UInt16)
- uid: AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(System.Int32@)
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(System.Int32@)
  id: TryReadBigEndian(System.Int32@)
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: TryReadBigEndian(out Int32)
  nameWithType: MessagePackReader.TryReadBigEndian(out Int32)
  fullName: AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(out System.Int32)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.BigEndian.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TryReadBigEndian
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.BigEndian.cs
    startLine: 25
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public bool TryReadBigEndian(out int value)
    parameters:
    - id: value
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function TryReadBigEndian(ByRef value As Integer) As Boolean
  overload: AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian*
  nameWithType.vb: MessagePackReader.TryReadBigEndian(ByRef Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(ByRef System.Int32)
  name.vb: TryReadBigEndian(ByRef Int32)
- uid: AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(System.UInt32@)
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(System.UInt32@)
  id: TryReadBigEndian(System.UInt32@)
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: TryReadBigEndian(out UInt32)
  nameWithType: MessagePackReader.TryReadBigEndian(out UInt32)
  fullName: AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(out System.UInt32)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.BigEndian.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TryReadBigEndian
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.BigEndian.cs
    startLine: 34
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public bool TryReadBigEndian(out uint value)
    parameters:
    - id: value
      type: System.UInt32
    return:
      type: System.Boolean
    content.vb: Public Function TryReadBigEndian(ByRef value As UInteger) As Boolean
  overload: AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian*
  nameWithType.vb: MessagePackReader.TryReadBigEndian(ByRef UInt32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(ByRef System.UInt32)
  name.vb: TryReadBigEndian(ByRef UInt32)
- uid: AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(System.Int64@)
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(System.Int64@)
  id: TryReadBigEndian(System.Int64@)
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: TryReadBigEndian(out Int64)
  nameWithType: MessagePackReader.TryReadBigEndian(out Int64)
  fullName: AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(out System.Int64)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.BigEndian.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TryReadBigEndian
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.BigEndian.cs
    startLine: 43
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public bool TryReadBigEndian(out long value)
    parameters:
    - id: value
      type: System.Int64
    return:
      type: System.Boolean
    content.vb: Public Function TryReadBigEndian(ByRef value As Long) As Boolean
  overload: AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian*
  nameWithType.vb: MessagePackReader.TryReadBigEndian(ByRef Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(ByRef System.Int64)
  name.vb: TryReadBigEndian(ByRef Int64)
- uid: AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(System.UInt64@)
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(System.UInt64@)
  id: TryReadBigEndian(System.UInt64@)
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: TryReadBigEndian(out UInt64)
  nameWithType: MessagePackReader.TryReadBigEndian(out UInt64)
  fullName: AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(out System.UInt64)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.BigEndian.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TryReadBigEndian
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.BigEndian.cs
    startLine: 52
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public bool TryReadBigEndian(out ulong value)
    parameters:
    - id: value
      type: System.UInt64
    return:
      type: System.Boolean
    content.vb: Public Function TryReadBigEndian(ByRef value As ULong) As Boolean
  overload: AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian*
  nameWithType.vb: MessagePackReader.TryReadBigEndian(ByRef UInt64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian(ByRef System.UInt64)
  name.vb: TryReadBigEndian(ByRef UInt64)
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadMapHeader
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.ReadMapHeader
  id: ReadMapHeader
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: ReadMapHeader()
  nameWithType: MessagePackReader.ReadMapHeader()
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadMapHeader()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Map.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ReadMapHeader
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Map.cs
    startLine: 6
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public int ReadMapHeader()
    return:
      type: System.Int32
    content.vb: Public Function ReadMapHeader As Integer
  overload: AlgoSdk.MessagePack.MessagePackReader.ReadMapHeader*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.MessagePack.MessagePackReader.TryReadMapHeader(System.Int32@)
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.TryReadMapHeader(System.Int32@)
  id: TryReadMapHeader(System.Int32@)
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: TryReadMapHeader(out Int32)
  nameWithType: MessagePackReader.TryReadMapHeader(out Int32)
  fullName: AlgoSdk.MessagePack.MessagePackReader.TryReadMapHeader(out System.Int32)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Map.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TryReadMapHeader
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Map.cs
    startLine: 12
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public bool TryReadMapHeader(out int count)
    parameters:
    - id: count
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function TryReadMapHeader(ByRef count As Integer) As Boolean
  overload: AlgoSdk.MessagePack.MessagePackReader.TryReadMapHeader*
  nameWithType.vb: MessagePackReader.TryReadMapHeader(ByRef Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.MessagePack.MessagePackReader.TryReadMapHeader(ByRef System.Int32)
  name.vb: TryReadMapHeader(ByRef Int32)
- uid: AlgoSdk.MessagePack.MessagePackReader.TryReadNil
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.TryReadNil
  id: TryReadNil
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: TryReadNil()
  nameWithType: MessagePackReader.TryReadNil()
  fullName: AlgoSdk.MessagePack.MessagePackReader.TryReadNil()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Nil.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TryReadNil
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.Nil.cs
    startLine: 4
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: public bool TryReadNil()
    return:
      type: System.Boolean
    content.vb: Public Function TryReadNil As Boolean
  overload: AlgoSdk.MessagePack.MessagePackReader.TryReadNil*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadString``1(``0@)
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.ReadString``1(``0@)
  id: ReadString``1(``0@)
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: ReadString<T>(ref T)
  nameWithType: MessagePackReader.ReadString<T>(ref T)
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadString<T>(ref T)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.String.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ReadString
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.String.cs
    startLine: 6
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: >-
      public void ReadString<T>(ref T fs)
          where T : struct, INativeList<byte>, IUTF8Bytes
    parameters:
    - id: fs
      type: '{T}'
    typeParameters:
    - id: T
    content.vb: Public Sub ReadString(Of T As {Structure, INativeList(Of Byte), IUTF8Bytes})(ByRef fs As T)
  overload: AlgoSdk.MessagePack.MessagePackReader.ReadString*
  nameWithType.vb: MessagePackReader.ReadString(Of T)(ByRef T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.MessagePack.MessagePackReader.ReadString(Of T)(ByRef T)
  name.vb: ReadString(Of T)(ByRef T)
- uid: AlgoSdk.MessagePack.MessagePackReader.TryReadString``1(``0@)
  commentId: M:AlgoSdk.MessagePack.MessagePackReader.TryReadString``1(``0@)
  id: TryReadString``1(``0@)
  parent: AlgoSdk.MessagePack.MessagePackReader
  langs:
  - csharp
  - vb
  name: TryReadString<T>(ref T)
  nameWithType: MessagePackReader.TryReadString<T>(ref T)
  fullName: AlgoSdk.MessagePack.MessagePackReader.TryReadString<T>(ref T)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.String.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TryReadString
    path: ../CareBoo.AlgoSdk/Serialization/MessagePack/MessagePackReader/MessagePackReader.String.cs
    startLine: 13
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.MessagePack
  syntax:
    content: >-
      public bool TryReadString<T>(ref T fs)
          where T : struct, INativeList<byte>, IUTF8Bytes
    parameters:
    - id: fs
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Function TryReadString(Of T As {Structure, INativeList(Of Byte), IUTF8Bytes})(ByRef fs As T) As Boolean
  overload: AlgoSdk.MessagePack.MessagePackReader.TryReadString*
  nameWithType.vb: MessagePackReader.TryReadString(Of T)(ByRef T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.MessagePack.MessagePackReader.TryReadString(Of T)(ByRef T)
  name.vb: TryReadString(Of T)(ByRef T)
references:
- uid: AlgoSdk.MessagePack
  commentId: N:AlgoSdk.MessagePack
  name: AlgoSdk.MessagePack
  nameWithType: AlgoSdk.MessagePack
  fullName: AlgoSdk.MessagePack
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadBool*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.ReadBool
  name: ReadBool
  nameWithType: MessagePackReader.ReadBool
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadBool
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AlgoSdk.MessagePack.MessagePackReader.#ctor*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.#ctor
  name: MessagePackReader
  nameWithType: MessagePackReader.MessagePackReader
  fullName: AlgoSdk.MessagePack.MessagePackReader.MessagePackReader
- uid: Unity.Collections.NativeArray{System.Byte}.ReadOnly
  commentId: T:Unity.Collections.NativeArray{System.Byte}.ReadOnly
  parent: Unity.Collections
  definition: Unity.Collections.NativeArray`1.ReadOnly
  name: NativeArray.ReadOnly<>
  nameWithType: NativeArray.ReadOnly<>
  fullName: Unity.Collections.NativeArray.ReadOnly<>
  nameWithType.vb: NativeArray.ReadOnly(Of )
  fullName.vb: Unity.Collections.NativeArray.ReadOnly(Of )
  name.vb: NativeArray.ReadOnly(Of )
  spec.csharp:
  - uid: Unity.Collections.NativeArray`1.ReadOnly
    name: NativeArray.ReadOnly
    nameWithType: NativeArray.ReadOnly
    fullName: Unity.Collections.NativeArray.ReadOnly
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Unity.Collections.NativeArray`1.ReadOnly
    name: NativeArray.ReadOnly
    nameWithType: NativeArray.ReadOnly
    fullName: Unity.Collections.NativeArray.ReadOnly
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Collections.NativeArray`1.ReadOnly
  commentId: T:Unity.Collections.NativeArray`1.ReadOnly
  isExternal: true
  name: NativeArray.ReadOnly<>
  nameWithType: NativeArray.ReadOnly<>
  fullName: Unity.Collections.NativeArray.ReadOnly<>
  nameWithType.vb: NativeArray.ReadOnly(Of )
  fullName.vb: Unity.Collections.NativeArray.ReadOnly(Of )
  name.vb: NativeArray.ReadOnly(Of )
  spec.csharp:
  - uid: Unity.Collections.NativeArray`1.ReadOnly
    name: NativeArray.ReadOnly
    nameWithType: NativeArray.ReadOnly
    fullName: Unity.Collections.NativeArray.ReadOnly
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Unity.Collections.NativeArray`1.ReadOnly
    name: NativeArray.ReadOnly
    nameWithType: NativeArray.ReadOnly
    fullName: Unity.Collections.NativeArray.ReadOnly
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Collections
  commentId: N:Unity.Collections
  name: Unity.Collections
  nameWithType: Unity.Collections
  fullName: Unity.Collections
- uid: AlgoSdk.MessagePack.MessagePackReader.Peek*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.Peek
  name: Peek
  nameWithType: MessagePackReader.Peek
  fullName: AlgoSdk.MessagePack.MessagePackReader.Peek
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadByte*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.ReadByte
  name: ReadByte
  nameWithType: MessagePackReader.ReadByte
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadByte
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadSByte*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.ReadSByte
  name: ReadSByte
  nameWithType: MessagePackReader.ReadSByte
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadSByte
- uid: System.SByte
  commentId: T:System.SByte
  parent: System
  isExternal: true
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: AlgoSdk.MessagePack.MessagePackReader.Skip*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.Skip
  name: Skip
  nameWithType: MessagePackReader.Skip
  fullName: AlgoSdk.MessagePack.MessagePackReader.Skip
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadRaw*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.ReadRaw
  name: ReadRaw
  nameWithType: MessagePackReader.ReadRaw
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadRaw
- uid: Unity.Collections.NativeList{System.Byte}
  commentId: T:Unity.Collections.NativeList{System.Byte}
  parent: Unity.Collections
  definition: Unity.Collections.NativeList`1
  name: NativeList<Byte>
  nameWithType: NativeList<Byte>
  fullName: Unity.Collections.NativeList<System.Byte>
  nameWithType.vb: NativeList(Of Byte)
  fullName.vb: Unity.Collections.NativeList(Of System.Byte)
  name.vb: NativeList(Of Byte)
  spec.csharp:
  - uid: Unity.Collections.NativeList`1
    name: NativeList
    nameWithType: NativeList
    fullName: Unity.Collections.NativeList
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Unity.Collections.NativeList`1
    name: NativeList
    nameWithType: NativeList
    fullName: Unity.Collections.NativeList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Collections.NativeList`1
  commentId: T:Unity.Collections.NativeList`1
  name: NativeList<T>
  nameWithType: NativeList<T>
  fullName: Unity.Collections.NativeList<T>
  nameWithType.vb: NativeList(Of T)
  fullName.vb: Unity.Collections.NativeList(Of T)
  name.vb: NativeList(Of T)
  spec.csharp:
  - uid: Unity.Collections.NativeList`1
    name: NativeList
    nameWithType: NativeList
    fullName: Unity.Collections.NativeList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Unity.Collections.NativeList`1
    name: NativeList
    nameWithType: NativeList
    fullName: Unity.Collections.NativeList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.MessagePack.MessagePackReader.TryRead*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.TryRead
  name: TryRead
  nameWithType: MessagePackReader.TryRead
  fullName: AlgoSdk.MessagePack.MessagePackReader.TryRead
- uid: AlgoSdk.MessagePack.MessagePackReader.TryPeek*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.TryPeek
  name: TryPeek
  nameWithType: MessagePackReader.TryPeek
  fullName: AlgoSdk.MessagePack.MessagePackReader.TryPeek
- uid: AlgoSdk.MessagePack.MessagePackReader.TryReadRaw*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.TryReadRaw
  name: TryReadRaw
  nameWithType: MessagePackReader.TryReadRaw
  fullName: AlgoSdk.MessagePack.MessagePackReader.TryReadRaw
- uid: AlgoSdk.MessagePack.MessagePackReader.TrySkip*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.TrySkip
  name: TrySkip
  nameWithType: MessagePackReader.TrySkip
  fullName: AlgoSdk.MessagePack.MessagePackReader.TrySkip
- uid: AlgoSdk.MessagePack.MessagePackReader.TryReadExtensionFormatHeader*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.TryReadExtensionFormatHeader
  name: TryReadExtensionFormatHeader
  nameWithType: MessagePackReader.TryReadExtensionFormatHeader
  fullName: AlgoSdk.MessagePack.MessagePackReader.TryReadExtensionFormatHeader
- uid: AlgoSdk.MessagePack.ExtensionHeader
  commentId: T:AlgoSdk.MessagePack.ExtensionHeader
  parent: AlgoSdk.MessagePack
  name: ExtensionHeader
  nameWithType: ExtensionHeader
  fullName: AlgoSdk.MessagePack.ExtensionHeader
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadInt8*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.ReadInt8
  name: ReadInt8
  nameWithType: MessagePackReader.ReadInt8
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadInt8
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadInt16*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.ReadInt16
  name: ReadInt16
  nameWithType: MessagePackReader.ReadInt16
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadInt16
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadInt32*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.ReadInt32
  name: ReadInt32
  nameWithType: MessagePackReader.ReadInt32
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadInt32
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadInt64*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.ReadInt64
  name: ReadInt64
  nameWithType: MessagePackReader.ReadInt64
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadInt64
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadUInt8*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.ReadUInt8
  name: ReadUInt8
  nameWithType: MessagePackReader.ReadUInt8
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadUInt8
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadUInt16*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.ReadUInt16
  name: ReadUInt16
  nameWithType: MessagePackReader.ReadUInt16
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadUInt16
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadUInt32*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.ReadUInt32
  name: ReadUInt32
  nameWithType: MessagePackReader.ReadUInt32
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadUInt32
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadUInt64*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.ReadUInt64
  name: ReadUInt64
  nameWithType: MessagePackReader.ReadUInt64
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadUInt64
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadArrayHeader*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.ReadArrayHeader
  name: ReadArrayHeader
  nameWithType: MessagePackReader.ReadArrayHeader
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadArrayHeader
- uid: AlgoSdk.MessagePack.MessagePackReader.TryReadArrayHeader*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.TryReadArrayHeader
  name: TryReadArrayHeader
  nameWithType: MessagePackReader.TryReadArrayHeader
  fullName: AlgoSdk.MessagePack.MessagePackReader.TryReadArrayHeader
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadBytes*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.ReadBytes
  name: ReadBytes
  nameWithType: MessagePackReader.ReadBytes
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadBytes
- uid: Unity.Collections.NativeSlice{System.Byte}
  commentId: T:Unity.Collections.NativeSlice{System.Byte}
  parent: Unity.Collections
  definition: Unity.Collections.NativeSlice`1
  name: NativeSlice<Byte>
  nameWithType: NativeSlice<Byte>
  fullName: Unity.Collections.NativeSlice<System.Byte>
  nameWithType.vb: NativeSlice(Of Byte)
  fullName.vb: Unity.Collections.NativeSlice(Of System.Byte)
  name.vb: NativeSlice(Of Byte)
  spec.csharp:
  - uid: Unity.Collections.NativeSlice`1
    name: NativeSlice
    nameWithType: NativeSlice
    fullName: Unity.Collections.NativeSlice
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Unity.Collections.NativeSlice`1
    name: NativeSlice
    nameWithType: NativeSlice
    fullName: Unity.Collections.NativeSlice
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Collections.NativeSlice`1
  commentId: T:Unity.Collections.NativeSlice`1
  isExternal: true
  name: NativeSlice<T>
  nameWithType: NativeSlice<T>
  fullName: Unity.Collections.NativeSlice<T>
  nameWithType.vb: NativeSlice(Of T)
  fullName.vb: Unity.Collections.NativeSlice(Of T)
  name.vb: NativeSlice(Of T)
  spec.csharp:
  - uid: Unity.Collections.NativeSlice`1
    name: NativeSlice
    nameWithType: NativeSlice
    fullName: Unity.Collections.NativeSlice
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Unity.Collections.NativeSlice`1
    name: NativeSlice
    nameWithType: NativeSlice
    fullName: Unity.Collections.NativeSlice
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: AlgoSdk.MessagePack.MessagePackReader.UnsafeReadBytes*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.UnsafeReadBytes
  name: UnsafeReadBytes
  nameWithType: MessagePackReader.UnsafeReadBytes
  fullName: AlgoSdk.MessagePack.MessagePackReader.UnsafeReadBytes
- uid: System.Void*
  isExternal: true
  name: Void*
  nameWithType: Void*
  fullName: System.Void*
  spec.csharp:
  - uid: System.Void
    name: Void
    nameWithType: Void
    fullName: System.Void
    isExternal: true
  - name: '*'
    nameWithType: '*'
    fullName: '*'
  spec.vb:
  - uid: System.Void
    name: Void
    nameWithType: Void
    fullName: System.Void
    isExternal: true
  - name: '*'
    nameWithType: '*'
    fullName: '*'
- uid: AlgoSdk.MessagePack.MessagePackReader.TryReadBytes*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.TryReadBytes
  name: TryReadBytes
  nameWithType: MessagePackReader.TryReadBytes
  fullName: AlgoSdk.MessagePack.MessagePackReader.TryReadBytes
- uid: AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian
  name: TryReadBigEndian
  nameWithType: MessagePackReader.TryReadBigEndian
  fullName: AlgoSdk.MessagePack.MessagePackReader.TryReadBigEndian
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadMapHeader*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.ReadMapHeader
  name: ReadMapHeader
  nameWithType: MessagePackReader.ReadMapHeader
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadMapHeader
- uid: AlgoSdk.MessagePack.MessagePackReader.TryReadMapHeader*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.TryReadMapHeader
  name: TryReadMapHeader
  nameWithType: MessagePackReader.TryReadMapHeader
  fullName: AlgoSdk.MessagePack.MessagePackReader.TryReadMapHeader
- uid: AlgoSdk.MessagePack.MessagePackReader.TryReadNil*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.TryReadNil
  name: TryReadNil
  nameWithType: MessagePackReader.TryReadNil
  fullName: AlgoSdk.MessagePack.MessagePackReader.TryReadNil
- uid: AlgoSdk.MessagePack.MessagePackReader.ReadString*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.ReadString
  name: ReadString
  nameWithType: MessagePackReader.ReadString
  fullName: AlgoSdk.MessagePack.MessagePackReader.ReadString
- uid: AlgoSdk.MessagePack.MessagePackReader.TryReadString*
  commentId: Overload:AlgoSdk.MessagePack.MessagePackReader.TryReadString
  name: TryReadString
  nameWithType: MessagePackReader.TryReadString
  fullName: AlgoSdk.MessagePack.MessagePackReader.TryReadString
