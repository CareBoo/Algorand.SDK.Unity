### YamlMime:ManagedReference
items:
- uid: AlgoSdk.ByteEnumComparer`1
  commentId: T:AlgoSdk.ByteEnumComparer`1
  id: ByteEnumComparer`1
  parent: AlgoSdk
  children:
  - AlgoSdk.ByteEnumComparer`1.Equals(`0,`0)
  - AlgoSdk.ByteEnumComparer`1.GetHashCode(`0)
  - AlgoSdk.ByteEnumComparer`1.Instance
  - AlgoSdk.ByteEnumComparer`1.System#Collections#Generic#IEqualityComparer{T}#Equals(`0,`0)
  - AlgoSdk.ByteEnumComparer`1.System#Collections#Generic#IEqualityComparer{T}#GetHashCode(`0)
  langs:
  - csharp
  - vb
  name: ByteEnumComparer<T>
  nameWithType: ByteEnumComparer<T>
  fullName: AlgoSdk.ByteEnumComparer<T>
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/EqualityComparers.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ByteEnumComparer
    path: ../CareBoo.AlgoSdk/Serialization/EqualityComparers.cs
    startLine: 6
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: 'public struct ByteEnumComparer<T> : IEqualityComparer<T> where T : Enum'
    typeParameters:
    - id: T
    content.vb: >-
      Public Structure ByteEnumComparer(Of T As  Enum)
          Implements IEqualityComparer(Of T)
  implements:
  - System.Collections.Generic.IEqualityComparer{{T}}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: ByteEnumComparer(Of T)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  fullName.vb: AlgoSdk.ByteEnumComparer(Of T)
  name.vb: ByteEnumComparer(Of T)
- uid: AlgoSdk.ByteEnumComparer`1.System#Collections#Generic#IEqualityComparer{T}#Equals(`0,`0)
  commentId: M:AlgoSdk.ByteEnumComparer`1.System#Collections#Generic#IEqualityComparer{T}#Equals(`0,`0)
  id: System#Collections#Generic#IEqualityComparer{T}#Equals(`0,`0)
  isEii: true
  parent: AlgoSdk.ByteEnumComparer`1
  langs:
  - csharp
  - vb
  name: IEqualityComparer<T>.Equals(T, T)
  nameWithType: ByteEnumComparer<T>.IEqualityComparer<T>.Equals(T, T)
  fullName: AlgoSdk.ByteEnumComparer<T>.System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/EqualityComparers.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: System.Collections.Generic.IEqualityComparer<T>.Equals
    path: ../CareBoo.AlgoSdk/Serialization/EqualityComparers.cs
    startLine: 9
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: bool IEqualityComparer<T>.Equals(T x, T y)
    parameters:
    - id: x
      type: '{T}'
    - id: y
      type: '{T}'
    return:
      type: System.Boolean
    content.vb: Function System.Collections.Generic.IEqualityComparer<T>.Equals(x As T, y As T) As Boolean Implements IEqualityComparer(Of T).Equals
  overload: AlgoSdk.ByteEnumComparer`1.System#Collections#Generic#IEqualityComparer{T}#Equals*
  implements:
  - System.Collections.Generic.IEqualityComparer{{T}}.Equals({T},{T})
  nameWithType.vb: ByteEnumComparer(Of T).System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)
  fullName.vb: AlgoSdk.ByteEnumComparer(Of T).System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)
  name.vb: System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)
- uid: AlgoSdk.ByteEnumComparer`1.System#Collections#Generic#IEqualityComparer{T}#GetHashCode(`0)
  commentId: M:AlgoSdk.ByteEnumComparer`1.System#Collections#Generic#IEqualityComparer{T}#GetHashCode(`0)
  id: System#Collections#Generic#IEqualityComparer{T}#GetHashCode(`0)
  isEii: true
  parent: AlgoSdk.ByteEnumComparer`1
  langs:
  - csharp
  - vb
  name: IEqualityComparer<T>.GetHashCode(T)
  nameWithType: ByteEnumComparer<T>.IEqualityComparer<T>.GetHashCode(T)
  fullName: AlgoSdk.ByteEnumComparer<T>.System.Collections.Generic.IEqualityComparer<T>.GetHashCode(T)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/EqualityComparers.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: System.Collections.Generic.IEqualityComparer<T>.GetHashCode
    path: ../CareBoo.AlgoSdk/Serialization/EqualityComparers.cs
    startLine: 10
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: int IEqualityComparer<T>.GetHashCode(T obj)
    parameters:
    - id: obj
      type: '{T}'
    return:
      type: System.Int32
    content.vb: Function System.Collections.Generic.IEqualityComparer<T>.GetHashCode(obj As T) As Integer Implements IEqualityComparer(Of T).GetHashCode
  overload: AlgoSdk.ByteEnumComparer`1.System#Collections#Generic#IEqualityComparer{T}#GetHashCode*
  implements:
  - System.Collections.Generic.IEqualityComparer{{T}}.GetHashCode({T})
  nameWithType.vb: ByteEnumComparer(Of T).System.Collections.Generic.IEqualityComparer<T>.GetHashCode(T)
  fullName.vb: AlgoSdk.ByteEnumComparer(Of T).System.Collections.Generic.IEqualityComparer<T>.GetHashCode(T)
  name.vb: System.Collections.Generic.IEqualityComparer<T>.GetHashCode(T)
- uid: AlgoSdk.ByteEnumComparer`1.Equals(`0,`0)
  commentId: M:AlgoSdk.ByteEnumComparer`1.Equals(`0,`0)
  id: Equals(`0,`0)
  parent: AlgoSdk.ByteEnumComparer`1
  langs:
  - csharp
  - vb
  name: Equals(T, T)
  nameWithType: ByteEnumComparer<T>.Equals(T, T)
  fullName: AlgoSdk.ByteEnumComparer<T>.Equals(T, T)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/EqualityComparers.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Equals
    path: ../CareBoo.AlgoSdk/Serialization/EqualityComparers.cs
    startLine: 12
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public static bool Equals(T x, T y)
    parameters:
    - id: x
      type: '{T}'
    - id: y
      type: '{T}'
    return:
      type: System.Boolean
    content.vb: Public Shared Function Equals(x As T, y As T) As Boolean
  overload: AlgoSdk.ByteEnumComparer`1.Equals*
  nameWithType.vb: ByteEnumComparer(Of T).Equals(T, T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.ByteEnumComparer(Of T).Equals(T, T)
- uid: AlgoSdk.ByteEnumComparer`1.GetHashCode(`0)
  commentId: M:AlgoSdk.ByteEnumComparer`1.GetHashCode(`0)
  id: GetHashCode(`0)
  parent: AlgoSdk.ByteEnumComparer`1
  langs:
  - csharp
  - vb
  name: GetHashCode(T)
  nameWithType: ByteEnumComparer<T>.GetHashCode(T)
  fullName: AlgoSdk.ByteEnumComparer<T>.GetHashCode(T)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/EqualityComparers.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetHashCode
    path: ../CareBoo.AlgoSdk/Serialization/EqualityComparers.cs
    startLine: 17
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public static int GetHashCode(T obj)
    parameters:
    - id: obj
      type: '{T}'
    return:
      type: System.Int32
    content.vb: Public Shared Function GetHashCode(obj As T) As Integer
  overload: AlgoSdk.ByteEnumComparer`1.GetHashCode*
  nameWithType.vb: ByteEnumComparer(Of T).GetHashCode(T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.ByteEnumComparer(Of T).GetHashCode(T)
- uid: AlgoSdk.ByteEnumComparer`1.Instance
  commentId: F:AlgoSdk.ByteEnumComparer`1.Instance
  id: Instance
  parent: AlgoSdk.ByteEnumComparer`1
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: ByteEnumComparer<T>.Instance
  fullName: AlgoSdk.ByteEnumComparer<T>.Instance
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/EqualityComparers.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Instance
    path: ../CareBoo.AlgoSdk/Serialization/EqualityComparers.cs
    startLine: 22
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public static readonly ByteEnumComparer<T> Instance
    return:
      type: AlgoSdk.ByteEnumComparer`1
    content.vb: Public Shared ReadOnly Instance As ByteEnumComparer(Of T)
  nameWithType.vb: ByteEnumComparer(Of T).Instance
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
  fullName.vb: AlgoSdk.ByteEnumComparer(Of T).Instance
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: System.Collections.Generic.IEqualityComparer{{T}}
  commentId: T:System.Collections.Generic.IEqualityComparer{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AlgoSdk.ByteEnumComparer`1.System#Collections#Generic#IEqualityComparer{T}#Equals*
  commentId: Overload:AlgoSdk.ByteEnumComparer`1.System#Collections#Generic#IEqualityComparer{T}#Equals
  name: IEqualityComparer<T>.Equals
  nameWithType: ByteEnumComparer<T>.IEqualityComparer<T>.Equals
  fullName: AlgoSdk.ByteEnumComparer<T>.System.Collections.Generic.IEqualityComparer<T>.Equals
  nameWithType.vb: ByteEnumComparer(Of T).System.Collections.Generic.IEqualityComparer<T>.Equals
  fullName.vb: AlgoSdk.ByteEnumComparer(Of T).System.Collections.Generic.IEqualityComparer<T>.Equals
  name.vb: System.Collections.Generic.IEqualityComparer<T>.Equals
- uid: System.Collections.Generic.IEqualityComparer{{T}}.Equals({T},{T})
  commentId: M:System.Collections.Generic.IEqualityComparer{`0}.Equals(`0,`0)
  parent: System.Collections.Generic.IEqualityComparer{{T}}
  definition: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  name: Equals(T, T)
  nameWithType: IEqualityComparer<T>.Equals(T, T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)
  nameWithType.vb: IEqualityComparer(Of T).Equals(T, T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T).Equals(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer<T>.Equals
    fullName: System.Collections.Generic.IEqualityComparer<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer(Of T).Equals
    fullName: System.Collections.Generic.IEqualityComparer(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  commentId: M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  isExternal: true
  name: Equals(T, T)
  nameWithType: IEqualityComparer<T>.Equals(T, T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)
  nameWithType.vb: IEqualityComparer(Of T).Equals(T, T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T).Equals(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer<T>.Equals
    fullName: System.Collections.Generic.IEqualityComparer<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer(Of T).Equals
    fullName: System.Collections.Generic.IEqualityComparer(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: AlgoSdk.ByteEnumComparer`1.System#Collections#Generic#IEqualityComparer{T}#GetHashCode*
  commentId: Overload:AlgoSdk.ByteEnumComparer`1.System#Collections#Generic#IEqualityComparer{T}#GetHashCode
  name: IEqualityComparer<T>.GetHashCode
  nameWithType: ByteEnumComparer<T>.IEqualityComparer<T>.GetHashCode
  fullName: AlgoSdk.ByteEnumComparer<T>.System.Collections.Generic.IEqualityComparer<T>.GetHashCode
  nameWithType.vb: ByteEnumComparer(Of T).System.Collections.Generic.IEqualityComparer<T>.GetHashCode
  fullName.vb: AlgoSdk.ByteEnumComparer(Of T).System.Collections.Generic.IEqualityComparer<T>.GetHashCode
  name.vb: System.Collections.Generic.IEqualityComparer<T>.GetHashCode
- uid: System.Collections.Generic.IEqualityComparer{{T}}.GetHashCode({T})
  commentId: M:System.Collections.Generic.IEqualityComparer{`0}.GetHashCode(`0)
  parent: System.Collections.Generic.IEqualityComparer{{T}}
  definition: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  name: GetHashCode(T)
  nameWithType: IEqualityComparer<T>.GetHashCode(T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode(T)
  nameWithType.vb: IEqualityComparer(Of T).GetHashCode(T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode(T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer<T>.GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer(Of T).GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  commentId: M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  isExternal: true
  name: GetHashCode(T)
  nameWithType: IEqualityComparer<T>.GetHashCode(T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode(T)
  nameWithType.vb: IEqualityComparer(Of T).GetHashCode(T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode(T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer<T>.GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer(Of T).GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.ByteEnumComparer`1.Equals*
  commentId: Overload:AlgoSdk.ByteEnumComparer`1.Equals
  name: Equals
  nameWithType: ByteEnumComparer<T>.Equals
  fullName: AlgoSdk.ByteEnumComparer<T>.Equals
  nameWithType.vb: ByteEnumComparer(Of T).Equals
  fullName.vb: AlgoSdk.ByteEnumComparer(Of T).Equals
- uid: AlgoSdk.ByteEnumComparer`1.GetHashCode*
  commentId: Overload:AlgoSdk.ByteEnumComparer`1.GetHashCode
  name: GetHashCode
  nameWithType: ByteEnumComparer<T>.GetHashCode
  fullName: AlgoSdk.ByteEnumComparer<T>.GetHashCode
  nameWithType.vb: ByteEnumComparer(Of T).GetHashCode
  fullName.vb: AlgoSdk.ByteEnumComparer(Of T).GetHashCode
- uid: AlgoSdk.ByteEnumComparer`1
  commentId: T:AlgoSdk.ByteEnumComparer`1
  parent: AlgoSdk
  name: ByteEnumComparer<T>
  nameWithType: ByteEnumComparer<T>
  fullName: AlgoSdk.ByteEnumComparer<T>
  nameWithType.vb: ByteEnumComparer(Of T)
  fullName.vb: AlgoSdk.ByteEnumComparer(Of T)
  name.vb: ByteEnumComparer(Of T)
  spec.csharp:
  - uid: AlgoSdk.ByteEnumComparer`1
    name: ByteEnumComparer
    nameWithType: ByteEnumComparer
    fullName: AlgoSdk.ByteEnumComparer
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.ByteEnumComparer`1
    name: ByteEnumComparer
    nameWithType: ByteEnumComparer
    fullName: AlgoSdk.ByteEnumComparer
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
