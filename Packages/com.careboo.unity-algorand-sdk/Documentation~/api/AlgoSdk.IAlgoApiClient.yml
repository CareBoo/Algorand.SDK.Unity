### YamlMime:ManagedReference
items:
- uid: AlgoSdk.IAlgoApiClient
  commentId: T:AlgoSdk.IAlgoApiClient
  id: IAlgoApiClient
  parent: AlgoSdk
  children:
  - AlgoSdk.IAlgoApiClient.Address
  - AlgoSdk.IAlgoApiClient.Token
  - AlgoSdk.IAlgoApiClient.TokenHeader
  langs:
  - csharp
  - vb
  name: IAlgoApiClient
  nameWithType: IAlgoApiClient
  fullName: AlgoSdk.IAlgoApiClient
  type: Interface
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/IAlgoApiClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: IAlgoApiClient
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/IAlgoApiClient.cs
    startLine: 2
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public interface IAlgoApiClient
    content.vb: Public Interface IAlgoApiClient
  extensionMethods:
  - AlgoSdk.IAlgoApiClient.AlgoSdk.TokenizedClientExtensions.GetUrl``1(System.String)
  - AlgoSdk.IAlgoApiClient.AlgoSdk.TokenizedClientExtensions.Get``1(System.String)
  - AlgoSdk.IAlgoApiClient.AlgoSdk.TokenizedClientExtensions.Post``1(System.String)
  - AlgoSdk.IAlgoApiClient.AlgoSdk.TokenizedClientExtensions.Delete``1(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: AlgoSdk.IAlgoApiClient.Address
  commentId: P:AlgoSdk.IAlgoApiClient.Address
  id: Address
  parent: AlgoSdk.IAlgoApiClient
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: IAlgoApiClient.Address
  fullName: AlgoSdk.IAlgoApiClient.Address
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/IAlgoApiClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Address
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/IAlgoApiClient.cs
    startLine: 10
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nAddress of the service, including the port\n"
  remarks: "\ne.g. <code>&quot;http://localhost:4001&quot;</code>\n"
  example: []
  syntax:
    content: string Address { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Address As String
  overload: AlgoSdk.IAlgoApiClient.Address*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: AlgoSdk.IAlgoApiClient.Token
  commentId: P:AlgoSdk.IAlgoApiClient.Token
  id: Token
  parent: AlgoSdk.IAlgoApiClient
  langs:
  - csharp
  - vb
  name: Token
  nameWithType: IAlgoApiClient.Token
  fullName: AlgoSdk.IAlgoApiClient.Token
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/IAlgoApiClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Token
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/IAlgoApiClient.cs
    startLine: 15
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nToken used in authenticating to the service\n"
  example: []
  syntax:
    content: string Token { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Token As String
  overload: AlgoSdk.IAlgoApiClient.Token*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: AlgoSdk.IAlgoApiClient.TokenHeader
  commentId: P:AlgoSdk.IAlgoApiClient.TokenHeader
  id: TokenHeader
  parent: AlgoSdk.IAlgoApiClient
  langs:
  - csharp
  - vb
  name: TokenHeader
  nameWithType: IAlgoApiClient.TokenHeader
  fullName: AlgoSdk.IAlgoApiClient.TokenHeader
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/IAlgoApiClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TokenHeader
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/IAlgoApiClient.cs
    startLine: 20
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nRequest header to use for the authenticating <xref href=\"AlgoSdk.IAlgoApiClient.Token\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: string TokenHeader { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property TokenHeader As String
  overload: AlgoSdk.IAlgoApiClient.TokenHeader*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: AlgoSdk.IAlgoApiClient.AlgoSdk.TokenizedClientExtensions.GetUrl``1(System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.GetUrl``1(``0,System.String)
  parent: AlgoSdk.TokenizedClientExtensions
  definition: AlgoSdk.TokenizedClientExtensions.GetUrl``1(``0,System.String)
  name: GetUrl<IAlgoApiClient>(String)
  nameWithType: TokenizedClientExtensions.GetUrl<IAlgoApiClient>(String)
  fullName: AlgoSdk.TokenizedClientExtensions.GetUrl<AlgoSdk.IAlgoApiClient>(System.String)
  nameWithType.vb: TokenizedClientExtensions.GetUrl(Of IAlgoApiClient)(String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.GetUrl(Of AlgoSdk.IAlgoApiClient)(System.String)
  name.vb: GetUrl(Of IAlgoApiClient)(String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.GetUrl``1(System.String)
    name: GetUrl<IAlgoApiClient>
    nameWithType: TokenizedClientExtensions.GetUrl<IAlgoApiClient>
    fullName: AlgoSdk.TokenizedClientExtensions.GetUrl<AlgoSdk.IAlgoApiClient>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.GetUrl``1(System.String)
    name: GetUrl(Of IAlgoApiClient)
    nameWithType: TokenizedClientExtensions.GetUrl(Of IAlgoApiClient)
    fullName: AlgoSdk.TokenizedClientExtensions.GetUrl(Of AlgoSdk.IAlgoApiClient)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IAlgoApiClient.AlgoSdk.TokenizedClientExtensions.Get``1(System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.Get``1(``0,System.String)
  parent: AlgoSdk.TokenizedClientExtensions
  definition: AlgoSdk.TokenizedClientExtensions.Get``1(``0,System.String)
  name: Get<IAlgoApiClient>(String)
  nameWithType: TokenizedClientExtensions.Get<IAlgoApiClient>(String)
  fullName: AlgoSdk.TokenizedClientExtensions.Get<AlgoSdk.IAlgoApiClient>(System.String)
  nameWithType.vb: TokenizedClientExtensions.Get(Of IAlgoApiClient)(String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.Get(Of AlgoSdk.IAlgoApiClient)(System.String)
  name.vb: Get(Of IAlgoApiClient)(String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.Get``1(System.String)
    name: Get<IAlgoApiClient>
    nameWithType: TokenizedClientExtensions.Get<IAlgoApiClient>
    fullName: AlgoSdk.TokenizedClientExtensions.Get<AlgoSdk.IAlgoApiClient>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.Get``1(System.String)
    name: Get(Of IAlgoApiClient)
    nameWithType: TokenizedClientExtensions.Get(Of IAlgoApiClient)
    fullName: AlgoSdk.TokenizedClientExtensions.Get(Of AlgoSdk.IAlgoApiClient)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IAlgoApiClient.AlgoSdk.TokenizedClientExtensions.Post``1(System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.Post``1(``0,System.String)
  parent: AlgoSdk.TokenizedClientExtensions
  definition: AlgoSdk.TokenizedClientExtensions.Post``1(``0,System.String)
  name: Post<IAlgoApiClient>(String)
  nameWithType: TokenizedClientExtensions.Post<IAlgoApiClient>(String)
  fullName: AlgoSdk.TokenizedClientExtensions.Post<AlgoSdk.IAlgoApiClient>(System.String)
  nameWithType.vb: TokenizedClientExtensions.Post(Of IAlgoApiClient)(String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.Post(Of AlgoSdk.IAlgoApiClient)(System.String)
  name.vb: Post(Of IAlgoApiClient)(String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.Post``1(System.String)
    name: Post<IAlgoApiClient>
    nameWithType: TokenizedClientExtensions.Post<IAlgoApiClient>
    fullName: AlgoSdk.TokenizedClientExtensions.Post<AlgoSdk.IAlgoApiClient>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.Post``1(System.String)
    name: Post(Of IAlgoApiClient)
    nameWithType: TokenizedClientExtensions.Post(Of IAlgoApiClient)
    fullName: AlgoSdk.TokenizedClientExtensions.Post(Of AlgoSdk.IAlgoApiClient)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IAlgoApiClient.AlgoSdk.TokenizedClientExtensions.Delete``1(System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.Delete``1(``0,System.String)
  parent: AlgoSdk.TokenizedClientExtensions
  definition: AlgoSdk.TokenizedClientExtensions.Delete``1(``0,System.String)
  name: Delete<IAlgoApiClient>(String)
  nameWithType: TokenizedClientExtensions.Delete<IAlgoApiClient>(String)
  fullName: AlgoSdk.TokenizedClientExtensions.Delete<AlgoSdk.IAlgoApiClient>(System.String)
  nameWithType.vb: TokenizedClientExtensions.Delete(Of IAlgoApiClient)(String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.Delete(Of AlgoSdk.IAlgoApiClient)(System.String)
  name.vb: Delete(Of IAlgoApiClient)(String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.Delete``1(System.String)
    name: Delete<IAlgoApiClient>
    nameWithType: TokenizedClientExtensions.Delete<IAlgoApiClient>
    fullName: AlgoSdk.TokenizedClientExtensions.Delete<AlgoSdk.IAlgoApiClient>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.Delete``1(System.String)
    name: Delete(Of IAlgoApiClient)
    nameWithType: TokenizedClientExtensions.Delete(Of IAlgoApiClient)
    fullName: AlgoSdk.TokenizedClientExtensions.Delete(Of AlgoSdk.IAlgoApiClient)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.TokenizedClientExtensions.GetUrl``1(``0,System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.GetUrl``1(``0,System.String)
  isExternal: true
  name: GetUrl<T>(T, String)
  nameWithType: TokenizedClientExtensions.GetUrl<T>(T, String)
  fullName: AlgoSdk.TokenizedClientExtensions.GetUrl<T>(T, System.String)
  nameWithType.vb: TokenizedClientExtensions.GetUrl(Of T)(T, String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.GetUrl(Of T)(T, System.String)
  name.vb: GetUrl(Of T)(T, String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.GetUrl``1(``0,System.String)
    name: GetUrl<T>
    nameWithType: TokenizedClientExtensions.GetUrl<T>
    fullName: AlgoSdk.TokenizedClientExtensions.GetUrl<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.GetUrl``1(``0,System.String)
    name: GetUrl(Of T)
    nameWithType: TokenizedClientExtensions.GetUrl(Of T)
    fullName: AlgoSdk.TokenizedClientExtensions.GetUrl(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.TokenizedClientExtensions
  commentId: T:AlgoSdk.TokenizedClientExtensions
  parent: AlgoSdk
  name: TokenizedClientExtensions
  nameWithType: TokenizedClientExtensions
  fullName: AlgoSdk.TokenizedClientExtensions
- uid: AlgoSdk.TokenizedClientExtensions.Get``1(``0,System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.Get``1(``0,System.String)
  isExternal: true
  name: Get<T>(T, String)
  nameWithType: TokenizedClientExtensions.Get<T>(T, String)
  fullName: AlgoSdk.TokenizedClientExtensions.Get<T>(T, System.String)
  nameWithType.vb: TokenizedClientExtensions.Get(Of T)(T, String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.Get(Of T)(T, System.String)
  name.vb: Get(Of T)(T, String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.Get``1(``0,System.String)
    name: Get<T>
    nameWithType: TokenizedClientExtensions.Get<T>
    fullName: AlgoSdk.TokenizedClientExtensions.Get<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.Get``1(``0,System.String)
    name: Get(Of T)
    nameWithType: TokenizedClientExtensions.Get(Of T)
    fullName: AlgoSdk.TokenizedClientExtensions.Get(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.TokenizedClientExtensions.Post``1(``0,System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.Post``1(``0,System.String)
  isExternal: true
  name: Post<T>(T, String)
  nameWithType: TokenizedClientExtensions.Post<T>(T, String)
  fullName: AlgoSdk.TokenizedClientExtensions.Post<T>(T, System.String)
  nameWithType.vb: TokenizedClientExtensions.Post(Of T)(T, String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.Post(Of T)(T, System.String)
  name.vb: Post(Of T)(T, String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.Post``1(``0,System.String)
    name: Post<T>
    nameWithType: TokenizedClientExtensions.Post<T>
    fullName: AlgoSdk.TokenizedClientExtensions.Post<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.Post``1(``0,System.String)
    name: Post(Of T)
    nameWithType: TokenizedClientExtensions.Post(Of T)
    fullName: AlgoSdk.TokenizedClientExtensions.Post(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.TokenizedClientExtensions.Delete``1(``0,System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.Delete``1(``0,System.String)
  isExternal: true
  name: Delete<T>(T, String)
  nameWithType: TokenizedClientExtensions.Delete<T>(T, String)
  fullName: AlgoSdk.TokenizedClientExtensions.Delete<T>(T, System.String)
  nameWithType.vb: TokenizedClientExtensions.Delete(Of T)(T, String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.Delete(Of T)(T, System.String)
  name.vb: Delete(Of T)(T, String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.Delete``1(``0,System.String)
    name: Delete<T>
    nameWithType: TokenizedClientExtensions.Delete<T>
    fullName: AlgoSdk.TokenizedClientExtensions.Delete<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.Delete``1(``0,System.String)
    name: Delete(Of T)
    nameWithType: TokenizedClientExtensions.Delete(Of T)
    fullName: AlgoSdk.TokenizedClientExtensions.Delete(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IAlgoApiClient.Address*
  commentId: Overload:AlgoSdk.IAlgoApiClient.Address
  name: Address
  nameWithType: IAlgoApiClient.Address
  fullName: AlgoSdk.IAlgoApiClient.Address
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AlgoSdk.IAlgoApiClient.Token*
  commentId: Overload:AlgoSdk.IAlgoApiClient.Token
  name: Token
  nameWithType: IAlgoApiClient.Token
  fullName: AlgoSdk.IAlgoApiClient.Token
- uid: AlgoSdk.IAlgoApiClient.Token
  commentId: P:AlgoSdk.IAlgoApiClient.Token
  parent: AlgoSdk.IAlgoApiClient
  name: Token
  nameWithType: IAlgoApiClient.Token
  fullName: AlgoSdk.IAlgoApiClient.Token
- uid: AlgoSdk.IAlgoApiClient.TokenHeader*
  commentId: Overload:AlgoSdk.IAlgoApiClient.TokenHeader
  name: TokenHeader
  nameWithType: IAlgoApiClient.TokenHeader
  fullName: AlgoSdk.IAlgoApiClient.TokenHeader
- uid: AlgoSdk.IAlgoApiClient
  commentId: T:AlgoSdk.IAlgoApiClient
  parent: AlgoSdk
  name: IAlgoApiClient
  nameWithType: IAlgoApiClient
  fullName: AlgoSdk.IAlgoApiClient
