### YamlMime:ManagedReference
items:
- uid: AlgoSdk.MerkleProof
  commentId: T:AlgoSdk.MerkleProof
  id: MerkleProof
  parent: AlgoSdk
  children:
  - AlgoSdk.MerkleProof.Equals(AlgoSdk.MerkleProof)
  - AlgoSdk.MerkleProof.Proof
  - AlgoSdk.MerkleProof.SignedTransactionHash
  - AlgoSdk.MerkleProof.TransactionIndex
  langs:
  - csharp
  - vb
  name: MerkleProof
  nameWithType: MerkleProof
  fullName: AlgoSdk.MerkleProof
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/MerkleProof.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: MerkleProof
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/MerkleProof.cs
    startLine: 4
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: 'public struct MerkleProof : IEquatable<MerkleProof>'
    content.vb: >-
      Public Structure MerkleProof
          Implements IEquatable(Of MerkleProof)
  implements:
  - System.IEquatable{AlgoSdk.MerkleProof}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: AlgoSdk.MerkleProof.TransactionIndex
  commentId: F:AlgoSdk.MerkleProof.TransactionIndex
  id: TransactionIndex
  parent: AlgoSdk.MerkleProof
  langs:
  - csharp
  - vb
  name: TransactionIndex
  nameWithType: MerkleProof.TransactionIndex
  fullName: AlgoSdk.MerkleProof.TransactionIndex
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/MerkleProof.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TransactionIndex
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/MerkleProof.cs
    startLine: 9
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("idx", "idx", false)]

      public ulong TransactionIndex
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("idx", "idx", False)>

      Public TransactionIndex As ULong
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: idx
    - type: System.String
      value: idx
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.MerkleProof.Proof
  commentId: F:AlgoSdk.MerkleProof.Proof
  id: Proof
  parent: AlgoSdk.MerkleProof
  langs:
  - csharp
  - vb
  name: Proof
  nameWithType: MerkleProof.Proof
  fullName: AlgoSdk.MerkleProof.Proof
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/MerkleProof.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Proof
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/MerkleProof.cs
    startLine: 12
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("proof", "proof", false)]

      public string Proof
    return:
      type: System.String
    content.vb: >-
      <AlgoApiField("proof", "proof", False)>

      Public Proof As String
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: proof
    - type: System.String
      value: proof
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.MerkleProof.SignedTransactionHash
  commentId: F:AlgoSdk.MerkleProof.SignedTransactionHash
  id: SignedTransactionHash
  parent: AlgoSdk.MerkleProof
  langs:
  - csharp
  - vb
  name: SignedTransactionHash
  nameWithType: MerkleProof.SignedTransactionHash
  fullName: AlgoSdk.MerkleProof.SignedTransactionHash
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/MerkleProof.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: SignedTransactionHash
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/MerkleProof.cs
    startLine: 15
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("stibhash", "stibhash", false)]

      public string SignedTransactionHash
    return:
      type: System.String
    content.vb: >-
      <AlgoApiField("stibhash", "stibhash", False)>

      Public SignedTransactionHash As String
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: stibhash
    - type: System.String
      value: stibhash
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.MerkleProof.Equals(AlgoSdk.MerkleProof)
  commentId: M:AlgoSdk.MerkleProof.Equals(AlgoSdk.MerkleProof)
  id: Equals(AlgoSdk.MerkleProof)
  parent: AlgoSdk.MerkleProof
  langs:
  - csharp
  - vb
  name: Equals(MerkleProof)
  nameWithType: MerkleProof.Equals(MerkleProof)
  fullName: AlgoSdk.MerkleProof.Equals(AlgoSdk.MerkleProof)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/MerkleProof.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Equals
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/MerkleProof.cs
    startLine: 17
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public bool Equals(MerkleProof other)
    parameters:
    - id: other
      type: AlgoSdk.MerkleProof
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As MerkleProof) As Boolean
  overload: AlgoSdk.MerkleProof.Equals*
  implements:
  - System.IEquatable{AlgoSdk.MerkleProof}.Equals(AlgoSdk.MerkleProof)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: System.IEquatable{AlgoSdk.MerkleProof}
  commentId: T:System.IEquatable{AlgoSdk.MerkleProof}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<MerkleProof>
  nameWithType: IEquatable<MerkleProof>
  fullName: System.IEquatable<AlgoSdk.MerkleProof>
  nameWithType.vb: IEquatable(Of MerkleProof)
  fullName.vb: System.IEquatable(Of AlgoSdk.MerkleProof)
  name.vb: IEquatable(Of MerkleProof)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.MerkleProof
    name: MerkleProof
    nameWithType: MerkleProof
    fullName: AlgoSdk.MerkleProof
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.MerkleProof
    name: MerkleProof
    nameWithType: MerkleProof
    fullName: AlgoSdk.MerkleProof
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AlgoSdk.MerkleProof.Equals*
  commentId: Overload:AlgoSdk.MerkleProof.Equals
  name: Equals
  nameWithType: MerkleProof.Equals
  fullName: AlgoSdk.MerkleProof.Equals
- uid: System.IEquatable{AlgoSdk.MerkleProof}.Equals(AlgoSdk.MerkleProof)
  commentId: M:System.IEquatable{AlgoSdk.MerkleProof}.Equals(AlgoSdk.MerkleProof)
  parent: System.IEquatable{AlgoSdk.MerkleProof}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(MerkleProof)
  nameWithType: IEquatable<MerkleProof>.Equals(MerkleProof)
  fullName: System.IEquatable<AlgoSdk.MerkleProof>.Equals(AlgoSdk.MerkleProof)
  nameWithType.vb: IEquatable(Of MerkleProof).Equals(MerkleProof)
  fullName.vb: System.IEquatable(Of AlgoSdk.MerkleProof).Equals(AlgoSdk.MerkleProof)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<MerkleProof>.Equals
    fullName: System.IEquatable<AlgoSdk.MerkleProof>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.MerkleProof
    name: MerkleProof
    nameWithType: MerkleProof
    fullName: AlgoSdk.MerkleProof
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of MerkleProof).Equals
    fullName: System.IEquatable(Of AlgoSdk.MerkleProof).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.MerkleProof
    name: MerkleProof
    nameWithType: MerkleProof
    fullName: AlgoSdk.MerkleProof
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.MerkleProof
  commentId: T:AlgoSdk.MerkleProof
  parent: AlgoSdk
  name: MerkleProof
  nameWithType: MerkleProof
  fullName: AlgoSdk.MerkleProof
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
