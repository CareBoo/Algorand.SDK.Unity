### YamlMime:ManagedReference
items:
- uid: AlgoSdk.CreateWalletRequest
  commentId: T:AlgoSdk.CreateWalletRequest
  id: CreateWalletRequest
  parent: AlgoSdk
  children:
  - AlgoSdk.CreateWalletRequest.Equals(AlgoSdk.CreateWalletRequest)
  - AlgoSdk.CreateWalletRequest.MasterDerivationKey
  - AlgoSdk.CreateWalletRequest.WalletDriverName
  - AlgoSdk.CreateWalletRequest.WalletName
  - AlgoSdk.CreateWalletRequest.WalletPassword
  langs:
  - csharp
  - vb
  name: CreateWalletRequest
  nameWithType: CreateWalletRequest
  fullName: AlgoSdk.CreateWalletRequest
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Wallets/CreateWalletRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: CreateWalletRequest
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Wallets/CreateWalletRequest.cs
    startLine: 5
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: 'public struct CreateWalletRequest : IEquatable<CreateWalletRequest>'
    content.vb: >-
      Public Structure CreateWalletRequest
          Implements IEquatable(Of CreateWalletRequest)
  implements:
  - System.IEquatable{AlgoSdk.CreateWalletRequest}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: AlgoSdk.CreateWalletRequest.MasterDerivationKey
  commentId: F:AlgoSdk.CreateWalletRequest.MasterDerivationKey
  id: MasterDerivationKey
  parent: AlgoSdk.CreateWalletRequest
  langs:
  - csharp
  - vb
  name: MasterDerivationKey
  nameWithType: CreateWalletRequest.MasterDerivationKey
  fullName: AlgoSdk.CreateWalletRequest.MasterDerivationKey
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Wallets/CreateWalletRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: MasterDerivationKey
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Wallets/CreateWalletRequest.cs
    startLine: 10
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("master_derivation_key", null, false)]

      public PrivateKey MasterDerivationKey
    return:
      type: AlgoSdk.PrivateKey
    content.vb: >-
      <AlgoApiField("master_derivation_key", Nothing, False)>

      Public MasterDerivationKey As PrivateKey
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: master_derivation_key
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.CreateWalletRequest.WalletDriverName
  commentId: F:AlgoSdk.CreateWalletRequest.WalletDriverName
  id: WalletDriverName
  parent: AlgoSdk.CreateWalletRequest
  langs:
  - csharp
  - vb
  name: WalletDriverName
  nameWithType: CreateWalletRequest.WalletDriverName
  fullName: AlgoSdk.CreateWalletRequest.WalletDriverName
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Wallets/CreateWalletRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: WalletDriverName
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Wallets/CreateWalletRequest.cs
    startLine: 13
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("wallet_driver_name", null, false)]

      public FixedString128Bytes WalletDriverName
    return:
      type: Unity.Collections.FixedString128Bytes
    content.vb: >-
      <AlgoApiField("wallet_driver_name", Nothing, False)>

      Public WalletDriverName As FixedString128Bytes
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: wallet_driver_name
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.CreateWalletRequest.WalletName
  commentId: F:AlgoSdk.CreateWalletRequest.WalletName
  id: WalletName
  parent: AlgoSdk.CreateWalletRequest
  langs:
  - csharp
  - vb
  name: WalletName
  nameWithType: CreateWalletRequest.WalletName
  fullName: AlgoSdk.CreateWalletRequest.WalletName
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Wallets/CreateWalletRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: WalletName
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Wallets/CreateWalletRequest.cs
    startLine: 16
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("wallet_name", null, false)]

      public FixedString128Bytes WalletName
    return:
      type: Unity.Collections.FixedString128Bytes
    content.vb: >-
      <AlgoApiField("wallet_name", Nothing, False)>

      Public WalletName As FixedString128Bytes
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: wallet_name
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.CreateWalletRequest.WalletPassword
  commentId: F:AlgoSdk.CreateWalletRequest.WalletPassword
  id: WalletPassword
  parent: AlgoSdk.CreateWalletRequest
  langs:
  - csharp
  - vb
  name: WalletPassword
  nameWithType: CreateWalletRequest.WalletPassword
  fullName: AlgoSdk.CreateWalletRequest.WalletPassword
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Wallets/CreateWalletRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: WalletPassword
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Wallets/CreateWalletRequest.cs
    startLine: 19
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("wallet_password", null, false)]

      public FixedString128Bytes WalletPassword
    return:
      type: Unity.Collections.FixedString128Bytes
    content.vb: >-
      <AlgoApiField("wallet_password", Nothing, False)>

      Public WalletPassword As FixedString128Bytes
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: wallet_password
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.CreateWalletRequest.Equals(AlgoSdk.CreateWalletRequest)
  commentId: M:AlgoSdk.CreateWalletRequest.Equals(AlgoSdk.CreateWalletRequest)
  id: Equals(AlgoSdk.CreateWalletRequest)
  parent: AlgoSdk.CreateWalletRequest
  langs:
  - csharp
  - vb
  name: Equals(CreateWalletRequest)
  nameWithType: CreateWalletRequest.Equals(CreateWalletRequest)
  fullName: AlgoSdk.CreateWalletRequest.Equals(AlgoSdk.CreateWalletRequest)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Wallets/CreateWalletRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Equals
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Wallets/CreateWalletRequest.cs
    startLine: 21
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public bool Equals(CreateWalletRequest other)
    parameters:
    - id: other
      type: AlgoSdk.CreateWalletRequest
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As CreateWalletRequest) As Boolean
  overload: AlgoSdk.CreateWalletRequest.Equals*
  implements:
  - System.IEquatable{AlgoSdk.CreateWalletRequest}.Equals(AlgoSdk.CreateWalletRequest)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: System.IEquatable{AlgoSdk.CreateWalletRequest}
  commentId: T:System.IEquatable{AlgoSdk.CreateWalletRequest}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<CreateWalletRequest>
  nameWithType: IEquatable<CreateWalletRequest>
  fullName: System.IEquatable<AlgoSdk.CreateWalletRequest>
  nameWithType.vb: IEquatable(Of CreateWalletRequest)
  fullName.vb: System.IEquatable(Of AlgoSdk.CreateWalletRequest)
  name.vb: IEquatable(Of CreateWalletRequest)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.CreateWalletRequest
    name: CreateWalletRequest
    nameWithType: CreateWalletRequest
    fullName: AlgoSdk.CreateWalletRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.CreateWalletRequest
    name: CreateWalletRequest
    nameWithType: CreateWalletRequest
    fullName: AlgoSdk.CreateWalletRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AlgoSdk.PrivateKey
  commentId: T:AlgoSdk.PrivateKey
  parent: AlgoSdk
  name: PrivateKey
  nameWithType: PrivateKey
  fullName: AlgoSdk.PrivateKey
- uid: Unity.Collections.FixedString128Bytes
  commentId: T:Unity.Collections.FixedString128Bytes
  parent: Unity.Collections
  name: FixedString128Bytes
  nameWithType: FixedString128Bytes
  fullName: Unity.Collections.FixedString128Bytes
- uid: Unity.Collections
  commentId: N:Unity.Collections
  name: Unity.Collections
  nameWithType: Unity.Collections
  fullName: Unity.Collections
- uid: AlgoSdk.CreateWalletRequest.Equals*
  commentId: Overload:AlgoSdk.CreateWalletRequest.Equals
  name: Equals
  nameWithType: CreateWalletRequest.Equals
  fullName: AlgoSdk.CreateWalletRequest.Equals
- uid: System.IEquatable{AlgoSdk.CreateWalletRequest}.Equals(AlgoSdk.CreateWalletRequest)
  commentId: M:System.IEquatable{AlgoSdk.CreateWalletRequest}.Equals(AlgoSdk.CreateWalletRequest)
  parent: System.IEquatable{AlgoSdk.CreateWalletRequest}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(CreateWalletRequest)
  nameWithType: IEquatable<CreateWalletRequest>.Equals(CreateWalletRequest)
  fullName: System.IEquatable<AlgoSdk.CreateWalletRequest>.Equals(AlgoSdk.CreateWalletRequest)
  nameWithType.vb: IEquatable(Of CreateWalletRequest).Equals(CreateWalletRequest)
  fullName.vb: System.IEquatable(Of AlgoSdk.CreateWalletRequest).Equals(AlgoSdk.CreateWalletRequest)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<CreateWalletRequest>.Equals
    fullName: System.IEquatable<AlgoSdk.CreateWalletRequest>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.CreateWalletRequest
    name: CreateWalletRequest
    nameWithType: CreateWalletRequest
    fullName: AlgoSdk.CreateWalletRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of CreateWalletRequest).Equals
    fullName: System.IEquatable(Of AlgoSdk.CreateWalletRequest).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.CreateWalletRequest
    name: CreateWalletRequest
    nameWithType: CreateWalletRequest
    fullName: AlgoSdk.CreateWalletRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.CreateWalletRequest
  commentId: T:AlgoSdk.CreateWalletRequest
  parent: AlgoSdk
  name: CreateWalletRequest
  nameWithType: CreateWalletRequest
  fullName: AlgoSdk.CreateWalletRequest
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
