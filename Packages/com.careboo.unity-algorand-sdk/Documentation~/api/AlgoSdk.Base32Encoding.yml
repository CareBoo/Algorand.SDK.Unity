### YamlMime:ManagedReference
items:
- uid: AlgoSdk.Base32Encoding
  commentId: T:AlgoSdk.Base32Encoding
  id: Base32Encoding
  parent: AlgoSdk
  children:
  - AlgoSdk.Base32Encoding.PaddingCharValue
  - AlgoSdk.Base32Encoding.ToBytes(System.String)
  - AlgoSdk.Base32Encoding.ToBytes``2(``1,``0@)
  - AlgoSdk.Base32Encoding.ToString(System.Byte[])
  - AlgoSdk.Base32Encoding.ToString``2(``0@,``1@)
  - AlgoSdk.Base32Encoding.TrimPadding``1(``0@)
  langs:
  - csharp
  - vb
  name: Base32Encoding
  nameWithType: Base32Encoding
  fullName: AlgoSdk.Base32Encoding
  type: Class
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Encoding/Base32Encoding.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Base32Encoding
    path: ../CareBoo.AlgoSdk/Encoding/Base32Encoding.cs
    startLine: 7
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public static class Base32Encoding
    content.vb: Public Module Base32Encoding
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: AlgoSdk.Base32Encoding.ToBytes(System.String)
  commentId: M:AlgoSdk.Base32Encoding.ToBytes(System.String)
  id: ToBytes(System.String)
  parent: AlgoSdk.Base32Encoding
  langs:
  - csharp
  - vb
  name: ToBytes(String)
  nameWithType: Base32Encoding.ToBytes(String)
  fullName: AlgoSdk.Base32Encoding.ToBytes(System.String)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Encoding/Base32Encoding.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ToBytes
    path: ../CareBoo.AlgoSdk/Encoding/Base32Encoding.cs
    startLine: 9
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public static byte[] ToBytes(string input)
    parameters:
    - id: input
      type: System.String
    return:
      type: System.Byte[]
    content.vb: Public Shared Function ToBytes(input As String) As Byte()
  overload: AlgoSdk.Base32Encoding.ToBytes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AlgoSdk.Base32Encoding.ToBytes``2(``1,``0@)
  commentId: M:AlgoSdk.Base32Encoding.ToBytes``2(``1,``0@)
  id: ToBytes``2(``1,``0@)
  parent: AlgoSdk.Base32Encoding
  langs:
  - csharp
  - vb
  name: ToBytes<TByteArray, TString>(TString, ref TByteArray)
  nameWithType: Base32Encoding.ToBytes<TByteArray, TString>(TString, ref TByteArray)
  fullName: AlgoSdk.Base32Encoding.ToBytes<TByteArray, TString>(TString, ref TByteArray)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Encoding/Base32Encoding.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ToBytes
    path: ../CareBoo.AlgoSdk/Encoding/Base32Encoding.cs
    startLine: 52
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      public static void ToBytes<TByteArray, TString>(TString s, ref TByteArray bytes)
          where TByteArray : struct, IByteArray where TString : struct, IUTF8Bytes, INativeList<byte>
    parameters:
    - id: s
      type: '{TString}'
    - id: bytes
      type: '{TByteArray}'
    typeParameters:
    - id: TByteArray
    - id: TString
    content.vb: Public Shared Sub ToBytes(Of TByteArray As {Structure, IByteArray}, TString As {Structure, IUTF8Bytes, INativeList(Of Byte)})(s As TString, ByRef bytes As TByteArray)
  overload: AlgoSdk.Base32Encoding.ToBytes*
  nameWithType.vb: Base32Encoding.ToBytes(Of TByteArray, TString)(TString, ByRef TByteArray)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.Base32Encoding.ToBytes(Of TByteArray, TString)(TString, ByRef TByteArray)
  name.vb: ToBytes(Of TByteArray, TString)(TString, ByRef TByteArray)
- uid: AlgoSdk.Base32Encoding.TrimPadding``1(``0@)
  commentId: M:AlgoSdk.Base32Encoding.TrimPadding``1(``0@)
  id: TrimPadding``1(``0@)
  parent: AlgoSdk.Base32Encoding
  langs:
  - csharp
  - vb
  name: TrimPadding<T>(ref T)
  nameWithType: Base32Encoding.TrimPadding<T>(ref T)
  fullName: AlgoSdk.Base32Encoding.TrimPadding<T>(ref T)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Encoding/Base32Encoding.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TrimPadding
    path: ../CareBoo.AlgoSdk/Encoding/Base32Encoding.cs
    startLine: 102
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      public static void TrimPadding<T>(ref T fs)
          where T : struct, INativeList<byte>, IUTF8Bytes
    parameters:
    - id: fs
      type: '{T}'
    typeParameters:
    - id: T
    content.vb: Public Shared Sub TrimPadding(Of T As {Structure, INativeList(Of Byte), IUTF8Bytes})(ByRef fs As T)
  overload: AlgoSdk.Base32Encoding.TrimPadding*
  nameWithType.vb: Base32Encoding.TrimPadding(Of T)(ByRef T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.Base32Encoding.TrimPadding(Of T)(ByRef T)
  name.vb: TrimPadding(Of T)(ByRef T)
- uid: AlgoSdk.Base32Encoding.ToString(System.Byte[])
  commentId: M:AlgoSdk.Base32Encoding.ToString(System.Byte[])
  id: ToString(System.Byte[])
  parent: AlgoSdk.Base32Encoding
  langs:
  - csharp
  - vb
  name: ToString(Byte[])
  nameWithType: Base32Encoding.ToString(Byte[])
  fullName: AlgoSdk.Base32Encoding.ToString(System.Byte[])
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Encoding/Base32Encoding.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ToString
    path: ../CareBoo.AlgoSdk/Encoding/Base32Encoding.cs
    startLine: 111
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public static string ToString(byte[] input)
    parameters:
    - id: input
      type: System.Byte[]
    return:
      type: System.String
    content.vb: Public Shared Function ToString(input As Byte()) As String
  overload: AlgoSdk.Base32Encoding.ToString*
  nameWithType.vb: Base32Encoding.ToString(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.Base32Encoding.ToString(System.Byte())
  name.vb: ToString(Byte())
- uid: AlgoSdk.Base32Encoding.ToString``2(``0@,``1@)
  commentId: M:AlgoSdk.Base32Encoding.ToString``2(``0@,``1@)
  id: ToString``2(``0@,``1@)
  parent: AlgoSdk.Base32Encoding
  langs:
  - csharp
  - vb
  name: ToString<TByteArray, TString>(TByteArray, ref TString)
  nameWithType: Base32Encoding.ToString<TByteArray, TString>(TByteArray, ref TString)
  fullName: AlgoSdk.Base32Encoding.ToString<TByteArray, TString>(TByteArray, ref TString)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Encoding/Base32Encoding.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ToString
    path: ../CareBoo.AlgoSdk/Encoding/Base32Encoding.cs
    startLine: 150
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      public static void ToString<TByteArray, TString>(in TByteArray bytes, ref TString s)
          where TByteArray : struct, IByteArray where TString : struct, IUTF8Bytes, INativeList<byte>
    parameters:
    - id: bytes
      type: '{TByteArray}'
    - id: s
      type: '{TString}'
    typeParameters:
    - id: TByteArray
    - id: TString
    content.vb: Public Shared Sub ToString(Of TByteArray As {Structure, IByteArray}, TString As {Structure, IUTF8Bytes, INativeList(Of Byte)})(ByRef bytes As TByteArray, ByRef s As TString)
  overload: AlgoSdk.Base32Encoding.ToString*
  nameWithType.vb: Base32Encoding.ToString(Of TByteArray, TString)(ByRef TByteArray, ByRef TString)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.Base32Encoding.ToString(Of TByteArray, TString)(ByRef TByteArray, ByRef TString)
  name.vb: ToString(Of TByteArray, TString)(ByRef TByteArray, ByRef TString)
- uid: AlgoSdk.Base32Encoding.PaddingCharValue
  commentId: F:AlgoSdk.Base32Encoding.PaddingCharValue
  id: PaddingCharValue
  parent: AlgoSdk.Base32Encoding
  langs:
  - csharp
  - vb
  name: PaddingCharValue
  nameWithType: Base32Encoding.PaddingCharValue
  fullName: AlgoSdk.Base32Encoding.PaddingCharValue
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Encoding/Base32Encoding.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: PaddingCharValue
    path: ../CareBoo.AlgoSdk/Encoding/Base32Encoding.cs
    startLine: 187
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public static readonly byte PaddingCharValue
    return:
      type: System.Byte
    content.vb: Public Shared ReadOnly PaddingCharValue As Byte
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AlgoSdk.Base32Encoding.ToBytes*
  commentId: Overload:AlgoSdk.Base32Encoding.ToBytes
  name: ToBytes
  nameWithType: Base32Encoding.ToBytes
  fullName: AlgoSdk.Base32Encoding.ToBytes
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: '{TString}'
  commentId: '!:TString'
  definition: TString
  name: TString
  nameWithType: TString
  fullName: TString
- uid: '{TByteArray}'
  commentId: '!:TByteArray'
  definition: TByteArray
  name: TByteArray
  nameWithType: TByteArray
  fullName: TByteArray
- uid: TString
  name: TString
  nameWithType: TString
  fullName: TString
- uid: TByteArray
  name: TByteArray
  nameWithType: TByteArray
  fullName: TByteArray
- uid: AlgoSdk.Base32Encoding.TrimPadding*
  commentId: Overload:AlgoSdk.Base32Encoding.TrimPadding
  name: TrimPadding
  nameWithType: Base32Encoding.TrimPadding
  fullName: AlgoSdk.Base32Encoding.TrimPadding
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: AlgoSdk.Base32Encoding.ToString*
  commentId: Overload:AlgoSdk.Base32Encoding.ToString
  name: ToString
  nameWithType: Base32Encoding.ToString
  fullName: AlgoSdk.Base32Encoding.ToString
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
