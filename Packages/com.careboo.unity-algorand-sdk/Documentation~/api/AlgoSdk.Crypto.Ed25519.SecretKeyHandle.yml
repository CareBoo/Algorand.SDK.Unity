### YamlMime:ManagedReference
items:
- uid: AlgoSdk.Crypto.Ed25519.SecretKeyHandle
  commentId: T:AlgoSdk.Crypto.Ed25519.SecretKeyHandle
  id: Ed25519.SecretKeyHandle
  parent: AlgoSdk.Crypto
  children:
  - AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Create
  - AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Dispose
  - AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Dispose(Unity.Jobs.JobHandle)
  - AlgoSdk.Crypto.Ed25519.SecretKeyHandle.KeySize
  - AlgoSdk.Crypto.Ed25519.SecretKeyHandle.op_Implicit(AlgoSdk.Crypto.Ed25519.SecretKeyHandle)~AlgoSdk.Crypto.SecureMemoryHandle
  - AlgoSdk.Crypto.Ed25519.SecretKeyHandle.op_Implicit(AlgoSdk.Crypto.SecureMemoryHandle)~AlgoSdk.Crypto.Ed25519.SecretKeyHandle
  - AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Sign``1(``0@)
  - AlgoSdk.Crypto.Ed25519.SecretKeyHandle.ToSeed
  langs:
  - csharp
  - vb
  name: Ed25519.SecretKeyHandle
  nameWithType: Ed25519.SecretKeyHandle
  fullName: AlgoSdk.Crypto.Ed25519.SecretKeyHandle
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.Crypto/Ed25519.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: SecretKeyHandle
    path: ../CareBoo.AlgoSdk.Crypto/Ed25519.cs
    startLine: 41
  assemblies:
  - CareBoo.AlgoSdk.Crypto
  namespace: AlgoSdk.Crypto
  syntax:
    content: 'public struct SecretKeyHandle : INativeDisposable, IDisposable'
    content.vb: >-
      Public Structure SecretKeyHandle
          Implements INativeDisposable, IDisposable
  implements:
  - Unity.Collections.INativeDisposable
  - System.IDisposable
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.KeySize
  commentId: F:AlgoSdk.Crypto.Ed25519.SecretKeyHandle.KeySize
  id: KeySize
  parent: AlgoSdk.Crypto.Ed25519.SecretKeyHandle
  langs:
  - csharp
  - vb
  name: KeySize
  nameWithType: Ed25519.SecretKeyHandle.KeySize
  fullName: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.KeySize
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.Crypto/Ed25519.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: KeySize
    path: ../CareBoo.AlgoSdk.Crypto/Ed25519.cs
    startLine: 43
  assemblies:
  - CareBoo.AlgoSdk.Crypto
  namespace: AlgoSdk.Crypto
  syntax:
    content: public const int KeySize = 64
    return:
      type: System.Int32
    content.vb: Public Const KeySize As Integer = 64
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Create
  commentId: M:AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Create
  id: Create
  parent: AlgoSdk.Crypto.Ed25519.SecretKeyHandle
  langs:
  - csharp
  - vb
  name: Create()
  nameWithType: Ed25519.SecretKeyHandle.Create()
  fullName: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Create()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.Crypto/Ed25519.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Create
    path: ../CareBoo.AlgoSdk.Crypto/Ed25519.cs
    startLine: 46
  assemblies:
  - CareBoo.AlgoSdk.Crypto
  namespace: AlgoSdk.Crypto
  syntax:
    content: public static Ed25519.SecretKeyHandle Create()
    return:
      type: AlgoSdk.Crypto.Ed25519.SecretKeyHandle
    content.vb: Public Shared Function Create As Ed25519.SecretKeyHandle
  overload: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Dispose(Unity.Jobs.JobHandle)
  commentId: M:AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Dispose(Unity.Jobs.JobHandle)
  id: Dispose(Unity.Jobs.JobHandle)
  parent: AlgoSdk.Crypto.Ed25519.SecretKeyHandle
  langs:
  - csharp
  - vb
  name: Dispose(JobHandle)
  nameWithType: Ed25519.SecretKeyHandle.Dispose(JobHandle)
  fullName: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Dispose(Unity.Jobs.JobHandle)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.Crypto/Ed25519.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Dispose
    path: ../CareBoo.AlgoSdk.Crypto/Ed25519.cs
    startLine: 51
  assemblies:
  - CareBoo.AlgoSdk.Crypto
  namespace: AlgoSdk.Crypto
  syntax:
    content: public JobHandle Dispose(JobHandle inputDeps)
    parameters:
    - id: inputDeps
      type: Unity.Jobs.JobHandle
    return:
      type: Unity.Jobs.JobHandle
    content.vb: Public Function Dispose(inputDeps As JobHandle) As JobHandle
  overload: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Dispose*
  implements:
  - Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Dispose
  commentId: M:AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Dispose
  id: Dispose
  parent: AlgoSdk.Crypto.Ed25519.SecretKeyHandle
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Ed25519.SecretKeyHandle.Dispose()
  fullName: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Dispose()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.Crypto/Ed25519.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Dispose
    path: ../CareBoo.AlgoSdk.Crypto/Ed25519.cs
    startLine: 56
  assemblies:
  - CareBoo.AlgoSdk.Crypto
  namespace: AlgoSdk.Crypto
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.op_Implicit(AlgoSdk.Crypto.Ed25519.SecretKeyHandle)~AlgoSdk.Crypto.SecureMemoryHandle
  commentId: M:AlgoSdk.Crypto.Ed25519.SecretKeyHandle.op_Implicit(AlgoSdk.Crypto.Ed25519.SecretKeyHandle)~AlgoSdk.Crypto.SecureMemoryHandle
  id: op_Implicit(AlgoSdk.Crypto.Ed25519.SecretKeyHandle)~AlgoSdk.Crypto.SecureMemoryHandle
  parent: AlgoSdk.Crypto.Ed25519.SecretKeyHandle
  langs:
  - csharp
  - vb
  name: Implicit(Ed25519.SecretKeyHandle to SecureMemoryHandle)
  nameWithType: Ed25519.SecretKeyHandle.Implicit(Ed25519.SecretKeyHandle to SecureMemoryHandle)
  fullName: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Implicit(AlgoSdk.Crypto.Ed25519.SecretKeyHandle to AlgoSdk.Crypto.SecureMemoryHandle)
  type: Operator
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.Crypto/Ed25519.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: op_Implicit
    path: ../CareBoo.AlgoSdk.Crypto/Ed25519.cs
    startLine: 61
  assemblies:
  - CareBoo.AlgoSdk.Crypto
  namespace: AlgoSdk.Crypto
  syntax:
    content: public static implicit operator SecureMemoryHandle(Ed25519.SecretKeyHandle secretKeyHandle)
    parameters:
    - id: secretKeyHandle
      type: AlgoSdk.Crypto.Ed25519.SecretKeyHandle
    return:
      type: AlgoSdk.Crypto.SecureMemoryHandle
    content.vb: Public Shared Widening Operator CType(secretKeyHandle As Ed25519.SecretKeyHandle) As SecureMemoryHandle
  overload: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.op_Implicit*
  nameWithType.vb: Ed25519.SecretKeyHandle.Widening(Ed25519.SecretKeyHandle to SecureMemoryHandle)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Widening(AlgoSdk.Crypto.Ed25519.SecretKeyHandle to AlgoSdk.Crypto.SecureMemoryHandle)
  name.vb: Widening(Ed25519.SecretKeyHandle to SecureMemoryHandle)
- uid: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.op_Implicit(AlgoSdk.Crypto.SecureMemoryHandle)~AlgoSdk.Crypto.Ed25519.SecretKeyHandle
  commentId: M:AlgoSdk.Crypto.Ed25519.SecretKeyHandle.op_Implicit(AlgoSdk.Crypto.SecureMemoryHandle)~AlgoSdk.Crypto.Ed25519.SecretKeyHandle
  id: op_Implicit(AlgoSdk.Crypto.SecureMemoryHandle)~AlgoSdk.Crypto.Ed25519.SecretKeyHandle
  parent: AlgoSdk.Crypto.Ed25519.SecretKeyHandle
  langs:
  - csharp
  - vb
  name: Implicit(SecureMemoryHandle to Ed25519.SecretKeyHandle)
  nameWithType: Ed25519.SecretKeyHandle.Implicit(SecureMemoryHandle to Ed25519.SecretKeyHandle)
  fullName: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Implicit(AlgoSdk.Crypto.SecureMemoryHandle to AlgoSdk.Crypto.Ed25519.SecretKeyHandle)
  type: Operator
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.Crypto/Ed25519.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: op_Implicit
    path: ../CareBoo.AlgoSdk.Crypto/Ed25519.cs
    startLine: 66
  assemblies:
  - CareBoo.AlgoSdk.Crypto
  namespace: AlgoSdk.Crypto
  syntax:
    content: public static implicit operator Ed25519.SecretKeyHandle(SecureMemoryHandle secureMemoryHandle)
    parameters:
    - id: secureMemoryHandle
      type: AlgoSdk.Crypto.SecureMemoryHandle
    return:
      type: AlgoSdk.Crypto.Ed25519.SecretKeyHandle
    content.vb: Public Shared Widening Operator CType(secureMemoryHandle As SecureMemoryHandle) As Ed25519.SecretKeyHandle
  overload: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.op_Implicit*
  nameWithType.vb: Ed25519.SecretKeyHandle.Widening(SecureMemoryHandle to Ed25519.SecretKeyHandle)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Widening(AlgoSdk.Crypto.SecureMemoryHandle to AlgoSdk.Crypto.Ed25519.SecretKeyHandle)
  name.vb: Widening(SecureMemoryHandle to Ed25519.SecretKeyHandle)
- uid: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Sign``1(``0@)
  commentId: M:AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Sign``1(``0@)
  id: Sign``1(``0@)
  parent: AlgoSdk.Crypto.Ed25519.SecretKeyHandle
  langs:
  - csharp
  - vb
  name: Sign<TMessage>(TMessage)
  nameWithType: Ed25519.SecretKeyHandle.Sign<TMessage>(TMessage)
  fullName: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Sign<TMessage>(TMessage)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.Crypto/Ed25519.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Sign
    path: ../CareBoo.AlgoSdk.Crypto/Ed25519.cs
    startLine: 71
  assemblies:
  - CareBoo.AlgoSdk.Crypto
  namespace: AlgoSdk.Crypto
  syntax:
    content: >-
      public Ed25519.Signature Sign<TMessage>(in TMessage message)
          where TMessage : IByteArray
    parameters:
    - id: message
      type: '{TMessage}'
    typeParameters:
    - id: TMessage
    return:
      type: AlgoSdk.Crypto.Ed25519.Signature
    content.vb: Public Function Sign(Of TMessage As IByteArray)(ByRef message As TMessage) As Ed25519.Signature
  overload: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Sign*
  nameWithType.vb: Ed25519.SecretKeyHandle.Sign(Of TMessage)(ByRef TMessage)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Sign(Of TMessage)(ByRef TMessage)
  name.vb: Sign(Of TMessage)(ByRef TMessage)
- uid: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.ToSeed
  commentId: M:AlgoSdk.Crypto.Ed25519.SecretKeyHandle.ToSeed
  id: ToSeed
  parent: AlgoSdk.Crypto.Ed25519.SecretKeyHandle
  langs:
  - csharp
  - vb
  name: ToSeed()
  nameWithType: Ed25519.SecretKeyHandle.ToSeed()
  fullName: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.ToSeed()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.Crypto/Ed25519.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ToSeed
    path: ../CareBoo.AlgoSdk.Crypto/Ed25519.cs
    startLine: 80
  assemblies:
  - CareBoo.AlgoSdk.Crypto
  namespace: AlgoSdk.Crypto
  syntax:
    content: public Ed25519.Seed ToSeed()
    return:
      type: AlgoSdk.Crypto.Ed25519.Seed
    content.vb: Public Function ToSeed As Ed25519.Seed
  overload: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.ToSeed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AlgoSdk.Crypto
  commentId: N:AlgoSdk.Crypto
  name: AlgoSdk.Crypto
  nameWithType: AlgoSdk.Crypto
  fullName: AlgoSdk.Crypto
- uid: Unity.Collections.INativeDisposable
  commentId: T:Unity.Collections.INativeDisposable
  parent: Unity.Collections
  name: INativeDisposable
  nameWithType: INativeDisposable
  fullName: Unity.Collections.INativeDisposable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Collections
  commentId: N:Unity.Collections
  name: Unity.Collections
  nameWithType: Unity.Collections
  fullName: Unity.Collections
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Create*
  commentId: Overload:AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Create
  name: Create
  nameWithType: Ed25519.SecretKeyHandle.Create
  fullName: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Create
- uid: AlgoSdk.Crypto.Ed25519.SecretKeyHandle
  commentId: T:AlgoSdk.Crypto.Ed25519.SecretKeyHandle
  parent: AlgoSdk.Crypto
  name: Ed25519.SecretKeyHandle
  nameWithType: Ed25519.SecretKeyHandle
  fullName: AlgoSdk.Crypto.Ed25519.SecretKeyHandle
- uid: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Dispose*
  commentId: Overload:AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Dispose
  name: Dispose
  nameWithType: Ed25519.SecretKeyHandle.Dispose
  fullName: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Dispose
- uid: Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
  commentId: M:Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
  parent: Unity.Collections.INativeDisposable
  isExternal: true
  name: Dispose(JobHandle)
  nameWithType: INativeDisposable.Dispose(JobHandle)
  fullName: Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
  spec.csharp:
  - uid: Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
    name: Dispose
    nameWithType: INativeDisposable.Dispose
    fullName: Unity.Collections.INativeDisposable.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: Unity.Jobs.JobHandle
    name: JobHandle
    nameWithType: JobHandle
    fullName: Unity.Jobs.JobHandle
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
    name: Dispose
    nameWithType: INativeDisposable.Dispose
    fullName: Unity.Collections.INativeDisposable.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: Unity.Jobs.JobHandle
    name: JobHandle
    nameWithType: JobHandle
    fullName: Unity.Jobs.JobHandle
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Jobs.JobHandle
  commentId: T:Unity.Jobs.JobHandle
  parent: Unity.Jobs
  isExternal: true
  name: JobHandle
  nameWithType: JobHandle
  fullName: Unity.Jobs.JobHandle
- uid: Unity.Jobs
  commentId: N:Unity.Jobs
  isExternal: true
  name: Unity.Jobs
  nameWithType: Unity.Jobs
  fullName: Unity.Jobs
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.op_Implicit*
  commentId: Overload:AlgoSdk.Crypto.Ed25519.SecretKeyHandle.op_Implicit
  name: Implicit
  nameWithType: Ed25519.SecretKeyHandle.Implicit
  fullName: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Implicit
  nameWithType.vb: Ed25519.SecretKeyHandle.Widening
  fullName.vb: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Widening
  name.vb: Widening
- uid: AlgoSdk.Crypto.SecureMemoryHandle
  commentId: T:AlgoSdk.Crypto.SecureMemoryHandle
  parent: AlgoSdk.Crypto
  name: SecureMemoryHandle
  nameWithType: SecureMemoryHandle
  fullName: AlgoSdk.Crypto.SecureMemoryHandle
- uid: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Sign*
  commentId: Overload:AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Sign
  name: Sign
  nameWithType: Ed25519.SecretKeyHandle.Sign
  fullName: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.Sign
- uid: '{TMessage}'
  commentId: '!:TMessage'
  definition: TMessage
  name: TMessage
  nameWithType: TMessage
  fullName: TMessage
- uid: AlgoSdk.Crypto.Ed25519.Signature
  commentId: T:AlgoSdk.Crypto.Ed25519.Signature
  parent: AlgoSdk.Crypto
  name: Ed25519.Signature
  nameWithType: Ed25519.Signature
  fullName: AlgoSdk.Crypto.Ed25519.Signature
- uid: TMessage
  name: TMessage
  nameWithType: TMessage
  fullName: TMessage
- uid: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.ToSeed*
  commentId: Overload:AlgoSdk.Crypto.Ed25519.SecretKeyHandle.ToSeed
  name: ToSeed
  nameWithType: Ed25519.SecretKeyHandle.ToSeed
  fullName: AlgoSdk.Crypto.Ed25519.SecretKeyHandle.ToSeed
- uid: AlgoSdk.Crypto.Ed25519.Seed
  commentId: T:AlgoSdk.Crypto.Ed25519.Seed
  parent: AlgoSdk.Crypto
  name: Ed25519.Seed
  nameWithType: Ed25519.Seed
  fullName: AlgoSdk.Crypto.Ed25519.Seed
