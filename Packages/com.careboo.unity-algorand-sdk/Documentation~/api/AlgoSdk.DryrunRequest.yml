### YamlMime:ManagedReference
items:
- uid: AlgoSdk.DryrunRequest
  commentId: T:AlgoSdk.DryrunRequest
  id: DryrunRequest
  parent: AlgoSdk
  children:
  - AlgoSdk.DryrunRequest.Accounts
  - AlgoSdk.DryrunRequest.Applications
  - AlgoSdk.DryrunRequest.Equals(AlgoSdk.DryrunRequest)
  - AlgoSdk.DryrunRequest.LatestTimestamp
  - AlgoSdk.DryrunRequest.ProtocolVersion
  - AlgoSdk.DryrunRequest.Round
  - AlgoSdk.DryrunRequest.Sources
  - AlgoSdk.DryrunRequest.Transactions
  langs:
  - csharp
  - vb
  name: DryrunRequest
  nameWithType: DryrunRequest
  fullName: AlgoSdk.DryrunRequest
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/DryrunRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: DryrunRequest
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/DryrunRequest.cs
    startLine: 5
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: 'public struct DryrunRequest : IEquatable<DryrunRequest>'
    content.vb: >-
      Public Structure DryrunRequest
          Implements IEquatable(Of DryrunRequest)
  implements:
  - System.IEquatable{AlgoSdk.DryrunRequest}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: AlgoSdk.DryrunRequest.Accounts
  commentId: F:AlgoSdk.DryrunRequest.Accounts
  id: Accounts
  parent: AlgoSdk.DryrunRequest
  langs:
  - csharp
  - vb
  name: Accounts
  nameWithType: DryrunRequest.Accounts
  fullName: AlgoSdk.DryrunRequest.Accounts
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/DryrunRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Accounts
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/DryrunRequest.cs
    startLine: 10
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("accounts", null, false)]

      public Account[] Accounts
    return:
      type: AlgoSdk.Account[]
    content.vb: >-
      <AlgoApiField("accounts", Nothing, False)>

      Public Accounts As Account()
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: accounts
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.DryrunRequest.Applications
  commentId: F:AlgoSdk.DryrunRequest.Applications
  id: Applications
  parent: AlgoSdk.DryrunRequest
  langs:
  - csharp
  - vb
  name: Applications
  nameWithType: DryrunRequest.Applications
  fullName: AlgoSdk.DryrunRequest.Applications
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/DryrunRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Applications
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/DryrunRequest.cs
    startLine: 13
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("apps", null, false)]

      public Application[] Applications
    return:
      type: AlgoSdk.Application[]
    content.vb: >-
      <AlgoApiField("apps", Nothing, False)>

      Public Applications As Application()
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: apps
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.DryrunRequest.LatestTimestamp
  commentId: F:AlgoSdk.DryrunRequest.LatestTimestamp
  id: LatestTimestamp
  parent: AlgoSdk.DryrunRequest
  langs:
  - csharp
  - vb
  name: LatestTimestamp
  nameWithType: DryrunRequest.LatestTimestamp
  fullName: AlgoSdk.DryrunRequest.LatestTimestamp
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/DryrunRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: LatestTimestamp
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/DryrunRequest.cs
    startLine: 16
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("latest-timestamp", null, false)]

      public ulong LatestTimestamp
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("latest-timestamp", Nothing, False)>

      Public LatestTimestamp As ULong
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: latest-timestamp
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.DryrunRequest.ProtocolVersion
  commentId: F:AlgoSdk.DryrunRequest.ProtocolVersion
  id: ProtocolVersion
  parent: AlgoSdk.DryrunRequest
  langs:
  - csharp
  - vb
  name: ProtocolVersion
  nameWithType: DryrunRequest.ProtocolVersion
  fullName: AlgoSdk.DryrunRequest.ProtocolVersion
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/DryrunRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ProtocolVersion
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/DryrunRequest.cs
    startLine: 19
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("protocol-version", null, false)]

      public FixedString64Bytes ProtocolVersion
    return:
      type: Unity.Collections.FixedString64Bytes
    content.vb: >-
      <AlgoApiField("protocol-version", Nothing, False)>

      Public ProtocolVersion As FixedString64Bytes
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: protocol-version
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.DryrunRequest.Round
  commentId: F:AlgoSdk.DryrunRequest.Round
  id: Round
  parent: AlgoSdk.DryrunRequest
  langs:
  - csharp
  - vb
  name: Round
  nameWithType: DryrunRequest.Round
  fullName: AlgoSdk.DryrunRequest.Round
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/DryrunRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Round
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/DryrunRequest.cs
    startLine: 22
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("round", null, false)]

      public ulong Round
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("round", Nothing, False)>

      Public Round As ULong
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: round
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.DryrunRequest.Sources
  commentId: F:AlgoSdk.DryrunRequest.Sources
  id: Sources
  parent: AlgoSdk.DryrunRequest
  langs:
  - csharp
  - vb
  name: Sources
  nameWithType: DryrunRequest.Sources
  fullName: AlgoSdk.DryrunRequest.Sources
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/DryrunRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Sources
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/DryrunRequest.cs
    startLine: 25
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("sources", null, false)]

      public DryrunSource[] Sources
    return:
      type: AlgoSdk.DryrunSource[]
    content.vb: >-
      <AlgoApiField("sources", Nothing, False)>

      Public Sources As DryrunSource()
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: sources
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.DryrunRequest.Transactions
  commentId: F:AlgoSdk.DryrunRequest.Transactions
  id: Transactions
  parent: AlgoSdk.DryrunRequest
  langs:
  - csharp
  - vb
  name: Transactions
  nameWithType: DryrunRequest.Transactions
  fullName: AlgoSdk.DryrunRequest.Transactions
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/DryrunRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Transactions
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/DryrunRequest.cs
    startLine: 28
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("txns", null, false)]

      public Transaction[] Transactions
    return:
      type: AlgoSdk.Transaction[]
    content.vb: >-
      <AlgoApiField("txns", Nothing, False)>

      Public Transactions As Transaction()
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: txns
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.DryrunRequest.Equals(AlgoSdk.DryrunRequest)
  commentId: M:AlgoSdk.DryrunRequest.Equals(AlgoSdk.DryrunRequest)
  id: Equals(AlgoSdk.DryrunRequest)
  parent: AlgoSdk.DryrunRequest
  langs:
  - csharp
  - vb
  name: Equals(DryrunRequest)
  nameWithType: DryrunRequest.Equals(DryrunRequest)
  fullName: AlgoSdk.DryrunRequest.Equals(AlgoSdk.DryrunRequest)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/DryrunRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Equals
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/DryrunRequest.cs
    startLine: 30
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public bool Equals(DryrunRequest other)
    parameters:
    - id: other
      type: AlgoSdk.DryrunRequest
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As DryrunRequest) As Boolean
  overload: AlgoSdk.DryrunRequest.Equals*
  implements:
  - System.IEquatable{AlgoSdk.DryrunRequest}.Equals(AlgoSdk.DryrunRequest)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: System.IEquatable{AlgoSdk.DryrunRequest}
  commentId: T:System.IEquatable{AlgoSdk.DryrunRequest}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<DryrunRequest>
  nameWithType: IEquatable<DryrunRequest>
  fullName: System.IEquatable<AlgoSdk.DryrunRequest>
  nameWithType.vb: IEquatable(Of DryrunRequest)
  fullName.vb: System.IEquatable(Of AlgoSdk.DryrunRequest)
  name.vb: IEquatable(Of DryrunRequest)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.DryrunRequest
    name: DryrunRequest
    nameWithType: DryrunRequest
    fullName: AlgoSdk.DryrunRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.DryrunRequest
    name: DryrunRequest
    nameWithType: DryrunRequest
    fullName: AlgoSdk.DryrunRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AlgoSdk.Account[]
  isExternal: true
  name: Account[]
  nameWithType: Account[]
  fullName: AlgoSdk.Account[]
  nameWithType.vb: Account()
  fullName.vb: AlgoSdk.Account()
  name.vb: Account()
  spec.csharp:
  - uid: AlgoSdk.Account
    name: Account
    nameWithType: Account
    fullName: AlgoSdk.Account
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: AlgoSdk.Account
    name: Account
    nameWithType: Account
    fullName: AlgoSdk.Account
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AlgoSdk.Application[]
  isExternal: true
  name: Application[]
  nameWithType: Application[]
  fullName: AlgoSdk.Application[]
  nameWithType.vb: Application()
  fullName.vb: AlgoSdk.Application()
  name.vb: Application()
  spec.csharp:
  - uid: AlgoSdk.Application
    name: Application
    nameWithType: Application
    fullName: AlgoSdk.Application
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: AlgoSdk.Application
    name: Application
    nameWithType: Application
    fullName: AlgoSdk.Application
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Unity.Collections.FixedString64Bytes
  commentId: T:Unity.Collections.FixedString64Bytes
  parent: Unity.Collections
  name: FixedString64Bytes
  nameWithType: FixedString64Bytes
  fullName: Unity.Collections.FixedString64Bytes
- uid: Unity.Collections
  commentId: N:Unity.Collections
  name: Unity.Collections
  nameWithType: Unity.Collections
  fullName: Unity.Collections
- uid: AlgoSdk.DryrunSource[]
  isExternal: true
  name: DryrunSource[]
  nameWithType: DryrunSource[]
  fullName: AlgoSdk.DryrunSource[]
  nameWithType.vb: DryrunSource()
  fullName.vb: AlgoSdk.DryrunSource()
  name.vb: DryrunSource()
  spec.csharp:
  - uid: AlgoSdk.DryrunSource
    name: DryrunSource
    nameWithType: DryrunSource
    fullName: AlgoSdk.DryrunSource
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: AlgoSdk.DryrunSource
    name: DryrunSource
    nameWithType: DryrunSource
    fullName: AlgoSdk.DryrunSource
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AlgoSdk.Transaction[]
  isExternal: true
  name: Transaction[]
  nameWithType: Transaction[]
  fullName: AlgoSdk.Transaction[]
  nameWithType.vb: Transaction()
  fullName.vb: AlgoSdk.Transaction()
  name.vb: Transaction()
  spec.csharp:
  - uid: AlgoSdk.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: AlgoSdk.Transaction
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: AlgoSdk.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: AlgoSdk.Transaction
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AlgoSdk.DryrunRequest.Equals*
  commentId: Overload:AlgoSdk.DryrunRequest.Equals
  name: Equals
  nameWithType: DryrunRequest.Equals
  fullName: AlgoSdk.DryrunRequest.Equals
- uid: System.IEquatable{AlgoSdk.DryrunRequest}.Equals(AlgoSdk.DryrunRequest)
  commentId: M:System.IEquatable{AlgoSdk.DryrunRequest}.Equals(AlgoSdk.DryrunRequest)
  parent: System.IEquatable{AlgoSdk.DryrunRequest}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(DryrunRequest)
  nameWithType: IEquatable<DryrunRequest>.Equals(DryrunRequest)
  fullName: System.IEquatable<AlgoSdk.DryrunRequest>.Equals(AlgoSdk.DryrunRequest)
  nameWithType.vb: IEquatable(Of DryrunRequest).Equals(DryrunRequest)
  fullName.vb: System.IEquatable(Of AlgoSdk.DryrunRequest).Equals(AlgoSdk.DryrunRequest)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<DryrunRequest>.Equals
    fullName: System.IEquatable<AlgoSdk.DryrunRequest>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.DryrunRequest
    name: DryrunRequest
    nameWithType: DryrunRequest
    fullName: AlgoSdk.DryrunRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of DryrunRequest).Equals
    fullName: System.IEquatable(Of AlgoSdk.DryrunRequest).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.DryrunRequest
    name: DryrunRequest
    nameWithType: DryrunRequest
    fullName: AlgoSdk.DryrunRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.DryrunRequest
  commentId: T:AlgoSdk.DryrunRequest
  parent: AlgoSdk
  name: DryrunRequest
  nameWithType: DryrunRequest
  fullName: AlgoSdk.DryrunRequest
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
