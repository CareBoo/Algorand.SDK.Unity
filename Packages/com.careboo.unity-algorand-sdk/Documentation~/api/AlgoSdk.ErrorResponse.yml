### YamlMime:ManagedReference
items:
- uid: AlgoSdk.ErrorResponse
  commentId: T:AlgoSdk.ErrorResponse
  id: ErrorResponse
  parent: AlgoSdk
  children:
  - AlgoSdk.ErrorResponse.Code
  - AlgoSdk.ErrorResponse.Data
  - AlgoSdk.ErrorResponse.Equals(AlgoSdk.ErrorResponse)
  - AlgoSdk.ErrorResponse.IsError
  - AlgoSdk.ErrorResponse.Message
  - AlgoSdk.ErrorResponse.WithCode(System.Int64)
  langs:
  - csharp
  - vb
  name: ErrorResponse
  nameWithType: ErrorResponse
  fullName: AlgoSdk.ErrorResponse
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/ErrorResponse.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ErrorResponse
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/ErrorResponse.cs
    startLine: 5
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiFormatter(typeof(ErrorResponseFormatter), "C:\\Users\\jason\\Projects\\CareBoo\\Unity.AlgoSdk\\Packages\\com.careboo.unity-algorand-sdk\\CareBoo.AlgoSdk\\AlgoApi\\Shared\\Models\\ErrorResponse.cs", 6)]

      public struct ErrorResponse : IEquatable<ErrorResponse>
    content.vb: >-
      <AlgoApiFormatter(GetType(ErrorResponseFormatter), "C:\Users\jason\Projects\CareBoo\Unity.AlgoSdk\Packages\com.careboo.unity-algorand-sdk\CareBoo.AlgoSdk\AlgoApi\Shared\Models\ErrorResponse.cs", 6)>

      Public Structure ErrorResponse
          Implements IEquatable(Of ErrorResponse)
  implements:
  - System.IEquatable{AlgoSdk.ErrorResponse}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: AlgoSdk.AlgoApiFormatterAttribute
    ctor: AlgoSdk.AlgoApiFormatterAttribute.#ctor(System.Type,System.String,System.Int32)
    arguments:
    - type: System.Type
      value: AlgoSdk.Formatters.ErrorResponseFormatter
    - type: System.String
      value: C:\Users\jason\Projects\CareBoo\Unity.AlgoSdk\Packages\com.careboo.unity-algorand-sdk\CareBoo.AlgoSdk\AlgoApi\Shared\Models\ErrorResponse.cs
    - type: System.Int32
      value: 6
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: AlgoSdk.ErrorResponse.Data
  commentId: F:AlgoSdk.ErrorResponse.Data
  id: Data
  parent: AlgoSdk.ErrorResponse
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: ErrorResponse.Data
  fullName: AlgoSdk.ErrorResponse.Data
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/ErrorResponse.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Data
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/ErrorResponse.cs
    startLine: 9
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public string Data
    return:
      type: System.String
    content.vb: Public Data As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.ErrorResponse.Message
  commentId: F:AlgoSdk.ErrorResponse.Message
  id: Message
  parent: AlgoSdk.ErrorResponse
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: ErrorResponse.Message
  fullName: AlgoSdk.ErrorResponse.Message
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/ErrorResponse.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Message
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/ErrorResponse.cs
    startLine: 11
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public string Message
    return:
      type: System.String
    content.vb: Public Message As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.ErrorResponse.Code
  commentId: F:AlgoSdk.ErrorResponse.Code
  id: Code
  parent: AlgoSdk.ErrorResponse
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: ErrorResponse.Code
  fullName: AlgoSdk.ErrorResponse.Code
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/ErrorResponse.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Code
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/ErrorResponse.cs
    startLine: 13
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public long Code
    return:
      type: System.Int64
    content.vb: Public Code As Long
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.ErrorResponse.WithCode(System.Int64)
  commentId: M:AlgoSdk.ErrorResponse.WithCode(System.Int64)
  id: WithCode(System.Int64)
  parent: AlgoSdk.ErrorResponse
  langs:
  - csharp
  - vb
  name: WithCode(Int64)
  nameWithType: ErrorResponse.WithCode(Int64)
  fullName: AlgoSdk.ErrorResponse.WithCode(System.Int64)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/ErrorResponse.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: WithCode
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/ErrorResponse.cs
    startLine: 15
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public ErrorResponse WithCode(long code)
    parameters:
    - id: code
      type: System.Int64
    return:
      type: AlgoSdk.ErrorResponse
    content.vb: Public Function WithCode(code As Long) As ErrorResponse
  overload: AlgoSdk.ErrorResponse.WithCode*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.ErrorResponse.Equals(AlgoSdk.ErrorResponse)
  commentId: M:AlgoSdk.ErrorResponse.Equals(AlgoSdk.ErrorResponse)
  id: Equals(AlgoSdk.ErrorResponse)
  parent: AlgoSdk.ErrorResponse
  langs:
  - csharp
  - vb
  name: Equals(ErrorResponse)
  nameWithType: ErrorResponse.Equals(ErrorResponse)
  fullName: AlgoSdk.ErrorResponse.Equals(AlgoSdk.ErrorResponse)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/ErrorResponse.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Equals
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/ErrorResponse.cs
    startLine: 21
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public bool Equals(ErrorResponse other)
    parameters:
    - id: other
      type: AlgoSdk.ErrorResponse
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As ErrorResponse) As Boolean
  overload: AlgoSdk.ErrorResponse.Equals*
  implements:
  - System.IEquatable{AlgoSdk.ErrorResponse}.Equals(AlgoSdk.ErrorResponse)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.ErrorResponse.IsError
  commentId: P:AlgoSdk.ErrorResponse.IsError
  id: IsError
  parent: AlgoSdk.ErrorResponse
  langs:
  - csharp
  - vb
  name: IsError
  nameWithType: ErrorResponse.IsError
  fullName: AlgoSdk.ErrorResponse.IsError
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/ErrorResponse.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: IsError
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/ErrorResponse.cs
    startLine: 29
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public bool IsError { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsError As Boolean
  overload: AlgoSdk.ErrorResponse.IsError*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: System.IEquatable{AlgoSdk.ErrorResponse}
  commentId: T:System.IEquatable{AlgoSdk.ErrorResponse}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<ErrorResponse>
  nameWithType: IEquatable<ErrorResponse>
  fullName: System.IEquatable<AlgoSdk.ErrorResponse>
  nameWithType.vb: IEquatable(Of ErrorResponse)
  fullName.vb: System.IEquatable(Of AlgoSdk.ErrorResponse)
  name.vb: IEquatable(Of ErrorResponse)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.ErrorResponse
    name: ErrorResponse
    nameWithType: ErrorResponse
    fullName: AlgoSdk.ErrorResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.ErrorResponse
    name: ErrorResponse
    nameWithType: ErrorResponse
    fullName: AlgoSdk.ErrorResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: AlgoSdk.ErrorResponse.WithCode*
  commentId: Overload:AlgoSdk.ErrorResponse.WithCode
  name: WithCode
  nameWithType: ErrorResponse.WithCode
  fullName: AlgoSdk.ErrorResponse.WithCode
- uid: AlgoSdk.ErrorResponse
  commentId: T:AlgoSdk.ErrorResponse
  parent: AlgoSdk
  name: ErrorResponse
  nameWithType: ErrorResponse
  fullName: AlgoSdk.ErrorResponse
- uid: AlgoSdk.ErrorResponse.Equals*
  commentId: Overload:AlgoSdk.ErrorResponse.Equals
  name: Equals
  nameWithType: ErrorResponse.Equals
  fullName: AlgoSdk.ErrorResponse.Equals
- uid: System.IEquatable{AlgoSdk.ErrorResponse}.Equals(AlgoSdk.ErrorResponse)
  commentId: M:System.IEquatable{AlgoSdk.ErrorResponse}.Equals(AlgoSdk.ErrorResponse)
  parent: System.IEquatable{AlgoSdk.ErrorResponse}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(ErrorResponse)
  nameWithType: IEquatable<ErrorResponse>.Equals(ErrorResponse)
  fullName: System.IEquatable<AlgoSdk.ErrorResponse>.Equals(AlgoSdk.ErrorResponse)
  nameWithType.vb: IEquatable(Of ErrorResponse).Equals(ErrorResponse)
  fullName.vb: System.IEquatable(Of AlgoSdk.ErrorResponse).Equals(AlgoSdk.ErrorResponse)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<ErrorResponse>.Equals
    fullName: System.IEquatable<AlgoSdk.ErrorResponse>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.ErrorResponse
    name: ErrorResponse
    nameWithType: ErrorResponse
    fullName: AlgoSdk.ErrorResponse
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of ErrorResponse).Equals
    fullName: System.IEquatable(Of AlgoSdk.ErrorResponse).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.ErrorResponse
    name: ErrorResponse
    nameWithType: ErrorResponse
    fullName: AlgoSdk.ErrorResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.ErrorResponse.IsError*
  commentId: Overload:AlgoSdk.ErrorResponse.IsError
  name: IsError
  nameWithType: ErrorResponse.IsError
  fullName: AlgoSdk.ErrorResponse.IsError
