### YamlMime:ManagedReference
items:
- uid: AlgoSdk.Multisig
  commentId: T:AlgoSdk.Multisig
  id: Multisig
  parent: AlgoSdk
  children:
  - AlgoSdk.Multisig.Equals(AlgoSdk.Multisig)
  - AlgoSdk.Multisig.Subsigs
  - AlgoSdk.Multisig.Threshold
  - AlgoSdk.Multisig.Verify``1(``0)
  - AlgoSdk.Multisig.Version
  langs:
  - csharp
  - vb
  name: Multisig
  nameWithType: Multisig
  fullName: AlgoSdk.Multisig
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/Multisig.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Multisig
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/Multisig.cs
    startLine: 6
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: 'public struct Multisig : ISignature, IEquatable<Multisig>'
    content.vb: >-
      Public Structure Multisig
          Implements ISignature, IEquatable(Of Multisig)
  implements:
  - AlgoSdk.ISignature
  - System.IEquatable{AlgoSdk.Multisig}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: AlgoSdk.Multisig.Subsigs
  commentId: F:AlgoSdk.Multisig.Subsigs
  id: Subsigs
  parent: AlgoSdk.Multisig
  langs:
  - csharp
  - vb
  name: Subsigs
  nameWithType: Multisig.Subsigs
  fullName: AlgoSdk.Multisig.Subsigs
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/Multisig.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Subsigs
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/Multisig.cs
    startLine: 12
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("subsig", "subsig", false)]

      public Multisig.Subsig[] Subsigs
    return:
      type: AlgoSdk.Multisig.Subsig[]
    content.vb: >-
      <AlgoApiField("subsig", "subsig", False)>

      Public Subsigs As Multisig.Subsig()
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: subsig
    - type: System.String
      value: subsig
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Multisig.Threshold
  commentId: F:AlgoSdk.Multisig.Threshold
  id: Threshold
  parent: AlgoSdk.Multisig
  langs:
  - csharp
  - vb
  name: Threshold
  nameWithType: Multisig.Threshold
  fullName: AlgoSdk.Multisig.Threshold
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/Multisig.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Threshold
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/Multisig.cs
    startLine: 15
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("thr", "thr", false)]

      public byte Threshold
    return:
      type: System.Byte
    content.vb: >-
      <AlgoApiField("thr", "thr", False)>

      Public Threshold As Byte
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: thr
    - type: System.String
      value: thr
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Multisig.Version
  commentId: F:AlgoSdk.Multisig.Version
  id: Version
  parent: AlgoSdk.Multisig
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: Multisig.Version
  fullName: AlgoSdk.Multisig.Version
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/Multisig.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Version
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/Multisig.cs
    startLine: 18
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("v", "v", false)]

      public byte Version
    return:
      type: System.Byte
    content.vb: >-
      <AlgoApiField("v", "v", False)>

      Public Version As Byte
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: v
    - type: System.String
      value: v
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Multisig.Equals(AlgoSdk.Multisig)
  commentId: M:AlgoSdk.Multisig.Equals(AlgoSdk.Multisig)
  id: Equals(AlgoSdk.Multisig)
  parent: AlgoSdk.Multisig
  langs:
  - csharp
  - vb
  name: Equals(Multisig)
  nameWithType: Multisig.Equals(Multisig)
  fullName: AlgoSdk.Multisig.Equals(AlgoSdk.Multisig)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/Multisig.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Equals
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/Multisig.cs
    startLine: 20
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public bool Equals(Multisig other)
    parameters:
    - id: other
      type: AlgoSdk.Multisig
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Multisig) As Boolean
  overload: AlgoSdk.Multisig.Equals*
  implements:
  - System.IEquatable{AlgoSdk.Multisig}.Equals(AlgoSdk.Multisig)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Multisig.Verify``1(``0)
  commentId: M:AlgoSdk.Multisig.Verify``1(``0)
  id: Verify``1(``0)
  parent: AlgoSdk.Multisig
  langs:
  - csharp
  - vb
  name: Verify<TMessage>(TMessage)
  nameWithType: Multisig.Verify<TMessage>(TMessage)
  fullName: AlgoSdk.Multisig.Verify<TMessage>(TMessage)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/Multisig.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Verify
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/Multisig.cs
    startLine: 28
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      public bool Verify<TMessage>(TMessage message)
          where TMessage : IByteArray
    parameters:
    - id: message
      type: '{TMessage}'
    typeParameters:
    - id: TMessage
    return:
      type: System.Boolean
    content.vb: Public Function Verify(Of TMessage As IByteArray)(message As TMessage) As Boolean
  overload: AlgoSdk.Multisig.Verify*
  nameWithType.vb: Multisig.Verify(Of TMessage)(TMessage)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.Multisig.Verify(Of TMessage)(TMessage)
  name.vb: Verify(Of TMessage)(TMessage)
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: AlgoSdk.ISignature
  commentId: T:AlgoSdk.ISignature
  parent: AlgoSdk
  name: ISignature
  nameWithType: ISignature
  fullName: AlgoSdk.ISignature
- uid: System.IEquatable{AlgoSdk.Multisig}
  commentId: T:System.IEquatable{AlgoSdk.Multisig}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Multisig>
  nameWithType: IEquatable<Multisig>
  fullName: System.IEquatable<AlgoSdk.Multisig>
  nameWithType.vb: IEquatable(Of Multisig)
  fullName.vb: System.IEquatable(Of AlgoSdk.Multisig)
  name.vb: IEquatable(Of Multisig)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.Multisig
    name: Multisig
    nameWithType: Multisig
    fullName: AlgoSdk.Multisig
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.Multisig
    name: Multisig
    nameWithType: Multisig
    fullName: AlgoSdk.Multisig
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AlgoSdk.Multisig.Subsig[]
  isExternal: true
  name: Multisig.Subsig[]
  nameWithType: Multisig.Subsig[]
  fullName: AlgoSdk.Multisig.Subsig[]
  nameWithType.vb: Multisig.Subsig()
  fullName.vb: AlgoSdk.Multisig.Subsig()
  name.vb: Multisig.Subsig()
  spec.csharp:
  - uid: AlgoSdk.Multisig.Subsig
    name: Multisig.Subsig
    nameWithType: Multisig.Subsig
    fullName: AlgoSdk.Multisig.Subsig
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: AlgoSdk.Multisig.Subsig
    name: Multisig.Subsig
    nameWithType: Multisig.Subsig
    fullName: AlgoSdk.Multisig.Subsig
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: AlgoSdk.Multisig.Equals*
  commentId: Overload:AlgoSdk.Multisig.Equals
  name: Equals
  nameWithType: Multisig.Equals
  fullName: AlgoSdk.Multisig.Equals
- uid: System.IEquatable{AlgoSdk.Multisig}.Equals(AlgoSdk.Multisig)
  commentId: M:System.IEquatable{AlgoSdk.Multisig}.Equals(AlgoSdk.Multisig)
  parent: System.IEquatable{AlgoSdk.Multisig}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Multisig)
  nameWithType: IEquatable<Multisig>.Equals(Multisig)
  fullName: System.IEquatable<AlgoSdk.Multisig>.Equals(AlgoSdk.Multisig)
  nameWithType.vb: IEquatable(Of Multisig).Equals(Multisig)
  fullName.vb: System.IEquatable(Of AlgoSdk.Multisig).Equals(AlgoSdk.Multisig)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Multisig>.Equals
    fullName: System.IEquatable<AlgoSdk.Multisig>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.Multisig
    name: Multisig
    nameWithType: Multisig
    fullName: AlgoSdk.Multisig
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Multisig).Equals
    fullName: System.IEquatable(Of AlgoSdk.Multisig).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.Multisig
    name: Multisig
    nameWithType: Multisig
    fullName: AlgoSdk.Multisig
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.Multisig
  commentId: T:AlgoSdk.Multisig
  parent: AlgoSdk
  name: Multisig
  nameWithType: Multisig
  fullName: AlgoSdk.Multisig
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.Multisig.Verify*
  commentId: Overload:AlgoSdk.Multisig.Verify
  name: Verify
  nameWithType: Multisig.Verify
  fullName: AlgoSdk.Multisig.Verify
- uid: '{TMessage}'
  commentId: '!:TMessage'
  definition: TMessage
  name: TMessage
  nameWithType: TMessage
  fullName: TMessage
- uid: TMessage
  name: TMessage
  nameWithType: TMessage
  fullName: TMessage
