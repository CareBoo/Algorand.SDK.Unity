### YamlMime:ManagedReference
items:
- uid: AlgoSdk.LowLevel.IArray`1
  commentId: T:AlgoSdk.LowLevel.IArray`1
  id: IArray`1
  parent: AlgoSdk.LowLevel
  children:
  - AlgoSdk.LowLevel.IArray`1.Item(System.Int32)
  - AlgoSdk.LowLevel.IArray`1.Length
  langs:
  - csharp
  - vb
  name: IArray<T>
  nameWithType: IArray<T>
  fullName: AlgoSdk.LowLevel.IArray<T>
  type: Interface
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.LowLevel/ByteArray.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: IArray
    path: ../CareBoo.AlgoSdk.LowLevel/ByteArray.cs
    startLine: 9
  assemblies:
  - CareBoo.AlgoSdk.LowLevel
  namespace: AlgoSdk.LowLevel
  syntax:
    content: public interface IArray<T>
    typeParameters:
    - id: T
    content.vb: Public Interface IArray(Of T)
  nameWithType.vb: IArray(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: AlgoSdk.LowLevel.IArray(Of T)
  name.vb: IArray(Of T)
- uid: AlgoSdk.LowLevel.IArray`1.Length
  commentId: P:AlgoSdk.LowLevel.IArray`1.Length
  id: Length
  parent: AlgoSdk.LowLevel.IArray`1
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: IArray<T>.Length
  fullName: AlgoSdk.LowLevel.IArray<T>.Length
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.LowLevel/ByteArray.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Length
    path: ../CareBoo.AlgoSdk.LowLevel/ByteArray.cs
    startLine: 11
  assemblies:
  - CareBoo.AlgoSdk.LowLevel
  namespace: AlgoSdk.LowLevel
  syntax:
    content: int Length { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property Length As Integer
  overload: AlgoSdk.LowLevel.IArray`1.Length*
  nameWithType.vb: IArray(Of T).Length
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: AlgoSdk.LowLevel.IArray(Of T).Length
- uid: AlgoSdk.LowLevel.IArray`1.Item(System.Int32)
  commentId: P:AlgoSdk.LowLevel.IArray`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: AlgoSdk.LowLevel.IArray`1
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: IArray<T>.Item[Int32]
  fullName: AlgoSdk.LowLevel.IArray<T>.Item[System.Int32]
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.LowLevel/ByteArray.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: this[]
    path: ../CareBoo.AlgoSdk.LowLevel/ByteArray.cs
    startLine: 12
  assemblies:
  - CareBoo.AlgoSdk.LowLevel
  namespace: AlgoSdk.LowLevel
  syntax:
    content: T this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: '{T}'
    content.vb: Property Item(index As Integer) As T
  overload: AlgoSdk.LowLevel.IArray`1.Item*
  nameWithType.vb: IArray(Of T).Item(Int32)
  modifiers.csharp:
  - get
  - set
  fullName.vb: AlgoSdk.LowLevel.IArray(Of T).Item(System.Int32)
  name.vb: Item(Int32)
references:
- uid: AlgoSdk.LowLevel
  commentId: N:AlgoSdk.LowLevel
  name: AlgoSdk.LowLevel
  nameWithType: AlgoSdk.LowLevel
  fullName: AlgoSdk.LowLevel
- uid: AlgoSdk.LowLevel.IArray`1.Length*
  commentId: Overload:AlgoSdk.LowLevel.IArray`1.Length
  name: Length
  nameWithType: IArray<T>.Length
  fullName: AlgoSdk.LowLevel.IArray<T>.Length
  nameWithType.vb: IArray(Of T).Length
  fullName.vb: AlgoSdk.LowLevel.IArray(Of T).Length
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AlgoSdk.LowLevel.IArray`1.Item*
  commentId: Overload:AlgoSdk.LowLevel.IArray`1.Item
  name: Item
  nameWithType: IArray<T>.Item
  fullName: AlgoSdk.LowLevel.IArray<T>.Item
  nameWithType.vb: IArray(Of T).Item
  fullName.vb: AlgoSdk.LowLevel.IArray(Of T).Item
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
