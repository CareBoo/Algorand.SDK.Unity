### YamlMime:ManagedReference
items:
- uid: AlgoSdk.LowLevel.IContiguousArray`1
  commentId: T:AlgoSdk.LowLevel.IContiguousArray`1
  id: IContiguousArray`1
  parent: AlgoSdk.LowLevel
  children:
  - AlgoSdk.LowLevel.IContiguousArray`1.GetUnsafePtr
  langs:
  - csharp
  - vb
  name: IContiguousArray<T>
  nameWithType: IContiguousArray<T>
  fullName: AlgoSdk.LowLevel.IContiguousArray<T>
  type: Interface
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.LowLevel/ByteArray.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: IContiguousArray
    path: ../CareBoo.AlgoSdk.LowLevel/ByteArray.cs
    startLine: 15
  assemblies:
  - CareBoo.AlgoSdk.LowLevel
  namespace: AlgoSdk.LowLevel
  syntax:
    content: 'public interface IContiguousArray<T> : IArray<T>'
    typeParameters:
    - id: T
    content.vb: >-
      Public Interface IContiguousArray(Of T)
          Inherits IArray(Of T)
  inheritedMembers:
  - AlgoSdk.LowLevel.IArray{{T}}.Length
  - AlgoSdk.LowLevel.IArray{{T}}.Item(System.Int32)
  nameWithType.vb: IContiguousArray(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: AlgoSdk.LowLevel.IContiguousArray(Of T)
  name.vb: IContiguousArray(Of T)
- uid: AlgoSdk.LowLevel.IContiguousArray`1.GetUnsafePtr
  commentId: M:AlgoSdk.LowLevel.IContiguousArray`1.GetUnsafePtr
  id: GetUnsafePtr
  parent: AlgoSdk.LowLevel.IContiguousArray`1
  langs:
  - csharp
  - vb
  name: GetUnsafePtr()
  nameWithType: IContiguousArray<T>.GetUnsafePtr()
  fullName: AlgoSdk.LowLevel.IContiguousArray<T>.GetUnsafePtr()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.LowLevel/ByteArray.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetUnsafePtr
    path: ../CareBoo.AlgoSdk.LowLevel/ByteArray.cs
    startLine: 17
  assemblies:
  - CareBoo.AlgoSdk.LowLevel
  namespace: AlgoSdk.LowLevel
  syntax:
    content: void *GetUnsafePtr()
    return:
      type: System.Void*
    content.vb: 'Function GetUnsafePtr As '
  overload: AlgoSdk.LowLevel.IContiguousArray`1.GetUnsafePtr*
  nameWithType.vb: IContiguousArray(Of T).GetUnsafePtr()
  fullName.vb: AlgoSdk.LowLevel.IContiguousArray(Of T).GetUnsafePtr()
references:
- uid: AlgoSdk.LowLevel
  commentId: N:AlgoSdk.LowLevel
  name: AlgoSdk.LowLevel
  nameWithType: AlgoSdk.LowLevel
  fullName: AlgoSdk.LowLevel
- uid: AlgoSdk.LowLevel.IArray{{T}}.Length
  commentId: P:AlgoSdk.LowLevel.IArray{`0}.Length
  parent: AlgoSdk.LowLevel.IArray{{T}}
  definition: AlgoSdk.LowLevel.IArray`1.Length
  name: Length
  nameWithType: IArray<T>.Length
  fullName: AlgoSdk.LowLevel.IArray<T>.Length
  nameWithType.vb: IArray(Of T).Length
  fullName.vb: AlgoSdk.LowLevel.IArray(Of T).Length
- uid: AlgoSdk.LowLevel.IArray{{T}}.Item(System.Int32)
  commentId: P:AlgoSdk.LowLevel.IArray{`0}.Item(System.Int32)
  parent: AlgoSdk.LowLevel.IArray{{T}}
  definition: AlgoSdk.LowLevel.IArray`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: IArray<T>.Item[Int32]
  fullName: AlgoSdk.LowLevel.IArray<T>.Item[System.Int32]
  nameWithType.vb: IArray(Of T).Item(Int32)
  fullName.vb: AlgoSdk.LowLevel.IArray(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: AlgoSdk.LowLevel.IArray`1.Item(System.Int32)
    name: Item
    nameWithType: IArray<T>.Item
    fullName: AlgoSdk.LowLevel.IArray<T>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: AlgoSdk.LowLevel.IArray`1.Item(System.Int32)
    name: Item
    nameWithType: IArray(Of T).Item
    fullName: AlgoSdk.LowLevel.IArray(Of T).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.IArray`1.Length
  commentId: P:AlgoSdk.LowLevel.IArray`1.Length
  name: Length
  nameWithType: IArray<T>.Length
  fullName: AlgoSdk.LowLevel.IArray<T>.Length
  nameWithType.vb: IArray(Of T).Length
  fullName.vb: AlgoSdk.LowLevel.IArray(Of T).Length
- uid: AlgoSdk.LowLevel.IArray{{T}}
  commentId: T:AlgoSdk.LowLevel.IArray{`0}
  parent: AlgoSdk.LowLevel
  definition: AlgoSdk.LowLevel.IArray`1
  name: IArray<T>
  nameWithType: IArray<T>
  fullName: AlgoSdk.LowLevel.IArray<T>
  nameWithType.vb: IArray(Of T)
  fullName.vb: AlgoSdk.LowLevel.IArray(Of T)
  name.vb: IArray(Of T)
  spec.csharp:
  - uid: AlgoSdk.LowLevel.IArray`1
    name: IArray
    nameWithType: IArray
    fullName: AlgoSdk.LowLevel.IArray
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.LowLevel.IArray`1
    name: IArray
    nameWithType: IArray
    fullName: AlgoSdk.LowLevel.IArray
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.IArray`1.Item(System.Int32)
  commentId: P:AlgoSdk.LowLevel.IArray`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: IArray<T>.Item[Int32]
  fullName: AlgoSdk.LowLevel.IArray<T>.Item[System.Int32]
  nameWithType.vb: IArray(Of T).Item(Int32)
  fullName.vb: AlgoSdk.LowLevel.IArray(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: AlgoSdk.LowLevel.IArray`1.Item(System.Int32)
    name: Item
    nameWithType: IArray<T>.Item
    fullName: AlgoSdk.LowLevel.IArray<T>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: AlgoSdk.LowLevel.IArray`1.Item(System.Int32)
    name: Item
    nameWithType: IArray(Of T).Item
    fullName: AlgoSdk.LowLevel.IArray(Of T).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.IArray`1
  commentId: T:AlgoSdk.LowLevel.IArray`1
  name: IArray<T>
  nameWithType: IArray<T>
  fullName: AlgoSdk.LowLevel.IArray<T>
  nameWithType.vb: IArray(Of T)
  fullName.vb: AlgoSdk.LowLevel.IArray(Of T)
  name.vb: IArray(Of T)
  spec.csharp:
  - uid: AlgoSdk.LowLevel.IArray`1
    name: IArray
    nameWithType: IArray
    fullName: AlgoSdk.LowLevel.IArray
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.LowLevel.IArray`1
    name: IArray
    nameWithType: IArray
    fullName: AlgoSdk.LowLevel.IArray
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.IContiguousArray`1.GetUnsafePtr*
  commentId: Overload:AlgoSdk.LowLevel.IContiguousArray`1.GetUnsafePtr
  name: GetUnsafePtr
  nameWithType: IContiguousArray<T>.GetUnsafePtr
  fullName: AlgoSdk.LowLevel.IContiguousArray<T>.GetUnsafePtr
  nameWithType.vb: IContiguousArray(Of T).GetUnsafePtr
  fullName.vb: AlgoSdk.LowLevel.IContiguousArray(Of T).GetUnsafePtr
- uid: System.Void*
  isExternal: true
  name: Void*
  nameWithType: Void*
  fullName: System.Void*
  spec.csharp:
  - uid: System.Void
    name: Void
    nameWithType: Void
    fullName: System.Void
    isExternal: true
  - name: '*'
    nameWithType: '*'
    fullName: '*'
  spec.vb:
  - uid: System.Void
    name: Void
    nameWithType: Void
    fullName: System.Void
    isExternal: true
  - name: '*'
    nameWithType: '*'
    fullName: '*'
