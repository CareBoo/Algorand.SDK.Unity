### YamlMime:ManagedReference
items:
- uid: AlgoSdk.AlgoApiResponse`1
  commentId: T:AlgoSdk.AlgoApiResponse`1
  id: AlgoApiResponse`1
  parent: AlgoSdk
  children:
  - AlgoSdk.AlgoApiResponse`1.#ctor(AlgoSdk.AlgoApiResponse)
  - AlgoSdk.AlgoApiResponse`1.#ctor(AlgoSdk.AlgoApiResponse,`0)
  - AlgoSdk.AlgoApiResponse`1.#ctor(AlgoSdk.AlgoApiResponse,AlgoSdk.ErrorResponse)
  - AlgoSdk.AlgoApiResponse`1.ContentType
  - AlgoSdk.AlgoApiResponse`1.Data
  - AlgoSdk.AlgoApiResponse`1.Deconstruct(AlgoSdk.ErrorResponse@,`0@)
  - AlgoSdk.AlgoApiResponse`1.Error
  - AlgoSdk.AlgoApiResponse`1.GetText
  - AlgoSdk.AlgoApiResponse`1.op_Implicit(AlgoSdk.AlgoApiResponse)~AlgoSdk.AlgoApiResponse{`0}
  - AlgoSdk.AlgoApiResponse`1.op_Implicit(AlgoSdk.AlgoApiResponse{`0})~AlgoSdk.AlgoApiResponse
  - AlgoSdk.AlgoApiResponse`1.Payload
  - AlgoSdk.AlgoApiResponse`1.ResponseCode
  - AlgoSdk.AlgoApiResponse`1.Status
  langs:
  - csharp
  - vb
  name: AlgoApiResponse<T>
  nameWithType: AlgoApiResponse<T>
  fullName: AlgoSdk.AlgoApiResponse<T>
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiResponse.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AlgoApiResponse
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiResponse.cs
    startLine: 78
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nWrapper class around a completed <xref href=\"UnityEngine.Networking.UnityWebRequest\" data-throw-if-not-resolved=\"false\"></xref>.\nThis can be deconstructed into a tuple of (ErrorResponse, Payload)\n"
  example: []
  syntax:
    content: 'public struct AlgoApiResponse<T> : IAlgoApiResponse<T>, IAlgoApiResponse'
    typeParameters:
    - id: T
      description: The type of the object deserialized from the response
    content.vb: >-
      Public Structure AlgoApiResponse(Of T)
          Implements IAlgoApiResponse(Of T), IAlgoApiResponse
  implements:
  - AlgoSdk.IAlgoApiResponse{{T}}
  - AlgoSdk.IAlgoApiResponse
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: AlgoApiResponse(Of T)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  fullName.vb: AlgoSdk.AlgoApiResponse(Of T)
  name.vb: AlgoApiResponse(Of T)
- uid: AlgoSdk.AlgoApiResponse`1.#ctor(AlgoSdk.AlgoApiResponse)
  commentId: M:AlgoSdk.AlgoApiResponse`1.#ctor(AlgoSdk.AlgoApiResponse)
  id: '#ctor(AlgoSdk.AlgoApiResponse)'
  parent: AlgoSdk.AlgoApiResponse`1
  langs:
  - csharp
  - vb
  name: AlgoApiResponse(AlgoApiResponse)
  nameWithType: AlgoApiResponse<T>.AlgoApiResponse(AlgoApiResponse)
  fullName: AlgoSdk.AlgoApiResponse<T>.AlgoApiResponse(AlgoSdk.AlgoApiResponse)
  type: Constructor
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiResponse.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: .ctor
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiResponse.cs
    startLine: 84
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public AlgoApiResponse(AlgoApiResponse response)
    parameters:
    - id: response
      type: AlgoSdk.AlgoApiResponse
    content.vb: Public Sub New(response As AlgoApiResponse)
  overload: AlgoSdk.AlgoApiResponse`1.#ctor*
  nameWithType.vb: AlgoApiResponse(Of T).AlgoApiResponse(AlgoApiResponse)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.AlgoApiResponse(Of T).AlgoApiResponse(AlgoSdk.AlgoApiResponse)
- uid: AlgoSdk.AlgoApiResponse`1.#ctor(AlgoSdk.AlgoApiResponse,AlgoSdk.ErrorResponse)
  commentId: M:AlgoSdk.AlgoApiResponse`1.#ctor(AlgoSdk.AlgoApiResponse,AlgoSdk.ErrorResponse)
  id: '#ctor(AlgoSdk.AlgoApiResponse,AlgoSdk.ErrorResponse)'
  parent: AlgoSdk.AlgoApiResponse`1
  langs:
  - csharp
  - vb
  name: AlgoApiResponse(AlgoApiResponse, ErrorResponse)
  nameWithType: AlgoApiResponse<T>.AlgoApiResponse(AlgoApiResponse, ErrorResponse)
  fullName: AlgoSdk.AlgoApiResponse<T>.AlgoApiResponse(AlgoSdk.AlgoApiResponse, AlgoSdk.ErrorResponse)
  type: Constructor
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiResponse.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: .ctor
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiResponse.cs
    startLine: 94
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public AlgoApiResponse(AlgoApiResponse response, ErrorResponse error)
    parameters:
    - id: response
      type: AlgoSdk.AlgoApiResponse
    - id: error
      type: AlgoSdk.ErrorResponse
    content.vb: Public Sub New(response As AlgoApiResponse, error As ErrorResponse)
  overload: AlgoSdk.AlgoApiResponse`1.#ctor*
  nameWithType.vb: AlgoApiResponse(Of T).AlgoApiResponse(AlgoApiResponse, ErrorResponse)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.AlgoApiResponse(Of T).AlgoApiResponse(AlgoSdk.AlgoApiResponse, AlgoSdk.ErrorResponse)
- uid: AlgoSdk.AlgoApiResponse`1.#ctor(AlgoSdk.AlgoApiResponse,`0)
  commentId: M:AlgoSdk.AlgoApiResponse`1.#ctor(AlgoSdk.AlgoApiResponse,`0)
  id: '#ctor(AlgoSdk.AlgoApiResponse,`0)'
  parent: AlgoSdk.AlgoApiResponse`1
  langs:
  - csharp
  - vb
  name: AlgoApiResponse(AlgoApiResponse, T)
  nameWithType: AlgoApiResponse<T>.AlgoApiResponse(AlgoApiResponse, T)
  fullName: AlgoSdk.AlgoApiResponse<T>.AlgoApiResponse(AlgoSdk.AlgoApiResponse, T)
  type: Constructor
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiResponse.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: .ctor
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiResponse.cs
    startLine: 101
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public AlgoApiResponse(AlgoApiResponse response, T payload)
    parameters:
    - id: response
      type: AlgoSdk.AlgoApiResponse
    - id: payload
      type: '{T}'
    content.vb: Public Sub New(response As AlgoApiResponse, payload As T)
  overload: AlgoSdk.AlgoApiResponse`1.#ctor*
  nameWithType.vb: AlgoApiResponse(Of T).AlgoApiResponse(AlgoApiResponse, T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.AlgoApiResponse(Of T).AlgoApiResponse(AlgoSdk.AlgoApiResponse, T)
- uid: AlgoSdk.AlgoApiResponse`1.Payload
  commentId: P:AlgoSdk.AlgoApiResponse`1.Payload
  id: Payload
  parent: AlgoSdk.AlgoApiResponse`1
  langs:
  - csharp
  - vb
  name: Payload
  nameWithType: AlgoApiResponse<T>.Payload
  fullName: AlgoSdk.AlgoApiResponse<T>.Payload
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiResponse.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Payload
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiResponse.cs
    startLine: 108
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public T Payload { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public ReadOnly Property Payload As T
  overload: AlgoSdk.AlgoApiResponse`1.Payload*
  implements:
  - AlgoSdk.IAlgoApiResponse{{T}}.Payload
  nameWithType.vb: AlgoApiResponse(Of T).Payload
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: AlgoSdk.AlgoApiResponse(Of T).Payload
- uid: AlgoSdk.AlgoApiResponse`1.Error
  commentId: P:AlgoSdk.AlgoApiResponse`1.Error
  id: Error
  parent: AlgoSdk.AlgoApiResponse`1
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: AlgoApiResponse<T>.Error
  fullName: AlgoSdk.AlgoApiResponse<T>.Error
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiResponse.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Error
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiResponse.cs
    startLine: 110
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public ErrorResponse Error { get; }
    parameters: []
    return:
      type: AlgoSdk.ErrorResponse
    content.vb: Public ReadOnly Property Error As ErrorResponse
  overload: AlgoSdk.AlgoApiResponse`1.Error*
  implements:
  - AlgoSdk.IAlgoApiResponse.Error
  nameWithType.vb: AlgoApiResponse(Of T).Error
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: AlgoSdk.AlgoApiResponse(Of T).Error
- uid: AlgoSdk.AlgoApiResponse`1.Data
  commentId: P:AlgoSdk.AlgoApiResponse`1.Data
  id: Data
  parent: AlgoSdk.AlgoApiResponse`1
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: AlgoApiResponse<T>.Data
  fullName: AlgoSdk.AlgoApiResponse<T>.Data
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiResponse.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Data
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiResponse.cs
    startLine: 112
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public byte[] Data { get; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly Property Data As Byte()
  overload: AlgoSdk.AlgoApiResponse`1.Data*
  implements:
  - AlgoSdk.IAlgoApiResponse.Data
  nameWithType.vb: AlgoApiResponse(Of T).Data
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: AlgoSdk.AlgoApiResponse(Of T).Data
- uid: AlgoSdk.AlgoApiResponse`1.ResponseCode
  commentId: P:AlgoSdk.AlgoApiResponse`1.ResponseCode
  id: ResponseCode
  parent: AlgoSdk.AlgoApiResponse`1
  langs:
  - csharp
  - vb
  name: ResponseCode
  nameWithType: AlgoApiResponse<T>.ResponseCode
  fullName: AlgoSdk.AlgoApiResponse<T>.ResponseCode
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiResponse.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ResponseCode
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiResponse.cs
    startLine: 114
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public long ResponseCode { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property ResponseCode As Long
  overload: AlgoSdk.AlgoApiResponse`1.ResponseCode*
  implements:
  - AlgoSdk.IAlgoApiResponse.ResponseCode
  nameWithType.vb: AlgoApiResponse(Of T).ResponseCode
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: AlgoSdk.AlgoApiResponse(Of T).ResponseCode
- uid: AlgoSdk.AlgoApiResponse`1.Status
  commentId: P:AlgoSdk.AlgoApiResponse`1.Status
  id: Status
  parent: AlgoSdk.AlgoApiResponse`1
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: AlgoApiResponse<T>.Status
  fullName: AlgoSdk.AlgoApiResponse<T>.Status
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiResponse.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Status
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiResponse.cs
    startLine: 116
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public UnityWebRequest.Result Status { get; }
    parameters: []
    return:
      type: UnityEngine.Networking.UnityWebRequest.Result
    content.vb: Public ReadOnly Property Status As UnityWebRequest.Result
  overload: AlgoSdk.AlgoApiResponse`1.Status*
  implements:
  - AlgoSdk.IAlgoApiResponse.Status
  nameWithType.vb: AlgoApiResponse(Of T).Status
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: AlgoSdk.AlgoApiResponse(Of T).Status
- uid: AlgoSdk.AlgoApiResponse`1.ContentType
  commentId: P:AlgoSdk.AlgoApiResponse`1.ContentType
  id: ContentType
  parent: AlgoSdk.AlgoApiResponse`1
  langs:
  - csharp
  - vb
  name: ContentType
  nameWithType: AlgoApiResponse<T>.ContentType
  fullName: AlgoSdk.AlgoApiResponse<T>.ContentType
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiResponse.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ContentType
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiResponse.cs
    startLine: 118
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public ContentType ContentType { get; }
    parameters: []
    return:
      type: AlgoSdk.ContentType
    content.vb: Public ReadOnly Property ContentType As ContentType
  overload: AlgoSdk.AlgoApiResponse`1.ContentType*
  implements:
  - AlgoSdk.IAlgoApiResponse.ContentType
  nameWithType.vb: AlgoApiResponse(Of T).ContentType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: AlgoSdk.AlgoApiResponse(Of T).ContentType
- uid: AlgoSdk.AlgoApiResponse`1.GetText
  commentId: M:AlgoSdk.AlgoApiResponse`1.GetText
  id: GetText
  parent: AlgoSdk.AlgoApiResponse`1
  langs:
  - csharp
  - vb
  name: GetText()
  nameWithType: AlgoApiResponse<T>.GetText()
  fullName: AlgoSdk.AlgoApiResponse<T>.GetText()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiResponse.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetText
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiResponse.cs
    startLine: 120
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public string GetText()
    return:
      type: System.String
    content.vb: Public Function GetText As String
  overload: AlgoSdk.AlgoApiResponse`1.GetText*
  implements:
  - AlgoSdk.IAlgoApiResponse.GetText
  nameWithType.vb: AlgoApiResponse(Of T).GetText()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.AlgoApiResponse(Of T).GetText()
- uid: AlgoSdk.AlgoApiResponse`1.op_Implicit(AlgoSdk.AlgoApiResponse)~AlgoSdk.AlgoApiResponse{`0}
  commentId: M:AlgoSdk.AlgoApiResponse`1.op_Implicit(AlgoSdk.AlgoApiResponse)~AlgoSdk.AlgoApiResponse{`0}
  id: op_Implicit(AlgoSdk.AlgoApiResponse)~AlgoSdk.AlgoApiResponse{`0}
  parent: AlgoSdk.AlgoApiResponse`1
  langs:
  - csharp
  - vb
  name: Implicit(AlgoApiResponse to AlgoApiResponse<T>)
  nameWithType: AlgoApiResponse<T>.Implicit(AlgoApiResponse to AlgoApiResponse<T>)
  fullName: AlgoSdk.AlgoApiResponse<T>.Implicit(AlgoSdk.AlgoApiResponse to AlgoSdk.AlgoApiResponse<T>)
  type: Operator
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiResponse.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: op_Implicit
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiResponse.cs
    startLine: 122
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public static implicit operator AlgoApiResponse<T>(AlgoApiResponse response)
    parameters:
    - id: response
      type: AlgoSdk.AlgoApiResponse
    return:
      type: AlgoSdk.AlgoApiResponse`1
    content.vb: Public Shared Widening Operator CType(response As AlgoApiResponse) As AlgoApiResponse(Of T)
  overload: AlgoSdk.AlgoApiResponse`1.op_Implicit*
  nameWithType.vb: AlgoApiResponse(Of T).Widening(AlgoApiResponse to AlgoApiResponse(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.AlgoApiResponse(Of T).Widening(AlgoSdk.AlgoApiResponse to AlgoSdk.AlgoApiResponse(Of T))
  name.vb: Widening(AlgoApiResponse to AlgoApiResponse(Of T))
- uid: AlgoSdk.AlgoApiResponse`1.op_Implicit(AlgoSdk.AlgoApiResponse{`0})~AlgoSdk.AlgoApiResponse
  commentId: M:AlgoSdk.AlgoApiResponse`1.op_Implicit(AlgoSdk.AlgoApiResponse{`0})~AlgoSdk.AlgoApiResponse
  id: op_Implicit(AlgoSdk.AlgoApiResponse{`0})~AlgoSdk.AlgoApiResponse
  parent: AlgoSdk.AlgoApiResponse`1
  langs:
  - csharp
  - vb
  name: Implicit(AlgoApiResponse<T> to AlgoApiResponse)
  nameWithType: AlgoApiResponse<T>.Implicit(AlgoApiResponse<T> to AlgoApiResponse)
  fullName: AlgoSdk.AlgoApiResponse<T>.Implicit(AlgoSdk.AlgoApiResponse<T> to AlgoSdk.AlgoApiResponse)
  type: Operator
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiResponse.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: op_Implicit
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiResponse.cs
    startLine: 127
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public static implicit operator AlgoApiResponse(AlgoApiResponse<T> response)
    parameters:
    - id: response
      type: AlgoSdk.AlgoApiResponse`1
    return:
      type: AlgoSdk.AlgoApiResponse
    content.vb: Public Shared Widening Operator CType(response As AlgoApiResponse(Of T)) As AlgoApiResponse
  overload: AlgoSdk.AlgoApiResponse`1.op_Implicit*
  nameWithType.vb: AlgoApiResponse(Of T).Widening(AlgoApiResponse(Of T) to AlgoApiResponse)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.AlgoApiResponse(Of T).Widening(AlgoSdk.AlgoApiResponse(Of T) to AlgoSdk.AlgoApiResponse)
  name.vb: Widening(AlgoApiResponse(Of T) to AlgoApiResponse)
- uid: AlgoSdk.AlgoApiResponse`1.Deconstruct(AlgoSdk.ErrorResponse@,`0@)
  commentId: M:AlgoSdk.AlgoApiResponse`1.Deconstruct(AlgoSdk.ErrorResponse@,`0@)
  id: Deconstruct(AlgoSdk.ErrorResponse@,`0@)
  parent: AlgoSdk.AlgoApiResponse`1
  langs:
  - csharp
  - vb
  name: Deconstruct(out ErrorResponse, out T)
  nameWithType: AlgoApiResponse<T>.Deconstruct(out ErrorResponse, out T)
  fullName: AlgoSdk.AlgoApiResponse<T>.Deconstruct(out AlgoSdk.ErrorResponse, out T)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiResponse.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Deconstruct
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiResponse.cs
    startLine: 132
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public void Deconstruct(out ErrorResponse error, out T payload)
    parameters:
    - id: error
      type: AlgoSdk.ErrorResponse
    - id: payload
      type: '{T}'
    content.vb: Public Sub Deconstruct(ByRef error As ErrorResponse, ByRef payload As T)
  overload: AlgoSdk.AlgoApiResponse`1.Deconstruct*
  nameWithType.vb: AlgoApiResponse(Of T).Deconstruct(ByRef ErrorResponse, ByRef T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.AlgoApiResponse(Of T).Deconstruct(ByRef AlgoSdk.ErrorResponse, ByRef T)
  name.vb: Deconstruct(ByRef ErrorResponse, ByRef T)
references:
- uid: UnityEngine.Networking.UnityWebRequest
  commentId: T:UnityEngine.Networking.UnityWebRequest
  parent: UnityEngine.Networking
  isExternal: true
  name: UnityWebRequest
  nameWithType: UnityWebRequest
  fullName: UnityEngine.Networking.UnityWebRequest
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: AlgoSdk.IAlgoApiResponse{{T}}
  commentId: T:AlgoSdk.IAlgoApiResponse{`0}
  parent: AlgoSdk
  definition: AlgoSdk.IAlgoApiResponse`1
  name: IAlgoApiResponse<T>
  nameWithType: IAlgoApiResponse<T>
  fullName: AlgoSdk.IAlgoApiResponse<T>
  nameWithType.vb: IAlgoApiResponse(Of T)
  fullName.vb: AlgoSdk.IAlgoApiResponse(Of T)
  name.vb: IAlgoApiResponse(Of T)
  spec.csharp:
  - uid: AlgoSdk.IAlgoApiResponse`1
    name: IAlgoApiResponse
    nameWithType: IAlgoApiResponse
    fullName: AlgoSdk.IAlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.IAlgoApiResponse`1
    name: IAlgoApiResponse
    nameWithType: IAlgoApiResponse
    fullName: AlgoSdk.IAlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IAlgoApiResponse
  commentId: T:AlgoSdk.IAlgoApiResponse
  parent: AlgoSdk
  name: IAlgoApiResponse
  nameWithType: IAlgoApiResponse
  fullName: AlgoSdk.IAlgoApiResponse
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Networking
  commentId: N:UnityEngine.Networking
  isExternal: true
  name: UnityEngine.Networking
  nameWithType: UnityEngine.Networking
  fullName: UnityEngine.Networking
- uid: AlgoSdk.IAlgoApiResponse`1
  commentId: T:AlgoSdk.IAlgoApiResponse`1
  name: IAlgoApiResponse<T>
  nameWithType: IAlgoApiResponse<T>
  fullName: AlgoSdk.IAlgoApiResponse<T>
  nameWithType.vb: IAlgoApiResponse(Of T)
  fullName.vb: AlgoSdk.IAlgoApiResponse(Of T)
  name.vb: IAlgoApiResponse(Of T)
  spec.csharp:
  - uid: AlgoSdk.IAlgoApiResponse`1
    name: IAlgoApiResponse
    nameWithType: IAlgoApiResponse
    fullName: AlgoSdk.IAlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.IAlgoApiResponse`1
    name: IAlgoApiResponse
    nameWithType: IAlgoApiResponse
    fullName: AlgoSdk.IAlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AlgoSdk.AlgoApiResponse`1.#ctor*
  commentId: Overload:AlgoSdk.AlgoApiResponse`1.#ctor
  name: AlgoApiResponse
  nameWithType: AlgoApiResponse<T>.AlgoApiResponse
  fullName: AlgoSdk.AlgoApiResponse<T>.AlgoApiResponse
  nameWithType.vb: AlgoApiResponse(Of T).AlgoApiResponse
  fullName.vb: AlgoSdk.AlgoApiResponse(Of T).AlgoApiResponse
- uid: AlgoSdk.AlgoApiResponse
  commentId: T:AlgoSdk.AlgoApiResponse
  parent: AlgoSdk
  name: AlgoApiResponse
  nameWithType: AlgoApiResponse
  fullName: AlgoSdk.AlgoApiResponse
- uid: AlgoSdk.ErrorResponse
  commentId: T:AlgoSdk.ErrorResponse
  parent: AlgoSdk
  name: ErrorResponse
  nameWithType: ErrorResponse
  fullName: AlgoSdk.ErrorResponse
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: AlgoSdk.AlgoApiResponse`1.Payload*
  commentId: Overload:AlgoSdk.AlgoApiResponse`1.Payload
  name: Payload
  nameWithType: AlgoApiResponse<T>.Payload
  fullName: AlgoSdk.AlgoApiResponse<T>.Payload
  nameWithType.vb: AlgoApiResponse(Of T).Payload
  fullName.vb: AlgoSdk.AlgoApiResponse(Of T).Payload
- uid: AlgoSdk.IAlgoApiResponse{{T}}.Payload
  commentId: P:AlgoSdk.IAlgoApiResponse{`0}.Payload
  parent: AlgoSdk.IAlgoApiResponse{{T}}
  definition: AlgoSdk.IAlgoApiResponse`1.Payload
  name: Payload
  nameWithType: IAlgoApiResponse<T>.Payload
  fullName: AlgoSdk.IAlgoApiResponse<T>.Payload
  nameWithType.vb: IAlgoApiResponse(Of T).Payload
  fullName.vb: AlgoSdk.IAlgoApiResponse(Of T).Payload
- uid: AlgoSdk.IAlgoApiResponse`1.Payload
  commentId: P:AlgoSdk.IAlgoApiResponse`1.Payload
  name: Payload
  nameWithType: IAlgoApiResponse<T>.Payload
  fullName: AlgoSdk.IAlgoApiResponse<T>.Payload
  nameWithType.vb: IAlgoApiResponse(Of T).Payload
  fullName.vb: AlgoSdk.IAlgoApiResponse(Of T).Payload
- uid: AlgoSdk.AlgoApiResponse`1.Error*
  commentId: Overload:AlgoSdk.AlgoApiResponse`1.Error
  name: Error
  nameWithType: AlgoApiResponse<T>.Error
  fullName: AlgoSdk.AlgoApiResponse<T>.Error
  nameWithType.vb: AlgoApiResponse(Of T).Error
  fullName.vb: AlgoSdk.AlgoApiResponse(Of T).Error
- uid: AlgoSdk.IAlgoApiResponse.Error
  commentId: P:AlgoSdk.IAlgoApiResponse.Error
  parent: AlgoSdk.IAlgoApiResponse
  name: Error
  nameWithType: IAlgoApiResponse.Error
  fullName: AlgoSdk.IAlgoApiResponse.Error
- uid: AlgoSdk.AlgoApiResponse`1.Data*
  commentId: Overload:AlgoSdk.AlgoApiResponse`1.Data
  name: Data
  nameWithType: AlgoApiResponse<T>.Data
  fullName: AlgoSdk.AlgoApiResponse<T>.Data
  nameWithType.vb: AlgoApiResponse(Of T).Data
  fullName.vb: AlgoSdk.AlgoApiResponse(Of T).Data
- uid: AlgoSdk.IAlgoApiResponse.Data
  commentId: P:AlgoSdk.IAlgoApiResponse.Data
  parent: AlgoSdk.IAlgoApiResponse
  name: Data
  nameWithType: IAlgoApiResponse.Data
  fullName: AlgoSdk.IAlgoApiResponse.Data
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AlgoSdk.AlgoApiResponse`1.ResponseCode*
  commentId: Overload:AlgoSdk.AlgoApiResponse`1.ResponseCode
  name: ResponseCode
  nameWithType: AlgoApiResponse<T>.ResponseCode
  fullName: AlgoSdk.AlgoApiResponse<T>.ResponseCode
  nameWithType.vb: AlgoApiResponse(Of T).ResponseCode
  fullName.vb: AlgoSdk.AlgoApiResponse(Of T).ResponseCode
- uid: AlgoSdk.IAlgoApiResponse.ResponseCode
  commentId: P:AlgoSdk.IAlgoApiResponse.ResponseCode
  parent: AlgoSdk.IAlgoApiResponse
  name: ResponseCode
  nameWithType: IAlgoApiResponse.ResponseCode
  fullName: AlgoSdk.IAlgoApiResponse.ResponseCode
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: AlgoSdk.AlgoApiResponse`1.Status*
  commentId: Overload:AlgoSdk.AlgoApiResponse`1.Status
  name: Status
  nameWithType: AlgoApiResponse<T>.Status
  fullName: AlgoSdk.AlgoApiResponse<T>.Status
  nameWithType.vb: AlgoApiResponse(Of T).Status
  fullName.vb: AlgoSdk.AlgoApiResponse(Of T).Status
- uid: AlgoSdk.IAlgoApiResponse.Status
  commentId: P:AlgoSdk.IAlgoApiResponse.Status
  parent: AlgoSdk.IAlgoApiResponse
  name: Status
  nameWithType: IAlgoApiResponse.Status
  fullName: AlgoSdk.IAlgoApiResponse.Status
- uid: UnityEngine.Networking.UnityWebRequest.Result
  commentId: T:UnityEngine.Networking.UnityWebRequest.Result
  parent: UnityEngine.Networking
  isExternal: true
  name: UnityWebRequest.Result
  nameWithType: UnityWebRequest.Result
  fullName: UnityEngine.Networking.UnityWebRequest.Result
- uid: AlgoSdk.AlgoApiResponse`1.ContentType*
  commentId: Overload:AlgoSdk.AlgoApiResponse`1.ContentType
  name: ContentType
  nameWithType: AlgoApiResponse<T>.ContentType
  fullName: AlgoSdk.AlgoApiResponse<T>.ContentType
  nameWithType.vb: AlgoApiResponse(Of T).ContentType
  fullName.vb: AlgoSdk.AlgoApiResponse(Of T).ContentType
- uid: AlgoSdk.IAlgoApiResponse.ContentType
  commentId: P:AlgoSdk.IAlgoApiResponse.ContentType
  parent: AlgoSdk.IAlgoApiResponse
  name: ContentType
  nameWithType: IAlgoApiResponse.ContentType
  fullName: AlgoSdk.IAlgoApiResponse.ContentType
- uid: AlgoSdk.ContentType
  commentId: T:AlgoSdk.ContentType
  parent: AlgoSdk
  name: ContentType
  nameWithType: ContentType
  fullName: AlgoSdk.ContentType
- uid: AlgoSdk.AlgoApiResponse`1.GetText*
  commentId: Overload:AlgoSdk.AlgoApiResponse`1.GetText
  name: GetText
  nameWithType: AlgoApiResponse<T>.GetText
  fullName: AlgoSdk.AlgoApiResponse<T>.GetText
  nameWithType.vb: AlgoApiResponse(Of T).GetText
  fullName.vb: AlgoSdk.AlgoApiResponse(Of T).GetText
- uid: AlgoSdk.IAlgoApiResponse.GetText
  commentId: M:AlgoSdk.IAlgoApiResponse.GetText
  parent: AlgoSdk.IAlgoApiResponse
  name: GetText()
  nameWithType: IAlgoApiResponse.GetText()
  fullName: AlgoSdk.IAlgoApiResponse.GetText()
  spec.csharp:
  - uid: AlgoSdk.IAlgoApiResponse.GetText
    name: GetText
    nameWithType: IAlgoApiResponse.GetText
    fullName: AlgoSdk.IAlgoApiResponse.GetText
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.IAlgoApiResponse.GetText
    name: GetText
    nameWithType: IAlgoApiResponse.GetText
    fullName: AlgoSdk.IAlgoApiResponse.GetText
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AlgoSdk.AlgoApiResponse`1.op_Implicit*
  commentId: Overload:AlgoSdk.AlgoApiResponse`1.op_Implicit
  name: Implicit
  nameWithType: AlgoApiResponse<T>.Implicit
  fullName: AlgoSdk.AlgoApiResponse<T>.Implicit
  nameWithType.vb: AlgoApiResponse(Of T).Widening
  fullName.vb: AlgoSdk.AlgoApiResponse(Of T).Widening
  name.vb: Widening
- uid: AlgoSdk.AlgoApiResponse`1
  commentId: T:AlgoSdk.AlgoApiResponse`1
  parent: AlgoSdk
  name: AlgoApiResponse<T>
  nameWithType: AlgoApiResponse<T>
  fullName: AlgoSdk.AlgoApiResponse<T>
  nameWithType.vb: AlgoApiResponse(Of T)
  fullName.vb: AlgoSdk.AlgoApiResponse(Of T)
  name.vb: AlgoApiResponse(Of T)
  spec.csharp:
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.AlgoApiResponse`1.Deconstruct*
  commentId: Overload:AlgoSdk.AlgoApiResponse`1.Deconstruct
  name: Deconstruct
  nameWithType: AlgoApiResponse<T>.Deconstruct
  fullName: AlgoSdk.AlgoApiResponse<T>.Deconstruct
  nameWithType.vb: AlgoApiResponse(Of T).Deconstruct
  fullName.vb: AlgoSdk.AlgoApiResponse(Of T).Deconstruct
