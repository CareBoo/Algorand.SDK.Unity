### YamlMime:ManagedReference
items:
- uid: AlgoSdk.Crypto.SecureMemoryHandle
  commentId: T:AlgoSdk.Crypto.SecureMemoryHandle
  id: SecureMemoryHandle
  parent: AlgoSdk.Crypto
  children:
  - AlgoSdk.Crypto.SecureMemoryHandle.Create(System.UIntPtr)
  - AlgoSdk.Crypto.SecureMemoryHandle.Dispose
  - AlgoSdk.Crypto.SecureMemoryHandle.Dispose(Unity.Jobs.JobHandle)
  - AlgoSdk.Crypto.SecureMemoryHandle.IsCreated
  - AlgoSdk.Crypto.SecureMemoryHandle.Ptr
  langs:
  - csharp
  - vb
  name: SecureMemoryHandle
  nameWithType: SecureMemoryHandle
  fullName: AlgoSdk.Crypto.SecureMemoryHandle
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.Crypto/SecureMemoryHandle.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: SecureMemoryHandle
    path: ../CareBoo.AlgoSdk.Crypto/SecureMemoryHandle.cs
    startLine: 7
  assemblies:
  - CareBoo.AlgoSdk.Crypto
  namespace: AlgoSdk.Crypto
  syntax:
    content: 'public struct SecureMemoryHandle : INativeDisposable, IDisposable'
    content.vb: >-
      Public Structure SecureMemoryHandle
          Implements INativeDisposable, IDisposable
  implements:
  - Unity.Collections.INativeDisposable
  - System.IDisposable
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: AlgoSdk.Crypto.SecureMemoryHandle.Ptr
  commentId: F:AlgoSdk.Crypto.SecureMemoryHandle.Ptr
  id: Ptr
  parent: AlgoSdk.Crypto.SecureMemoryHandle
  langs:
  - csharp
  - vb
  name: Ptr
  nameWithType: SecureMemoryHandle.Ptr
  fullName: AlgoSdk.Crypto.SecureMemoryHandle.Ptr
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.Crypto/SecureMemoryHandle.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Ptr
    path: ../CareBoo.AlgoSdk.Crypto/SecureMemoryHandle.cs
    startLine: 14
  assemblies:
  - CareBoo.AlgoSdk.Crypto
  namespace: AlgoSdk.Crypto
  syntax:
    content: public IntPtr Ptr
    return:
      type: System.IntPtr
    content.vb: Public Ptr As IntPtr
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Crypto.SecureMemoryHandle.Create(System.UIntPtr)
  commentId: M:AlgoSdk.Crypto.SecureMemoryHandle.Create(System.UIntPtr)
  id: Create(System.UIntPtr)
  parent: AlgoSdk.Crypto.SecureMemoryHandle
  langs:
  - csharp
  - vb
  name: Create(UIntPtr)
  nameWithType: SecureMemoryHandle.Create(UIntPtr)
  fullName: AlgoSdk.Crypto.SecureMemoryHandle.Create(System.UIntPtr)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.Crypto/SecureMemoryHandle.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Create
    path: ../CareBoo.AlgoSdk.Crypto/SecureMemoryHandle.cs
    startLine: 31
  assemblies:
  - CareBoo.AlgoSdk.Crypto
  namespace: AlgoSdk.Crypto
  syntax:
    content: public static SecureMemoryHandle Create(UIntPtr sizeBytes)
    parameters:
    - id: sizeBytes
      type: System.UIntPtr
    return:
      type: AlgoSdk.Crypto.SecureMemoryHandle
    content.vb: Public Shared Function Create(sizeBytes As UIntPtr) As SecureMemoryHandle
  overload: AlgoSdk.Crypto.SecureMemoryHandle.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AlgoSdk.Crypto.SecureMemoryHandle.IsCreated
  commentId: P:AlgoSdk.Crypto.SecureMemoryHandle.IsCreated
  id: IsCreated
  parent: AlgoSdk.Crypto.SecureMemoryHandle
  langs:
  - csharp
  - vb
  name: IsCreated
  nameWithType: SecureMemoryHandle.IsCreated
  fullName: AlgoSdk.Crypto.SecureMemoryHandle.IsCreated
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.Crypto/SecureMemoryHandle.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: IsCreated
    path: ../CareBoo.AlgoSdk.Crypto/SecureMemoryHandle.cs
    startLine: 37
  assemblies:
  - CareBoo.AlgoSdk.Crypto
  namespace: AlgoSdk.Crypto
  syntax:
    content: public bool IsCreated { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCreated As Boolean
  overload: AlgoSdk.Crypto.SecureMemoryHandle.IsCreated*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AlgoSdk.Crypto.SecureMemoryHandle.Dispose(Unity.Jobs.JobHandle)
  commentId: M:AlgoSdk.Crypto.SecureMemoryHandle.Dispose(Unity.Jobs.JobHandle)
  id: Dispose(Unity.Jobs.JobHandle)
  parent: AlgoSdk.Crypto.SecureMemoryHandle
  langs:
  - csharp
  - vb
  name: Dispose(JobHandle)
  nameWithType: SecureMemoryHandle.Dispose(JobHandle)
  fullName: AlgoSdk.Crypto.SecureMemoryHandle.Dispose(Unity.Jobs.JobHandle)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.Crypto/SecureMemoryHandle.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Dispose
    path: ../CareBoo.AlgoSdk.Crypto/SecureMemoryHandle.cs
    startLine: 39
  assemblies:
  - CareBoo.AlgoSdk.Crypto
  namespace: AlgoSdk.Crypto
  syntax:
    content: public JobHandle Dispose(JobHandle inputDeps)
    parameters:
    - id: inputDeps
      type: Unity.Jobs.JobHandle
    return:
      type: Unity.Jobs.JobHandle
    content.vb: Public Function Dispose(inputDeps As JobHandle) As JobHandle
  overload: AlgoSdk.Crypto.SecureMemoryHandle.Dispose*
  implements:
  - Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Crypto.SecureMemoryHandle.Dispose
  commentId: M:AlgoSdk.Crypto.SecureMemoryHandle.Dispose
  id: Dispose
  parent: AlgoSdk.Crypto.SecureMemoryHandle
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SecureMemoryHandle.Dispose()
  fullName: AlgoSdk.Crypto.SecureMemoryHandle.Dispose()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.Crypto/SecureMemoryHandle.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Dispose
    path: ../CareBoo.AlgoSdk.Crypto/SecureMemoryHandle.cs
    startLine: 44
  assemblies:
  - CareBoo.AlgoSdk.Crypto
  namespace: AlgoSdk.Crypto
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: AlgoSdk.Crypto.SecureMemoryHandle.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AlgoSdk.Crypto
  commentId: N:AlgoSdk.Crypto
  name: AlgoSdk.Crypto
  nameWithType: AlgoSdk.Crypto
  fullName: AlgoSdk.Crypto
- uid: Unity.Collections.INativeDisposable
  commentId: T:Unity.Collections.INativeDisposable
  parent: Unity.Collections
  name: INativeDisposable
  nameWithType: INativeDisposable
  fullName: Unity.Collections.INativeDisposable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Collections
  commentId: N:Unity.Collections
  name: Unity.Collections
  nameWithType: Unity.Collections
  fullName: Unity.Collections
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: AlgoSdk.Crypto.SecureMemoryHandle.Create*
  commentId: Overload:AlgoSdk.Crypto.SecureMemoryHandle.Create
  name: Create
  nameWithType: SecureMemoryHandle.Create
  fullName: AlgoSdk.Crypto.SecureMemoryHandle.Create
- uid: System.UIntPtr
  commentId: T:System.UIntPtr
  parent: System
  isExternal: true
  name: UIntPtr
  nameWithType: UIntPtr
  fullName: System.UIntPtr
- uid: AlgoSdk.Crypto.SecureMemoryHandle
  commentId: T:AlgoSdk.Crypto.SecureMemoryHandle
  parent: AlgoSdk.Crypto
  name: SecureMemoryHandle
  nameWithType: SecureMemoryHandle
  fullName: AlgoSdk.Crypto.SecureMemoryHandle
- uid: AlgoSdk.Crypto.SecureMemoryHandle.IsCreated*
  commentId: Overload:AlgoSdk.Crypto.SecureMemoryHandle.IsCreated
  name: IsCreated
  nameWithType: SecureMemoryHandle.IsCreated
  fullName: AlgoSdk.Crypto.SecureMemoryHandle.IsCreated
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AlgoSdk.Crypto.SecureMemoryHandle.Dispose*
  commentId: Overload:AlgoSdk.Crypto.SecureMemoryHandle.Dispose
  name: Dispose
  nameWithType: SecureMemoryHandle.Dispose
  fullName: AlgoSdk.Crypto.SecureMemoryHandle.Dispose
- uid: Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
  commentId: M:Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
  parent: Unity.Collections.INativeDisposable
  isExternal: true
  name: Dispose(JobHandle)
  nameWithType: INativeDisposable.Dispose(JobHandle)
  fullName: Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
  spec.csharp:
  - uid: Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
    name: Dispose
    nameWithType: INativeDisposable.Dispose
    fullName: Unity.Collections.INativeDisposable.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: Unity.Jobs.JobHandle
    name: JobHandle
    nameWithType: JobHandle
    fullName: Unity.Jobs.JobHandle
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
    name: Dispose
    nameWithType: INativeDisposable.Dispose
    fullName: Unity.Collections.INativeDisposable.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: Unity.Jobs.JobHandle
    name: JobHandle
    nameWithType: JobHandle
    fullName: Unity.Jobs.JobHandle
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Jobs.JobHandle
  commentId: T:Unity.Jobs.JobHandle
  parent: Unity.Jobs
  isExternal: true
  name: JobHandle
  nameWithType: JobHandle
  fullName: Unity.Jobs.JobHandle
- uid: Unity.Jobs
  commentId: N:Unity.Jobs
  isExternal: true
  name: Unity.Jobs
  nameWithType: Unity.Jobs
  fullName: Unity.Jobs
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
