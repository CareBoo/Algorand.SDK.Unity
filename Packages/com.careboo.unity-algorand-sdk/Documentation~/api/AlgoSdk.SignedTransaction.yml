### YamlMime:ManagedReference
items:
- uid: AlgoSdk.SignedTransaction
  commentId: T:AlgoSdk.SignedTransaction
  id: SignedTransaction
  parent: AlgoSdk
  children:
  - AlgoSdk.SignedTransaction.Equals(AlgoSdk.SignedTransaction)
  - AlgoSdk.SignedTransaction.Signature
  - AlgoSdk.SignedTransaction.Transaction
  langs:
  - csharp
  - vb
  name: SignedTransaction
  nameWithType: SignedTransaction
  fullName: AlgoSdk.SignedTransaction
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/SignedTransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: SignedTransaction
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/SignedTransaction.cs
    startLine: 4
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiFormatter(typeof(SignedTransactionFormatter), "C:\\Users\\jason\\Projects\\CareBoo\\Unity.AlgoSdk\\Packages\\com.careboo.unity-algorand-sdk\\CareBoo.AlgoSdk\\AlgoApi\\Shared\\Models\\Transaction\\SignedTransaction.cs", 5)]

      public struct SignedTransaction : IEquatable<SignedTransaction>
    content.vb: >-
      <AlgoApiFormatter(GetType(SignedTransactionFormatter), "C:\Users\jason\Projects\CareBoo\Unity.AlgoSdk\Packages\com.careboo.unity-algorand-sdk\CareBoo.AlgoSdk\AlgoApi\Shared\Models\Transaction\SignedTransaction.cs", 5)>

      Public Structure SignedTransaction
          Implements IEquatable(Of SignedTransaction)
  implements:
  - System.IEquatable{AlgoSdk.SignedTransaction}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: AlgoSdk.AlgoApiFormatterAttribute
    ctor: AlgoSdk.AlgoApiFormatterAttribute.#ctor(System.Type,System.String,System.Int32)
    arguments:
    - type: System.Type
      value: AlgoSdk.SignedTransactionFormatter
    - type: System.String
      value: C:\Users\jason\Projects\CareBoo\Unity.AlgoSdk\Packages\com.careboo.unity-algorand-sdk\CareBoo.AlgoSdk\AlgoApi\Shared\Models\Transaction\SignedTransaction.cs
    - type: System.Int32
      value: 5
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: AlgoSdk.SignedTransaction.Transaction
  commentId: F:AlgoSdk.SignedTransaction.Transaction
  id: Transaction
  parent: AlgoSdk.SignedTransaction
  langs:
  - csharp
  - vb
  name: Transaction
  nameWithType: SignedTransaction.Transaction
  fullName: AlgoSdk.SignedTransaction.Transaction
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/SignedTransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Transaction
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/SignedTransaction.cs
    startLine: 8
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public Transaction Transaction
    return:
      type: AlgoSdk.Transaction
    content.vb: Public Transaction As Transaction
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.SignedTransaction.Signature
  commentId: P:AlgoSdk.SignedTransaction.Signature
  id: Signature
  parent: AlgoSdk.SignedTransaction
  langs:
  - csharp
  - vb
  name: Signature
  nameWithType: SignedTransaction.Signature
  fullName: AlgoSdk.SignedTransaction.Signature
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/SignedTransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Signature
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/SignedTransaction.cs
    startLine: 10
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public TransactionSignature Signature { get; set; }
    parameters: []
    return:
      type: AlgoSdk.TransactionSignature
    content.vb: Public Property Signature As TransactionSignature
  overload: AlgoSdk.SignedTransaction.Signature*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.SignedTransaction.Equals(AlgoSdk.SignedTransaction)
  commentId: M:AlgoSdk.SignedTransaction.Equals(AlgoSdk.SignedTransaction)
  id: Equals(AlgoSdk.SignedTransaction)
  parent: AlgoSdk.SignedTransaction
  langs:
  - csharp
  - vb
  name: Equals(SignedTransaction)
  nameWithType: SignedTransaction.Equals(SignedTransaction)
  fullName: AlgoSdk.SignedTransaction.Equals(AlgoSdk.SignedTransaction)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/SignedTransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Equals
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/SignedTransaction.cs
    startLine: 16
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public bool Equals(SignedTransaction other)
    parameters:
    - id: other
      type: AlgoSdk.SignedTransaction
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As SignedTransaction) As Boolean
  overload: AlgoSdk.SignedTransaction.Equals*
  implements:
  - System.IEquatable{AlgoSdk.SignedTransaction}.Equals(AlgoSdk.SignedTransaction)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: System.IEquatable{AlgoSdk.SignedTransaction}
  commentId: T:System.IEquatable{AlgoSdk.SignedTransaction}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<SignedTransaction>
  nameWithType: IEquatable<SignedTransaction>
  fullName: System.IEquatable<AlgoSdk.SignedTransaction>
  nameWithType.vb: IEquatable(Of SignedTransaction)
  fullName.vb: System.IEquatable(Of AlgoSdk.SignedTransaction)
  name.vb: IEquatable(Of SignedTransaction)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.SignedTransaction
    name: SignedTransaction
    nameWithType: SignedTransaction
    fullName: AlgoSdk.SignedTransaction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.SignedTransaction
    name: SignedTransaction
    nameWithType: SignedTransaction
    fullName: AlgoSdk.SignedTransaction
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AlgoSdk.Transaction
  commentId: T:AlgoSdk.Transaction
  parent: AlgoSdk
  name: Transaction
  nameWithType: Transaction
  fullName: AlgoSdk.Transaction
- uid: AlgoSdk.SignedTransaction.Signature*
  commentId: Overload:AlgoSdk.SignedTransaction.Signature
  name: Signature
  nameWithType: SignedTransaction.Signature
  fullName: AlgoSdk.SignedTransaction.Signature
- uid: AlgoSdk.TransactionSignature
  commentId: T:AlgoSdk.TransactionSignature
  parent: AlgoSdk
  name: TransactionSignature
  nameWithType: TransactionSignature
  fullName: AlgoSdk.TransactionSignature
- uid: AlgoSdk.SignedTransaction.Equals*
  commentId: Overload:AlgoSdk.SignedTransaction.Equals
  name: Equals
  nameWithType: SignedTransaction.Equals
  fullName: AlgoSdk.SignedTransaction.Equals
- uid: System.IEquatable{AlgoSdk.SignedTransaction}.Equals(AlgoSdk.SignedTransaction)
  commentId: M:System.IEquatable{AlgoSdk.SignedTransaction}.Equals(AlgoSdk.SignedTransaction)
  parent: System.IEquatable{AlgoSdk.SignedTransaction}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(SignedTransaction)
  nameWithType: IEquatable<SignedTransaction>.Equals(SignedTransaction)
  fullName: System.IEquatable<AlgoSdk.SignedTransaction>.Equals(AlgoSdk.SignedTransaction)
  nameWithType.vb: IEquatable(Of SignedTransaction).Equals(SignedTransaction)
  fullName.vb: System.IEquatable(Of AlgoSdk.SignedTransaction).Equals(AlgoSdk.SignedTransaction)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<SignedTransaction>.Equals
    fullName: System.IEquatable<AlgoSdk.SignedTransaction>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.SignedTransaction
    name: SignedTransaction
    nameWithType: SignedTransaction
    fullName: AlgoSdk.SignedTransaction
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of SignedTransaction).Equals
    fullName: System.IEquatable(Of AlgoSdk.SignedTransaction).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.SignedTransaction
    name: SignedTransaction
    nameWithType: SignedTransaction
    fullName: AlgoSdk.SignedTransaction
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.SignedTransaction
  commentId: T:AlgoSdk.SignedTransaction
  parent: AlgoSdk
  name: SignedTransaction
  nameWithType: SignedTransaction
  fullName: AlgoSdk.SignedTransaction
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
