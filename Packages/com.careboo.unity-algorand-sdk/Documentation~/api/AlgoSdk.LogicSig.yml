### YamlMime:ManagedReference
items:
- uid: AlgoSdk.LogicSig
  commentId: T:AlgoSdk.LogicSig
  id: LogicSig
  parent: AlgoSdk
  children:
  - AlgoSdk.LogicSig.Args
  - AlgoSdk.LogicSig.Equals(AlgoSdk.LogicSig)
  - AlgoSdk.LogicSig.IsValid(AlgoSdk.Address)
  - AlgoSdk.LogicSig.Multisig
  - AlgoSdk.LogicSig.Program
  - AlgoSdk.LogicSig.Sig
  langs:
  - csharp
  - vb
  name: LogicSig
  nameWithType: LogicSig
  fullName: AlgoSdk.LogicSig
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/LogicSig.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: LogicSig
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/LogicSig.cs
    startLine: 7
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: 'public struct LogicSig : ISignature, IEquatable<LogicSig>'
    content.vb: >-
      Public Structure LogicSig
          Implements ISignature, IEquatable(Of LogicSig)
  implements:
  - AlgoSdk.ISignature
  - System.IEquatable{AlgoSdk.LogicSig}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: AlgoSdk.LogicSig.Program
  commentId: F:AlgoSdk.LogicSig.Program
  id: Program
  parent: AlgoSdk.LogicSig
  langs:
  - csharp
  - vb
  name: Program
  nameWithType: LogicSig.Program
  fullName: AlgoSdk.LogicSig.Program
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/LogicSig.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Program
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/LogicSig.cs
    startLine: 13
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("logicsig", "l", false)]

      public byte[] Program
    return:
      type: System.Byte[]
    content.vb: >-
      <AlgoApiField("logicsig", "l", False)>

      Public Program As Byte()
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: logicsig
    - type: System.String
      value: l
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.LogicSig.Args
  commentId: F:AlgoSdk.LogicSig.Args
  id: Args
  parent: AlgoSdk.LogicSig
  langs:
  - csharp
  - vb
  name: Args
  nameWithType: LogicSig.Args
  fullName: AlgoSdk.LogicSig.Args
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/LogicSig.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Args
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/LogicSig.cs
    startLine: 16
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("args", "arg", false)]

      public FixedList128Bytes<byte>[] Args
    return:
      type: Unity.Collections.FixedList128Bytes{System.Byte}[]
    content.vb: >-
      <AlgoApiField("args", "arg", False)>

      Public Args As FixedList128Bytes(Of Byte)()
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: args
    - type: System.String
      value: arg
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.LogicSig.Sig
  commentId: F:AlgoSdk.LogicSig.Sig
  id: Sig
  parent: AlgoSdk.LogicSig
  langs:
  - csharp
  - vb
  name: Sig
  nameWithType: LogicSig.Sig
  fullName: AlgoSdk.LogicSig.Sig
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/LogicSig.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Sig
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/LogicSig.cs
    startLine: 19
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("signature", "sig", false)]

      public Sig Sig
    return:
      type: AlgoSdk.Sig
    content.vb: >-
      <AlgoApiField("signature", "sig", False)>

      Public Sig As Sig
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: signature
    - type: System.String
      value: sig
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.LogicSig.Multisig
  commentId: F:AlgoSdk.LogicSig.Multisig
  id: Multisig
  parent: AlgoSdk.LogicSig
  langs:
  - csharp
  - vb
  name: Multisig
  nameWithType: LogicSig.Multisig
  fullName: AlgoSdk.LogicSig.Multisig
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/LogicSig.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Multisig
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/LogicSig.cs
    startLine: 22
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("multisig-signature", "msig", false)]

      public Multisig Multisig
    return:
      type: AlgoSdk.Multisig
    content.vb: >-
      <AlgoApiField("multisig-signature", "msig", False)>

      Public Multisig As Multisig
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: multisig-signature
    - type: System.String
      value: msig
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.LogicSig.Equals(AlgoSdk.LogicSig)
  commentId: M:AlgoSdk.LogicSig.Equals(AlgoSdk.LogicSig)
  id: Equals(AlgoSdk.LogicSig)
  parent: AlgoSdk.LogicSig
  langs:
  - csharp
  - vb
  name: Equals(LogicSig)
  nameWithType: LogicSig.Equals(LogicSig)
  fullName: AlgoSdk.LogicSig.Equals(AlgoSdk.LogicSig)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/LogicSig.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Equals
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/LogicSig.cs
    startLine: 24
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public bool Equals(LogicSig other)
    parameters:
    - id: other
      type: AlgoSdk.LogicSig
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As LogicSig) As Boolean
  overload: AlgoSdk.LogicSig.Equals*
  implements:
  - System.IEquatable{AlgoSdk.LogicSig}.Equals(AlgoSdk.LogicSig)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.LogicSig.IsValid(AlgoSdk.Address)
  commentId: M:AlgoSdk.LogicSig.IsValid(AlgoSdk.Address)
  id: IsValid(AlgoSdk.Address)
  parent: AlgoSdk.LogicSig
  langs:
  - csharp
  - vb
  name: IsValid(Address)
  nameWithType: LogicSig.IsValid(Address)
  fullName: AlgoSdk.LogicSig.IsValid(AlgoSdk.Address)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/LogicSig.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: IsValid
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Signature/LogicSig.cs
    startLine: 33
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public bool IsValid(Address sender)
    parameters:
    - id: sender
      type: AlgoSdk.Address
    return:
      type: System.Boolean
    content.vb: Public Function IsValid(sender As Address) As Boolean
  overload: AlgoSdk.LogicSig.IsValid*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: AlgoSdk.ISignature
  commentId: T:AlgoSdk.ISignature
  parent: AlgoSdk
  name: ISignature
  nameWithType: ISignature
  fullName: AlgoSdk.ISignature
- uid: System.IEquatable{AlgoSdk.LogicSig}
  commentId: T:System.IEquatable{AlgoSdk.LogicSig}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<LogicSig>
  nameWithType: IEquatable<LogicSig>
  fullName: System.IEquatable<AlgoSdk.LogicSig>
  nameWithType.vb: IEquatable(Of LogicSig)
  fullName.vb: System.IEquatable(Of AlgoSdk.LogicSig)
  name.vb: IEquatable(Of LogicSig)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.LogicSig
    name: LogicSig
    nameWithType: LogicSig
    fullName: AlgoSdk.LogicSig
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.LogicSig
    name: LogicSig
    nameWithType: LogicSig
    fullName: AlgoSdk.LogicSig
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Unity.Collections.FixedList128Bytes{System.Byte}[]
  isExternal: true
  name: FixedList128Bytes<Byte>[]
  nameWithType: FixedList128Bytes<Byte>[]
  fullName: Unity.Collections.FixedList128Bytes<System.Byte>[]
  nameWithType.vb: FixedList128Bytes(Of Byte)()
  fullName.vb: Unity.Collections.FixedList128Bytes(Of System.Byte)()
  name.vb: FixedList128Bytes(Of Byte)()
  spec.csharp:
  - uid: Unity.Collections.FixedList128Bytes`1
    name: FixedList128Bytes
    nameWithType: FixedList128Bytes
    fullName: Unity.Collections.FixedList128Bytes
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Unity.Collections.FixedList128Bytes`1
    name: FixedList128Bytes
    nameWithType: FixedList128Bytes
    fullName: Unity.Collections.FixedList128Bytes
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AlgoSdk.Sig
  commentId: T:AlgoSdk.Sig
  parent: AlgoSdk
  name: Sig
  nameWithType: Sig
  fullName: AlgoSdk.Sig
- uid: AlgoSdk.Multisig
  commentId: T:AlgoSdk.Multisig
  parent: AlgoSdk
  name: Multisig
  nameWithType: Multisig
  fullName: AlgoSdk.Multisig
- uid: AlgoSdk.LogicSig.Equals*
  commentId: Overload:AlgoSdk.LogicSig.Equals
  name: Equals
  nameWithType: LogicSig.Equals
  fullName: AlgoSdk.LogicSig.Equals
- uid: System.IEquatable{AlgoSdk.LogicSig}.Equals(AlgoSdk.LogicSig)
  commentId: M:System.IEquatable{AlgoSdk.LogicSig}.Equals(AlgoSdk.LogicSig)
  parent: System.IEquatable{AlgoSdk.LogicSig}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(LogicSig)
  nameWithType: IEquatable<LogicSig>.Equals(LogicSig)
  fullName: System.IEquatable<AlgoSdk.LogicSig>.Equals(AlgoSdk.LogicSig)
  nameWithType.vb: IEquatable(Of LogicSig).Equals(LogicSig)
  fullName.vb: System.IEquatable(Of AlgoSdk.LogicSig).Equals(AlgoSdk.LogicSig)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<LogicSig>.Equals
    fullName: System.IEquatable<AlgoSdk.LogicSig>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.LogicSig
    name: LogicSig
    nameWithType: LogicSig
    fullName: AlgoSdk.LogicSig
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of LogicSig).Equals
    fullName: System.IEquatable(Of AlgoSdk.LogicSig).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.LogicSig
    name: LogicSig
    nameWithType: LogicSig
    fullName: AlgoSdk.LogicSig
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LogicSig
  commentId: T:AlgoSdk.LogicSig
  parent: AlgoSdk
  name: LogicSig
  nameWithType: LogicSig
  fullName: AlgoSdk.LogicSig
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LogicSig.IsValid*
  commentId: Overload:AlgoSdk.LogicSig.IsValid
  name: IsValid
  nameWithType: LogicSig.IsValid
  fullName: AlgoSdk.LogicSig.IsValid
- uid: AlgoSdk.Address
  commentId: T:AlgoSdk.Address
  parent: AlgoSdk
  name: Address
  nameWithType: Address
  fullName: AlgoSdk.Address
