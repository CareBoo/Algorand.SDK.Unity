### YamlMime:ManagedReference
items:
- uid: AlgoSdk.IAlgodClient
  commentId: T:AlgoSdk.IAlgodClient
  id: IAlgodClient
  parent: AlgoSdk
  children:
  - AlgoSdk.IAlgodClient.AbortCatchup(System.String)
  - AlgoSdk.IAlgodClient.GetAccountInformation(AlgoSdk.Address)
  - AlgoSdk.IAlgodClient.GetApplication(System.UInt64)
  - AlgoSdk.IAlgodClient.GetAsset(System.UInt64)
  - AlgoSdk.IAlgodClient.GetBlock(System.UInt64)
  - AlgoSdk.IAlgodClient.GetCurrentStatus
  - AlgoSdk.IAlgodClient.GetGenesisInformation
  - AlgoSdk.IAlgodClient.GetHealth
  - AlgoSdk.IAlgodClient.GetLedgerSupply
  - AlgoSdk.IAlgodClient.GetMerkleProof(System.UInt64,AlgoSdk.TransactionId)
  - AlgoSdk.IAlgodClient.GetMetrics
  - AlgoSdk.IAlgodClient.GetPendingTransaction(AlgoSdk.TransactionId)
  - AlgoSdk.IAlgodClient.GetPendingTransactions(System.UInt64)
  - AlgoSdk.IAlgodClient.GetPendingTransactionsByAccount(AlgoSdk.Address,System.UInt64)
  - AlgoSdk.IAlgodClient.GetStatusAfterWaitingForRound(System.UInt64)
  - AlgoSdk.IAlgodClient.GetSuggestedParams
  - AlgoSdk.IAlgodClient.GetSwaggerSpec
  - AlgoSdk.IAlgodClient.GetVersions
  - AlgoSdk.IAlgodClient.RegisterParticipationKeys(System.String,System.UInt64,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.Boolean})
  - AlgoSdk.IAlgodClient.SendTransaction``1(AlgoSdk.Signed{``0})
  - AlgoSdk.IAlgodClient.ShutDown(AlgoSdk.Optional{System.UInt64})
  - AlgoSdk.IAlgodClient.StartCatchup(System.String)
  - AlgoSdk.IAlgodClient.TealCompile(System.String)
  - AlgoSdk.IAlgodClient.TealDryrun(AlgoSdk.Optional{AlgoSdk.DryrunRequest})
  langs:
  - csharp
  - vb
  name: IAlgodClient
  nameWithType: IAlgodClient
  fullName: AlgoSdk.IAlgodClient
  type: Interface
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: IAlgodClient
    path: ../CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
    startLine: 6
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: 'public interface IAlgodClient : IAlgoApiClient'
    content.vb: >-
      Public Interface IAlgodClient
          Inherits IAlgoApiClient
  inheritedMembers:
  - AlgoSdk.IAlgoApiClient.Address
  - AlgoSdk.IAlgoApiClient.Token
  - AlgoSdk.IAlgoApiClient.TokenHeader
  extensionMethods:
  - AlgoSdk.IAlgodClient.AlgoSdk.TokenizedClientExtensions.GetUrl``1(System.String)
  - AlgoSdk.IAlgodClient.AlgoSdk.TokenizedClientExtensions.Get``1(System.String)
  - AlgoSdk.IAlgodClient.AlgoSdk.TokenizedClientExtensions.Post``1(System.String)
  - AlgoSdk.IAlgodClient.AlgoSdk.TokenizedClientExtensions.Delete``1(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: AlgoSdk.IAlgodClient.GetGenesisInformation
  commentId: M:AlgoSdk.IAlgodClient.GetGenesisInformation
  id: GetGenesisInformation
  parent: AlgoSdk.IAlgodClient
  langs:
  - csharp
  - vb
  name: GetGenesisInformation()
  nameWithType: IAlgodClient.GetGenesisInformation()
  fullName: AlgoSdk.IAlgodClient.GetGenesisInformation()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetGenesisInformation
    path: ../CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
    startLine: 12
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nGet information about the genesis block.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<AlgoApiObject>> GetGenesisInformation()
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.AlgoApiObject}}
      description: The entire genesis file in JSON
    content.vb: Function GetGenesisInformation As UniTask(Of AlgoApiResponse(Of AlgoApiObject))
  overload: AlgoSdk.IAlgodClient.GetGenesisInformation*
- uid: AlgoSdk.IAlgodClient.GetHealth
  commentId: M:AlgoSdk.IAlgodClient.GetHealth
  id: GetHealth
  parent: AlgoSdk.IAlgodClient
  langs:
  - csharp
  - vb
  name: GetHealth()
  nameWithType: IAlgodClient.GetHealth()
  fullName: AlgoSdk.IAlgodClient.GetHealth()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetHealth
    path: ../CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
    startLine: 18
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nCheck the health of the algod service.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse> GetHealth()
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse}
      description: <xref href="UnityEngine.Networking.UnityWebRequest.Result.Success" data-throw-if-not-resolved="false"></xref> if healthy
    content.vb: Function GetHealth As UniTask(Of AlgoApiResponse)
  overload: AlgoSdk.IAlgodClient.GetHealth*
- uid: AlgoSdk.IAlgodClient.GetMetrics
  commentId: M:AlgoSdk.IAlgodClient.GetMetrics
  id: GetMetrics
  parent: AlgoSdk.IAlgodClient
  langs:
  - csharp
  - vb
  name: GetMetrics()
  nameWithType: IAlgodClient.GetMetrics()
  fullName: AlgoSdk.IAlgodClient.GetMetrics()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetMetrics
    path: ../CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
    startLine: 24
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nReturn metrics about algod functioning.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse> GetMetrics()
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse}
      description: 'text with #-comments and key:value lines.'
    content.vb: Function GetMetrics As UniTask(Of AlgoApiResponse)
  overload: AlgoSdk.IAlgodClient.GetMetrics*
- uid: AlgoSdk.IAlgodClient.GetSwaggerSpec
  commentId: M:AlgoSdk.IAlgodClient.GetSwaggerSpec
  id: GetSwaggerSpec
  parent: AlgoSdk.IAlgodClient
  langs:
  - csharp
  - vb
  name: GetSwaggerSpec()
  nameWithType: IAlgodClient.GetSwaggerSpec()
  fullName: AlgoSdk.IAlgodClient.GetSwaggerSpec()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetSwaggerSpec
    path: ../CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
    startLine: 30
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nGets the current swagger spec.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<AlgoApiObject>> GetSwaggerSpec()
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.AlgoApiObject}}
      description: The entire swagger spec in JSON.
    content.vb: Function GetSwaggerSpec As UniTask(Of AlgoApiResponse(Of AlgoApiObject))
  overload: AlgoSdk.IAlgodClient.GetSwaggerSpec*
- uid: AlgoSdk.IAlgodClient.GetAccountInformation(AlgoSdk.Address)
  commentId: M:AlgoSdk.IAlgodClient.GetAccountInformation(AlgoSdk.Address)
  id: GetAccountInformation(AlgoSdk.Address)
  parent: AlgoSdk.IAlgodClient
  langs:
  - csharp
  - vb
  name: GetAccountInformation(Address)
  nameWithType: IAlgodClient.GetAccountInformation(Address)
  fullName: AlgoSdk.IAlgodClient.GetAccountInformation(AlgoSdk.Address)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetAccountInformation
    path: ../CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
    startLine: 40
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nGet account information.\n"
  remarks: "\nGiven a specific account public key, this call returns the accounts status, balance and spendable amounts.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<Account>> GetAccountInformation(Address accountAddress)
    parameters:
    - id: accountAddress
      type: AlgoSdk.Address
      description: An account public key (address)
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.Account}}
      description: an <xref href="AlgoSdk.Account" data-throw-if-not-resolved="false"></xref> if everything is okay
    content.vb: Function GetAccountInformation(accountAddress As Address) As UniTask(Of AlgoApiResponse(Of Account))
  overload: AlgoSdk.IAlgodClient.GetAccountInformation*
- uid: AlgoSdk.IAlgodClient.GetPendingTransactionsByAccount(AlgoSdk.Address,System.UInt64)
  commentId: M:AlgoSdk.IAlgodClient.GetPendingTransactionsByAccount(AlgoSdk.Address,System.UInt64)
  id: GetPendingTransactionsByAccount(AlgoSdk.Address,System.UInt64)
  parent: AlgoSdk.IAlgodClient
  langs:
  - csharp
  - vb
  name: GetPendingTransactionsByAccount(Address, UInt64)
  nameWithType: IAlgodClient.GetPendingTransactionsByAccount(Address, UInt64)
  fullName: AlgoSdk.IAlgodClient.GetPendingTransactionsByAccount(AlgoSdk.Address, System.UInt64)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetPendingTransactionsByAccount
    path: ../CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
    startLine: 56
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nGet a list of unconfirmed transactions currently in the transaction pool by address.\n"
  remarks: "\nGet the list of pending transactions by address, sorted by priority, in decreasing order, truncated at the end at MAX.\nIf MAX = 0, returns all pending transactions.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<PendingTransactions>> GetPendingTransactionsByAccount(Address accountAddress, ulong max = 0UL)
    parameters:
    - id: accountAddress
      type: AlgoSdk.Address
      description: An account public key (address)
    - id: max
      type: System.UInt64
      description: Truncated number of transactions to display. If max=0, returns all pending txns.
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.PendingTransactions}}
      description: "\nA potentially truncated list of transactions currently in the node&apos;s transaction pool.\nYou can compute whether or not the list is truncated if the number of elements in the top-transactions\narray is fewer than total-transactions.\n"
    content.vb: Function GetPendingTransactionsByAccount(accountAddress As Address, max As ULong = 0UL) As UniTask(Of AlgoApiResponse(Of PendingTransactions))
  overload: AlgoSdk.IAlgodClient.GetPendingTransactionsByAccount*
- uid: AlgoSdk.IAlgodClient.GetApplication(System.UInt64)
  commentId: M:AlgoSdk.IAlgodClient.GetApplication(System.UInt64)
  id: GetApplication(System.UInt64)
  parent: AlgoSdk.IAlgodClient
  langs:
  - csharp
  - vb
  name: GetApplication(UInt64)
  nameWithType: IAlgodClient.GetApplication(UInt64)
  fullName: AlgoSdk.IAlgodClient.GetApplication(System.UInt64)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetApplication
    path: ../CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
    startLine: 67
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nGet application information.\n"
  remarks: "\nGiven a application id, it returns application information including creator, approval and clear programs,\nglobal and local schemas, and global state.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<Application>> GetApplication(ulong applicationId)
    parameters:
    - id: applicationId
      type: System.UInt64
      description: An application identifier (app index)
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.Application}}
      description: <xref href="AlgoSdk.Application" data-throw-if-not-resolved="false"></xref> information
    content.vb: Function GetApplication(applicationId As ULong) As UniTask(Of AlgoApiResponse(Of Application))
  overload: AlgoSdk.IAlgodClient.GetApplication*
- uid: AlgoSdk.IAlgodClient.GetAsset(System.UInt64)
  commentId: M:AlgoSdk.IAlgodClient.GetAsset(System.UInt64)
  id: GetAsset(System.UInt64)
  parent: AlgoSdk.IAlgodClient
  langs:
  - csharp
  - vb
  name: GetAsset(UInt64)
  nameWithType: IAlgodClient.GetAsset(UInt64)
  fullName: AlgoSdk.IAlgodClient.GetAsset(System.UInt64)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetAsset
    path: ../CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
    startLine: 77
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nGet asset information.\n"
  remarks: "\nGiven an asset id, it returns asset information including creator, name, total supply and special addresses.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<Asset>> GetAsset(ulong assetId)
    parameters:
    - id: assetId
      type: System.UInt64
      description: An asset identifier (asset index)
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.Asset}}
      description: <xref href="AlgoSdk.Asset" data-throw-if-not-resolved="false"></xref> information
    content.vb: Function GetAsset(assetId As ULong) As UniTask(Of AlgoApiResponse(Of Asset))
  overload: AlgoSdk.IAlgodClient.GetAsset*
- uid: AlgoSdk.IAlgodClient.GetBlock(System.UInt64)
  commentId: M:AlgoSdk.IAlgodClient.GetBlock(System.UInt64)
  id: GetBlock(System.UInt64)
  parent: AlgoSdk.IAlgodClient
  langs:
  - csharp
  - vb
  name: GetBlock(UInt64)
  nameWithType: IAlgodClient.GetBlock(UInt64)
  fullName: AlgoSdk.IAlgodClient.GetBlock(System.UInt64)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetBlock
    path: ../CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
    startLine: 84
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nGet the block for the given round.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<BlockResponse>> GetBlock(ulong round)
    parameters:
    - id: round
      type: System.UInt64
      description: The round from which to fetch block information.
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.BlockResponse}}
      description: Encoded block object <xref href="AlgoSdk.BlockResponse" data-throw-if-not-resolved="false"></xref>
    content.vb: Function GetBlock(round As ULong) As UniTask(Of AlgoApiResponse(Of BlockResponse))
  overload: AlgoSdk.IAlgodClient.GetBlock*
- uid: AlgoSdk.IAlgodClient.GetMerkleProof(System.UInt64,AlgoSdk.TransactionId)
  commentId: M:AlgoSdk.IAlgodClient.GetMerkleProof(System.UInt64,AlgoSdk.TransactionId)
  id: GetMerkleProof(System.UInt64,AlgoSdk.TransactionId)
  parent: AlgoSdk.IAlgodClient
  langs:
  - csharp
  - vb
  name: GetMerkleProof(UInt64, TransactionId)
  nameWithType: IAlgodClient.GetMerkleProof(UInt64, TransactionId)
  fullName: AlgoSdk.IAlgodClient.GetMerkleProof(System.UInt64, AlgoSdk.TransactionId)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetMerkleProof
    path: ../CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
    startLine: 92
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nGet a Merkle proof for a transaction in a block.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<MerkleProof>> GetMerkleProof(ulong round, TransactionId txid)
    parameters:
    - id: round
      type: System.UInt64
      description: The round in which the transaction appears.
    - id: txid
      type: AlgoSdk.TransactionId
      description: The transaction ID for which to generate a proof.
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.MerkleProof}}
      description: Proof of transaction in a block <xref href="AlgoSdk.MerkleProof" data-throw-if-not-resolved="false"></xref>.
    content.vb: Function GetMerkleProof(round As ULong, txid As TransactionId) As UniTask(Of AlgoApiResponse(Of MerkleProof))
  overload: AlgoSdk.IAlgodClient.GetMerkleProof*
- uid: AlgoSdk.IAlgodClient.StartCatchup(System.String)
  commentId: M:AlgoSdk.IAlgodClient.StartCatchup(System.String)
  id: StartCatchup(System.String)
  parent: AlgoSdk.IAlgodClient
  langs:
  - csharp
  - vb
  name: StartCatchup(String)
  nameWithType: IAlgodClient.StartCatchup(String)
  fullName: AlgoSdk.IAlgodClient.StartCatchup(System.String)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: StartCatchup
    path: ../CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
    startLine: 99
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nStarts a catchpoint catchup.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<CatchupMessage>> StartCatchup(string catchpoint)
    parameters:
    - id: catchpoint
      type: System.String
      description: A catch point
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.CatchupMessage}}
      description: Catchup start response string
    content.vb: Function StartCatchup(catchpoint As String) As UniTask(Of AlgoApiResponse(Of CatchupMessage))
  overload: AlgoSdk.IAlgodClient.StartCatchup*
- uid: AlgoSdk.IAlgodClient.AbortCatchup(System.String)
  commentId: M:AlgoSdk.IAlgodClient.AbortCatchup(System.String)
  id: AbortCatchup(System.String)
  parent: AlgoSdk.IAlgodClient
  langs:
  - csharp
  - vb
  name: AbortCatchup(String)
  nameWithType: IAlgodClient.AbortCatchup(String)
  fullName: AlgoSdk.IAlgodClient.AbortCatchup(System.String)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AbortCatchup
    path: ../CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
    startLine: 106
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nAborts a catchpoint catchup.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<CatchupMessage>> AbortCatchup(string catchpoint)
    parameters:
    - id: catchpoint
      type: System.String
      description: A catch point
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.CatchupMessage}}
      description: Catchup abort response string
    content.vb: Function AbortCatchup(catchpoint As String) As UniTask(Of AlgoApiResponse(Of CatchupMessage))
  overload: AlgoSdk.IAlgodClient.AbortCatchup*
- uid: AlgoSdk.IAlgodClient.GetLedgerSupply
  commentId: M:AlgoSdk.IAlgodClient.GetLedgerSupply
  id: GetLedgerSupply
  parent: AlgoSdk.IAlgodClient
  langs:
  - csharp
  - vb
  name: GetLedgerSupply()
  nameWithType: IAlgodClient.GetLedgerSupply()
  fullName: AlgoSdk.IAlgodClient.GetLedgerSupply()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetLedgerSupply
    path: ../CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
    startLine: 112
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nGet the current supply reported by the ledger.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<LedgerSupply>> GetLedgerSupply()
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.LedgerSupply}}
      description: Supply represents the current supply of MicroAlgos in the system.
    content.vb: Function GetLedgerSupply As UniTask(Of AlgoApiResponse(Of LedgerSupply))
  overload: AlgoSdk.IAlgodClient.GetLedgerSupply*
- uid: AlgoSdk.IAlgodClient.RegisterParticipationKeys(System.String,System.UInt64,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.Boolean})
  commentId: M:AlgoSdk.IAlgodClient.RegisterParticipationKeys(System.String,System.UInt64,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.Boolean})
  id: RegisterParticipationKeys(System.String,System.UInt64,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.Boolean})
  parent: AlgoSdk.IAlgodClient
  langs:
  - csharp
  - vb
  name: RegisterParticipationKeys(String, UInt64, Optional<UInt64>, Optional<Boolean>, Optional<Boolean>)
  nameWithType: IAlgodClient.RegisterParticipationKeys(String, UInt64, Optional<UInt64>, Optional<Boolean>, Optional<Boolean>)
  fullName: AlgoSdk.IAlgodClient.RegisterParticipationKeys(System.String, System.UInt64, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.Boolean>, AlgoSdk.Optional<System.Boolean>)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: RegisterParticipationKeys
    path: ../CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
    startLine: 123
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nGenerate (or renew) and register participation keys on the node for a given account address.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<TransactionIdResponse>> RegisterParticipationKeys(string accountAddress, ulong fee = 1000UL, Optional<ulong> keyDilution = default(Optional<ulong>), Optional<bool> noWait = default(Optional<bool>), Optional<bool> roundLastValid = default(Optional<bool>))
    parameters:
    - id: accountAddress
      type: System.String
      description: The account-id to update, or &quot;all&quot; to update all accounts.
    - id: fee
      type: System.UInt64
      description: The fee to use when submitting key registration transactions. Defaults to the suggested fee.
    - id: keyDilution
      type: AlgoSdk.Optional{System.UInt64}
      description: value to use for two-level participation key.
    - id: noWait
      type: AlgoSdk.Optional{System.Boolean}
      description: Don&apos;t wait for transaction to commit before returning response.
    - id: roundLastValid
      type: AlgoSdk.Optional{System.Boolean}
      description: The last round for which the generated participation keys will be valid.
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.TransactionIdResponse}}
      description: Transaction ID of the submission.
    content.vb: Function RegisterParticipationKeys(accountAddress As String, fee As ULong = 1000UL, keyDilution As  Optional  (Of ULong)  = Nothing, noWait As  Optional  (Of Boolean)  = Nothing, roundLastValid As  Optional  (Of Boolean)  = Nothing) As UniTask(Of AlgoApiResponse(Of TransactionIdResponse))
  overload: AlgoSdk.IAlgodClient.RegisterParticipationKeys*
  nameWithType.vb: IAlgodClient.RegisterParticipationKeys(String, UInt64, Optional(Of UInt64), Optional(Of Boolean), Optional(Of Boolean))
  fullName.vb: AlgoSdk.IAlgodClient.RegisterParticipationKeys(System.String, System.UInt64, AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.Boolean), AlgoSdk.Optional(Of System.Boolean))
  name.vb: RegisterParticipationKeys(String, UInt64, Optional(Of UInt64), Optional(Of Boolean), Optional(Of Boolean))
- uid: AlgoSdk.IAlgodClient.ShutDown(AlgoSdk.Optional{System.UInt64})
  commentId: M:AlgoSdk.IAlgodClient.ShutDown(AlgoSdk.Optional{System.UInt64})
  id: ShutDown(AlgoSdk.Optional{System.UInt64})
  parent: AlgoSdk.IAlgodClient
  langs:
  - csharp
  - vb
  name: ShutDown(Optional<UInt64>)
  nameWithType: IAlgodClient.ShutDown(Optional<UInt64>)
  fullName: AlgoSdk.IAlgodClient.ShutDown(AlgoSdk.Optional<System.UInt64>)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ShutDown
    path: ../CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
    startLine: 138
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nSpecial management endpoint to shutdown the node.\n"
  remarks: "\nOptionally provide a timeout parameter to indicate that the node should begin shutting down after a number of seconds.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse> ShutDown(Optional<ulong> timeout = default(Optional<ulong>))
    parameters:
    - id: timeout
      type: AlgoSdk.Optional{System.UInt64}
      description: shutdown timeout
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse}
      description: Success if request was successful
    content.vb: Function ShutDown(timeout As  Optional  (Of ULong)  = Nothing) As UniTask(Of AlgoApiResponse)
  overload: AlgoSdk.IAlgodClient.ShutDown*
  nameWithType.vb: IAlgodClient.ShutDown(Optional(Of UInt64))
  fullName.vb: AlgoSdk.IAlgodClient.ShutDown(AlgoSdk.Optional(Of System.UInt64))
  name.vb: ShutDown(Optional(Of UInt64))
- uid: AlgoSdk.IAlgodClient.GetCurrentStatus
  commentId: M:AlgoSdk.IAlgodClient.GetCurrentStatus
  id: GetCurrentStatus
  parent: AlgoSdk.IAlgodClient
  langs:
  - csharp
  - vb
  name: GetCurrentStatus()
  nameWithType: IAlgodClient.GetCurrentStatus()
  fullName: AlgoSdk.IAlgodClient.GetCurrentStatus()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetCurrentStatus
    path: ../CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
    startLine: 144
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nGets the current node status.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<Status>> GetCurrentStatus()
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.Status}}
      description: <xref href="AlgoSdk.Status" data-throw-if-not-resolved="false"></xref>
    content.vb: Function GetCurrentStatus As UniTask(Of AlgoApiResponse(Of Status))
  overload: AlgoSdk.IAlgodClient.GetCurrentStatus*
- uid: AlgoSdk.IAlgodClient.GetStatusAfterWaitingForRound(System.UInt64)
  commentId: M:AlgoSdk.IAlgodClient.GetStatusAfterWaitingForRound(System.UInt64)
  id: GetStatusAfterWaitingForRound(System.UInt64)
  parent: AlgoSdk.IAlgodClient
  langs:
  - csharp
  - vb
  name: GetStatusAfterWaitingForRound(UInt64)
  nameWithType: IAlgodClient.GetStatusAfterWaitingForRound(UInt64)
  fullName: AlgoSdk.IAlgodClient.GetStatusAfterWaitingForRound(System.UInt64)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetStatusAfterWaitingForRound
    path: ../CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
    startLine: 154
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nGets the node status after waiting for the given round.\n"
  remarks: "\nWaits for a block to appear after round {round} and returns the node&apos;s status at the time.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<Status>> GetStatusAfterWaitingForRound(ulong round)
    parameters:
    - id: round
      type: System.UInt64
      description: The round to wait until returning status
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.Status}}
      description: <xref href="AlgoSdk.Status" data-throw-if-not-resolved="false"></xref>
    content.vb: Function GetStatusAfterWaitingForRound(round As ULong) As UniTask(Of AlgoApiResponse(Of Status))
  overload: AlgoSdk.IAlgodClient.GetStatusAfterWaitingForRound*
- uid: AlgoSdk.IAlgodClient.TealCompile(System.String)
  commentId: M:AlgoSdk.IAlgodClient.TealCompile(System.String)
  id: TealCompile(System.String)
  parent: AlgoSdk.IAlgodClient
  langs:
  - csharp
  - vb
  name: TealCompile(String)
  nameWithType: IAlgodClient.TealCompile(String)
  fullName: AlgoSdk.IAlgodClient.TealCompile(System.String)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TealCompile
    path: ../CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
    startLine: 165
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nCompile TEAL source code to binary, produce its hash\n"
  remarks: "\nGiven TEAL source code in plain text, return base64 encoded program bytes and base32 SHA512_256 hash of program bytes (Address style).\nThis endpoint is only enabled when a node&apos;s configureation file sets EnableDeveloperAPI to true.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<TealCompilationResult>> TealCompile(string source)
    parameters:
    - id: source
      type: System.String
      description: TEAL source code to be compiled
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.TealCompilationResult}}
      description: Teal compile Result
    content.vb: Function TealCompile(source As String) As UniTask(Of AlgoApiResponse(Of TealCompilationResult))
  overload: AlgoSdk.IAlgodClient.TealCompile*
- uid: AlgoSdk.IAlgodClient.TealDryrun(AlgoSdk.Optional{AlgoSdk.DryrunRequest})
  commentId: M:AlgoSdk.IAlgodClient.TealDryrun(AlgoSdk.Optional{AlgoSdk.DryrunRequest})
  id: TealDryrun(AlgoSdk.Optional{AlgoSdk.DryrunRequest})
  parent: AlgoSdk.IAlgodClient
  langs:
  - csharp
  - vb
  name: TealDryrun(Optional<DryrunRequest>)
  nameWithType: IAlgodClient.TealDryrun(Optional<DryrunRequest>)
  fullName: AlgoSdk.IAlgodClient.TealDryrun(AlgoSdk.Optional<AlgoSdk.DryrunRequest>)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TealDryrun
    path: ../CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
    startLine: 176
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nProvide debugging information for a transaction (or group).\n"
  remarks: "\nExecutes TEAL program(s) in context and returns debugging information about the execution.\nThis endpoint is only enabled when a node&apos;s configureation file sets EnableDeveloperAPI to true.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<DryrunResults>> TealDryrun(Optional<DryrunRequest> request = default(Optional<DryrunRequest>))
    parameters:
    - id: request
      type: AlgoSdk.Optional{AlgoSdk.DryrunRequest}
      description: Transaction (or group) and any accompanying state-simulation data.
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.DryrunResults}}
      description: DryrunResponse contains per-txn debug information from a dryrun.
    content.vb: Function TealDryrun(request As  Optional  (Of DryrunRequest)  = Nothing) As UniTask(Of AlgoApiResponse(Of DryrunResults))
  overload: AlgoSdk.IAlgodClient.TealDryrun*
  nameWithType.vb: IAlgodClient.TealDryrun(Optional(Of DryrunRequest))
  fullName.vb: AlgoSdk.IAlgodClient.TealDryrun(AlgoSdk.Optional(Of AlgoSdk.DryrunRequest))
  name.vb: TealDryrun(Optional(Of DryrunRequest))
- uid: AlgoSdk.IAlgodClient.SendTransaction``1(AlgoSdk.Signed{``0})
  commentId: M:AlgoSdk.IAlgodClient.SendTransaction``1(AlgoSdk.Signed{``0})
  id: SendTransaction``1(AlgoSdk.Signed{``0})
  parent: AlgoSdk.IAlgodClient
  langs:
  - csharp
  - vb
  name: SendTransaction<T>(Signed<T>)
  nameWithType: IAlgodClient.SendTransaction<T>(Signed<T>)
  fullName: AlgoSdk.IAlgodClient.SendTransaction<T>(AlgoSdk.Signed<T>)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: SendTransaction
    path: ../CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
    startLine: 184
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nBroadcasts a raw transaction to the network.\n"
  example: []
  syntax:
    content: >-
      UniTask<AlgoApiResponse<TransactionIdResponse>> SendTransaction<T>(Signed<T> txn)
          where T : struct, ITransaction, IEquatable<T>
    parameters:
    - id: txn
      type: AlgoSdk.Signed{{T}}
      description: The byte encoded signed transaction to broadcast to network
    typeParameters:
    - id: T
      description: The type of the transaction; must implement <xref href="AlgoSdk.ITransaction" data-throw-if-not-resolved="false"></xref>
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.TransactionIdResponse}}
      description: Transaction ID of the submission.
    content.vb: Function SendTransaction(Of T As {Structure, ITransaction, IEquatable(Of T)})(txn As Signed(Of T)) As UniTask(Of AlgoApiResponse(Of TransactionIdResponse))
  overload: AlgoSdk.IAlgodClient.SendTransaction*
  nameWithType.vb: IAlgodClient.SendTransaction(Of T)(Signed(Of T))
  fullName.vb: AlgoSdk.IAlgodClient.SendTransaction(Of T)(AlgoSdk.Signed(Of T))
  name.vb: SendTransaction(Of T)(Signed(Of T))
- uid: AlgoSdk.IAlgodClient.GetSuggestedParams
  commentId: M:AlgoSdk.IAlgodClient.GetSuggestedParams
  id: GetSuggestedParams
  parent: AlgoSdk.IAlgodClient
  langs:
  - csharp
  - vb
  name: GetSuggestedParams()
  nameWithType: IAlgodClient.GetSuggestedParams()
  fullName: AlgoSdk.IAlgodClient.GetSuggestedParams()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetSuggestedParams
    path: ../CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
    startLine: 191
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nGet parameters for constructing a new transaction\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<TransactionParams>> GetSuggestedParams()
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.TransactionParams}}
      description: <xref href="AlgoSdk.TransactionParams" data-throw-if-not-resolved="false"></xref> contains the parameters that help a client construct a new transaction.
    content.vb: Function GetSuggestedParams As UniTask(Of AlgoApiResponse(Of TransactionParams))
  overload: AlgoSdk.IAlgodClient.GetSuggestedParams*
- uid: AlgoSdk.IAlgodClient.GetPendingTransactions(System.UInt64)
  commentId: M:AlgoSdk.IAlgodClient.GetPendingTransactions(System.UInt64)
  id: GetPendingTransactions(System.UInt64)
  parent: AlgoSdk.IAlgodClient
  langs:
  - csharp
  - vb
  name: GetPendingTransactions(UInt64)
  nameWithType: IAlgodClient.GetPendingTransactions(UInt64)
  fullName: AlgoSdk.IAlgodClient.GetPendingTransactions(System.UInt64)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetPendingTransactions
    path: ../CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
    startLine: 205
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nGet a list of unconfirmed transactions currently in the transaction pool.\n"
  remarks: "\nGet the list of pending transactions, sorted by priority, in decreasing order, truncated at the end at MAX.\nIf MAX = 0, returns all pending transactions.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<PendingTransactions>> GetPendingTransactions(ulong max = 0UL)
    parameters:
    - id: max
      type: System.UInt64
      description: Truncated number of transactions to display. If max=0, returns all pending txns.
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.PendingTransactions}}
      description: "\nA potentially truncated list of transactions currently in the node&apos;s transaction pool.\nYou can compute whether or not the list is truncated if the number of elements in the top-transactions array is fewer than total-transactions.\n"
    content.vb: Function GetPendingTransactions(max As ULong = 0UL) As UniTask(Of AlgoApiResponse(Of PendingTransactions))
  overload: AlgoSdk.IAlgodClient.GetPendingTransactions*
- uid: AlgoSdk.IAlgodClient.GetPendingTransaction(AlgoSdk.TransactionId)
  commentId: M:AlgoSdk.IAlgodClient.GetPendingTransaction(AlgoSdk.TransactionId)
  id: GetPendingTransaction(AlgoSdk.TransactionId)
  parent: AlgoSdk.IAlgodClient
  langs:
  - csharp
  - vb
  name: GetPendingTransaction(TransactionId)
  nameWithType: IAlgodClient.GetPendingTransaction(TransactionId)
  fullName: AlgoSdk.IAlgodClient.GetPendingTransaction(AlgoSdk.TransactionId)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetPendingTransaction
    path: ../CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
    startLine: 218
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nGet a specific pending transaction.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<PendingTransaction>> GetPendingTransaction(TransactionId txId)
    parameters:
    - id: txId
      type: AlgoSdk.TransactionId
      description: A transaction id
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.PendingTransaction}}
      description: "\nGiven a transaction id of a recently submitted transaction, it returns information about it. There are several cases when this might succeed:\n- transaction committed (committed round > 0)\n- transaction still in the pool (committed round = 0, pool error = &quot;&quot;)\n- transaction removed from pool due to error (committed round = 0, pool error != &quot;&quot;)\nOr the transaction may have happened sufficiently long ago that the node no longer remembers it, and this will return an error.\n"
    content.vb: Function GetPendingTransaction(txId As TransactionId) As UniTask(Of AlgoApiResponse(Of PendingTransaction))
  overload: AlgoSdk.IAlgodClient.GetPendingTransaction*
- uid: AlgoSdk.IAlgodClient.GetVersions
  commentId: M:AlgoSdk.IAlgodClient.GetVersions
  id: GetVersions
  parent: AlgoSdk.IAlgodClient
  langs:
  - csharp
  - vb
  name: GetVersions()
  nameWithType: IAlgodClient.GetVersions()
  fullName: AlgoSdk.IAlgodClient.GetVersions()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetVersions
    path: ../CareBoo.AlgoSdk/AlgoApi/Algod/IAlgodClient.cs
    startLine: 224
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nRetrieves the supported API versions, binary build versions, and genesis information.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<Version>> GetVersions()
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.Version}}
      description: <xref href="AlgoSdk.Version" data-throw-if-not-resolved="false"></xref> is the response to &apos;GET /versions&apos;
    content.vb: Function GetVersions As UniTask(Of AlgoApiResponse(Of Version))
  overload: AlgoSdk.IAlgodClient.GetVersions*
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: AlgoSdk.IAlgoApiClient.Address
  commentId: P:AlgoSdk.IAlgoApiClient.Address
  parent: AlgoSdk.IAlgoApiClient
  name: Address
  nameWithType: IAlgoApiClient.Address
  fullName: AlgoSdk.IAlgoApiClient.Address
- uid: AlgoSdk.IAlgoApiClient.Token
  commentId: P:AlgoSdk.IAlgoApiClient.Token
  parent: AlgoSdk.IAlgoApiClient
  name: Token
  nameWithType: IAlgoApiClient.Token
  fullName: AlgoSdk.IAlgoApiClient.Token
- uid: AlgoSdk.IAlgoApiClient.TokenHeader
  commentId: P:AlgoSdk.IAlgoApiClient.TokenHeader
  parent: AlgoSdk.IAlgoApiClient
  name: TokenHeader
  nameWithType: IAlgoApiClient.TokenHeader
  fullName: AlgoSdk.IAlgoApiClient.TokenHeader
- uid: AlgoSdk.IAlgodClient.AlgoSdk.TokenizedClientExtensions.GetUrl``1(System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.GetUrl``1(``0,System.String)
  parent: AlgoSdk.TokenizedClientExtensions
  definition: AlgoSdk.TokenizedClientExtensions.GetUrl``1(``0,System.String)
  name: GetUrl<IAlgodClient>(String)
  nameWithType: TokenizedClientExtensions.GetUrl<IAlgodClient>(String)
  fullName: AlgoSdk.TokenizedClientExtensions.GetUrl<AlgoSdk.IAlgodClient>(System.String)
  nameWithType.vb: TokenizedClientExtensions.GetUrl(Of IAlgodClient)(String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.GetUrl(Of AlgoSdk.IAlgodClient)(System.String)
  name.vb: GetUrl(Of IAlgodClient)(String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.GetUrl``1(System.String)
    name: GetUrl<IAlgodClient>
    nameWithType: TokenizedClientExtensions.GetUrl<IAlgodClient>
    fullName: AlgoSdk.TokenizedClientExtensions.GetUrl<AlgoSdk.IAlgodClient>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.GetUrl``1(System.String)
    name: GetUrl(Of IAlgodClient)
    nameWithType: TokenizedClientExtensions.GetUrl(Of IAlgodClient)
    fullName: AlgoSdk.TokenizedClientExtensions.GetUrl(Of AlgoSdk.IAlgodClient)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IAlgodClient.AlgoSdk.TokenizedClientExtensions.Get``1(System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.Get``1(``0,System.String)
  parent: AlgoSdk.TokenizedClientExtensions
  definition: AlgoSdk.TokenizedClientExtensions.Get``1(``0,System.String)
  name: Get<IAlgodClient>(String)
  nameWithType: TokenizedClientExtensions.Get<IAlgodClient>(String)
  fullName: AlgoSdk.TokenizedClientExtensions.Get<AlgoSdk.IAlgodClient>(System.String)
  nameWithType.vb: TokenizedClientExtensions.Get(Of IAlgodClient)(String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.Get(Of AlgoSdk.IAlgodClient)(System.String)
  name.vb: Get(Of IAlgodClient)(String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.Get``1(System.String)
    name: Get<IAlgodClient>
    nameWithType: TokenizedClientExtensions.Get<IAlgodClient>
    fullName: AlgoSdk.TokenizedClientExtensions.Get<AlgoSdk.IAlgodClient>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.Get``1(System.String)
    name: Get(Of IAlgodClient)
    nameWithType: TokenizedClientExtensions.Get(Of IAlgodClient)
    fullName: AlgoSdk.TokenizedClientExtensions.Get(Of AlgoSdk.IAlgodClient)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IAlgodClient.AlgoSdk.TokenizedClientExtensions.Post``1(System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.Post``1(``0,System.String)
  parent: AlgoSdk.TokenizedClientExtensions
  definition: AlgoSdk.TokenizedClientExtensions.Post``1(``0,System.String)
  name: Post<IAlgodClient>(String)
  nameWithType: TokenizedClientExtensions.Post<IAlgodClient>(String)
  fullName: AlgoSdk.TokenizedClientExtensions.Post<AlgoSdk.IAlgodClient>(System.String)
  nameWithType.vb: TokenizedClientExtensions.Post(Of IAlgodClient)(String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.Post(Of AlgoSdk.IAlgodClient)(System.String)
  name.vb: Post(Of IAlgodClient)(String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.Post``1(System.String)
    name: Post<IAlgodClient>
    nameWithType: TokenizedClientExtensions.Post<IAlgodClient>
    fullName: AlgoSdk.TokenizedClientExtensions.Post<AlgoSdk.IAlgodClient>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.Post``1(System.String)
    name: Post(Of IAlgodClient)
    nameWithType: TokenizedClientExtensions.Post(Of IAlgodClient)
    fullName: AlgoSdk.TokenizedClientExtensions.Post(Of AlgoSdk.IAlgodClient)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IAlgodClient.AlgoSdk.TokenizedClientExtensions.Delete``1(System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.Delete``1(``0,System.String)
  parent: AlgoSdk.TokenizedClientExtensions
  definition: AlgoSdk.TokenizedClientExtensions.Delete``1(``0,System.String)
  name: Delete<IAlgodClient>(String)
  nameWithType: TokenizedClientExtensions.Delete<IAlgodClient>(String)
  fullName: AlgoSdk.TokenizedClientExtensions.Delete<AlgoSdk.IAlgodClient>(System.String)
  nameWithType.vb: TokenizedClientExtensions.Delete(Of IAlgodClient)(String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.Delete(Of AlgoSdk.IAlgodClient)(System.String)
  name.vb: Delete(Of IAlgodClient)(String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.Delete``1(System.String)
    name: Delete<IAlgodClient>
    nameWithType: TokenizedClientExtensions.Delete<IAlgodClient>
    fullName: AlgoSdk.TokenizedClientExtensions.Delete<AlgoSdk.IAlgodClient>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.Delete``1(System.String)
    name: Delete(Of IAlgodClient)
    nameWithType: TokenizedClientExtensions.Delete(Of IAlgodClient)
    fullName: AlgoSdk.TokenizedClientExtensions.Delete(Of AlgoSdk.IAlgodClient)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IAlgoApiClient
  commentId: T:AlgoSdk.IAlgoApiClient
  parent: AlgoSdk
  name: IAlgoApiClient
  nameWithType: IAlgoApiClient
  fullName: AlgoSdk.IAlgoApiClient
- uid: AlgoSdk.TokenizedClientExtensions.GetUrl``1(``0,System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.GetUrl``1(``0,System.String)
  isExternal: true
  name: GetUrl<T>(T, String)
  nameWithType: TokenizedClientExtensions.GetUrl<T>(T, String)
  fullName: AlgoSdk.TokenizedClientExtensions.GetUrl<T>(T, System.String)
  nameWithType.vb: TokenizedClientExtensions.GetUrl(Of T)(T, String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.GetUrl(Of T)(T, System.String)
  name.vb: GetUrl(Of T)(T, String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.GetUrl``1(``0,System.String)
    name: GetUrl<T>
    nameWithType: TokenizedClientExtensions.GetUrl<T>
    fullName: AlgoSdk.TokenizedClientExtensions.GetUrl<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.GetUrl``1(``0,System.String)
    name: GetUrl(Of T)
    nameWithType: TokenizedClientExtensions.GetUrl(Of T)
    fullName: AlgoSdk.TokenizedClientExtensions.GetUrl(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.TokenizedClientExtensions
  commentId: T:AlgoSdk.TokenizedClientExtensions
  parent: AlgoSdk
  name: TokenizedClientExtensions
  nameWithType: TokenizedClientExtensions
  fullName: AlgoSdk.TokenizedClientExtensions
- uid: AlgoSdk.TokenizedClientExtensions.Get``1(``0,System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.Get``1(``0,System.String)
  isExternal: true
  name: Get<T>(T, String)
  nameWithType: TokenizedClientExtensions.Get<T>(T, String)
  fullName: AlgoSdk.TokenizedClientExtensions.Get<T>(T, System.String)
  nameWithType.vb: TokenizedClientExtensions.Get(Of T)(T, String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.Get(Of T)(T, System.String)
  name.vb: Get(Of T)(T, String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.Get``1(``0,System.String)
    name: Get<T>
    nameWithType: TokenizedClientExtensions.Get<T>
    fullName: AlgoSdk.TokenizedClientExtensions.Get<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.Get``1(``0,System.String)
    name: Get(Of T)
    nameWithType: TokenizedClientExtensions.Get(Of T)
    fullName: AlgoSdk.TokenizedClientExtensions.Get(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.TokenizedClientExtensions.Post``1(``0,System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.Post``1(``0,System.String)
  isExternal: true
  name: Post<T>(T, String)
  nameWithType: TokenizedClientExtensions.Post<T>(T, String)
  fullName: AlgoSdk.TokenizedClientExtensions.Post<T>(T, System.String)
  nameWithType.vb: TokenizedClientExtensions.Post(Of T)(T, String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.Post(Of T)(T, System.String)
  name.vb: Post(Of T)(T, String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.Post``1(``0,System.String)
    name: Post<T>
    nameWithType: TokenizedClientExtensions.Post<T>
    fullName: AlgoSdk.TokenizedClientExtensions.Post<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.Post``1(``0,System.String)
    name: Post(Of T)
    nameWithType: TokenizedClientExtensions.Post(Of T)
    fullName: AlgoSdk.TokenizedClientExtensions.Post(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.TokenizedClientExtensions.Delete``1(``0,System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.Delete``1(``0,System.String)
  isExternal: true
  name: Delete<T>(T, String)
  nameWithType: TokenizedClientExtensions.Delete<T>(T, String)
  fullName: AlgoSdk.TokenizedClientExtensions.Delete<T>(T, System.String)
  nameWithType.vb: TokenizedClientExtensions.Delete(Of T)(T, String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.Delete(Of T)(T, System.String)
  name.vb: Delete(Of T)(T, String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.Delete``1(``0,System.String)
    name: Delete<T>
    nameWithType: TokenizedClientExtensions.Delete<T>
    fullName: AlgoSdk.TokenizedClientExtensions.Delete<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.Delete``1(``0,System.String)
    name: Delete(Of T)
    nameWithType: TokenizedClientExtensions.Delete(Of T)
    fullName: AlgoSdk.TokenizedClientExtensions.Delete(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IAlgodClient.GetGenesisInformation*
  commentId: Overload:AlgoSdk.IAlgodClient.GetGenesisInformation
  name: GetGenesisInformation
  nameWithType: IAlgodClient.GetGenesisInformation
  fullName: AlgoSdk.IAlgodClient.GetGenesisInformation
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.AlgoApiObject}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.AlgoApiObject}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<AlgoApiObject>>
  nameWithType: UniTask<AlgoApiResponse<AlgoApiObject>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.AlgoApiObject>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of AlgoApiObject))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.AlgoApiObject))
  name.vb: UniTask(Of AlgoApiResponse(Of AlgoApiObject))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiObject
    name: AlgoApiObject
    nameWithType: AlgoApiObject
    fullName: AlgoSdk.AlgoApiObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiObject
    name: AlgoApiObject
    nameWithType: AlgoApiObject
    fullName: AlgoSdk.AlgoApiObject
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cysharp.Threading.Tasks.UniTask`1
  commentId: T:Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<T>
  nameWithType: UniTask<T>
  fullName: Cysharp.Threading.Tasks.UniTask<T>
  nameWithType.vb: UniTask(Of T)
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of T)
  name.vb: UniTask(Of T)
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Cysharp.Threading.Tasks
  commentId: N:Cysharp.Threading.Tasks
  name: Cysharp.Threading.Tasks
  nameWithType: Cysharp.Threading.Tasks
  fullName: Cysharp.Threading.Tasks
- uid: UnityEngine.Networking.UnityWebRequest.Result.Success
  commentId: F:UnityEngine.Networking.UnityWebRequest.Result.Success
  isExternal: true
- uid: AlgoSdk.IAlgodClient.GetHealth*
  commentId: Overload:AlgoSdk.IAlgodClient.GetHealth
  name: GetHealth
  nameWithType: IAlgodClient.GetHealth
  fullName: AlgoSdk.IAlgodClient.GetHealth
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse>
  nameWithType: UniTask<AlgoApiResponse>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse>
  nameWithType.vb: UniTask(Of AlgoApiResponse)
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse)
  name.vb: UniTask(Of AlgoApiResponse)
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IAlgodClient.GetMetrics*
  commentId: Overload:AlgoSdk.IAlgodClient.GetMetrics
  name: GetMetrics
  nameWithType: IAlgodClient.GetMetrics
  fullName: AlgoSdk.IAlgodClient.GetMetrics
- uid: AlgoSdk.IAlgodClient.GetSwaggerSpec*
  commentId: Overload:AlgoSdk.IAlgodClient.GetSwaggerSpec
  name: GetSwaggerSpec
  nameWithType: IAlgodClient.GetSwaggerSpec
  fullName: AlgoSdk.IAlgodClient.GetSwaggerSpec
- uid: AlgoSdk.Account
  commentId: T:AlgoSdk.Account
  parent: AlgoSdk
  name: Account
  nameWithType: Account
  fullName: AlgoSdk.Account
- uid: AlgoSdk.IAlgodClient.GetAccountInformation*
  commentId: Overload:AlgoSdk.IAlgodClient.GetAccountInformation
  name: GetAccountInformation
  nameWithType: IAlgodClient.GetAccountInformation
  fullName: AlgoSdk.IAlgodClient.GetAccountInformation
- uid: AlgoSdk.Address
  commentId: T:AlgoSdk.Address
  parent: AlgoSdk
  name: Address
  nameWithType: Address
  fullName: AlgoSdk.Address
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.Account}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.Account}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<Account>>
  nameWithType: UniTask<AlgoApiResponse<Account>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.Account>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of Account))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.Account))
  name.vb: UniTask(Of AlgoApiResponse(Of Account))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.Account
    name: Account
    nameWithType: Account
    fullName: AlgoSdk.Account
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.Account
    name: Account
    nameWithType: Account
    fullName: AlgoSdk.Account
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IAlgodClient.GetPendingTransactionsByAccount*
  commentId: Overload:AlgoSdk.IAlgodClient.GetPendingTransactionsByAccount
  name: GetPendingTransactionsByAccount
  nameWithType: IAlgodClient.GetPendingTransactionsByAccount
  fullName: AlgoSdk.IAlgodClient.GetPendingTransactionsByAccount
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.PendingTransactions}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.PendingTransactions}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<PendingTransactions>>
  nameWithType: UniTask<AlgoApiResponse<PendingTransactions>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.PendingTransactions>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of PendingTransactions))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.PendingTransactions))
  name.vb: UniTask(Of AlgoApiResponse(Of PendingTransactions))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.PendingTransactions
    name: PendingTransactions
    nameWithType: PendingTransactions
    fullName: AlgoSdk.PendingTransactions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.PendingTransactions
    name: PendingTransactions
    nameWithType: PendingTransactions
    fullName: AlgoSdk.PendingTransactions
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AlgoSdk.Application
  commentId: T:AlgoSdk.Application
  parent: AlgoSdk
  name: Application
  nameWithType: Application
  fullName: AlgoSdk.Application
- uid: AlgoSdk.IAlgodClient.GetApplication*
  commentId: Overload:AlgoSdk.IAlgodClient.GetApplication
  name: GetApplication
  nameWithType: IAlgodClient.GetApplication
  fullName: AlgoSdk.IAlgodClient.GetApplication
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.Application}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.Application}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<Application>>
  nameWithType: UniTask<AlgoApiResponse<Application>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.Application>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of Application))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.Application))
  name.vb: UniTask(Of AlgoApiResponse(Of Application))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.Application
    name: Application
    nameWithType: Application
    fullName: AlgoSdk.Application
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.Application
    name: Application
    nameWithType: Application
    fullName: AlgoSdk.Application
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.Asset
  commentId: T:AlgoSdk.Asset
  parent: AlgoSdk
  name: Asset
  nameWithType: Asset
  fullName: AlgoSdk.Asset
- uid: AlgoSdk.IAlgodClient.GetAsset*
  commentId: Overload:AlgoSdk.IAlgodClient.GetAsset
  name: GetAsset
  nameWithType: IAlgodClient.GetAsset
  fullName: AlgoSdk.IAlgodClient.GetAsset
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.Asset}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.Asset}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<Asset>>
  nameWithType: UniTask<AlgoApiResponse<Asset>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.Asset>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of Asset))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.Asset))
  name.vb: UniTask(Of AlgoApiResponse(Of Asset))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.Asset
    name: Asset
    nameWithType: Asset
    fullName: AlgoSdk.Asset
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.Asset
    name: Asset
    nameWithType: Asset
    fullName: AlgoSdk.Asset
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.BlockResponse
  commentId: T:AlgoSdk.BlockResponse
  parent: AlgoSdk
  name: BlockResponse
  nameWithType: BlockResponse
  fullName: AlgoSdk.BlockResponse
- uid: AlgoSdk.IAlgodClient.GetBlock*
  commentId: Overload:AlgoSdk.IAlgodClient.GetBlock
  name: GetBlock
  nameWithType: IAlgodClient.GetBlock
  fullName: AlgoSdk.IAlgodClient.GetBlock
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.BlockResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.BlockResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<BlockResponse>>
  nameWithType: UniTask<AlgoApiResponse<BlockResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.BlockResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of BlockResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.BlockResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of BlockResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.BlockResponse
    name: BlockResponse
    nameWithType: BlockResponse
    fullName: AlgoSdk.BlockResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.BlockResponse
    name: BlockResponse
    nameWithType: BlockResponse
    fullName: AlgoSdk.BlockResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.MerkleProof
  commentId: T:AlgoSdk.MerkleProof
  parent: AlgoSdk
  name: MerkleProof
  nameWithType: MerkleProof
  fullName: AlgoSdk.MerkleProof
- uid: AlgoSdk.IAlgodClient.GetMerkleProof*
  commentId: Overload:AlgoSdk.IAlgodClient.GetMerkleProof
  name: GetMerkleProof
  nameWithType: IAlgodClient.GetMerkleProof
  fullName: AlgoSdk.IAlgodClient.GetMerkleProof
- uid: AlgoSdk.TransactionId
  commentId: T:AlgoSdk.TransactionId
  parent: AlgoSdk
  name: TransactionId
  nameWithType: TransactionId
  fullName: AlgoSdk.TransactionId
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.MerkleProof}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.MerkleProof}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<MerkleProof>>
  nameWithType: UniTask<AlgoApiResponse<MerkleProof>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.MerkleProof>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of MerkleProof))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.MerkleProof))
  name.vb: UniTask(Of AlgoApiResponse(Of MerkleProof))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.MerkleProof
    name: MerkleProof
    nameWithType: MerkleProof
    fullName: AlgoSdk.MerkleProof
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.MerkleProof
    name: MerkleProof
    nameWithType: MerkleProof
    fullName: AlgoSdk.MerkleProof
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IAlgodClient.StartCatchup*
  commentId: Overload:AlgoSdk.IAlgodClient.StartCatchup
  name: StartCatchup
  nameWithType: IAlgodClient.StartCatchup
  fullName: AlgoSdk.IAlgodClient.StartCatchup
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.CatchupMessage}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.CatchupMessage}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<CatchupMessage>>
  nameWithType: UniTask<AlgoApiResponse<CatchupMessage>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.CatchupMessage>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of CatchupMessage))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.CatchupMessage))
  name.vb: UniTask(Of AlgoApiResponse(Of CatchupMessage))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.CatchupMessage
    name: CatchupMessage
    nameWithType: CatchupMessage
    fullName: AlgoSdk.CatchupMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.CatchupMessage
    name: CatchupMessage
    nameWithType: CatchupMessage
    fullName: AlgoSdk.CatchupMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IAlgodClient.AbortCatchup*
  commentId: Overload:AlgoSdk.IAlgodClient.AbortCatchup
  name: AbortCatchup
  nameWithType: IAlgodClient.AbortCatchup
  fullName: AlgoSdk.IAlgodClient.AbortCatchup
- uid: AlgoSdk.IAlgodClient.GetLedgerSupply*
  commentId: Overload:AlgoSdk.IAlgodClient.GetLedgerSupply
  name: GetLedgerSupply
  nameWithType: IAlgodClient.GetLedgerSupply
  fullName: AlgoSdk.IAlgodClient.GetLedgerSupply
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.LedgerSupply}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.LedgerSupply}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<LedgerSupply>>
  nameWithType: UniTask<AlgoApiResponse<LedgerSupply>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.LedgerSupply>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of LedgerSupply))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.LedgerSupply))
  name.vb: UniTask(Of AlgoApiResponse(Of LedgerSupply))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.LedgerSupply
    name: LedgerSupply
    nameWithType: LedgerSupply
    fullName: AlgoSdk.LedgerSupply
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.LedgerSupply
    name: LedgerSupply
    nameWithType: LedgerSupply
    fullName: AlgoSdk.LedgerSupply
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IAlgodClient.RegisterParticipationKeys*
  commentId: Overload:AlgoSdk.IAlgodClient.RegisterParticipationKeys
  name: RegisterParticipationKeys
  nameWithType: IAlgodClient.RegisterParticipationKeys
  fullName: AlgoSdk.IAlgodClient.RegisterParticipationKeys
- uid: AlgoSdk.Optional{System.UInt64}
  commentId: T:AlgoSdk.Optional{System.UInt64}
  parent: AlgoSdk
  definition: AlgoSdk.Optional`1
  name: Optional<UInt64>
  nameWithType: Optional<UInt64>
  fullName: AlgoSdk.Optional<System.UInt64>
  nameWithType.vb: Optional(Of UInt64)
  fullName.vb: AlgoSdk.Optional(Of System.UInt64)
  name.vb: Optional(Of UInt64)
  spec.csharp:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.Optional{System.Boolean}
  commentId: T:AlgoSdk.Optional{System.Boolean}
  parent: AlgoSdk
  definition: AlgoSdk.Optional`1
  name: Optional<Boolean>
  nameWithType: Optional<Boolean>
  fullName: AlgoSdk.Optional<System.Boolean>
  nameWithType.vb: Optional(Of Boolean)
  fullName.vb: AlgoSdk.Optional(Of System.Boolean)
  name.vb: Optional(Of Boolean)
  spec.csharp:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.TransactionIdResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.TransactionIdResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<TransactionIdResponse>>
  nameWithType: UniTask<AlgoApiResponse<TransactionIdResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.TransactionIdResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of TransactionIdResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.TransactionIdResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of TransactionIdResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.TransactionIdResponse
    name: TransactionIdResponse
    nameWithType: TransactionIdResponse
    fullName: AlgoSdk.TransactionIdResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.TransactionIdResponse
    name: TransactionIdResponse
    nameWithType: TransactionIdResponse
    fullName: AlgoSdk.TransactionIdResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.Optional`1
  commentId: T:AlgoSdk.Optional`1
  parent: AlgoSdk
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: AlgoSdk.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: AlgoSdk.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IAlgodClient.ShutDown*
  commentId: Overload:AlgoSdk.IAlgodClient.ShutDown
  name: ShutDown
  nameWithType: IAlgodClient.ShutDown
  fullName: AlgoSdk.IAlgodClient.ShutDown
- uid: AlgoSdk.Status
  commentId: T:AlgoSdk.Status
  parent: AlgoSdk
  name: Status
  nameWithType: Status
  fullName: AlgoSdk.Status
- uid: AlgoSdk.IAlgodClient.GetCurrentStatus*
  commentId: Overload:AlgoSdk.IAlgodClient.GetCurrentStatus
  name: GetCurrentStatus
  nameWithType: IAlgodClient.GetCurrentStatus
  fullName: AlgoSdk.IAlgodClient.GetCurrentStatus
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.Status}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.Status}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<Status>>
  nameWithType: UniTask<AlgoApiResponse<Status>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.Status>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of Status))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.Status))
  name.vb: UniTask(Of AlgoApiResponse(Of Status))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.Status
    name: Status
    nameWithType: Status
    fullName: AlgoSdk.Status
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.Status
    name: Status
    nameWithType: Status
    fullName: AlgoSdk.Status
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IAlgodClient.GetStatusAfterWaitingForRound*
  commentId: Overload:AlgoSdk.IAlgodClient.GetStatusAfterWaitingForRound
  name: GetStatusAfterWaitingForRound
  nameWithType: IAlgodClient.GetStatusAfterWaitingForRound
  fullName: AlgoSdk.IAlgodClient.GetStatusAfterWaitingForRound
- uid: AlgoSdk.IAlgodClient.TealCompile*
  commentId: Overload:AlgoSdk.IAlgodClient.TealCompile
  name: TealCompile
  nameWithType: IAlgodClient.TealCompile
  fullName: AlgoSdk.IAlgodClient.TealCompile
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.TealCompilationResult}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.TealCompilationResult}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<TealCompilationResult>>
  nameWithType: UniTask<AlgoApiResponse<TealCompilationResult>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.TealCompilationResult>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of TealCompilationResult))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.TealCompilationResult))
  name.vb: UniTask(Of AlgoApiResponse(Of TealCompilationResult))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.TealCompilationResult
    name: TealCompilationResult
    nameWithType: TealCompilationResult
    fullName: AlgoSdk.TealCompilationResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.TealCompilationResult
    name: TealCompilationResult
    nameWithType: TealCompilationResult
    fullName: AlgoSdk.TealCompilationResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IAlgodClient.TealDryrun*
  commentId: Overload:AlgoSdk.IAlgodClient.TealDryrun
  name: TealDryrun
  nameWithType: IAlgodClient.TealDryrun
  fullName: AlgoSdk.IAlgodClient.TealDryrun
- uid: AlgoSdk.Optional{AlgoSdk.DryrunRequest}
  commentId: T:AlgoSdk.Optional{AlgoSdk.DryrunRequest}
  parent: AlgoSdk
  definition: AlgoSdk.Optional`1
  name: Optional<DryrunRequest>
  nameWithType: Optional<DryrunRequest>
  fullName: AlgoSdk.Optional<AlgoSdk.DryrunRequest>
  nameWithType.vb: Optional(Of DryrunRequest)
  fullName.vb: AlgoSdk.Optional(Of AlgoSdk.DryrunRequest)
  name.vb: Optional(Of DryrunRequest)
  spec.csharp:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.DryrunRequest
    name: DryrunRequest
    nameWithType: DryrunRequest
    fullName: AlgoSdk.DryrunRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.DryrunRequest
    name: DryrunRequest
    nameWithType: DryrunRequest
    fullName: AlgoSdk.DryrunRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.DryrunResults}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.DryrunResults}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<DryrunResults>>
  nameWithType: UniTask<AlgoApiResponse<DryrunResults>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.DryrunResults>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of DryrunResults))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.DryrunResults))
  name.vb: UniTask(Of AlgoApiResponse(Of DryrunResults))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.DryrunResults
    name: DryrunResults
    nameWithType: DryrunResults
    fullName: AlgoSdk.DryrunResults
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.DryrunResults
    name: DryrunResults
    nameWithType: DryrunResults
    fullName: AlgoSdk.DryrunResults
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.ITransaction
  commentId: T:AlgoSdk.ITransaction
  parent: AlgoSdk
  name: ITransaction
  nameWithType: ITransaction
  fullName: AlgoSdk.ITransaction
- uid: AlgoSdk.IAlgodClient.SendTransaction*
  commentId: Overload:AlgoSdk.IAlgodClient.SendTransaction
  name: SendTransaction
  nameWithType: IAlgodClient.SendTransaction
  fullName: AlgoSdk.IAlgodClient.SendTransaction
- uid: AlgoSdk.Signed{{T}}
  commentId: T:AlgoSdk.Signed{``0}
  parent: AlgoSdk
  definition: AlgoSdk.Signed`1
  name: Signed<T>
  nameWithType: Signed<T>
  fullName: AlgoSdk.Signed<T>
  nameWithType.vb: Signed(Of T)
  fullName.vb: AlgoSdk.Signed(Of T)
  name.vb: Signed(Of T)
  spec.csharp:
  - uid: AlgoSdk.Signed`1
    name: Signed
    nameWithType: Signed
    fullName: AlgoSdk.Signed
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.Signed`1
    name: Signed
    nameWithType: Signed
    fullName: AlgoSdk.Signed
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.Signed`1
  commentId: T:AlgoSdk.Signed`1
  parent: AlgoSdk
  name: Signed<TTransaction>
  nameWithType: Signed<TTransaction>
  fullName: AlgoSdk.Signed<TTransaction>
  nameWithType.vb: Signed(Of TTransaction)
  fullName.vb: AlgoSdk.Signed(Of TTransaction)
  name.vb: Signed(Of TTransaction)
  spec.csharp:
  - uid: AlgoSdk.Signed`1
    name: Signed
    nameWithType: Signed
    fullName: AlgoSdk.Signed
  - name: <
    nameWithType: <
    fullName: <
  - name: TTransaction
    nameWithType: TTransaction
    fullName: TTransaction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.Signed`1
    name: Signed
    nameWithType: Signed
    fullName: AlgoSdk.Signed
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTransaction
    nameWithType: TTransaction
    fullName: TTransaction
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.TransactionParams
  commentId: T:AlgoSdk.TransactionParams
  parent: AlgoSdk
  name: TransactionParams
  nameWithType: TransactionParams
  fullName: AlgoSdk.TransactionParams
- uid: AlgoSdk.IAlgodClient.GetSuggestedParams*
  commentId: Overload:AlgoSdk.IAlgodClient.GetSuggestedParams
  name: GetSuggestedParams
  nameWithType: IAlgodClient.GetSuggestedParams
  fullName: AlgoSdk.IAlgodClient.GetSuggestedParams
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.TransactionParams}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.TransactionParams}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<TransactionParams>>
  nameWithType: UniTask<AlgoApiResponse<TransactionParams>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.TransactionParams>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of TransactionParams))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.TransactionParams))
  name.vb: UniTask(Of AlgoApiResponse(Of TransactionParams))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.TransactionParams
    name: TransactionParams
    nameWithType: TransactionParams
    fullName: AlgoSdk.TransactionParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.TransactionParams
    name: TransactionParams
    nameWithType: TransactionParams
    fullName: AlgoSdk.TransactionParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IAlgodClient.GetPendingTransactions*
  commentId: Overload:AlgoSdk.IAlgodClient.GetPendingTransactions
  name: GetPendingTransactions
  nameWithType: IAlgodClient.GetPendingTransactions
  fullName: AlgoSdk.IAlgodClient.GetPendingTransactions
- uid: AlgoSdk.IAlgodClient.GetPendingTransaction*
  commentId: Overload:AlgoSdk.IAlgodClient.GetPendingTransaction
  name: GetPendingTransaction
  nameWithType: IAlgodClient.GetPendingTransaction
  fullName: AlgoSdk.IAlgodClient.GetPendingTransaction
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.PendingTransaction}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.PendingTransaction}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<PendingTransaction>>
  nameWithType: UniTask<AlgoApiResponse<PendingTransaction>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.PendingTransaction>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of PendingTransaction))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.PendingTransaction))
  name.vb: UniTask(Of AlgoApiResponse(Of PendingTransaction))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.PendingTransaction
    name: PendingTransaction
    nameWithType: PendingTransaction
    fullName: AlgoSdk.PendingTransaction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.PendingTransaction
    name: PendingTransaction
    nameWithType: PendingTransaction
    fullName: AlgoSdk.PendingTransaction
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.Version
  commentId: T:AlgoSdk.Version
  parent: AlgoSdk
  name: Version
  nameWithType: Version
  fullName: AlgoSdk.Version
- uid: AlgoSdk.IAlgodClient.GetVersions*
  commentId: Overload:AlgoSdk.IAlgodClient.GetVersions
  name: GetVersions
  nameWithType: IAlgodClient.GetVersions
  fullName: AlgoSdk.IAlgodClient.GetVersions
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.Version}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.Version}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<Version>>
  nameWithType: UniTask<AlgoApiResponse<Version>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.Version>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of Version))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.Version))
  name.vb: UniTask(Of AlgoApiResponse(Of Version))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.Version
    name: Version
    nameWithType: Version
    fullName: AlgoSdk.Version
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.Version
    name: Version
    nameWithType: Version
    fullName: AlgoSdk.Version
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
