### YamlMime:ManagedReference
items:
- uid: AlgoSdk.Status
  commentId: T:AlgoSdk.Status
  id: Status
  parent: AlgoSdk
  children:
  - AlgoSdk.Status.Catchpoint
  - AlgoSdk.Status.CatchpointAcquiredBlocks
  - AlgoSdk.Status.CatchpointProcessedAmounts
  - AlgoSdk.Status.CatchpointTotalAccounts
  - AlgoSdk.Status.CatchpointTotalBlocks
  - AlgoSdk.Status.CatchpointVerifiedAccounts
  - AlgoSdk.Status.CatchupTime
  - AlgoSdk.Status.Equals(AlgoSdk.Status)
  - AlgoSdk.Status.LastCatchpoint
  - AlgoSdk.Status.LastRound
  - AlgoSdk.Status.LastVersion
  - AlgoSdk.Status.NextVersion
  - AlgoSdk.Status.NextVersionRound
  - AlgoSdk.Status.NextVersionSupported
  - AlgoSdk.Status.StoppedAtUnsupportedRound
  - AlgoSdk.Status.TimeSinceLastRound
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: Status
  fullName: AlgoSdk.Status
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Status
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
    startLine: 4
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: 'public struct Status : IEquatable<Status>'
    content.vb: >-
      Public Structure Status
          Implements IEquatable(Of Status)
  implements:
  - System.IEquatable{AlgoSdk.Status}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: AlgoSdk.Status.Catchpoint
  commentId: F:AlgoSdk.Status.Catchpoint
  id: Catchpoint
  parent: AlgoSdk.Status
  langs:
  - csharp
  - vb
  name: Catchpoint
  nameWithType: Status.Catchpoint
  fullName: AlgoSdk.Status.Catchpoint
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Catchpoint
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
    startLine: 9
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("catchpoint", null, false)]

      public string Catchpoint
    return:
      type: System.String
    content.vb: >-
      <AlgoApiField("catchpoint", Nothing, False)>

      Public Catchpoint As String
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: catchpoint
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Status.CatchpointAcquiredBlocks
  commentId: F:AlgoSdk.Status.CatchpointAcquiredBlocks
  id: CatchpointAcquiredBlocks
  parent: AlgoSdk.Status
  langs:
  - csharp
  - vb
  name: CatchpointAcquiredBlocks
  nameWithType: Status.CatchpointAcquiredBlocks
  fullName: AlgoSdk.Status.CatchpointAcquiredBlocks
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: CatchpointAcquiredBlocks
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
    startLine: 11
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("catchpoint-acquired-blocks", null, false)]

      public ulong CatchpointAcquiredBlocks
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("catchpoint-acquired-blocks", Nothing, False)>

      Public CatchpointAcquiredBlocks As ULong
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: catchpoint-acquired-blocks
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Status.CatchpointProcessedAmounts
  commentId: F:AlgoSdk.Status.CatchpointProcessedAmounts
  id: CatchpointProcessedAmounts
  parent: AlgoSdk.Status
  langs:
  - csharp
  - vb
  name: CatchpointProcessedAmounts
  nameWithType: Status.CatchpointProcessedAmounts
  fullName: AlgoSdk.Status.CatchpointProcessedAmounts
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: CatchpointProcessedAmounts
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
    startLine: 13
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("catchpoint-processed-accounts", null, false)]

      public ulong CatchpointProcessedAmounts
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("catchpoint-processed-accounts", Nothing, False)>

      Public CatchpointProcessedAmounts As ULong
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: catchpoint-processed-accounts
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Status.CatchpointTotalAccounts
  commentId: F:AlgoSdk.Status.CatchpointTotalAccounts
  id: CatchpointTotalAccounts
  parent: AlgoSdk.Status
  langs:
  - csharp
  - vb
  name: CatchpointTotalAccounts
  nameWithType: Status.CatchpointTotalAccounts
  fullName: AlgoSdk.Status.CatchpointTotalAccounts
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: CatchpointTotalAccounts
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
    startLine: 15
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("catchpoint-total-accounts", null, false)]

      public ulong CatchpointTotalAccounts
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("catchpoint-total-accounts", Nothing, False)>

      Public CatchpointTotalAccounts As ULong
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: catchpoint-total-accounts
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Status.CatchpointTotalBlocks
  commentId: F:AlgoSdk.Status.CatchpointTotalBlocks
  id: CatchpointTotalBlocks
  parent: AlgoSdk.Status
  langs:
  - csharp
  - vb
  name: CatchpointTotalBlocks
  nameWithType: Status.CatchpointTotalBlocks
  fullName: AlgoSdk.Status.CatchpointTotalBlocks
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: CatchpointTotalBlocks
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
    startLine: 17
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("catchpoint-total-blocks", null, false)]

      public ulong CatchpointTotalBlocks
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("catchpoint-total-blocks", Nothing, False)>

      Public CatchpointTotalBlocks As ULong
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: catchpoint-total-blocks
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Status.CatchpointVerifiedAccounts
  commentId: F:AlgoSdk.Status.CatchpointVerifiedAccounts
  id: CatchpointVerifiedAccounts
  parent: AlgoSdk.Status
  langs:
  - csharp
  - vb
  name: CatchpointVerifiedAccounts
  nameWithType: Status.CatchpointVerifiedAccounts
  fullName: AlgoSdk.Status.CatchpointVerifiedAccounts
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: CatchpointVerifiedAccounts
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
    startLine: 19
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("catchpoint-verified-accounts", null, false)]

      public ulong CatchpointVerifiedAccounts
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("catchpoint-verified-accounts", Nothing, False)>

      Public CatchpointVerifiedAccounts As ULong
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: catchpoint-verified-accounts
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Status.CatchupTime
  commentId: F:AlgoSdk.Status.CatchupTime
  id: CatchupTime
  parent: AlgoSdk.Status
  langs:
  - csharp
  - vb
  name: CatchupTime
  nameWithType: Status.CatchupTime
  fullName: AlgoSdk.Status.CatchupTime
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: CatchupTime
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
    startLine: 21
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("catchup-time", null, false)]

      public ulong CatchupTime
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("catchup-time", Nothing, False)>

      Public CatchupTime As ULong
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: catchup-time
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Status.LastCatchpoint
  commentId: F:AlgoSdk.Status.LastCatchpoint
  id: LastCatchpoint
  parent: AlgoSdk.Status
  langs:
  - csharp
  - vb
  name: LastCatchpoint
  nameWithType: Status.LastCatchpoint
  fullName: AlgoSdk.Status.LastCatchpoint
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: LastCatchpoint
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
    startLine: 23
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("last-catchpoint", null, false)]

      public string LastCatchpoint
    return:
      type: System.String
    content.vb: >-
      <AlgoApiField("last-catchpoint", Nothing, False)>

      Public LastCatchpoint As String
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: last-catchpoint
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Status.LastRound
  commentId: F:AlgoSdk.Status.LastRound
  id: LastRound
  parent: AlgoSdk.Status
  langs:
  - csharp
  - vb
  name: LastRound
  nameWithType: Status.LastRound
  fullName: AlgoSdk.Status.LastRound
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: LastRound
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
    startLine: 25
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("last-round", null, false)]

      public ulong LastRound
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("last-round", Nothing, False)>

      Public LastRound As ULong
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: last-round
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Status.LastVersion
  commentId: F:AlgoSdk.Status.LastVersion
  id: LastVersion
  parent: AlgoSdk.Status
  langs:
  - csharp
  - vb
  name: LastVersion
  nameWithType: Status.LastVersion
  fullName: AlgoSdk.Status.LastVersion
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: LastVersion
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
    startLine: 27
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("last-version", null, false)]

      public string LastVersion
    return:
      type: System.String
    content.vb: >-
      <AlgoApiField("last-version", Nothing, False)>

      Public LastVersion As String
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: last-version
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Status.NextVersion
  commentId: F:AlgoSdk.Status.NextVersion
  id: NextVersion
  parent: AlgoSdk.Status
  langs:
  - csharp
  - vb
  name: NextVersion
  nameWithType: Status.NextVersion
  fullName: AlgoSdk.Status.NextVersion
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: NextVersion
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
    startLine: 29
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("next-version", null, false)]

      public string NextVersion
    return:
      type: System.String
    content.vb: >-
      <AlgoApiField("next-version", Nothing, False)>

      Public NextVersion As String
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: next-version
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Status.NextVersionRound
  commentId: F:AlgoSdk.Status.NextVersionRound
  id: NextVersionRound
  parent: AlgoSdk.Status
  langs:
  - csharp
  - vb
  name: NextVersionRound
  nameWithType: Status.NextVersionRound
  fullName: AlgoSdk.Status.NextVersionRound
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: NextVersionRound
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
    startLine: 31
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("next-version-round", null, false)]

      public ulong NextVersionRound
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("next-version-round", Nothing, False)>

      Public NextVersionRound As ULong
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: next-version-round
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Status.NextVersionSupported
  commentId: F:AlgoSdk.Status.NextVersionSupported
  id: NextVersionSupported
  parent: AlgoSdk.Status
  langs:
  - csharp
  - vb
  name: NextVersionSupported
  nameWithType: Status.NextVersionSupported
  fullName: AlgoSdk.Status.NextVersionSupported
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: NextVersionSupported
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
    startLine: 33
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("next-version-supported", null, false)]

      public bool NextVersionSupported
    return:
      type: System.Boolean
    content.vb: >-
      <AlgoApiField("next-version-supported", Nothing, False)>

      Public NextVersionSupported As Boolean
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: next-version-supported
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Status.StoppedAtUnsupportedRound
  commentId: F:AlgoSdk.Status.StoppedAtUnsupportedRound
  id: StoppedAtUnsupportedRound
  parent: AlgoSdk.Status
  langs:
  - csharp
  - vb
  name: StoppedAtUnsupportedRound
  nameWithType: Status.StoppedAtUnsupportedRound
  fullName: AlgoSdk.Status.StoppedAtUnsupportedRound
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: StoppedAtUnsupportedRound
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
    startLine: 35
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("stopped-at-unsupported-round", null, false)]

      public bool StoppedAtUnsupportedRound
    return:
      type: System.Boolean
    content.vb: >-
      <AlgoApiField("stopped-at-unsupported-round", Nothing, False)>

      Public StoppedAtUnsupportedRound As Boolean
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: stopped-at-unsupported-round
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Status.TimeSinceLastRound
  commentId: F:AlgoSdk.Status.TimeSinceLastRound
  id: TimeSinceLastRound
  parent: AlgoSdk.Status
  langs:
  - csharp
  - vb
  name: TimeSinceLastRound
  nameWithType: Status.TimeSinceLastRound
  fullName: AlgoSdk.Status.TimeSinceLastRound
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TimeSinceLastRound
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
    startLine: 37
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("time-since-last-round", null, false)]

      public ulong TimeSinceLastRound
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("time-since-last-round", Nothing, False)>

      Public TimeSinceLastRound As ULong
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: time-since-last-round
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Status.Equals(AlgoSdk.Status)
  commentId: M:AlgoSdk.Status.Equals(AlgoSdk.Status)
  id: Equals(AlgoSdk.Status)
  parent: AlgoSdk.Status
  langs:
  - csharp
  - vb
  name: Equals(Status)
  nameWithType: Status.Equals(Status)
  fullName: AlgoSdk.Status.Equals(AlgoSdk.Status)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Equals
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Status.cs
    startLine: 39
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public bool Equals(Status other)
    parameters:
    - id: other
      type: AlgoSdk.Status
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Status) As Boolean
  overload: AlgoSdk.Status.Equals*
  implements:
  - System.IEquatable{AlgoSdk.Status}.Equals(AlgoSdk.Status)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: System.IEquatable{AlgoSdk.Status}
  commentId: T:System.IEquatable{AlgoSdk.Status}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Status>
  nameWithType: IEquatable<Status>
  fullName: System.IEquatable<AlgoSdk.Status>
  nameWithType.vb: IEquatable(Of Status)
  fullName.vb: System.IEquatable(Of AlgoSdk.Status)
  name.vb: IEquatable(Of Status)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.Status
    name: Status
    nameWithType: Status
    fullName: AlgoSdk.Status
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.Status
    name: Status
    nameWithType: Status
    fullName: AlgoSdk.Status
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AlgoSdk.Status.Equals*
  commentId: Overload:AlgoSdk.Status.Equals
  name: Equals
  nameWithType: Status.Equals
  fullName: AlgoSdk.Status.Equals
- uid: System.IEquatable{AlgoSdk.Status}.Equals(AlgoSdk.Status)
  commentId: M:System.IEquatable{AlgoSdk.Status}.Equals(AlgoSdk.Status)
  parent: System.IEquatable{AlgoSdk.Status}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Status)
  nameWithType: IEquatable<Status>.Equals(Status)
  fullName: System.IEquatable<AlgoSdk.Status>.Equals(AlgoSdk.Status)
  nameWithType.vb: IEquatable(Of Status).Equals(Status)
  fullName.vb: System.IEquatable(Of AlgoSdk.Status).Equals(AlgoSdk.Status)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Status>.Equals
    fullName: System.IEquatable<AlgoSdk.Status>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.Status
    name: Status
    nameWithType: Status
    fullName: AlgoSdk.Status
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Status).Equals
    fullName: System.IEquatable(Of AlgoSdk.Status).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.Status
    name: Status
    nameWithType: Status
    fullName: AlgoSdk.Status
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.Status
  commentId: T:AlgoSdk.Status
  parent: AlgoSdk
  name: Status
  nameWithType: Status
  fullName: AlgoSdk.Status
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
