### YamlMime:ManagedReference
items:
- uid: AlgoSdk.AssetParams
  commentId: T:AlgoSdk.AssetParams
  id: AssetParams
  parent: AlgoSdk
  children:
  - AlgoSdk.AssetParams.Clawback
  - AlgoSdk.AssetParams.Creator
  - AlgoSdk.AssetParams.Decimals
  - AlgoSdk.AssetParams.DefaultFrozen
  - AlgoSdk.AssetParams.Equals(AlgoSdk.AssetParams)
  - AlgoSdk.AssetParams.Freeze
  - AlgoSdk.AssetParams.Manager
  - AlgoSdk.AssetParams.MetadataHash
  - AlgoSdk.AssetParams.Name
  - AlgoSdk.AssetParams.NameBase64
  - AlgoSdk.AssetParams.Reserve
  - AlgoSdk.AssetParams.Total
  - AlgoSdk.AssetParams.UnitName
  - AlgoSdk.AssetParams.UnitNameBase64
  - AlgoSdk.AssetParams.Url
  - AlgoSdk.AssetParams.UrlBase64
  langs:
  - csharp
  - vb
  name: AssetParams
  nameWithType: AssetParams
  fullName: AlgoSdk.AssetParams
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AssetParams
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
    startLine: 6
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: 'public struct AssetParams : IEquatable<AssetParams>'
    content.vb: >-
      Public Structure AssetParams
          Implements IEquatable(Of AssetParams)
  implements:
  - System.IEquatable{AlgoSdk.AssetParams}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: AlgoSdk.AssetParams.Clawback
  commentId: F:AlgoSdk.AssetParams.Clawback
  id: Clawback
  parent: AlgoSdk.AssetParams
  langs:
  - csharp
  - vb
  name: Clawback
  nameWithType: AssetParams.Clawback
  fullName: AlgoSdk.AssetParams.Clawback
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Clawback
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
    startLine: 11
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("clawback", "c", false)]

      public Address Clawback
    return:
      type: AlgoSdk.Address
    content.vb: >-
      <AlgoApiField("clawback", "c", False)>

      Public Clawback As Address
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: clawback
    - type: System.String
      value: c
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.AssetParams.Creator
  commentId: F:AlgoSdk.AssetParams.Creator
  id: Creator
  parent: AlgoSdk.AssetParams
  langs:
  - csharp
  - vb
  name: Creator
  nameWithType: AssetParams.Creator
  fullName: AlgoSdk.AssetParams.Creator
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Creator
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
    startLine: 14
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("creator", null, true)]

      public Address Creator
    return:
      type: AlgoSdk.Address
    content.vb: >-
      <AlgoApiField("creator", Nothing, True)>

      Public Creator As Address
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: creator
    - type: System.String
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.AssetParams.Decimals
  commentId: F:AlgoSdk.AssetParams.Decimals
  id: Decimals
  parent: AlgoSdk.AssetParams
  langs:
  - csharp
  - vb
  name: Decimals
  nameWithType: AssetParams.Decimals
  fullName: AlgoSdk.AssetParams.Decimals
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Decimals
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
    startLine: 17
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("decimals", "dc", false)]

      public uint Decimals
    return:
      type: System.UInt32
    content.vb: >-
      <AlgoApiField("decimals", "dc", False)>

      Public Decimals As UInteger
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: decimals
    - type: System.String
      value: dc
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.AssetParams.DefaultFrozen
  commentId: F:AlgoSdk.AssetParams.DefaultFrozen
  id: DefaultFrozen
  parent: AlgoSdk.AssetParams
  langs:
  - csharp
  - vb
  name: DefaultFrozen
  nameWithType: AssetParams.DefaultFrozen
  fullName: AlgoSdk.AssetParams.DefaultFrozen
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: DefaultFrozen
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
    startLine: 20
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("default-frozen", "df", false)]

      public bool DefaultFrozen
    return:
      type: System.Boolean
    content.vb: >-
      <AlgoApiField("default-frozen", "df", False)>

      Public DefaultFrozen As Boolean
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: default-frozen
    - type: System.String
      value: df
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.AssetParams.Freeze
  commentId: F:AlgoSdk.AssetParams.Freeze
  id: Freeze
  parent: AlgoSdk.AssetParams
  langs:
  - csharp
  - vb
  name: Freeze
  nameWithType: AssetParams.Freeze
  fullName: AlgoSdk.AssetParams.Freeze
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Freeze
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
    startLine: 23
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("freeze", "f", false)]

      public Address Freeze
    return:
      type: AlgoSdk.Address
    content.vb: >-
      <AlgoApiField("freeze", "f", False)>

      Public Freeze As Address
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: freeze
    - type: System.String
      value: f
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.AssetParams.Manager
  commentId: F:AlgoSdk.AssetParams.Manager
  id: Manager
  parent: AlgoSdk.AssetParams
  langs:
  - csharp
  - vb
  name: Manager
  nameWithType: AssetParams.Manager
  fullName: AlgoSdk.AssetParams.Manager
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Manager
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
    startLine: 26
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("manager", "m", false)]

      public Address Manager
    return:
      type: AlgoSdk.Address
    content.vb: >-
      <AlgoApiField("manager", "m", False)>

      Public Manager As Address
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: manager
    - type: System.String
      value: m
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.AssetParams.MetadataHash
  commentId: F:AlgoSdk.AssetParams.MetadataHash
  id: MetadataHash
  parent: AlgoSdk.AssetParams
  langs:
  - csharp
  - vb
  name: MetadataHash
  nameWithType: AssetParams.MetadataHash
  fullName: AlgoSdk.AssetParams.MetadataHash
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: MetadataHash
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
    startLine: 29
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("metadata-hash", "am", false)]

      public Sha512_256_Hash MetadataHash
    return:
      type: AlgoSdk.Crypto.Sha512_256_Hash
    content.vb: >-
      <AlgoApiField("metadata-hash", "am", False)>

      Public MetadataHash As Sha512_256_Hash
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: metadata-hash
    - type: System.String
      value: am
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.AssetParams.Name
  commentId: F:AlgoSdk.AssetParams.Name
  id: Name
  parent: AlgoSdk.AssetParams
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: AssetParams.Name
  fullName: AlgoSdk.AssetParams.Name
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Name
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
    startLine: 32
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("name", "an", false)]

      public FixedString64Bytes Name
    return:
      type: Unity.Collections.FixedString64Bytes
    content.vb: >-
      <AlgoApiField("name", "an", False)>

      Public Name As FixedString64Bytes
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: name
    - type: System.String
      value: an
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.AssetParams.NameBase64
  commentId: P:AlgoSdk.AssetParams.NameBase64
  id: NameBase64
  parent: AlgoSdk.AssetParams
  langs:
  - csharp
  - vb
  name: NameBase64
  nameWithType: AssetParams.NameBase64
  fullName: AlgoSdk.AssetParams.NameBase64
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: NameBase64
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
    startLine: 34
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("name-b64", null, true)]

      public FixedString64Bytes NameBase64 { get; set; }
    parameters: []
    return:
      type: Unity.Collections.FixedString64Bytes
    content.vb: >-
      <AlgoApiField("name-b64", Nothing, True)>

      Public Property NameBase64 As FixedString64Bytes
  overload: AlgoSdk.AssetParams.NameBase64*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: name-b64
    - type: System.String
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.AssetParams.Reserve
  commentId: F:AlgoSdk.AssetParams.Reserve
  id: Reserve
  parent: AlgoSdk.AssetParams
  langs:
  - csharp
  - vb
  name: Reserve
  nameWithType: AssetParams.Reserve
  fullName: AlgoSdk.AssetParams.Reserve
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Reserve
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
    startLine: 47
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("reserve", "r", false)]

      public Address Reserve
    return:
      type: AlgoSdk.Address
    content.vb: >-
      <AlgoApiField("reserve", "r", False)>

      Public Reserve As Address
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: reserve
    - type: System.String
      value: r
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.AssetParams.Total
  commentId: F:AlgoSdk.AssetParams.Total
  id: Total
  parent: AlgoSdk.AssetParams
  langs:
  - csharp
  - vb
  name: Total
  nameWithType: AssetParams.Total
  fullName: AlgoSdk.AssetParams.Total
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Total
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
    startLine: 50
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("total", "t", false)]

      public ulong Total
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("total", "t", False)>

      Public Total As ULong
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: total
    - type: System.String
      value: t
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.AssetParams.UnitName
  commentId: F:AlgoSdk.AssetParams.UnitName
  id: UnitName
  parent: AlgoSdk.AssetParams
  langs:
  - csharp
  - vb
  name: UnitName
  nameWithType: AssetParams.UnitName
  fullName: AlgoSdk.AssetParams.UnitName
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: UnitName
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
    startLine: 53
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("unit-name", "un", false)]

      public FixedString32Bytes UnitName
    return:
      type: Unity.Collections.FixedString32Bytes
    content.vb: >-
      <AlgoApiField("unit-name", "un", False)>

      Public UnitName As FixedString32Bytes
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: unit-name
    - type: System.String
      value: un
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.AssetParams.UnitNameBase64
  commentId: P:AlgoSdk.AssetParams.UnitNameBase64
  id: UnitNameBase64
  parent: AlgoSdk.AssetParams
  langs:
  - csharp
  - vb
  name: UnitNameBase64
  nameWithType: AssetParams.UnitNameBase64
  fullName: AlgoSdk.AssetParams.UnitNameBase64
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: UnitNameBase64
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
    startLine: 55
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("unit-name-b64", null, true)]

      public FixedString32Bytes UnitNameBase64 { get; set; }
    parameters: []
    return:
      type: Unity.Collections.FixedString32Bytes
    content.vb: >-
      <AlgoApiField("unit-name-b64", Nothing, True)>

      Public Property UnitNameBase64 As FixedString32Bytes
  overload: AlgoSdk.AssetParams.UnitNameBase64*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: unit-name-b64
    - type: System.String
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.AssetParams.Url
  commentId: F:AlgoSdk.AssetParams.Url
  id: Url
  parent: AlgoSdk.AssetParams
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: AssetParams.Url
  fullName: AlgoSdk.AssetParams.Url
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Url
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
    startLine: 68
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("url", "au", false)]

      public FixedString64Bytes Url
    return:
      type: Unity.Collections.FixedString64Bytes
    content.vb: >-
      <AlgoApiField("url", "au", False)>

      Public Url As FixedString64Bytes
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: url
    - type: System.String
      value: au
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.AssetParams.UrlBase64
  commentId: P:AlgoSdk.AssetParams.UrlBase64
  id: UrlBase64
  parent: AlgoSdk.AssetParams
  langs:
  - csharp
  - vb
  name: UrlBase64
  nameWithType: AssetParams.UrlBase64
  fullName: AlgoSdk.AssetParams.UrlBase64
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: UrlBase64
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
    startLine: 70
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("url-b64", null, true)]

      public FixedString64Bytes UrlBase64 { get; set; }
    parameters: []
    return:
      type: Unity.Collections.FixedString64Bytes
    content.vb: >-
      <AlgoApiField("url-b64", Nothing, True)>

      Public Property UrlBase64 As FixedString64Bytes
  overload: AlgoSdk.AssetParams.UrlBase64*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: url-b64
    - type: System.String
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.AssetParams.Equals(AlgoSdk.AssetParams)
  commentId: M:AlgoSdk.AssetParams.Equals(AlgoSdk.AssetParams)
  id: Equals(AlgoSdk.AssetParams)
  parent: AlgoSdk.AssetParams
  langs:
  - csharp
  - vb
  name: Equals(AssetParams)
  nameWithType: AssetParams.Equals(AssetParams)
  fullName: AlgoSdk.AssetParams.Equals(AlgoSdk.AssetParams)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Equals
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/AssetParams.cs
    startLine: 82
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public bool Equals(AssetParams other)
    parameters:
    - id: other
      type: AlgoSdk.AssetParams
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As AssetParams) As Boolean
  overload: AlgoSdk.AssetParams.Equals*
  implements:
  - System.IEquatable{AlgoSdk.AssetParams}.Equals(AlgoSdk.AssetParams)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: System.IEquatable{AlgoSdk.AssetParams}
  commentId: T:System.IEquatable{AlgoSdk.AssetParams}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<AssetParams>
  nameWithType: IEquatable<AssetParams>
  fullName: System.IEquatable<AlgoSdk.AssetParams>
  nameWithType.vb: IEquatable(Of AssetParams)
  fullName.vb: System.IEquatable(Of AlgoSdk.AssetParams)
  name.vb: IEquatable(Of AssetParams)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AssetParams
    name: AssetParams
    nameWithType: AssetParams
    fullName: AlgoSdk.AssetParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AssetParams
    name: AssetParams
    nameWithType: AssetParams
    fullName: AlgoSdk.AssetParams
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AlgoSdk.Address
  commentId: T:AlgoSdk.Address
  parent: AlgoSdk
  name: Address
  nameWithType: Address
  fullName: AlgoSdk.Address
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AlgoSdk.Crypto.Sha512_256_Hash
  commentId: T:AlgoSdk.Crypto.Sha512_256_Hash
  parent: AlgoSdk.Crypto
  name: Sha512_256_Hash
  nameWithType: Sha512_256_Hash
  fullName: AlgoSdk.Crypto.Sha512_256_Hash
- uid: AlgoSdk.Crypto
  commentId: N:AlgoSdk.Crypto
  name: AlgoSdk.Crypto
  nameWithType: AlgoSdk.Crypto
  fullName: AlgoSdk.Crypto
- uid: Unity.Collections.FixedString64Bytes
  commentId: T:Unity.Collections.FixedString64Bytes
  parent: Unity.Collections
  name: FixedString64Bytes
  nameWithType: FixedString64Bytes
  fullName: Unity.Collections.FixedString64Bytes
- uid: Unity.Collections
  commentId: N:Unity.Collections
  name: Unity.Collections
  nameWithType: Unity.Collections
  fullName: Unity.Collections
- uid: AlgoSdk.AssetParams.NameBase64*
  commentId: Overload:AlgoSdk.AssetParams.NameBase64
  name: NameBase64
  nameWithType: AssetParams.NameBase64
  fullName: AlgoSdk.AssetParams.NameBase64
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Unity.Collections.FixedString32Bytes
  commentId: T:Unity.Collections.FixedString32Bytes
  parent: Unity.Collections
  name: FixedString32Bytes
  nameWithType: FixedString32Bytes
  fullName: Unity.Collections.FixedString32Bytes
- uid: AlgoSdk.AssetParams.UnitNameBase64*
  commentId: Overload:AlgoSdk.AssetParams.UnitNameBase64
  name: UnitNameBase64
  nameWithType: AssetParams.UnitNameBase64
  fullName: AlgoSdk.AssetParams.UnitNameBase64
- uid: AlgoSdk.AssetParams.UrlBase64*
  commentId: Overload:AlgoSdk.AssetParams.UrlBase64
  name: UrlBase64
  nameWithType: AssetParams.UrlBase64
  fullName: AlgoSdk.AssetParams.UrlBase64
- uid: AlgoSdk.AssetParams.Equals*
  commentId: Overload:AlgoSdk.AssetParams.Equals
  name: Equals
  nameWithType: AssetParams.Equals
  fullName: AlgoSdk.AssetParams.Equals
- uid: System.IEquatable{AlgoSdk.AssetParams}.Equals(AlgoSdk.AssetParams)
  commentId: M:System.IEquatable{AlgoSdk.AssetParams}.Equals(AlgoSdk.AssetParams)
  parent: System.IEquatable{AlgoSdk.AssetParams}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(AssetParams)
  nameWithType: IEquatable<AssetParams>.Equals(AssetParams)
  fullName: System.IEquatable<AlgoSdk.AssetParams>.Equals(AlgoSdk.AssetParams)
  nameWithType.vb: IEquatable(Of AssetParams).Equals(AssetParams)
  fullName.vb: System.IEquatable(Of AlgoSdk.AssetParams).Equals(AlgoSdk.AssetParams)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<AssetParams>.Equals
    fullName: System.IEquatable<AlgoSdk.AssetParams>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.AssetParams
    name: AssetParams
    nameWithType: AssetParams
    fullName: AlgoSdk.AssetParams
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of AssetParams).Equals
    fullName: System.IEquatable(Of AlgoSdk.AssetParams).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.AssetParams
    name: AssetParams
    nameWithType: AssetParams
    fullName: AlgoSdk.AssetParams
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.AssetParams
  commentId: T:AlgoSdk.AssetParams
  parent: AlgoSdk
  name: AssetParams
  nameWithType: AssetParams
  fullName: AlgoSdk.AssetParams
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
