### YamlMime:ManagedReference
items:
- uid: AlgoSdk.IKmdClient
  commentId: T:AlgoSdk.IKmdClient
  id: IKmdClient
  parent: AlgoSdk
  children:
  - AlgoSdk.IKmdClient.CreateWallet(AlgoSdk.PrivateKey,Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  - AlgoSdk.IKmdClient.DeleteKey(AlgoSdk.Address,Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  - AlgoSdk.IKmdClient.DeleteMultisig(AlgoSdk.Address,Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  - AlgoSdk.IKmdClient.ExportKey(AlgoSdk.Address,Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  - AlgoSdk.IKmdClient.ExportMasterKey(Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  - AlgoSdk.IKmdClient.ExportMultisig(AlgoSdk.Address,Unity.Collections.FixedString128Bytes)
  - AlgoSdk.IKmdClient.GenerateKey(Unity.Collections.FixedString128Bytes,AlgoSdk.Optional{System.Boolean})
  - AlgoSdk.IKmdClient.GetSwaggerSpec
  - AlgoSdk.IKmdClient.ImportKey(AlgoSdk.PrivateKey,Unity.Collections.FixedString128Bytes)
  - AlgoSdk.IKmdClient.ImportMultisig(AlgoSdk.Crypto.Ed25519.PublicKey[],System.Byte,Unity.Collections.FixedString128Bytes,System.Byte)
  - AlgoSdk.IKmdClient.InitWalletHandleToken(Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  - AlgoSdk.IKmdClient.ListKeys(Unity.Collections.FixedString128Bytes)
  - AlgoSdk.IKmdClient.ListMultisig(Unity.Collections.FixedString128Bytes)
  - AlgoSdk.IKmdClient.ListWallets
  - AlgoSdk.IKmdClient.ReleaseWalletHandleToken(Unity.Collections.FixedString128Bytes)
  - AlgoSdk.IKmdClient.RenameWallet(Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  - AlgoSdk.IKmdClient.RenewWalletHandleToken(Unity.Collections.FixedString128Bytes)
  - AlgoSdk.IKmdClient.SignMultisig(AlgoSdk.Multisig,AlgoSdk.Crypto.Ed25519.PublicKey,System.Byte[],Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  - AlgoSdk.IKmdClient.SignProgram(AlgoSdk.Address,System.Byte[],Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  - AlgoSdk.IKmdClient.SignProgramMultisig(AlgoSdk.Address,System.Byte[],AlgoSdk.Multisig,AlgoSdk.Crypto.Ed25519.PublicKey,Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  - AlgoSdk.IKmdClient.SignTransaction(AlgoSdk.Address,System.Byte[],Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  - AlgoSdk.IKmdClient.Versions
  - AlgoSdk.IKmdClient.WalletInfo(Unity.Collections.FixedString128Bytes)
  langs:
  - csharp
  - vb
  name: IKmdClient
  nameWithType: IKmdClient
  fullName: AlgoSdk.IKmdClient
  type: Interface
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: IKmdClient
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
    startLine: 6
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: 'public interface IKmdClient : IAlgoApiClient'
    content.vb: >-
      Public Interface IKmdClient
          Inherits IAlgoApiClient
  inheritedMembers:
  - AlgoSdk.IAlgoApiClient.Address
  - AlgoSdk.IAlgoApiClient.Token
  - AlgoSdk.IAlgoApiClient.TokenHeader
  extensionMethods:
  - AlgoSdk.IKmdClient.AlgoSdk.TokenizedClientExtensions.GetUrl``1(System.String)
  - AlgoSdk.IKmdClient.AlgoSdk.TokenizedClientExtensions.Get``1(System.String)
  - AlgoSdk.IKmdClient.AlgoSdk.TokenizedClientExtensions.Post``1(System.String)
  - AlgoSdk.IKmdClient.AlgoSdk.TokenizedClientExtensions.Delete``1(System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: AlgoSdk.IKmdClient.GetSwaggerSpec
  commentId: M:AlgoSdk.IKmdClient.GetSwaggerSpec
  id: GetSwaggerSpec
  parent: AlgoSdk.IKmdClient
  langs:
  - csharp
  - vb
  name: GetSwaggerSpec()
  nameWithType: IKmdClient.GetSwaggerSpec()
  fullName: AlgoSdk.IKmdClient.GetSwaggerSpec()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetSwaggerSpec
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
    startLine: 12
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nGets the current swagger spec.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<AlgoApiObject>> GetSwaggerSpec()
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.AlgoApiObject}}
      description: The entire swagger spec in json.
    content.vb: Function GetSwaggerSpec As UniTask(Of AlgoApiResponse(Of AlgoApiObject))
  overload: AlgoSdk.IKmdClient.GetSwaggerSpec*
- uid: AlgoSdk.IKmdClient.GenerateKey(Unity.Collections.FixedString128Bytes,AlgoSdk.Optional{System.Boolean})
  commentId: M:AlgoSdk.IKmdClient.GenerateKey(Unity.Collections.FixedString128Bytes,AlgoSdk.Optional{System.Boolean})
  id: GenerateKey(Unity.Collections.FixedString128Bytes,AlgoSdk.Optional{System.Boolean})
  parent: AlgoSdk.IKmdClient
  langs:
  - csharp
  - vb
  name: GenerateKey(FixedString128Bytes, Optional<Boolean>)
  nameWithType: IKmdClient.GenerateKey(FixedString128Bytes, Optional<Boolean>)
  fullName: AlgoSdk.IKmdClient.GenerateKey(Unity.Collections.FixedString128Bytes, AlgoSdk.Optional<System.Boolean>)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GenerateKey
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
    startLine: 20
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nGenerates the next key in the deterministic key sequence (as determined by the master derivation key) and adds it to the wallet, returning the public key.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<GenerateKeyResponse>> GenerateKey(FixedString128Bytes walletHandleToken, Optional<bool> displayMnemonic = default(Optional<bool>))
    parameters:
    - id: walletHandleToken
      type: Unity.Collections.FixedString128Bytes
      description: ''
    - id: displayMnemonic
      type: AlgoSdk.Optional{System.Boolean}
      description: whether or not to display the mnemonic
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.GenerateKeyResponse}}
      description: ''
    content.vb: Function GenerateKey(walletHandleToken As FixedString128Bytes, displayMnemonic As  Optional  (Of Boolean)  = Nothing) As UniTask(Of AlgoApiResponse(Of GenerateKeyResponse))
  overload: AlgoSdk.IKmdClient.GenerateKey*
  nameWithType.vb: IKmdClient.GenerateKey(FixedString128Bytes, Optional(Of Boolean))
  fullName.vb: AlgoSdk.IKmdClient.GenerateKey(Unity.Collections.FixedString128Bytes, AlgoSdk.Optional(Of System.Boolean))
  name.vb: GenerateKey(FixedString128Bytes, Optional(Of Boolean))
- uid: AlgoSdk.IKmdClient.DeleteKey(AlgoSdk.Address,Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  commentId: M:AlgoSdk.IKmdClient.DeleteKey(AlgoSdk.Address,Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  id: DeleteKey(AlgoSdk.Address,Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  parent: AlgoSdk.IKmdClient
  langs:
  - csharp
  - vb
  name: DeleteKey(Address, FixedString128Bytes, FixedString128Bytes)
  nameWithType: IKmdClient.DeleteKey(Address, FixedString128Bytes, FixedString128Bytes)
  fullName: AlgoSdk.IKmdClient.DeleteKey(AlgoSdk.Address, Unity.Collections.FixedString128Bytes, Unity.Collections.FixedString128Bytes)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: DeleteKey
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
    startLine: 32
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nDeletes the key with the passed public key from the wallet.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse> DeleteKey(Address address, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword)
    parameters:
    - id: address
      type: AlgoSdk.Address
      description: public key of the key to delete
    - id: walletHandleToken
      type: Unity.Collections.FixedString128Bytes
      description: ''
    - id: walletPassword
      type: Unity.Collections.FixedString128Bytes
      description: ''
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse}
      description: ''
    content.vb: Function DeleteKey(address As Address, walletHandleToken As FixedString128Bytes, walletPassword As FixedString128Bytes) As UniTask(Of AlgoApiResponse)
  overload: AlgoSdk.IKmdClient.DeleteKey*
- uid: AlgoSdk.IKmdClient.ExportKey(AlgoSdk.Address,Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  commentId: M:AlgoSdk.IKmdClient.ExportKey(AlgoSdk.Address,Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  id: ExportKey(AlgoSdk.Address,Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  parent: AlgoSdk.IKmdClient
  langs:
  - csharp
  - vb
  name: ExportKey(Address, FixedString128Bytes, FixedString128Bytes)
  nameWithType: IKmdClient.ExportKey(Address, FixedString128Bytes, FixedString128Bytes)
  fullName: AlgoSdk.IKmdClient.ExportKey(AlgoSdk.Address, Unity.Collections.FixedString128Bytes, Unity.Collections.FixedString128Bytes)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ExportKey
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
    startLine: 46
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nExport the secret key associated with the passed public key.\n"
  remarks: ''
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<ExportKeyResponse>> ExportKey(Address address, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword)
    parameters:
    - id: address
      type: AlgoSdk.Address
      description: public key of the key to export
    - id: walletHandleToken
      type: Unity.Collections.FixedString128Bytes
      description: ''
    - id: walletPassword
      type: Unity.Collections.FixedString128Bytes
      description: ''
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ExportKeyResponse}}
      description: ''
    content.vb: Function ExportKey(address As Address, walletHandleToken As FixedString128Bytes, walletPassword As FixedString128Bytes) As UniTask(Of AlgoApiResponse(Of ExportKeyResponse))
  overload: AlgoSdk.IKmdClient.ExportKey*
- uid: AlgoSdk.IKmdClient.ImportKey(AlgoSdk.PrivateKey,Unity.Collections.FixedString128Bytes)
  commentId: M:AlgoSdk.IKmdClient.ImportKey(AlgoSdk.PrivateKey,Unity.Collections.FixedString128Bytes)
  id: ImportKey(AlgoSdk.PrivateKey,Unity.Collections.FixedString128Bytes)
  parent: AlgoSdk.IKmdClient
  langs:
  - csharp
  - vb
  name: ImportKey(PrivateKey, FixedString128Bytes)
  nameWithType: IKmdClient.ImportKey(PrivateKey, FixedString128Bytes)
  fullName: AlgoSdk.IKmdClient.ImportKey(AlgoSdk.PrivateKey, Unity.Collections.FixedString128Bytes)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ImportKey
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
    startLine: 58
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nImport an externally generated key into the wallet. Note that if you wish to back up the imported key, you must do so by backing up the entire wallet database, because imported keys were not derived from the wallet&apos;s master derivation key.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<ImportKeyResponse>> ImportKey(PrivateKey privateKey, FixedString128Bytes walletPassword)
    parameters:
    - id: privateKey
      type: AlgoSdk.PrivateKey
      description: key to import
    - id: walletPassword
      type: Unity.Collections.FixedString128Bytes
      description: ''
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ImportKeyResponse}}
      description: ''
    content.vb: Function ImportKey(privateKey As PrivateKey, walletPassword As FixedString128Bytes) As UniTask(Of AlgoApiResponse(Of ImportKeyResponse))
  overload: AlgoSdk.IKmdClient.ImportKey*
- uid: AlgoSdk.IKmdClient.ListKeys(Unity.Collections.FixedString128Bytes)
  commentId: M:AlgoSdk.IKmdClient.ListKeys(Unity.Collections.FixedString128Bytes)
  id: ListKeys(Unity.Collections.FixedString128Bytes)
  parent: AlgoSdk.IKmdClient
  langs:
  - csharp
  - vb
  name: ListKeys(FixedString128Bytes)
  nameWithType: IKmdClient.ListKeys(FixedString128Bytes)
  fullName: AlgoSdk.IKmdClient.ListKeys(Unity.Collections.FixedString128Bytes)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ListKeys
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
    startLine: 68
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nLists all of the public keys in this wallet. All of them have a stored private key.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<ListKeysResponse>> ListKeys(FixedString128Bytes walletHandleToken)
    parameters:
    - id: walletHandleToken
      type: Unity.Collections.FixedString128Bytes
      description: ''
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ListKeysResponse}}
      description: ''
    content.vb: Function ListKeys(walletHandleToken As FixedString128Bytes) As UniTask(Of AlgoApiResponse(Of ListKeysResponse))
  overload: AlgoSdk.IKmdClient.ListKeys*
- uid: AlgoSdk.IKmdClient.ExportMasterKey(Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  commentId: M:AlgoSdk.IKmdClient.ExportMasterKey(Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  id: ExportMasterKey(Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  parent: AlgoSdk.IKmdClient
  langs:
  - csharp
  - vb
  name: ExportMasterKey(FixedString128Bytes, FixedString128Bytes)
  nameWithType: IKmdClient.ExportMasterKey(FixedString128Bytes, FixedString128Bytes)
  fullName: AlgoSdk.IKmdClient.ExportMasterKey(Unity.Collections.FixedString128Bytes, Unity.Collections.FixedString128Bytes)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ExportMasterKey
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
    startLine: 78
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nExport the master derivation key from the wallet. This key is a master &quot;backup&quot; key for the underlying wallet. With it, you can regenerate all of the wallets that have been generated with this wallet&apos;s POST /v1/key endpoint. This key will not allow you to recover keys imported from other wallets, however.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<ExportMasterKeyResponse>> ExportMasterKey(FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword)
    parameters:
    - id: walletHandleToken
      type: Unity.Collections.FixedString128Bytes
      description: ''
    - id: walletPassword
      type: Unity.Collections.FixedString128Bytes
      description: ''
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ExportMasterKeyResponse}}
      description: ''
    content.vb: Function ExportMasterKey(walletHandleToken As FixedString128Bytes, walletPassword As FixedString128Bytes) As UniTask(Of AlgoApiResponse(Of ExportMasterKeyResponse))
  overload: AlgoSdk.IKmdClient.ExportMasterKey*
- uid: AlgoSdk.IKmdClient.DeleteMultisig(AlgoSdk.Address,Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  commentId: M:AlgoSdk.IKmdClient.DeleteMultisig(AlgoSdk.Address,Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  id: DeleteMultisig(AlgoSdk.Address,Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  parent: AlgoSdk.IKmdClient
  langs:
  - csharp
  - vb
  name: DeleteMultisig(Address, FixedString128Bytes, FixedString128Bytes)
  nameWithType: IKmdClient.DeleteMultisig(Address, FixedString128Bytes, FixedString128Bytes)
  fullName: AlgoSdk.IKmdClient.DeleteMultisig(AlgoSdk.Address, Unity.Collections.FixedString128Bytes, Unity.Collections.FixedString128Bytes)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: DeleteMultisig
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
    startLine: 90
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nDeletes multisig preimage information for the passed address from the wallet.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse> DeleteMultisig(Address address, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword)
    parameters:
    - id: address
      type: AlgoSdk.Address
      description: public key for the key to delete multisig preimage information
    - id: walletHandleToken
      type: Unity.Collections.FixedString128Bytes
      description: ''
    - id: walletPassword
      type: Unity.Collections.FixedString128Bytes
      description: ''
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse}
      description: ''
    content.vb: Function DeleteMultisig(address As Address, walletHandleToken As FixedString128Bytes, walletPassword As FixedString128Bytes) As UniTask(Of AlgoApiResponse)
  overload: AlgoSdk.IKmdClient.DeleteMultisig*
- uid: AlgoSdk.IKmdClient.ExportMultisig(AlgoSdk.Address,Unity.Collections.FixedString128Bytes)
  commentId: M:AlgoSdk.IKmdClient.ExportMultisig(AlgoSdk.Address,Unity.Collections.FixedString128Bytes)
  id: ExportMultisig(AlgoSdk.Address,Unity.Collections.FixedString128Bytes)
  parent: AlgoSdk.IKmdClient
  langs:
  - csharp
  - vb
  name: ExportMultisig(Address, FixedString128Bytes)
  nameWithType: IKmdClient.ExportMultisig(Address, FixedString128Bytes)
  fullName: AlgoSdk.IKmdClient.ExportMultisig(AlgoSdk.Address, Unity.Collections.FixedString128Bytes)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ExportMultisig
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
    startLine: 102
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nGiven a multisig address whose preimage this wallet stores, returns the information used to generate the address, including public keys, threshold, and multisig version.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<ExportMultisigResponse>> ExportMultisig(Address address, FixedString128Bytes walletHandleToken)
    parameters:
    - id: address
      type: AlgoSdk.Address
      description: public key for the key to export multisig preimage information
    - id: walletHandleToken
      type: Unity.Collections.FixedString128Bytes
      description: ''
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ExportMultisigResponse}}
      description: ''
    content.vb: Function ExportMultisig(address As Address, walletHandleToken As FixedString128Bytes) As UniTask(Of AlgoApiResponse(Of ExportMultisigResponse))
  overload: AlgoSdk.IKmdClient.ExportMultisig*
- uid: AlgoSdk.IKmdClient.ImportMultisig(AlgoSdk.Crypto.Ed25519.PublicKey[],System.Byte,Unity.Collections.FixedString128Bytes,System.Byte)
  commentId: M:AlgoSdk.IKmdClient.ImportMultisig(AlgoSdk.Crypto.Ed25519.PublicKey[],System.Byte,Unity.Collections.FixedString128Bytes,System.Byte)
  id: ImportMultisig(AlgoSdk.Crypto.Ed25519.PublicKey[],System.Byte,Unity.Collections.FixedString128Bytes,System.Byte)
  parent: AlgoSdk.IKmdClient
  langs:
  - csharp
  - vb
  name: ImportMultisig(Ed25519.PublicKey[], Byte, FixedString128Bytes, Byte)
  nameWithType: IKmdClient.ImportMultisig(Ed25519.PublicKey[], Byte, FixedString128Bytes, Byte)
  fullName: AlgoSdk.IKmdClient.ImportMultisig(AlgoSdk.Crypto.Ed25519.PublicKey[], System.Byte, Unity.Collections.FixedString128Bytes, System.Byte)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ImportMultisig
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
    startLine: 115
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nGenerates a multisig account from the passed public keys array and multisig metadata, and stores all of this in the wallet.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<ImportMultisigResponse>> ImportMultisig(Ed25519.PublicKey[] publicKeys, byte threshold, FixedString128Bytes walletHandleToken, byte version = 1)
    parameters:
    - id: publicKeys
      type: AlgoSdk.Crypto.Ed25519.PublicKey[]
      description: Public keys for the accounts used to sign
    - id: threshold
      type: System.Byte
      description: Number of valid signatures required
    - id: walletHandleToken
      type: Unity.Collections.FixedString128Bytes
      description: ''
    - id: version
      type: System.Byte
      description: Multisig version. This should always be set to 1.
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ImportMultisigResponse}}
      description: ''
    content.vb: Function ImportMultisig(publicKeys As Ed25519.PublicKey(), threshold As Byte, walletHandleToken As FixedString128Bytes, version As Byte = 1) As UniTask(Of AlgoApiResponse(Of ImportMultisigResponse))
  overload: AlgoSdk.IKmdClient.ImportMultisig*
  nameWithType.vb: IKmdClient.ImportMultisig(Ed25519.PublicKey(), Byte, FixedString128Bytes, Byte)
  fullName.vb: AlgoSdk.IKmdClient.ImportMultisig(AlgoSdk.Crypto.Ed25519.PublicKey(), System.Byte, Unity.Collections.FixedString128Bytes, System.Byte)
  name.vb: ImportMultisig(Ed25519.PublicKey(), Byte, FixedString128Bytes, Byte)
- uid: AlgoSdk.IKmdClient.ListMultisig(Unity.Collections.FixedString128Bytes)
  commentId: M:AlgoSdk.IKmdClient.ListMultisig(Unity.Collections.FixedString128Bytes)
  id: ListMultisig(Unity.Collections.FixedString128Bytes)
  parent: AlgoSdk.IKmdClient
  langs:
  - csharp
  - vb
  name: ListMultisig(FixedString128Bytes)
  nameWithType: IKmdClient.ListMultisig(FixedString128Bytes)
  fullName: AlgoSdk.IKmdClient.ListMultisig(Unity.Collections.FixedString128Bytes)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ListMultisig
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
    startLine: 127
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nLists all of the multisig accounts whose preimages this wallet stores\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<ListMultisigResponse>> ListMultisig(FixedString128Bytes walletHandleToken)
    parameters:
    - id: walletHandleToken
      type: Unity.Collections.FixedString128Bytes
      description: ''
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ListMultisigResponse}}
      description: ''
    content.vb: Function ListMultisig(walletHandleToken As FixedString128Bytes) As UniTask(Of AlgoApiResponse(Of ListMultisigResponse))
  overload: AlgoSdk.IKmdClient.ListMultisig*
- uid: AlgoSdk.IKmdClient.SignMultisig(AlgoSdk.Multisig,AlgoSdk.Crypto.Ed25519.PublicKey,System.Byte[],Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  commentId: M:AlgoSdk.IKmdClient.SignMultisig(AlgoSdk.Multisig,AlgoSdk.Crypto.Ed25519.PublicKey,System.Byte[],Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  id: SignMultisig(AlgoSdk.Multisig,AlgoSdk.Crypto.Ed25519.PublicKey,System.Byte[],Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  parent: AlgoSdk.IKmdClient
  langs:
  - csharp
  - vb
  name: SignMultisig(Multisig, Ed25519.PublicKey, Byte[], FixedString128Bytes, FixedString128Bytes)
  nameWithType: IKmdClient.SignMultisig(Multisig, Ed25519.PublicKey, Byte[], FixedString128Bytes, FixedString128Bytes)
  fullName: AlgoSdk.IKmdClient.SignMultisig(AlgoSdk.Multisig, AlgoSdk.Crypto.Ed25519.PublicKey, System.Byte[], Unity.Collections.FixedString128Bytes, Unity.Collections.FixedString128Bytes)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: SignMultisig
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
    startLine: 143
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nSign a multisig transaction\n"
  remarks: "\nStart a multisig signature, or add a signature to a partially completed multisig signature object.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<SignMultisigResponse>> SignMultisig(Multisig msig, Ed25519.PublicKey publicKey, byte[] transactionData, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword)
    parameters:
    - id: msig
      type: AlgoSdk.Multisig
      description: Current multisig signature object
    - id: publicKey
      type: AlgoSdk.Crypto.Ed25519.PublicKey
      description: public key of the key to use to add a signature to the multisig
    - id: transactionData
      type: System.Byte[]
      description: transaction serialized as msgpack
    - id: walletHandleToken
      type: Unity.Collections.FixedString128Bytes
      description: ''
    - id: walletPassword
      type: Unity.Collections.FixedString128Bytes
      description: ''
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.SignMultisigResponse}}
      description: ''
    content.vb: Function SignMultisig(msig As Multisig, publicKey As Ed25519.PublicKey, transactionData As Byte(), walletHandleToken As FixedString128Bytes, walletPassword As FixedString128Bytes) As UniTask(Of AlgoApiResponse(Of SignMultisigResponse))
  overload: AlgoSdk.IKmdClient.SignMultisig*
  nameWithType.vb: IKmdClient.SignMultisig(Multisig, Ed25519.PublicKey, Byte(), FixedString128Bytes, FixedString128Bytes)
  fullName.vb: AlgoSdk.IKmdClient.SignMultisig(AlgoSdk.Multisig, AlgoSdk.Crypto.Ed25519.PublicKey, System.Byte(), Unity.Collections.FixedString128Bytes, Unity.Collections.FixedString128Bytes)
  name.vb: SignMultisig(Multisig, Ed25519.PublicKey, Byte(), FixedString128Bytes, FixedString128Bytes)
- uid: AlgoSdk.IKmdClient.SignProgramMultisig(AlgoSdk.Address,System.Byte[],AlgoSdk.Multisig,AlgoSdk.Crypto.Ed25519.PublicKey,Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  commentId: M:AlgoSdk.IKmdClient.SignProgramMultisig(AlgoSdk.Address,System.Byte[],AlgoSdk.Multisig,AlgoSdk.Crypto.Ed25519.PublicKey,Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  id: SignProgramMultisig(AlgoSdk.Address,System.Byte[],AlgoSdk.Multisig,AlgoSdk.Crypto.Ed25519.PublicKey,Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  parent: AlgoSdk.IKmdClient
  langs:
  - csharp
  - vb
  name: SignProgramMultisig(Address, Byte[], Multisig, Ed25519.PublicKey, FixedString128Bytes, FixedString128Bytes)
  nameWithType: IKmdClient.SignProgramMultisig(Address, Byte[], Multisig, Ed25519.PublicKey, FixedString128Bytes, FixedString128Bytes)
  fullName: AlgoSdk.IKmdClient.SignProgramMultisig(AlgoSdk.Address, System.Byte[], AlgoSdk.Multisig, AlgoSdk.Crypto.Ed25519.PublicKey, Unity.Collections.FixedString128Bytes, Unity.Collections.FixedString128Bytes)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: SignProgramMultisig
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
    startLine: 164
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nSign a program for a multisig account\n"
  remarks: "\nStart a multisig signature, or add a signature to a partially completed multisig signature object.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<SignProgramMultisigResponse>> SignProgramMultisig(Address msigAccount, byte[] programData, Multisig msig, Ed25519.PublicKey publicKey, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword)
    parameters:
    - id: msigAccount
      type: AlgoSdk.Address
      description: The address of the multisig account. See <a href="https://developer.algorand.org/docs/get-details/accounts/create/#multisignature">https://developer.algorand.org/docs/get-details/accounts/create/#multisignature</a>
    - id: programData
      type: System.Byte[]
      description: compiled program bytes
    - id: msig
      type: AlgoSdk.Multisig
      description: current multisig signature object
    - id: publicKey
      type: AlgoSdk.Crypto.Ed25519.PublicKey
      description: public key of the key to use to add a signature to the multisig
    - id: walletHandleToken
      type: Unity.Collections.FixedString128Bytes
      description: ''
    - id: walletPassword
      type: Unity.Collections.FixedString128Bytes
      description: ''
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.SignProgramMultisigResponse}}
      description: ''
    content.vb: Function SignProgramMultisig(msigAccount As Address, programData As Byte(), msig As Multisig, publicKey As Ed25519.PublicKey, walletHandleToken As FixedString128Bytes, walletPassword As FixedString128Bytes) As UniTask(Of AlgoApiResponse(Of SignProgramMultisigResponse))
  overload: AlgoSdk.IKmdClient.SignProgramMultisig*
  nameWithType.vb: IKmdClient.SignProgramMultisig(Address, Byte(), Multisig, Ed25519.PublicKey, FixedString128Bytes, FixedString128Bytes)
  fullName.vb: AlgoSdk.IKmdClient.SignProgramMultisig(AlgoSdk.Address, System.Byte(), AlgoSdk.Multisig, AlgoSdk.Crypto.Ed25519.PublicKey, Unity.Collections.FixedString128Bytes, Unity.Collections.FixedString128Bytes)
  name.vb: SignProgramMultisig(Address, Byte(), Multisig, Ed25519.PublicKey, FixedString128Bytes, FixedString128Bytes)
- uid: AlgoSdk.IKmdClient.SignProgram(AlgoSdk.Address,System.Byte[],Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  commentId: M:AlgoSdk.IKmdClient.SignProgram(AlgoSdk.Address,System.Byte[],Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  id: SignProgram(AlgoSdk.Address,System.Byte[],Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  parent: AlgoSdk.IKmdClient
  langs:
  - csharp
  - vb
  name: SignProgram(Address, Byte[], FixedString128Bytes, FixedString128Bytes)
  nameWithType: IKmdClient.SignProgram(Address, Byte[], FixedString128Bytes, FixedString128Bytes)
  fullName: AlgoSdk.IKmdClient.SignProgram(AlgoSdk.Address, System.Byte[], Unity.Collections.FixedString128Bytes, Unity.Collections.FixedString128Bytes)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: SignProgram
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
    startLine: 184
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nSign program\n"
  remarks: "\nSigns the passed program with a key from the wallet, determined by the account named in the request.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<SignProgramResponse>> SignProgram(Address account, byte[] programData, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword)
    parameters:
    - id: account
      type: AlgoSdk.Address
      description: Account to sign the program with
    - id: programData
      type: System.Byte[]
      description: compiled program bytes
    - id: walletHandleToken
      type: Unity.Collections.FixedString128Bytes
      description: ''
    - id: walletPassword
      type: Unity.Collections.FixedString128Bytes
      description: ''
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.SignProgramResponse}}
      description: ''
    content.vb: Function SignProgram(account As Address, programData As Byte(), walletHandleToken As FixedString128Bytes, walletPassword As FixedString128Bytes) As UniTask(Of AlgoApiResponse(Of SignProgramResponse))
  overload: AlgoSdk.IKmdClient.SignProgram*
  nameWithType.vb: IKmdClient.SignProgram(Address, Byte(), FixedString128Bytes, FixedString128Bytes)
  fullName.vb: AlgoSdk.IKmdClient.SignProgram(AlgoSdk.Address, System.Byte(), Unity.Collections.FixedString128Bytes, Unity.Collections.FixedString128Bytes)
  name.vb: SignProgram(Address, Byte(), FixedString128Bytes, FixedString128Bytes)
- uid: AlgoSdk.IKmdClient.SignTransaction(AlgoSdk.Address,System.Byte[],Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  commentId: M:AlgoSdk.IKmdClient.SignTransaction(AlgoSdk.Address,System.Byte[],Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  id: SignTransaction(AlgoSdk.Address,System.Byte[],Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  parent: AlgoSdk.IKmdClient
  langs:
  - csharp
  - vb
  name: SignTransaction(Address, Byte[], FixedString128Bytes, FixedString128Bytes)
  nameWithType: IKmdClient.SignTransaction(Address, Byte[], FixedString128Bytes, FixedString128Bytes)
  fullName: AlgoSdk.IKmdClient.SignTransaction(AlgoSdk.Address, System.Byte[], Unity.Collections.FixedString128Bytes, Unity.Collections.FixedString128Bytes)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: SignTransaction
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
    startLine: 199
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nSign a transaction\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<SignTransactionResponse>> SignTransaction(Address account, byte[] transactionData, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword)
    parameters:
    - id: account
      type: AlgoSdk.Address
      description: public key of the key to sign the transaction
    - id: transactionData
      type: System.Byte[]
      description: transaction serialized as msgpack
    - id: walletHandleToken
      type: Unity.Collections.FixedString128Bytes
      description: ''
    - id: walletPassword
      type: Unity.Collections.FixedString128Bytes
      description: ''
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.SignTransactionResponse}}
      description: ''
    content.vb: Function SignTransaction(account As Address, transactionData As Byte(), walletHandleToken As FixedString128Bytes, walletPassword As FixedString128Bytes) As UniTask(Of AlgoApiResponse(Of SignTransactionResponse))
  overload: AlgoSdk.IKmdClient.SignTransaction*
  nameWithType.vb: IKmdClient.SignTransaction(Address, Byte(), FixedString128Bytes, FixedString128Bytes)
  fullName.vb: AlgoSdk.IKmdClient.SignTransaction(AlgoSdk.Address, System.Byte(), Unity.Collections.FixedString128Bytes, Unity.Collections.FixedString128Bytes)
  name.vb: SignTransaction(Address, Byte(), FixedString128Bytes, FixedString128Bytes)
- uid: AlgoSdk.IKmdClient.CreateWallet(AlgoSdk.PrivateKey,Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  commentId: M:AlgoSdk.IKmdClient.CreateWallet(AlgoSdk.PrivateKey,Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  id: CreateWallet(AlgoSdk.PrivateKey,Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  parent: AlgoSdk.IKmdClient
  langs:
  - csharp
  - vb
  name: CreateWallet(PrivateKey, FixedString128Bytes, FixedString128Bytes, FixedString128Bytes)
  nameWithType: IKmdClient.CreateWallet(PrivateKey, FixedString128Bytes, FixedString128Bytes, FixedString128Bytes)
  fullName: AlgoSdk.IKmdClient.CreateWallet(AlgoSdk.PrivateKey, Unity.Collections.FixedString128Bytes, Unity.Collections.FixedString128Bytes, Unity.Collections.FixedString128Bytes)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: CreateWallet
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
    startLine: 217
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nCreate a wallet\n"
  remarks: "\nCreate a new wallet (collection of keys) with the given parameters.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<CreateWalletResponse>> CreateWallet(PrivateKey masterDerivationKey, FixedString128Bytes walletDriverName, FixedString128Bytes walletName, FixedString128Bytes walletPassword)
    parameters:
    - id: masterDerivationKey
      type: AlgoSdk.PrivateKey
      description: ''
    - id: walletDriverName
      type: Unity.Collections.FixedString128Bytes
      description: ''
    - id: walletName
      type: Unity.Collections.FixedString128Bytes
      description: ''
    - id: walletPassword
      type: Unity.Collections.FixedString128Bytes
      description: ''
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.CreateWalletResponse}}
      description: ''
    content.vb: Function CreateWallet(masterDerivationKey As PrivateKey, walletDriverName As FixedString128Bytes, walletName As FixedString128Bytes, walletPassword As FixedString128Bytes) As UniTask(Of AlgoApiResponse(Of CreateWalletResponse))
  overload: AlgoSdk.IKmdClient.CreateWallet*
- uid: AlgoSdk.IKmdClient.WalletInfo(Unity.Collections.FixedString128Bytes)
  commentId: M:AlgoSdk.IKmdClient.WalletInfo(Unity.Collections.FixedString128Bytes)
  id: WalletInfo(Unity.Collections.FixedString128Bytes)
  parent: AlgoSdk.IKmdClient
  langs:
  - csharp
  - vb
  name: WalletInfo(FixedString128Bytes)
  nameWithType: IKmdClient.WalletInfo(FixedString128Bytes)
  fullName: AlgoSdk.IKmdClient.WalletInfo(Unity.Collections.FixedString128Bytes)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: WalletInfo
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
    startLine: 232
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nGet wallet info\n"
  remarks: "\nReturns information about the wallet associated with the passed wallet handle token. Additionally returns expiration information about the token itself.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<WalletInfoResponse>> WalletInfo(FixedString128Bytes walletHandleToken)
    parameters:
    - id: walletHandleToken
      type: Unity.Collections.FixedString128Bytes
      description: ''
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.WalletInfoResponse}}
      description: ''
    content.vb: Function WalletInfo(walletHandleToken As FixedString128Bytes) As UniTask(Of AlgoApiResponse(Of WalletInfoResponse))
  overload: AlgoSdk.IKmdClient.WalletInfo*
- uid: AlgoSdk.IKmdClient.InitWalletHandleToken(Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  commentId: M:AlgoSdk.IKmdClient.InitWalletHandleToken(Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  id: InitWalletHandleToken(Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  parent: AlgoSdk.IKmdClient
  langs:
  - csharp
  - vb
  name: InitWalletHandleToken(FixedString128Bytes, FixedString128Bytes)
  nameWithType: IKmdClient.InitWalletHandleToken(FixedString128Bytes, FixedString128Bytes)
  fullName: AlgoSdk.IKmdClient.InitWalletHandleToken(Unity.Collections.FixedString128Bytes, Unity.Collections.FixedString128Bytes)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: InitWalletHandleToken
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
    startLine: 247
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nInitialize a wallet handle token\n"
  remarks: "\nUnlock the wallet and return a wallet handle token that can be used for subsequent operations. These tokens expire periodically and must be renewed.\nYou can use <xref href=\"AlgoSdk.IKmdClient.WalletInfo(Unity.Collections.FixedString128Bytes)\" data-throw-if-not-resolved=\"false\"></xref> to see how much time remains until expiration, and renew it with <xref href=\"AlgoSdk.IKmdClient.RenewWalletHandleToken(Unity.Collections.FixedString128Bytes)\" data-throw-if-not-resolved=\"false\"></xref>.\nWhen you&apos;re done, you can invalidate the token with <xref href=\"AlgoSdk.IKmdClient.ReleaseWalletHandleToken(Unity.Collections.FixedString128Bytes)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<InitWalletHandleTokenResponse>> InitWalletHandleToken(FixedString128Bytes walletId, FixedString128Bytes walletPassword)
    parameters:
    - id: walletId
      type: Unity.Collections.FixedString128Bytes
      description: ''
    - id: walletPassword
      type: Unity.Collections.FixedString128Bytes
      description: ''
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.InitWalletHandleTokenResponse}}
      description: ''
    content.vb: Function InitWalletHandleToken(walletId As FixedString128Bytes, walletPassword As FixedString128Bytes) As UniTask(Of AlgoApiResponse(Of InitWalletHandleTokenResponse))
  overload: AlgoSdk.IKmdClient.InitWalletHandleToken*
- uid: AlgoSdk.IKmdClient.ReleaseWalletHandleToken(Unity.Collections.FixedString128Bytes)
  commentId: M:AlgoSdk.IKmdClient.ReleaseWalletHandleToken(Unity.Collections.FixedString128Bytes)
  id: ReleaseWalletHandleToken(Unity.Collections.FixedString128Bytes)
  parent: AlgoSdk.IKmdClient
  langs:
  - csharp
  - vb
  name: ReleaseWalletHandleToken(FixedString128Bytes)
  nameWithType: IKmdClient.ReleaseWalletHandleToken(FixedString128Bytes)
  fullName: AlgoSdk.IKmdClient.ReleaseWalletHandleToken(Unity.Collections.FixedString128Bytes)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ReleaseWalletHandleToken
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
    startLine: 260
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nRelease a wallet handle token\n"
  remarks: "\nInvalidate the passed wallet handle token, making it invalid for use in subsequent requests.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse> ReleaseWalletHandleToken(FixedString128Bytes walletHandleToken)
    parameters:
    - id: walletHandleToken
      type: Unity.Collections.FixedString128Bytes
      description: ''
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse}
      description: ''
    content.vb: Function ReleaseWalletHandleToken(walletHandleToken As FixedString128Bytes) As UniTask(Of AlgoApiResponse)
  overload: AlgoSdk.IKmdClient.ReleaseWalletHandleToken*
- uid: AlgoSdk.IKmdClient.RenameWallet(Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  commentId: M:AlgoSdk.IKmdClient.RenameWallet(Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  id: RenameWallet(Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes,Unity.Collections.FixedString128Bytes)
  parent: AlgoSdk.IKmdClient
  langs:
  - csharp
  - vb
  name: RenameWallet(FixedString128Bytes, FixedString128Bytes, FixedString128Bytes)
  nameWithType: IKmdClient.RenameWallet(FixedString128Bytes, FixedString128Bytes, FixedString128Bytes)
  fullName: AlgoSdk.IKmdClient.RenameWallet(Unity.Collections.FixedString128Bytes, Unity.Collections.FixedString128Bytes, Unity.Collections.FixedString128Bytes)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: RenameWallet
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
    startLine: 274
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nRename a wallet\n"
  remarks: "\nRename the underlying wallet to something else\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<RenameWalletResponse>> RenameWallet(FixedString128Bytes walletId, FixedString128Bytes walletName, FixedString128Bytes walletPassword)
    parameters:
    - id: walletId
      type: Unity.Collections.FixedString128Bytes
      description: ''
    - id: walletName
      type: Unity.Collections.FixedString128Bytes
      description: ''
    - id: walletPassword
      type: Unity.Collections.FixedString128Bytes
      description: ''
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.RenameWalletResponse}}
      description: ''
    content.vb: Function RenameWallet(walletId As FixedString128Bytes, walletName As FixedString128Bytes, walletPassword As FixedString128Bytes) As UniTask(Of AlgoApiResponse(Of RenameWalletResponse))
  overload: AlgoSdk.IKmdClient.RenameWallet*
- uid: AlgoSdk.IKmdClient.RenewWalletHandleToken(Unity.Collections.FixedString128Bytes)
  commentId: M:AlgoSdk.IKmdClient.RenewWalletHandleToken(Unity.Collections.FixedString128Bytes)
  id: RenewWalletHandleToken(Unity.Collections.FixedString128Bytes)
  parent: AlgoSdk.IKmdClient
  langs:
  - csharp
  - vb
  name: RenewWalletHandleToken(FixedString128Bytes)
  nameWithType: IKmdClient.RenewWalletHandleToken(FixedString128Bytes)
  fullName: AlgoSdk.IKmdClient.RenewWalletHandleToken(Unity.Collections.FixedString128Bytes)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: RenewWalletHandleToken
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
    startLine: 288
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nRenew a wallet handle token\n"
  remarks: "\nRenew a wallet handle token, increasing its expiration duration to its initial value\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<RenewWalletHandleTokenResponse>> RenewWalletHandleToken(FixedString128Bytes walletHandleToken)
    parameters:
    - id: walletHandleToken
      type: Unity.Collections.FixedString128Bytes
      description: ''
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.RenewWalletHandleTokenResponse}}
      description: ''
    content.vb: Function RenewWalletHandleToken(walletHandleToken As FixedString128Bytes) As UniTask(Of AlgoApiResponse(Of RenewWalletHandleTokenResponse))
  overload: AlgoSdk.IKmdClient.RenewWalletHandleToken*
- uid: AlgoSdk.IKmdClient.ListWallets
  commentId: M:AlgoSdk.IKmdClient.ListWallets
  id: ListWallets
  parent: AlgoSdk.IKmdClient
  langs:
  - csharp
  - vb
  name: ListWallets()
  nameWithType: IKmdClient.ListWallets()
  fullName: AlgoSdk.IKmdClient.ListWallets()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ListWallets
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
    startLine: 299
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nList Wallets\n"
  remarks: "\nLists all of the wallets that kmd is aware of.\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<ListWalletsResponse>> ListWallets()
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ListWalletsResponse}}
      description: ''
    content.vb: Function ListWallets As UniTask(Of AlgoApiResponse(Of ListWalletsResponse))
  overload: AlgoSdk.IKmdClient.ListWallets*
- uid: AlgoSdk.IKmdClient.Versions
  commentId: M:AlgoSdk.IKmdClient.Versions
  id: Versions
  parent: AlgoSdk.IKmdClient
  langs:
  - csharp
  - vb
  name: Versions()
  nameWithType: IKmdClient.Versions()
  fullName: AlgoSdk.IKmdClient.Versions()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Versions
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/IKmdClient.cs
    startLine: 305
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nRetrieves the current version of the kmd service\n"
  example: []
  syntax:
    content: UniTask<AlgoApiResponse<VersionsResponse>> Versions()
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.VersionsResponse}}
      description: ''
    content.vb: Function Versions As UniTask(Of AlgoApiResponse(Of VersionsResponse))
  overload: AlgoSdk.IKmdClient.Versions*
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: AlgoSdk.IAlgoApiClient.Address
  commentId: P:AlgoSdk.IAlgoApiClient.Address
  parent: AlgoSdk.IAlgoApiClient
  name: Address
  nameWithType: IAlgoApiClient.Address
  fullName: AlgoSdk.IAlgoApiClient.Address
- uid: AlgoSdk.IAlgoApiClient.Token
  commentId: P:AlgoSdk.IAlgoApiClient.Token
  parent: AlgoSdk.IAlgoApiClient
  name: Token
  nameWithType: IAlgoApiClient.Token
  fullName: AlgoSdk.IAlgoApiClient.Token
- uid: AlgoSdk.IAlgoApiClient.TokenHeader
  commentId: P:AlgoSdk.IAlgoApiClient.TokenHeader
  parent: AlgoSdk.IAlgoApiClient
  name: TokenHeader
  nameWithType: IAlgoApiClient.TokenHeader
  fullName: AlgoSdk.IAlgoApiClient.TokenHeader
- uid: AlgoSdk.IKmdClient.AlgoSdk.TokenizedClientExtensions.GetUrl``1(System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.GetUrl``1(``0,System.String)
  parent: AlgoSdk.TokenizedClientExtensions
  definition: AlgoSdk.TokenizedClientExtensions.GetUrl``1(``0,System.String)
  name: GetUrl<IKmdClient>(String)
  nameWithType: TokenizedClientExtensions.GetUrl<IKmdClient>(String)
  fullName: AlgoSdk.TokenizedClientExtensions.GetUrl<AlgoSdk.IKmdClient>(System.String)
  nameWithType.vb: TokenizedClientExtensions.GetUrl(Of IKmdClient)(String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.GetUrl(Of AlgoSdk.IKmdClient)(System.String)
  name.vb: GetUrl(Of IKmdClient)(String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.GetUrl``1(System.String)
    name: GetUrl<IKmdClient>
    nameWithType: TokenizedClientExtensions.GetUrl<IKmdClient>
    fullName: AlgoSdk.TokenizedClientExtensions.GetUrl<AlgoSdk.IKmdClient>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.GetUrl``1(System.String)
    name: GetUrl(Of IKmdClient)
    nameWithType: TokenizedClientExtensions.GetUrl(Of IKmdClient)
    fullName: AlgoSdk.TokenizedClientExtensions.GetUrl(Of AlgoSdk.IKmdClient)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IKmdClient.AlgoSdk.TokenizedClientExtensions.Get``1(System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.Get``1(``0,System.String)
  parent: AlgoSdk.TokenizedClientExtensions
  definition: AlgoSdk.TokenizedClientExtensions.Get``1(``0,System.String)
  name: Get<IKmdClient>(String)
  nameWithType: TokenizedClientExtensions.Get<IKmdClient>(String)
  fullName: AlgoSdk.TokenizedClientExtensions.Get<AlgoSdk.IKmdClient>(System.String)
  nameWithType.vb: TokenizedClientExtensions.Get(Of IKmdClient)(String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.Get(Of AlgoSdk.IKmdClient)(System.String)
  name.vb: Get(Of IKmdClient)(String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.Get``1(System.String)
    name: Get<IKmdClient>
    nameWithType: TokenizedClientExtensions.Get<IKmdClient>
    fullName: AlgoSdk.TokenizedClientExtensions.Get<AlgoSdk.IKmdClient>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.Get``1(System.String)
    name: Get(Of IKmdClient)
    nameWithType: TokenizedClientExtensions.Get(Of IKmdClient)
    fullName: AlgoSdk.TokenizedClientExtensions.Get(Of AlgoSdk.IKmdClient)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IKmdClient.AlgoSdk.TokenizedClientExtensions.Post``1(System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.Post``1(``0,System.String)
  parent: AlgoSdk.TokenizedClientExtensions
  definition: AlgoSdk.TokenizedClientExtensions.Post``1(``0,System.String)
  name: Post<IKmdClient>(String)
  nameWithType: TokenizedClientExtensions.Post<IKmdClient>(String)
  fullName: AlgoSdk.TokenizedClientExtensions.Post<AlgoSdk.IKmdClient>(System.String)
  nameWithType.vb: TokenizedClientExtensions.Post(Of IKmdClient)(String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.Post(Of AlgoSdk.IKmdClient)(System.String)
  name.vb: Post(Of IKmdClient)(String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.Post``1(System.String)
    name: Post<IKmdClient>
    nameWithType: TokenizedClientExtensions.Post<IKmdClient>
    fullName: AlgoSdk.TokenizedClientExtensions.Post<AlgoSdk.IKmdClient>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.Post``1(System.String)
    name: Post(Of IKmdClient)
    nameWithType: TokenizedClientExtensions.Post(Of IKmdClient)
    fullName: AlgoSdk.TokenizedClientExtensions.Post(Of AlgoSdk.IKmdClient)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IKmdClient.AlgoSdk.TokenizedClientExtensions.Delete``1(System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.Delete``1(``0,System.String)
  parent: AlgoSdk.TokenizedClientExtensions
  definition: AlgoSdk.TokenizedClientExtensions.Delete``1(``0,System.String)
  name: Delete<IKmdClient>(String)
  nameWithType: TokenizedClientExtensions.Delete<IKmdClient>(String)
  fullName: AlgoSdk.TokenizedClientExtensions.Delete<AlgoSdk.IKmdClient>(System.String)
  nameWithType.vb: TokenizedClientExtensions.Delete(Of IKmdClient)(String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.Delete(Of AlgoSdk.IKmdClient)(System.String)
  name.vb: Delete(Of IKmdClient)(String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.Delete``1(System.String)
    name: Delete<IKmdClient>
    nameWithType: TokenizedClientExtensions.Delete<IKmdClient>
    fullName: AlgoSdk.TokenizedClientExtensions.Delete<AlgoSdk.IKmdClient>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.Delete``1(System.String)
    name: Delete(Of IKmdClient)
    nameWithType: TokenizedClientExtensions.Delete(Of IKmdClient)
    fullName: AlgoSdk.TokenizedClientExtensions.Delete(Of AlgoSdk.IKmdClient)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IAlgoApiClient
  commentId: T:AlgoSdk.IAlgoApiClient
  parent: AlgoSdk
  name: IAlgoApiClient
  nameWithType: IAlgoApiClient
  fullName: AlgoSdk.IAlgoApiClient
- uid: AlgoSdk.TokenizedClientExtensions.GetUrl``1(``0,System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.GetUrl``1(``0,System.String)
  isExternal: true
  name: GetUrl<T>(T, String)
  nameWithType: TokenizedClientExtensions.GetUrl<T>(T, String)
  fullName: AlgoSdk.TokenizedClientExtensions.GetUrl<T>(T, System.String)
  nameWithType.vb: TokenizedClientExtensions.GetUrl(Of T)(T, String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.GetUrl(Of T)(T, System.String)
  name.vb: GetUrl(Of T)(T, String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.GetUrl``1(``0,System.String)
    name: GetUrl<T>
    nameWithType: TokenizedClientExtensions.GetUrl<T>
    fullName: AlgoSdk.TokenizedClientExtensions.GetUrl<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.GetUrl``1(``0,System.String)
    name: GetUrl(Of T)
    nameWithType: TokenizedClientExtensions.GetUrl(Of T)
    fullName: AlgoSdk.TokenizedClientExtensions.GetUrl(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.TokenizedClientExtensions
  commentId: T:AlgoSdk.TokenizedClientExtensions
  parent: AlgoSdk
  name: TokenizedClientExtensions
  nameWithType: TokenizedClientExtensions
  fullName: AlgoSdk.TokenizedClientExtensions
- uid: AlgoSdk.TokenizedClientExtensions.Get``1(``0,System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.Get``1(``0,System.String)
  isExternal: true
  name: Get<T>(T, String)
  nameWithType: TokenizedClientExtensions.Get<T>(T, String)
  fullName: AlgoSdk.TokenizedClientExtensions.Get<T>(T, System.String)
  nameWithType.vb: TokenizedClientExtensions.Get(Of T)(T, String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.Get(Of T)(T, System.String)
  name.vb: Get(Of T)(T, String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.Get``1(``0,System.String)
    name: Get<T>
    nameWithType: TokenizedClientExtensions.Get<T>
    fullName: AlgoSdk.TokenizedClientExtensions.Get<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.Get``1(``0,System.String)
    name: Get(Of T)
    nameWithType: TokenizedClientExtensions.Get(Of T)
    fullName: AlgoSdk.TokenizedClientExtensions.Get(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.TokenizedClientExtensions.Post``1(``0,System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.Post``1(``0,System.String)
  isExternal: true
  name: Post<T>(T, String)
  nameWithType: TokenizedClientExtensions.Post<T>(T, String)
  fullName: AlgoSdk.TokenizedClientExtensions.Post<T>(T, System.String)
  nameWithType.vb: TokenizedClientExtensions.Post(Of T)(T, String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.Post(Of T)(T, System.String)
  name.vb: Post(Of T)(T, String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.Post``1(``0,System.String)
    name: Post<T>
    nameWithType: TokenizedClientExtensions.Post<T>
    fullName: AlgoSdk.TokenizedClientExtensions.Post<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.Post``1(``0,System.String)
    name: Post(Of T)
    nameWithType: TokenizedClientExtensions.Post(Of T)
    fullName: AlgoSdk.TokenizedClientExtensions.Post(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.TokenizedClientExtensions.Delete``1(``0,System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.Delete``1(``0,System.String)
  isExternal: true
  name: Delete<T>(T, String)
  nameWithType: TokenizedClientExtensions.Delete<T>(T, String)
  fullName: AlgoSdk.TokenizedClientExtensions.Delete<T>(T, System.String)
  nameWithType.vb: TokenizedClientExtensions.Delete(Of T)(T, String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.Delete(Of T)(T, System.String)
  name.vb: Delete(Of T)(T, String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.Delete``1(``0,System.String)
    name: Delete<T>
    nameWithType: TokenizedClientExtensions.Delete<T>
    fullName: AlgoSdk.TokenizedClientExtensions.Delete<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.Delete``1(``0,System.String)
    name: Delete(Of T)
    nameWithType: TokenizedClientExtensions.Delete(Of T)
    fullName: AlgoSdk.TokenizedClientExtensions.Delete(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IKmdClient.GetSwaggerSpec*
  commentId: Overload:AlgoSdk.IKmdClient.GetSwaggerSpec
  name: GetSwaggerSpec
  nameWithType: IKmdClient.GetSwaggerSpec
  fullName: AlgoSdk.IKmdClient.GetSwaggerSpec
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.AlgoApiObject}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.AlgoApiObject}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<AlgoApiObject>>
  nameWithType: UniTask<AlgoApiResponse<AlgoApiObject>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.AlgoApiObject>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of AlgoApiObject))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.AlgoApiObject))
  name.vb: UniTask(Of AlgoApiResponse(Of AlgoApiObject))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiObject
    name: AlgoApiObject
    nameWithType: AlgoApiObject
    fullName: AlgoSdk.AlgoApiObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiObject
    name: AlgoApiObject
    nameWithType: AlgoApiObject
    fullName: AlgoSdk.AlgoApiObject
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cysharp.Threading.Tasks.UniTask`1
  commentId: T:Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<T>
  nameWithType: UniTask<T>
  fullName: Cysharp.Threading.Tasks.UniTask<T>
  nameWithType.vb: UniTask(Of T)
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of T)
  name.vb: UniTask(Of T)
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Cysharp.Threading.Tasks
  commentId: N:Cysharp.Threading.Tasks
  name: Cysharp.Threading.Tasks
  nameWithType: Cysharp.Threading.Tasks
  fullName: Cysharp.Threading.Tasks
- uid: AlgoSdk.IKmdClient.GenerateKey*
  commentId: Overload:AlgoSdk.IKmdClient.GenerateKey
  name: GenerateKey
  nameWithType: IKmdClient.GenerateKey
  fullName: AlgoSdk.IKmdClient.GenerateKey
- uid: Unity.Collections.FixedString128Bytes
  commentId: T:Unity.Collections.FixedString128Bytes
  parent: Unity.Collections
  name: FixedString128Bytes
  nameWithType: FixedString128Bytes
  fullName: Unity.Collections.FixedString128Bytes
- uid: AlgoSdk.Optional{System.Boolean}
  commentId: T:AlgoSdk.Optional{System.Boolean}
  parent: AlgoSdk
  definition: AlgoSdk.Optional`1
  name: Optional<Boolean>
  nameWithType: Optional<Boolean>
  fullName: AlgoSdk.Optional<System.Boolean>
  nameWithType.vb: Optional(Of Boolean)
  fullName.vb: AlgoSdk.Optional(Of System.Boolean)
  name.vb: Optional(Of Boolean)
  spec.csharp:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.GenerateKeyResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.GenerateKeyResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<GenerateKeyResponse>>
  nameWithType: UniTask<AlgoApiResponse<GenerateKeyResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.GenerateKeyResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of GenerateKeyResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.GenerateKeyResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of GenerateKeyResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.GenerateKeyResponse
    name: GenerateKeyResponse
    nameWithType: GenerateKeyResponse
    fullName: AlgoSdk.GenerateKeyResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.GenerateKeyResponse
    name: GenerateKeyResponse
    nameWithType: GenerateKeyResponse
    fullName: AlgoSdk.GenerateKeyResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Collections
  commentId: N:Unity.Collections
  name: Unity.Collections
  nameWithType: Unity.Collections
  fullName: Unity.Collections
- uid: AlgoSdk.Optional`1
  commentId: T:AlgoSdk.Optional`1
  parent: AlgoSdk
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: AlgoSdk.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: AlgoSdk.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IKmdClient.DeleteKey*
  commentId: Overload:AlgoSdk.IKmdClient.DeleteKey
  name: DeleteKey
  nameWithType: IKmdClient.DeleteKey
  fullName: AlgoSdk.IKmdClient.DeleteKey
- uid: AlgoSdk.Address
  commentId: T:AlgoSdk.Address
  parent: AlgoSdk
  name: Address
  nameWithType: Address
  fullName: AlgoSdk.Address
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse>
  nameWithType: UniTask<AlgoApiResponse>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse>
  nameWithType.vb: UniTask(Of AlgoApiResponse)
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse)
  name.vb: UniTask(Of AlgoApiResponse)
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IKmdClient.ExportKey*
  commentId: Overload:AlgoSdk.IKmdClient.ExportKey
  name: ExportKey
  nameWithType: IKmdClient.ExportKey
  fullName: AlgoSdk.IKmdClient.ExportKey
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ExportKeyResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ExportKeyResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<ExportKeyResponse>>
  nameWithType: UniTask<AlgoApiResponse<ExportKeyResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.ExportKeyResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of ExportKeyResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.ExportKeyResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of ExportKeyResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.ExportKeyResponse
    name: ExportKeyResponse
    nameWithType: ExportKeyResponse
    fullName: AlgoSdk.ExportKeyResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.ExportKeyResponse
    name: ExportKeyResponse
    nameWithType: ExportKeyResponse
    fullName: AlgoSdk.ExportKeyResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IKmdClient.ImportKey*
  commentId: Overload:AlgoSdk.IKmdClient.ImportKey
  name: ImportKey
  nameWithType: IKmdClient.ImportKey
  fullName: AlgoSdk.IKmdClient.ImportKey
- uid: AlgoSdk.PrivateKey
  commentId: T:AlgoSdk.PrivateKey
  parent: AlgoSdk
  name: PrivateKey
  nameWithType: PrivateKey
  fullName: AlgoSdk.PrivateKey
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ImportKeyResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ImportKeyResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<ImportKeyResponse>>
  nameWithType: UniTask<AlgoApiResponse<ImportKeyResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.ImportKeyResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of ImportKeyResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.ImportKeyResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of ImportKeyResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.ImportKeyResponse
    name: ImportKeyResponse
    nameWithType: ImportKeyResponse
    fullName: AlgoSdk.ImportKeyResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.ImportKeyResponse
    name: ImportKeyResponse
    nameWithType: ImportKeyResponse
    fullName: AlgoSdk.ImportKeyResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IKmdClient.ListKeys*
  commentId: Overload:AlgoSdk.IKmdClient.ListKeys
  name: ListKeys
  nameWithType: IKmdClient.ListKeys
  fullName: AlgoSdk.IKmdClient.ListKeys
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ListKeysResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ListKeysResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<ListKeysResponse>>
  nameWithType: UniTask<AlgoApiResponse<ListKeysResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.ListKeysResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of ListKeysResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.ListKeysResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of ListKeysResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.ListKeysResponse
    name: ListKeysResponse
    nameWithType: ListKeysResponse
    fullName: AlgoSdk.ListKeysResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.ListKeysResponse
    name: ListKeysResponse
    nameWithType: ListKeysResponse
    fullName: AlgoSdk.ListKeysResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IKmdClient.ExportMasterKey*
  commentId: Overload:AlgoSdk.IKmdClient.ExportMasterKey
  name: ExportMasterKey
  nameWithType: IKmdClient.ExportMasterKey
  fullName: AlgoSdk.IKmdClient.ExportMasterKey
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ExportMasterKeyResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ExportMasterKeyResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<ExportMasterKeyResponse>>
  nameWithType: UniTask<AlgoApiResponse<ExportMasterKeyResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.ExportMasterKeyResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of ExportMasterKeyResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.ExportMasterKeyResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of ExportMasterKeyResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.ExportMasterKeyResponse
    name: ExportMasterKeyResponse
    nameWithType: ExportMasterKeyResponse
    fullName: AlgoSdk.ExportMasterKeyResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.ExportMasterKeyResponse
    name: ExportMasterKeyResponse
    nameWithType: ExportMasterKeyResponse
    fullName: AlgoSdk.ExportMasterKeyResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IKmdClient.DeleteMultisig*
  commentId: Overload:AlgoSdk.IKmdClient.DeleteMultisig
  name: DeleteMultisig
  nameWithType: IKmdClient.DeleteMultisig
  fullName: AlgoSdk.IKmdClient.DeleteMultisig
- uid: AlgoSdk.IKmdClient.ExportMultisig*
  commentId: Overload:AlgoSdk.IKmdClient.ExportMultisig
  name: ExportMultisig
  nameWithType: IKmdClient.ExportMultisig
  fullName: AlgoSdk.IKmdClient.ExportMultisig
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ExportMultisigResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ExportMultisigResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<ExportMultisigResponse>>
  nameWithType: UniTask<AlgoApiResponse<ExportMultisigResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.ExportMultisigResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of ExportMultisigResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.ExportMultisigResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of ExportMultisigResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.ExportMultisigResponse
    name: ExportMultisigResponse
    nameWithType: ExportMultisigResponse
    fullName: AlgoSdk.ExportMultisigResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.ExportMultisigResponse
    name: ExportMultisigResponse
    nameWithType: ExportMultisigResponse
    fullName: AlgoSdk.ExportMultisigResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IKmdClient.ImportMultisig*
  commentId: Overload:AlgoSdk.IKmdClient.ImportMultisig
  name: ImportMultisig
  nameWithType: IKmdClient.ImportMultisig
  fullName: AlgoSdk.IKmdClient.ImportMultisig
- uid: AlgoSdk.Crypto.Ed25519.PublicKey[]
  isExternal: true
  name: Ed25519.PublicKey[]
  nameWithType: Ed25519.PublicKey[]
  fullName: AlgoSdk.Crypto.Ed25519.PublicKey[]
  nameWithType.vb: Ed25519.PublicKey()
  fullName.vb: AlgoSdk.Crypto.Ed25519.PublicKey()
  name.vb: Ed25519.PublicKey()
  spec.csharp:
  - uid: AlgoSdk.Crypto.Ed25519.PublicKey
    name: Ed25519.PublicKey
    nameWithType: Ed25519.PublicKey
    fullName: AlgoSdk.Crypto.Ed25519.PublicKey
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: AlgoSdk.Crypto.Ed25519.PublicKey
    name: Ed25519.PublicKey
    nameWithType: Ed25519.PublicKey
    fullName: AlgoSdk.Crypto.Ed25519.PublicKey
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ImportMultisigResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ImportMultisigResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<ImportMultisigResponse>>
  nameWithType: UniTask<AlgoApiResponse<ImportMultisigResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.ImportMultisigResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of ImportMultisigResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.ImportMultisigResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of ImportMultisigResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.ImportMultisigResponse
    name: ImportMultisigResponse
    nameWithType: ImportMultisigResponse
    fullName: AlgoSdk.ImportMultisigResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.ImportMultisigResponse
    name: ImportMultisigResponse
    nameWithType: ImportMultisigResponse
    fullName: AlgoSdk.ImportMultisigResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AlgoSdk.IKmdClient.ListMultisig*
  commentId: Overload:AlgoSdk.IKmdClient.ListMultisig
  name: ListMultisig
  nameWithType: IKmdClient.ListMultisig
  fullName: AlgoSdk.IKmdClient.ListMultisig
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ListMultisigResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ListMultisigResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<ListMultisigResponse>>
  nameWithType: UniTask<AlgoApiResponse<ListMultisigResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.ListMultisigResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of ListMultisigResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.ListMultisigResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of ListMultisigResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.ListMultisigResponse
    name: ListMultisigResponse
    nameWithType: ListMultisigResponse
    fullName: AlgoSdk.ListMultisigResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.ListMultisigResponse
    name: ListMultisigResponse
    nameWithType: ListMultisigResponse
    fullName: AlgoSdk.ListMultisigResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IKmdClient.SignMultisig*
  commentId: Overload:AlgoSdk.IKmdClient.SignMultisig
  name: SignMultisig
  nameWithType: IKmdClient.SignMultisig
  fullName: AlgoSdk.IKmdClient.SignMultisig
- uid: AlgoSdk.Multisig
  commentId: T:AlgoSdk.Multisig
  parent: AlgoSdk
  name: Multisig
  nameWithType: Multisig
  fullName: AlgoSdk.Multisig
- uid: AlgoSdk.Crypto.Ed25519.PublicKey
  commentId: T:AlgoSdk.Crypto.Ed25519.PublicKey
  parent: AlgoSdk.Crypto
  name: Ed25519.PublicKey
  nameWithType: Ed25519.PublicKey
  fullName: AlgoSdk.Crypto.Ed25519.PublicKey
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.SignMultisigResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.SignMultisigResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<SignMultisigResponse>>
  nameWithType: UniTask<AlgoApiResponse<SignMultisigResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.SignMultisigResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of SignMultisigResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.SignMultisigResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of SignMultisigResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.SignMultisigResponse
    name: SignMultisigResponse
    nameWithType: SignMultisigResponse
    fullName: AlgoSdk.SignMultisigResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.SignMultisigResponse
    name: SignMultisigResponse
    nameWithType: SignMultisigResponse
    fullName: AlgoSdk.SignMultisigResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.Crypto
  commentId: N:AlgoSdk.Crypto
  name: AlgoSdk.Crypto
  nameWithType: AlgoSdk.Crypto
  fullName: AlgoSdk.Crypto
- uid: AlgoSdk.IKmdClient.SignProgramMultisig*
  commentId: Overload:AlgoSdk.IKmdClient.SignProgramMultisig
  name: SignProgramMultisig
  nameWithType: IKmdClient.SignProgramMultisig
  fullName: AlgoSdk.IKmdClient.SignProgramMultisig
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.SignProgramMultisigResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.SignProgramMultisigResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<SignProgramMultisigResponse>>
  nameWithType: UniTask<AlgoApiResponse<SignProgramMultisigResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.SignProgramMultisigResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of SignProgramMultisigResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.SignProgramMultisigResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of SignProgramMultisigResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.SignProgramMultisigResponse
    name: SignProgramMultisigResponse
    nameWithType: SignProgramMultisigResponse
    fullName: AlgoSdk.SignProgramMultisigResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.SignProgramMultisigResponse
    name: SignProgramMultisigResponse
    nameWithType: SignProgramMultisigResponse
    fullName: AlgoSdk.SignProgramMultisigResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IKmdClient.SignProgram*
  commentId: Overload:AlgoSdk.IKmdClient.SignProgram
  name: SignProgram
  nameWithType: IKmdClient.SignProgram
  fullName: AlgoSdk.IKmdClient.SignProgram
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.SignProgramResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.SignProgramResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<SignProgramResponse>>
  nameWithType: UniTask<AlgoApiResponse<SignProgramResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.SignProgramResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of SignProgramResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.SignProgramResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of SignProgramResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.SignProgramResponse
    name: SignProgramResponse
    nameWithType: SignProgramResponse
    fullName: AlgoSdk.SignProgramResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.SignProgramResponse
    name: SignProgramResponse
    nameWithType: SignProgramResponse
    fullName: AlgoSdk.SignProgramResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IKmdClient.SignTransaction*
  commentId: Overload:AlgoSdk.IKmdClient.SignTransaction
  name: SignTransaction
  nameWithType: IKmdClient.SignTransaction
  fullName: AlgoSdk.IKmdClient.SignTransaction
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.SignTransactionResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.SignTransactionResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<SignTransactionResponse>>
  nameWithType: UniTask<AlgoApiResponse<SignTransactionResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.SignTransactionResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of SignTransactionResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.SignTransactionResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of SignTransactionResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.SignTransactionResponse
    name: SignTransactionResponse
    nameWithType: SignTransactionResponse
    fullName: AlgoSdk.SignTransactionResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.SignTransactionResponse
    name: SignTransactionResponse
    nameWithType: SignTransactionResponse
    fullName: AlgoSdk.SignTransactionResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IKmdClient.CreateWallet*
  commentId: Overload:AlgoSdk.IKmdClient.CreateWallet
  name: CreateWallet
  nameWithType: IKmdClient.CreateWallet
  fullName: AlgoSdk.IKmdClient.CreateWallet
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.CreateWalletResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.CreateWalletResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<CreateWalletResponse>>
  nameWithType: UniTask<AlgoApiResponse<CreateWalletResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.CreateWalletResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of CreateWalletResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.CreateWalletResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of CreateWalletResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.CreateWalletResponse
    name: CreateWalletResponse
    nameWithType: CreateWalletResponse
    fullName: AlgoSdk.CreateWalletResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.CreateWalletResponse
    name: CreateWalletResponse
    nameWithType: CreateWalletResponse
    fullName: AlgoSdk.CreateWalletResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IKmdClient.WalletInfo*
  commentId: Overload:AlgoSdk.IKmdClient.WalletInfo
  name: WalletInfo
  nameWithType: IKmdClient.WalletInfo
  fullName: AlgoSdk.IKmdClient.WalletInfo
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.WalletInfoResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.WalletInfoResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<WalletInfoResponse>>
  nameWithType: UniTask<AlgoApiResponse<WalletInfoResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.WalletInfoResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of WalletInfoResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.WalletInfoResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of WalletInfoResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.WalletInfoResponse
    name: WalletInfoResponse
    nameWithType: WalletInfoResponse
    fullName: AlgoSdk.WalletInfoResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.WalletInfoResponse
    name: WalletInfoResponse
    nameWithType: WalletInfoResponse
    fullName: AlgoSdk.WalletInfoResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IKmdClient.WalletInfo(Unity.Collections.FixedString128Bytes)
  commentId: M:AlgoSdk.IKmdClient.WalletInfo(Unity.Collections.FixedString128Bytes)
  parent: AlgoSdk.IKmdClient
  name: WalletInfo(FixedString128Bytes)
  nameWithType: IKmdClient.WalletInfo(FixedString128Bytes)
  fullName: AlgoSdk.IKmdClient.WalletInfo(Unity.Collections.FixedString128Bytes)
  spec.csharp:
  - uid: AlgoSdk.IKmdClient.WalletInfo(Unity.Collections.FixedString128Bytes)
    name: WalletInfo
    nameWithType: IKmdClient.WalletInfo
    fullName: AlgoSdk.IKmdClient.WalletInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Unity.Collections.FixedString128Bytes
    name: FixedString128Bytes
    nameWithType: FixedString128Bytes
    fullName: Unity.Collections.FixedString128Bytes
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.IKmdClient.WalletInfo(Unity.Collections.FixedString128Bytes)
    name: WalletInfo
    nameWithType: IKmdClient.WalletInfo
    fullName: AlgoSdk.IKmdClient.WalletInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Unity.Collections.FixedString128Bytes
    name: FixedString128Bytes
    nameWithType: FixedString128Bytes
    fullName: Unity.Collections.FixedString128Bytes
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IKmdClient.RenewWalletHandleToken(Unity.Collections.FixedString128Bytes)
  commentId: M:AlgoSdk.IKmdClient.RenewWalletHandleToken(Unity.Collections.FixedString128Bytes)
  parent: AlgoSdk.IKmdClient
  name: RenewWalletHandleToken(FixedString128Bytes)
  nameWithType: IKmdClient.RenewWalletHandleToken(FixedString128Bytes)
  fullName: AlgoSdk.IKmdClient.RenewWalletHandleToken(Unity.Collections.FixedString128Bytes)
  spec.csharp:
  - uid: AlgoSdk.IKmdClient.RenewWalletHandleToken(Unity.Collections.FixedString128Bytes)
    name: RenewWalletHandleToken
    nameWithType: IKmdClient.RenewWalletHandleToken
    fullName: AlgoSdk.IKmdClient.RenewWalletHandleToken
  - name: (
    nameWithType: (
    fullName: (
  - uid: Unity.Collections.FixedString128Bytes
    name: FixedString128Bytes
    nameWithType: FixedString128Bytes
    fullName: Unity.Collections.FixedString128Bytes
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.IKmdClient.RenewWalletHandleToken(Unity.Collections.FixedString128Bytes)
    name: RenewWalletHandleToken
    nameWithType: IKmdClient.RenewWalletHandleToken
    fullName: AlgoSdk.IKmdClient.RenewWalletHandleToken
  - name: (
    nameWithType: (
    fullName: (
  - uid: Unity.Collections.FixedString128Bytes
    name: FixedString128Bytes
    nameWithType: FixedString128Bytes
    fullName: Unity.Collections.FixedString128Bytes
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IKmdClient.ReleaseWalletHandleToken(Unity.Collections.FixedString128Bytes)
  commentId: M:AlgoSdk.IKmdClient.ReleaseWalletHandleToken(Unity.Collections.FixedString128Bytes)
  parent: AlgoSdk.IKmdClient
  name: ReleaseWalletHandleToken(FixedString128Bytes)
  nameWithType: IKmdClient.ReleaseWalletHandleToken(FixedString128Bytes)
  fullName: AlgoSdk.IKmdClient.ReleaseWalletHandleToken(Unity.Collections.FixedString128Bytes)
  spec.csharp:
  - uid: AlgoSdk.IKmdClient.ReleaseWalletHandleToken(Unity.Collections.FixedString128Bytes)
    name: ReleaseWalletHandleToken
    nameWithType: IKmdClient.ReleaseWalletHandleToken
    fullName: AlgoSdk.IKmdClient.ReleaseWalletHandleToken
  - name: (
    nameWithType: (
    fullName: (
  - uid: Unity.Collections.FixedString128Bytes
    name: FixedString128Bytes
    nameWithType: FixedString128Bytes
    fullName: Unity.Collections.FixedString128Bytes
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.IKmdClient.ReleaseWalletHandleToken(Unity.Collections.FixedString128Bytes)
    name: ReleaseWalletHandleToken
    nameWithType: IKmdClient.ReleaseWalletHandleToken
    fullName: AlgoSdk.IKmdClient.ReleaseWalletHandleToken
  - name: (
    nameWithType: (
    fullName: (
  - uid: Unity.Collections.FixedString128Bytes
    name: FixedString128Bytes
    nameWithType: FixedString128Bytes
    fullName: Unity.Collections.FixedString128Bytes
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IKmdClient.InitWalletHandleToken*
  commentId: Overload:AlgoSdk.IKmdClient.InitWalletHandleToken
  name: InitWalletHandleToken
  nameWithType: IKmdClient.InitWalletHandleToken
  fullName: AlgoSdk.IKmdClient.InitWalletHandleToken
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.InitWalletHandleTokenResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.InitWalletHandleTokenResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<InitWalletHandleTokenResponse>>
  nameWithType: UniTask<AlgoApiResponse<InitWalletHandleTokenResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.InitWalletHandleTokenResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of InitWalletHandleTokenResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.InitWalletHandleTokenResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of InitWalletHandleTokenResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.InitWalletHandleTokenResponse
    name: InitWalletHandleTokenResponse
    nameWithType: InitWalletHandleTokenResponse
    fullName: AlgoSdk.InitWalletHandleTokenResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.InitWalletHandleTokenResponse
    name: InitWalletHandleTokenResponse
    nameWithType: InitWalletHandleTokenResponse
    fullName: AlgoSdk.InitWalletHandleTokenResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IKmdClient
  commentId: T:AlgoSdk.IKmdClient
  parent: AlgoSdk
  name: IKmdClient
  nameWithType: IKmdClient
  fullName: AlgoSdk.IKmdClient
- uid: AlgoSdk.IKmdClient.ReleaseWalletHandleToken*
  commentId: Overload:AlgoSdk.IKmdClient.ReleaseWalletHandleToken
  name: ReleaseWalletHandleToken
  nameWithType: IKmdClient.ReleaseWalletHandleToken
  fullName: AlgoSdk.IKmdClient.ReleaseWalletHandleToken
- uid: AlgoSdk.IKmdClient.RenameWallet*
  commentId: Overload:AlgoSdk.IKmdClient.RenameWallet
  name: RenameWallet
  nameWithType: IKmdClient.RenameWallet
  fullName: AlgoSdk.IKmdClient.RenameWallet
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.RenameWalletResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.RenameWalletResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<RenameWalletResponse>>
  nameWithType: UniTask<AlgoApiResponse<RenameWalletResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.RenameWalletResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of RenameWalletResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.RenameWalletResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of RenameWalletResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.RenameWalletResponse
    name: RenameWalletResponse
    nameWithType: RenameWalletResponse
    fullName: AlgoSdk.RenameWalletResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.RenameWalletResponse
    name: RenameWalletResponse
    nameWithType: RenameWalletResponse
    fullName: AlgoSdk.RenameWalletResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IKmdClient.RenewWalletHandleToken*
  commentId: Overload:AlgoSdk.IKmdClient.RenewWalletHandleToken
  name: RenewWalletHandleToken
  nameWithType: IKmdClient.RenewWalletHandleToken
  fullName: AlgoSdk.IKmdClient.RenewWalletHandleToken
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.RenewWalletHandleTokenResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.RenewWalletHandleTokenResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<RenewWalletHandleTokenResponse>>
  nameWithType: UniTask<AlgoApiResponse<RenewWalletHandleTokenResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.RenewWalletHandleTokenResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of RenewWalletHandleTokenResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.RenewWalletHandleTokenResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of RenewWalletHandleTokenResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.RenewWalletHandleTokenResponse
    name: RenewWalletHandleTokenResponse
    nameWithType: RenewWalletHandleTokenResponse
    fullName: AlgoSdk.RenewWalletHandleTokenResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.RenewWalletHandleTokenResponse
    name: RenewWalletHandleTokenResponse
    nameWithType: RenewWalletHandleTokenResponse
    fullName: AlgoSdk.RenewWalletHandleTokenResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IKmdClient.ListWallets*
  commentId: Overload:AlgoSdk.IKmdClient.ListWallets
  name: ListWallets
  nameWithType: IKmdClient.ListWallets
  fullName: AlgoSdk.IKmdClient.ListWallets
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ListWalletsResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ListWalletsResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<ListWalletsResponse>>
  nameWithType: UniTask<AlgoApiResponse<ListWalletsResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.ListWalletsResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of ListWalletsResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.ListWalletsResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of ListWalletsResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.ListWalletsResponse
    name: ListWalletsResponse
    nameWithType: ListWalletsResponse
    fullName: AlgoSdk.ListWalletsResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.ListWalletsResponse
    name: ListWalletsResponse
    nameWithType: ListWalletsResponse
    fullName: AlgoSdk.ListWalletsResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IKmdClient.Versions*
  commentId: Overload:AlgoSdk.IKmdClient.Versions
  name: Versions
  nameWithType: IKmdClient.Versions
  fullName: AlgoSdk.IKmdClient.Versions
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.VersionsResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.VersionsResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<VersionsResponse>>
  nameWithType: UniTask<AlgoApiResponse<VersionsResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.VersionsResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of VersionsResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.VersionsResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of VersionsResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.VersionsResponse
    name: VersionsResponse
    nameWithType: VersionsResponse
    fullName: AlgoSdk.VersionsResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.VersionsResponse
    name: VersionsResponse
    nameWithType: VersionsResponse
    fullName: AlgoSdk.VersionsResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
