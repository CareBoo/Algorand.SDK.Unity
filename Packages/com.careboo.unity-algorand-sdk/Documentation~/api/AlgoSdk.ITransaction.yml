### YamlMime:ManagedReference
items:
- uid: AlgoSdk.ITransaction
  commentId: T:AlgoSdk.ITransaction
  id: ITransaction
  parent: AlgoSdk
  children:
  - AlgoSdk.ITransaction.CopyFrom(AlgoSdk.Transaction)
  - AlgoSdk.ITransaction.CopyTo(AlgoSdk.Transaction@)
  - AlgoSdk.ITransaction.Fee
  - AlgoSdk.ITransaction.FirstValidRound
  - AlgoSdk.ITransaction.GenesisHash
  - AlgoSdk.ITransaction.GenesisId
  - AlgoSdk.ITransaction.Group
  - AlgoSdk.ITransaction.LastValidRound
  - AlgoSdk.ITransaction.Lease
  - AlgoSdk.ITransaction.Note
  - AlgoSdk.ITransaction.RekeyTo
  - AlgoSdk.ITransaction.Sender
  - AlgoSdk.ITransaction.TransactionType
  langs:
  - csharp
  - vb
  name: ITransaction
  nameWithType: ITransaction
  fullName: AlgoSdk.ITransaction
  type: Interface
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ITransaction
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
    startLine: 8
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public interface ITransaction
    content.vb: Public Interface ITransaction
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: AlgoSdk.ITransaction.Fee
  commentId: P:AlgoSdk.ITransaction.Fee
  id: Fee
  parent: AlgoSdk.ITransaction
  langs:
  - csharp
  - vb
  name: Fee
  nameWithType: ITransaction.Fee
  fullName: AlgoSdk.ITransaction.Fee
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Fee
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
    startLine: 13
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nPaid by the sender to the FeeSink to prevent denial-of-service. The minimum fee on Algorand is currently 1000 microAlgos.\n"
  example: []
  syntax:
    content: ulong Fee { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: ReadOnly Property Fee As ULong
  overload: AlgoSdk.ITransaction.Fee*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: AlgoSdk.ITransaction.FirstValidRound
  commentId: P:AlgoSdk.ITransaction.FirstValidRound
  id: FirstValidRound
  parent: AlgoSdk.ITransaction
  langs:
  - csharp
  - vb
  name: FirstValidRound
  nameWithType: ITransaction.FirstValidRound
  fullName: AlgoSdk.ITransaction.FirstValidRound
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: FirstValidRound
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
    startLine: 18
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nThe first round for when the transaction is valid. If the transaction is sent prior to this round it will be rejected by the network.\n"
  example: []
  syntax:
    content: ulong FirstValidRound { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: ReadOnly Property FirstValidRound As ULong
  overload: AlgoSdk.ITransaction.FirstValidRound*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: AlgoSdk.ITransaction.GenesisHash
  commentId: P:AlgoSdk.ITransaction.GenesisHash
  id: GenesisHash
  parent: AlgoSdk.ITransaction
  langs:
  - csharp
  - vb
  name: GenesisHash
  nameWithType: ITransaction.GenesisHash
  fullName: AlgoSdk.ITransaction.GenesisHash
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GenesisHash
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
    startLine: 23
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nThe hash of the genesis block of the network for which the transaction is valid.\n"
  example: []
  syntax:
    content: GenesisHash GenesisHash { get; }
    parameters: []
    return:
      type: AlgoSdk.GenesisHash
    content.vb: ReadOnly Property GenesisHash As GenesisHash
  overload: AlgoSdk.ITransaction.GenesisHash*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: AlgoSdk.ITransaction.LastValidRound
  commentId: P:AlgoSdk.ITransaction.LastValidRound
  id: LastValidRound
  parent: AlgoSdk.ITransaction
  langs:
  - csharp
  - vb
  name: LastValidRound
  nameWithType: ITransaction.LastValidRound
  fullName: AlgoSdk.ITransaction.LastValidRound
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: LastValidRound
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
    startLine: 28
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nThe ending round for which the transaction is valid. After this round, the transaction will be rejected by the network.\n"
  example: []
  syntax:
    content: ulong LastValidRound { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: ReadOnly Property LastValidRound As ULong
  overload: AlgoSdk.ITransaction.LastValidRound*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: AlgoSdk.ITransaction.Sender
  commentId: P:AlgoSdk.ITransaction.Sender
  id: Sender
  parent: AlgoSdk.ITransaction
  langs:
  - csharp
  - vb
  name: Sender
  nameWithType: ITransaction.Sender
  fullName: AlgoSdk.ITransaction.Sender
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Sender
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
    startLine: 33
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nThe address of the account that pays the fee and amount.\n"
  example: []
  syntax:
    content: Address Sender { get; }
    parameters: []
    return:
      type: AlgoSdk.Address
    content.vb: ReadOnly Property Sender As Address
  overload: AlgoSdk.ITransaction.Sender*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: AlgoSdk.ITransaction.TransactionType
  commentId: P:AlgoSdk.ITransaction.TransactionType
  id: TransactionType
  parent: AlgoSdk.ITransaction
  langs:
  - csharp
  - vb
  name: TransactionType
  nameWithType: ITransaction.TransactionType
  fullName: AlgoSdk.ITransaction.TransactionType
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TransactionType
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
    startLine: 38
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nSpecifies the type of transaction. This value is automatically generated using any of the developer tools.\n"
  example: []
  syntax:
    content: TransactionType TransactionType { get; }
    parameters: []
    return:
      type: AlgoSdk.TransactionType
    content.vb: ReadOnly Property TransactionType As TransactionType
  overload: AlgoSdk.ITransaction.TransactionType*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: AlgoSdk.ITransaction.GenesisId
  commentId: P:AlgoSdk.ITransaction.GenesisId
  id: GenesisId
  parent: AlgoSdk.ITransaction
  langs:
  - csharp
  - vb
  name: GenesisId
  nameWithType: ITransaction.GenesisId
  fullName: AlgoSdk.ITransaction.GenesisId
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GenesisId
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
    startLine: 43
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nThe human-readable string that identifies the network for the transaction. The genesis ID is found in the genesis block.\n"
  example: []
  syntax:
    content: FixedString32Bytes GenesisId { get; }
    parameters: []
    return:
      type: Unity.Collections.FixedString32Bytes
    content.vb: ReadOnly Property GenesisId As FixedString32Bytes
  overload: AlgoSdk.ITransaction.GenesisId*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: AlgoSdk.ITransaction.Group
  commentId: P:AlgoSdk.ITransaction.Group
  id: Group
  parent: AlgoSdk.ITransaction
  langs:
  - csharp
  - vb
  name: Group
  nameWithType: ITransaction.Group
  fullName: AlgoSdk.ITransaction.Group
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Group
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
    startLine: 48
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nThe group specifies that the transaction is part of a group and, if so, specifies the hash of the transaction group. See <xref href=\"AlgoSdk.Transaction.GetGroupId(AlgoSdk.Transaction%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: Sha512_256_Hash Group { get; }
    parameters: []
    return:
      type: AlgoSdk.Crypto.Sha512_256_Hash
    content.vb: ReadOnly Property Group As Sha512_256_Hash
  overload: AlgoSdk.ITransaction.Group*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: AlgoSdk.ITransaction.Lease
  commentId: P:AlgoSdk.ITransaction.Lease
  id: Lease
  parent: AlgoSdk.ITransaction
  langs:
  - csharp
  - vb
  name: Lease
  nameWithType: ITransaction.Lease
  fullName: AlgoSdk.ITransaction.Lease
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Lease
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
    startLine: 53
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nA lease enforces mutual exclusion of transactions. If this field is nonzero, then once the transaction is confirmed, it acquires the lease identified by the (Sender, Lease) pair of the transaction until the LastValid round passes. While this transaction possesses the lease, no other transaction specifying this lease can be confirmed. A lease is often used in the context of Algorand Smart Contracts to prevent replay attacks.\n"
  example: []
  syntax:
    content: Sha512_256_Hash Lease { get; }
    parameters: []
    return:
      type: AlgoSdk.Crypto.Sha512_256_Hash
    content.vb: ReadOnly Property Lease As Sha512_256_Hash
  overload: AlgoSdk.ITransaction.Lease*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: AlgoSdk.ITransaction.Note
  commentId: P:AlgoSdk.ITransaction.Note
  id: Note
  parent: AlgoSdk.ITransaction
  langs:
  - csharp
  - vb
  name: Note
  nameWithType: ITransaction.Note
  fullName: AlgoSdk.ITransaction.Note
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Note
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
    startLine: 58
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nAny data up to 1000 bytes.\n"
  example: []
  syntax:
    content: byte[] Note { get; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: ReadOnly Property Note As Byte()
  overload: AlgoSdk.ITransaction.Note*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: AlgoSdk.ITransaction.RekeyTo
  commentId: P:AlgoSdk.ITransaction.RekeyTo
  id: RekeyTo
  parent: AlgoSdk.ITransaction
  langs:
  - csharp
  - vb
  name: RekeyTo
  nameWithType: ITransaction.RekeyTo
  fullName: AlgoSdk.ITransaction.RekeyTo
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: RekeyTo
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
    startLine: 63
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nSpecifies the authorized address. This address will be used to authorize all future transactions.\n"
  example: []
  syntax:
    content: Address RekeyTo { get; }
    parameters: []
    return:
      type: AlgoSdk.Address
    content.vb: ReadOnly Property RekeyTo As Address
  overload: AlgoSdk.ITransaction.RekeyTo*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: AlgoSdk.ITransaction.CopyTo(AlgoSdk.Transaction@)
  commentId: M:AlgoSdk.ITransaction.CopyTo(AlgoSdk.Transaction@)
  id: CopyTo(AlgoSdk.Transaction@)
  parent: AlgoSdk.ITransaction
  langs:
  - csharp
  - vb
  name: CopyTo(ref Transaction)
  nameWithType: ITransaction.CopyTo(ref Transaction)
  fullName: AlgoSdk.ITransaction.CopyTo(ref AlgoSdk.Transaction)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: CopyTo
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
    startLine: 69
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nCopy this transactions fields to a <xref href=\"AlgoSdk.Transaction\" data-throw-if-not-resolved=\"false\"></xref> which contains all possible transaction fields.\n"
  example: []
  syntax:
    content: void CopyTo(ref Transaction transaction)
    parameters:
    - id: transaction
      type: AlgoSdk.Transaction
      description: A raw transaction with all possible transaction fields.
    content.vb: Sub CopyTo(ByRef transaction As Transaction)
  overload: AlgoSdk.ITransaction.CopyTo*
  nameWithType.vb: ITransaction.CopyTo(ByRef Transaction)
  fullName.vb: AlgoSdk.ITransaction.CopyTo(ByRef AlgoSdk.Transaction)
  name.vb: CopyTo(ByRef Transaction)
- uid: AlgoSdk.ITransaction.CopyFrom(AlgoSdk.Transaction)
  commentId: M:AlgoSdk.ITransaction.CopyFrom(AlgoSdk.Transaction)
  id: CopyFrom(AlgoSdk.Transaction)
  parent: AlgoSdk.ITransaction
  langs:
  - csharp
  - vb
  name: CopyFrom(Transaction)
  nameWithType: ITransaction.CopyFrom(Transaction)
  fullName: AlgoSdk.ITransaction.CopyFrom(AlgoSdk.Transaction)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: CopyFrom
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
    startLine: 75
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nCopy relevant fields to this transaction.\n"
  example: []
  syntax:
    content: void CopyFrom(Transaction transaction)
    parameters:
    - id: transaction
      type: AlgoSdk.Transaction
      description: A raw transaction with all possible transaction fields.
    content.vb: Sub CopyFrom(transaction As Transaction)
  overload: AlgoSdk.ITransaction.CopyFrom*
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: AlgoSdk.ITransaction.Fee*
  commentId: Overload:AlgoSdk.ITransaction.Fee
  name: Fee
  nameWithType: ITransaction.Fee
  fullName: AlgoSdk.ITransaction.Fee
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AlgoSdk.ITransaction.FirstValidRound*
  commentId: Overload:AlgoSdk.ITransaction.FirstValidRound
  name: FirstValidRound
  nameWithType: ITransaction.FirstValidRound
  fullName: AlgoSdk.ITransaction.FirstValidRound
- uid: AlgoSdk.ITransaction.GenesisHash*
  commentId: Overload:AlgoSdk.ITransaction.GenesisHash
  name: GenesisHash
  nameWithType: ITransaction.GenesisHash
  fullName: AlgoSdk.ITransaction.GenesisHash
- uid: AlgoSdk.GenesisHash
  commentId: T:AlgoSdk.GenesisHash
  parent: AlgoSdk
  name: GenesisHash
  nameWithType: GenesisHash
  fullName: AlgoSdk.GenesisHash
- uid: AlgoSdk.ITransaction.LastValidRound*
  commentId: Overload:AlgoSdk.ITransaction.LastValidRound
  name: LastValidRound
  nameWithType: ITransaction.LastValidRound
  fullName: AlgoSdk.ITransaction.LastValidRound
- uid: AlgoSdk.ITransaction.Sender*
  commentId: Overload:AlgoSdk.ITransaction.Sender
  name: Sender
  nameWithType: ITransaction.Sender
  fullName: AlgoSdk.ITransaction.Sender
- uid: AlgoSdk.Address
  commentId: T:AlgoSdk.Address
  parent: AlgoSdk
  name: Address
  nameWithType: Address
  fullName: AlgoSdk.Address
- uid: AlgoSdk.ITransaction.TransactionType*
  commentId: Overload:AlgoSdk.ITransaction.TransactionType
  name: TransactionType
  nameWithType: ITransaction.TransactionType
  fullName: AlgoSdk.ITransaction.TransactionType
- uid: AlgoSdk.TransactionType
  commentId: T:AlgoSdk.TransactionType
  parent: AlgoSdk
  name: TransactionType
  nameWithType: TransactionType
  fullName: AlgoSdk.TransactionType
- uid: AlgoSdk.ITransaction.GenesisId*
  commentId: Overload:AlgoSdk.ITransaction.GenesisId
  name: GenesisId
  nameWithType: ITransaction.GenesisId
  fullName: AlgoSdk.ITransaction.GenesisId
- uid: Unity.Collections.FixedString32Bytes
  commentId: T:Unity.Collections.FixedString32Bytes
  parent: Unity.Collections
  name: FixedString32Bytes
  nameWithType: FixedString32Bytes
  fullName: Unity.Collections.FixedString32Bytes
- uid: Unity.Collections
  commentId: N:Unity.Collections
  name: Unity.Collections
  nameWithType: Unity.Collections
  fullName: Unity.Collections
- uid: AlgoSdk.Transaction.GetGroupId(AlgoSdk.Transaction[])
  commentId: M:AlgoSdk.Transaction.GetGroupId(AlgoSdk.Transaction[])
  isExternal: true
- uid: AlgoSdk.ITransaction.Group*
  commentId: Overload:AlgoSdk.ITransaction.Group
  name: Group
  nameWithType: ITransaction.Group
  fullName: AlgoSdk.ITransaction.Group
- uid: AlgoSdk.Crypto.Sha512_256_Hash
  commentId: T:AlgoSdk.Crypto.Sha512_256_Hash
  parent: AlgoSdk.Crypto
  name: Sha512_256_Hash
  nameWithType: Sha512_256_Hash
  fullName: AlgoSdk.Crypto.Sha512_256_Hash
- uid: AlgoSdk.Crypto
  commentId: N:AlgoSdk.Crypto
  name: AlgoSdk.Crypto
  nameWithType: AlgoSdk.Crypto
  fullName: AlgoSdk.Crypto
- uid: AlgoSdk.ITransaction.Lease*
  commentId: Overload:AlgoSdk.ITransaction.Lease
  name: Lease
  nameWithType: ITransaction.Lease
  fullName: AlgoSdk.ITransaction.Lease
- uid: AlgoSdk.ITransaction.Note*
  commentId: Overload:AlgoSdk.ITransaction.Note
  name: Note
  nameWithType: ITransaction.Note
  fullName: AlgoSdk.ITransaction.Note
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AlgoSdk.ITransaction.RekeyTo*
  commentId: Overload:AlgoSdk.ITransaction.RekeyTo
  name: RekeyTo
  nameWithType: ITransaction.RekeyTo
  fullName: AlgoSdk.ITransaction.RekeyTo
- uid: AlgoSdk.Transaction
  commentId: T:AlgoSdk.Transaction
  parent: AlgoSdk
  name: Transaction
  nameWithType: Transaction
  fullName: AlgoSdk.Transaction
- uid: AlgoSdk.ITransaction.CopyTo*
  commentId: Overload:AlgoSdk.ITransaction.CopyTo
  name: CopyTo
  nameWithType: ITransaction.CopyTo
  fullName: AlgoSdk.ITransaction.CopyTo
- uid: AlgoSdk.ITransaction.CopyFrom*
  commentId: Overload:AlgoSdk.ITransaction.CopyFrom
  name: CopyFrom
  nameWithType: ITransaction.CopyFrom
  fullName: AlgoSdk.ITransaction.CopyFrom
