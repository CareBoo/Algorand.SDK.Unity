### YamlMime:ManagedReference
items:
- uid: AlgoSdk.LowLevel.NativeArrayExtensions
  commentId: T:AlgoSdk.LowLevel.NativeArrayExtensions
  id: NativeArrayExtensions
  parent: AlgoSdk.LowLevel
  children:
  - AlgoSdk.LowLevel.NativeArrayExtensions.AsUtf8Text(Unity.Collections.NativeArray{System.Byte},Unity.Collections.Allocator)
  - AlgoSdk.LowLevel.NativeArrayExtensions.AsUtf8Text(Unity.Collections.NativeArray{System.Byte}.ReadOnly,Unity.Collections.Allocator)
  langs:
  - csharp
  - vb
  name: NativeArrayExtensions
  nameWithType: NativeArrayExtensions
  fullName: AlgoSdk.LowLevel.NativeArrayExtensions
  type: Class
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.LowLevel/NativeArrayExtensions.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: NativeArrayExtensions
    path: ../CareBoo.AlgoSdk.LowLevel/NativeArrayExtensions.cs
    startLine: 4
  assemblies:
  - CareBoo.AlgoSdk.LowLevel
  namespace: AlgoSdk.LowLevel
  syntax:
    content: public static class NativeArrayExtensions
    content.vb: Public Module NativeArrayExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: AlgoSdk.LowLevel.NativeArrayExtensions.AsUtf8Text(Unity.Collections.NativeArray{System.Byte}.ReadOnly,Unity.Collections.Allocator)
  commentId: M:AlgoSdk.LowLevel.NativeArrayExtensions.AsUtf8Text(Unity.Collections.NativeArray{System.Byte}.ReadOnly,Unity.Collections.Allocator)
  id: AsUtf8Text(Unity.Collections.NativeArray{System.Byte}.ReadOnly,Unity.Collections.Allocator)
  isExtensionMethod: true
  parent: AlgoSdk.LowLevel.NativeArrayExtensions
  langs:
  - csharp
  - vb
  name: AsUtf8Text(NativeArray<Byte>.ReadOnly, Allocator)
  nameWithType: NativeArrayExtensions.AsUtf8Text(NativeArray<Byte>.ReadOnly, Allocator)
  fullName: AlgoSdk.LowLevel.NativeArrayExtensions.AsUtf8Text(Unity.Collections.NativeArray<System.Byte>.ReadOnly, Unity.Collections.Allocator)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.LowLevel/NativeArrayExtensions.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AsUtf8Text
    path: ../CareBoo.AlgoSdk.LowLevel/NativeArrayExtensions.cs
    startLine: 6
  assemblies:
  - CareBoo.AlgoSdk.LowLevel
  namespace: AlgoSdk.LowLevel
  syntax:
    content: public static NativeText AsUtf8Text(this NativeArray<byte>.ReadOnly rawBytes, Allocator allocator)
    parameters:
    - id: rawBytes
      type: Unity.Collections.NativeArray{System.Byte}.ReadOnly
    - id: allocator
      type: Unity.Collections.Allocator
    return:
      type: Unity.Collections.NativeText
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsUtf8Text(rawBytes As NativeArray(Of Byte).ReadOnly, allocator As Allocator) As NativeText
  overload: AlgoSdk.LowLevel.NativeArrayExtensions.AsUtf8Text*
  nameWithType.vb: NativeArrayExtensions.AsUtf8Text(NativeArray(Of Byte).ReadOnly, Allocator)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.LowLevel.NativeArrayExtensions.AsUtf8Text(Unity.Collections.NativeArray(Of System.Byte).ReadOnly, Unity.Collections.Allocator)
  name.vb: AsUtf8Text(NativeArray(Of Byte).ReadOnly, Allocator)
- uid: AlgoSdk.LowLevel.NativeArrayExtensions.AsUtf8Text(Unity.Collections.NativeArray{System.Byte},Unity.Collections.Allocator)
  commentId: M:AlgoSdk.LowLevel.NativeArrayExtensions.AsUtf8Text(Unity.Collections.NativeArray{System.Byte},Unity.Collections.Allocator)
  id: AsUtf8Text(Unity.Collections.NativeArray{System.Byte},Unity.Collections.Allocator)
  isExtensionMethod: true
  parent: AlgoSdk.LowLevel.NativeArrayExtensions
  langs:
  - csharp
  - vb
  name: AsUtf8Text(NativeArray<Byte>, Allocator)
  nameWithType: NativeArrayExtensions.AsUtf8Text(NativeArray<Byte>, Allocator)
  fullName: AlgoSdk.LowLevel.NativeArrayExtensions.AsUtf8Text(Unity.Collections.NativeArray<System.Byte>, Unity.Collections.Allocator)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.LowLevel/NativeArrayExtensions.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AsUtf8Text
    path: ../CareBoo.AlgoSdk.LowLevel/NativeArrayExtensions.cs
    startLine: 14
  assemblies:
  - CareBoo.AlgoSdk.LowLevel
  namespace: AlgoSdk.LowLevel
  syntax:
    content: public static NativeText AsUtf8Text(this NativeArray<byte> rawBytes, Allocator allocator)
    parameters:
    - id: rawBytes
      type: Unity.Collections.NativeArray{System.Byte}
    - id: allocator
      type: Unity.Collections.Allocator
    return:
      type: Unity.Collections.NativeText
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsUtf8Text(rawBytes As NativeArray(Of Byte), allocator As Allocator) As NativeText
  overload: AlgoSdk.LowLevel.NativeArrayExtensions.AsUtf8Text*
  nameWithType.vb: NativeArrayExtensions.AsUtf8Text(NativeArray(Of Byte), Allocator)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.LowLevel.NativeArrayExtensions.AsUtf8Text(Unity.Collections.NativeArray(Of System.Byte), Unity.Collections.Allocator)
  name.vb: AsUtf8Text(NativeArray(Of Byte), Allocator)
references:
- uid: AlgoSdk.LowLevel
  commentId: N:AlgoSdk.LowLevel
  name: AlgoSdk.LowLevel
  nameWithType: AlgoSdk.LowLevel
  fullName: AlgoSdk.LowLevel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AlgoSdk.LowLevel.NativeArrayExtensions.AsUtf8Text*
  commentId: Overload:AlgoSdk.LowLevel.NativeArrayExtensions.AsUtf8Text
  name: AsUtf8Text
  nameWithType: NativeArrayExtensions.AsUtf8Text
  fullName: AlgoSdk.LowLevel.NativeArrayExtensions.AsUtf8Text
- uid: Unity.Collections.NativeArray{System.Byte}.ReadOnly
  commentId: T:Unity.Collections.NativeArray{System.Byte}.ReadOnly
  parent: Unity.Collections
  definition: Unity.Collections.NativeArray`1.ReadOnly
  name: NativeArray.ReadOnly<>
  nameWithType: NativeArray.ReadOnly<>
  fullName: Unity.Collections.NativeArray.ReadOnly<>
  nameWithType.vb: NativeArray.ReadOnly(Of )
  fullName.vb: Unity.Collections.NativeArray.ReadOnly(Of )
  name.vb: NativeArray.ReadOnly(Of )
  spec.csharp:
  - uid: Unity.Collections.NativeArray`1.ReadOnly
    name: NativeArray.ReadOnly
    nameWithType: NativeArray.ReadOnly
    fullName: Unity.Collections.NativeArray.ReadOnly
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Unity.Collections.NativeArray`1.ReadOnly
    name: NativeArray.ReadOnly
    nameWithType: NativeArray.ReadOnly
    fullName: Unity.Collections.NativeArray.ReadOnly
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Collections.Allocator
  commentId: T:Unity.Collections.Allocator
  parent: Unity.Collections
  isExternal: true
  name: Allocator
  nameWithType: Allocator
  fullName: Unity.Collections.Allocator
- uid: Unity.Collections.NativeText
  commentId: T:Unity.Collections.NativeText
  parent: Unity.Collections
  name: NativeText
  nameWithType: NativeText
  fullName: Unity.Collections.NativeText
- uid: Unity.Collections.NativeArray`1.ReadOnly
  commentId: T:Unity.Collections.NativeArray`1.ReadOnly
  isExternal: true
  name: NativeArray.ReadOnly<>
  nameWithType: NativeArray.ReadOnly<>
  fullName: Unity.Collections.NativeArray.ReadOnly<>
  nameWithType.vb: NativeArray.ReadOnly(Of )
  fullName.vb: Unity.Collections.NativeArray.ReadOnly(Of )
  name.vb: NativeArray.ReadOnly(Of )
  spec.csharp:
  - uid: Unity.Collections.NativeArray`1.ReadOnly
    name: NativeArray.ReadOnly
    nameWithType: NativeArray.ReadOnly
    fullName: Unity.Collections.NativeArray.ReadOnly
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Unity.Collections.NativeArray`1.ReadOnly
    name: NativeArray.ReadOnly
    nameWithType: NativeArray.ReadOnly
    fullName: Unity.Collections.NativeArray.ReadOnly
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Collections
  commentId: N:Unity.Collections
  name: Unity.Collections
  nameWithType: Unity.Collections
  fullName: Unity.Collections
- uid: Unity.Collections.NativeArray{System.Byte}
  commentId: T:Unity.Collections.NativeArray{System.Byte}
  parent: Unity.Collections
  definition: Unity.Collections.NativeArray`1
  name: NativeArray<Byte>
  nameWithType: NativeArray<Byte>
  fullName: Unity.Collections.NativeArray<System.Byte>
  nameWithType.vb: NativeArray(Of Byte)
  fullName.vb: Unity.Collections.NativeArray(Of System.Byte)
  name.vb: NativeArray(Of Byte)
  spec.csharp:
  - uid: Unity.Collections.NativeArray`1
    name: NativeArray
    nameWithType: NativeArray
    fullName: Unity.Collections.NativeArray
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Unity.Collections.NativeArray`1
    name: NativeArray
    nameWithType: NativeArray
    fullName: Unity.Collections.NativeArray
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Collections.NativeArray`1
  commentId: T:Unity.Collections.NativeArray`1
  isExternal: true
  name: NativeArray<T>
  nameWithType: NativeArray<T>
  fullName: Unity.Collections.NativeArray<T>
  nameWithType.vb: NativeArray(Of T)
  fullName.vb: Unity.Collections.NativeArray(Of T)
  name.vb: NativeArray(Of T)
  spec.csharp:
  - uid: Unity.Collections.NativeArray`1
    name: NativeArray
    nameWithType: NativeArray
    fullName: Unity.Collections.NativeArray
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Unity.Collections.NativeArray`1
    name: NativeArray
    nameWithType: NativeArray
    fullName: Unity.Collections.NativeArray
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
