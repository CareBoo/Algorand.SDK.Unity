### YamlMime:ManagedReference
items:
- uid: AlgoSdk.ExportMultisigResponse
  commentId: T:AlgoSdk.ExportMultisigResponse
  id: ExportMultisigResponse
  parent: AlgoSdk
  children:
  - AlgoSdk.ExportMultisigResponse.Equals(AlgoSdk.ExportMultisigResponse)
  - AlgoSdk.ExportMultisigResponse.Error
  - AlgoSdk.ExportMultisigResponse.Message
  - AlgoSdk.ExportMultisigResponse.MultisigVersion
  - AlgoSdk.ExportMultisigResponse.Pks
  - AlgoSdk.ExportMultisigResponse.Threshold
  langs:
  - csharp
  - vb
  name: ExportMultisigResponse
  nameWithType: ExportMultisigResponse
  fullName: AlgoSdk.ExportMultisigResponse
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/ExportMultisigResponse.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ExportMultisigResponse
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/ExportMultisigResponse.cs
    startLine: 5
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: 'public struct ExportMultisigResponse : IEquatable<ExportMultisigResponse>'
    content.vb: >-
      Public Structure ExportMultisigResponse
          Implements IEquatable(Of ExportMultisigResponse)
  implements:
  - System.IEquatable{AlgoSdk.ExportMultisigResponse}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: AlgoSdk.ExportMultisigResponse.Error
  commentId: F:AlgoSdk.ExportMultisigResponse.Error
  id: Error
  parent: AlgoSdk.ExportMultisigResponse
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: ExportMultisigResponse.Error
  fullName: AlgoSdk.ExportMultisigResponse.Error
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/ExportMultisigResponse.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Error
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/ExportMultisigResponse.cs
    startLine: 10
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("error", null, false)]

      public Optional<bool> Error
    return:
      type: AlgoSdk.Optional{System.Boolean}
    content.vb: "<AlgoApiField(\"error\", Nothing, False)>\nPublic Error As "
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: error
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.ExportMultisigResponse.Message
  commentId: F:AlgoSdk.ExportMultisigResponse.Message
  id: Message
  parent: AlgoSdk.ExportMultisigResponse
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: ExportMultisigResponse.Message
  fullName: AlgoSdk.ExportMultisigResponse.Message
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/ExportMultisigResponse.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Message
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/ExportMultisigResponse.cs
    startLine: 13
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("message", null, false)]

      public string Message
    return:
      type: System.String
    content.vb: >-
      <AlgoApiField("message", Nothing, False)>

      Public Message As String
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: message
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.ExportMultisigResponse.MultisigVersion
  commentId: F:AlgoSdk.ExportMultisigResponse.MultisigVersion
  id: MultisigVersion
  parent: AlgoSdk.ExportMultisigResponse
  langs:
  - csharp
  - vb
  name: MultisigVersion
  nameWithType: ExportMultisigResponse.MultisigVersion
  fullName: AlgoSdk.ExportMultisigResponse.MultisigVersion
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/ExportMultisigResponse.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: MultisigVersion
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/ExportMultisigResponse.cs
    startLine: 16
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("multisig_version", null, false)]

      public byte MultisigVersion
    return:
      type: System.Byte
    content.vb: >-
      <AlgoApiField("multisig_version", Nothing, False)>

      Public MultisigVersion As Byte
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: multisig_version
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.ExportMultisigResponse.Pks
  commentId: F:AlgoSdk.ExportMultisigResponse.Pks
  id: Pks
  parent: AlgoSdk.ExportMultisigResponse
  langs:
  - csharp
  - vb
  name: Pks
  nameWithType: ExportMultisigResponse.Pks
  fullName: AlgoSdk.ExportMultisigResponse.Pks
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/ExportMultisigResponse.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Pks
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/ExportMultisigResponse.cs
    startLine: 19
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("pks", null, false)]

      public Ed25519.PublicKey[] Pks
    return:
      type: AlgoSdk.Crypto.Ed25519.PublicKey[]
    content.vb: >-
      <AlgoApiField("pks", Nothing, False)>

      Public Pks As Ed25519.PublicKey()
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: pks
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.ExportMultisigResponse.Threshold
  commentId: F:AlgoSdk.ExportMultisigResponse.Threshold
  id: Threshold
  parent: AlgoSdk.ExportMultisigResponse
  langs:
  - csharp
  - vb
  name: Threshold
  nameWithType: ExportMultisigResponse.Threshold
  fullName: AlgoSdk.ExportMultisigResponse.Threshold
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/ExportMultisigResponse.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Threshold
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/ExportMultisigResponse.cs
    startLine: 22
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("threshold", null, false)]

      public byte Threshold
    return:
      type: System.Byte
    content.vb: >-
      <AlgoApiField("threshold", Nothing, False)>

      Public Threshold As Byte
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: threshold
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.ExportMultisigResponse.Equals(AlgoSdk.ExportMultisigResponse)
  commentId: M:AlgoSdk.ExportMultisigResponse.Equals(AlgoSdk.ExportMultisigResponse)
  id: Equals(AlgoSdk.ExportMultisigResponse)
  parent: AlgoSdk.ExportMultisigResponse
  langs:
  - csharp
  - vb
  name: Equals(ExportMultisigResponse)
  nameWithType: ExportMultisigResponse.Equals(ExportMultisigResponse)
  fullName: AlgoSdk.ExportMultisigResponse.Equals(AlgoSdk.ExportMultisigResponse)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/ExportMultisigResponse.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Equals
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/ExportMultisigResponse.cs
    startLine: 24
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public bool Equals(ExportMultisigResponse other)
    parameters:
    - id: other
      type: AlgoSdk.ExportMultisigResponse
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As ExportMultisigResponse) As Boolean
  overload: AlgoSdk.ExportMultisigResponse.Equals*
  implements:
  - System.IEquatable{AlgoSdk.ExportMultisigResponse}.Equals(AlgoSdk.ExportMultisigResponse)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: System.IEquatable{AlgoSdk.ExportMultisigResponse}
  commentId: T:System.IEquatable{AlgoSdk.ExportMultisigResponse}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<ExportMultisigResponse>
  nameWithType: IEquatable<ExportMultisigResponse>
  fullName: System.IEquatable<AlgoSdk.ExportMultisigResponse>
  nameWithType.vb: IEquatable(Of ExportMultisigResponse)
  fullName.vb: System.IEquatable(Of AlgoSdk.ExportMultisigResponse)
  name.vb: IEquatable(Of ExportMultisigResponse)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.ExportMultisigResponse
    name: ExportMultisigResponse
    nameWithType: ExportMultisigResponse
    fullName: AlgoSdk.ExportMultisigResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.ExportMultisigResponse
    name: ExportMultisigResponse
    nameWithType: ExportMultisigResponse
    fullName: AlgoSdk.ExportMultisigResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AlgoSdk.Optional{System.Boolean}
  commentId: T:AlgoSdk.Optional{System.Boolean}
  parent: AlgoSdk
  definition: AlgoSdk.Optional`1
  name: Optional<Boolean>
  nameWithType: Optional<Boolean>
  fullName: AlgoSdk.Optional<System.Boolean>
  nameWithType.vb: Optional(Of Boolean)
  fullName.vb: AlgoSdk.Optional(Of System.Boolean)
  name.vb: Optional(Of Boolean)
  spec.csharp:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.Optional`1
  commentId: T:AlgoSdk.Optional`1
  parent: AlgoSdk
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: AlgoSdk.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: AlgoSdk.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: AlgoSdk.Crypto.Ed25519.PublicKey[]
  isExternal: true
  name: Ed25519.PublicKey[]
  nameWithType: Ed25519.PublicKey[]
  fullName: AlgoSdk.Crypto.Ed25519.PublicKey[]
  nameWithType.vb: Ed25519.PublicKey()
  fullName.vb: AlgoSdk.Crypto.Ed25519.PublicKey()
  name.vb: Ed25519.PublicKey()
  spec.csharp:
  - uid: AlgoSdk.Crypto.Ed25519.PublicKey
    name: Ed25519.PublicKey
    nameWithType: Ed25519.PublicKey
    fullName: AlgoSdk.Crypto.Ed25519.PublicKey
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: AlgoSdk.Crypto.Ed25519.PublicKey
    name: Ed25519.PublicKey
    nameWithType: Ed25519.PublicKey
    fullName: AlgoSdk.Crypto.Ed25519.PublicKey
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AlgoSdk.ExportMultisigResponse.Equals*
  commentId: Overload:AlgoSdk.ExportMultisigResponse.Equals
  name: Equals
  nameWithType: ExportMultisigResponse.Equals
  fullName: AlgoSdk.ExportMultisigResponse.Equals
- uid: System.IEquatable{AlgoSdk.ExportMultisigResponse}.Equals(AlgoSdk.ExportMultisigResponse)
  commentId: M:System.IEquatable{AlgoSdk.ExportMultisigResponse}.Equals(AlgoSdk.ExportMultisigResponse)
  parent: System.IEquatable{AlgoSdk.ExportMultisigResponse}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(ExportMultisigResponse)
  nameWithType: IEquatable<ExportMultisigResponse>.Equals(ExportMultisigResponse)
  fullName: System.IEquatable<AlgoSdk.ExportMultisigResponse>.Equals(AlgoSdk.ExportMultisigResponse)
  nameWithType.vb: IEquatable(Of ExportMultisigResponse).Equals(ExportMultisigResponse)
  fullName.vb: System.IEquatable(Of AlgoSdk.ExportMultisigResponse).Equals(AlgoSdk.ExportMultisigResponse)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<ExportMultisigResponse>.Equals
    fullName: System.IEquatable<AlgoSdk.ExportMultisigResponse>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.ExportMultisigResponse
    name: ExportMultisigResponse
    nameWithType: ExportMultisigResponse
    fullName: AlgoSdk.ExportMultisigResponse
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of ExportMultisigResponse).Equals
    fullName: System.IEquatable(Of AlgoSdk.ExportMultisigResponse).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.ExportMultisigResponse
    name: ExportMultisigResponse
    nameWithType: ExportMultisigResponse
    fullName: AlgoSdk.ExportMultisigResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.ExportMultisigResponse
  commentId: T:AlgoSdk.ExportMultisigResponse
  parent: AlgoSdk
  name: ExportMultisigResponse
  nameWithType: ExportMultisigResponse
  fullName: AlgoSdk.ExportMultisigResponse
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
