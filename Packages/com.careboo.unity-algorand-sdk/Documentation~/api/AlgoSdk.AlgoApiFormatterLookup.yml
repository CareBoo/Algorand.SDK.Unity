### YamlMime:ManagedReference
items:
- uid: AlgoSdk.AlgoApiFormatterLookup
  commentId: T:AlgoSdk.AlgoApiFormatterLookup
  id: AlgoApiFormatterLookup
  parent: AlgoSdk
  children:
  - AlgoSdk.AlgoApiFormatterLookup.AddFormatterMethodName
  - AlgoSdk.AlgoApiFormatterLookup.EnsureLookupMethodName
  - AlgoSdk.AlgoApiFormatterLookup.GetFormatter``1
  - AlgoSdk.AlgoApiFormatterLookup.InitLookupMethodName
  - AlgoSdk.AlgoApiFormatterLookup.LookupFieldName
  langs:
  - csharp
  - vb
  name: AlgoApiFormatterLookup
  nameWithType: AlgoApiFormatterLookup
  fullName: AlgoSdk.AlgoApiFormatterLookup
  type: Class
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/AlgoApiFormatterCache.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AlgoApiFormatterLookup
    path: ../CareBoo.AlgoSdk/Serialization/AlgoApiFormatterCache.cs
    startLine: 20
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public sealed class AlgoApiFormatterLookup
    content.vb: Public NotInheritable Class AlgoApiFormatterLookup
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: AlgoSdk.AlgoApiFormatterLookup.EnsureLookupMethodName
  commentId: F:AlgoSdk.AlgoApiFormatterLookup.EnsureLookupMethodName
  id: EnsureLookupMethodName
  parent: AlgoSdk.AlgoApiFormatterLookup
  langs:
  - csharp
  - vb
  name: EnsureLookupMethodName
  nameWithType: AlgoApiFormatterLookup.EnsureLookupMethodName
  fullName: AlgoSdk.AlgoApiFormatterLookup.EnsureLookupMethodName
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/AlgoApiFormatterCache.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: EnsureLookupMethodName
    path: ../CareBoo.AlgoSdk/Serialization/AlgoApiFormatterCache.cs
    startLine: 22
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public const string EnsureLookupMethodName = "EnsureLookupInitialized"
    return:
      type: System.String
    content.vb: Public Const EnsureLookupMethodName As String = "EnsureLookupInitialized"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: AlgoSdk.AlgoApiFormatterLookup.LookupFieldName
  commentId: F:AlgoSdk.AlgoApiFormatterLookup.LookupFieldName
  id: LookupFieldName
  parent: AlgoSdk.AlgoApiFormatterLookup
  langs:
  - csharp
  - vb
  name: LookupFieldName
  nameWithType: AlgoApiFormatterLookup.LookupFieldName
  fullName: AlgoSdk.AlgoApiFormatterLookup.LookupFieldName
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/AlgoApiFormatterCache.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: LookupFieldName
    path: ../CareBoo.AlgoSdk/Serialization/AlgoApiFormatterCache.cs
    startLine: 23
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public const string LookupFieldName = "lookup"
    return:
      type: System.String
    content.vb: Public Const LookupFieldName As String = "lookup"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: AlgoSdk.AlgoApiFormatterLookup.InitLookupMethodName
  commentId: F:AlgoSdk.AlgoApiFormatterLookup.InitLookupMethodName
  id: InitLookupMethodName
  parent: AlgoSdk.AlgoApiFormatterLookup
  langs:
  - csharp
  - vb
  name: InitLookupMethodName
  nameWithType: AlgoApiFormatterLookup.InitLookupMethodName
  fullName: AlgoSdk.AlgoApiFormatterLookup.InitLookupMethodName
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/AlgoApiFormatterCache.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: InitLookupMethodName
    path: ../CareBoo.AlgoSdk/Serialization/AlgoApiFormatterCache.cs
    startLine: 24
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public const string InitLookupMethodName = "InitLookup"
    return:
      type: System.String
    content.vb: Public Const InitLookupMethodName As String = "InitLookup"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: AlgoSdk.AlgoApiFormatterLookup.AddFormatterMethodName
  commentId: F:AlgoSdk.AlgoApiFormatterLookup.AddFormatterMethodName
  id: AddFormatterMethodName
  parent: AlgoSdk.AlgoApiFormatterLookup
  langs:
  - csharp
  - vb
  name: AddFormatterMethodName
  nameWithType: AlgoApiFormatterLookup.AddFormatterMethodName
  fullName: AlgoSdk.AlgoApiFormatterLookup.AddFormatterMethodName
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/AlgoApiFormatterCache.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AddFormatterMethodName
    path: ../CareBoo.AlgoSdk/Serialization/AlgoApiFormatterCache.cs
    startLine: 25
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public const string AddFormatterMethodName = "AddFormatter"
    return:
      type: System.String
    content.vb: Public Const AddFormatterMethodName As String = "AddFormatter"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: AlgoSdk.AlgoApiFormatterLookup.GetFormatter``1
  commentId: M:AlgoSdk.AlgoApiFormatterLookup.GetFormatter``1
  id: GetFormatter``1
  parent: AlgoSdk.AlgoApiFormatterLookup
  langs:
  - csharp
  - vb
  name: GetFormatter<T>()
  nameWithType: AlgoApiFormatterLookup.GetFormatter<T>()
  fullName: AlgoSdk.AlgoApiFormatterLookup.GetFormatter<T>()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/AlgoApiFormatterCache.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetFormatter
    path: ../CareBoo.AlgoSdk/Serialization/AlgoApiFormatterCache.cs
    startLine: 71
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public static IAlgoApiFormatter<T> GetFormatter<T>()
    typeParameters:
    - id: T
    return:
      type: AlgoSdk.IAlgoApiFormatter{{T}}
    content.vb: Public Shared Function GetFormatter(Of T) As IAlgoApiFormatter(Of T)
  overload: AlgoSdk.AlgoApiFormatterLookup.GetFormatter*
  nameWithType.vb: AlgoApiFormatterLookup.GetFormatter(Of T)()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.AlgoApiFormatterLookup.GetFormatter(Of T)()
  name.vb: GetFormatter(Of T)()
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AlgoSdk.AlgoApiFormatterLookup.GetFormatter*
  commentId: Overload:AlgoSdk.AlgoApiFormatterLookup.GetFormatter
  name: GetFormatter
  nameWithType: AlgoApiFormatterLookup.GetFormatter
  fullName: AlgoSdk.AlgoApiFormatterLookup.GetFormatter
- uid: AlgoSdk.IAlgoApiFormatter{{T}}
  commentId: T:AlgoSdk.IAlgoApiFormatter{``0}
  parent: AlgoSdk
  definition: AlgoSdk.IAlgoApiFormatter`1
  name: IAlgoApiFormatter<T>
  nameWithType: IAlgoApiFormatter<T>
  fullName: AlgoSdk.IAlgoApiFormatter<T>
  nameWithType.vb: IAlgoApiFormatter(Of T)
  fullName.vb: AlgoSdk.IAlgoApiFormatter(Of T)
  name.vb: IAlgoApiFormatter(Of T)
  spec.csharp:
  - uid: AlgoSdk.IAlgoApiFormatter`1
    name: IAlgoApiFormatter
    nameWithType: IAlgoApiFormatter
    fullName: AlgoSdk.IAlgoApiFormatter
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.IAlgoApiFormatter`1
    name: IAlgoApiFormatter
    nameWithType: IAlgoApiFormatter
    fullName: AlgoSdk.IAlgoApiFormatter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IAlgoApiFormatter`1
  commentId: T:AlgoSdk.IAlgoApiFormatter`1
  name: IAlgoApiFormatter<T>
  nameWithType: IAlgoApiFormatter<T>
  fullName: AlgoSdk.IAlgoApiFormatter<T>
  nameWithType.vb: IAlgoApiFormatter(Of T)
  fullName.vb: AlgoSdk.IAlgoApiFormatter(Of T)
  name.vb: IAlgoApiFormatter(Of T)
  spec.csharp:
  - uid: AlgoSdk.IAlgoApiFormatter`1
    name: IAlgoApiFormatter
    nameWithType: IAlgoApiFormatter
    fullName: AlgoSdk.IAlgoApiFormatter
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.IAlgoApiFormatter`1
    name: IAlgoApiFormatter
    nameWithType: IAlgoApiFormatter
    fullName: AlgoSdk.IAlgoApiFormatter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
