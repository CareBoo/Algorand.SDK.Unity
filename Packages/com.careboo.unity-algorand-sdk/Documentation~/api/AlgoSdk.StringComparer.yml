### YamlMime:ManagedReference
items:
- uid: AlgoSdk.StringComparer
  commentId: T:AlgoSdk.StringComparer
  id: StringComparer
  parent: AlgoSdk
  children:
  - AlgoSdk.StringComparer.Equals(System.String,System.String)
  - AlgoSdk.StringComparer.Instance
  - AlgoSdk.StringComparer.System#Collections#Generic#IEqualityComparer{System#String}#Equals(System.String,System.String)
  - AlgoSdk.StringComparer.System#Collections#Generic#IEqualityComparer{System#String}#GetHashCode(System.String)
  langs:
  - csharp
  - vb
  name: StringComparer
  nameWithType: StringComparer
  fullName: AlgoSdk.StringComparer
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/EqualityComparers.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: StringComparer
    path: ../CareBoo.AlgoSdk/Serialization/EqualityComparers.cs
    startLine: 116
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: 'public struct StringComparer : IEqualityComparer<string>'
    content.vb: >-
      Public Structure StringComparer
          Implements IEqualityComparer(Of String)
  implements:
  - System.Collections.Generic.IEqualityComparer{System.String}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: AlgoSdk.StringComparer.System#Collections#Generic#IEqualityComparer{System#String}#Equals(System.String,System.String)
  commentId: M:AlgoSdk.StringComparer.System#Collections#Generic#IEqualityComparer{System#String}#Equals(System.String,System.String)
  id: System#Collections#Generic#IEqualityComparer{System#String}#Equals(System.String,System.String)
  isEii: true
  parent: AlgoSdk.StringComparer
  langs:
  - csharp
  - vb
  name: IEqualityComparer<String>.Equals(String, String)
  nameWithType: StringComparer.IEqualityComparer<String>.Equals(String, String)
  fullName: AlgoSdk.StringComparer.System.Collections.Generic.IEqualityComparer<System.String>.Equals(System.String, System.String)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/EqualityComparers.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: System.Collections.Generic.IEqualityComparer<System.String>.Equals
    path: ../CareBoo.AlgoSdk/Serialization/EqualityComparers.cs
    startLine: 118
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: bool IEqualityComparer<string>.Equals(string x, string y)
    parameters:
    - id: x
      type: System.String
    - id: y
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function System.Collections.Generic.IEqualityComparer<System.String>.Equals(x As String, y As String) As Boolean Implements IEqualityComparer(Of String).Equals
  overload: AlgoSdk.StringComparer.System#Collections#Generic#IEqualityComparer{System#String}#Equals*
  implements:
  - System.Collections.Generic.IEqualityComparer{System.String}.Equals(System.String,System.String)
  nameWithType.vb: StringComparer.System.Collections.Generic.IEqualityComparer<System.String>.Equals(String, String)
  name.vb: System.Collections.Generic.IEqualityComparer<System.String>.Equals(String, String)
- uid: AlgoSdk.StringComparer.System#Collections#Generic#IEqualityComparer{System#String}#GetHashCode(System.String)
  commentId: M:AlgoSdk.StringComparer.System#Collections#Generic#IEqualityComparer{System#String}#GetHashCode(System.String)
  id: System#Collections#Generic#IEqualityComparer{System#String}#GetHashCode(System.String)
  isEii: true
  parent: AlgoSdk.StringComparer
  langs:
  - csharp
  - vb
  name: IEqualityComparer<String>.GetHashCode(String)
  nameWithType: StringComparer.IEqualityComparer<String>.GetHashCode(String)
  fullName: AlgoSdk.StringComparer.System.Collections.Generic.IEqualityComparer<System.String>.GetHashCode(System.String)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/EqualityComparers.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: System.Collections.Generic.IEqualityComparer<System.String>.GetHashCode
    path: ../CareBoo.AlgoSdk/Serialization/EqualityComparers.cs
    startLine: 120
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: int IEqualityComparer<string>.GetHashCode(string obj)
    parameters:
    - id: obj
      type: System.String
    return:
      type: System.Int32
    content.vb: Function System.Collections.Generic.IEqualityComparer<System.String>.GetHashCode(obj As String) As Integer Implements IEqualityComparer(Of String).GetHashCode
  overload: AlgoSdk.StringComparer.System#Collections#Generic#IEqualityComparer{System#String}#GetHashCode*
  implements:
  - System.Collections.Generic.IEqualityComparer{System.String}.GetHashCode(System.String)
  nameWithType.vb: StringComparer.System.Collections.Generic.IEqualityComparer<System.String>.GetHashCode(String)
  name.vb: System.Collections.Generic.IEqualityComparer<System.String>.GetHashCode(String)
- uid: AlgoSdk.StringComparer.Instance
  commentId: F:AlgoSdk.StringComparer.Instance
  id: Instance
  parent: AlgoSdk.StringComparer
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: StringComparer.Instance
  fullName: AlgoSdk.StringComparer.Instance
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/EqualityComparers.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Instance
    path: ../CareBoo.AlgoSdk/Serialization/EqualityComparers.cs
    startLine: 122
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public static readonly StringComparer Instance
    return:
      type: AlgoSdk.StringComparer
    content.vb: Public Shared ReadOnly Instance As StringComparer
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: AlgoSdk.StringComparer.Equals(System.String,System.String)
  commentId: M:AlgoSdk.StringComparer.Equals(System.String,System.String)
  id: Equals(System.String,System.String)
  parent: AlgoSdk.StringComparer
  langs:
  - csharp
  - vb
  name: Equals(String, String)
  nameWithType: StringComparer.Equals(String, String)
  fullName: AlgoSdk.StringComparer.Equals(System.String, System.String)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/EqualityComparers.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Equals
    path: ../CareBoo.AlgoSdk/Serialization/EqualityComparers.cs
    startLine: 124
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public static bool Equals(string x, string y)
    parameters:
    - id: x
      type: System.String
    - id: y
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function Equals(x As String, y As String) As Boolean
  overload: AlgoSdk.StringComparer.Equals*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: System.Collections.Generic.IEqualityComparer{System.String}
  commentId: T:System.Collections.Generic.IEqualityComparer{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<String>
  nameWithType: IEqualityComparer<String>
  fullName: System.Collections.Generic.IEqualityComparer<System.String>
  nameWithType.vb: IEqualityComparer(Of String)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of System.String)
  name.vb: IEqualityComparer(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AlgoSdk.StringComparer.System#Collections#Generic#IEqualityComparer{System#String}#Equals*
  commentId: Overload:AlgoSdk.StringComparer.System#Collections#Generic#IEqualityComparer{System#String}#Equals
  name: IEqualityComparer<String>.Equals
  nameWithType: StringComparer.IEqualityComparer<String>.Equals
  fullName: AlgoSdk.StringComparer.System.Collections.Generic.IEqualityComparer<System.String>.Equals
  nameWithType.vb: StringComparer.System.Collections.Generic.IEqualityComparer<System.String>.Equals
  name.vb: System.Collections.Generic.IEqualityComparer<System.String>.Equals
- uid: System.Collections.Generic.IEqualityComparer{System.String}.Equals(System.String,System.String)
  commentId: M:System.Collections.Generic.IEqualityComparer{System.String}.Equals(System.String,System.String)
  parent: System.Collections.Generic.IEqualityComparer{System.String}
  definition: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  name: Equals(String, String)
  nameWithType: IEqualityComparer<String>.Equals(String, String)
  fullName: System.Collections.Generic.IEqualityComparer<System.String>.Equals(System.String, System.String)
  nameWithType.vb: IEqualityComparer(Of String).Equals(String, String)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of System.String).Equals(System.String, System.String)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer<String>.Equals
    fullName: System.Collections.Generic.IEqualityComparer<System.String>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer(Of String).Equals
    fullName: System.Collections.Generic.IEqualityComparer(Of System.String).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  commentId: M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  isExternal: true
  name: Equals(T, T)
  nameWithType: IEqualityComparer<T>.Equals(T, T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)
  nameWithType.vb: IEqualityComparer(Of T).Equals(T, T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T).Equals(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer<T>.Equals
    fullName: System.Collections.Generic.IEqualityComparer<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer(Of T).Equals
    fullName: System.Collections.Generic.IEqualityComparer(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.StringComparer.System#Collections#Generic#IEqualityComparer{System#String}#GetHashCode*
  commentId: Overload:AlgoSdk.StringComparer.System#Collections#Generic#IEqualityComparer{System#String}#GetHashCode
  name: IEqualityComparer<String>.GetHashCode
  nameWithType: StringComparer.IEqualityComparer<String>.GetHashCode
  fullName: AlgoSdk.StringComparer.System.Collections.Generic.IEqualityComparer<System.String>.GetHashCode
  nameWithType.vb: StringComparer.System.Collections.Generic.IEqualityComparer<System.String>.GetHashCode
  name.vb: System.Collections.Generic.IEqualityComparer<System.String>.GetHashCode
- uid: System.Collections.Generic.IEqualityComparer{System.String}.GetHashCode(System.String)
  commentId: M:System.Collections.Generic.IEqualityComparer{System.String}.GetHashCode(System.String)
  parent: System.Collections.Generic.IEqualityComparer{System.String}
  definition: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  name: GetHashCode(String)
  nameWithType: IEqualityComparer<String>.GetHashCode(String)
  fullName: System.Collections.Generic.IEqualityComparer<System.String>.GetHashCode(System.String)
  nameWithType.vb: IEqualityComparer(Of String).GetHashCode(String)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of System.String).GetHashCode(System.String)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer<String>.GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer<System.String>.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer(Of String).GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer(Of System.String).GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  commentId: M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  isExternal: true
  name: GetHashCode(T)
  nameWithType: IEqualityComparer<T>.GetHashCode(T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode(T)
  nameWithType.vb: IEqualityComparer(Of T).GetHashCode(T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode(T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer<T>.GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer(Of T).GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.StringComparer
  commentId: T:AlgoSdk.StringComparer
  parent: AlgoSdk
  name: StringComparer
  nameWithType: StringComparer
  fullName: AlgoSdk.StringComparer
- uid: AlgoSdk.StringComparer.Equals*
  commentId: Overload:AlgoSdk.StringComparer.Equals
  name: Equals
  nameWithType: StringComparer.Equals
  fullName: AlgoSdk.StringComparer.Equals
