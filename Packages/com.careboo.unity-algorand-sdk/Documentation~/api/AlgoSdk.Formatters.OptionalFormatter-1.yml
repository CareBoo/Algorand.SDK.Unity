### YamlMime:ManagedReference
items:
- uid: AlgoSdk.Formatters.OptionalFormatter`1
  commentId: T:AlgoSdk.Formatters.OptionalFormatter`1
  id: OptionalFormatter`1
  parent: AlgoSdk.Formatters
  children:
  - AlgoSdk.Formatters.OptionalFormatter`1.Deserialize(AlgoSdk.Json.JsonReader@)
  - AlgoSdk.Formatters.OptionalFormatter`1.Deserialize(AlgoSdk.MessagePack.MessagePackReader@)
  - AlgoSdk.Formatters.OptionalFormatter`1.Serialize(AlgoSdk.Json.JsonWriter@,AlgoSdk.Optional{`0})
  - AlgoSdk.Formatters.OptionalFormatter`1.Serialize(AlgoSdk.MessagePack.MessagePackWriter@,AlgoSdk.Optional{`0})
  langs:
  - csharp
  - vb
  name: OptionalFormatter<T>
  nameWithType: OptionalFormatter<T>
  fullName: AlgoSdk.Formatters.OptionalFormatter<T>
  type: Class
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/Formatters/OptionalFormatter.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: OptionalFormatter
    path: ../CareBoo.AlgoSdk/Serialization/Formatters/OptionalFormatter.cs
    startLine: 6
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.Formatters
  syntax:
    content: 'public sealed class OptionalFormatter<T> : IAlgoApiFormatter<Optional<T>> where T : struct, IEquatable<T>'
    typeParameters:
    - id: T
    content.vb: >-
      Public NotInheritable Class OptionalFormatter(Of T As {Structure, IEquatable(Of T)})
          Implements IAlgoApiFormatter(Of  Optional(Of T) )
  inheritance:
  - System.Object
  implements:
  - AlgoSdk.IAlgoApiFormatter{AlgoSdk.Optional{{T}}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: OptionalFormatter(Of T)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: AlgoSdk.Formatters.OptionalFormatter(Of T)
  name.vb: OptionalFormatter(Of T)
- uid: AlgoSdk.Formatters.OptionalFormatter`1.Deserialize(AlgoSdk.Json.JsonReader@)
  commentId: M:AlgoSdk.Formatters.OptionalFormatter`1.Deserialize(AlgoSdk.Json.JsonReader@)
  id: Deserialize(AlgoSdk.Json.JsonReader@)
  parent: AlgoSdk.Formatters.OptionalFormatter`1
  langs:
  - csharp
  - vb
  name: Deserialize(ref JsonReader)
  nameWithType: OptionalFormatter<T>.Deserialize(ref JsonReader)
  fullName: AlgoSdk.Formatters.OptionalFormatter<T>.Deserialize(ref AlgoSdk.Json.JsonReader)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/Formatters/OptionalFormatter.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Deserialize
    path: ../CareBoo.AlgoSdk/Serialization/Formatters/OptionalFormatter.cs
    startLine: 10
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.Formatters
  syntax:
    content: public Optional<T> Deserialize(ref JsonReader reader)
    parameters:
    - id: reader
      type: AlgoSdk.Json.JsonReader
    return:
      type: AlgoSdk.Optional{{T}}
    content.vb: 'Public Function Deserialize(ByRef reader As JsonReader) As '
  overload: AlgoSdk.Formatters.OptionalFormatter`1.Deserialize*
  implements:
  - AlgoSdk.IAlgoApiFormatter{AlgoSdk.Optional{{T}}}.Deserialize(AlgoSdk.Json.JsonReader@)
  nameWithType.vb: OptionalFormatter(Of T).Deserialize(ByRef JsonReader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.Formatters.OptionalFormatter(Of T).Deserialize(ByRef AlgoSdk.Json.JsonReader)
  name.vb: Deserialize(ByRef JsonReader)
- uid: AlgoSdk.Formatters.OptionalFormatter`1.Deserialize(AlgoSdk.MessagePack.MessagePackReader@)
  commentId: M:AlgoSdk.Formatters.OptionalFormatter`1.Deserialize(AlgoSdk.MessagePack.MessagePackReader@)
  id: Deserialize(AlgoSdk.MessagePack.MessagePackReader@)
  parent: AlgoSdk.Formatters.OptionalFormatter`1
  langs:
  - csharp
  - vb
  name: Deserialize(ref MessagePackReader)
  nameWithType: OptionalFormatter<T>.Deserialize(ref MessagePackReader)
  fullName: AlgoSdk.Formatters.OptionalFormatter<T>.Deserialize(ref AlgoSdk.MessagePack.MessagePackReader)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/Formatters/OptionalFormatter.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Deserialize
    path: ../CareBoo.AlgoSdk/Serialization/Formatters/OptionalFormatter.cs
    startLine: 21
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.Formatters
  syntax:
    content: public Optional<T> Deserialize(ref MessagePackReader reader)
    parameters:
    - id: reader
      type: AlgoSdk.MessagePack.MessagePackReader
    return:
      type: AlgoSdk.Optional{{T}}
    content.vb: 'Public Function Deserialize(ByRef reader As MessagePackReader) As '
  overload: AlgoSdk.Formatters.OptionalFormatter`1.Deserialize*
  implements:
  - AlgoSdk.IAlgoApiFormatter{AlgoSdk.Optional{{T}}}.Deserialize(AlgoSdk.MessagePack.MessagePackReader@)
  nameWithType.vb: OptionalFormatter(Of T).Deserialize(ByRef MessagePackReader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.Formatters.OptionalFormatter(Of T).Deserialize(ByRef AlgoSdk.MessagePack.MessagePackReader)
  name.vb: Deserialize(ByRef MessagePackReader)
- uid: AlgoSdk.Formatters.OptionalFormatter`1.Serialize(AlgoSdk.Json.JsonWriter@,AlgoSdk.Optional{`0})
  commentId: M:AlgoSdk.Formatters.OptionalFormatter`1.Serialize(AlgoSdk.Json.JsonWriter@,AlgoSdk.Optional{`0})
  id: Serialize(AlgoSdk.Json.JsonWriter@,AlgoSdk.Optional{`0})
  parent: AlgoSdk.Formatters.OptionalFormatter`1
  langs:
  - csharp
  - vb
  name: Serialize(ref JsonWriter, Optional<T>)
  nameWithType: OptionalFormatter<T>.Serialize(ref JsonWriter, Optional<T>)
  fullName: AlgoSdk.Formatters.OptionalFormatter<T>.Serialize(ref AlgoSdk.Json.JsonWriter, AlgoSdk.Optional<T>)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/Formatters/OptionalFormatter.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Serialize
    path: ../CareBoo.AlgoSdk/Serialization/Formatters/OptionalFormatter.cs
    startLine: 28
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.Formatters
  syntax:
    content: public void Serialize(ref JsonWriter writer, Optional<T> value)
    parameters:
    - id: writer
      type: AlgoSdk.Json.JsonWriter
    - id: value
      type: AlgoSdk.Optional{{T}}
    content.vb: Public Sub Serialize(ByRef writer As JsonWriter, value As  Optional (Of T))
  overload: AlgoSdk.Formatters.OptionalFormatter`1.Serialize*
  implements:
  - AlgoSdk.IAlgoApiFormatter{AlgoSdk.Optional{{T}}}.Serialize(AlgoSdk.Json.JsonWriter@,AlgoSdk.Optional{{T}})
  nameWithType.vb: OptionalFormatter(Of T).Serialize(ByRef JsonWriter, Optional(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.Formatters.OptionalFormatter(Of T).Serialize(ByRef AlgoSdk.Json.JsonWriter, AlgoSdk.Optional(Of T))
  name.vb: Serialize(ByRef JsonWriter, Optional(Of T))
- uid: AlgoSdk.Formatters.OptionalFormatter`1.Serialize(AlgoSdk.MessagePack.MessagePackWriter@,AlgoSdk.Optional{`0})
  commentId: M:AlgoSdk.Formatters.OptionalFormatter`1.Serialize(AlgoSdk.MessagePack.MessagePackWriter@,AlgoSdk.Optional{`0})
  id: Serialize(AlgoSdk.MessagePack.MessagePackWriter@,AlgoSdk.Optional{`0})
  parent: AlgoSdk.Formatters.OptionalFormatter`1
  langs:
  - csharp
  - vb
  name: Serialize(ref MessagePackWriter, Optional<T>)
  nameWithType: OptionalFormatter<T>.Serialize(ref MessagePackWriter, Optional<T>)
  fullName: AlgoSdk.Formatters.OptionalFormatter<T>.Serialize(ref AlgoSdk.MessagePack.MessagePackWriter, AlgoSdk.Optional<T>)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Serialization/Formatters/OptionalFormatter.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Serialize
    path: ../CareBoo.AlgoSdk/Serialization/Formatters/OptionalFormatter.cs
    startLine: 39
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk.Formatters
  syntax:
    content: public void Serialize(ref MessagePackWriter writer, Optional<T> value)
    parameters:
    - id: writer
      type: AlgoSdk.MessagePack.MessagePackWriter
    - id: value
      type: AlgoSdk.Optional{{T}}
    content.vb: Public Sub Serialize(ByRef writer As MessagePackWriter, value As  Optional (Of T))
  overload: AlgoSdk.Formatters.OptionalFormatter`1.Serialize*
  implements:
  - AlgoSdk.IAlgoApiFormatter{AlgoSdk.Optional{{T}}}.Serialize(AlgoSdk.MessagePack.MessagePackWriter@,AlgoSdk.Optional{{T}})
  nameWithType.vb: OptionalFormatter(Of T).Serialize(ByRef MessagePackWriter, Optional(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.Formatters.OptionalFormatter(Of T).Serialize(ByRef AlgoSdk.MessagePack.MessagePackWriter, AlgoSdk.Optional(Of T))
  name.vb: Serialize(ByRef MessagePackWriter, Optional(Of T))
references:
- uid: AlgoSdk.Formatters
  commentId: N:AlgoSdk.Formatters
  name: AlgoSdk.Formatters
  nameWithType: AlgoSdk.Formatters
  fullName: AlgoSdk.Formatters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AlgoSdk.IAlgoApiFormatter{AlgoSdk.Optional{{T}}}
  commentId: T:AlgoSdk.IAlgoApiFormatter{AlgoSdk.Optional{`0}}
  parent: AlgoSdk
  definition: AlgoSdk.IAlgoApiFormatter`1
  name: IAlgoApiFormatter<Optional<T>>
  nameWithType: IAlgoApiFormatter<Optional<T>>
  fullName: AlgoSdk.IAlgoApiFormatter<AlgoSdk.Optional<T>>
  nameWithType.vb: IAlgoApiFormatter(Of Optional(Of T))
  fullName.vb: AlgoSdk.IAlgoApiFormatter(Of AlgoSdk.Optional(Of T))
  name.vb: IAlgoApiFormatter(Of Optional(Of T))
  spec.csharp:
  - uid: AlgoSdk.IAlgoApiFormatter`1
    name: IAlgoApiFormatter
    nameWithType: IAlgoApiFormatter
    fullName: AlgoSdk.IAlgoApiFormatter
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.IAlgoApiFormatter`1
    name: IAlgoApiFormatter
    nameWithType: IAlgoApiFormatter
    fullName: AlgoSdk.IAlgoApiFormatter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AlgoSdk.IAlgoApiFormatter`1
  commentId: T:AlgoSdk.IAlgoApiFormatter`1
  name: IAlgoApiFormatter<T>
  nameWithType: IAlgoApiFormatter<T>
  fullName: AlgoSdk.IAlgoApiFormatter<T>
  nameWithType.vb: IAlgoApiFormatter(Of T)
  fullName.vb: AlgoSdk.IAlgoApiFormatter(Of T)
  name.vb: IAlgoApiFormatter(Of T)
  spec.csharp:
  - uid: AlgoSdk.IAlgoApiFormatter`1
    name: IAlgoApiFormatter
    nameWithType: IAlgoApiFormatter
    fullName: AlgoSdk.IAlgoApiFormatter
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.IAlgoApiFormatter`1
    name: IAlgoApiFormatter
    nameWithType: IAlgoApiFormatter
    fullName: AlgoSdk.IAlgoApiFormatter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: AlgoSdk.Formatters.OptionalFormatter`1.Deserialize*
  commentId: Overload:AlgoSdk.Formatters.OptionalFormatter`1.Deserialize
  name: Deserialize
  nameWithType: OptionalFormatter<T>.Deserialize
  fullName: AlgoSdk.Formatters.OptionalFormatter<T>.Deserialize
  nameWithType.vb: OptionalFormatter(Of T).Deserialize
  fullName.vb: AlgoSdk.Formatters.OptionalFormatter(Of T).Deserialize
- uid: AlgoSdk.IAlgoApiFormatter{AlgoSdk.Optional{{T}}}.Deserialize(AlgoSdk.Json.JsonReader@)
  commentId: M:AlgoSdk.IAlgoApiFormatter{AlgoSdk.Optional{`0}}.Deserialize(AlgoSdk.Json.JsonReader@)
  parent: AlgoSdk.IAlgoApiFormatter{AlgoSdk.Optional{{T}}}
  definition: AlgoSdk.IAlgoApiFormatter`1.Deserialize(AlgoSdk.Json.JsonReader@)
  name: Deserialize(JsonReader)
  nameWithType: IAlgoApiFormatter<Optional<T>>.Deserialize(JsonReader)
  fullName: AlgoSdk.IAlgoApiFormatter<AlgoSdk.Optional<T>>.Deserialize(AlgoSdk.Json.JsonReader)
  nameWithType.vb: IAlgoApiFormatter(Of Optional(Of T)).Deserialize(JsonReader)
  fullName.vb: AlgoSdk.IAlgoApiFormatter(Of AlgoSdk.Optional(Of T)).Deserialize(AlgoSdk.Json.JsonReader)
  spec.csharp:
  - uid: AlgoSdk.IAlgoApiFormatter`1.Deserialize(AlgoSdk.Json.JsonReader@)
    name: Deserialize
    nameWithType: IAlgoApiFormatter<Optional<T>>.Deserialize
    fullName: AlgoSdk.IAlgoApiFormatter<AlgoSdk.Optional<T>>.Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.Json.JsonReader
    name: JsonReader
    nameWithType: JsonReader
    fullName: AlgoSdk.Json.JsonReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.IAlgoApiFormatter`1.Deserialize(AlgoSdk.Json.JsonReader@)
    name: Deserialize
    nameWithType: IAlgoApiFormatter(Of Optional(Of T)).Deserialize
    fullName: AlgoSdk.IAlgoApiFormatter(Of AlgoSdk.Optional(Of T)).Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.Json.JsonReader
    name: JsonReader
    nameWithType: JsonReader
    fullName: AlgoSdk.Json.JsonReader
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.Json.JsonReader
  commentId: T:AlgoSdk.Json.JsonReader
  parent: AlgoSdk.Json
  name: JsonReader
  nameWithType: JsonReader
  fullName: AlgoSdk.Json.JsonReader
- uid: AlgoSdk.Optional{{T}}
  commentId: T:AlgoSdk.Optional{`0}
  parent: AlgoSdk
  definition: AlgoSdk.Optional`1
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: AlgoSdk.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: AlgoSdk.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IAlgoApiFormatter`1.Deserialize(AlgoSdk.Json.JsonReader@)
  commentId: M:AlgoSdk.IAlgoApiFormatter`1.Deserialize(AlgoSdk.Json.JsonReader@)
  name: Deserialize(JsonReader)
  nameWithType: IAlgoApiFormatter<T>.Deserialize(JsonReader)
  fullName: AlgoSdk.IAlgoApiFormatter<T>.Deserialize(AlgoSdk.Json.JsonReader)
  nameWithType.vb: IAlgoApiFormatter(Of T).Deserialize(JsonReader)
  fullName.vb: AlgoSdk.IAlgoApiFormatter(Of T).Deserialize(AlgoSdk.Json.JsonReader)
  spec.csharp:
  - uid: AlgoSdk.IAlgoApiFormatter`1.Deserialize(AlgoSdk.Json.JsonReader@)
    name: Deserialize
    nameWithType: IAlgoApiFormatter<T>.Deserialize
    fullName: AlgoSdk.IAlgoApiFormatter<T>.Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.Json.JsonReader
    name: JsonReader
    nameWithType: JsonReader
    fullName: AlgoSdk.Json.JsonReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.IAlgoApiFormatter`1.Deserialize(AlgoSdk.Json.JsonReader@)
    name: Deserialize
    nameWithType: IAlgoApiFormatter(Of T).Deserialize
    fullName: AlgoSdk.IAlgoApiFormatter(Of T).Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.Json.JsonReader
    name: JsonReader
    nameWithType: JsonReader
    fullName: AlgoSdk.Json.JsonReader
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.Json
  commentId: N:AlgoSdk.Json
  name: AlgoSdk.Json
  nameWithType: AlgoSdk.Json
  fullName: AlgoSdk.Json
- uid: AlgoSdk.Optional`1
  commentId: T:AlgoSdk.Optional`1
  parent: AlgoSdk
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: AlgoSdk.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: AlgoSdk.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IAlgoApiFormatter{AlgoSdk.Optional{{T}}}.Deserialize(AlgoSdk.MessagePack.MessagePackReader@)
  commentId: M:AlgoSdk.IAlgoApiFormatter{AlgoSdk.Optional{`0}}.Deserialize(AlgoSdk.MessagePack.MessagePackReader@)
  parent: AlgoSdk.IAlgoApiFormatter{AlgoSdk.Optional{{T}}}
  definition: AlgoSdk.IAlgoApiFormatter`1.Deserialize(AlgoSdk.MessagePack.MessagePackReader@)
  name: Deserialize(MessagePackReader)
  nameWithType: IAlgoApiFormatter<Optional<T>>.Deserialize(MessagePackReader)
  fullName: AlgoSdk.IAlgoApiFormatter<AlgoSdk.Optional<T>>.Deserialize(AlgoSdk.MessagePack.MessagePackReader)
  nameWithType.vb: IAlgoApiFormatter(Of Optional(Of T)).Deserialize(MessagePackReader)
  fullName.vb: AlgoSdk.IAlgoApiFormatter(Of AlgoSdk.Optional(Of T)).Deserialize(AlgoSdk.MessagePack.MessagePackReader)
  spec.csharp:
  - uid: AlgoSdk.IAlgoApiFormatter`1.Deserialize(AlgoSdk.MessagePack.MessagePackReader@)
    name: Deserialize
    nameWithType: IAlgoApiFormatter<Optional<T>>.Deserialize
    fullName: AlgoSdk.IAlgoApiFormatter<AlgoSdk.Optional<T>>.Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.MessagePack.MessagePackReader
    name: MessagePackReader
    nameWithType: MessagePackReader
    fullName: AlgoSdk.MessagePack.MessagePackReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.IAlgoApiFormatter`1.Deserialize(AlgoSdk.MessagePack.MessagePackReader@)
    name: Deserialize
    nameWithType: IAlgoApiFormatter(Of Optional(Of T)).Deserialize
    fullName: AlgoSdk.IAlgoApiFormatter(Of AlgoSdk.Optional(Of T)).Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.MessagePack.MessagePackReader
    name: MessagePackReader
    nameWithType: MessagePackReader
    fullName: AlgoSdk.MessagePack.MessagePackReader
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.MessagePack.MessagePackReader
  commentId: T:AlgoSdk.MessagePack.MessagePackReader
  parent: AlgoSdk.MessagePack
  name: MessagePackReader
  nameWithType: MessagePackReader
  fullName: AlgoSdk.MessagePack.MessagePackReader
- uid: AlgoSdk.IAlgoApiFormatter`1.Deserialize(AlgoSdk.MessagePack.MessagePackReader@)
  commentId: M:AlgoSdk.IAlgoApiFormatter`1.Deserialize(AlgoSdk.MessagePack.MessagePackReader@)
  name: Deserialize(MessagePackReader)
  nameWithType: IAlgoApiFormatter<T>.Deserialize(MessagePackReader)
  fullName: AlgoSdk.IAlgoApiFormatter<T>.Deserialize(AlgoSdk.MessagePack.MessagePackReader)
  nameWithType.vb: IAlgoApiFormatter(Of T).Deserialize(MessagePackReader)
  fullName.vb: AlgoSdk.IAlgoApiFormatter(Of T).Deserialize(AlgoSdk.MessagePack.MessagePackReader)
  spec.csharp:
  - uid: AlgoSdk.IAlgoApiFormatter`1.Deserialize(AlgoSdk.MessagePack.MessagePackReader@)
    name: Deserialize
    nameWithType: IAlgoApiFormatter<T>.Deserialize
    fullName: AlgoSdk.IAlgoApiFormatter<T>.Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.MessagePack.MessagePackReader
    name: MessagePackReader
    nameWithType: MessagePackReader
    fullName: AlgoSdk.MessagePack.MessagePackReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.IAlgoApiFormatter`1.Deserialize(AlgoSdk.MessagePack.MessagePackReader@)
    name: Deserialize
    nameWithType: IAlgoApiFormatter(Of T).Deserialize
    fullName: AlgoSdk.IAlgoApiFormatter(Of T).Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.MessagePack.MessagePackReader
    name: MessagePackReader
    nameWithType: MessagePackReader
    fullName: AlgoSdk.MessagePack.MessagePackReader
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.MessagePack
  commentId: N:AlgoSdk.MessagePack
  name: AlgoSdk.MessagePack
  nameWithType: AlgoSdk.MessagePack
  fullName: AlgoSdk.MessagePack
- uid: AlgoSdk.Formatters.OptionalFormatter`1.Serialize*
  commentId: Overload:AlgoSdk.Formatters.OptionalFormatter`1.Serialize
  name: Serialize
  nameWithType: OptionalFormatter<T>.Serialize
  fullName: AlgoSdk.Formatters.OptionalFormatter<T>.Serialize
  nameWithType.vb: OptionalFormatter(Of T).Serialize
  fullName.vb: AlgoSdk.Formatters.OptionalFormatter(Of T).Serialize
- uid: AlgoSdk.IAlgoApiFormatter{AlgoSdk.Optional{{T}}}.Serialize(AlgoSdk.Json.JsonWriter@,AlgoSdk.Optional{{T}})
  commentId: M:AlgoSdk.IAlgoApiFormatter{AlgoSdk.Optional{`0}}.Serialize(AlgoSdk.Json.JsonWriter@,AlgoSdk.Optional{`0})
  parent: AlgoSdk.IAlgoApiFormatter{AlgoSdk.Optional{{T}}}
  definition: AlgoSdk.IAlgoApiFormatter`1.Serialize(AlgoSdk.Json.JsonWriter@,`0)
  name: Serialize(JsonWriter, Optional<T>)
  nameWithType: IAlgoApiFormatter<Optional<T>>.Serialize(JsonWriter, Optional<T>)
  fullName: AlgoSdk.IAlgoApiFormatter<AlgoSdk.Optional<T>>.Serialize(AlgoSdk.Json.JsonWriter, AlgoSdk.Optional<T>)
  nameWithType.vb: IAlgoApiFormatter(Of Optional(Of T)).Serialize(JsonWriter, Optional(Of T))
  fullName.vb: AlgoSdk.IAlgoApiFormatter(Of AlgoSdk.Optional(Of T)).Serialize(AlgoSdk.Json.JsonWriter, AlgoSdk.Optional(Of T))
  name.vb: Serialize(JsonWriter, Optional(Of T))
  spec.csharp:
  - uid: AlgoSdk.IAlgoApiFormatter`1.Serialize(AlgoSdk.Json.JsonWriter@,`0)
    name: Serialize
    nameWithType: IAlgoApiFormatter<Optional<T>>.Serialize
    fullName: AlgoSdk.IAlgoApiFormatter<AlgoSdk.Optional<T>>.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.Json.JsonWriter
    name: JsonWriter
    nameWithType: JsonWriter
    fullName: AlgoSdk.Json.JsonWriter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.IAlgoApiFormatter`1.Serialize(AlgoSdk.Json.JsonWriter@,`0)
    name: Serialize
    nameWithType: IAlgoApiFormatter(Of Optional(Of T)).Serialize
    fullName: AlgoSdk.IAlgoApiFormatter(Of AlgoSdk.Optional(Of T)).Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.Json.JsonWriter
    name: JsonWriter
    nameWithType: JsonWriter
    fullName: AlgoSdk.Json.JsonWriter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.Json.JsonWriter
  commentId: T:AlgoSdk.Json.JsonWriter
  parent: AlgoSdk.Json
  name: JsonWriter
  nameWithType: JsonWriter
  fullName: AlgoSdk.Json.JsonWriter
- uid: AlgoSdk.IAlgoApiFormatter`1.Serialize(AlgoSdk.Json.JsonWriter@,`0)
  commentId: M:AlgoSdk.IAlgoApiFormatter`1.Serialize(AlgoSdk.Json.JsonWriter@,`0)
  name: Serialize(JsonWriter, T)
  nameWithType: IAlgoApiFormatter<T>.Serialize(JsonWriter, T)
  fullName: AlgoSdk.IAlgoApiFormatter<T>.Serialize(AlgoSdk.Json.JsonWriter, T)
  nameWithType.vb: IAlgoApiFormatter(Of T).Serialize(JsonWriter, T)
  fullName.vb: AlgoSdk.IAlgoApiFormatter(Of T).Serialize(AlgoSdk.Json.JsonWriter, T)
  spec.csharp:
  - uid: AlgoSdk.IAlgoApiFormatter`1.Serialize(AlgoSdk.Json.JsonWriter@,`0)
    name: Serialize
    nameWithType: IAlgoApiFormatter<T>.Serialize
    fullName: AlgoSdk.IAlgoApiFormatter<T>.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.Json.JsonWriter
    name: JsonWriter
    nameWithType: JsonWriter
    fullName: AlgoSdk.Json.JsonWriter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.IAlgoApiFormatter`1.Serialize(AlgoSdk.Json.JsonWriter@,`0)
    name: Serialize
    nameWithType: IAlgoApiFormatter(Of T).Serialize
    fullName: AlgoSdk.IAlgoApiFormatter(Of T).Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.Json.JsonWriter
    name: JsonWriter
    nameWithType: JsonWriter
    fullName: AlgoSdk.Json.JsonWriter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IAlgoApiFormatter{AlgoSdk.Optional{{T}}}.Serialize(AlgoSdk.MessagePack.MessagePackWriter@,AlgoSdk.Optional{{T}})
  commentId: M:AlgoSdk.IAlgoApiFormatter{AlgoSdk.Optional{`0}}.Serialize(AlgoSdk.MessagePack.MessagePackWriter@,AlgoSdk.Optional{`0})
  parent: AlgoSdk.IAlgoApiFormatter{AlgoSdk.Optional{{T}}}
  definition: AlgoSdk.IAlgoApiFormatter`1.Serialize(AlgoSdk.MessagePack.MessagePackWriter@,`0)
  name: Serialize(MessagePackWriter, Optional<T>)
  nameWithType: IAlgoApiFormatter<Optional<T>>.Serialize(MessagePackWriter, Optional<T>)
  fullName: AlgoSdk.IAlgoApiFormatter<AlgoSdk.Optional<T>>.Serialize(AlgoSdk.MessagePack.MessagePackWriter, AlgoSdk.Optional<T>)
  nameWithType.vb: IAlgoApiFormatter(Of Optional(Of T)).Serialize(MessagePackWriter, Optional(Of T))
  fullName.vb: AlgoSdk.IAlgoApiFormatter(Of AlgoSdk.Optional(Of T)).Serialize(AlgoSdk.MessagePack.MessagePackWriter, AlgoSdk.Optional(Of T))
  name.vb: Serialize(MessagePackWriter, Optional(Of T))
  spec.csharp:
  - uid: AlgoSdk.IAlgoApiFormatter`1.Serialize(AlgoSdk.MessagePack.MessagePackWriter@,`0)
    name: Serialize
    nameWithType: IAlgoApiFormatter<Optional<T>>.Serialize
    fullName: AlgoSdk.IAlgoApiFormatter<AlgoSdk.Optional<T>>.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.MessagePack.MessagePackWriter
    name: MessagePackWriter
    nameWithType: MessagePackWriter
    fullName: AlgoSdk.MessagePack.MessagePackWriter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.IAlgoApiFormatter`1.Serialize(AlgoSdk.MessagePack.MessagePackWriter@,`0)
    name: Serialize
    nameWithType: IAlgoApiFormatter(Of Optional(Of T)).Serialize
    fullName: AlgoSdk.IAlgoApiFormatter(Of AlgoSdk.Optional(Of T)).Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.MessagePack.MessagePackWriter
    name: MessagePackWriter
    nameWithType: MessagePackWriter
    fullName: AlgoSdk.MessagePack.MessagePackWriter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.MessagePack.MessagePackWriter
  commentId: T:AlgoSdk.MessagePack.MessagePackWriter
  parent: AlgoSdk.MessagePack
  name: MessagePackWriter
  nameWithType: MessagePackWriter
  fullName: AlgoSdk.MessagePack.MessagePackWriter
- uid: AlgoSdk.IAlgoApiFormatter`1.Serialize(AlgoSdk.MessagePack.MessagePackWriter@,`0)
  commentId: M:AlgoSdk.IAlgoApiFormatter`1.Serialize(AlgoSdk.MessagePack.MessagePackWriter@,`0)
  name: Serialize(MessagePackWriter, T)
  nameWithType: IAlgoApiFormatter<T>.Serialize(MessagePackWriter, T)
  fullName: AlgoSdk.IAlgoApiFormatter<T>.Serialize(AlgoSdk.MessagePack.MessagePackWriter, T)
  nameWithType.vb: IAlgoApiFormatter(Of T).Serialize(MessagePackWriter, T)
  fullName.vb: AlgoSdk.IAlgoApiFormatter(Of T).Serialize(AlgoSdk.MessagePack.MessagePackWriter, T)
  spec.csharp:
  - uid: AlgoSdk.IAlgoApiFormatter`1.Serialize(AlgoSdk.MessagePack.MessagePackWriter@,`0)
    name: Serialize
    nameWithType: IAlgoApiFormatter<T>.Serialize
    fullName: AlgoSdk.IAlgoApiFormatter<T>.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.MessagePack.MessagePackWriter
    name: MessagePackWriter
    nameWithType: MessagePackWriter
    fullName: AlgoSdk.MessagePack.MessagePackWriter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.IAlgoApiFormatter`1.Serialize(AlgoSdk.MessagePack.MessagePackWriter@,`0)
    name: Serialize
    nameWithType: IAlgoApiFormatter(Of T).Serialize
    fullName: AlgoSdk.IAlgoApiFormatter(Of T).Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.MessagePack.MessagePackWriter
    name: MessagePackWriter
    nameWithType: MessagePackWriter
    fullName: AlgoSdk.MessagePack.MessagePackWriter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
