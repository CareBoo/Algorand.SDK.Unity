### YamlMime:ManagedReference
items:
- uid: AlgoSdk.AlgoApiRequest
  commentId: T:AlgoSdk.AlgoApiRequest
  id: AlgoApiRequest
  parent: AlgoSdk
  children:
  - AlgoSdk.AlgoApiRequest.Delete(System.String)
  - AlgoSdk.AlgoApiRequest.Get(System.String)
  - AlgoSdk.AlgoApiRequest.Post(System.String)
  - AlgoSdk.AlgoApiRequest.Send(System.Threading.CancellationToken)
  - AlgoSdk.AlgoApiRequest.Send``1(``0,System.Threading.CancellationToken)
  - AlgoSdk.AlgoApiRequest.SetJsonBody(System.String)
  - AlgoSdk.AlgoApiRequest.SetJsonBody(Unity.Collections.NativeText)
  - AlgoSdk.AlgoApiRequest.SetJsonBody``1(``0)
  - AlgoSdk.AlgoApiRequest.SetMessagePackBody(Unity.Collections.NativeArray{System.Byte}.ReadOnly)
  - AlgoSdk.AlgoApiRequest.SetPlainTextBody(System.String)
  - AlgoSdk.AlgoApiRequest.SetRawBody(System.Byte[],AlgoSdk.ContentType)
  - AlgoSdk.AlgoApiRequest.SetToken(System.String,System.String)
  langs:
  - csharp
  - vb
  name: AlgoApiRequest
  nameWithType: AlgoApiRequest
  fullName: AlgoSdk.AlgoApiRequest
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AlgoApiRequest
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiRequest.cs
    startLine: 15
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nA wrapper around <xref href=\"UnityEngine.Networking.UnityWebRequest\" data-throw-if-not-resolved=\"false\"></xref> for handling requests\nto Algorand REST services.\n"
  example: []
  syntax:
    content: public struct AlgoApiRequest
    content.vb: Public Structure AlgoApiRequest
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: AlgoSdk.AlgoApiRequest.SetToken(System.String,System.String)
  commentId: M:AlgoSdk.AlgoApiRequest.SetToken(System.String,System.String)
  id: SetToken(System.String,System.String)
  parent: AlgoSdk.AlgoApiRequest
  langs:
  - csharp
  - vb
  name: SetToken(String, String)
  nameWithType: AlgoApiRequest.SetToken(String, String)
  fullName: AlgoSdk.AlgoApiRequest.SetToken(System.String, System.String)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: SetToken
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiRequest.cs
    startLine: 30
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nSet the token used for authenticating to the service.\n"
  example: []
  syntax:
    content: public AlgoApiRequest SetToken(string tokenHeader, string token)
    parameters:
    - id: tokenHeader
      type: System.String
      description: The name of the request header used for the token.
    - id: token
      type: System.String
      description: The token used for authenticating to the service.
    return:
      type: AlgoSdk.AlgoApiRequest
      description: <see cref="!:this"></see> with token set
    content.vb: Public Function SetToken(tokenHeader As String, token As String) As AlgoApiRequest
  overload: AlgoSdk.AlgoApiRequest.SetToken*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.AlgoApiRequest.Send(System.Threading.CancellationToken)
  commentId: M:AlgoSdk.AlgoApiRequest.Send(System.Threading.CancellationToken)
  id: Send(System.Threading.CancellationToken)
  parent: AlgoSdk.AlgoApiRequest
  langs:
  - csharp
  - vb
  name: Send(CancellationToken)
  nameWithType: AlgoApiRequest.Send(CancellationToken)
  fullName: AlgoSdk.AlgoApiRequest.Send(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Send
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiRequest.cs
    startLine: 42
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nSend the request.\n"
  example: []
  syntax:
    content: public AlgoApiRequest.Sent Send(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional cancellation token
    return:
      type: AlgoSdk.AlgoApiRequest.Sent
      description: A <xref href="AlgoSdk.AlgoApiRequest.Sent" data-throw-if-not-resolved="false"></xref> request
    content.vb: Public Function Send(cancellationToken As CancellationToken = Nothing) As AlgoApiRequest.Sent
  overload: AlgoSdk.AlgoApiRequest.Send*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.AlgoApiRequest.Send``1(``0,System.Threading.CancellationToken)
  commentId: M:AlgoSdk.AlgoApiRequest.Send``1(``0,System.Threading.CancellationToken)
  id: Send``1(``0,System.Threading.CancellationToken)
  parent: AlgoSdk.AlgoApiRequest
  langs:
  - csharp
  - vb
  name: Send<TProgress>(TProgress, CancellationToken)
  nameWithType: AlgoApiRequest.Send<TProgress>(TProgress, CancellationToken)
  fullName: AlgoSdk.AlgoApiRequest.Send<TProgress>(TProgress, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Send
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiRequest.cs
    startLine: 54
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nSend the request and check progress callbacks using <xref href=\"System.IProgress%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      public AlgoApiRequest.Sent<TProgress> Send<TProgress>(TProgress progress, CancellationToken cancellationToken = default(CancellationToken))
          where TProgress : IProgress<float>
    parameters:
    - id: progress
      type: '{TProgress}'
      description: The progress callback
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional cancellation token
    typeParameters:
    - id: TProgress
      description: A progress callback implementing <xref href="System.IProgress%601" data-throw-if-not-resolved="false"></xref>
    return:
      type: AlgoSdk.AlgoApiRequest.Sent{{TProgress}}
      description: A <xref href="AlgoSdk.AlgoApiRequest.Sent%601" data-throw-if-not-resolved="false"></xref> request
    content.vb: Public Function Send(Of TProgress As IProgress(Of Single))(progress As TProgress, cancellationToken As CancellationToken = Nothing) As AlgoApiRequest.Sent(Of TProgress)
  overload: AlgoSdk.AlgoApiRequest.Send*
  nameWithType.vb: AlgoApiRequest.Send(Of TProgress)(TProgress, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.AlgoApiRequest.Send(Of TProgress)(TProgress, System.Threading.CancellationToken)
  name.vb: Send(Of TProgress)(TProgress, CancellationToken)
- uid: AlgoSdk.AlgoApiRequest.SetJsonBody(System.String)
  commentId: M:AlgoSdk.AlgoApiRequest.SetJsonBody(System.String)
  id: SetJsonBody(System.String)
  parent: AlgoSdk.AlgoApiRequest
  langs:
  - csharp
  - vb
  name: SetJsonBody(String)
  nameWithType: AlgoApiRequest.SetJsonBody(String)
  fullName: AlgoSdk.AlgoApiRequest.SetJsonBody(System.String)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: SetJsonBody
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiRequest.cs
    startLine: 65
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nSet body of the request, and set its content type header to &quot;application/json&quot;\n"
  example: []
  syntax:
    content: public AlgoApiRequest SetJsonBody(string json)
    parameters:
    - id: json
      type: System.String
      description: The utf8 json to set the body of the request
    return:
      type: AlgoSdk.AlgoApiRequest
      description: this request with body and header set
    content.vb: Public Function SetJsonBody(json As String) As AlgoApiRequest
  overload: AlgoSdk.AlgoApiRequest.SetJsonBody*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.AlgoApiRequest.SetJsonBody(Unity.Collections.NativeText)
  commentId: M:AlgoSdk.AlgoApiRequest.SetJsonBody(Unity.Collections.NativeText)
  id: SetJsonBody(Unity.Collections.NativeText)
  parent: AlgoSdk.AlgoApiRequest
  langs:
  - csharp
  - vb
  name: SetJsonBody(NativeText)
  nameWithType: AlgoApiRequest.SetJsonBody(NativeText)
  fullName: AlgoSdk.AlgoApiRequest.SetJsonBody(Unity.Collections.NativeText)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: SetJsonBody
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiRequest.cs
    startLine: 73
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nSet body of the request, and set its content type header to &quot;application/json&quot;\n"
  example: []
  syntax:
    content: public AlgoApiRequest SetJsonBody(NativeText json)
    parameters:
    - id: json
      type: Unity.Collections.NativeText
      description: The utf8 json to set the body of the request
    return:
      type: AlgoSdk.AlgoApiRequest
      description: this request with body and header set
    content.vb: Public Function SetJsonBody(json As NativeText) As AlgoApiRequest
  overload: AlgoSdk.AlgoApiRequest.SetJsonBody*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.AlgoApiRequest.SetJsonBody``1(``0)
  commentId: M:AlgoSdk.AlgoApiRequest.SetJsonBody``1(``0)
  id: SetJsonBody``1(``0)
  parent: AlgoSdk.AlgoApiRequest
  langs:
  - csharp
  - vb
  name: SetJsonBody<TBody>(TBody)
  nameWithType: AlgoApiRequest.SetJsonBody<TBody>(TBody)
  fullName: AlgoSdk.AlgoApiRequest.SetJsonBody<TBody>(TBody)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: SetJsonBody
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiRequest.cs
    startLine: 82
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nSet body of the request, and set its content type header to &quot;application/json&quot;\n"
  example: []
  syntax:
    content: public AlgoApiRequest SetJsonBody<TBody>(TBody value)
    parameters:
    - id: value
      type: '{TBody}'
      description: An object to serialize into json, then to set in the body of the request
    typeParameters:
    - id: TBody
      description: Type of the object to serialize
    return:
      type: AlgoSdk.AlgoApiRequest
      description: this request with body and header set
    content.vb: Public Function SetJsonBody(Of TBody)(value As TBody) As AlgoApiRequest
  overload: AlgoSdk.AlgoApiRequest.SetJsonBody*
  nameWithType.vb: AlgoApiRequest.SetJsonBody(Of TBody)(TBody)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.AlgoApiRequest.SetJsonBody(Of TBody)(TBody)
  name.vb: SetJsonBody(Of TBody)(TBody)
- uid: AlgoSdk.AlgoApiRequest.SetPlainTextBody(System.String)
  commentId: M:AlgoSdk.AlgoApiRequest.SetPlainTextBody(System.String)
  id: SetPlainTextBody(System.String)
  parent: AlgoSdk.AlgoApiRequest
  langs:
  - csharp
  - vb
  name: SetPlainTextBody(String)
  nameWithType: AlgoApiRequest.SetPlainTextBody(String)
  fullName: AlgoSdk.AlgoApiRequest.SetPlainTextBody(System.String)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: SetPlainTextBody
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiRequest.cs
    startLine: 93
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nSet body of the request, and set its content type header to &quot;application/text&quot;\n"
  example: []
  syntax:
    content: public AlgoApiRequest SetPlainTextBody(string plainText)
    parameters:
    - id: plainText
      type: System.String
      description: The utf8 plaintext to use for the body
    return:
      type: AlgoSdk.AlgoApiRequest
      description: this request with body and header set
    content.vb: Public Function SetPlainTextBody(plainText As String) As AlgoApiRequest
  overload: AlgoSdk.AlgoApiRequest.SetPlainTextBody*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.AlgoApiRequest.SetMessagePackBody(Unity.Collections.NativeArray{System.Byte}.ReadOnly)
  commentId: M:AlgoSdk.AlgoApiRequest.SetMessagePackBody(Unity.Collections.NativeArray{System.Byte}.ReadOnly)
  id: SetMessagePackBody(Unity.Collections.NativeArray{System.Byte}.ReadOnly)
  parent: AlgoSdk.AlgoApiRequest
  langs:
  - csharp
  - vb
  name: SetMessagePackBody(NativeArray<Byte>.ReadOnly)
  nameWithType: AlgoApiRequest.SetMessagePackBody(NativeArray<Byte>.ReadOnly)
  fullName: AlgoSdk.AlgoApiRequest.SetMessagePackBody(Unity.Collections.NativeArray<System.Byte>.ReadOnly)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: SetMessagePackBody
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiRequest.cs
    startLine: 101
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nSet body of the request and set its content type header to &quot;application/msgpack&quot;\n"
  example: []
  syntax:
    content: public AlgoApiRequest SetMessagePackBody(NativeArray<byte>.ReadOnly bytes)
    parameters:
    - id: bytes
      type: Unity.Collections.NativeArray{System.Byte}.ReadOnly
      description: The msgpack bytes to set for the body
    return:
      type: AlgoSdk.AlgoApiRequest
      description: this request with body and header set
    content.vb: Public Function SetMessagePackBody(bytes As NativeArray(Of Byte).ReadOnly) As AlgoApiRequest
  overload: AlgoSdk.AlgoApiRequest.SetMessagePackBody*
  nameWithType.vb: AlgoApiRequest.SetMessagePackBody(NativeArray(Of Byte).ReadOnly)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.AlgoApiRequest.SetMessagePackBody(Unity.Collections.NativeArray(Of System.Byte).ReadOnly)
  name.vb: SetMessagePackBody(NativeArray(Of Byte).ReadOnly)
- uid: AlgoSdk.AlgoApiRequest.SetRawBody(System.Byte[],AlgoSdk.ContentType)
  commentId: M:AlgoSdk.AlgoApiRequest.SetRawBody(System.Byte[],AlgoSdk.ContentType)
  id: SetRawBody(System.Byte[],AlgoSdk.ContentType)
  parent: AlgoSdk.AlgoApiRequest
  langs:
  - csharp
  - vb
  name: SetRawBody(Byte[], ContentType)
  nameWithType: AlgoApiRequest.SetRawBody(Byte[], ContentType)
  fullName: AlgoSdk.AlgoApiRequest.SetRawBody(System.Byte[], AlgoSdk.ContentType)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: SetRawBody
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiRequest.cs
    startLine: 110
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nSet the body and content type header of the request\n"
  example: []
  syntax:
    content: public AlgoApiRequest SetRawBody(byte[] data, ContentType contentType)
    parameters:
    - id: data
      type: System.Byte[]
      description: The raw bytes to set for the body
    - id: contentType
      type: AlgoSdk.ContentType
      description: The content type to set the header of the request
    return:
      type: AlgoSdk.AlgoApiRequest
      description: this request with body and header set
    content.vb: Public Function SetRawBody(data As Byte(), contentType As ContentType) As AlgoApiRequest
  overload: AlgoSdk.AlgoApiRequest.SetRawBody*
  nameWithType.vb: AlgoApiRequest.SetRawBody(Byte(), ContentType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.AlgoApiRequest.SetRawBody(System.Byte(), AlgoSdk.ContentType)
  name.vb: SetRawBody(Byte(), ContentType)
- uid: AlgoSdk.AlgoApiRequest.Get(System.String)
  commentId: M:AlgoSdk.AlgoApiRequest.Get(System.String)
  id: Get(System.String)
  parent: AlgoSdk.AlgoApiRequest
  langs:
  - csharp
  - vb
  name: Get(String)
  nameWithType: AlgoApiRequest.Get(String)
  fullName: AlgoSdk.AlgoApiRequest.Get(System.String)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Get
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiRequest.cs
    startLine: 128
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nCreate a GET request\n"
  example: []
  syntax:
    content: public static AlgoApiRequest Get(string url)
    parameters:
    - id: url
      type: System.String
      description: The url for this request
    return:
      type: AlgoSdk.AlgoApiRequest
      description: A new GET request
    content.vb: Public Shared Function Get(url As String) As AlgoApiRequest
  overload: AlgoSdk.AlgoApiRequest.Get*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AlgoSdk.AlgoApiRequest.Post(System.String)
  commentId: M:AlgoSdk.AlgoApiRequest.Post(System.String)
  id: Post(System.String)
  parent: AlgoSdk.AlgoApiRequest
  langs:
  - csharp
  - vb
  name: Post(String)
  nameWithType: AlgoApiRequest.Post(String)
  fullName: AlgoSdk.AlgoApiRequest.Post(System.String)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Post
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiRequest.cs
    startLine: 139
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nCreate a POST request\n"
  example: []
  syntax:
    content: public static AlgoApiRequest Post(string url)
    parameters:
    - id: url
      type: System.String
      description: The url for this request
    return:
      type: AlgoSdk.AlgoApiRequest
      description: A new POST request
    content.vb: Public Shared Function Post(url As String) As AlgoApiRequest
  overload: AlgoSdk.AlgoApiRequest.Post*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AlgoSdk.AlgoApiRequest.Delete(System.String)
  commentId: M:AlgoSdk.AlgoApiRequest.Delete(System.String)
  id: Delete(System.String)
  parent: AlgoSdk.AlgoApiRequest
  langs:
  - csharp
  - vb
  name: Delete(String)
  nameWithType: AlgoApiRequest.Delete(String)
  fullName: AlgoSdk.AlgoApiRequest.Delete(System.String)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Delete
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiRequest.cs
    startLine: 150
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nCreate a DELETE request\n"
  example: []
  syntax:
    content: public static AlgoApiRequest Delete(string url)
    parameters:
    - id: url
      type: System.String
      description: The url for this request
    return:
      type: AlgoSdk.AlgoApiRequest
      description: A new DELETE request
    content.vb: Public Shared Function Delete(url As String) As AlgoApiRequest
  overload: AlgoSdk.AlgoApiRequest.Delete*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: UnityEngine.Networking.UnityWebRequest
  commentId: T:UnityEngine.Networking.UnityWebRequest
  parent: UnityEngine.Networking
  isExternal: true
  name: UnityWebRequest
  nameWithType: UnityWebRequest
  fullName: UnityEngine.Networking.UnityWebRequest
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Networking
  commentId: N:UnityEngine.Networking
  isExternal: true
  name: UnityEngine.Networking
  nameWithType: UnityEngine.Networking
  fullName: UnityEngine.Networking
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AlgoSdk.AlgoApiRequest.SetToken*
  commentId: Overload:AlgoSdk.AlgoApiRequest.SetToken
  name: SetToken
  nameWithType: AlgoApiRequest.SetToken
  fullName: AlgoSdk.AlgoApiRequest.SetToken
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AlgoSdk.AlgoApiRequest
  commentId: T:AlgoSdk.AlgoApiRequest
  parent: AlgoSdk
  name: AlgoApiRequest
  nameWithType: AlgoApiRequest
  fullName: AlgoSdk.AlgoApiRequest
- uid: AlgoSdk.AlgoApiRequest.Sent
  commentId: T:AlgoSdk.AlgoApiRequest.Sent
  parent: AlgoSdk
  name: AlgoApiRequest.Sent
  nameWithType: AlgoApiRequest.Sent
  fullName: AlgoSdk.AlgoApiRequest.Sent
- uid: AlgoSdk.AlgoApiRequest.Send*
  commentId: Overload:AlgoSdk.AlgoApiRequest.Send
  name: Send
  nameWithType: AlgoApiRequest.Send
  fullName: AlgoSdk.AlgoApiRequest.Send
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.IProgress`1
  commentId: T:System.IProgress`1
  isExternal: true
- uid: AlgoSdk.AlgoApiRequest.Sent`1
  commentId: T:AlgoSdk.AlgoApiRequest.Sent`1
  name: AlgoApiRequest.Sent<TProgress>
  nameWithType: AlgoApiRequest.Sent<TProgress>
  fullName: AlgoSdk.AlgoApiRequest.Sent<TProgress>
  nameWithType.vb: AlgoApiRequest.Sent(Of TProgress)
  fullName.vb: AlgoSdk.AlgoApiRequest.Sent(Of TProgress)
  name.vb: AlgoApiRequest.Sent(Of TProgress)
  spec.csharp:
  - uid: AlgoSdk.AlgoApiRequest.Sent`1
    name: AlgoApiRequest.Sent
    nameWithType: AlgoApiRequest.Sent
    fullName: AlgoSdk.AlgoApiRequest.Sent
  - name: <
    nameWithType: <
    fullName: <
  - name: TProgress
    nameWithType: TProgress
    fullName: TProgress
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.AlgoApiRequest.Sent`1
    name: AlgoApiRequest.Sent
    nameWithType: AlgoApiRequest.Sent
    fullName: AlgoSdk.AlgoApiRequest.Sent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TProgress
    nameWithType: TProgress
    fullName: TProgress
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TProgress}'
  commentId: '!:TProgress'
  definition: TProgress
  name: TProgress
  nameWithType: TProgress
  fullName: TProgress
- uid: AlgoSdk.AlgoApiRequest.Sent{{TProgress}}
  commentId: T:AlgoSdk.AlgoApiRequest.Sent{``0}
  parent: AlgoSdk
  definition: AlgoSdk.AlgoApiRequest.Sent`1
  name: AlgoApiRequest.Sent<TProgress>
  nameWithType: AlgoApiRequest.Sent<TProgress>
  fullName: AlgoSdk.AlgoApiRequest.Sent<TProgress>
  nameWithType.vb: AlgoApiRequest.Sent(Of TProgress)
  fullName.vb: AlgoSdk.AlgoApiRequest.Sent(Of TProgress)
  name.vb: AlgoApiRequest.Sent(Of TProgress)
  spec.csharp:
  - uid: AlgoSdk.AlgoApiRequest.Sent`1
    name: AlgoApiRequest.Sent
    nameWithType: AlgoApiRequest.Sent
    fullName: AlgoSdk.AlgoApiRequest.Sent
  - name: <
    nameWithType: <
    fullName: <
  - name: TProgress
    nameWithType: TProgress
    fullName: TProgress
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.AlgoApiRequest.Sent`1
    name: AlgoApiRequest.Sent
    nameWithType: AlgoApiRequest.Sent
    fullName: AlgoSdk.AlgoApiRequest.Sent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TProgress
    nameWithType: TProgress
    fullName: TProgress
  - name: )
    nameWithType: )
    fullName: )
- uid: TProgress
  name: TProgress
  nameWithType: TProgress
  fullName: TProgress
- uid: AlgoSdk.AlgoApiRequest.SetJsonBody*
  commentId: Overload:AlgoSdk.AlgoApiRequest.SetJsonBody
  name: SetJsonBody
  nameWithType: AlgoApiRequest.SetJsonBody
  fullName: AlgoSdk.AlgoApiRequest.SetJsonBody
- uid: Unity.Collections.NativeText
  commentId: T:Unity.Collections.NativeText
  parent: Unity.Collections
  name: NativeText
  nameWithType: NativeText
  fullName: Unity.Collections.NativeText
- uid: Unity.Collections
  commentId: N:Unity.Collections
  name: Unity.Collections
  nameWithType: Unity.Collections
  fullName: Unity.Collections
- uid: '{TBody}'
  commentId: '!:TBody'
  definition: TBody
  name: TBody
  nameWithType: TBody
  fullName: TBody
- uid: TBody
  commentId: '!:TBody'
  name: TBody
  nameWithType: TBody
  fullName: TBody
- uid: AlgoSdk.AlgoApiRequest.SetPlainTextBody*
  commentId: Overload:AlgoSdk.AlgoApiRequest.SetPlainTextBody
  name: SetPlainTextBody
  nameWithType: AlgoApiRequest.SetPlainTextBody
  fullName: AlgoSdk.AlgoApiRequest.SetPlainTextBody
- uid: AlgoSdk.AlgoApiRequest.SetMessagePackBody*
  commentId: Overload:AlgoSdk.AlgoApiRequest.SetMessagePackBody
  name: SetMessagePackBody
  nameWithType: AlgoApiRequest.SetMessagePackBody
  fullName: AlgoSdk.AlgoApiRequest.SetMessagePackBody
- uid: Unity.Collections.NativeArray{System.Byte}.ReadOnly
  commentId: T:Unity.Collections.NativeArray{System.Byte}.ReadOnly
  parent: Unity.Collections
  definition: Unity.Collections.NativeArray`1.ReadOnly
  name: NativeArray.ReadOnly<>
  nameWithType: NativeArray.ReadOnly<>
  fullName: Unity.Collections.NativeArray.ReadOnly<>
  nameWithType.vb: NativeArray.ReadOnly(Of )
  fullName.vb: Unity.Collections.NativeArray.ReadOnly(Of )
  name.vb: NativeArray.ReadOnly(Of )
  spec.csharp:
  - uid: Unity.Collections.NativeArray`1.ReadOnly
    name: NativeArray.ReadOnly
    nameWithType: NativeArray.ReadOnly
    fullName: Unity.Collections.NativeArray.ReadOnly
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Unity.Collections.NativeArray`1.ReadOnly
    name: NativeArray.ReadOnly
    nameWithType: NativeArray.ReadOnly
    fullName: Unity.Collections.NativeArray.ReadOnly
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Collections.NativeArray`1.ReadOnly
  commentId: T:Unity.Collections.NativeArray`1.ReadOnly
  isExternal: true
  name: NativeArray.ReadOnly<>
  nameWithType: NativeArray.ReadOnly<>
  fullName: Unity.Collections.NativeArray.ReadOnly<>
  nameWithType.vb: NativeArray.ReadOnly(Of )
  fullName.vb: Unity.Collections.NativeArray.ReadOnly(Of )
  name.vb: NativeArray.ReadOnly(Of )
  spec.csharp:
  - uid: Unity.Collections.NativeArray`1.ReadOnly
    name: NativeArray.ReadOnly
    nameWithType: NativeArray.ReadOnly
    fullName: Unity.Collections.NativeArray.ReadOnly
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Unity.Collections.NativeArray`1.ReadOnly
    name: NativeArray.ReadOnly
    nameWithType: NativeArray.ReadOnly
    fullName: Unity.Collections.NativeArray.ReadOnly
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.AlgoApiRequest.SetRawBody*
  commentId: Overload:AlgoSdk.AlgoApiRequest.SetRawBody
  name: SetRawBody
  nameWithType: AlgoApiRequest.SetRawBody
  fullName: AlgoSdk.AlgoApiRequest.SetRawBody
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AlgoSdk.ContentType
  commentId: T:AlgoSdk.ContentType
  parent: AlgoSdk
  name: ContentType
  nameWithType: ContentType
  fullName: AlgoSdk.ContentType
- uid: AlgoSdk.AlgoApiRequest.Get*
  commentId: Overload:AlgoSdk.AlgoApiRequest.Get
  name: Get
  nameWithType: AlgoApiRequest.Get
  fullName: AlgoSdk.AlgoApiRequest.Get
- uid: AlgoSdk.AlgoApiRequest.Post*
  commentId: Overload:AlgoSdk.AlgoApiRequest.Post
  name: Post
  nameWithType: AlgoApiRequest.Post
  fullName: AlgoSdk.AlgoApiRequest.Post
- uid: AlgoSdk.AlgoApiRequest.Delete*
  commentId: Overload:AlgoSdk.AlgoApiRequest.Delete
  name: Delete
  nameWithType: AlgoApiRequest.Delete
  fullName: AlgoSdk.AlgoApiRequest.Delete
