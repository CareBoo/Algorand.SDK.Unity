### YamlMime:ManagedReference
items:
- uid: AlgoSdk.IndexerClient
  commentId: T:AlgoSdk.IndexerClient
  id: IndexerClient
  parent: AlgoSdk
  children:
  - AlgoSdk.IndexerClient.#ctor(System.String,System.String)
  - AlgoSdk.IndexerClient.Address
  - AlgoSdk.IndexerClient.GetAccount(AlgoSdk.Address,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64})
  - AlgoSdk.IndexerClient.GetAccounts(AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Address,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},AlgoSdk.Optional{System.UInt64})
  - AlgoSdk.IndexerClient.GetAccountTransactions(AlgoSdk.Address,System.DateTime,AlgoSdk.Optional{System.UInt64},System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.SignatureType,AlgoSdk.TransactionType,AlgoSdk.TransactionId)
  - AlgoSdk.IndexerClient.GetApplication(System.UInt64,AlgoSdk.Optional{System.Boolean})
  - AlgoSdk.IndexerClient.GetApplications(AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes})
  - AlgoSdk.IndexerClient.GetAsset(System.UInt64,AlgoSdk.Optional{System.Boolean})
  - AlgoSdk.IndexerClient.GetAssetBalances(System.UInt64,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},AlgoSdk.Optional{System.UInt64})
  - AlgoSdk.IndexerClient.GetAssets(AlgoSdk.Optional{System.UInt64},AlgoSdk.Address,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},System.String,AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String)
  - AlgoSdk.IndexerClient.GetAssetTransactions(System.UInt64,AlgoSdk.Address,AlgoSdk.AddressRole,System.DateTime,System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.SignatureType,AlgoSdk.TransactionType,AlgoSdk.TransactionId)
  - AlgoSdk.IndexerClient.GetBlock(System.UInt64)
  - AlgoSdk.IndexerClient.GetHealth
  - AlgoSdk.IndexerClient.GetTransaction(AlgoSdk.TransactionId)
  - AlgoSdk.IndexerClient.GetTransactions(AlgoSdk.Address,AlgoSdk.AddressRole,System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.SignatureType,AlgoSdk.TransactionType,AlgoSdk.TransactionId)
  - AlgoSdk.IndexerClient.Token
  - AlgoSdk.IndexerClient.TokenHeader
  langs:
  - csharp
  - vb
  name: IndexerClient
  nameWithType: IndexerClient
  fullName: AlgoSdk.IndexerClient
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: IndexerClient
    path: ../CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
    startLine: 12
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nA client for accessing the indexer service\n"
  remarks: "\nThe indexer service is responsible for querying the blockchain\n"
  example: []
  syntax:
    content: 'public struct IndexerClient : IIndexerClient, IAlgoApiClient'
    content.vb: >-
      Public Structure IndexerClient
          Implements IIndexerClient, IAlgoApiClient
  implements:
  - AlgoSdk.IIndexerClient
  - AlgoSdk.IAlgoApiClient
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - AlgoSdk.IndexerClient.AlgoSdk.TokenizedClientExtensions.GetUrl``1(System.String)
  - AlgoSdk.IndexerClient.AlgoSdk.TokenizedClientExtensions.Get``1(System.String)
  - AlgoSdk.IndexerClient.AlgoSdk.TokenizedClientExtensions.Post``1(System.String)
  - AlgoSdk.IndexerClient.AlgoSdk.TokenizedClientExtensions.Delete``1(System.String)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: AlgoSdk.IndexerClient.#ctor(System.String,System.String)
  commentId: M:AlgoSdk.IndexerClient.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: AlgoSdk.IndexerClient
  langs:
  - csharp
  - vb
  name: IndexerClient(String, String)
  nameWithType: IndexerClient.IndexerClient(String, String)
  fullName: AlgoSdk.IndexerClient.IndexerClient(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: .ctor
    path: ../CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
    startLine: 23
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nCreate a new indexer client\n"
  example: []
  syntax:
    content: public IndexerClient(string address, string token)
    parameters:
    - id: address
      type: System.String
      description: url of the service, including the port, e.g. <code>&quot;http://localhost:4001&quot;</code>
    - id: token
      type: System.String
      description: token used in authenticating to the service
    content.vb: Public Sub New(address As String, token As String)
  overload: AlgoSdk.IndexerClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.IndexerClient.Address
  commentId: P:AlgoSdk.IndexerClient.Address
  id: Address
  parent: AlgoSdk.IndexerClient
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: IndexerClient.Address
  fullName: AlgoSdk.IndexerClient.Address
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Address
    path: ../CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
    startLine: 29
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public string Address { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Address As String
  overload: AlgoSdk.IndexerClient.Address*
  implements:
  - AlgoSdk.IAlgoApiClient.Address
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AlgoSdk.IndexerClient.Token
  commentId: P:AlgoSdk.IndexerClient.Token
  id: Token
  parent: AlgoSdk.IndexerClient
  langs:
  - csharp
  - vb
  name: Token
  nameWithType: IndexerClient.Token
  fullName: AlgoSdk.IndexerClient.Token
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Token
    path: ../CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
    startLine: 31
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public string Token { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Token As String
  overload: AlgoSdk.IndexerClient.Token*
  implements:
  - AlgoSdk.IAlgoApiClient.Token
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AlgoSdk.IndexerClient.TokenHeader
  commentId: P:AlgoSdk.IndexerClient.TokenHeader
  id: TokenHeader
  parent: AlgoSdk.IndexerClient
  langs:
  - csharp
  - vb
  name: TokenHeader
  nameWithType: IndexerClient.TokenHeader
  fullName: AlgoSdk.IndexerClient.TokenHeader
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TokenHeader
    path: ../CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
    startLine: 33
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public string TokenHeader { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property TokenHeader As String
  overload: AlgoSdk.IndexerClient.TokenHeader*
  implements:
  - AlgoSdk.IAlgoApiClient.TokenHeader
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AlgoSdk.IndexerClient.GetHealth
  commentId: M:AlgoSdk.IndexerClient.GetHealth
  id: GetHealth
  parent: AlgoSdk.IndexerClient
  langs:
  - csharp
  - vb
  name: GetHealth()
  nameWithType: IndexerClient.GetHealth()
  fullName: AlgoSdk.IndexerClient.GetHealth()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetHealth
    path: ../CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
    startLine: 35
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public UniTask<AlgoApiResponse<HealthCheck>> GetHealth()
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.HealthCheck}}
    content.vb: Public Function GetHealth As UniTask(Of AlgoApiResponse(Of HealthCheck))
  overload: AlgoSdk.IndexerClient.GetHealth*
  implements:
  - AlgoSdk.IIndexerClient.GetHealth
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.IndexerClient.GetAccounts(AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Address,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},AlgoSdk.Optional{System.UInt64})
  commentId: M:AlgoSdk.IndexerClient.GetAccounts(AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Address,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},AlgoSdk.Optional{System.UInt64})
  id: GetAccounts(AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Address,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},AlgoSdk.Optional{System.UInt64})
  parent: AlgoSdk.IndexerClient
  langs:
  - csharp
  - vb
  name: GetAccounts(Optional<UInt64>, Optional<UInt64>, Address, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>, Optional<UInt64>)
  nameWithType: IndexerClient.GetAccounts(Optional<UInt64>, Optional<UInt64>, Address, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>, Optional<UInt64>)
  fullName: AlgoSdk.IndexerClient.GetAccounts(AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Address, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.Boolean>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<Unity.Collections.FixedString128Bytes>, AlgoSdk.Optional<System.UInt64>)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetAccounts
    path: ../CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
    startLine: 42
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public UniTask<AlgoApiResponse<AccountsResponse>> GetAccounts(Optional<ulong> applicationId = default(Optional<ulong>), Optional<ulong> assetId = default(Optional<ulong>), Address authAddr = default(Address), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), Optional<ulong> round = default(Optional<ulong>))
    parameters:
    - id: applicationId
      type: AlgoSdk.Optional{System.UInt64}
    - id: assetId
      type: AlgoSdk.Optional{System.UInt64}
    - id: authAddr
      type: AlgoSdk.Address
    - id: currencyGreaterThan
      type: AlgoSdk.Optional{System.UInt64}
    - id: currencyLessThan
      type: AlgoSdk.Optional{System.UInt64}
    - id: includeAll
      type: AlgoSdk.Optional{System.Boolean}
    - id: limit
      type: AlgoSdk.Optional{System.UInt64}
    - id: next
      type: AlgoSdk.Optional{Unity.Collections.FixedString128Bytes}
    - id: round
      type: AlgoSdk.Optional{System.UInt64}
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.AccountsResponse}}
    content.vb: Public Function GetAccounts(applicationId As  Optional  (Of ULong)  = Nothing, assetId As  Optional  (Of ULong)  = Nothing, authAddr As Address = Nothing, currencyGreaterThan As  Optional  (Of ULong)  = Nothing, currencyLessThan As  Optional  (Of ULong)  = Nothing, includeAll As  Optional  (Of Boolean)  = Nothing, limit As  Optional  (Of ULong)  = Nothing, next As  Optional  (Of FixedString128Bytes)  = Nothing, round As  Optional  (Of ULong)  = Nothing) As UniTask(Of AlgoApiResponse(Of AccountsResponse))
  overload: AlgoSdk.IndexerClient.GetAccounts*
  implements:
  - AlgoSdk.IIndexerClient.GetAccounts(AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Address,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},AlgoSdk.Optional{System.UInt64})
  nameWithType.vb: IndexerClient.GetAccounts(Optional(Of UInt64), Optional(Of UInt64), Address, Optional(Of UInt64), Optional(Of UInt64), Optional(Of Boolean), Optional(Of UInt64), Optional(Of FixedString128Bytes), Optional(Of UInt64))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.IndexerClient.GetAccounts(AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Address, AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.Boolean), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of Unity.Collections.FixedString128Bytes), AlgoSdk.Optional(Of System.UInt64))
  name.vb: GetAccounts(Optional(Of UInt64), Optional(Of UInt64), Address, Optional(Of UInt64), Optional(Of UInt64), Optional(Of Boolean), Optional(Of UInt64), Optional(Of FixedString128Bytes), Optional(Of UInt64))
- uid: AlgoSdk.IndexerClient.GetAccount(AlgoSdk.Address,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64})
  commentId: M:AlgoSdk.IndexerClient.GetAccount(AlgoSdk.Address,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64})
  id: GetAccount(AlgoSdk.Address,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64})
  parent: AlgoSdk.IndexerClient
  langs:
  - csharp
  - vb
  name: GetAccount(Address, Optional<Boolean>, Optional<UInt64>)
  nameWithType: IndexerClient.GetAccount(Address, Optional<Boolean>, Optional<UInt64>)
  fullName: AlgoSdk.IndexerClient.GetAccount(AlgoSdk.Address, AlgoSdk.Optional<System.Boolean>, AlgoSdk.Optional<System.UInt64>)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetAccount
    path: ../CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
    startLine: 72
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public UniTask<AlgoApiResponse<AccountResponse>> GetAccount(Address accountAddress, Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>))
    parameters:
    - id: accountAddress
      type: AlgoSdk.Address
    - id: includeAll
      type: AlgoSdk.Optional{System.Boolean}
    - id: round
      type: AlgoSdk.Optional{System.UInt64}
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.AccountResponse}}
    content.vb: Public Function GetAccount(accountAddress As Address, includeAll As  Optional  (Of Boolean)  = Nothing, round As  Optional  (Of ULong)  = Nothing) As UniTask(Of AlgoApiResponse(Of AccountResponse))
  overload: AlgoSdk.IndexerClient.GetAccount*
  implements:
  - AlgoSdk.IIndexerClient.GetAccount(AlgoSdk.Address,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64})
  nameWithType.vb: IndexerClient.GetAccount(Address, Optional(Of Boolean), Optional(Of UInt64))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.IndexerClient.GetAccount(AlgoSdk.Address, AlgoSdk.Optional(Of System.Boolean), AlgoSdk.Optional(Of System.UInt64))
  name.vb: GetAccount(Address, Optional(Of Boolean), Optional(Of UInt64))
- uid: AlgoSdk.IndexerClient.GetAccountTransactions(AlgoSdk.Address,System.DateTime,AlgoSdk.Optional{System.UInt64},System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.SignatureType,AlgoSdk.TransactionType,AlgoSdk.TransactionId)
  commentId: M:AlgoSdk.IndexerClient.GetAccountTransactions(AlgoSdk.Address,System.DateTime,AlgoSdk.Optional{System.UInt64},System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.SignatureType,AlgoSdk.TransactionType,AlgoSdk.TransactionId)
  id: GetAccountTransactions(AlgoSdk.Address,System.DateTime,AlgoSdk.Optional{System.UInt64},System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.SignatureType,AlgoSdk.TransactionType,AlgoSdk.TransactionId)
  parent: AlgoSdk.IndexerClient
  langs:
  - csharp
  - vb
  name: GetAccountTransactions(Address, DateTime, Optional<UInt64>, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId)
  nameWithType: IndexerClient.GetAccountTransactions(Address, DateTime, Optional<UInt64>, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId)
  fullName: AlgoSdk.IndexerClient.GetAccountTransactions(AlgoSdk.Address, System.DateTime, AlgoSdk.Optional<System.UInt64>, System.DateTime, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<Unity.Collections.FixedString128Bytes>, System.String, AlgoSdk.Optional<System.Boolean>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.SignatureType, AlgoSdk.TransactionType, AlgoSdk.TransactionId)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetAccountTransactions
    path: ../CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
    startLine: 89
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public UniTask<AlgoApiResponse<TransactionsResponse>> GetAccountTransactions(Address accountAddress, DateTime afterTime = default(DateTime), Optional<ulong> assetId = default(Optional<ulong>), DateTime beforeTime = default(DateTime), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<ulong> limit = default(Optional<ulong>), Optional<ulong> maxRound = default(Optional<ulong>), Optional<ulong> minRound = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>), SignatureType sigType = SignatureType.None, TransactionType txType = TransactionType.None, TransactionId txid = default(TransactionId))
    parameters:
    - id: accountAddress
      type: AlgoSdk.Address
    - id: afterTime
      type: System.DateTime
    - id: assetId
      type: AlgoSdk.Optional{System.UInt64}
    - id: beforeTime
      type: System.DateTime
    - id: currencyGreaterThan
      type: AlgoSdk.Optional{System.UInt64}
    - id: currencyLessThan
      type: AlgoSdk.Optional{System.UInt64}
    - id: limit
      type: AlgoSdk.Optional{System.UInt64}
    - id: maxRound
      type: AlgoSdk.Optional{System.UInt64}
    - id: minRound
      type: AlgoSdk.Optional{System.UInt64}
    - id: next
      type: AlgoSdk.Optional{Unity.Collections.FixedString128Bytes}
    - id: notePrefix
      type: System.String
    - id: rekeyTo
      type: AlgoSdk.Optional{System.Boolean}
    - id: round
      type: AlgoSdk.Optional{System.UInt64}
    - id: sigType
      type: AlgoSdk.SignatureType
    - id: txType
      type: AlgoSdk.TransactionType
    - id: txid
      type: AlgoSdk.TransactionId
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.TransactionsResponse}}
    content.vb: Public Function GetAccountTransactions(accountAddress As Address, afterTime As Date = Nothing, assetId As  Optional  (Of ULong)  = Nothing, beforeTime As Date = Nothing, currencyGreaterThan As  Optional  (Of ULong)  = Nothing, currencyLessThan As  Optional  (Of ULong)  = Nothing, limit As  Optional  (Of ULong)  = Nothing, maxRound As  Optional  (Of ULong)  = Nothing, minRound As  Optional  (Of ULong)  = Nothing, next As  Optional  (Of FixedString128Bytes)  = Nothing, notePrefix As String = Nothing, rekeyTo As  Optional  (Of Boolean)  = Nothing, round As  Optional  (Of ULong)  = Nothing, sigType As SignatureType = SignatureType.None, txType As TransactionType = TransactionType.None, txid As TransactionId = Nothing) As UniTask(Of AlgoApiResponse(Of TransactionsResponse))
  overload: AlgoSdk.IndexerClient.GetAccountTransactions*
  implements:
  - AlgoSdk.IIndexerClient.GetAccountTransactions(AlgoSdk.Address,System.DateTime,AlgoSdk.Optional{System.UInt64},System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.SignatureType,AlgoSdk.TransactionType,AlgoSdk.TransactionId)
  nameWithType.vb: IndexerClient.GetAccountTransactions(Address, DateTime, Optional(Of UInt64), DateTime, Optional(Of UInt64), Optional(Of UInt64), Optional(Of UInt64), Optional(Of UInt64), Optional(Of UInt64), Optional(Of FixedString128Bytes), String, Optional(Of Boolean), Optional(Of UInt64), SignatureType, TransactionType, TransactionId)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.IndexerClient.GetAccountTransactions(AlgoSdk.Address, System.DateTime, AlgoSdk.Optional(Of System.UInt64), System.DateTime, AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of Unity.Collections.FixedString128Bytes), System.String, AlgoSdk.Optional(Of System.Boolean), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.SignatureType, AlgoSdk.TransactionType, AlgoSdk.TransactionId)
  name.vb: GetAccountTransactions(Address, DateTime, Optional(Of UInt64), DateTime, Optional(Of UInt64), Optional(Of UInt64), Optional(Of UInt64), Optional(Of UInt64), Optional(Of UInt64), Optional(Of FixedString128Bytes), String, Optional(Of Boolean), Optional(Of UInt64), SignatureType, TransactionType, TransactionId)
- uid: AlgoSdk.IndexerClient.GetApplications(AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes})
  commentId: M:AlgoSdk.IndexerClient.GetApplications(AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes})
  id: GetApplications(AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes})
  parent: AlgoSdk.IndexerClient
  langs:
  - csharp
  - vb
  name: GetApplications(Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>)
  nameWithType: IndexerClient.GetApplications(Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>)
  fullName: AlgoSdk.IndexerClient.GetApplications(AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.Boolean>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<Unity.Collections.FixedString128Bytes>)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetApplications
    path: ../CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
    startLine: 132
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public UniTask<AlgoApiResponse<ApplicationsResponse>> GetApplications(Optional<ulong> applicationId = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>))
    parameters:
    - id: applicationId
      type: AlgoSdk.Optional{System.UInt64}
    - id: includeAll
      type: AlgoSdk.Optional{System.Boolean}
    - id: limit
      type: AlgoSdk.Optional{System.UInt64}
    - id: next
      type: AlgoSdk.Optional{Unity.Collections.FixedString128Bytes}
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ApplicationsResponse}}
    content.vb: Public Function GetApplications(applicationId As  Optional  (Of ULong)  = Nothing, includeAll As  Optional  (Of Boolean)  = Nothing, limit As  Optional  (Of ULong)  = Nothing, next As  Optional  (Of FixedString128Bytes)  = Nothing) As UniTask(Of AlgoApiResponse(Of ApplicationsResponse))
  overload: AlgoSdk.IndexerClient.GetApplications*
  implements:
  - AlgoSdk.IIndexerClient.GetApplications(AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes})
  nameWithType.vb: IndexerClient.GetApplications(Optional(Of UInt64), Optional(Of Boolean), Optional(Of UInt64), Optional(Of FixedString128Bytes))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.IndexerClient.GetApplications(AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.Boolean), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of Unity.Collections.FixedString128Bytes))
  name.vb: GetApplications(Optional(Of UInt64), Optional(Of Boolean), Optional(Of UInt64), Optional(Of FixedString128Bytes))
- uid: AlgoSdk.IndexerClient.GetApplication(System.UInt64,AlgoSdk.Optional{System.Boolean})
  commentId: M:AlgoSdk.IndexerClient.GetApplication(System.UInt64,AlgoSdk.Optional{System.Boolean})
  id: GetApplication(System.UInt64,AlgoSdk.Optional{System.Boolean})
  parent: AlgoSdk.IndexerClient
  langs:
  - csharp
  - vb
  name: GetApplication(UInt64, Optional<Boolean>)
  nameWithType: IndexerClient.GetApplication(UInt64, Optional<Boolean>)
  fullName: AlgoSdk.IndexerClient.GetApplication(System.UInt64, AlgoSdk.Optional<System.Boolean>)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetApplication
    path: ../CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
    startLine: 152
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public UniTask<AlgoApiResponse<ApplicationResponse>> GetApplication(ulong applicationId, Optional<bool> includeAll = default(Optional<bool>))
    parameters:
    - id: applicationId
      type: System.UInt64
    - id: includeAll
      type: AlgoSdk.Optional{System.Boolean}
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ApplicationResponse}}
    content.vb: Public Function GetApplication(applicationId As ULong, includeAll As  Optional  (Of Boolean)  = Nothing) As UniTask(Of AlgoApiResponse(Of ApplicationResponse))
  overload: AlgoSdk.IndexerClient.GetApplication*
  implements:
  - AlgoSdk.IIndexerClient.GetApplication(System.UInt64,AlgoSdk.Optional{System.Boolean})
  nameWithType.vb: IndexerClient.GetApplication(UInt64, Optional(Of Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.IndexerClient.GetApplication(System.UInt64, AlgoSdk.Optional(Of System.Boolean))
  name.vb: GetApplication(UInt64, Optional(Of Boolean))
- uid: AlgoSdk.IndexerClient.GetAssets(AlgoSdk.Optional{System.UInt64},AlgoSdk.Address,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},System.String,AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String)
  commentId: M:AlgoSdk.IndexerClient.GetAssets(AlgoSdk.Optional{System.UInt64},AlgoSdk.Address,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},System.String,AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String)
  id: GetAssets(AlgoSdk.Optional{System.UInt64},AlgoSdk.Address,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},System.String,AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String)
  parent: AlgoSdk.IndexerClient
  langs:
  - csharp
  - vb
  name: GetAssets(Optional<UInt64>, Address, Optional<Boolean>, Optional<UInt64>, String, Optional<FixedString128Bytes>, String)
  nameWithType: IndexerClient.GetAssets(Optional<UInt64>, Address, Optional<Boolean>, Optional<UInt64>, String, Optional<FixedString128Bytes>, String)
  fullName: AlgoSdk.IndexerClient.GetAssets(AlgoSdk.Optional<System.UInt64>, AlgoSdk.Address, AlgoSdk.Optional<System.Boolean>, AlgoSdk.Optional<System.UInt64>, System.String, AlgoSdk.Optional<Unity.Collections.FixedString128Bytes>, System.String)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetAssets
    path: ../CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
    startLine: 166
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public UniTask<AlgoApiResponse<AssetsResponse>> GetAssets(Optional<ulong> assetId = default(Optional<ulong>), Address creator = default(Address), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), string name = null, Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string unit = null)
    parameters:
    - id: assetId
      type: AlgoSdk.Optional{System.UInt64}
    - id: creator
      type: AlgoSdk.Address
    - id: includeAll
      type: AlgoSdk.Optional{System.Boolean}
    - id: limit
      type: AlgoSdk.Optional{System.UInt64}
    - id: name
      type: System.String
    - id: next
      type: AlgoSdk.Optional{Unity.Collections.FixedString128Bytes}
    - id: unit
      type: System.String
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.AssetsResponse}}
    content.vb: Public Function GetAssets(assetId As  Optional  (Of ULong)  = Nothing, creator As Address = Nothing, includeAll As  Optional  (Of Boolean)  = Nothing, limit As  Optional  (Of ULong)  = Nothing, name As String = Nothing, next As  Optional  (Of FixedString128Bytes)  = Nothing, unit As String = Nothing) As UniTask(Of AlgoApiResponse(Of AssetsResponse))
  overload: AlgoSdk.IndexerClient.GetAssets*
  implements:
  - AlgoSdk.IIndexerClient.GetAssets(AlgoSdk.Optional{System.UInt64},AlgoSdk.Address,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},System.String,AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String)
  nameWithType.vb: IndexerClient.GetAssets(Optional(Of UInt64), Address, Optional(Of Boolean), Optional(Of UInt64), String, Optional(Of FixedString128Bytes), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.IndexerClient.GetAssets(AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Address, AlgoSdk.Optional(Of System.Boolean), AlgoSdk.Optional(Of System.UInt64), System.String, AlgoSdk.Optional(Of Unity.Collections.FixedString128Bytes), System.String)
  name.vb: GetAssets(Optional(Of UInt64), Address, Optional(Of Boolean), Optional(Of UInt64), String, Optional(Of FixedString128Bytes), String)
- uid: AlgoSdk.IndexerClient.GetAsset(System.UInt64,AlgoSdk.Optional{System.Boolean})
  commentId: M:AlgoSdk.IndexerClient.GetAsset(System.UInt64,AlgoSdk.Optional{System.Boolean})
  id: GetAsset(System.UInt64,AlgoSdk.Optional{System.Boolean})
  parent: AlgoSdk.IndexerClient
  langs:
  - csharp
  - vb
  name: GetAsset(UInt64, Optional<Boolean>)
  nameWithType: IndexerClient.GetAsset(UInt64, Optional<Boolean>)
  fullName: AlgoSdk.IndexerClient.GetAsset(System.UInt64, AlgoSdk.Optional<System.Boolean>)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetAsset
    path: ../CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
    startLine: 191
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public UniTask<AlgoApiResponse<AssetResponse>> GetAsset(ulong assetId, Optional<bool> includeAll = default(Optional<bool>))
    parameters:
    - id: assetId
      type: System.UInt64
    - id: includeAll
      type: AlgoSdk.Optional{System.Boolean}
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.AssetResponse}}
    content.vb: Public Function GetAsset(assetId As ULong, includeAll As  Optional  (Of Boolean)  = Nothing) As UniTask(Of AlgoApiResponse(Of AssetResponse))
  overload: AlgoSdk.IndexerClient.GetAsset*
  implements:
  - AlgoSdk.IIndexerClient.GetAsset(System.UInt64,AlgoSdk.Optional{System.Boolean})
  nameWithType.vb: IndexerClient.GetAsset(UInt64, Optional(Of Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.IndexerClient.GetAsset(System.UInt64, AlgoSdk.Optional(Of System.Boolean))
  name.vb: GetAsset(UInt64, Optional(Of Boolean))
- uid: AlgoSdk.IndexerClient.GetAssetBalances(System.UInt64,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},AlgoSdk.Optional{System.UInt64})
  commentId: M:AlgoSdk.IndexerClient.GetAssetBalances(System.UInt64,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},AlgoSdk.Optional{System.UInt64})
  id: GetAssetBalances(System.UInt64,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},AlgoSdk.Optional{System.UInt64})
  parent: AlgoSdk.IndexerClient
  langs:
  - csharp
  - vb
  name: GetAssetBalances(UInt64, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>, Optional<UInt64>)
  nameWithType: IndexerClient.GetAssetBalances(UInt64, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>, Optional<UInt64>)
  fullName: AlgoSdk.IndexerClient.GetAssetBalances(System.UInt64, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.Boolean>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<Unity.Collections.FixedString128Bytes>, AlgoSdk.Optional<System.UInt64>)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetAssetBalances
    path: ../CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
    startLine: 205
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public UniTask<AlgoApiResponse<BalancesResponse>> GetAssetBalances(ulong assetId, Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), Optional<ulong> round = default(Optional<ulong>))
    parameters:
    - id: assetId
      type: System.UInt64
    - id: currencyGreaterThan
      type: AlgoSdk.Optional{System.UInt64}
    - id: currencyLessThan
      type: AlgoSdk.Optional{System.UInt64}
    - id: includeAll
      type: AlgoSdk.Optional{System.Boolean}
    - id: limit
      type: AlgoSdk.Optional{System.UInt64}
    - id: next
      type: AlgoSdk.Optional{Unity.Collections.FixedString128Bytes}
    - id: round
      type: AlgoSdk.Optional{System.UInt64}
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.BalancesResponse}}
    content.vb: Public Function GetAssetBalances(assetId As ULong, currencyGreaterThan As  Optional  (Of ULong)  = Nothing, currencyLessThan As  Optional  (Of ULong)  = Nothing, includeAll As  Optional  (Of Boolean)  = Nothing, limit As  Optional  (Of ULong)  = Nothing, next As  Optional  (Of FixedString128Bytes)  = Nothing, round As  Optional  (Of ULong)  = Nothing) As UniTask(Of AlgoApiResponse(Of BalancesResponse))
  overload: AlgoSdk.IndexerClient.GetAssetBalances*
  implements:
  - AlgoSdk.IIndexerClient.GetAssetBalances(System.UInt64,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},AlgoSdk.Optional{System.UInt64})
  nameWithType.vb: IndexerClient.GetAssetBalances(UInt64, Optional(Of UInt64), Optional(Of UInt64), Optional(Of Boolean), Optional(Of UInt64), Optional(Of FixedString128Bytes), Optional(Of UInt64))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.IndexerClient.GetAssetBalances(System.UInt64, AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.Boolean), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of Unity.Collections.FixedString128Bytes), AlgoSdk.Optional(Of System.UInt64))
  name.vb: GetAssetBalances(UInt64, Optional(Of UInt64), Optional(Of UInt64), Optional(Of Boolean), Optional(Of UInt64), Optional(Of FixedString128Bytes), Optional(Of UInt64))
- uid: AlgoSdk.IndexerClient.GetAssetTransactions(System.UInt64,AlgoSdk.Address,AlgoSdk.AddressRole,System.DateTime,System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.SignatureType,AlgoSdk.TransactionType,AlgoSdk.TransactionId)
  commentId: M:AlgoSdk.IndexerClient.GetAssetTransactions(System.UInt64,AlgoSdk.Address,AlgoSdk.AddressRole,System.DateTime,System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.SignatureType,AlgoSdk.TransactionType,AlgoSdk.TransactionId)
  id: GetAssetTransactions(System.UInt64,AlgoSdk.Address,AlgoSdk.AddressRole,System.DateTime,System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.SignatureType,AlgoSdk.TransactionType,AlgoSdk.TransactionId)
  parent: AlgoSdk.IndexerClient
  langs:
  - csharp
  - vb
  name: GetAssetTransactions(UInt64, Address, AddressRole, DateTime, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId)
  nameWithType: IndexerClient.GetAssetTransactions(UInt64, Address, AddressRole, DateTime, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId)
  fullName: AlgoSdk.IndexerClient.GetAssetTransactions(System.UInt64, AlgoSdk.Address, AlgoSdk.AddressRole, System.DateTime, System.DateTime, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.Boolean>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<Unity.Collections.FixedString128Bytes>, System.String, AlgoSdk.Optional<System.Boolean>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.SignatureType, AlgoSdk.TransactionType, AlgoSdk.TransactionId)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetAssetTransactions
    path: ../CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
    startLine: 230
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public UniTask<AlgoApiResponse<TransactionsResponse>> GetAssetTransactions(ulong assetId, Address address = default(Address), AddressRole addressRole = AddressRole.None, DateTime afterTime = default(DateTime), DateTime beforeTime = default(DateTime), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> excludeCloseTo = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<ulong> maxRound = default(Optional<ulong>), Optional<ulong> minRound = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>), SignatureType sigType = SignatureType.None, TransactionType txType = TransactionType.None, TransactionId txid = default(TransactionId))
    parameters:
    - id: assetId
      type: System.UInt64
    - id: address
      type: AlgoSdk.Address
    - id: addressRole
      type: AlgoSdk.AddressRole
    - id: afterTime
      type: System.DateTime
    - id: beforeTime
      type: System.DateTime
    - id: currencyGreaterThan
      type: AlgoSdk.Optional{System.UInt64}
    - id: currencyLessThan
      type: AlgoSdk.Optional{System.UInt64}
    - id: excludeCloseTo
      type: AlgoSdk.Optional{System.Boolean}
    - id: limit
      type: AlgoSdk.Optional{System.UInt64}
    - id: maxRound
      type: AlgoSdk.Optional{System.UInt64}
    - id: minRound
      type: AlgoSdk.Optional{System.UInt64}
    - id: next
      type: AlgoSdk.Optional{Unity.Collections.FixedString128Bytes}
    - id: notePrefix
      type: System.String
    - id: rekeyTo
      type: AlgoSdk.Optional{System.Boolean}
    - id: round
      type: AlgoSdk.Optional{System.UInt64}
    - id: sigType
      type: AlgoSdk.SignatureType
    - id: txType
      type: AlgoSdk.TransactionType
    - id: txid
      type: AlgoSdk.TransactionId
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.TransactionsResponse}}
    content.vb: Public Function GetAssetTransactions(assetId As ULong, address As Address = Nothing, addressRole As AddressRole = AddressRole.None, afterTime As Date = Nothing, beforeTime As Date = Nothing, currencyGreaterThan As  Optional  (Of ULong)  = Nothing, currencyLessThan As  Optional  (Of ULong)  = Nothing, excludeCloseTo As  Optional  (Of Boolean)  = Nothing, limit As  Optional  (Of ULong)  = Nothing, maxRound As  Optional  (Of ULong)  = Nothing, minRound As  Optional  (Of ULong)  = Nothing, next As  Optional  (Of FixedString128Bytes)  = Nothing, notePrefix As String = Nothing, rekeyTo As  Optional  (Of Boolean)  = Nothing, round As  Optional  (Of ULong)  = Nothing, sigType As SignatureType = SignatureType.None, txType As TransactionType = TransactionType.None, txid As TransactionId = Nothing) As UniTask(Of AlgoApiResponse(Of TransactionsResponse))
  overload: AlgoSdk.IndexerClient.GetAssetTransactions*
  implements:
  - AlgoSdk.IIndexerClient.GetAssetTransactions(System.UInt64,AlgoSdk.Address,AlgoSdk.AddressRole,System.DateTime,System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.SignatureType,AlgoSdk.TransactionType,AlgoSdk.TransactionId)
  nameWithType.vb: IndexerClient.GetAssetTransactions(UInt64, Address, AddressRole, DateTime, DateTime, Optional(Of UInt64), Optional(Of UInt64), Optional(Of Boolean), Optional(Of UInt64), Optional(Of UInt64), Optional(Of UInt64), Optional(Of FixedString128Bytes), String, Optional(Of Boolean), Optional(Of UInt64), SignatureType, TransactionType, TransactionId)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.IndexerClient.GetAssetTransactions(System.UInt64, AlgoSdk.Address, AlgoSdk.AddressRole, System.DateTime, System.DateTime, AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.Boolean), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of Unity.Collections.FixedString128Bytes), System.String, AlgoSdk.Optional(Of System.Boolean), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.SignatureType, AlgoSdk.TransactionType, AlgoSdk.TransactionId)
  name.vb: GetAssetTransactions(UInt64, Address, AddressRole, DateTime, DateTime, Optional(Of UInt64), Optional(Of UInt64), Optional(Of Boolean), Optional(Of UInt64), Optional(Of UInt64), Optional(Of UInt64), Optional(Of FixedString128Bytes), String, Optional(Of Boolean), Optional(Of UInt64), SignatureType, TransactionType, TransactionId)
- uid: AlgoSdk.IndexerClient.GetBlock(System.UInt64)
  commentId: M:AlgoSdk.IndexerClient.GetBlock(System.UInt64)
  id: GetBlock(System.UInt64)
  parent: AlgoSdk.IndexerClient
  langs:
  - csharp
  - vb
  name: GetBlock(UInt64)
  nameWithType: IndexerClient.GetBlock(UInt64)
  fullName: AlgoSdk.IndexerClient.GetBlock(System.UInt64)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetBlock
    path: ../CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
    startLine: 277
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public UniTask<AlgoApiResponse<Block>> GetBlock(ulong round)
    parameters:
    - id: round
      type: System.UInt64
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.Block}}
    content.vb: Public Function GetBlock(round As ULong) As UniTask(Of AlgoApiResponse(Of Block))
  overload: AlgoSdk.IndexerClient.GetBlock*
  implements:
  - AlgoSdk.IIndexerClient.GetBlock(System.UInt64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.IndexerClient.GetTransactions(AlgoSdk.Address,AlgoSdk.AddressRole,System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.SignatureType,AlgoSdk.TransactionType,AlgoSdk.TransactionId)
  commentId: M:AlgoSdk.IndexerClient.GetTransactions(AlgoSdk.Address,AlgoSdk.AddressRole,System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.SignatureType,AlgoSdk.TransactionType,AlgoSdk.TransactionId)
  id: GetTransactions(AlgoSdk.Address,AlgoSdk.AddressRole,System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.SignatureType,AlgoSdk.TransactionType,AlgoSdk.TransactionId)
  parent: AlgoSdk.IndexerClient
  langs:
  - csharp
  - vb
  name: GetTransactions(Address, AddressRole, DateTime, Optional<UInt64>, Optional<UInt64>, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId)
  nameWithType: IndexerClient.GetTransactions(Address, AddressRole, DateTime, Optional<UInt64>, Optional<UInt64>, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId)
  fullName: AlgoSdk.IndexerClient.GetTransactions(AlgoSdk.Address, AlgoSdk.AddressRole, System.DateTime, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.UInt64>, System.DateTime, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.Boolean>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<Unity.Collections.FixedString128Bytes>, System.String, AlgoSdk.Optional<System.Boolean>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.SignatureType, AlgoSdk.TransactionType, AlgoSdk.TransactionId)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetTransactions
    path: ../CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
    startLine: 282
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public UniTask<AlgoApiResponse<TransactionsResponse>> GetTransactions(Address address = default(Address), AddressRole addressRole = AddressRole.None, DateTime afterTime = default(DateTime), Optional<ulong> applicationId = default(Optional<ulong>), Optional<ulong> assetId = default(Optional<ulong>), DateTime beforeTime = default(DateTime), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> excludeCloseTo = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<ulong> maxRound = default(Optional<ulong>), Optional<ulong> minRound = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>), SignatureType sigType = SignatureType.None, TransactionType txType = TransactionType.None, TransactionId txid = default(TransactionId))
    parameters:
    - id: address
      type: AlgoSdk.Address
    - id: addressRole
      type: AlgoSdk.AddressRole
    - id: afterTime
      type: System.DateTime
    - id: applicationId
      type: AlgoSdk.Optional{System.UInt64}
    - id: assetId
      type: AlgoSdk.Optional{System.UInt64}
    - id: beforeTime
      type: System.DateTime
    - id: currencyGreaterThan
      type: AlgoSdk.Optional{System.UInt64}
    - id: currencyLessThan
      type: AlgoSdk.Optional{System.UInt64}
    - id: excludeCloseTo
      type: AlgoSdk.Optional{System.Boolean}
    - id: limit
      type: AlgoSdk.Optional{System.UInt64}
    - id: maxRound
      type: AlgoSdk.Optional{System.UInt64}
    - id: minRound
      type: AlgoSdk.Optional{System.UInt64}
    - id: next
      type: AlgoSdk.Optional{Unity.Collections.FixedString128Bytes}
    - id: notePrefix
      type: System.String
    - id: rekeyTo
      type: AlgoSdk.Optional{System.Boolean}
    - id: round
      type: AlgoSdk.Optional{System.UInt64}
    - id: sigType
      type: AlgoSdk.SignatureType
    - id: txType
      type: AlgoSdk.TransactionType
    - id: txid
      type: AlgoSdk.TransactionId
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.TransactionsResponse}}
    content.vb: Public Function GetTransactions(address As Address = Nothing, addressRole As AddressRole = AddressRole.None, afterTime As Date = Nothing, applicationId As  Optional  (Of ULong)  = Nothing, assetId As  Optional  (Of ULong)  = Nothing, beforeTime As Date = Nothing, currencyGreaterThan As  Optional  (Of ULong)  = Nothing, currencyLessThan As  Optional  (Of ULong)  = Nothing, excludeCloseTo As  Optional  (Of Boolean)  = Nothing, limit As  Optional  (Of ULong)  = Nothing, maxRound As  Optional  (Of ULong)  = Nothing, minRound As  Optional  (Of ULong)  = Nothing, next As  Optional  (Of FixedString128Bytes)  = Nothing, notePrefix As String = Nothing, rekeyTo As  Optional  (Of Boolean)  = Nothing, round As  Optional  (Of ULong)  = Nothing, sigType As SignatureType = SignatureType.None, txType As TransactionType = TransactionType.None, txid As TransactionId = Nothing) As UniTask(Of AlgoApiResponse(Of TransactionsResponse))
  overload: AlgoSdk.IndexerClient.GetTransactions*
  implements:
  - AlgoSdk.IIndexerClient.GetTransactions(AlgoSdk.Address,AlgoSdk.AddressRole,System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.SignatureType,AlgoSdk.TransactionType,AlgoSdk.TransactionId)
  nameWithType.vb: IndexerClient.GetTransactions(Address, AddressRole, DateTime, Optional(Of UInt64), Optional(Of UInt64), DateTime, Optional(Of UInt64), Optional(Of UInt64), Optional(Of Boolean), Optional(Of UInt64), Optional(Of UInt64), Optional(Of UInt64), Optional(Of FixedString128Bytes), String, Optional(Of Boolean), Optional(Of UInt64), SignatureType, TransactionType, TransactionId)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.IndexerClient.GetTransactions(AlgoSdk.Address, AlgoSdk.AddressRole, System.DateTime, AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.UInt64), System.DateTime, AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.Boolean), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of Unity.Collections.FixedString128Bytes), System.String, AlgoSdk.Optional(Of System.Boolean), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.SignatureType, AlgoSdk.TransactionType, AlgoSdk.TransactionId)
  name.vb: GetTransactions(Address, AddressRole, DateTime, Optional(Of UInt64), Optional(Of UInt64), DateTime, Optional(Of UInt64), Optional(Of UInt64), Optional(Of Boolean), Optional(Of UInt64), Optional(Of UInt64), Optional(Of UInt64), Optional(Of FixedString128Bytes), String, Optional(Of Boolean), Optional(Of UInt64), SignatureType, TransactionType, TransactionId)
- uid: AlgoSdk.IndexerClient.GetTransaction(AlgoSdk.TransactionId)
  commentId: M:AlgoSdk.IndexerClient.GetTransaction(AlgoSdk.TransactionId)
  id: GetTransaction(AlgoSdk.TransactionId)
  parent: AlgoSdk.IndexerClient
  langs:
  - csharp
  - vb
  name: GetTransaction(TransactionId)
  nameWithType: IndexerClient.GetTransaction(TransactionId)
  fullName: AlgoSdk.IndexerClient.GetTransaction(AlgoSdk.TransactionId)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetTransaction
    path: ../CareBoo.AlgoSdk/AlgoApi/Indexer/IndexerClient.cs
    startLine: 332
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public UniTask<AlgoApiResponse<TransactionResponse>> GetTransaction(TransactionId txid)
    parameters:
    - id: txid
      type: AlgoSdk.TransactionId
    return:
      type: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.TransactionResponse}}
    content.vb: Public Function GetTransaction(txid As TransactionId) As UniTask(Of AlgoApiResponse(Of TransactionResponse))
  overload: AlgoSdk.IndexerClient.GetTransaction*
  implements:
  - AlgoSdk.IIndexerClient.GetTransaction(AlgoSdk.TransactionId)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: AlgoSdk.IIndexerClient
  commentId: T:AlgoSdk.IIndexerClient
  parent: AlgoSdk
  name: IIndexerClient
  nameWithType: IIndexerClient
  fullName: AlgoSdk.IIndexerClient
- uid: AlgoSdk.IAlgoApiClient
  commentId: T:AlgoSdk.IAlgoApiClient
  parent: AlgoSdk
  name: IAlgoApiClient
  nameWithType: IAlgoApiClient
  fullName: AlgoSdk.IAlgoApiClient
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IndexerClient.AlgoSdk.TokenizedClientExtensions.GetUrl``1(System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.GetUrl``1(``0,System.String)
  parent: AlgoSdk.TokenizedClientExtensions
  definition: AlgoSdk.TokenizedClientExtensions.GetUrl``1(``0,System.String)
  name: GetUrl<IndexerClient>(String)
  nameWithType: TokenizedClientExtensions.GetUrl<IndexerClient>(String)
  fullName: AlgoSdk.TokenizedClientExtensions.GetUrl<AlgoSdk.IndexerClient>(System.String)
  nameWithType.vb: TokenizedClientExtensions.GetUrl(Of IndexerClient)(String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.GetUrl(Of AlgoSdk.IndexerClient)(System.String)
  name.vb: GetUrl(Of IndexerClient)(String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.GetUrl``1(System.String)
    name: GetUrl<IndexerClient>
    nameWithType: TokenizedClientExtensions.GetUrl<IndexerClient>
    fullName: AlgoSdk.TokenizedClientExtensions.GetUrl<AlgoSdk.IndexerClient>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.GetUrl``1(System.String)
    name: GetUrl(Of IndexerClient)
    nameWithType: TokenizedClientExtensions.GetUrl(Of IndexerClient)
    fullName: AlgoSdk.TokenizedClientExtensions.GetUrl(Of AlgoSdk.IndexerClient)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IndexerClient.AlgoSdk.TokenizedClientExtensions.Get``1(System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.Get``1(``0,System.String)
  parent: AlgoSdk.TokenizedClientExtensions
  definition: AlgoSdk.TokenizedClientExtensions.Get``1(``0,System.String)
  name: Get<IndexerClient>(String)
  nameWithType: TokenizedClientExtensions.Get<IndexerClient>(String)
  fullName: AlgoSdk.TokenizedClientExtensions.Get<AlgoSdk.IndexerClient>(System.String)
  nameWithType.vb: TokenizedClientExtensions.Get(Of IndexerClient)(String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.Get(Of AlgoSdk.IndexerClient)(System.String)
  name.vb: Get(Of IndexerClient)(String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.Get``1(System.String)
    name: Get<IndexerClient>
    nameWithType: TokenizedClientExtensions.Get<IndexerClient>
    fullName: AlgoSdk.TokenizedClientExtensions.Get<AlgoSdk.IndexerClient>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.Get``1(System.String)
    name: Get(Of IndexerClient)
    nameWithType: TokenizedClientExtensions.Get(Of IndexerClient)
    fullName: AlgoSdk.TokenizedClientExtensions.Get(Of AlgoSdk.IndexerClient)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IndexerClient.AlgoSdk.TokenizedClientExtensions.Post``1(System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.Post``1(``0,System.String)
  parent: AlgoSdk.TokenizedClientExtensions
  definition: AlgoSdk.TokenizedClientExtensions.Post``1(``0,System.String)
  name: Post<IndexerClient>(String)
  nameWithType: TokenizedClientExtensions.Post<IndexerClient>(String)
  fullName: AlgoSdk.TokenizedClientExtensions.Post<AlgoSdk.IndexerClient>(System.String)
  nameWithType.vb: TokenizedClientExtensions.Post(Of IndexerClient)(String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.Post(Of AlgoSdk.IndexerClient)(System.String)
  name.vb: Post(Of IndexerClient)(String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.Post``1(System.String)
    name: Post<IndexerClient>
    nameWithType: TokenizedClientExtensions.Post<IndexerClient>
    fullName: AlgoSdk.TokenizedClientExtensions.Post<AlgoSdk.IndexerClient>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.Post``1(System.String)
    name: Post(Of IndexerClient)
    nameWithType: TokenizedClientExtensions.Post(Of IndexerClient)
    fullName: AlgoSdk.TokenizedClientExtensions.Post(Of AlgoSdk.IndexerClient)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IndexerClient.AlgoSdk.TokenizedClientExtensions.Delete``1(System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.Delete``1(``0,System.String)
  parent: AlgoSdk.TokenizedClientExtensions
  definition: AlgoSdk.TokenizedClientExtensions.Delete``1(``0,System.String)
  name: Delete<IndexerClient>(String)
  nameWithType: TokenizedClientExtensions.Delete<IndexerClient>(String)
  fullName: AlgoSdk.TokenizedClientExtensions.Delete<AlgoSdk.IndexerClient>(System.String)
  nameWithType.vb: TokenizedClientExtensions.Delete(Of IndexerClient)(String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.Delete(Of AlgoSdk.IndexerClient)(System.String)
  name.vb: Delete(Of IndexerClient)(String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.Delete``1(System.String)
    name: Delete<IndexerClient>
    nameWithType: TokenizedClientExtensions.Delete<IndexerClient>
    fullName: AlgoSdk.TokenizedClientExtensions.Delete<AlgoSdk.IndexerClient>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.Delete``1(System.String)
    name: Delete(Of IndexerClient)
    nameWithType: TokenizedClientExtensions.Delete(Of IndexerClient)
    fullName: AlgoSdk.TokenizedClientExtensions.Delete(Of AlgoSdk.IndexerClient)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AlgoSdk.TokenizedClientExtensions.GetUrl``1(``0,System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.GetUrl``1(``0,System.String)
  isExternal: true
  name: GetUrl<T>(T, String)
  nameWithType: TokenizedClientExtensions.GetUrl<T>(T, String)
  fullName: AlgoSdk.TokenizedClientExtensions.GetUrl<T>(T, System.String)
  nameWithType.vb: TokenizedClientExtensions.GetUrl(Of T)(T, String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.GetUrl(Of T)(T, System.String)
  name.vb: GetUrl(Of T)(T, String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.GetUrl``1(``0,System.String)
    name: GetUrl<T>
    nameWithType: TokenizedClientExtensions.GetUrl<T>
    fullName: AlgoSdk.TokenizedClientExtensions.GetUrl<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.GetUrl``1(``0,System.String)
    name: GetUrl(Of T)
    nameWithType: TokenizedClientExtensions.GetUrl(Of T)
    fullName: AlgoSdk.TokenizedClientExtensions.GetUrl(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.TokenizedClientExtensions
  commentId: T:AlgoSdk.TokenizedClientExtensions
  parent: AlgoSdk
  name: TokenizedClientExtensions
  nameWithType: TokenizedClientExtensions
  fullName: AlgoSdk.TokenizedClientExtensions
- uid: AlgoSdk.TokenizedClientExtensions.Get``1(``0,System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.Get``1(``0,System.String)
  isExternal: true
  name: Get<T>(T, String)
  nameWithType: TokenizedClientExtensions.Get<T>(T, String)
  fullName: AlgoSdk.TokenizedClientExtensions.Get<T>(T, System.String)
  nameWithType.vb: TokenizedClientExtensions.Get(Of T)(T, String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.Get(Of T)(T, System.String)
  name.vb: Get(Of T)(T, String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.Get``1(``0,System.String)
    name: Get<T>
    nameWithType: TokenizedClientExtensions.Get<T>
    fullName: AlgoSdk.TokenizedClientExtensions.Get<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.Get``1(``0,System.String)
    name: Get(Of T)
    nameWithType: TokenizedClientExtensions.Get(Of T)
    fullName: AlgoSdk.TokenizedClientExtensions.Get(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.TokenizedClientExtensions.Post``1(``0,System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.Post``1(``0,System.String)
  isExternal: true
  name: Post<T>(T, String)
  nameWithType: TokenizedClientExtensions.Post<T>(T, String)
  fullName: AlgoSdk.TokenizedClientExtensions.Post<T>(T, System.String)
  nameWithType.vb: TokenizedClientExtensions.Post(Of T)(T, String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.Post(Of T)(T, System.String)
  name.vb: Post(Of T)(T, String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.Post``1(``0,System.String)
    name: Post<T>
    nameWithType: TokenizedClientExtensions.Post<T>
    fullName: AlgoSdk.TokenizedClientExtensions.Post<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.Post``1(``0,System.String)
    name: Post(Of T)
    nameWithType: TokenizedClientExtensions.Post(Of T)
    fullName: AlgoSdk.TokenizedClientExtensions.Post(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.TokenizedClientExtensions.Delete``1(``0,System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.Delete``1(``0,System.String)
  isExternal: true
  name: Delete<T>(T, String)
  nameWithType: TokenizedClientExtensions.Delete<T>(T, String)
  fullName: AlgoSdk.TokenizedClientExtensions.Delete<T>(T, System.String)
  nameWithType.vb: TokenizedClientExtensions.Delete(Of T)(T, String)
  fullName.vb: AlgoSdk.TokenizedClientExtensions.Delete(Of T)(T, System.String)
  name.vb: Delete(Of T)(T, String)
  spec.csharp:
  - uid: AlgoSdk.TokenizedClientExtensions.Delete``1(``0,System.String)
    name: Delete<T>
    nameWithType: TokenizedClientExtensions.Delete<T>
    fullName: AlgoSdk.TokenizedClientExtensions.Delete<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.TokenizedClientExtensions.Delete``1(``0,System.String)
    name: Delete(Of T)
    nameWithType: TokenizedClientExtensions.Delete(Of T)
    fullName: AlgoSdk.TokenizedClientExtensions.Delete(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AlgoSdk.IndexerClient.#ctor*
  commentId: Overload:AlgoSdk.IndexerClient.#ctor
  name: IndexerClient
  nameWithType: IndexerClient.IndexerClient
  fullName: AlgoSdk.IndexerClient.IndexerClient
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AlgoSdk.IndexerClient.Address*
  commentId: Overload:AlgoSdk.IndexerClient.Address
  name: Address
  nameWithType: IndexerClient.Address
  fullName: AlgoSdk.IndexerClient.Address
- uid: AlgoSdk.IAlgoApiClient.Address
  commentId: P:AlgoSdk.IAlgoApiClient.Address
  parent: AlgoSdk.IAlgoApiClient
  name: Address
  nameWithType: IAlgoApiClient.Address
  fullName: AlgoSdk.IAlgoApiClient.Address
- uid: AlgoSdk.IndexerClient.Token*
  commentId: Overload:AlgoSdk.IndexerClient.Token
  name: Token
  nameWithType: IndexerClient.Token
  fullName: AlgoSdk.IndexerClient.Token
- uid: AlgoSdk.IAlgoApiClient.Token
  commentId: P:AlgoSdk.IAlgoApiClient.Token
  parent: AlgoSdk.IAlgoApiClient
  name: Token
  nameWithType: IAlgoApiClient.Token
  fullName: AlgoSdk.IAlgoApiClient.Token
- uid: AlgoSdk.IndexerClient.TokenHeader*
  commentId: Overload:AlgoSdk.IndexerClient.TokenHeader
  name: TokenHeader
  nameWithType: IndexerClient.TokenHeader
  fullName: AlgoSdk.IndexerClient.TokenHeader
- uid: AlgoSdk.IAlgoApiClient.TokenHeader
  commentId: P:AlgoSdk.IAlgoApiClient.TokenHeader
  parent: AlgoSdk.IAlgoApiClient
  name: TokenHeader
  nameWithType: IAlgoApiClient.TokenHeader
  fullName: AlgoSdk.IAlgoApiClient.TokenHeader
- uid: AlgoSdk.IndexerClient.GetHealth*
  commentId: Overload:AlgoSdk.IndexerClient.GetHealth
  name: GetHealth
  nameWithType: IndexerClient.GetHealth
  fullName: AlgoSdk.IndexerClient.GetHealth
- uid: AlgoSdk.IIndexerClient.GetHealth
  commentId: M:AlgoSdk.IIndexerClient.GetHealth
  parent: AlgoSdk.IIndexerClient
  name: GetHealth()
  nameWithType: IIndexerClient.GetHealth()
  fullName: AlgoSdk.IIndexerClient.GetHealth()
  spec.csharp:
  - uid: AlgoSdk.IIndexerClient.GetHealth
    name: GetHealth
    nameWithType: IIndexerClient.GetHealth
    fullName: AlgoSdk.IIndexerClient.GetHealth
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.IIndexerClient.GetHealth
    name: GetHealth
    nameWithType: IIndexerClient.GetHealth
    fullName: AlgoSdk.IIndexerClient.GetHealth
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.HealthCheck}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.HealthCheck}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<HealthCheck>>
  nameWithType: UniTask<AlgoApiResponse<HealthCheck>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.HealthCheck>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of HealthCheck))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.HealthCheck))
  name.vb: UniTask(Of AlgoApiResponse(Of HealthCheck))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.HealthCheck
    name: HealthCheck
    nameWithType: HealthCheck
    fullName: AlgoSdk.HealthCheck
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.HealthCheck
    name: HealthCheck
    nameWithType: HealthCheck
    fullName: AlgoSdk.HealthCheck
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cysharp.Threading.Tasks.UniTask`1
  commentId: T:Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<T>
  nameWithType: UniTask<T>
  fullName: Cysharp.Threading.Tasks.UniTask<T>
  nameWithType.vb: UniTask(Of T)
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of T)
  name.vb: UniTask(Of T)
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Cysharp.Threading.Tasks
  commentId: N:Cysharp.Threading.Tasks
  name: Cysharp.Threading.Tasks
  nameWithType: Cysharp.Threading.Tasks
  fullName: Cysharp.Threading.Tasks
- uid: AlgoSdk.IndexerClient.GetAccounts*
  commentId: Overload:AlgoSdk.IndexerClient.GetAccounts
  name: GetAccounts
  nameWithType: IndexerClient.GetAccounts
  fullName: AlgoSdk.IndexerClient.GetAccounts
- uid: AlgoSdk.IIndexerClient.GetAccounts(AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Address,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},AlgoSdk.Optional{System.UInt64})
  commentId: M:AlgoSdk.IIndexerClient.GetAccounts(AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Address,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},AlgoSdk.Optional{System.UInt64})
  parent: AlgoSdk.IIndexerClient
  isExternal: true
  name: GetAccounts(Optional<UInt64>, Optional<UInt64>, Address, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>, Optional<UInt64>)
  nameWithType: IIndexerClient.GetAccounts(Optional<UInt64>, Optional<UInt64>, Address, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>, Optional<UInt64>)
  fullName: AlgoSdk.IIndexerClient.GetAccounts(AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Address, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.Boolean>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<Unity.Collections.FixedString128Bytes>, AlgoSdk.Optional<System.UInt64>)
  nameWithType.vb: IIndexerClient.GetAccounts(Optional(Of UInt64), Optional(Of UInt64), Address, Optional(Of UInt64), Optional(Of UInt64), Optional(Of Boolean), Optional(Of UInt64), Optional(Of FixedString128Bytes), Optional(Of UInt64))
  fullName.vb: AlgoSdk.IIndexerClient.GetAccounts(AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Address, AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.Boolean), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of Unity.Collections.FixedString128Bytes), AlgoSdk.Optional(Of System.UInt64))
  name.vb: GetAccounts(Optional(Of UInt64), Optional(Of UInt64), Address, Optional(Of UInt64), Optional(Of UInt64), Optional(Of Boolean), Optional(Of UInt64), Optional(Of FixedString128Bytes), Optional(Of UInt64))
  spec.csharp:
  - uid: AlgoSdk.IIndexerClient.GetAccounts(AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Address,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},AlgoSdk.Optional{System.UInt64})
    name: GetAccounts
    nameWithType: IIndexerClient.GetAccounts
    fullName: AlgoSdk.IIndexerClient.GetAccounts
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Address
    name: Address
    nameWithType: Address
    fullName: AlgoSdk.Address
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Collections.FixedString128Bytes
    name: FixedString128Bytes
    nameWithType: FixedString128Bytes
    fullName: Unity.Collections.FixedString128Bytes
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.IIndexerClient.GetAccounts(AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Address,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},AlgoSdk.Optional{System.UInt64})
    name: GetAccounts
    nameWithType: IIndexerClient.GetAccounts
    fullName: AlgoSdk.IIndexerClient.GetAccounts
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Address
    name: Address
    nameWithType: Address
    fullName: AlgoSdk.Address
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Collections.FixedString128Bytes
    name: FixedString128Bytes
    nameWithType: FixedString128Bytes
    fullName: Unity.Collections.FixedString128Bytes
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.Optional{System.UInt64}
  commentId: T:AlgoSdk.Optional{System.UInt64}
  parent: AlgoSdk
  definition: AlgoSdk.Optional`1
  name: Optional<UInt64>
  nameWithType: Optional<UInt64>
  fullName: AlgoSdk.Optional<System.UInt64>
  nameWithType.vb: Optional(Of UInt64)
  fullName.vb: AlgoSdk.Optional(Of System.UInt64)
  name.vb: Optional(Of UInt64)
  spec.csharp:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.Address
  commentId: T:AlgoSdk.Address
  parent: AlgoSdk
  name: Address
  nameWithType: Address
  fullName: AlgoSdk.Address
- uid: AlgoSdk.Optional{System.Boolean}
  commentId: T:AlgoSdk.Optional{System.Boolean}
  parent: AlgoSdk
  definition: AlgoSdk.Optional`1
  name: Optional<Boolean>
  nameWithType: Optional<Boolean>
  fullName: AlgoSdk.Optional<System.Boolean>
  nameWithType.vb: Optional(Of Boolean)
  fullName.vb: AlgoSdk.Optional(Of System.Boolean)
  name.vb: Optional(Of Boolean)
  spec.csharp:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.Optional{Unity.Collections.FixedString128Bytes}
  commentId: T:AlgoSdk.Optional{Unity.Collections.FixedString128Bytes}
  parent: AlgoSdk
  definition: AlgoSdk.Optional`1
  name: Optional<FixedString128Bytes>
  nameWithType: Optional<FixedString128Bytes>
  fullName: AlgoSdk.Optional<Unity.Collections.FixedString128Bytes>
  nameWithType.vb: Optional(Of FixedString128Bytes)
  fullName.vb: AlgoSdk.Optional(Of Unity.Collections.FixedString128Bytes)
  name.vb: Optional(Of FixedString128Bytes)
  spec.csharp:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Collections.FixedString128Bytes
    name: FixedString128Bytes
    nameWithType: FixedString128Bytes
    fullName: Unity.Collections.FixedString128Bytes
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Collections.FixedString128Bytes
    name: FixedString128Bytes
    nameWithType: FixedString128Bytes
    fullName: Unity.Collections.FixedString128Bytes
  - name: )
    nameWithType: )
    fullName: )
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.AccountsResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.AccountsResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<AccountsResponse>>
  nameWithType: UniTask<AlgoApiResponse<AccountsResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.AccountsResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of AccountsResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.AccountsResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of AccountsResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AccountsResponse
    name: AccountsResponse
    nameWithType: AccountsResponse
    fullName: AlgoSdk.AccountsResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AccountsResponse
    name: AccountsResponse
    nameWithType: AccountsResponse
    fullName: AlgoSdk.AccountsResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.Optional`1
  commentId: T:AlgoSdk.Optional`1
  parent: AlgoSdk
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: AlgoSdk.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: AlgoSdk.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IndexerClient.GetAccount*
  commentId: Overload:AlgoSdk.IndexerClient.GetAccount
  name: GetAccount
  nameWithType: IndexerClient.GetAccount
  fullName: AlgoSdk.IndexerClient.GetAccount
- uid: AlgoSdk.IIndexerClient.GetAccount(AlgoSdk.Address,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64})
  commentId: M:AlgoSdk.IIndexerClient.GetAccount(AlgoSdk.Address,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64})
  parent: AlgoSdk.IIndexerClient
  isExternal: true
  name: GetAccount(Address, Optional<Boolean>, Optional<UInt64>)
  nameWithType: IIndexerClient.GetAccount(Address, Optional<Boolean>, Optional<UInt64>)
  fullName: AlgoSdk.IIndexerClient.GetAccount(AlgoSdk.Address, AlgoSdk.Optional<System.Boolean>, AlgoSdk.Optional<System.UInt64>)
  nameWithType.vb: IIndexerClient.GetAccount(Address, Optional(Of Boolean), Optional(Of UInt64))
  fullName.vb: AlgoSdk.IIndexerClient.GetAccount(AlgoSdk.Address, AlgoSdk.Optional(Of System.Boolean), AlgoSdk.Optional(Of System.UInt64))
  name.vb: GetAccount(Address, Optional(Of Boolean), Optional(Of UInt64))
  spec.csharp:
  - uid: AlgoSdk.IIndexerClient.GetAccount(AlgoSdk.Address,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64})
    name: GetAccount
    nameWithType: IIndexerClient.GetAccount
    fullName: AlgoSdk.IIndexerClient.GetAccount
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.Address
    name: Address
    nameWithType: Address
    fullName: AlgoSdk.Address
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.IIndexerClient.GetAccount(AlgoSdk.Address,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64})
    name: GetAccount
    nameWithType: IIndexerClient.GetAccount
    fullName: AlgoSdk.IIndexerClient.GetAccount
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.Address
    name: Address
    nameWithType: Address
    fullName: AlgoSdk.Address
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.AccountResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.AccountResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<AccountResponse>>
  nameWithType: UniTask<AlgoApiResponse<AccountResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.AccountResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of AccountResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.AccountResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of AccountResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AccountResponse
    name: AccountResponse
    nameWithType: AccountResponse
    fullName: AlgoSdk.AccountResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AccountResponse
    name: AccountResponse
    nameWithType: AccountResponse
    fullName: AlgoSdk.AccountResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IndexerClient.GetAccountTransactions*
  commentId: Overload:AlgoSdk.IndexerClient.GetAccountTransactions
  name: GetAccountTransactions
  nameWithType: IndexerClient.GetAccountTransactions
  fullName: AlgoSdk.IndexerClient.GetAccountTransactions
- uid: AlgoSdk.IIndexerClient.GetAccountTransactions(AlgoSdk.Address,System.DateTime,AlgoSdk.Optional{System.UInt64},System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.SignatureType,AlgoSdk.TransactionType,AlgoSdk.TransactionId)
  commentId: M:AlgoSdk.IIndexerClient.GetAccountTransactions(AlgoSdk.Address,System.DateTime,AlgoSdk.Optional{System.UInt64},System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.SignatureType,AlgoSdk.TransactionType,AlgoSdk.TransactionId)
  parent: AlgoSdk.IIndexerClient
  isExternal: true
  name: GetAccountTransactions(Address, DateTime, Optional<UInt64>, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId)
  nameWithType: IIndexerClient.GetAccountTransactions(Address, DateTime, Optional<UInt64>, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId)
  fullName: AlgoSdk.IIndexerClient.GetAccountTransactions(AlgoSdk.Address, System.DateTime, AlgoSdk.Optional<System.UInt64>, System.DateTime, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<Unity.Collections.FixedString128Bytes>, System.String, AlgoSdk.Optional<System.Boolean>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.SignatureType, AlgoSdk.TransactionType, AlgoSdk.TransactionId)
  nameWithType.vb: IIndexerClient.GetAccountTransactions(Address, DateTime, Optional(Of UInt64), DateTime, Optional(Of UInt64), Optional(Of UInt64), Optional(Of UInt64), Optional(Of UInt64), Optional(Of UInt64), Optional(Of FixedString128Bytes), String, Optional(Of Boolean), Optional(Of UInt64), SignatureType, TransactionType, TransactionId)
  fullName.vb: AlgoSdk.IIndexerClient.GetAccountTransactions(AlgoSdk.Address, System.DateTime, AlgoSdk.Optional(Of System.UInt64), System.DateTime, AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of Unity.Collections.FixedString128Bytes), System.String, AlgoSdk.Optional(Of System.Boolean), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.SignatureType, AlgoSdk.TransactionType, AlgoSdk.TransactionId)
  name.vb: GetAccountTransactions(Address, DateTime, Optional(Of UInt64), DateTime, Optional(Of UInt64), Optional(Of UInt64), Optional(Of UInt64), Optional(Of UInt64), Optional(Of UInt64), Optional(Of FixedString128Bytes), String, Optional(Of Boolean), Optional(Of UInt64), SignatureType, TransactionType, TransactionId)
  spec.csharp:
  - uid: AlgoSdk.IIndexerClient.GetAccountTransactions(AlgoSdk.Address,System.DateTime,AlgoSdk.Optional{System.UInt64},System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.SignatureType,AlgoSdk.TransactionType,AlgoSdk.TransactionId)
    name: GetAccountTransactions
    nameWithType: IIndexerClient.GetAccountTransactions
    fullName: AlgoSdk.IIndexerClient.GetAccountTransactions
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.Address
    name: Address
    nameWithType: Address
    fullName: AlgoSdk.Address
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Collections.FixedString128Bytes
    name: FixedString128Bytes
    nameWithType: FixedString128Bytes
    fullName: Unity.Collections.FixedString128Bytes
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.SignatureType
    name: SignatureType
    nameWithType: SignatureType
    fullName: AlgoSdk.SignatureType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.TransactionType
    name: TransactionType
    nameWithType: TransactionType
    fullName: AlgoSdk.TransactionType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.TransactionId
    name: TransactionId
    nameWithType: TransactionId
    fullName: AlgoSdk.TransactionId
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.IIndexerClient.GetAccountTransactions(AlgoSdk.Address,System.DateTime,AlgoSdk.Optional{System.UInt64},System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.SignatureType,AlgoSdk.TransactionType,AlgoSdk.TransactionId)
    name: GetAccountTransactions
    nameWithType: IIndexerClient.GetAccountTransactions
    fullName: AlgoSdk.IIndexerClient.GetAccountTransactions
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.Address
    name: Address
    nameWithType: Address
    fullName: AlgoSdk.Address
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Collections.FixedString128Bytes
    name: FixedString128Bytes
    nameWithType: FixedString128Bytes
    fullName: Unity.Collections.FixedString128Bytes
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.SignatureType
    name: SignatureType
    nameWithType: SignatureType
    fullName: AlgoSdk.SignatureType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.TransactionType
    name: TransactionType
    nameWithType: TransactionType
    fullName: AlgoSdk.TransactionType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.TransactionId
    name: TransactionId
    nameWithType: TransactionId
    fullName: AlgoSdk.TransactionId
  - name: )
    nameWithType: )
    fullName: )
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: AlgoSdk.SignatureType
  commentId: T:AlgoSdk.SignatureType
  parent: AlgoSdk
  name: SignatureType
  nameWithType: SignatureType
  fullName: AlgoSdk.SignatureType
- uid: AlgoSdk.TransactionType
  commentId: T:AlgoSdk.TransactionType
  parent: AlgoSdk
  name: TransactionType
  nameWithType: TransactionType
  fullName: AlgoSdk.TransactionType
- uid: AlgoSdk.TransactionId
  commentId: T:AlgoSdk.TransactionId
  parent: AlgoSdk
  name: TransactionId
  nameWithType: TransactionId
  fullName: AlgoSdk.TransactionId
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.TransactionsResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.TransactionsResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<TransactionsResponse>>
  nameWithType: UniTask<AlgoApiResponse<TransactionsResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.TransactionsResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of TransactionsResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.TransactionsResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of TransactionsResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.TransactionsResponse
    name: TransactionsResponse
    nameWithType: TransactionsResponse
    fullName: AlgoSdk.TransactionsResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.TransactionsResponse
    name: TransactionsResponse
    nameWithType: TransactionsResponse
    fullName: AlgoSdk.TransactionsResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IndexerClient.GetApplications*
  commentId: Overload:AlgoSdk.IndexerClient.GetApplications
  name: GetApplications
  nameWithType: IndexerClient.GetApplications
  fullName: AlgoSdk.IndexerClient.GetApplications
- uid: AlgoSdk.IIndexerClient.GetApplications(AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes})
  commentId: M:AlgoSdk.IIndexerClient.GetApplications(AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes})
  parent: AlgoSdk.IIndexerClient
  isExternal: true
  name: GetApplications(Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>)
  nameWithType: IIndexerClient.GetApplications(Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>)
  fullName: AlgoSdk.IIndexerClient.GetApplications(AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.Boolean>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<Unity.Collections.FixedString128Bytes>)
  nameWithType.vb: IIndexerClient.GetApplications(Optional(Of UInt64), Optional(Of Boolean), Optional(Of UInt64), Optional(Of FixedString128Bytes))
  fullName.vb: AlgoSdk.IIndexerClient.GetApplications(AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.Boolean), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of Unity.Collections.FixedString128Bytes))
  name.vb: GetApplications(Optional(Of UInt64), Optional(Of Boolean), Optional(Of UInt64), Optional(Of FixedString128Bytes))
  spec.csharp:
  - uid: AlgoSdk.IIndexerClient.GetApplications(AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes})
    name: GetApplications
    nameWithType: IIndexerClient.GetApplications
    fullName: AlgoSdk.IIndexerClient.GetApplications
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Collections.FixedString128Bytes
    name: FixedString128Bytes
    nameWithType: FixedString128Bytes
    fullName: Unity.Collections.FixedString128Bytes
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.IIndexerClient.GetApplications(AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes})
    name: GetApplications
    nameWithType: IIndexerClient.GetApplications
    fullName: AlgoSdk.IIndexerClient.GetApplications
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Collections.FixedString128Bytes
    name: FixedString128Bytes
    nameWithType: FixedString128Bytes
    fullName: Unity.Collections.FixedString128Bytes
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ApplicationsResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ApplicationsResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<ApplicationsResponse>>
  nameWithType: UniTask<AlgoApiResponse<ApplicationsResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.ApplicationsResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of ApplicationsResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.ApplicationsResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of ApplicationsResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.ApplicationsResponse
    name: ApplicationsResponse
    nameWithType: ApplicationsResponse
    fullName: AlgoSdk.ApplicationsResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.ApplicationsResponse
    name: ApplicationsResponse
    nameWithType: ApplicationsResponse
    fullName: AlgoSdk.ApplicationsResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IndexerClient.GetApplication*
  commentId: Overload:AlgoSdk.IndexerClient.GetApplication
  name: GetApplication
  nameWithType: IndexerClient.GetApplication
  fullName: AlgoSdk.IndexerClient.GetApplication
- uid: AlgoSdk.IIndexerClient.GetApplication(System.UInt64,AlgoSdk.Optional{System.Boolean})
  commentId: M:AlgoSdk.IIndexerClient.GetApplication(System.UInt64,AlgoSdk.Optional{System.Boolean})
  parent: AlgoSdk.IIndexerClient
  isExternal: true
  name: GetApplication(UInt64, Optional<Boolean>)
  nameWithType: IIndexerClient.GetApplication(UInt64, Optional<Boolean>)
  fullName: AlgoSdk.IIndexerClient.GetApplication(System.UInt64, AlgoSdk.Optional<System.Boolean>)
  nameWithType.vb: IIndexerClient.GetApplication(UInt64, Optional(Of Boolean))
  fullName.vb: AlgoSdk.IIndexerClient.GetApplication(System.UInt64, AlgoSdk.Optional(Of System.Boolean))
  name.vb: GetApplication(UInt64, Optional(Of Boolean))
  spec.csharp:
  - uid: AlgoSdk.IIndexerClient.GetApplication(System.UInt64,AlgoSdk.Optional{System.Boolean})
    name: GetApplication
    nameWithType: IIndexerClient.GetApplication
    fullName: AlgoSdk.IIndexerClient.GetApplication
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.IIndexerClient.GetApplication(System.UInt64,AlgoSdk.Optional{System.Boolean})
    name: GetApplication
    nameWithType: IIndexerClient.GetApplication
    fullName: AlgoSdk.IIndexerClient.GetApplication
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ApplicationResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.ApplicationResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<ApplicationResponse>>
  nameWithType: UniTask<AlgoApiResponse<ApplicationResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.ApplicationResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of ApplicationResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.ApplicationResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of ApplicationResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.ApplicationResponse
    name: ApplicationResponse
    nameWithType: ApplicationResponse
    fullName: AlgoSdk.ApplicationResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.ApplicationResponse
    name: ApplicationResponse
    nameWithType: ApplicationResponse
    fullName: AlgoSdk.ApplicationResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IndexerClient.GetAssets*
  commentId: Overload:AlgoSdk.IndexerClient.GetAssets
  name: GetAssets
  nameWithType: IndexerClient.GetAssets
  fullName: AlgoSdk.IndexerClient.GetAssets
- uid: AlgoSdk.IIndexerClient.GetAssets(AlgoSdk.Optional{System.UInt64},AlgoSdk.Address,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},System.String,AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String)
  commentId: M:AlgoSdk.IIndexerClient.GetAssets(AlgoSdk.Optional{System.UInt64},AlgoSdk.Address,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},System.String,AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String)
  parent: AlgoSdk.IIndexerClient
  isExternal: true
  name: GetAssets(Optional<UInt64>, Address, Optional<Boolean>, Optional<UInt64>, String, Optional<FixedString128Bytes>, String)
  nameWithType: IIndexerClient.GetAssets(Optional<UInt64>, Address, Optional<Boolean>, Optional<UInt64>, String, Optional<FixedString128Bytes>, String)
  fullName: AlgoSdk.IIndexerClient.GetAssets(AlgoSdk.Optional<System.UInt64>, AlgoSdk.Address, AlgoSdk.Optional<System.Boolean>, AlgoSdk.Optional<System.UInt64>, System.String, AlgoSdk.Optional<Unity.Collections.FixedString128Bytes>, System.String)
  nameWithType.vb: IIndexerClient.GetAssets(Optional(Of UInt64), Address, Optional(Of Boolean), Optional(Of UInt64), String, Optional(Of FixedString128Bytes), String)
  fullName.vb: AlgoSdk.IIndexerClient.GetAssets(AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Address, AlgoSdk.Optional(Of System.Boolean), AlgoSdk.Optional(Of System.UInt64), System.String, AlgoSdk.Optional(Of Unity.Collections.FixedString128Bytes), System.String)
  name.vb: GetAssets(Optional(Of UInt64), Address, Optional(Of Boolean), Optional(Of UInt64), String, Optional(Of FixedString128Bytes), String)
  spec.csharp:
  - uid: AlgoSdk.IIndexerClient.GetAssets(AlgoSdk.Optional{System.UInt64},AlgoSdk.Address,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},System.String,AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String)
    name: GetAssets
    nameWithType: IIndexerClient.GetAssets
    fullName: AlgoSdk.IIndexerClient.GetAssets
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Address
    name: Address
    nameWithType: Address
    fullName: AlgoSdk.Address
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Collections.FixedString128Bytes
    name: FixedString128Bytes
    nameWithType: FixedString128Bytes
    fullName: Unity.Collections.FixedString128Bytes
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.IIndexerClient.GetAssets(AlgoSdk.Optional{System.UInt64},AlgoSdk.Address,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},System.String,AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String)
    name: GetAssets
    nameWithType: IIndexerClient.GetAssets
    fullName: AlgoSdk.IIndexerClient.GetAssets
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Address
    name: Address
    nameWithType: Address
    fullName: AlgoSdk.Address
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Collections.FixedString128Bytes
    name: FixedString128Bytes
    nameWithType: FixedString128Bytes
    fullName: Unity.Collections.FixedString128Bytes
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.AssetsResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.AssetsResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<AssetsResponse>>
  nameWithType: UniTask<AlgoApiResponse<AssetsResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.AssetsResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of AssetsResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.AssetsResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of AssetsResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AssetsResponse
    name: AssetsResponse
    nameWithType: AssetsResponse
    fullName: AlgoSdk.AssetsResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AssetsResponse
    name: AssetsResponse
    nameWithType: AssetsResponse
    fullName: AlgoSdk.AssetsResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IndexerClient.GetAsset*
  commentId: Overload:AlgoSdk.IndexerClient.GetAsset
  name: GetAsset
  nameWithType: IndexerClient.GetAsset
  fullName: AlgoSdk.IndexerClient.GetAsset
- uid: AlgoSdk.IIndexerClient.GetAsset(System.UInt64,AlgoSdk.Optional{System.Boolean})
  commentId: M:AlgoSdk.IIndexerClient.GetAsset(System.UInt64,AlgoSdk.Optional{System.Boolean})
  parent: AlgoSdk.IIndexerClient
  isExternal: true
  name: GetAsset(UInt64, Optional<Boolean>)
  nameWithType: IIndexerClient.GetAsset(UInt64, Optional<Boolean>)
  fullName: AlgoSdk.IIndexerClient.GetAsset(System.UInt64, AlgoSdk.Optional<System.Boolean>)
  nameWithType.vb: IIndexerClient.GetAsset(UInt64, Optional(Of Boolean))
  fullName.vb: AlgoSdk.IIndexerClient.GetAsset(System.UInt64, AlgoSdk.Optional(Of System.Boolean))
  name.vb: GetAsset(UInt64, Optional(Of Boolean))
  spec.csharp:
  - uid: AlgoSdk.IIndexerClient.GetAsset(System.UInt64,AlgoSdk.Optional{System.Boolean})
    name: GetAsset
    nameWithType: IIndexerClient.GetAsset
    fullName: AlgoSdk.IIndexerClient.GetAsset
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.IIndexerClient.GetAsset(System.UInt64,AlgoSdk.Optional{System.Boolean})
    name: GetAsset
    nameWithType: IIndexerClient.GetAsset
    fullName: AlgoSdk.IIndexerClient.GetAsset
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.AssetResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.AssetResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<AssetResponse>>
  nameWithType: UniTask<AlgoApiResponse<AssetResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.AssetResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of AssetResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.AssetResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of AssetResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AssetResponse
    name: AssetResponse
    nameWithType: AssetResponse
    fullName: AlgoSdk.AssetResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AssetResponse
    name: AssetResponse
    nameWithType: AssetResponse
    fullName: AlgoSdk.AssetResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IndexerClient.GetAssetBalances*
  commentId: Overload:AlgoSdk.IndexerClient.GetAssetBalances
  name: GetAssetBalances
  nameWithType: IndexerClient.GetAssetBalances
  fullName: AlgoSdk.IndexerClient.GetAssetBalances
- uid: AlgoSdk.IIndexerClient.GetAssetBalances(System.UInt64,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},AlgoSdk.Optional{System.UInt64})
  commentId: M:AlgoSdk.IIndexerClient.GetAssetBalances(System.UInt64,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},AlgoSdk.Optional{System.UInt64})
  parent: AlgoSdk.IIndexerClient
  isExternal: true
  name: GetAssetBalances(UInt64, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>, Optional<UInt64>)
  nameWithType: IIndexerClient.GetAssetBalances(UInt64, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>, Optional<UInt64>)
  fullName: AlgoSdk.IIndexerClient.GetAssetBalances(System.UInt64, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.Boolean>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<Unity.Collections.FixedString128Bytes>, AlgoSdk.Optional<System.UInt64>)
  nameWithType.vb: IIndexerClient.GetAssetBalances(UInt64, Optional(Of UInt64), Optional(Of UInt64), Optional(Of Boolean), Optional(Of UInt64), Optional(Of FixedString128Bytes), Optional(Of UInt64))
  fullName.vb: AlgoSdk.IIndexerClient.GetAssetBalances(System.UInt64, AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.Boolean), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of Unity.Collections.FixedString128Bytes), AlgoSdk.Optional(Of System.UInt64))
  name.vb: GetAssetBalances(UInt64, Optional(Of UInt64), Optional(Of UInt64), Optional(Of Boolean), Optional(Of UInt64), Optional(Of FixedString128Bytes), Optional(Of UInt64))
  spec.csharp:
  - uid: AlgoSdk.IIndexerClient.GetAssetBalances(System.UInt64,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},AlgoSdk.Optional{System.UInt64})
    name: GetAssetBalances
    nameWithType: IIndexerClient.GetAssetBalances
    fullName: AlgoSdk.IIndexerClient.GetAssetBalances
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Collections.FixedString128Bytes
    name: FixedString128Bytes
    nameWithType: FixedString128Bytes
    fullName: Unity.Collections.FixedString128Bytes
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.IIndexerClient.GetAssetBalances(System.UInt64,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},AlgoSdk.Optional{System.UInt64})
    name: GetAssetBalances
    nameWithType: IIndexerClient.GetAssetBalances
    fullName: AlgoSdk.IIndexerClient.GetAssetBalances
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Collections.FixedString128Bytes
    name: FixedString128Bytes
    nameWithType: FixedString128Bytes
    fullName: Unity.Collections.FixedString128Bytes
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.BalancesResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.BalancesResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<BalancesResponse>>
  nameWithType: UniTask<AlgoApiResponse<BalancesResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.BalancesResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of BalancesResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.BalancesResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of BalancesResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.BalancesResponse
    name: BalancesResponse
    nameWithType: BalancesResponse
    fullName: AlgoSdk.BalancesResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.BalancesResponse
    name: BalancesResponse
    nameWithType: BalancesResponse
    fullName: AlgoSdk.BalancesResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IndexerClient.GetAssetTransactions*
  commentId: Overload:AlgoSdk.IndexerClient.GetAssetTransactions
  name: GetAssetTransactions
  nameWithType: IndexerClient.GetAssetTransactions
  fullName: AlgoSdk.IndexerClient.GetAssetTransactions
- uid: AlgoSdk.IIndexerClient.GetAssetTransactions(System.UInt64,AlgoSdk.Address,AlgoSdk.AddressRole,System.DateTime,System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.SignatureType,AlgoSdk.TransactionType,AlgoSdk.TransactionId)
  commentId: M:AlgoSdk.IIndexerClient.GetAssetTransactions(System.UInt64,AlgoSdk.Address,AlgoSdk.AddressRole,System.DateTime,System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.SignatureType,AlgoSdk.TransactionType,AlgoSdk.TransactionId)
  parent: AlgoSdk.IIndexerClient
  isExternal: true
  name: GetAssetTransactions(UInt64, Address, AddressRole, DateTime, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId)
  nameWithType: IIndexerClient.GetAssetTransactions(UInt64, Address, AddressRole, DateTime, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId)
  fullName: AlgoSdk.IIndexerClient.GetAssetTransactions(System.UInt64, AlgoSdk.Address, AlgoSdk.AddressRole, System.DateTime, System.DateTime, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.Boolean>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<Unity.Collections.FixedString128Bytes>, System.String, AlgoSdk.Optional<System.Boolean>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.SignatureType, AlgoSdk.TransactionType, AlgoSdk.TransactionId)
  nameWithType.vb: IIndexerClient.GetAssetTransactions(UInt64, Address, AddressRole, DateTime, DateTime, Optional(Of UInt64), Optional(Of UInt64), Optional(Of Boolean), Optional(Of UInt64), Optional(Of UInt64), Optional(Of UInt64), Optional(Of FixedString128Bytes), String, Optional(Of Boolean), Optional(Of UInt64), SignatureType, TransactionType, TransactionId)
  fullName.vb: AlgoSdk.IIndexerClient.GetAssetTransactions(System.UInt64, AlgoSdk.Address, AlgoSdk.AddressRole, System.DateTime, System.DateTime, AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.Boolean), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of Unity.Collections.FixedString128Bytes), System.String, AlgoSdk.Optional(Of System.Boolean), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.SignatureType, AlgoSdk.TransactionType, AlgoSdk.TransactionId)
  name.vb: GetAssetTransactions(UInt64, Address, AddressRole, DateTime, DateTime, Optional(Of UInt64), Optional(Of UInt64), Optional(Of Boolean), Optional(Of UInt64), Optional(Of UInt64), Optional(Of UInt64), Optional(Of FixedString128Bytes), String, Optional(Of Boolean), Optional(Of UInt64), SignatureType, TransactionType, TransactionId)
  spec.csharp:
  - uid: AlgoSdk.IIndexerClient.GetAssetTransactions(System.UInt64,AlgoSdk.Address,AlgoSdk.AddressRole,System.DateTime,System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.SignatureType,AlgoSdk.TransactionType,AlgoSdk.TransactionId)
    name: GetAssetTransactions
    nameWithType: IIndexerClient.GetAssetTransactions
    fullName: AlgoSdk.IIndexerClient.GetAssetTransactions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Address
    name: Address
    nameWithType: Address
    fullName: AlgoSdk.Address
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.AddressRole
    name: AddressRole
    nameWithType: AddressRole
    fullName: AlgoSdk.AddressRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Collections.FixedString128Bytes
    name: FixedString128Bytes
    nameWithType: FixedString128Bytes
    fullName: Unity.Collections.FixedString128Bytes
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.SignatureType
    name: SignatureType
    nameWithType: SignatureType
    fullName: AlgoSdk.SignatureType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.TransactionType
    name: TransactionType
    nameWithType: TransactionType
    fullName: AlgoSdk.TransactionType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.TransactionId
    name: TransactionId
    nameWithType: TransactionId
    fullName: AlgoSdk.TransactionId
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.IIndexerClient.GetAssetTransactions(System.UInt64,AlgoSdk.Address,AlgoSdk.AddressRole,System.DateTime,System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.SignatureType,AlgoSdk.TransactionType,AlgoSdk.TransactionId)
    name: GetAssetTransactions
    nameWithType: IIndexerClient.GetAssetTransactions
    fullName: AlgoSdk.IIndexerClient.GetAssetTransactions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Address
    name: Address
    nameWithType: Address
    fullName: AlgoSdk.Address
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.AddressRole
    name: AddressRole
    nameWithType: AddressRole
    fullName: AlgoSdk.AddressRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Collections.FixedString128Bytes
    name: FixedString128Bytes
    nameWithType: FixedString128Bytes
    fullName: Unity.Collections.FixedString128Bytes
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.SignatureType
    name: SignatureType
    nameWithType: SignatureType
    fullName: AlgoSdk.SignatureType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.TransactionType
    name: TransactionType
    nameWithType: TransactionType
    fullName: AlgoSdk.TransactionType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.TransactionId
    name: TransactionId
    nameWithType: TransactionId
    fullName: AlgoSdk.TransactionId
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.AddressRole
  commentId: T:AlgoSdk.AddressRole
  parent: AlgoSdk
  name: AddressRole
  nameWithType: AddressRole
  fullName: AlgoSdk.AddressRole
- uid: AlgoSdk.IndexerClient.GetBlock*
  commentId: Overload:AlgoSdk.IndexerClient.GetBlock
  name: GetBlock
  nameWithType: IndexerClient.GetBlock
  fullName: AlgoSdk.IndexerClient.GetBlock
- uid: AlgoSdk.IIndexerClient.GetBlock(System.UInt64)
  commentId: M:AlgoSdk.IIndexerClient.GetBlock(System.UInt64)
  parent: AlgoSdk.IIndexerClient
  isExternal: true
  name: GetBlock(UInt64)
  nameWithType: IIndexerClient.GetBlock(UInt64)
  fullName: AlgoSdk.IIndexerClient.GetBlock(System.UInt64)
  spec.csharp:
  - uid: AlgoSdk.IIndexerClient.GetBlock(System.UInt64)
    name: GetBlock
    nameWithType: IIndexerClient.GetBlock
    fullName: AlgoSdk.IIndexerClient.GetBlock
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.IIndexerClient.GetBlock(System.UInt64)
    name: GetBlock
    nameWithType: IIndexerClient.GetBlock
    fullName: AlgoSdk.IIndexerClient.GetBlock
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.Block}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.Block}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<Block>>
  nameWithType: UniTask<AlgoApiResponse<Block>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.Block>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of Block))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.Block))
  name.vb: UniTask(Of AlgoApiResponse(Of Block))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.Block
    name: Block
    nameWithType: Block
    fullName: AlgoSdk.Block
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.Block
    name: Block
    nameWithType: Block
    fullName: AlgoSdk.Block
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IndexerClient.GetTransactions*
  commentId: Overload:AlgoSdk.IndexerClient.GetTransactions
  name: GetTransactions
  nameWithType: IndexerClient.GetTransactions
  fullName: AlgoSdk.IndexerClient.GetTransactions
- uid: AlgoSdk.IIndexerClient.GetTransactions(AlgoSdk.Address,AlgoSdk.AddressRole,System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.SignatureType,AlgoSdk.TransactionType,AlgoSdk.TransactionId)
  commentId: M:AlgoSdk.IIndexerClient.GetTransactions(AlgoSdk.Address,AlgoSdk.AddressRole,System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.SignatureType,AlgoSdk.TransactionType,AlgoSdk.TransactionId)
  parent: AlgoSdk.IIndexerClient
  isExternal: true
  name: GetTransactions(Address, AddressRole, DateTime, Optional<UInt64>, Optional<UInt64>, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId)
  nameWithType: IIndexerClient.GetTransactions(Address, AddressRole, DateTime, Optional<UInt64>, Optional<UInt64>, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId)
  fullName: AlgoSdk.IIndexerClient.GetTransactions(AlgoSdk.Address, AlgoSdk.AddressRole, System.DateTime, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.UInt64>, System.DateTime, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.Boolean>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.Optional<Unity.Collections.FixedString128Bytes>, System.String, AlgoSdk.Optional<System.Boolean>, AlgoSdk.Optional<System.UInt64>, AlgoSdk.SignatureType, AlgoSdk.TransactionType, AlgoSdk.TransactionId)
  nameWithType.vb: IIndexerClient.GetTransactions(Address, AddressRole, DateTime, Optional(Of UInt64), Optional(Of UInt64), DateTime, Optional(Of UInt64), Optional(Of UInt64), Optional(Of Boolean), Optional(Of UInt64), Optional(Of UInt64), Optional(Of UInt64), Optional(Of FixedString128Bytes), String, Optional(Of Boolean), Optional(Of UInt64), SignatureType, TransactionType, TransactionId)
  fullName.vb: AlgoSdk.IIndexerClient.GetTransactions(AlgoSdk.Address, AlgoSdk.AddressRole, System.DateTime, AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.UInt64), System.DateTime, AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.Boolean), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.Optional(Of Unity.Collections.FixedString128Bytes), System.String, AlgoSdk.Optional(Of System.Boolean), AlgoSdk.Optional(Of System.UInt64), AlgoSdk.SignatureType, AlgoSdk.TransactionType, AlgoSdk.TransactionId)
  name.vb: GetTransactions(Address, AddressRole, DateTime, Optional(Of UInt64), Optional(Of UInt64), DateTime, Optional(Of UInt64), Optional(Of UInt64), Optional(Of Boolean), Optional(Of UInt64), Optional(Of UInt64), Optional(Of UInt64), Optional(Of FixedString128Bytes), String, Optional(Of Boolean), Optional(Of UInt64), SignatureType, TransactionType, TransactionId)
  spec.csharp:
  - uid: AlgoSdk.IIndexerClient.GetTransactions(AlgoSdk.Address,AlgoSdk.AddressRole,System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.SignatureType,AlgoSdk.TransactionType,AlgoSdk.TransactionId)
    name: GetTransactions
    nameWithType: IIndexerClient.GetTransactions
    fullName: AlgoSdk.IIndexerClient.GetTransactions
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.Address
    name: Address
    nameWithType: Address
    fullName: AlgoSdk.Address
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.AddressRole
    name: AddressRole
    nameWithType: AddressRole
    fullName: AlgoSdk.AddressRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unity.Collections.FixedString128Bytes
    name: FixedString128Bytes
    nameWithType: FixedString128Bytes
    fullName: Unity.Collections.FixedString128Bytes
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.SignatureType
    name: SignatureType
    nameWithType: SignatureType
    fullName: AlgoSdk.SignatureType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.TransactionType
    name: TransactionType
    nameWithType: TransactionType
    fullName: AlgoSdk.TransactionType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.TransactionId
    name: TransactionId
    nameWithType: TransactionId
    fullName: AlgoSdk.TransactionId
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.IIndexerClient.GetTransactions(AlgoSdk.Address,AlgoSdk.AddressRole,System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},System.DateTime,AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{System.UInt64},AlgoSdk.Optional{Unity.Collections.FixedString128Bytes},System.String,AlgoSdk.Optional{System.Boolean},AlgoSdk.Optional{System.UInt64},AlgoSdk.SignatureType,AlgoSdk.TransactionType,AlgoSdk.TransactionId)
    name: GetTransactions
    nameWithType: IIndexerClient.GetTransactions
    fullName: AlgoSdk.IIndexerClient.GetTransactions
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.Address
    name: Address
    nameWithType: Address
    fullName: AlgoSdk.Address
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.AddressRole
    name: AddressRole
    nameWithType: AddressRole
    fullName: AlgoSdk.AddressRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unity.Collections.FixedString128Bytes
    name: FixedString128Bytes
    nameWithType: FixedString128Bytes
    fullName: Unity.Collections.FixedString128Bytes
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.SignatureType
    name: SignatureType
    nameWithType: SignatureType
    fullName: AlgoSdk.SignatureType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.TransactionType
    name: TransactionType
    nameWithType: TransactionType
    fullName: AlgoSdk.TransactionType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AlgoSdk.TransactionId
    name: TransactionId
    nameWithType: TransactionId
    fullName: AlgoSdk.TransactionId
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.IndexerClient.GetTransaction*
  commentId: Overload:AlgoSdk.IndexerClient.GetTransaction
  name: GetTransaction
  nameWithType: IndexerClient.GetTransaction
  fullName: AlgoSdk.IndexerClient.GetTransaction
- uid: AlgoSdk.IIndexerClient.GetTransaction(AlgoSdk.TransactionId)
  commentId: M:AlgoSdk.IIndexerClient.GetTransaction(AlgoSdk.TransactionId)
  parent: AlgoSdk.IIndexerClient
  name: GetTransaction(TransactionId)
  nameWithType: IIndexerClient.GetTransaction(TransactionId)
  fullName: AlgoSdk.IIndexerClient.GetTransaction(AlgoSdk.TransactionId)
  spec.csharp:
  - uid: AlgoSdk.IIndexerClient.GetTransaction(AlgoSdk.TransactionId)
    name: GetTransaction
    nameWithType: IIndexerClient.GetTransaction
    fullName: AlgoSdk.IIndexerClient.GetTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.TransactionId
    name: TransactionId
    nameWithType: TransactionId
    fullName: AlgoSdk.TransactionId
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoSdk.IIndexerClient.GetTransaction(AlgoSdk.TransactionId)
    name: GetTransaction
    nameWithType: IIndexerClient.GetTransaction
    fullName: AlgoSdk.IIndexerClient.GetTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.TransactionId
    name: TransactionId
    nameWithType: TransactionId
    fullName: AlgoSdk.TransactionId
  - name: )
    nameWithType: )
    fullName: )
- uid: Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.TransactionResponse}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{AlgoSdk.AlgoApiResponse{AlgoSdk.TransactionResponse}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  name: UniTask<AlgoApiResponse<TransactionResponse>>
  nameWithType: UniTask<AlgoApiResponse<TransactionResponse>>
  fullName: Cysharp.Threading.Tasks.UniTask<AlgoSdk.AlgoApiResponse<AlgoSdk.TransactionResponse>>
  nameWithType.vb: UniTask(Of AlgoApiResponse(Of TransactionResponse))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of AlgoSdk.AlgoApiResponse(Of AlgoSdk.TransactionResponse))
  name.vb: UniTask(Of AlgoApiResponse(Of TransactionResponse))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.TransactionResponse
    name: TransactionResponse
    nameWithType: TransactionResponse
    fullName: AlgoSdk.TransactionResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    nameWithType: UniTask
    fullName: Cysharp.Threading.Tasks.UniTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiResponse`1
    name: AlgoApiResponse
    nameWithType: AlgoApiResponse
    fullName: AlgoSdk.AlgoApiResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.TransactionResponse
    name: TransactionResponse
    nameWithType: TransactionResponse
    fullName: AlgoSdk.TransactionResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
