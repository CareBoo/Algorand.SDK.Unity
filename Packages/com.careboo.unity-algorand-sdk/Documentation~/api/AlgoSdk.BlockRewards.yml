### YamlMime:ManagedReference
items:
- uid: AlgoSdk.BlockRewards
  commentId: T:AlgoSdk.BlockRewards
  id: BlockRewards
  parent: AlgoSdk
  children:
  - AlgoSdk.BlockRewards.Equals(AlgoSdk.BlockRewards)
  - AlgoSdk.BlockRewards.FeeSink
  - AlgoSdk.BlockRewards.RewardsCalculationRound
  - AlgoSdk.BlockRewards.RewardsLevel
  - AlgoSdk.BlockRewards.RewardsPool
  - AlgoSdk.BlockRewards.RewardsRate
  - AlgoSdk.BlockRewards.RewardsResidue
  langs:
  - csharp
  - vb
  name: BlockRewards
  nameWithType: BlockRewards
  fullName: AlgoSdk.BlockRewards
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/BlockRewards.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: BlockRewards
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/BlockRewards.cs
    startLine: 5
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: 'public struct BlockRewards : IEquatable<BlockRewards>'
    content.vb: >-
      Public Structure BlockRewards
          Implements IEquatable(Of BlockRewards)
  implements:
  - System.IEquatable{AlgoSdk.BlockRewards}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: AlgoSdk.BlockRewards.FeeSink
  commentId: F:AlgoSdk.BlockRewards.FeeSink
  id: FeeSink
  parent: AlgoSdk.BlockRewards
  langs:
  - csharp
  - vb
  name: FeeSink
  nameWithType: BlockRewards.FeeSink
  fullName: AlgoSdk.BlockRewards.FeeSink
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/BlockRewards.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: FeeSink
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/BlockRewards.cs
    startLine: 10
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("fee-sink", null, false)]

      public Address FeeSink
    return:
      type: AlgoSdk.Address
    content.vb: >-
      <AlgoApiField("fee-sink", Nothing, False)>

      Public FeeSink As Address
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: fee-sink
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.BlockRewards.RewardsCalculationRound
  commentId: F:AlgoSdk.BlockRewards.RewardsCalculationRound
  id: RewardsCalculationRound
  parent: AlgoSdk.BlockRewards
  langs:
  - csharp
  - vb
  name: RewardsCalculationRound
  nameWithType: BlockRewards.RewardsCalculationRound
  fullName: AlgoSdk.BlockRewards.RewardsCalculationRound
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/BlockRewards.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: RewardsCalculationRound
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/BlockRewards.cs
    startLine: 13
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("rewards-calculation-round", null, false)]

      public ulong RewardsCalculationRound
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("rewards-calculation-round", Nothing, False)>

      Public RewardsCalculationRound As ULong
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: rewards-calculation-round
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.BlockRewards.RewardsLevel
  commentId: F:AlgoSdk.BlockRewards.RewardsLevel
  id: RewardsLevel
  parent: AlgoSdk.BlockRewards
  langs:
  - csharp
  - vb
  name: RewardsLevel
  nameWithType: BlockRewards.RewardsLevel
  fullName: AlgoSdk.BlockRewards.RewardsLevel
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/BlockRewards.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: RewardsLevel
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/BlockRewards.cs
    startLine: 16
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("rewards-level", null, false)]

      public ulong RewardsLevel
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("rewards-level", Nothing, False)>

      Public RewardsLevel As ULong
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: rewards-level
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.BlockRewards.RewardsPool
  commentId: F:AlgoSdk.BlockRewards.RewardsPool
  id: RewardsPool
  parent: AlgoSdk.BlockRewards
  langs:
  - csharp
  - vb
  name: RewardsPool
  nameWithType: BlockRewards.RewardsPool
  fullName: AlgoSdk.BlockRewards.RewardsPool
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/BlockRewards.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: RewardsPool
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/BlockRewards.cs
    startLine: 19
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("rewards-pool", null, false)]

      public Address RewardsPool
    return:
      type: AlgoSdk.Address
    content.vb: >-
      <AlgoApiField("rewards-pool", Nothing, False)>

      Public RewardsPool As Address
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: rewards-pool
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.BlockRewards.RewardsRate
  commentId: F:AlgoSdk.BlockRewards.RewardsRate
  id: RewardsRate
  parent: AlgoSdk.BlockRewards
  langs:
  - csharp
  - vb
  name: RewardsRate
  nameWithType: BlockRewards.RewardsRate
  fullName: AlgoSdk.BlockRewards.RewardsRate
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/BlockRewards.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: RewardsRate
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/BlockRewards.cs
    startLine: 22
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("rewards-rate", null, false)]

      public ulong RewardsRate
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("rewards-rate", Nothing, False)>

      Public RewardsRate As ULong
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: rewards-rate
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.BlockRewards.RewardsResidue
  commentId: F:AlgoSdk.BlockRewards.RewardsResidue
  id: RewardsResidue
  parent: AlgoSdk.BlockRewards
  langs:
  - csharp
  - vb
  name: RewardsResidue
  nameWithType: BlockRewards.RewardsResidue
  fullName: AlgoSdk.BlockRewards.RewardsResidue
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/BlockRewards.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: RewardsResidue
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/BlockRewards.cs
    startLine: 25
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("rewards-residue", null, false)]

      public ulong RewardsResidue
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("rewards-residue", Nothing, False)>

      Public RewardsResidue As ULong
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: rewards-residue
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.BlockRewards.Equals(AlgoSdk.BlockRewards)
  commentId: M:AlgoSdk.BlockRewards.Equals(AlgoSdk.BlockRewards)
  id: Equals(AlgoSdk.BlockRewards)
  parent: AlgoSdk.BlockRewards
  langs:
  - csharp
  - vb
  name: Equals(BlockRewards)
  nameWithType: BlockRewards.Equals(BlockRewards)
  fullName: AlgoSdk.BlockRewards.Equals(AlgoSdk.BlockRewards)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/BlockRewards.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Equals
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/BlockRewards.cs
    startLine: 27
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public bool Equals(BlockRewards other)
    parameters:
    - id: other
      type: AlgoSdk.BlockRewards
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As BlockRewards) As Boolean
  overload: AlgoSdk.BlockRewards.Equals*
  implements:
  - System.IEquatable{AlgoSdk.BlockRewards}.Equals(AlgoSdk.BlockRewards)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: System.IEquatable{AlgoSdk.BlockRewards}
  commentId: T:System.IEquatable{AlgoSdk.BlockRewards}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<BlockRewards>
  nameWithType: IEquatable<BlockRewards>
  fullName: System.IEquatable<AlgoSdk.BlockRewards>
  nameWithType.vb: IEquatable(Of BlockRewards)
  fullName.vb: System.IEquatable(Of AlgoSdk.BlockRewards)
  name.vb: IEquatable(Of BlockRewards)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.BlockRewards
    name: BlockRewards
    nameWithType: BlockRewards
    fullName: AlgoSdk.BlockRewards
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.BlockRewards
    name: BlockRewards
    nameWithType: BlockRewards
    fullName: AlgoSdk.BlockRewards
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AlgoSdk.Address
  commentId: T:AlgoSdk.Address
  parent: AlgoSdk
  name: Address
  nameWithType: Address
  fullName: AlgoSdk.Address
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: AlgoSdk.BlockRewards.Equals*
  commentId: Overload:AlgoSdk.BlockRewards.Equals
  name: Equals
  nameWithType: BlockRewards.Equals
  fullName: AlgoSdk.BlockRewards.Equals
- uid: System.IEquatable{AlgoSdk.BlockRewards}.Equals(AlgoSdk.BlockRewards)
  commentId: M:System.IEquatable{AlgoSdk.BlockRewards}.Equals(AlgoSdk.BlockRewards)
  parent: System.IEquatable{AlgoSdk.BlockRewards}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(BlockRewards)
  nameWithType: IEquatable<BlockRewards>.Equals(BlockRewards)
  fullName: System.IEquatable<AlgoSdk.BlockRewards>.Equals(AlgoSdk.BlockRewards)
  nameWithType.vb: IEquatable(Of BlockRewards).Equals(BlockRewards)
  fullName.vb: System.IEquatable(Of AlgoSdk.BlockRewards).Equals(AlgoSdk.BlockRewards)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<BlockRewards>.Equals
    fullName: System.IEquatable<AlgoSdk.BlockRewards>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.BlockRewards
    name: BlockRewards
    nameWithType: BlockRewards
    fullName: AlgoSdk.BlockRewards
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of BlockRewards).Equals
    fullName: System.IEquatable(Of AlgoSdk.BlockRewards).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.BlockRewards
    name: BlockRewards
    nameWithType: BlockRewards
    fullName: AlgoSdk.BlockRewards
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.BlockRewards
  commentId: T:AlgoSdk.BlockRewards
  parent: AlgoSdk
  name: BlockRewards
  nameWithType: BlockRewards
  fullName: AlgoSdk.BlockRewards
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
