### YamlMime:ManagedReference
items:
- uid: AlgoSdk.Transaction
  commentId: T:AlgoSdk.Transaction
  id: Transaction
  parent: AlgoSdk
  children:
  - AlgoSdk.Transaction.Accounts
  - AlgoSdk.Transaction.Amount
  - AlgoSdk.Transaction.AppArguments
  - AlgoSdk.Transaction.AppCall(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,AlgoSdk.OnCompletion,System.Byte[],AlgoSdk.Address[],System.UInt64[],System.UInt64[])
  - AlgoSdk.Transaction.AppClearState(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,System.Byte[],AlgoSdk.Address[],System.UInt64[],System.UInt64[])
  - AlgoSdk.Transaction.AppCloseOut(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,System.Byte[],AlgoSdk.Address[],System.UInt64[],System.UInt64[])
  - AlgoSdk.Transaction.AppCreate(AlgoSdk.Address,AlgoSdk.TransactionParams,System.Byte[],System.Byte[],AlgoSdk.StateSchema,AlgoSdk.StateSchema,System.UInt64)
  - AlgoSdk.Transaction.AppDelete(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,System.Byte[],AlgoSdk.Address[],System.UInt64[],System.UInt64[])
  - AlgoSdk.Transaction.ApplicationCallParams
  - AlgoSdk.Transaction.ApplicationId
  - AlgoSdk.Transaction.AppOptIn(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,System.Byte[],AlgoSdk.Address[],System.UInt64[],System.UInt64[])
  - AlgoSdk.Transaction.ApprovalProgram
  - AlgoSdk.Transaction.AppUpdateTxn(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,System.Byte[],System.Byte[],System.UInt64,System.Byte[],AlgoSdk.Address[],System.UInt64[],System.UInt64[])
  - AlgoSdk.Transaction.AssetAccept(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64)
  - AlgoSdk.Transaction.AssetAmount
  - AlgoSdk.Transaction.AssetClawback(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,System.UInt64,AlgoSdk.Address,AlgoSdk.Address,AlgoSdk.Address)
  - AlgoSdk.Transaction.AssetCloseTo
  - AlgoSdk.Transaction.AssetConfigurationParams
  - AlgoSdk.Transaction.AssetConfigure(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,AlgoSdk.AssetParams)
  - AlgoSdk.Transaction.AssetCreate(AlgoSdk.Address,AlgoSdk.TransactionParams,AlgoSdk.AssetParams)
  - AlgoSdk.Transaction.AssetDelete(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64)
  - AlgoSdk.Transaction.AssetFreeze(AlgoSdk.Address,AlgoSdk.TransactionParams,AlgoSdk.Address,System.UInt64,System.Boolean)
  - AlgoSdk.Transaction.AssetFreezeParams
  - AlgoSdk.Transaction.AssetFrozen
  - AlgoSdk.Transaction.AssetParams
  - AlgoSdk.Transaction.AssetReceiver
  - AlgoSdk.Transaction.AssetSender
  - AlgoSdk.Transaction.AssetTransfer(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,System.UInt64,AlgoSdk.Address)
  - AlgoSdk.Transaction.AssetTransferParams
  - AlgoSdk.Transaction.AuthAddress
  - AlgoSdk.Transaction.ClearStateProgram
  - AlgoSdk.Transaction.CloseRemainderTo
  - AlgoSdk.Transaction.CloseRewards
  - AlgoSdk.Transaction.ClosingAmount
  - AlgoSdk.Transaction.ConfigAsset
  - AlgoSdk.Transaction.ConfirmedRound
  - AlgoSdk.Transaction.CreatedApplicationIndex
  - AlgoSdk.Transaction.CreatedAssetIndex
  - AlgoSdk.Transaction.Equals(AlgoSdk.Transaction)
  - AlgoSdk.Transaction.EstimateBlockSizeBytes
  - AlgoSdk.Transaction.ExtraProgramPages
  - AlgoSdk.Transaction.Fee
  - AlgoSdk.Transaction.FirstValidRound
  - AlgoSdk.Transaction.ForeignApps
  - AlgoSdk.Transaction.ForeignAssets
  - AlgoSdk.Transaction.FreezeAccount
  - AlgoSdk.Transaction.FreezeAsset
  - AlgoSdk.Transaction.GenesisHash
  - AlgoSdk.Transaction.GenesisId
  - AlgoSdk.Transaction.GetGroupId(AlgoSdk.Transaction[])
  - AlgoSdk.Transaction.GetGroupId(AlgoSdk.TransactionId[])
  - AlgoSdk.Transaction.GetId
  - AlgoSdk.Transaction.GetSignature(AlgoSdk.Crypto.Ed25519.SecretKeyHandle)
  - AlgoSdk.Transaction.GlobalStateDelta
  - AlgoSdk.Transaction.GlobalStateSchema
  - AlgoSdk.Transaction.Group
  - AlgoSdk.Transaction.HeaderParams
  - AlgoSdk.Transaction.Id
  - AlgoSdk.Transaction.IntraRoundOffset
  - AlgoSdk.Transaction.KeyRegistrationParams
  - AlgoSdk.Transaction.KeyRegOffline(AlgoSdk.Address,AlgoSdk.TransactionParams)
  - AlgoSdk.Transaction.KeyRegOnline(AlgoSdk.Address,AlgoSdk.TransactionParams,AlgoSdk.AccountParticipation)
  - AlgoSdk.Transaction.LastValidRound
  - AlgoSdk.Transaction.Lease
  - AlgoSdk.Transaction.LocalStateDelta
  - AlgoSdk.Transaction.LocalStateSchema
  - AlgoSdk.Transaction.NonParticipation
  - AlgoSdk.Transaction.Note
  - AlgoSdk.Transaction.OnComplete
  - AlgoSdk.Transaction.Payment(AlgoSdk.Address,AlgoSdk.TransactionParams,AlgoSdk.Address,System.UInt64,AlgoSdk.Address)
  - AlgoSdk.Transaction.PaymentParams
  - AlgoSdk.Transaction.Receiver
  - AlgoSdk.Transaction.ReceiverRewards
  - AlgoSdk.Transaction.RekeyTo
  - AlgoSdk.Transaction.RoundTime
  - AlgoSdk.Transaction.SelectionParticipationKey
  - AlgoSdk.Transaction.Sender
  - AlgoSdk.Transaction.SenderRewards
  - AlgoSdk.Transaction.Sign(AlgoSdk.Crypto.Ed25519.SecretKeyHandle)
  - AlgoSdk.Transaction.Signature
  - AlgoSdk.Transaction.SignaturePrefix
  - AlgoSdk.Transaction.ToSignatureMessage(Unity.Collections.Allocator)
  - AlgoSdk.Transaction.ToTypedTxn``1
  - AlgoSdk.Transaction.TransactionType
  - AlgoSdk.Transaction.VoteFirst
  - AlgoSdk.Transaction.VoteKeyDilution
  - AlgoSdk.Transaction.VoteLast
  - AlgoSdk.Transaction.VoteParticipationKey
  - AlgoSdk.Transaction.XferAsset
  langs:
  - csharp
  - vb
  name: Transaction
  nameWithType: Transaction
  fullName: AlgoSdk.Transaction
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetTransferTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Transaction
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetTransferTxn.cs
    startLine: 6
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: 'public struct Transaction : IEquatable<Transaction>'
    content.vb: >-
      Public Structure Transaction
          Implements IEquatable(Of Transaction)
  implements:
  - System.IEquatable{AlgoSdk.Transaction}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: AlgoSdk.Transaction.Receiver
  commentId: P:AlgoSdk.Transaction.Receiver
  id: Receiver
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: Receiver
  nameWithType: Transaction.Receiver
  fullName: AlgoSdk.Transaction.Receiver
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/PaymentTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Receiver
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/PaymentTxn.cs
    startLine: 8
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "rcv", false)]

      public Address Receiver { get; set; }
    parameters: []
    return:
      type: AlgoSdk.Address
    content.vb: >-
      <AlgoApiField(Nothing, "rcv", False)>

      Public Property Receiver As Address
  overload: AlgoSdk.Transaction.Receiver*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: rcv
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.Amount
  commentId: P:AlgoSdk.Transaction.Amount
  id: Amount
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: Amount
  nameWithType: Transaction.Amount
  fullName: AlgoSdk.Transaction.Amount
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/PaymentTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Amount
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/PaymentTxn.cs
    startLine: 15
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "amt", false)]

      public ulong Amount { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField(Nothing, "amt", False)>

      Public Property Amount As ULong
  overload: AlgoSdk.Transaction.Amount*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: amt
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.CloseRemainderTo
  commentId: P:AlgoSdk.Transaction.CloseRemainderTo
  id: CloseRemainderTo
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: CloseRemainderTo
  nameWithType: Transaction.CloseRemainderTo
  fullName: AlgoSdk.Transaction.CloseRemainderTo
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/PaymentTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: CloseRemainderTo
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/PaymentTxn.cs
    startLine: 22
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "close", false)]

      public Address CloseRemainderTo { get; set; }
    parameters: []
    return:
      type: AlgoSdk.Address
    content.vb: >-
      <AlgoApiField(Nothing, "close", False)>

      Public Property CloseRemainderTo As Address
  overload: AlgoSdk.Transaction.CloseRemainderTo*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: close
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.Payment(AlgoSdk.Address,AlgoSdk.TransactionParams,AlgoSdk.Address,System.UInt64,AlgoSdk.Address)
  commentId: M:AlgoSdk.Transaction.Payment(AlgoSdk.Address,AlgoSdk.TransactionParams,AlgoSdk.Address,System.UInt64,AlgoSdk.Address)
  id: Payment(AlgoSdk.Address,AlgoSdk.TransactionParams,AlgoSdk.Address,System.UInt64,AlgoSdk.Address)
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: Payment(Address, TransactionParams, Address, UInt64, Address)
  nameWithType: Transaction.Payment(Address, TransactionParams, Address, UInt64, Address)
  fullName: AlgoSdk.Transaction.Payment(AlgoSdk.Address, AlgoSdk.TransactionParams, AlgoSdk.Address, System.UInt64, AlgoSdk.Address)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/PaymentTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Payment
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/PaymentTxn.cs
    startLine: 38
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nCreate a <xref href=\"AlgoSdk.PaymentTxn\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static PaymentTxn Payment(Address sender, TransactionParams txnParams, Address receiver, ulong amount, Address closeRemainderTo = default(Address))
    parameters:
    - id: sender
      type: AlgoSdk.Address
      description: The address of the account that pays the fee and amount.
    - id: txnParams
      type: AlgoSdk.TransactionParams
      description: See <xref href="AlgoSdk.TransactionParams" data-throw-if-not-resolved="false"></xref>
    - id: receiver
      type: AlgoSdk.Address
      description: The address of the account that receives the amount.
    - id: amount
      type: System.UInt64
      description: The total amount to be sent in microAlgos.
    - id: closeRemainderTo
      type: AlgoSdk.Address
      description: When set, it indicates that the transaction is requesting that the Sender account should be closed, and all remaining funds, after the fee and amount are paid, be transferred to this address.
    return:
      type: AlgoSdk.PaymentTxn
      description: A <xref href="AlgoSdk.PaymentTxn" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function Payment(sender As Address, txnParams As TransactionParams, receiver As Address, amount As ULong, closeRemainderTo As Address = Nothing) As PaymentTxn
  overload: AlgoSdk.Transaction.Payment*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AlgoSdk.Transaction.SignaturePrefix
  commentId: F:AlgoSdk.Transaction.SignaturePrefix
  id: SignaturePrefix
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: SignaturePrefix
  nameWithType: Transaction.SignaturePrefix
  fullName: AlgoSdk.Transaction.SignaturePrefix
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: SignaturePrefix
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
    startLine: 15
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nPrefix bytes for signing transaction bytes.\n"
  example: []
  syntax:
    content: public static readonly byte[] SignaturePrefix
    return:
      type: System.Byte[]
    content.vb: Public Shared ReadOnly SignaturePrefix As Byte()
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: AlgoSdk.Transaction.HeaderParams
  commentId: F:AlgoSdk.Transaction.HeaderParams
  id: HeaderParams
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: HeaderParams
  nameWithType: Transaction.HeaderParams
  fullName: AlgoSdk.Transaction.HeaderParams
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: HeaderParams
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
    startLine: 20
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nParams found in all transactions.\n"
  example: []
  syntax:
    content: public TransactionHeader HeaderParams
    return:
      type: AlgoSdk.TransactionHeader
    content.vb: Public HeaderParams As TransactionHeader
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.PaymentParams
  commentId: F:AlgoSdk.Transaction.PaymentParams
  id: PaymentParams
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: PaymentParams
  nameWithType: Transaction.PaymentParams
  fullName: AlgoSdk.Transaction.PaymentParams
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: PaymentParams
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
    startLine: 26
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nParams found in Payment Transactions.\n"
  example: []
  syntax:
    content: >-
      [AlgoApiField("payment-transaction", null, true)]

      public PaymentTxn.Params PaymentParams
    return:
      type: AlgoSdk.PaymentTxn.Params
    content.vb: >-
      <AlgoApiField("payment-transaction", Nothing, True)>

      Public PaymentParams As PaymentTxn.Params
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: payment-transaction
    - type: System.String
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.AssetConfigurationParams
  commentId: F:AlgoSdk.Transaction.AssetConfigurationParams
  id: AssetConfigurationParams
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: AssetConfigurationParams
  nameWithType: Transaction.AssetConfigurationParams
  fullName: AlgoSdk.Transaction.AssetConfigurationParams
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AssetConfigurationParams
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
    startLine: 32
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nParams found in Asset Configuration Transactions.\n"
  example: []
  syntax:
    content: >-
      [AlgoApiField("asset-config-transaction", null, true)]

      public AssetConfigTxn.Params AssetConfigurationParams
    return:
      type: AlgoSdk.AssetConfigTxn.Params
    content.vb: >-
      <AlgoApiField("asset-config-transaction", Nothing, True)>

      Public AssetConfigurationParams As AssetConfigTxn.Params
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: asset-config-transaction
    - type: System.String
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.AssetTransferParams
  commentId: F:AlgoSdk.Transaction.AssetTransferParams
  id: AssetTransferParams
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: AssetTransferParams
  nameWithType: Transaction.AssetTransferParams
  fullName: AlgoSdk.Transaction.AssetTransferParams
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AssetTransferParams
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
    startLine: 38
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nParams found in Asset Transfer Transactions.\n"
  example: []
  syntax:
    content: >-
      [AlgoApiField("asset-transfer-transaction", null, true)]

      public AssetTransferTxn.Params AssetTransferParams
    return:
      type: AlgoSdk.AssetTransferTxn.Params
    content.vb: >-
      <AlgoApiField("asset-transfer-transaction", Nothing, True)>

      Public AssetTransferParams As AssetTransferTxn.Params
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: asset-transfer-transaction
    - type: System.String
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.AssetFreezeParams
  commentId: F:AlgoSdk.Transaction.AssetFreezeParams
  id: AssetFreezeParams
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: AssetFreezeParams
  nameWithType: Transaction.AssetFreezeParams
  fullName: AlgoSdk.Transaction.AssetFreezeParams
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AssetFreezeParams
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
    startLine: 44
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nParams found in Asset Freeze Transactions.\n"
  example: []
  syntax:
    content: >-
      [AlgoApiField("asset-freeze-transaction", null, true)]

      public AssetFreezeTxn.Params AssetFreezeParams
    return:
      type: AlgoSdk.AssetFreezeTxn.Params
    content.vb: >-
      <AlgoApiField("asset-freeze-transaction", Nothing, True)>

      Public AssetFreezeParams As AssetFreezeTxn.Params
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: asset-freeze-transaction
    - type: System.String
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.ApplicationCallParams
  commentId: F:AlgoSdk.Transaction.ApplicationCallParams
  id: ApplicationCallParams
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: ApplicationCallParams
  nameWithType: Transaction.ApplicationCallParams
  fullName: AlgoSdk.Transaction.ApplicationCallParams
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ApplicationCallParams
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
    startLine: 50
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nParams found in Application Call Transactions.\n"
  example: []
  syntax:
    content: >-
      [AlgoApiField("application-transaction", null, true)]

      public AppCallTxn.Params ApplicationCallParams
    return:
      type: AlgoSdk.AppCallTxn.Params
    content.vb: >-
      <AlgoApiField("application-transaction", Nothing, True)>

      Public ApplicationCallParams As AppCallTxn.Params
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: application-transaction
    - type: System.String
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.KeyRegistrationParams
  commentId: F:AlgoSdk.Transaction.KeyRegistrationParams
  id: KeyRegistrationParams
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: KeyRegistrationParams
  nameWithType: Transaction.KeyRegistrationParams
  fullName: AlgoSdk.Transaction.KeyRegistrationParams
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: KeyRegistrationParams
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
    startLine: 56
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nParams found in Key Registration Transactions.\n"
  example: []
  syntax:
    content: >-
      [AlgoApiField("keyreg-transaction", null, true)]

      public KeyRegTxn.Params KeyRegistrationParams
    return:
      type: AlgoSdk.KeyRegTxn.Params
    content.vb: >-
      <AlgoApiField("keyreg-transaction", Nothing, True)>

      Public KeyRegistrationParams As KeyRegTxn.Params
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: keyreg-transaction
    - type: System.String
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.Signature
  commentId: F:AlgoSdk.Transaction.Signature
  id: Signature
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: Signature
  nameWithType: Transaction.Signature
  fullName: AlgoSdk.Transaction.Signature
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Signature
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
    startLine: 62
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nThe signature used for this Transaction.\n"
  example: []
  syntax:
    content: >-
      [AlgoApiField("signature", null, true)]

      public TransactionSignature Signature
    return:
      type: AlgoSdk.TransactionSignature
    content.vb: >-
      <AlgoApiField("signature", Nothing, True)>

      Public Signature As TransactionSignature
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: signature
    - type: System.String
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.Equals(AlgoSdk.Transaction)
  commentId: M:AlgoSdk.Transaction.Equals(AlgoSdk.Transaction)
  id: Equals(AlgoSdk.Transaction)
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: Equals(Transaction)
  nameWithType: Transaction.Equals(Transaction)
  fullName: AlgoSdk.Transaction.Equals(AlgoSdk.Transaction)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Equals
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
    startLine: 64
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public bool Equals(Transaction other)
    parameters:
    - id: other
      type: AlgoSdk.Transaction
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Transaction) As Boolean
  overload: AlgoSdk.Transaction.Equals*
  implements:
  - System.IEquatable{AlgoSdk.Transaction}.Equals(AlgoSdk.Transaction)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.ToTypedTxn``1
  commentId: M:AlgoSdk.Transaction.ToTypedTxn``1
  id: ToTypedTxn``1
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: ToTypedTxn<T>()
  nameWithType: Transaction.ToTypedTxn<T>()
  fullName: AlgoSdk.Transaction.ToTypedTxn<T>()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ToTypedTxn
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
    startLine: 86
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nConverts this transaction to a specific transaction type implementing <xref href=\"AlgoSdk.ITransaction\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      public T ToTypedTxn<T>()
          where T : struct, ITransaction
    typeParameters:
    - id: T
      description: The type of the transaction to convert to.
    return:
      type: '{T}'
      description: A typed transaction implementing <xref href="AlgoSdk.ITransaction" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function ToTypedTxn(Of T As {Structure, ITransaction}) As T
  overload: AlgoSdk.Transaction.ToTypedTxn*
  nameWithType.vb: Transaction.ToTypedTxn(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.Transaction.ToTypedTxn(Of T)()
  name.vb: ToTypedTxn(Of T)()
- uid: AlgoSdk.Transaction.EstimateBlockSizeBytes
  commentId: M:AlgoSdk.Transaction.EstimateBlockSizeBytes
  id: EstimateBlockSizeBytes
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: EstimateBlockSizeBytes()
  nameWithType: Transaction.EstimateBlockSizeBytes()
  fullName: AlgoSdk.Transaction.EstimateBlockSizeBytes()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: EstimateBlockSizeBytes
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
    startLine: 98
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nEstimate the size this transaction will take up in a block in bytes.\n"
  example: []
  syntax:
    content: public int EstimateBlockSizeBytes()
    return:
      type: System.Int32
      description: Size in bytes.
    content.vb: Public Function EstimateBlockSizeBytes As Integer
  overload: AlgoSdk.Transaction.EstimateBlockSizeBytes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.Sign(AlgoSdk.Crypto.Ed25519.SecretKeyHandle)
  commentId: M:AlgoSdk.Transaction.Sign(AlgoSdk.Crypto.Ed25519.SecretKeyHandle)
  id: Sign(AlgoSdk.Crypto.Ed25519.SecretKeyHandle)
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: Sign(Ed25519.SecretKeyHandle)
  nameWithType: Transaction.Sign(Ed25519.SecretKeyHandle)
  fullName: AlgoSdk.Transaction.Sign(AlgoSdk.Crypto.Ed25519.SecretKeyHandle)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Sign
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
    startLine: 111
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nSign this transaction with a private key.\n"
  example: []
  syntax:
    content: public SignedTransaction Sign(Ed25519.SecretKeyHandle secretKey)
    parameters:
    - id: secretKey
      type: AlgoSdk.Crypto.Ed25519.SecretKeyHandle
      description: The account private key to use to sign this transaction.
    return:
      type: AlgoSdk.SignedTransaction
      description: A <xref href="AlgoSdk.SignedTransaction" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Sign(secretKey As Ed25519.SecretKeyHandle) As SignedTransaction
  overload: AlgoSdk.Transaction.Sign*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.GetSignature(AlgoSdk.Crypto.Ed25519.SecretKeyHandle)
  commentId: M:AlgoSdk.Transaction.GetSignature(AlgoSdk.Crypto.Ed25519.SecretKeyHandle)
  id: GetSignature(AlgoSdk.Crypto.Ed25519.SecretKeyHandle)
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: GetSignature(Ed25519.SecretKeyHandle)
  nameWithType: Transaction.GetSignature(Ed25519.SecretKeyHandle)
  fullName: AlgoSdk.Transaction.GetSignature(AlgoSdk.Crypto.Ed25519.SecretKeyHandle)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetSignature
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
    startLine: 122
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nGet the signature of this transaction using a private key.\n"
  example: []
  syntax:
    content: public Sig GetSignature(Ed25519.SecretKeyHandle secretKey)
    parameters:
    - id: secretKey
      type: AlgoSdk.Crypto.Ed25519.SecretKeyHandle
      description: The private key to use to sign this transaction.
    return:
      type: AlgoSdk.Sig
      description: A <xref href="AlgoSdk.Sig" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GetSignature(secretKey As Ed25519.SecretKeyHandle) As Sig
  overload: AlgoSdk.Transaction.GetSignature*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.ToSignatureMessage(Unity.Collections.Allocator)
  commentId: M:AlgoSdk.Transaction.ToSignatureMessage(Unity.Collections.Allocator)
  id: ToSignatureMessage(Unity.Collections.Allocator)
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: ToSignatureMessage(Allocator)
  nameWithType: Transaction.ToSignatureMessage(Allocator)
  fullName: AlgoSdk.Transaction.ToSignatureMessage(Unity.Collections.Allocator)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ToSignatureMessage
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
    startLine: 133
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nSerializes this transaction to a message to use for signing.\n"
  example: []
  syntax:
    content: public NativeByteArray ToSignatureMessage(Allocator allocator)
    parameters:
    - id: allocator
      type: Unity.Collections.Allocator
      description: How memory should be allocated for the returned byte array.
    return:
      type: AlgoSdk.LowLevel.NativeByteArray
      description: A <xref href="AlgoSdk.LowLevel.NativeByteArray" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function ToSignatureMessage(allocator As Allocator) As NativeByteArray
  overload: AlgoSdk.Transaction.ToSignatureMessage*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.GetId
  commentId: M:AlgoSdk.Transaction.GetId
  id: GetId
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: GetId()
  nameWithType: Transaction.GetId()
  fullName: AlgoSdk.Transaction.GetId()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetId
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
    startLine: 148
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nCalculate the ID for this transaction.\n"
  example: []
  syntax:
    content: public TransactionId GetId()
    return:
      type: AlgoSdk.TransactionId
      description: A <xref href="AlgoSdk.TransactionId" data-throw-if-not-resolved="false"></xref> calculated from its current parameters.
    content.vb: Public Function GetId As TransactionId
  overload: AlgoSdk.Transaction.GetId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.GetGroupId(AlgoSdk.Transaction[])
  commentId: M:AlgoSdk.Transaction.GetGroupId(AlgoSdk.Transaction[])
  id: GetGroupId(AlgoSdk.Transaction[])
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: GetGroupId(Transaction[])
  nameWithType: Transaction.GetGroupId(Transaction[])
  fullName: AlgoSdk.Transaction.GetGroupId(AlgoSdk.Transaction[])
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetGroupId
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
    startLine: 159
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nCalculates the group id for atomic transfers.\n"
  example: []
  syntax:
    content: public static TransactionId GetGroupId(params Transaction[] txns)
    parameters:
    - id: txns
      type: AlgoSdk.Transaction[]
      description: The transactions belonging to this group. Cannot be more than <xref href="AlgoSdk.TransactionGroup.MaxSize" data-throw-if-not-resolved="false"></xref> transactions.
    return:
      type: AlgoSdk.TransactionId
      description: A <xref href="AlgoSdk.TransactionId" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function GetGroupId(ParamArray txns As Transaction()) As TransactionId
  overload: AlgoSdk.Transaction.GetGroupId*
  nameWithType.vb: Transaction.GetGroupId(Transaction())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.Transaction.GetGroupId(AlgoSdk.Transaction())
  name.vb: GetGroupId(Transaction())
- uid: AlgoSdk.Transaction.GetGroupId(AlgoSdk.TransactionId[])
  commentId: M:AlgoSdk.Transaction.GetGroupId(AlgoSdk.TransactionId[])
  id: GetGroupId(AlgoSdk.TransactionId[])
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: GetGroupId(TransactionId[])
  nameWithType: Transaction.GetGroupId(TransactionId[])
  fullName: AlgoSdk.Transaction.GetGroupId(AlgoSdk.TransactionId[])
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetGroupId
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/Transaction.cs
    startLine: 181
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nCalculates the group id for atomic transfers.\n"
  example: []
  syntax:
    content: public static TransactionId GetGroupId(params TransactionId[] txids)
    parameters:
    - id: txids
      type: AlgoSdk.TransactionId[]
      description: The transaction ids belonging to this group. Cannot be more than <xref href="AlgoSdk.TransactionGroup.MaxSize" data-throw-if-not-resolved="false"></xref> transactions.
    return:
      type: AlgoSdk.TransactionId
      description: A <xref href="AlgoSdk.TransactionId" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function GetGroupId(ParamArray txids As TransactionId()) As TransactionId
  overload: AlgoSdk.Transaction.GetGroupId*
  nameWithType.vb: Transaction.GetGroupId(TransactionId())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.Transaction.GetGroupId(AlgoSdk.TransactionId())
  name.vb: GetGroupId(TransactionId())
- uid: AlgoSdk.Transaction.ConfigAsset
  commentId: P:AlgoSdk.Transaction.ConfigAsset
  id: ConfigAsset
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: ConfigAsset
  nameWithType: Transaction.ConfigAsset
  fullName: AlgoSdk.Transaction.ConfigAsset
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetConfigTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ConfigAsset
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetConfigTxn.cs
    startLine: 8
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "caid", false)]

      public ulong ConfigAsset { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField(Nothing, "caid", False)>

      Public Property ConfigAsset As ULong
  overload: AlgoSdk.Transaction.ConfigAsset*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: caid
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.AssetParams
  commentId: P:AlgoSdk.Transaction.AssetParams
  id: AssetParams
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: AssetParams
  nameWithType: Transaction.AssetParams
  fullName: AlgoSdk.Transaction.AssetParams
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetConfigTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AssetParams
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetConfigTxn.cs
    startLine: 15
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "apar", false)]

      public AssetParams AssetParams { get; set; }
    parameters: []
    return:
      type: AlgoSdk.AssetParams
    content.vb: >-
      <AlgoApiField(Nothing, "apar", False)>

      Public Property AssetParams As AssetParams
  overload: AlgoSdk.Transaction.AssetParams*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: apar
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.AssetCreate(AlgoSdk.Address,AlgoSdk.TransactionParams,AlgoSdk.AssetParams)
  commentId: M:AlgoSdk.Transaction.AssetCreate(AlgoSdk.Address,AlgoSdk.TransactionParams,AlgoSdk.AssetParams)
  id: AssetCreate(AlgoSdk.Address,AlgoSdk.TransactionParams,AlgoSdk.AssetParams)
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: AssetCreate(Address, TransactionParams, AssetParams)
  nameWithType: Transaction.AssetCreate(Address, TransactionParams, AssetParams)
  fullName: AlgoSdk.Transaction.AssetCreate(AlgoSdk.Address, AlgoSdk.TransactionParams, AlgoSdk.AssetParams)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetConfigTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AssetCreate
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetConfigTxn.cs
    startLine: 29
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nCreate an <xref href=\"AlgoSdk.AssetConfigTxn\" data-throw-if-not-resolved=\"false\"></xref> that will create an asset.\n"
  example: []
  syntax:
    content: public static AssetConfigTxn AssetCreate(Address sender, TransactionParams txnParams, AssetParams assetParams)
    parameters:
    - id: sender
      type: AlgoSdk.Address
      description: The address of the account that pays the fee and amount.
    - id: txnParams
      type: AlgoSdk.TransactionParams
      description: See <xref href="AlgoSdk.TransactionParams" data-throw-if-not-resolved="false"></xref>
    - id: assetParams
      type: AlgoSdk.AssetParams
      description: See <xref href="AlgoSdk.Transaction.AssetParams" data-throw-if-not-resolved="false"></xref> for all available fields.
    return:
      type: AlgoSdk.AssetConfigTxn
      description: An <xref href="AlgoSdk.AssetConfigTxn" data-throw-if-not-resolved="false"></xref> that will create an asset.
    content.vb: Public Shared Function AssetCreate(sender As Address, txnParams As TransactionParams, assetParams As AssetParams) As AssetConfigTxn
  overload: AlgoSdk.Transaction.AssetCreate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AlgoSdk.Transaction.AssetConfigure(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,AlgoSdk.AssetParams)
  commentId: M:AlgoSdk.Transaction.AssetConfigure(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,AlgoSdk.AssetParams)
  id: AssetConfigure(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,AlgoSdk.AssetParams)
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: AssetConfigure(Address, TransactionParams, UInt64, AssetParams)
  nameWithType: Transaction.AssetConfigure(Address, TransactionParams, UInt64, AssetParams)
  fullName: AlgoSdk.Transaction.AssetConfigure(AlgoSdk.Address, AlgoSdk.TransactionParams, System.UInt64, AlgoSdk.AssetParams)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetConfigTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AssetConfigure
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetConfigTxn.cs
    startLine: 52
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nCreate an <xref href=\"AlgoSdk.AssetConfigTxn\" data-throw-if-not-resolved=\"false\"></xref> that will configure an asset.\n"
  example: []
  syntax:
    content: public static AssetConfigTxn AssetConfigure(Address sender, TransactionParams txnParams, ulong assetId, AssetParams assetParams)
    parameters:
    - id: sender
      type: AlgoSdk.Address
      description: The address of the account that pays the fee and amount.
    - id: txnParams
      type: AlgoSdk.TransactionParams
      description: See <xref href="AlgoSdk.TransactionParams" data-throw-if-not-resolved="false"></xref>
    - id: assetId
      type: System.UInt64
      description: The unique asset id.
    - id: assetParams
      type: AlgoSdk.AssetParams
      description: See <xref href="AlgoSdk.Transaction.AssetParams" data-throw-if-not-resolved="false"></xref> for all available fields.
    return:
      type: AlgoSdk.AssetConfigTxn
      description: An <xref href="AlgoSdk.AssetConfigTxn" data-throw-if-not-resolved="false"></xref> that will configure an asset.
    content.vb: Public Shared Function AssetConfigure(sender As Address, txnParams As TransactionParams, assetId As ULong, assetParams As AssetParams) As AssetConfigTxn
  overload: AlgoSdk.Transaction.AssetConfigure*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AlgoSdk.Transaction.AssetDelete(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64)
  commentId: M:AlgoSdk.Transaction.AssetDelete(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64)
  id: AssetDelete(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64)
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: AssetDelete(Address, TransactionParams, UInt64)
  nameWithType: Transaction.AssetDelete(Address, TransactionParams, UInt64)
  fullName: AlgoSdk.Transaction.AssetDelete(AlgoSdk.Address, AlgoSdk.TransactionParams, System.UInt64)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetConfigTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AssetDelete
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetConfigTxn.cs
    startLine: 76
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nCreate an <xref href=\"AlgoSdk.AssetConfigTxn\" data-throw-if-not-resolved=\"false\"></xref> that will delete an asset.\n"
  example: []
  syntax:
    content: public static AssetConfigTxn AssetDelete(Address sender, TransactionParams txnParams, ulong assetId)
    parameters:
    - id: sender
      type: AlgoSdk.Address
      description: The address of the account that pays the fee and amount.
    - id: txnParams
      type: AlgoSdk.TransactionParams
      description: See <xref href="AlgoSdk.TransactionParams" data-throw-if-not-resolved="false"></xref>
    - id: assetId
      type: System.UInt64
      description: The unique asset id.
    return:
      type: AlgoSdk.AssetConfigTxn
      description: An <xref href="AlgoSdk.AssetConfigTxn" data-throw-if-not-resolved="false"></xref> that will delete an asset.
    content.vb: Public Shared Function AssetDelete(sender As Address, txnParams As TransactionParams, assetId As ULong) As AssetConfigTxn
  overload: AlgoSdk.Transaction.AssetDelete*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AlgoSdk.Transaction.Fee
  commentId: P:AlgoSdk.Transaction.Fee
  id: Fee
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: Fee
  nameWithType: Transaction.Fee
  fullName: AlgoSdk.Transaction.Fee
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Fee
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
    startLine: 9
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("fee", "fee", false)]

      public ulong Fee { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("fee", "fee", False)>

      Public Property Fee As ULong
  overload: AlgoSdk.Transaction.Fee*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: fee
    - type: System.String
      value: fee
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.FirstValidRound
  commentId: P:AlgoSdk.Transaction.FirstValidRound
  id: FirstValidRound
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: FirstValidRound
  nameWithType: Transaction.FirstValidRound
  fullName: AlgoSdk.Transaction.FirstValidRound
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: FirstValidRound
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
    startLine: 16
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("first-valid", "fv", false)]

      public ulong FirstValidRound { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("first-valid", "fv", False)>

      Public Property FirstValidRound As ULong
  overload: AlgoSdk.Transaction.FirstValidRound*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: first-valid
    - type: System.String
      value: fv
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.GenesisHash
  commentId: P:AlgoSdk.Transaction.GenesisHash
  id: GenesisHash
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: GenesisHash
  nameWithType: Transaction.GenesisHash
  fullName: AlgoSdk.Transaction.GenesisHash
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GenesisHash
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
    startLine: 23
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("genesis-hash", "gh", false)]

      public GenesisHash GenesisHash { get; set; }
    parameters: []
    return:
      type: AlgoSdk.GenesisHash
    content.vb: >-
      <AlgoApiField("genesis-hash", "gh", False)>

      Public Property GenesisHash As GenesisHash
  overload: AlgoSdk.Transaction.GenesisHash*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: genesis-hash
    - type: System.String
      value: gh
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.LastValidRound
  commentId: P:AlgoSdk.Transaction.LastValidRound
  id: LastValidRound
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: LastValidRound
  nameWithType: Transaction.LastValidRound
  fullName: AlgoSdk.Transaction.LastValidRound
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: LastValidRound
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
    startLine: 30
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("last-valid", "lv", false)]

      public ulong LastValidRound { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("last-valid", "lv", False)>

      Public Property LastValidRound As ULong
  overload: AlgoSdk.Transaction.LastValidRound*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: last-valid
    - type: System.String
      value: lv
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.Sender
  commentId: P:AlgoSdk.Transaction.Sender
  id: Sender
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: Sender
  nameWithType: Transaction.Sender
  fullName: AlgoSdk.Transaction.Sender
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Sender
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
    startLine: 37
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("sender", "snd", false)]

      public Address Sender { get; set; }
    parameters: []
    return:
      type: AlgoSdk.Address
    content.vb: >-
      <AlgoApiField("sender", "snd", False)>

      Public Property Sender As Address
  overload: AlgoSdk.Transaction.Sender*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: sender
    - type: System.String
      value: snd
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.TransactionType
  commentId: P:AlgoSdk.Transaction.TransactionType
  id: TransactionType
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: TransactionType
  nameWithType: Transaction.TransactionType
  fullName: AlgoSdk.Transaction.TransactionType
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TransactionType
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
    startLine: 44
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("tx-type", "type", false)]

      public TransactionType TransactionType { get; set; }
    parameters: []
    return:
      type: AlgoSdk.TransactionType
    content.vb: >-
      <AlgoApiField("tx-type", "type", False)>

      Public Property TransactionType As TransactionType
  overload: AlgoSdk.Transaction.TransactionType*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: tx-type
    - type: System.String
      value: type
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.GenesisId
  commentId: P:AlgoSdk.Transaction.GenesisId
  id: GenesisId
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: GenesisId
  nameWithType: Transaction.GenesisId
  fullName: AlgoSdk.Transaction.GenesisId
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GenesisId
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
    startLine: 51
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("genesis-id", "gen", false)]

      public FixedString32Bytes GenesisId { get; set; }
    parameters: []
    return:
      type: Unity.Collections.FixedString32Bytes
    content.vb: >-
      <AlgoApiField("genesis-id", "gen", False)>

      Public Property GenesisId As FixedString32Bytes
  overload: AlgoSdk.Transaction.GenesisId*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: genesis-id
    - type: System.String
      value: gen
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.Group
  commentId: P:AlgoSdk.Transaction.Group
  id: Group
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: Group
  nameWithType: Transaction.Group
  fullName: AlgoSdk.Transaction.Group
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Group
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
    startLine: 58
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("group", "grp", false)]

      public Sha512_256_Hash Group { get; set; }
    parameters: []
    return:
      type: AlgoSdk.Crypto.Sha512_256_Hash
    content.vb: >-
      <AlgoApiField("group", "grp", False)>

      Public Property Group As Sha512_256_Hash
  overload: AlgoSdk.Transaction.Group*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: group
    - type: System.String
      value: grp
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.Lease
  commentId: P:AlgoSdk.Transaction.Lease
  id: Lease
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: Lease
  nameWithType: Transaction.Lease
  fullName: AlgoSdk.Transaction.Lease
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Lease
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
    startLine: 65
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("lease", "lx", false)]

      public Sha512_256_Hash Lease { get; set; }
    parameters: []
    return:
      type: AlgoSdk.Crypto.Sha512_256_Hash
    content.vb: >-
      <AlgoApiField("lease", "lx", False)>

      Public Property Lease As Sha512_256_Hash
  overload: AlgoSdk.Transaction.Lease*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: lease
    - type: System.String
      value: lx
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.Note
  commentId: P:AlgoSdk.Transaction.Note
  id: Note
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: Note
  nameWithType: Transaction.Note
  fullName: AlgoSdk.Transaction.Note
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Note
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
    startLine: 72
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("note", "note", false)]

      public byte[] Note { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: >-
      <AlgoApiField("note", "note", False)>

      Public Property Note As Byte()
  overload: AlgoSdk.Transaction.Note*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: note
    - type: System.String
      value: note
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.RekeyTo
  commentId: P:AlgoSdk.Transaction.RekeyTo
  id: RekeyTo
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: RekeyTo
  nameWithType: Transaction.RekeyTo
  fullName: AlgoSdk.Transaction.RekeyTo
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: RekeyTo
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
    startLine: 79
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("rekey-to", "rekey", false)]

      public Address RekeyTo { get; set; }
    parameters: []
    return:
      type: AlgoSdk.Address
    content.vb: >-
      <AlgoApiField("rekey-to", "rekey", False)>

      Public Property RekeyTo As Address
  overload: AlgoSdk.Transaction.RekeyTo*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: rekey-to
    - type: System.String
      value: rekey
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.Id
  commentId: P:AlgoSdk.Transaction.Id
  id: Id
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Transaction.Id
  fullName: AlgoSdk.Transaction.Id
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Id
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
    startLine: 86
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("id", "id", true)]

      public TransactionId Id { get; set; }
    parameters: []
    return:
      type: AlgoSdk.TransactionId
    content.vb: >-
      <AlgoApiField("id", "id", True)>

      Public Property Id As TransactionId
  overload: AlgoSdk.Transaction.Id*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: id
    - type: System.String
      value: id
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.AuthAddress
  commentId: P:AlgoSdk.Transaction.AuthAddress
  id: AuthAddress
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: AuthAddress
  nameWithType: Transaction.AuthAddress
  fullName: AlgoSdk.Transaction.AuthAddress
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AuthAddress
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
    startLine: 93
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("auth-addr", "sgnr", true)]

      public Address AuthAddress { get; set; }
    parameters: []
    return:
      type: AlgoSdk.Address
    content.vb: >-
      <AlgoApiField("auth-addr", "sgnr", True)>

      Public Property AuthAddress As Address
  overload: AlgoSdk.Transaction.AuthAddress*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: auth-addr
    - type: System.String
      value: sgnr
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.CloseRewards
  commentId: P:AlgoSdk.Transaction.CloseRewards
  id: CloseRewards
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: CloseRewards
  nameWithType: Transaction.CloseRewards
  fullName: AlgoSdk.Transaction.CloseRewards
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: CloseRewards
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
    startLine: 100
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("close-rewards", "rc", true)]

      public ulong CloseRewards { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("close-rewards", "rc", True)>

      Public Property CloseRewards As ULong
  overload: AlgoSdk.Transaction.CloseRewards*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: close-rewards
    - type: System.String
      value: rc
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.ClosingAmount
  commentId: P:AlgoSdk.Transaction.ClosingAmount
  id: ClosingAmount
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: ClosingAmount
  nameWithType: Transaction.ClosingAmount
  fullName: AlgoSdk.Transaction.ClosingAmount
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ClosingAmount
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
    startLine: 107
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("closing-amount", "ca", true)]

      public ulong ClosingAmount { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("closing-amount", "ca", True)>

      Public Property ClosingAmount As ULong
  overload: AlgoSdk.Transaction.ClosingAmount*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: closing-amount
    - type: System.String
      value: ca
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.ConfirmedRound
  commentId: P:AlgoSdk.Transaction.ConfirmedRound
  id: ConfirmedRound
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: ConfirmedRound
  nameWithType: Transaction.ConfirmedRound
  fullName: AlgoSdk.Transaction.ConfirmedRound
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ConfirmedRound
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
    startLine: 114
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("confirmed-round", null, true)]

      public ulong ConfirmedRound { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("confirmed-round", Nothing, True)>

      Public Property ConfirmedRound As ULong
  overload: AlgoSdk.Transaction.ConfirmedRound*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: confirmed-round
    - type: System.String
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.CreatedApplicationIndex
  commentId: P:AlgoSdk.Transaction.CreatedApplicationIndex
  id: CreatedApplicationIndex
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: CreatedApplicationIndex
  nameWithType: Transaction.CreatedApplicationIndex
  fullName: AlgoSdk.Transaction.CreatedApplicationIndex
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: CreatedApplicationIndex
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
    startLine: 121
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("created-application-index", null, true)]

      public ulong CreatedApplicationIndex { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("created-application-index", Nothing, True)>

      Public Property CreatedApplicationIndex As ULong
  overload: AlgoSdk.Transaction.CreatedApplicationIndex*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: created-application-index
    - type: System.String
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.CreatedAssetIndex
  commentId: P:AlgoSdk.Transaction.CreatedAssetIndex
  id: CreatedAssetIndex
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: CreatedAssetIndex
  nameWithType: Transaction.CreatedAssetIndex
  fullName: AlgoSdk.Transaction.CreatedAssetIndex
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: CreatedAssetIndex
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
    startLine: 128
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("created-asset-index", null, true)]

      public ulong CreatedAssetIndex { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("created-asset-index", Nothing, True)>

      Public Property CreatedAssetIndex As ULong
  overload: AlgoSdk.Transaction.CreatedAssetIndex*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: created-asset-index
    - type: System.String
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.IntraRoundOffset
  commentId: P:AlgoSdk.Transaction.IntraRoundOffset
  id: IntraRoundOffset
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: IntraRoundOffset
  nameWithType: Transaction.IntraRoundOffset
  fullName: AlgoSdk.Transaction.IntraRoundOffset
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: IntraRoundOffset
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
    startLine: 135
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("intra-round-offset", null, true)]

      public ulong IntraRoundOffset { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("intra-round-offset", Nothing, True)>

      Public Property IntraRoundOffset As ULong
  overload: AlgoSdk.Transaction.IntraRoundOffset*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: intra-round-offset
    - type: System.String
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.GlobalStateDelta
  commentId: P:AlgoSdk.Transaction.GlobalStateDelta
  id: GlobalStateDelta
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: GlobalStateDelta
  nameWithType: Transaction.GlobalStateDelta
  fullName: AlgoSdk.Transaction.GlobalStateDelta
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GlobalStateDelta
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
    startLine: 142
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("global-state-delta", "gd", true)]

      public EvalDeltaKeyValue[] GlobalStateDelta { get; set; }
    parameters: []
    return:
      type: AlgoSdk.EvalDeltaKeyValue[]
    content.vb: >-
      <AlgoApiField("global-state-delta", "gd", True)>

      Public Property GlobalStateDelta As EvalDeltaKeyValue()
  overload: AlgoSdk.Transaction.GlobalStateDelta*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: global-state-delta
    - type: System.String
      value: gd
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.LocalStateDelta
  commentId: P:AlgoSdk.Transaction.LocalStateDelta
  id: LocalStateDelta
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: LocalStateDelta
  nameWithType: Transaction.LocalStateDelta
  fullName: AlgoSdk.Transaction.LocalStateDelta
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: LocalStateDelta
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
    startLine: 149
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("local-state-delta", "ld", true)]

      public ApplicationStateDelta[] LocalStateDelta { get; set; }
    parameters: []
    return:
      type: AlgoSdk.ApplicationStateDelta[]
    content.vb: >-
      <AlgoApiField("local-state-delta", "ld", True)>

      Public Property LocalStateDelta As ApplicationStateDelta()
  overload: AlgoSdk.Transaction.LocalStateDelta*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: local-state-delta
    - type: System.String
      value: ld
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.ReceiverRewards
  commentId: P:AlgoSdk.Transaction.ReceiverRewards
  id: ReceiverRewards
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: ReceiverRewards
  nameWithType: Transaction.ReceiverRewards
  fullName: AlgoSdk.Transaction.ReceiverRewards
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ReceiverRewards
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
    startLine: 156
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("receiver-rewards", "rr", true)]

      public ulong ReceiverRewards { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("receiver-rewards", "rr", True)>

      Public Property ReceiverRewards As ULong
  overload: AlgoSdk.Transaction.ReceiverRewards*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: receiver-rewards
    - type: System.String
      value: rr
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.RoundTime
  commentId: P:AlgoSdk.Transaction.RoundTime
  id: RoundTime
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: RoundTime
  nameWithType: Transaction.RoundTime
  fullName: AlgoSdk.Transaction.RoundTime
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: RoundTime
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
    startLine: 163
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("round-time", null, true)]

      public ulong RoundTime { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("round-time", Nothing, True)>

      Public Property RoundTime As ULong
  overload: AlgoSdk.Transaction.RoundTime*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: round-time
    - type: System.String
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.SenderRewards
  commentId: P:AlgoSdk.Transaction.SenderRewards
  id: SenderRewards
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: SenderRewards
  nameWithType: Transaction.SenderRewards
  fullName: AlgoSdk.Transaction.SenderRewards
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: SenderRewards
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/TransactionHeader.cs
    startLine: 170
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("sender-rewards", "rs", true)]

      public ulong SenderRewards { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("sender-rewards", "rs", True)>

      Public Property SenderRewards As ULong
  overload: AlgoSdk.Transaction.SenderRewards*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: sender-rewards
    - type: System.String
      value: rs
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.VoteParticipationKey
  commentId: P:AlgoSdk.Transaction.VoteParticipationKey
  id: VoteParticipationKey
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: VoteParticipationKey
  nameWithType: Transaction.VoteParticipationKey
  fullName: AlgoSdk.Transaction.VoteParticipationKey
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/KeyRegTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: VoteParticipationKey
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/KeyRegTxn.cs
    startLine: 8
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "votekey", false)]

      public Ed25519.PublicKey VoteParticipationKey { get; set; }
    parameters: []
    return:
      type: AlgoSdk.Crypto.Ed25519.PublicKey
    content.vb: >-
      <AlgoApiField(Nothing, "votekey", False)>

      Public Property VoteParticipationKey As Ed25519.PublicKey
  overload: AlgoSdk.Transaction.VoteParticipationKey*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: votekey
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.SelectionParticipationKey
  commentId: P:AlgoSdk.Transaction.SelectionParticipationKey
  id: SelectionParticipationKey
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: SelectionParticipationKey
  nameWithType: Transaction.SelectionParticipationKey
  fullName: AlgoSdk.Transaction.SelectionParticipationKey
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/KeyRegTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: SelectionParticipationKey
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/KeyRegTxn.cs
    startLine: 15
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "selkey", false)]

      public VrfPubKey SelectionParticipationKey { get; set; }
    parameters: []
    return:
      type: AlgoSdk.VrfPubKey
    content.vb: >-
      <AlgoApiField(Nothing, "selkey", False)>

      Public Property SelectionParticipationKey As VrfPubKey
  overload: AlgoSdk.Transaction.SelectionParticipationKey*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: selkey
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.VoteFirst
  commentId: P:AlgoSdk.Transaction.VoteFirst
  id: VoteFirst
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: VoteFirst
  nameWithType: Transaction.VoteFirst
  fullName: AlgoSdk.Transaction.VoteFirst
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/KeyRegTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: VoteFirst
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/KeyRegTxn.cs
    startLine: 22
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "votefst", false)]

      public ulong VoteFirst { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField(Nothing, "votefst", False)>

      Public Property VoteFirst As ULong
  overload: AlgoSdk.Transaction.VoteFirst*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: votefst
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.VoteLast
  commentId: P:AlgoSdk.Transaction.VoteLast
  id: VoteLast
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: VoteLast
  nameWithType: Transaction.VoteLast
  fullName: AlgoSdk.Transaction.VoteLast
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/KeyRegTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: VoteLast
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/KeyRegTxn.cs
    startLine: 29
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "votelst", false)]

      public ulong VoteLast { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField(Nothing, "votelst", False)>

      Public Property VoteLast As ULong
  overload: AlgoSdk.Transaction.VoteLast*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: votelst
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.VoteKeyDilution
  commentId: P:AlgoSdk.Transaction.VoteKeyDilution
  id: VoteKeyDilution
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: VoteKeyDilution
  nameWithType: Transaction.VoteKeyDilution
  fullName: AlgoSdk.Transaction.VoteKeyDilution
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/KeyRegTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: VoteKeyDilution
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/KeyRegTxn.cs
    startLine: 36
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "votekd", false)]

      public ulong VoteKeyDilution { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField(Nothing, "votekd", False)>

      Public Property VoteKeyDilution As ULong
  overload: AlgoSdk.Transaction.VoteKeyDilution*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: votekd
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.NonParticipation
  commentId: P:AlgoSdk.Transaction.NonParticipation
  id: NonParticipation
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: NonParticipation
  nameWithType: Transaction.NonParticipation
  fullName: AlgoSdk.Transaction.NonParticipation
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/KeyRegTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: NonParticipation
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/KeyRegTxn.cs
    startLine: 43
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "nonpart", false)]

      public Optional<bool> NonParticipation { get; set; }
    parameters: []
    return:
      type: AlgoSdk.Optional{System.Boolean}
    content.vb: "<AlgoApiField(Nothing, \"nonpart\", False)>\nPublic Property NonParticipation As "
  overload: AlgoSdk.Transaction.NonParticipation*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: nonpart
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.KeyRegOnline(AlgoSdk.Address,AlgoSdk.TransactionParams,AlgoSdk.AccountParticipation)
  commentId: M:AlgoSdk.Transaction.KeyRegOnline(AlgoSdk.Address,AlgoSdk.TransactionParams,AlgoSdk.AccountParticipation)
  id: KeyRegOnline(AlgoSdk.Address,AlgoSdk.TransactionParams,AlgoSdk.AccountParticipation)
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: KeyRegOnline(Address, TransactionParams, AccountParticipation)
  nameWithType: Transaction.KeyRegOnline(Address, TransactionParams, AccountParticipation)
  fullName: AlgoSdk.Transaction.KeyRegOnline(AlgoSdk.Address, AlgoSdk.TransactionParams, AlgoSdk.AccountParticipation)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/KeyRegTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: KeyRegOnline
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/KeyRegTxn.cs
    startLine: 57
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nRegister account online for participation.\n"
  example: []
  syntax:
    content: public static KeyRegTxn KeyRegOnline(Address account, TransactionParams txnParams, AccountParticipation accountParticipation)
    parameters:
    - id: account
      type: AlgoSdk.Address
      description: Account to register online. This is the sender of the transaction.
    - id: txnParams
      type: AlgoSdk.TransactionParams
      description: See <xref href="AlgoSdk.TransactionParams" data-throw-if-not-resolved="false"></xref>
    - id: accountParticipation
      type: AlgoSdk.AccountParticipation
      description: See <xref href="AlgoSdk.AccountParticipation" data-throw-if-not-resolved="false"></xref>
    return:
      type: AlgoSdk.KeyRegTxn
      description: A <xref href="AlgoSdk.KeyRegTxn" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function KeyRegOnline(account As Address, txnParams As TransactionParams, accountParticipation As AccountParticipation) As KeyRegTxn
  overload: AlgoSdk.Transaction.KeyRegOnline*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AlgoSdk.Transaction.KeyRegOffline(AlgoSdk.Address,AlgoSdk.TransactionParams)
  commentId: M:AlgoSdk.Transaction.KeyRegOffline(AlgoSdk.Address,AlgoSdk.TransactionParams)
  id: KeyRegOffline(AlgoSdk.Address,AlgoSdk.TransactionParams)
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: KeyRegOffline(Address, TransactionParams)
  nameWithType: Transaction.KeyRegOffline(Address, TransactionParams)
  fullName: AlgoSdk.Transaction.KeyRegOffline(AlgoSdk.Address, AlgoSdk.TransactionParams)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/KeyRegTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: KeyRegOffline
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/KeyRegTxn.cs
    startLine: 78
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nRegister account offline for participation.\n"
  example: []
  syntax:
    content: public static KeyRegTxn KeyRegOffline(Address account, TransactionParams txnParams)
    parameters:
    - id: account
      type: AlgoSdk.Address
      description: Account to register offline. This is the sender of the transaction.
    - id: txnParams
      type: AlgoSdk.TransactionParams
      description: See <xref href="AlgoSdk.TransactionParams" data-throw-if-not-resolved="false"></xref>
    return:
      type: AlgoSdk.KeyRegTxn
      description: A <xref href="AlgoSdk.KeyRegTxn" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function KeyRegOffline(account As Address, txnParams As TransactionParams) As KeyRegTxn
  overload: AlgoSdk.Transaction.KeyRegOffline*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AlgoSdk.Transaction.FreezeAccount
  commentId: P:AlgoSdk.Transaction.FreezeAccount
  id: FreezeAccount
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: FreezeAccount
  nameWithType: Transaction.FreezeAccount
  fullName: AlgoSdk.Transaction.FreezeAccount
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetFreezeTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: FreezeAccount
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetFreezeTxn.cs
    startLine: 8
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "fadd", false)]

      public Address FreezeAccount { get; set; }
    parameters: []
    return:
      type: AlgoSdk.Address
    content.vb: >-
      <AlgoApiField(Nothing, "fadd", False)>

      Public Property FreezeAccount As Address
  overload: AlgoSdk.Transaction.FreezeAccount*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: fadd
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.FreezeAsset
  commentId: P:AlgoSdk.Transaction.FreezeAsset
  id: FreezeAsset
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: FreezeAsset
  nameWithType: Transaction.FreezeAsset
  fullName: AlgoSdk.Transaction.FreezeAsset
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetFreezeTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: FreezeAsset
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetFreezeTxn.cs
    startLine: 15
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "faid", false)]

      public ulong FreezeAsset { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField(Nothing, "faid", False)>

      Public Property FreezeAsset As ULong
  overload: AlgoSdk.Transaction.FreezeAsset*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: faid
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.AssetFrozen
  commentId: P:AlgoSdk.Transaction.AssetFrozen
  id: AssetFrozen
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: AssetFrozen
  nameWithType: Transaction.AssetFrozen
  fullName: AlgoSdk.Transaction.AssetFrozen
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetFreezeTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AssetFrozen
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetFreezeTxn.cs
    startLine: 22
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "afrz", false)]

      public Optional<bool> AssetFrozen { get; set; }
    parameters: []
    return:
      type: AlgoSdk.Optional{System.Boolean}
    content.vb: "<AlgoApiField(Nothing, \"afrz\", False)>\nPublic Property AssetFrozen As "
  overload: AlgoSdk.Transaction.AssetFrozen*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: afrz
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.AssetFreeze(AlgoSdk.Address,AlgoSdk.TransactionParams,AlgoSdk.Address,System.UInt64,System.Boolean)
  commentId: M:AlgoSdk.Transaction.AssetFreeze(AlgoSdk.Address,AlgoSdk.TransactionParams,AlgoSdk.Address,System.UInt64,System.Boolean)
  id: AssetFreeze(AlgoSdk.Address,AlgoSdk.TransactionParams,AlgoSdk.Address,System.UInt64,System.Boolean)
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: AssetFreeze(Address, TransactionParams, Address, UInt64, Boolean)
  nameWithType: Transaction.AssetFreeze(Address, TransactionParams, Address, UInt64, Boolean)
  fullName: AlgoSdk.Transaction.AssetFreeze(AlgoSdk.Address, AlgoSdk.TransactionParams, AlgoSdk.Address, System.UInt64, System.Boolean)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetFreezeTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AssetFreeze
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetFreezeTxn.cs
    startLine: 38
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nCreate an <xref href=\"AlgoSdk.AssetFreezeTxn\" data-throw-if-not-resolved=\"false\"></xref> which is used to freeze or unfreeze an asset from transfers.\n"
  example: []
  syntax:
    content: public static AssetFreezeTxn AssetFreeze(Address sender, TransactionParams txnParams, Address freezeAccount, ulong freezeAsset, bool assetFrozen)
    parameters:
    - id: sender
      type: AlgoSdk.Address
      description: The address of the account that pays the fee and amount.
    - id: txnParams
      type: AlgoSdk.TransactionParams
      description: See <xref href="AlgoSdk.TransactionParams" data-throw-if-not-resolved="false"></xref>
    - id: freezeAccount
      type: AlgoSdk.Address
      description: The address of the account whose asset is being frozen or unfrozen.
    - id: freezeAsset
      type: System.UInt64
      description: The asset ID being frozen or unfrozen.
    - id: assetFrozen
      type: System.Boolean
      description: True to freeze the asset.
    return:
      type: AlgoSdk.AssetFreezeTxn
      description: An <xref href="AlgoSdk.AssetFreezeTxn" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function AssetFreeze(sender As Address, txnParams As TransactionParams, freezeAccount As Address, freezeAsset As ULong, assetFrozen As Boolean) As AssetFreezeTxn
  overload: AlgoSdk.Transaction.AssetFreeze*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AlgoSdk.Transaction.ApplicationId
  commentId: P:AlgoSdk.Transaction.ApplicationId
  id: ApplicationId
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: ApplicationId
  nameWithType: Transaction.ApplicationId
  fullName: AlgoSdk.Transaction.ApplicationId
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ApplicationId
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
    startLine: 8
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "apid", false)]

      public ulong ApplicationId { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField(Nothing, "apid", False)>

      Public Property ApplicationId As ULong
  overload: AlgoSdk.Transaction.ApplicationId*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: apid
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.OnComplete
  commentId: P:AlgoSdk.Transaction.OnComplete
  id: OnComplete
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: OnComplete
  nameWithType: Transaction.OnComplete
  fullName: AlgoSdk.Transaction.OnComplete
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: OnComplete
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
    startLine: 15
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("on-completion", "apan", false)]

      public OnCompletion OnComplete { get; set; }
    parameters: []
    return:
      type: AlgoSdk.OnCompletion
    content.vb: >-
      <AlgoApiField("on-completion", "apan", False)>

      Public Property OnComplete As OnCompletion
  overload: AlgoSdk.Transaction.OnComplete*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: on-completion
    - type: System.String
      value: apan
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.ApprovalProgram
  commentId: P:AlgoSdk.Transaction.ApprovalProgram
  id: ApprovalProgram
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: ApprovalProgram
  nameWithType: Transaction.ApprovalProgram
  fullName: AlgoSdk.Transaction.ApprovalProgram
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ApprovalProgram
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
    startLine: 22
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "apap", false)]

      public byte[] ApprovalProgram { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: >-
      <AlgoApiField(Nothing, "apap", False)>

      Public Property ApprovalProgram As Byte()
  overload: AlgoSdk.Transaction.ApprovalProgram*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: apap
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.ClearStateProgram
  commentId: P:AlgoSdk.Transaction.ClearStateProgram
  id: ClearStateProgram
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: ClearStateProgram
  nameWithType: Transaction.ClearStateProgram
  fullName: AlgoSdk.Transaction.ClearStateProgram
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ClearStateProgram
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
    startLine: 29
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "apsu", false)]

      public byte[] ClearStateProgram { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: >-
      <AlgoApiField(Nothing, "apsu", False)>

      Public Property ClearStateProgram As Byte()
  overload: AlgoSdk.Transaction.ClearStateProgram*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: apsu
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.AppArguments
  commentId: P:AlgoSdk.Transaction.AppArguments
  id: AppArguments
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: AppArguments
  nameWithType: Transaction.AppArguments
  fullName: AlgoSdk.Transaction.AppArguments
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AppArguments
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
    startLine: 36
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "apaa", false)]

      public byte[] AppArguments { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: >-
      <AlgoApiField(Nothing, "apaa", False)>

      Public Property AppArguments As Byte()
  overload: AlgoSdk.Transaction.AppArguments*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: apaa
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.Accounts
  commentId: P:AlgoSdk.Transaction.Accounts
  id: Accounts
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: Accounts
  nameWithType: Transaction.Accounts
  fullName: AlgoSdk.Transaction.Accounts
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Accounts
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
    startLine: 43
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "apat", false)]

      public Address[] Accounts { get; set; }
    parameters: []
    return:
      type: AlgoSdk.Address[]
    content.vb: >-
      <AlgoApiField(Nothing, "apat", False)>

      Public Property Accounts As Address()
  overload: AlgoSdk.Transaction.Accounts*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: apat
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.ForeignApps
  commentId: P:AlgoSdk.Transaction.ForeignApps
  id: ForeignApps
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: ForeignApps
  nameWithType: Transaction.ForeignApps
  fullName: AlgoSdk.Transaction.ForeignApps
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ForeignApps
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
    startLine: 50
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "apfa", false)]

      public ulong[] ForeignApps { get; set; }
    parameters: []
    return:
      type: System.UInt64[]
    content.vb: >-
      <AlgoApiField(Nothing, "apfa", False)>

      Public Property ForeignApps As ULong()
  overload: AlgoSdk.Transaction.ForeignApps*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: apfa
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.ForeignAssets
  commentId: P:AlgoSdk.Transaction.ForeignAssets
  id: ForeignAssets
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: ForeignAssets
  nameWithType: Transaction.ForeignAssets
  fullName: AlgoSdk.Transaction.ForeignAssets
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ForeignAssets
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
    startLine: 57
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "apas", false)]

      public ulong[] ForeignAssets { get; set; }
    parameters: []
    return:
      type: System.UInt64[]
    content.vb: >-
      <AlgoApiField(Nothing, "apas", False)>

      Public Property ForeignAssets As ULong()
  overload: AlgoSdk.Transaction.ForeignAssets*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: apas
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.GlobalStateSchema
  commentId: P:AlgoSdk.Transaction.GlobalStateSchema
  id: GlobalStateSchema
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: GlobalStateSchema
  nameWithType: Transaction.GlobalStateSchema
  fullName: AlgoSdk.Transaction.GlobalStateSchema
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GlobalStateSchema
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
    startLine: 64
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "apgs", false)]

      public StateSchema GlobalStateSchema { get; set; }
    parameters: []
    return:
      type: AlgoSdk.StateSchema
    content.vb: >-
      <AlgoApiField(Nothing, "apgs", False)>

      Public Property GlobalStateSchema As StateSchema
  overload: AlgoSdk.Transaction.GlobalStateSchema*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: apgs
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.LocalStateSchema
  commentId: P:AlgoSdk.Transaction.LocalStateSchema
  id: LocalStateSchema
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: LocalStateSchema
  nameWithType: Transaction.LocalStateSchema
  fullName: AlgoSdk.Transaction.LocalStateSchema
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: LocalStateSchema
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
    startLine: 71
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "apls", false)]

      public StateSchema LocalStateSchema { get; set; }
    parameters: []
    return:
      type: AlgoSdk.StateSchema
    content.vb: >-
      <AlgoApiField(Nothing, "apls", False)>

      Public Property LocalStateSchema As StateSchema
  overload: AlgoSdk.Transaction.LocalStateSchema*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: apls
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.ExtraProgramPages
  commentId: P:AlgoSdk.Transaction.ExtraProgramPages
  id: ExtraProgramPages
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: ExtraProgramPages
  nameWithType: Transaction.ExtraProgramPages
  fullName: AlgoSdk.Transaction.ExtraProgramPages
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ExtraProgramPages
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
    startLine: 78
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "apep", false)]

      public ulong ExtraProgramPages { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField(Nothing, "apep", False)>

      Public Property ExtraProgramPages As ULong
  overload: AlgoSdk.Transaction.ExtraProgramPages*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: apep
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.AppCreate(AlgoSdk.Address,AlgoSdk.TransactionParams,System.Byte[],System.Byte[],AlgoSdk.StateSchema,AlgoSdk.StateSchema,System.UInt64)
  commentId: M:AlgoSdk.Transaction.AppCreate(AlgoSdk.Address,AlgoSdk.TransactionParams,System.Byte[],System.Byte[],AlgoSdk.StateSchema,AlgoSdk.StateSchema,System.UInt64)
  id: AppCreate(AlgoSdk.Address,AlgoSdk.TransactionParams,System.Byte[],System.Byte[],AlgoSdk.StateSchema,AlgoSdk.StateSchema,System.UInt64)
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: AppCreate(Address, TransactionParams, Byte[], Byte[], StateSchema, StateSchema, UInt64)
  nameWithType: Transaction.AppCreate(Address, TransactionParams, Byte[], Byte[], StateSchema, StateSchema, UInt64)
  fullName: AlgoSdk.Transaction.AppCreate(AlgoSdk.Address, AlgoSdk.TransactionParams, System.Byte[], System.Byte[], AlgoSdk.StateSchema, AlgoSdk.StateSchema, System.UInt64)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AppCreate
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
    startLine: 96
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nCreate an <xref href=\"AlgoSdk.AppCallTxn\" data-throw-if-not-resolved=\"false\"></xref> with params to create apps.\n"
  example: []
  syntax:
    content: public static AppCallTxn AppCreate(Address sender, TransactionParams txnParams, byte[] approvalProgram, byte[] clearStateProgram, StateSchema globalStateSchema = default(StateSchema), StateSchema localStateSchema = default(StateSchema), ulong extraProgramPages = 0UL)
    parameters:
    - id: sender
      type: AlgoSdk.Address
      description: The address of the account that pays the fee and amount.
    - id: txnParams
      type: AlgoSdk.TransactionParams
      description: See <xref href="AlgoSdk.TransactionParams" data-throw-if-not-resolved="false"></xref>
    - id: approvalProgram
      type: System.Byte[]
      description: Logic executed for every application transaction, except when on-completion is set to &quot;clear&quot;. It can read and write global state for the application, as well as account-specific local state. Approval programs may reject the transaction.
    - id: clearStateProgram
      type: System.Byte[]
      description: Logic executed for application transactions with on-completion set to &quot;clear&quot;. It can read and write global state for the application, as well as account-specific local state. Clear state programs cannot reject the transaction.
    - id: globalStateSchema
      type: AlgoSdk.StateSchema
      description: Holds the maximum number of global state values defined within a <xref href="AlgoSdk.StateSchema" data-throw-if-not-resolved="false"></xref> object.
    - id: localStateSchema
      type: AlgoSdk.StateSchema
      description: Holds the maximum number of local state values defined within a <xref href="AlgoSdk.StateSchema" data-throw-if-not-resolved="false"></xref> object.
    - id: extraProgramPages
      type: System.UInt64
      description: Number of additional pages allocated to the application&apos;s approval and clear state programs. Each ExtraProgramPages is 2048 bytes. The sum of ApprovalProgram and ClearStateProgram may not exceed 2048*(1+ExtraProgramPages) bytes.
    return:
      type: AlgoSdk.AppCallTxn
      description: An <xref href="AlgoSdk.AppCallTxn" data-throw-if-not-resolved="false"></xref> with params set to create apps
    content.vb: Public Shared Function AppCreate(sender As Address, txnParams As TransactionParams, approvalProgram As Byte(), clearStateProgram As Byte(), globalStateSchema As StateSchema = Nothing, localStateSchema As StateSchema = Nothing, extraProgramPages As ULong = 0UL) As AppCallTxn
  overload: AlgoSdk.Transaction.AppCreate*
  nameWithType.vb: Transaction.AppCreate(Address, TransactionParams, Byte(), Byte(), StateSchema, StateSchema, UInt64)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.Transaction.AppCreate(AlgoSdk.Address, AlgoSdk.TransactionParams, System.Byte(), System.Byte(), AlgoSdk.StateSchema, AlgoSdk.StateSchema, System.UInt64)
  name.vb: AppCreate(Address, TransactionParams, Byte(), Byte(), StateSchema, StateSchema, UInt64)
- uid: AlgoSdk.Transaction.AppCloseOut(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,System.Byte[],AlgoSdk.Address[],System.UInt64[],System.UInt64[])
  commentId: M:AlgoSdk.Transaction.AppCloseOut(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,System.Byte[],AlgoSdk.Address[],System.UInt64[],System.UInt64[])
  id: AppCloseOut(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,System.Byte[],AlgoSdk.Address[],System.UInt64[],System.UInt64[])
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: AppCloseOut(Address, TransactionParams, UInt64, Byte[], Address[], UInt64[], UInt64[])
  nameWithType: Transaction.AppCloseOut(Address, TransactionParams, UInt64, Byte[], Address[], UInt64[], UInt64[])
  fullName: AlgoSdk.Transaction.AppCloseOut(AlgoSdk.Address, AlgoSdk.TransactionParams, System.UInt64, System.Byte[], AlgoSdk.Address[], System.UInt64[], System.UInt64[])
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AppCloseOut
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
    startLine: 131
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nCreate an <xref href=\"AlgoSdk.AppCallTxn\" data-throw-if-not-resolved=\"false\"></xref> with params to close out state with your account.\n"
  example: []
  syntax:
    content: public static AppCallTxn AppCloseOut(Address sender, TransactionParams txnParams, ulong applicationId, byte[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null)
    parameters:
    - id: sender
      type: AlgoSdk.Address
      description: The address of the account that pays the fee and amount.
    - id: txnParams
      type: AlgoSdk.TransactionParams
      description: See <xref href="AlgoSdk.TransactionParams" data-throw-if-not-resolved="false"></xref>
    - id: applicationId
      type: System.UInt64
      description: ID of the application being configured.
    - id: appArguments
      type: System.Byte[]
      description: Transaction specific arguments accessed from the application&apos;s approval-program and clear-state-program.
    - id: accounts
      type: AlgoSdk.Address[]
      description: List of accounts in addition to the sender that may be accessed from the application&apos;s approval-program and clear-state-program.
    - id: foreignApps
      type: System.UInt64[]
      description: Lists the applications in addition to the application-id whose global states may be accessed by this application&apos;s approval-program and clear-state-program. The access is read-only.
    - id: foreignAssets
      type: System.UInt64[]
      description: Lists the assets whose AssetParams may be accessed by this application&apos;s approval-program and clear-state-program. The access is read-only.
    return:
      type: AlgoSdk.AppCallTxn
      description: An <xref href="AlgoSdk.AppCallTxn" data-throw-if-not-resolved="false"></xref> with params set to close out state with your account.
    content.vb: Public Shared Function AppCloseOut(sender As Address, txnParams As TransactionParams, applicationId As ULong, appArguments As Byte() = Nothing, accounts As Address() = Nothing, foreignApps As ULong() = Nothing, foreignAssets As ULong() = Nothing) As AppCallTxn
  overload: AlgoSdk.Transaction.AppCloseOut*
  nameWithType.vb: Transaction.AppCloseOut(Address, TransactionParams, UInt64, Byte(), Address(), UInt64(), UInt64())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.Transaction.AppCloseOut(AlgoSdk.Address, AlgoSdk.TransactionParams, System.UInt64, System.Byte(), AlgoSdk.Address(), System.UInt64(), System.UInt64())
  name.vb: AppCloseOut(Address, TransactionParams, UInt64, Byte(), Address(), UInt64(), UInt64())
- uid: AlgoSdk.Transaction.AppClearState(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,System.Byte[],AlgoSdk.Address[],System.UInt64[],System.UInt64[])
  commentId: M:AlgoSdk.Transaction.AppClearState(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,System.Byte[],AlgoSdk.Address[],System.UInt64[],System.UInt64[])
  id: AppClearState(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,System.Byte[],AlgoSdk.Address[],System.UInt64[],System.UInt64[])
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: AppClearState(Address, TransactionParams, UInt64, Byte[], Address[], UInt64[], UInt64[])
  nameWithType: Transaction.AppClearState(Address, TransactionParams, UInt64, Byte[], Address[], UInt64[], UInt64[])
  fullName: AlgoSdk.Transaction.AppClearState(AlgoSdk.Address, AlgoSdk.TransactionParams, System.UInt64, System.Byte[], AlgoSdk.Address[], System.UInt64[], System.UInt64[])
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AppClearState
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
    startLine: 166
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nCreate an <xref href=\"AlgoSdk.AppCallTxn\" data-throw-if-not-resolved=\"false\"></xref> with params to clear state with your account.\n"
  example: []
  syntax:
    content: public static AppCallTxn AppClearState(Address sender, TransactionParams txnParams, ulong applicationId, byte[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null)
    parameters:
    - id: sender
      type: AlgoSdk.Address
      description: The address of the account that pays the fee and amount.
    - id: txnParams
      type: AlgoSdk.TransactionParams
      description: See <xref href="AlgoSdk.TransactionParams" data-throw-if-not-resolved="false"></xref>
    - id: applicationId
      type: System.UInt64
      description: ID of the application being configured.
    - id: appArguments
      type: System.Byte[]
      description: Transaction specific arguments accessed from the application&apos;s approval-program and clear-state-program.
    - id: accounts
      type: AlgoSdk.Address[]
      description: List of accounts in addition to the sender that may be accessed from the application&apos;s approval-program and clear-state-program.
    - id: foreignApps
      type: System.UInt64[]
      description: Lists the applications in addition to the application-id whose global states may be accessed by this application&apos;s approval-program and clear-state-program. The access is read-only.
    - id: foreignAssets
      type: System.UInt64[]
      description: Lists the assets whose AssetParams may be accessed by this application&apos;s approval-program and clear-state-program. The access is read-only.
    return:
      type: AlgoSdk.AppCallTxn
      description: An <xref href="AlgoSdk.AppCallTxn" data-throw-if-not-resolved="false"></xref> with params to clear app state with your account.
    content.vb: Public Shared Function AppClearState(sender As Address, txnParams As TransactionParams, applicationId As ULong, appArguments As Byte() = Nothing, accounts As Address() = Nothing, foreignApps As ULong() = Nothing, foreignAssets As ULong() = Nothing) As AppCallTxn
  overload: AlgoSdk.Transaction.AppClearState*
  nameWithType.vb: Transaction.AppClearState(Address, TransactionParams, UInt64, Byte(), Address(), UInt64(), UInt64())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.Transaction.AppClearState(AlgoSdk.Address, AlgoSdk.TransactionParams, System.UInt64, System.Byte(), AlgoSdk.Address(), System.UInt64(), System.UInt64())
  name.vb: AppClearState(Address, TransactionParams, UInt64, Byte(), Address(), UInt64(), UInt64())
- uid: AlgoSdk.Transaction.AppCall(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,AlgoSdk.OnCompletion,System.Byte[],AlgoSdk.Address[],System.UInt64[],System.UInt64[])
  commentId: M:AlgoSdk.Transaction.AppCall(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,AlgoSdk.OnCompletion,System.Byte[],AlgoSdk.Address[],System.UInt64[],System.UInt64[])
  id: AppCall(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,AlgoSdk.OnCompletion,System.Byte[],AlgoSdk.Address[],System.UInt64[],System.UInt64[])
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: AppCall(Address, TransactionParams, UInt64, OnCompletion, Byte[], Address[], UInt64[], UInt64[])
  nameWithType: Transaction.AppCall(Address, TransactionParams, UInt64, OnCompletion, Byte[], Address[], UInt64[], UInt64[])
  fullName: AlgoSdk.Transaction.AppCall(AlgoSdk.Address, AlgoSdk.TransactionParams, System.UInt64, AlgoSdk.OnCompletion, System.Byte[], AlgoSdk.Address[], System.UInt64[], System.UInt64[])
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AppCall
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
    startLine: 202
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nCreate an <xref href=\"AlgoSdk.AppCallTxn\" data-throw-if-not-resolved=\"false\"></xref> used to call an application.\n"
  example: []
  syntax:
    content: public static AppCallTxn AppCall(Address sender, TransactionParams txnParams, ulong applicationId, OnCompletion onComplete = OnCompletion.NoOp, byte[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null)
    parameters:
    - id: sender
      type: AlgoSdk.Address
      description: The address of the account that pays the fee and amount.
    - id: txnParams
      type: AlgoSdk.TransactionParams
      description: See <xref href="AlgoSdk.TransactionParams" data-throw-if-not-resolved="false"></xref>
    - id: applicationId
      type: System.UInt64
      description: ID of the application being configured.
    - id: onComplete
      type: AlgoSdk.OnCompletion
      description: Defines what additional actions occur with the transaction.
    - id: appArguments
      type: System.Byte[]
      description: Transaction specific arguments accessed from the application&apos;s approval-program and clear-state-program.
    - id: accounts
      type: AlgoSdk.Address[]
      description: List of accounts in addition to the sender that may be accessed from the application&apos;s approval-program and clear-state-program.
    - id: foreignApps
      type: System.UInt64[]
      description: Lists the applications in addition to the application-id whose global states may be accessed by this application&apos;s approval-program and clear-state-program. The access is read-only.
    - id: foreignAssets
      type: System.UInt64[]
      description: Lists the assets whose AssetParams may be accessed by this application&apos;s approval-program and clear-state-program. The access is read-only.
    return:
      type: AlgoSdk.AppCallTxn
      description: An <xref href="AlgoSdk.AppCallTxn" data-throw-if-not-resolved="false"></xref> used to call an application.
    content.vb: Public Shared Function AppCall(sender As Address, txnParams As TransactionParams, applicationId As ULong, onComplete As OnCompletion = OnCompletion.NoOp, appArguments As Byte() = Nothing, accounts As Address() = Nothing, foreignApps As ULong() = Nothing, foreignAssets As ULong() = Nothing) As AppCallTxn
  overload: AlgoSdk.Transaction.AppCall*
  nameWithType.vb: Transaction.AppCall(Address, TransactionParams, UInt64, OnCompletion, Byte(), Address(), UInt64(), UInt64())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.Transaction.AppCall(AlgoSdk.Address, AlgoSdk.TransactionParams, System.UInt64, AlgoSdk.OnCompletion, System.Byte(), AlgoSdk.Address(), System.UInt64(), System.UInt64())
  name.vb: AppCall(Address, TransactionParams, UInt64, OnCompletion, Byte(), Address(), UInt64(), UInt64())
- uid: AlgoSdk.Transaction.AppOptIn(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,System.Byte[],AlgoSdk.Address[],System.UInt64[],System.UInt64[])
  commentId: M:AlgoSdk.Transaction.AppOptIn(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,System.Byte[],AlgoSdk.Address[],System.UInt64[],System.UInt64[])
  id: AppOptIn(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,System.Byte[],AlgoSdk.Address[],System.UInt64[],System.UInt64[])
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: AppOptIn(Address, TransactionParams, UInt64, Byte[], Address[], UInt64[], UInt64[])
  nameWithType: Transaction.AppOptIn(Address, TransactionParams, UInt64, Byte[], Address[], UInt64[], UInt64[])
  fullName: AlgoSdk.Transaction.AppOptIn(AlgoSdk.Address, AlgoSdk.TransactionParams, System.UInt64, System.Byte[], AlgoSdk.Address[], System.UInt64[], System.UInt64[])
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AppOptIn
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
    startLine: 238
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nCreate an <xref href=\"AlgoSdk.AppCallTxn\" data-throw-if-not-resolved=\"false\"></xref> used to opt in to an application.\n"
  example: []
  syntax:
    content: public static AppCallTxn AppOptIn(Address sender, TransactionParams txnParams, ulong applicationId, byte[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null)
    parameters:
    - id: sender
      type: AlgoSdk.Address
      description: The address of the account that pays the fee and amount.
    - id: txnParams
      type: AlgoSdk.TransactionParams
      description: See <xref href="AlgoSdk.TransactionParams" data-throw-if-not-resolved="false"></xref>
    - id: applicationId
      type: System.UInt64
      description: ID of the application being configured.
    - id: appArguments
      type: System.Byte[]
      description: Transaction specific arguments accessed from the application&apos;s approval-program and clear-state-program.
    - id: accounts
      type: AlgoSdk.Address[]
      description: List of accounts in addition to the sender that may be accessed from the application&apos;s approval-program and clear-state-program.
    - id: foreignApps
      type: System.UInt64[]
      description: Lists the applications in addition to the application-id whose global states may be accessed by this application&apos;s approval-program and clear-state-program. The access is read-only.
    - id: foreignAssets
      type: System.UInt64[]
      description: Lists the assets whose AssetParams may be accessed by this application&apos;s approval-program and clear-state-program. The access is read-only.
    return:
      type: AlgoSdk.AppCallTxn
      description: An <xref href="AlgoSdk.AppCallTxn" data-throw-if-not-resolved="false"></xref> with params to opt in to an application.
    content.vb: Public Shared Function AppOptIn(sender As Address, txnParams As TransactionParams, applicationId As ULong, appArguments As Byte() = Nothing, accounts As Address() = Nothing, foreignApps As ULong() = Nothing, foreignAssets As ULong() = Nothing) As AppCallTxn
  overload: AlgoSdk.Transaction.AppOptIn*
  nameWithType.vb: Transaction.AppOptIn(Address, TransactionParams, UInt64, Byte(), Address(), UInt64(), UInt64())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.Transaction.AppOptIn(AlgoSdk.Address, AlgoSdk.TransactionParams, System.UInt64, System.Byte(), AlgoSdk.Address(), System.UInt64(), System.UInt64())
  name.vb: AppOptIn(Address, TransactionParams, UInt64, Byte(), Address(), UInt64(), UInt64())
- uid: AlgoSdk.Transaction.AppUpdateTxn(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,System.Byte[],System.Byte[],System.UInt64,System.Byte[],AlgoSdk.Address[],System.UInt64[],System.UInt64[])
  commentId: M:AlgoSdk.Transaction.AppUpdateTxn(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,System.Byte[],System.Byte[],System.UInt64,System.Byte[],AlgoSdk.Address[],System.UInt64[],System.UInt64[])
  id: AppUpdateTxn(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,System.Byte[],System.Byte[],System.UInt64,System.Byte[],AlgoSdk.Address[],System.UInt64[],System.UInt64[])
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: AppUpdateTxn(Address, TransactionParams, UInt64, Byte[], Byte[], UInt64, Byte[], Address[], UInt64[], UInt64[])
  nameWithType: Transaction.AppUpdateTxn(Address, TransactionParams, UInt64, Byte[], Byte[], UInt64, Byte[], Address[], UInt64[], UInt64[])
  fullName: AlgoSdk.Transaction.AppUpdateTxn(AlgoSdk.Address, AlgoSdk.TransactionParams, System.UInt64, System.Byte[], System.Byte[], System.UInt64, System.Byte[], AlgoSdk.Address[], System.UInt64[], System.UInt64[])
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AppUpdateTxn
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
    startLine: 276
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nCreate an <xref href=\"AlgoSdk.AppCallTxn\" data-throw-if-not-resolved=\"false\"></xref> used to update an application.\n"
  example: []
  syntax:
    content: public static AppCallTxn AppUpdateTxn(Address sender, TransactionParams txnParams, ulong applicationId, byte[] approvalProgram = null, byte[] clearStateProgram = null, ulong extraProgramPages = 0UL, byte[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null)
    parameters:
    - id: sender
      type: AlgoSdk.Address
      description: The address of the account that pays the fee and amount.
    - id: txnParams
      type: AlgoSdk.TransactionParams
      description: See <xref href="AlgoSdk.TransactionParams" data-throw-if-not-resolved="false"></xref>
    - id: applicationId
      type: System.UInt64
      description: ID of the application being configured.
    - id: approvalProgram
      type: System.Byte[]
      description: Logic executed for every application transaction, except when on-completion is set to &quot;clear&quot;. It can read and write global state for the application, as well as account-specific local state. Approval programs may reject the transaction.
    - id: clearStateProgram
      type: System.Byte[]
      description: Logic executed for application transactions with on-completion set to &quot;clear&quot;. It can read and write global state for the application, as well as account-specific local state. Clear state programs cannot reject the transaction.
    - id: extraProgramPages
      type: System.UInt64
      description: Number of additional pages allocated to the application&apos;s approval and clear state programs. Each ExtraProgramPages is 2048 bytes. The sum of ApprovalProgram and ClearStateProgram may not exceed 2048*(1+ExtraProgramPages) bytes.
    - id: appArguments
      type: System.Byte[]
      description: Transaction specific arguments accessed from the application&apos;s approval-program and clear-state-program.
    - id: accounts
      type: AlgoSdk.Address[]
      description: List of accounts in addition to the sender that may be accessed from the application&apos;s approval-program and clear-state-program.
    - id: foreignApps
      type: System.UInt64[]
      description: Lists the applications in addition to the application-id whose global states may be accessed by this application&apos;s approval-program and clear-state-program. The access is read-only.
    - id: foreignAssets
      type: System.UInt64[]
      description: Lists the assets whose AssetParams may be accessed by this application&apos;s approval-program and clear-state-program. The access is read-only.
    return:
      type: AlgoSdk.AppCallTxn
      description: An <xref href="AlgoSdk.AppCallTxn" data-throw-if-not-resolved="false"></xref> with params to update an application.
    content.vb: Public Shared Function AppUpdateTxn(sender As Address, txnParams As TransactionParams, applicationId As ULong, approvalProgram As Byte() = Nothing, clearStateProgram As Byte() = Nothing, extraProgramPages As ULong = 0UL, appArguments As Byte() = Nothing, accounts As Address() = Nothing, foreignApps As ULong() = Nothing, foreignAssets As ULong() = Nothing) As AppCallTxn
  overload: AlgoSdk.Transaction.AppUpdateTxn*
  nameWithType.vb: Transaction.AppUpdateTxn(Address, TransactionParams, UInt64, Byte(), Byte(), UInt64, Byte(), Address(), UInt64(), UInt64())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.Transaction.AppUpdateTxn(AlgoSdk.Address, AlgoSdk.TransactionParams, System.UInt64, System.Byte(), System.Byte(), System.UInt64, System.Byte(), AlgoSdk.Address(), System.UInt64(), System.UInt64())
  name.vb: AppUpdateTxn(Address, TransactionParams, UInt64, Byte(), Byte(), UInt64, Byte(), Address(), UInt64(), UInt64())
- uid: AlgoSdk.Transaction.AppDelete(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,System.Byte[],AlgoSdk.Address[],System.UInt64[],System.UInt64[])
  commentId: M:AlgoSdk.Transaction.AppDelete(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,System.Byte[],AlgoSdk.Address[],System.UInt64[],System.UInt64[])
  id: AppDelete(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,System.Byte[],AlgoSdk.Address[],System.UInt64[],System.UInt64[])
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: AppDelete(Address, TransactionParams, UInt64, Byte[], Address[], UInt64[], UInt64[])
  nameWithType: Transaction.AppDelete(Address, TransactionParams, UInt64, Byte[], Address[], UInt64[], UInt64[])
  fullName: AlgoSdk.Transaction.AppDelete(AlgoSdk.Address, AlgoSdk.TransactionParams, System.UInt64, System.Byte[], AlgoSdk.Address[], System.UInt64[], System.UInt64[])
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AppDelete
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AppCallTxn.cs
    startLine: 317
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nCreate an <xref href=\"AlgoSdk.AppCallTxn\" data-throw-if-not-resolved=\"false\"></xref> used to delete an application.\n"
  example: []
  syntax:
    content: public static AppCallTxn AppDelete(Address sender, TransactionParams txnParams, ulong applicationId, byte[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null)
    parameters:
    - id: sender
      type: AlgoSdk.Address
      description: The address of the account that pays the fee and amount.
    - id: txnParams
      type: AlgoSdk.TransactionParams
      description: See <xref href="AlgoSdk.TransactionParams" data-throw-if-not-resolved="false"></xref>
    - id: applicationId
      type: System.UInt64
      description: ID of the application being configured.
    - id: appArguments
      type: System.Byte[]
      description: Transaction specific arguments accessed from the application&apos;s approval-program and clear-state-program.
    - id: accounts
      type: AlgoSdk.Address[]
      description: List of accounts in addition to the sender that may be accessed from the application&apos;s approval-program and clear-state-program.
    - id: foreignApps
      type: System.UInt64[]
      description: Lists the applications in addition to the application-id whose global states may be accessed by this application&apos;s approval-program and clear-state-program. The access is read-only.
    - id: foreignAssets
      type: System.UInt64[]
      description: Lists the assets whose AssetParams may be accessed by this application&apos;s approval-program and clear-state-program. The access is read-only.
    return:
      type: AlgoSdk.AppCallTxn
      description: An <xref href="AlgoSdk.AppCallTxn" data-throw-if-not-resolved="false"></xref> with params to delete an application.
    content.vb: Public Shared Function AppDelete(sender As Address, txnParams As TransactionParams, applicationId As ULong, appArguments As Byte() = Nothing, accounts As Address() = Nothing, foreignApps As ULong() = Nothing, foreignAssets As ULong() = Nothing) As AppCallTxn
  overload: AlgoSdk.Transaction.AppDelete*
  nameWithType.vb: Transaction.AppDelete(Address, TransactionParams, UInt64, Byte(), Address(), UInt64(), UInt64())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.Transaction.AppDelete(AlgoSdk.Address, AlgoSdk.TransactionParams, System.UInt64, System.Byte(), AlgoSdk.Address(), System.UInt64(), System.UInt64())
  name.vb: AppDelete(Address, TransactionParams, UInt64, Byte(), Address(), UInt64(), UInt64())
- uid: AlgoSdk.Transaction.XferAsset
  commentId: P:AlgoSdk.Transaction.XferAsset
  id: XferAsset
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: XferAsset
  nameWithType: Transaction.XferAsset
  fullName: AlgoSdk.Transaction.XferAsset
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetTransferTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: XferAsset
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetTransferTxn.cs
    startLine: 8
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "xaid", false)]

      public ulong XferAsset { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField(Nothing, "xaid", False)>

      Public Property XferAsset As ULong
  overload: AlgoSdk.Transaction.XferAsset*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: xaid
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.AssetAmount
  commentId: P:AlgoSdk.Transaction.AssetAmount
  id: AssetAmount
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: AssetAmount
  nameWithType: Transaction.AssetAmount
  fullName: AlgoSdk.Transaction.AssetAmount
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetTransferTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AssetAmount
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetTransferTxn.cs
    startLine: 15
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "aamt", false)]

      public ulong AssetAmount { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField(Nothing, "aamt", False)>

      Public Property AssetAmount As ULong
  overload: AlgoSdk.Transaction.AssetAmount*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: aamt
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.AssetSender
  commentId: P:AlgoSdk.Transaction.AssetSender
  id: AssetSender
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: AssetSender
  nameWithType: Transaction.AssetSender
  fullName: AlgoSdk.Transaction.AssetSender
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetTransferTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AssetSender
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetTransferTxn.cs
    startLine: 22
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "asnd", false)]

      public Address AssetSender { get; set; }
    parameters: []
    return:
      type: AlgoSdk.Address
    content.vb: >-
      <AlgoApiField(Nothing, "asnd", False)>

      Public Property AssetSender As Address
  overload: AlgoSdk.Transaction.AssetSender*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: asnd
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.AssetReceiver
  commentId: P:AlgoSdk.Transaction.AssetReceiver
  id: AssetReceiver
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: AssetReceiver
  nameWithType: Transaction.AssetReceiver
  fullName: AlgoSdk.Transaction.AssetReceiver
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetTransferTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AssetReceiver
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetTransferTxn.cs
    startLine: 29
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "arcv", false)]

      public Address AssetReceiver { get; set; }
    parameters: []
    return:
      type: AlgoSdk.Address
    content.vb: >-
      <AlgoApiField(Nothing, "arcv", False)>

      Public Property AssetReceiver As Address
  overload: AlgoSdk.Transaction.AssetReceiver*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: arcv
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.AssetCloseTo
  commentId: P:AlgoSdk.Transaction.AssetCloseTo
  id: AssetCloseTo
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: AssetCloseTo
  nameWithType: Transaction.AssetCloseTo
  fullName: AlgoSdk.Transaction.AssetCloseTo
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetTransferTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AssetCloseTo
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetTransferTxn.cs
    startLine: 36
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField(null, "aclose", false)]

      public Address AssetCloseTo { get; set; }
    parameters: []
    return:
      type: AlgoSdk.Address
    content.vb: >-
      <AlgoApiField(Nothing, "aclose", False)>

      Public Property AssetCloseTo As Address
  overload: AlgoSdk.Transaction.AssetCloseTo*
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
    - type: System.String
      value: aclose
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AlgoSdk.Transaction.AssetTransfer(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,System.UInt64,AlgoSdk.Address)
  commentId: M:AlgoSdk.Transaction.AssetTransfer(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,System.UInt64,AlgoSdk.Address)
  id: AssetTransfer(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,System.UInt64,AlgoSdk.Address)
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: AssetTransfer(Address, TransactionParams, UInt64, UInt64, Address)
  nameWithType: Transaction.AssetTransfer(Address, TransactionParams, UInt64, UInt64, Address)
  fullName: AlgoSdk.Transaction.AssetTransfer(AlgoSdk.Address, AlgoSdk.TransactionParams, System.UInt64, System.UInt64, AlgoSdk.Address)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetTransferTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AssetTransfer
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetTransferTxn.cs
    startLine: 52
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nCreate an <xref href=\"AlgoSdk.AssetTransferTxn\" data-throw-if-not-resolved=\"false\"></xref> for transferring an asset to another account.\n"
  example: []
  syntax:
    content: public static AssetTransferTxn AssetTransfer(Address sender, TransactionParams txnParams, ulong xferAsset, ulong assetAmount, Address assetReceiver)
    parameters:
    - id: sender
      type: AlgoSdk.Address
      description: The address of the account that pays the fee and sends the asset amount.
    - id: txnParams
      type: AlgoSdk.TransactionParams
      description: See <xref href="AlgoSdk.TransactionParams" data-throw-if-not-resolved="false"></xref>
    - id: xferAsset
      type: System.UInt64
      description: The unique ID of the asset to be transferred.
    - id: assetAmount
      type: System.UInt64
      description: The amount of the asset to be transferred. A zero amount transferred to self allocates that asset in the account&apos;s Asset map.
    - id: assetReceiver
      type: AlgoSdk.Address
      description: ''
    return:
      type: AlgoSdk.AssetTransferTxn
      description: An <xref href="AlgoSdk.AssetTransferTxn" data-throw-if-not-resolved="false"></xref> for transferring an asset to another account.
    content.vb: Public Shared Function AssetTransfer(sender As Address, txnParams As TransactionParams, xferAsset As ULong, assetAmount As ULong, assetReceiver As Address) As AssetTransferTxn
  overload: AlgoSdk.Transaction.AssetTransfer*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AlgoSdk.Transaction.AssetAccept(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64)
  commentId: M:AlgoSdk.Transaction.AssetAccept(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64)
  id: AssetAccept(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64)
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: AssetAccept(Address, TransactionParams, UInt64)
  nameWithType: Transaction.AssetAccept(Address, TransactionParams, UInt64)
  fullName: AlgoSdk.Transaction.AssetAccept(AlgoSdk.Address, AlgoSdk.TransactionParams, System.UInt64)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetTransferTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AssetAccept
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetTransferTxn.cs
    startLine: 78
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nCreate an <xref href=\"AlgoSdk.AssetTransferTxn\" data-throw-if-not-resolved=\"false\"></xref> for opting in to an asset.\n"
  example: []
  syntax:
    content: public static AssetTransferTxn AssetAccept(Address sender, TransactionParams txnParams, ulong xferAsset)
    parameters:
    - id: sender
      type: AlgoSdk.Address
      description: The address of the account that pays the fee and amount.
    - id: txnParams
      type: AlgoSdk.TransactionParams
      description: See <xref href="AlgoSdk.TransactionParams" data-throw-if-not-resolved="false"></xref>
    - id: xferAsset
      type: System.UInt64
      description: The unique ID of the asset to opt-in to.
    return:
      type: AlgoSdk.AssetTransferTxn
      description: An <xref href="AlgoSdk.AssetTransferTxn" data-throw-if-not-resolved="false"></xref> for opting in to an asset.
    content.vb: Public Shared Function AssetAccept(sender As Address, txnParams As TransactionParams, xferAsset As ULong) As AssetTransferTxn
  overload: AlgoSdk.Transaction.AssetAccept*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AlgoSdk.Transaction.AssetClawback(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,System.UInt64,AlgoSdk.Address,AlgoSdk.Address,AlgoSdk.Address)
  commentId: M:AlgoSdk.Transaction.AssetClawback(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,System.UInt64,AlgoSdk.Address,AlgoSdk.Address,AlgoSdk.Address)
  id: AssetClawback(AlgoSdk.Address,AlgoSdk.TransactionParams,System.UInt64,System.UInt64,AlgoSdk.Address,AlgoSdk.Address,AlgoSdk.Address)
  parent: AlgoSdk.Transaction
  langs:
  - csharp
  - vb
  name: AssetClawback(Address, TransactionParams, UInt64, UInt64, Address, Address, Address)
  nameWithType: Transaction.AssetClawback(Address, TransactionParams, UInt64, UInt64, Address, Address, Address)
  fullName: AlgoSdk.Transaction.AssetClawback(AlgoSdk.Address, AlgoSdk.TransactionParams, System.UInt64, System.UInt64, AlgoSdk.Address, AlgoSdk.Address, AlgoSdk.Address)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetTransferTxn.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AssetClawback
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/AssetTransferTxn.cs
    startLine: 104
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nCreates a form of <xref href=\"AlgoSdk.AssetTransferTxn\" data-throw-if-not-resolved=\"false\"></xref> to clawback assets from an account.\n"
  example: []
  syntax:
    content: public static AssetTransferTxn AssetClawback(Address sender, TransactionParams txnParams, ulong xferAsset, ulong assetAmount, Address assetSender, Address assetReceiver, Address assetCloseTo = default(Address))
    parameters:
    - id: sender
      type: AlgoSdk.Address
      description: The sender of this transaction must be the clawback account specified in the asset configuration.
    - id: txnParams
      type: AlgoSdk.TransactionParams
      description: See <xref href="AlgoSdk.TransactionParams" data-throw-if-not-resolved="false"></xref>
    - id: xferAsset
      type: System.UInt64
      description: The unique ID of the asset to be transferred.
    - id: assetAmount
      type: System.UInt64
      description: The amount of the asset to be transferred.
    - id: assetSender
      type: AlgoSdk.Address
      description: The address from which the funds will be withdrawn.
    - id: assetReceiver
      type: AlgoSdk.Address
      description: The recipient of the asset transfer.
    - id: assetCloseTo
      type: AlgoSdk.Address
      description: Specify this field to remove the entire asset holding balance from the AssetSender account. It will not remove the asset holding.
    return:
      type: AlgoSdk.AssetTransferTxn
      description: A form of <xref href="AlgoSdk.AssetTransferTxn" data-throw-if-not-resolved="false"></xref> to clawback assets from an account
    content.vb: Public Shared Function AssetClawback(sender As Address, txnParams As TransactionParams, xferAsset As ULong, assetAmount As ULong, assetSender As Address, assetReceiver As Address, assetCloseTo As Address = Nothing) As AssetTransferTxn
  overload: AlgoSdk.Transaction.AssetClawback*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: System.IEquatable{AlgoSdk.Transaction}
  commentId: T:System.IEquatable{AlgoSdk.Transaction}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Transaction>
  nameWithType: IEquatable<Transaction>
  fullName: System.IEquatable<AlgoSdk.Transaction>
  nameWithType.vb: IEquatable(Of Transaction)
  fullName.vb: System.IEquatable(Of AlgoSdk.Transaction)
  name.vb: IEquatable(Of Transaction)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: AlgoSdk.Transaction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: AlgoSdk.Transaction
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AlgoSdk.Transaction.Receiver*
  commentId: Overload:AlgoSdk.Transaction.Receiver
  name: Receiver
  nameWithType: Transaction.Receiver
  fullName: AlgoSdk.Transaction.Receiver
- uid: AlgoSdk.Address
  commentId: T:AlgoSdk.Address
  parent: AlgoSdk
  name: Address
  nameWithType: Address
  fullName: AlgoSdk.Address
- uid: AlgoSdk.Transaction.Amount*
  commentId: Overload:AlgoSdk.Transaction.Amount
  name: Amount
  nameWithType: Transaction.Amount
  fullName: AlgoSdk.Transaction.Amount
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: AlgoSdk.Transaction.CloseRemainderTo*
  commentId: Overload:AlgoSdk.Transaction.CloseRemainderTo
  name: CloseRemainderTo
  nameWithType: Transaction.CloseRemainderTo
  fullName: AlgoSdk.Transaction.CloseRemainderTo
- uid: AlgoSdk.PaymentTxn
  commentId: T:AlgoSdk.PaymentTxn
  parent: AlgoSdk
  name: PaymentTxn
  nameWithType: PaymentTxn
  fullName: AlgoSdk.PaymentTxn
- uid: AlgoSdk.TransactionParams
  commentId: T:AlgoSdk.TransactionParams
  parent: AlgoSdk
  name: TransactionParams
  nameWithType: TransactionParams
  fullName: AlgoSdk.TransactionParams
- uid: AlgoSdk.Transaction.Payment*
  commentId: Overload:AlgoSdk.Transaction.Payment
  name: Payment
  nameWithType: Transaction.Payment
  fullName: AlgoSdk.Transaction.Payment
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AlgoSdk.TransactionHeader
  commentId: T:AlgoSdk.TransactionHeader
  parent: AlgoSdk
  name: TransactionHeader
  nameWithType: TransactionHeader
  fullName: AlgoSdk.TransactionHeader
- uid: AlgoSdk.PaymentTxn.Params
  commentId: T:AlgoSdk.PaymentTxn.Params
  parent: AlgoSdk
  name: PaymentTxn.Params
  nameWithType: PaymentTxn.Params
  fullName: AlgoSdk.PaymentTxn.Params
- uid: AlgoSdk.AssetConfigTxn.Params
  commentId: T:AlgoSdk.AssetConfigTxn.Params
  parent: AlgoSdk
  name: AssetConfigTxn.Params
  nameWithType: AssetConfigTxn.Params
  fullName: AlgoSdk.AssetConfigTxn.Params
- uid: AlgoSdk.AssetTransferTxn.Params
  commentId: T:AlgoSdk.AssetTransferTxn.Params
  parent: AlgoSdk
  name: AssetTransferTxn.Params
  nameWithType: AssetTransferTxn.Params
  fullName: AlgoSdk.AssetTransferTxn.Params
- uid: AlgoSdk.AssetFreezeTxn.Params
  commentId: T:AlgoSdk.AssetFreezeTxn.Params
  parent: AlgoSdk
  name: AssetFreezeTxn.Params
  nameWithType: AssetFreezeTxn.Params
  fullName: AlgoSdk.AssetFreezeTxn.Params
- uid: AlgoSdk.AppCallTxn.Params
  commentId: T:AlgoSdk.AppCallTxn.Params
  parent: AlgoSdk
  name: AppCallTxn.Params
  nameWithType: AppCallTxn.Params
  fullName: AlgoSdk.AppCallTxn.Params
- uid: AlgoSdk.KeyRegTxn.Params
  commentId: T:AlgoSdk.KeyRegTxn.Params
  parent: AlgoSdk
  name: KeyRegTxn.Params
  nameWithType: KeyRegTxn.Params
  fullName: AlgoSdk.KeyRegTxn.Params
- uid: AlgoSdk.TransactionSignature
  commentId: T:AlgoSdk.TransactionSignature
  parent: AlgoSdk
  name: TransactionSignature
  nameWithType: TransactionSignature
  fullName: AlgoSdk.TransactionSignature
- uid: AlgoSdk.Transaction.Equals*
  commentId: Overload:AlgoSdk.Transaction.Equals
  name: Equals
  nameWithType: Transaction.Equals
  fullName: AlgoSdk.Transaction.Equals
- uid: System.IEquatable{AlgoSdk.Transaction}.Equals(AlgoSdk.Transaction)
  commentId: M:System.IEquatable{AlgoSdk.Transaction}.Equals(AlgoSdk.Transaction)
  parent: System.IEquatable{AlgoSdk.Transaction}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Transaction)
  nameWithType: IEquatable<Transaction>.Equals(Transaction)
  fullName: System.IEquatable<AlgoSdk.Transaction>.Equals(AlgoSdk.Transaction)
  nameWithType.vb: IEquatable(Of Transaction).Equals(Transaction)
  fullName.vb: System.IEquatable(Of AlgoSdk.Transaction).Equals(AlgoSdk.Transaction)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Transaction>.Equals
    fullName: System.IEquatable<AlgoSdk.Transaction>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: AlgoSdk.Transaction
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Transaction).Equals
    fullName: System.IEquatable(Of AlgoSdk.Transaction).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: AlgoSdk.Transaction
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.Transaction
  commentId: T:AlgoSdk.Transaction
  parent: AlgoSdk
  name: Transaction
  nameWithType: Transaction
  fullName: AlgoSdk.Transaction
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.ITransaction
  commentId: T:AlgoSdk.ITransaction
  parent: AlgoSdk
  name: ITransaction
  nameWithType: ITransaction
  fullName: AlgoSdk.ITransaction
- uid: AlgoSdk.Transaction.ToTypedTxn*
  commentId: Overload:AlgoSdk.Transaction.ToTypedTxn
  name: ToTypedTxn
  nameWithType: Transaction.ToTypedTxn
  fullName: AlgoSdk.Transaction.ToTypedTxn
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: AlgoSdk.Transaction.EstimateBlockSizeBytes*
  commentId: Overload:AlgoSdk.Transaction.EstimateBlockSizeBytes
  name: EstimateBlockSizeBytes
  nameWithType: Transaction.EstimateBlockSizeBytes
  fullName: AlgoSdk.Transaction.EstimateBlockSizeBytes
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: AlgoSdk.SignedTransaction
  commentId: T:AlgoSdk.SignedTransaction
  parent: AlgoSdk
  name: SignedTransaction
  nameWithType: SignedTransaction
  fullName: AlgoSdk.SignedTransaction
- uid: AlgoSdk.Transaction.Sign*
  commentId: Overload:AlgoSdk.Transaction.Sign
  name: Sign
  nameWithType: Transaction.Sign
  fullName: AlgoSdk.Transaction.Sign
- uid: AlgoSdk.Crypto.Ed25519.SecretKeyHandle
  commentId: T:AlgoSdk.Crypto.Ed25519.SecretKeyHandle
  parent: AlgoSdk.Crypto
  name: Ed25519.SecretKeyHandle
  nameWithType: Ed25519.SecretKeyHandle
  fullName: AlgoSdk.Crypto.Ed25519.SecretKeyHandle
- uid: AlgoSdk.Crypto
  commentId: N:AlgoSdk.Crypto
  name: AlgoSdk.Crypto
  nameWithType: AlgoSdk.Crypto
  fullName: AlgoSdk.Crypto
- uid: AlgoSdk.Sig
  commentId: T:AlgoSdk.Sig
  parent: AlgoSdk
  name: Sig
  nameWithType: Sig
  fullName: AlgoSdk.Sig
- uid: AlgoSdk.Transaction.GetSignature*
  commentId: Overload:AlgoSdk.Transaction.GetSignature
  name: GetSignature
  nameWithType: Transaction.GetSignature
  fullName: AlgoSdk.Transaction.GetSignature
- uid: AlgoSdk.LowLevel.NativeByteArray
  commentId: T:AlgoSdk.LowLevel.NativeByteArray
  parent: AlgoSdk.LowLevel
  name: NativeByteArray
  nameWithType: NativeByteArray
  fullName: AlgoSdk.LowLevel.NativeByteArray
- uid: AlgoSdk.Transaction.ToSignatureMessage*
  commentId: Overload:AlgoSdk.Transaction.ToSignatureMessage
  name: ToSignatureMessage
  nameWithType: Transaction.ToSignatureMessage
  fullName: AlgoSdk.Transaction.ToSignatureMessage
- uid: Unity.Collections.Allocator
  commentId: T:Unity.Collections.Allocator
  parent: Unity.Collections
  isExternal: true
  name: Allocator
  nameWithType: Allocator
  fullName: Unity.Collections.Allocator
- uid: AlgoSdk.LowLevel
  commentId: N:AlgoSdk.LowLevel
  name: AlgoSdk.LowLevel
  nameWithType: AlgoSdk.LowLevel
  fullName: AlgoSdk.LowLevel
- uid: Unity.Collections
  commentId: N:Unity.Collections
  name: Unity.Collections
  nameWithType: Unity.Collections
  fullName: Unity.Collections
- uid: AlgoSdk.TransactionId
  commentId: T:AlgoSdk.TransactionId
  parent: AlgoSdk
  name: TransactionId
  nameWithType: TransactionId
  fullName: AlgoSdk.TransactionId
- uid: AlgoSdk.Transaction.GetId*
  commentId: Overload:AlgoSdk.Transaction.GetId
  name: GetId
  nameWithType: Transaction.GetId
  fullName: AlgoSdk.Transaction.GetId
- uid: AlgoSdk.TransactionGroup.MaxSize
  commentId: F:AlgoSdk.TransactionGroup.MaxSize
  isExternal: true
- uid: AlgoSdk.Transaction.GetGroupId*
  commentId: Overload:AlgoSdk.Transaction.GetGroupId
  name: GetGroupId
  nameWithType: Transaction.GetGroupId
  fullName: AlgoSdk.Transaction.GetGroupId
- uid: AlgoSdk.Transaction[]
  isExternal: true
  name: Transaction[]
  nameWithType: Transaction[]
  fullName: AlgoSdk.Transaction[]
  nameWithType.vb: Transaction()
  fullName.vb: AlgoSdk.Transaction()
  name.vb: Transaction()
  spec.csharp:
  - uid: AlgoSdk.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: AlgoSdk.Transaction
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: AlgoSdk.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: AlgoSdk.Transaction
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AlgoSdk.TransactionId[]
  isExternal: true
  name: TransactionId[]
  nameWithType: TransactionId[]
  fullName: AlgoSdk.TransactionId[]
  nameWithType.vb: TransactionId()
  fullName.vb: AlgoSdk.TransactionId()
  name.vb: TransactionId()
  spec.csharp:
  - uid: AlgoSdk.TransactionId
    name: TransactionId
    nameWithType: TransactionId
    fullName: AlgoSdk.TransactionId
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: AlgoSdk.TransactionId
    name: TransactionId
    nameWithType: TransactionId
    fullName: AlgoSdk.TransactionId
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AlgoSdk.Transaction.ConfigAsset*
  commentId: Overload:AlgoSdk.Transaction.ConfigAsset
  name: ConfigAsset
  nameWithType: Transaction.ConfigAsset
  fullName: AlgoSdk.Transaction.ConfigAsset
- uid: AlgoSdk.Transaction.AssetParams*
  commentId: Overload:AlgoSdk.Transaction.AssetParams
  name: AssetParams
  nameWithType: Transaction.AssetParams
  fullName: AlgoSdk.Transaction.AssetParams
- uid: AlgoSdk.AssetParams
  commentId: T:AlgoSdk.AssetParams
  parent: AlgoSdk
  name: AssetParams
  nameWithType: AssetParams
  fullName: AlgoSdk.AssetParams
- uid: AlgoSdk.AssetConfigTxn
  commentId: T:AlgoSdk.AssetConfigTxn
  parent: AlgoSdk
  name: AssetConfigTxn
  nameWithType: AssetConfigTxn
  fullName: AlgoSdk.AssetConfigTxn
- uid: AlgoSdk.Transaction.AssetParams
  commentId: P:AlgoSdk.Transaction.AssetParams
  isExternal: true
- uid: AlgoSdk.Transaction.AssetCreate*
  commentId: Overload:AlgoSdk.Transaction.AssetCreate
  name: AssetCreate
  nameWithType: Transaction.AssetCreate
  fullName: AlgoSdk.Transaction.AssetCreate
- uid: AlgoSdk.Transaction.AssetConfigure*
  commentId: Overload:AlgoSdk.Transaction.AssetConfigure
  name: AssetConfigure
  nameWithType: Transaction.AssetConfigure
  fullName: AlgoSdk.Transaction.AssetConfigure
- uid: AlgoSdk.Transaction.AssetDelete*
  commentId: Overload:AlgoSdk.Transaction.AssetDelete
  name: AssetDelete
  nameWithType: Transaction.AssetDelete
  fullName: AlgoSdk.Transaction.AssetDelete
- uid: AlgoSdk.Transaction.Fee*
  commentId: Overload:AlgoSdk.Transaction.Fee
  name: Fee
  nameWithType: Transaction.Fee
  fullName: AlgoSdk.Transaction.Fee
- uid: AlgoSdk.Transaction.FirstValidRound*
  commentId: Overload:AlgoSdk.Transaction.FirstValidRound
  name: FirstValidRound
  nameWithType: Transaction.FirstValidRound
  fullName: AlgoSdk.Transaction.FirstValidRound
- uid: AlgoSdk.Transaction.GenesisHash*
  commentId: Overload:AlgoSdk.Transaction.GenesisHash
  name: GenesisHash
  nameWithType: Transaction.GenesisHash
  fullName: AlgoSdk.Transaction.GenesisHash
- uid: AlgoSdk.GenesisHash
  commentId: T:AlgoSdk.GenesisHash
  parent: AlgoSdk
  name: GenesisHash
  nameWithType: GenesisHash
  fullName: AlgoSdk.GenesisHash
- uid: AlgoSdk.Transaction.LastValidRound*
  commentId: Overload:AlgoSdk.Transaction.LastValidRound
  name: LastValidRound
  nameWithType: Transaction.LastValidRound
  fullName: AlgoSdk.Transaction.LastValidRound
- uid: AlgoSdk.Transaction.Sender*
  commentId: Overload:AlgoSdk.Transaction.Sender
  name: Sender
  nameWithType: Transaction.Sender
  fullName: AlgoSdk.Transaction.Sender
- uid: AlgoSdk.Transaction.TransactionType*
  commentId: Overload:AlgoSdk.Transaction.TransactionType
  name: TransactionType
  nameWithType: Transaction.TransactionType
  fullName: AlgoSdk.Transaction.TransactionType
- uid: AlgoSdk.TransactionType
  commentId: T:AlgoSdk.TransactionType
  parent: AlgoSdk
  name: TransactionType
  nameWithType: TransactionType
  fullName: AlgoSdk.TransactionType
- uid: AlgoSdk.Transaction.GenesisId*
  commentId: Overload:AlgoSdk.Transaction.GenesisId
  name: GenesisId
  nameWithType: Transaction.GenesisId
  fullName: AlgoSdk.Transaction.GenesisId
- uid: Unity.Collections.FixedString32Bytes
  commentId: T:Unity.Collections.FixedString32Bytes
  parent: Unity.Collections
  name: FixedString32Bytes
  nameWithType: FixedString32Bytes
  fullName: Unity.Collections.FixedString32Bytes
- uid: AlgoSdk.Transaction.Group*
  commentId: Overload:AlgoSdk.Transaction.Group
  name: Group
  nameWithType: Transaction.Group
  fullName: AlgoSdk.Transaction.Group
- uid: AlgoSdk.Crypto.Sha512_256_Hash
  commentId: T:AlgoSdk.Crypto.Sha512_256_Hash
  parent: AlgoSdk.Crypto
  name: Sha512_256_Hash
  nameWithType: Sha512_256_Hash
  fullName: AlgoSdk.Crypto.Sha512_256_Hash
- uid: AlgoSdk.Transaction.Lease*
  commentId: Overload:AlgoSdk.Transaction.Lease
  name: Lease
  nameWithType: Transaction.Lease
  fullName: AlgoSdk.Transaction.Lease
- uid: AlgoSdk.Transaction.Note*
  commentId: Overload:AlgoSdk.Transaction.Note
  name: Note
  nameWithType: Transaction.Note
  fullName: AlgoSdk.Transaction.Note
- uid: AlgoSdk.Transaction.RekeyTo*
  commentId: Overload:AlgoSdk.Transaction.RekeyTo
  name: RekeyTo
  nameWithType: Transaction.RekeyTo
  fullName: AlgoSdk.Transaction.RekeyTo
- uid: AlgoSdk.Transaction.Id*
  commentId: Overload:AlgoSdk.Transaction.Id
  name: Id
  nameWithType: Transaction.Id
  fullName: AlgoSdk.Transaction.Id
- uid: AlgoSdk.Transaction.AuthAddress*
  commentId: Overload:AlgoSdk.Transaction.AuthAddress
  name: AuthAddress
  nameWithType: Transaction.AuthAddress
  fullName: AlgoSdk.Transaction.AuthAddress
- uid: AlgoSdk.Transaction.CloseRewards*
  commentId: Overload:AlgoSdk.Transaction.CloseRewards
  name: CloseRewards
  nameWithType: Transaction.CloseRewards
  fullName: AlgoSdk.Transaction.CloseRewards
- uid: AlgoSdk.Transaction.ClosingAmount*
  commentId: Overload:AlgoSdk.Transaction.ClosingAmount
  name: ClosingAmount
  nameWithType: Transaction.ClosingAmount
  fullName: AlgoSdk.Transaction.ClosingAmount
- uid: AlgoSdk.Transaction.ConfirmedRound*
  commentId: Overload:AlgoSdk.Transaction.ConfirmedRound
  name: ConfirmedRound
  nameWithType: Transaction.ConfirmedRound
  fullName: AlgoSdk.Transaction.ConfirmedRound
- uid: AlgoSdk.Transaction.CreatedApplicationIndex*
  commentId: Overload:AlgoSdk.Transaction.CreatedApplicationIndex
  name: CreatedApplicationIndex
  nameWithType: Transaction.CreatedApplicationIndex
  fullName: AlgoSdk.Transaction.CreatedApplicationIndex
- uid: AlgoSdk.Transaction.CreatedAssetIndex*
  commentId: Overload:AlgoSdk.Transaction.CreatedAssetIndex
  name: CreatedAssetIndex
  nameWithType: Transaction.CreatedAssetIndex
  fullName: AlgoSdk.Transaction.CreatedAssetIndex
- uid: AlgoSdk.Transaction.IntraRoundOffset*
  commentId: Overload:AlgoSdk.Transaction.IntraRoundOffset
  name: IntraRoundOffset
  nameWithType: Transaction.IntraRoundOffset
  fullName: AlgoSdk.Transaction.IntraRoundOffset
- uid: AlgoSdk.Transaction.GlobalStateDelta*
  commentId: Overload:AlgoSdk.Transaction.GlobalStateDelta
  name: GlobalStateDelta
  nameWithType: Transaction.GlobalStateDelta
  fullName: AlgoSdk.Transaction.GlobalStateDelta
- uid: AlgoSdk.EvalDeltaKeyValue[]
  isExternal: true
  name: EvalDeltaKeyValue[]
  nameWithType: EvalDeltaKeyValue[]
  fullName: AlgoSdk.EvalDeltaKeyValue[]
  nameWithType.vb: EvalDeltaKeyValue()
  fullName.vb: AlgoSdk.EvalDeltaKeyValue()
  name.vb: EvalDeltaKeyValue()
  spec.csharp:
  - uid: AlgoSdk.EvalDeltaKeyValue
    name: EvalDeltaKeyValue
    nameWithType: EvalDeltaKeyValue
    fullName: AlgoSdk.EvalDeltaKeyValue
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: AlgoSdk.EvalDeltaKeyValue
    name: EvalDeltaKeyValue
    nameWithType: EvalDeltaKeyValue
    fullName: AlgoSdk.EvalDeltaKeyValue
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AlgoSdk.Transaction.LocalStateDelta*
  commentId: Overload:AlgoSdk.Transaction.LocalStateDelta
  name: LocalStateDelta
  nameWithType: Transaction.LocalStateDelta
  fullName: AlgoSdk.Transaction.LocalStateDelta
- uid: AlgoSdk.ApplicationStateDelta[]
  isExternal: true
  name: ApplicationStateDelta[]
  nameWithType: ApplicationStateDelta[]
  fullName: AlgoSdk.ApplicationStateDelta[]
  nameWithType.vb: ApplicationStateDelta()
  fullName.vb: AlgoSdk.ApplicationStateDelta()
  name.vb: ApplicationStateDelta()
  spec.csharp:
  - uid: AlgoSdk.ApplicationStateDelta
    name: ApplicationStateDelta
    nameWithType: ApplicationStateDelta
    fullName: AlgoSdk.ApplicationStateDelta
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: AlgoSdk.ApplicationStateDelta
    name: ApplicationStateDelta
    nameWithType: ApplicationStateDelta
    fullName: AlgoSdk.ApplicationStateDelta
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AlgoSdk.Transaction.ReceiverRewards*
  commentId: Overload:AlgoSdk.Transaction.ReceiverRewards
  name: ReceiverRewards
  nameWithType: Transaction.ReceiverRewards
  fullName: AlgoSdk.Transaction.ReceiverRewards
- uid: AlgoSdk.Transaction.RoundTime*
  commentId: Overload:AlgoSdk.Transaction.RoundTime
  name: RoundTime
  nameWithType: Transaction.RoundTime
  fullName: AlgoSdk.Transaction.RoundTime
- uid: AlgoSdk.Transaction.SenderRewards*
  commentId: Overload:AlgoSdk.Transaction.SenderRewards
  name: SenderRewards
  nameWithType: Transaction.SenderRewards
  fullName: AlgoSdk.Transaction.SenderRewards
- uid: AlgoSdk.Transaction.VoteParticipationKey*
  commentId: Overload:AlgoSdk.Transaction.VoteParticipationKey
  name: VoteParticipationKey
  nameWithType: Transaction.VoteParticipationKey
  fullName: AlgoSdk.Transaction.VoteParticipationKey
- uid: AlgoSdk.Crypto.Ed25519.PublicKey
  commentId: T:AlgoSdk.Crypto.Ed25519.PublicKey
  parent: AlgoSdk.Crypto
  name: Ed25519.PublicKey
  nameWithType: Ed25519.PublicKey
  fullName: AlgoSdk.Crypto.Ed25519.PublicKey
- uid: AlgoSdk.Transaction.SelectionParticipationKey*
  commentId: Overload:AlgoSdk.Transaction.SelectionParticipationKey
  name: SelectionParticipationKey
  nameWithType: Transaction.SelectionParticipationKey
  fullName: AlgoSdk.Transaction.SelectionParticipationKey
- uid: AlgoSdk.VrfPubKey
  commentId: T:AlgoSdk.VrfPubKey
  parent: AlgoSdk
  name: VrfPubKey
  nameWithType: VrfPubKey
  fullName: AlgoSdk.VrfPubKey
- uid: AlgoSdk.Transaction.VoteFirst*
  commentId: Overload:AlgoSdk.Transaction.VoteFirst
  name: VoteFirst
  nameWithType: Transaction.VoteFirst
  fullName: AlgoSdk.Transaction.VoteFirst
- uid: AlgoSdk.Transaction.VoteLast*
  commentId: Overload:AlgoSdk.Transaction.VoteLast
  name: VoteLast
  nameWithType: Transaction.VoteLast
  fullName: AlgoSdk.Transaction.VoteLast
- uid: AlgoSdk.Transaction.VoteKeyDilution*
  commentId: Overload:AlgoSdk.Transaction.VoteKeyDilution
  name: VoteKeyDilution
  nameWithType: Transaction.VoteKeyDilution
  fullName: AlgoSdk.Transaction.VoteKeyDilution
- uid: AlgoSdk.Transaction.NonParticipation*
  commentId: Overload:AlgoSdk.Transaction.NonParticipation
  name: NonParticipation
  nameWithType: Transaction.NonParticipation
  fullName: AlgoSdk.Transaction.NonParticipation
- uid: AlgoSdk.Optional{System.Boolean}
  commentId: T:AlgoSdk.Optional{System.Boolean}
  parent: AlgoSdk
  definition: AlgoSdk.Optional`1
  name: Optional<Boolean>
  nameWithType: Optional<Boolean>
  fullName: AlgoSdk.Optional<System.Boolean>
  nameWithType.vb: Optional(Of Boolean)
  fullName.vb: AlgoSdk.Optional(Of System.Boolean)
  name.vb: Optional(Of Boolean)
  spec.csharp:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.Optional`1
  commentId: T:AlgoSdk.Optional`1
  parent: AlgoSdk
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: AlgoSdk.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: AlgoSdk.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: AlgoSdk.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.AccountParticipation
  commentId: T:AlgoSdk.AccountParticipation
  parent: AlgoSdk
  name: AccountParticipation
  nameWithType: AccountParticipation
  fullName: AlgoSdk.AccountParticipation
- uid: AlgoSdk.KeyRegTxn
  commentId: T:AlgoSdk.KeyRegTxn
  parent: AlgoSdk
  name: KeyRegTxn
  nameWithType: KeyRegTxn
  fullName: AlgoSdk.KeyRegTxn
- uid: AlgoSdk.Transaction.KeyRegOnline*
  commentId: Overload:AlgoSdk.Transaction.KeyRegOnline
  name: KeyRegOnline
  nameWithType: Transaction.KeyRegOnline
  fullName: AlgoSdk.Transaction.KeyRegOnline
- uid: AlgoSdk.Transaction.KeyRegOffline*
  commentId: Overload:AlgoSdk.Transaction.KeyRegOffline
  name: KeyRegOffline
  nameWithType: Transaction.KeyRegOffline
  fullName: AlgoSdk.Transaction.KeyRegOffline
- uid: AlgoSdk.Transaction.FreezeAccount*
  commentId: Overload:AlgoSdk.Transaction.FreezeAccount
  name: FreezeAccount
  nameWithType: Transaction.FreezeAccount
  fullName: AlgoSdk.Transaction.FreezeAccount
- uid: AlgoSdk.Transaction.FreezeAsset*
  commentId: Overload:AlgoSdk.Transaction.FreezeAsset
  name: FreezeAsset
  nameWithType: Transaction.FreezeAsset
  fullName: AlgoSdk.Transaction.FreezeAsset
- uid: AlgoSdk.Transaction.AssetFrozen*
  commentId: Overload:AlgoSdk.Transaction.AssetFrozen
  name: AssetFrozen
  nameWithType: Transaction.AssetFrozen
  fullName: AlgoSdk.Transaction.AssetFrozen
- uid: AlgoSdk.AssetFreezeTxn
  commentId: T:AlgoSdk.AssetFreezeTxn
  parent: AlgoSdk
  name: AssetFreezeTxn
  nameWithType: AssetFreezeTxn
  fullName: AlgoSdk.AssetFreezeTxn
- uid: AlgoSdk.Transaction.AssetFreeze*
  commentId: Overload:AlgoSdk.Transaction.AssetFreeze
  name: AssetFreeze
  nameWithType: Transaction.AssetFreeze
  fullName: AlgoSdk.Transaction.AssetFreeze
- uid: AlgoSdk.Transaction.ApplicationId*
  commentId: Overload:AlgoSdk.Transaction.ApplicationId
  name: ApplicationId
  nameWithType: Transaction.ApplicationId
  fullName: AlgoSdk.Transaction.ApplicationId
- uid: AlgoSdk.Transaction.OnComplete*
  commentId: Overload:AlgoSdk.Transaction.OnComplete
  name: OnComplete
  nameWithType: Transaction.OnComplete
  fullName: AlgoSdk.Transaction.OnComplete
- uid: AlgoSdk.OnCompletion
  commentId: T:AlgoSdk.OnCompletion
  parent: AlgoSdk
  name: OnCompletion
  nameWithType: OnCompletion
  fullName: AlgoSdk.OnCompletion
- uid: AlgoSdk.Transaction.ApprovalProgram*
  commentId: Overload:AlgoSdk.Transaction.ApprovalProgram
  name: ApprovalProgram
  nameWithType: Transaction.ApprovalProgram
  fullName: AlgoSdk.Transaction.ApprovalProgram
- uid: AlgoSdk.Transaction.ClearStateProgram*
  commentId: Overload:AlgoSdk.Transaction.ClearStateProgram
  name: ClearStateProgram
  nameWithType: Transaction.ClearStateProgram
  fullName: AlgoSdk.Transaction.ClearStateProgram
- uid: AlgoSdk.Transaction.AppArguments*
  commentId: Overload:AlgoSdk.Transaction.AppArguments
  name: AppArguments
  nameWithType: Transaction.AppArguments
  fullName: AlgoSdk.Transaction.AppArguments
- uid: AlgoSdk.Transaction.Accounts*
  commentId: Overload:AlgoSdk.Transaction.Accounts
  name: Accounts
  nameWithType: Transaction.Accounts
  fullName: AlgoSdk.Transaction.Accounts
- uid: AlgoSdk.Address[]
  isExternal: true
  name: Address[]
  nameWithType: Address[]
  fullName: AlgoSdk.Address[]
  nameWithType.vb: Address()
  fullName.vb: AlgoSdk.Address()
  name.vb: Address()
  spec.csharp:
  - uid: AlgoSdk.Address
    name: Address
    nameWithType: Address
    fullName: AlgoSdk.Address
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: AlgoSdk.Address
    name: Address
    nameWithType: Address
    fullName: AlgoSdk.Address
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AlgoSdk.Transaction.ForeignApps*
  commentId: Overload:AlgoSdk.Transaction.ForeignApps
  name: ForeignApps
  nameWithType: Transaction.ForeignApps
  fullName: AlgoSdk.Transaction.ForeignApps
- uid: System.UInt64[]
  isExternal: true
  name: UInt64[]
  nameWithType: UInt64[]
  fullName: System.UInt64[]
  nameWithType.vb: UInt64()
  fullName.vb: System.UInt64()
  name.vb: UInt64()
  spec.csharp:
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AlgoSdk.Transaction.ForeignAssets*
  commentId: Overload:AlgoSdk.Transaction.ForeignAssets
  name: ForeignAssets
  nameWithType: Transaction.ForeignAssets
  fullName: AlgoSdk.Transaction.ForeignAssets
- uid: AlgoSdk.Transaction.GlobalStateSchema*
  commentId: Overload:AlgoSdk.Transaction.GlobalStateSchema
  name: GlobalStateSchema
  nameWithType: Transaction.GlobalStateSchema
  fullName: AlgoSdk.Transaction.GlobalStateSchema
- uid: AlgoSdk.StateSchema
  commentId: T:AlgoSdk.StateSchema
  parent: AlgoSdk
  name: StateSchema
  nameWithType: StateSchema
  fullName: AlgoSdk.StateSchema
- uid: AlgoSdk.Transaction.LocalStateSchema*
  commentId: Overload:AlgoSdk.Transaction.LocalStateSchema
  name: LocalStateSchema
  nameWithType: Transaction.LocalStateSchema
  fullName: AlgoSdk.Transaction.LocalStateSchema
- uid: AlgoSdk.Transaction.ExtraProgramPages*
  commentId: Overload:AlgoSdk.Transaction.ExtraProgramPages
  name: ExtraProgramPages
  nameWithType: Transaction.ExtraProgramPages
  fullName: AlgoSdk.Transaction.ExtraProgramPages
- uid: AlgoSdk.AppCallTxn
  commentId: T:AlgoSdk.AppCallTxn
  parent: AlgoSdk
  name: AppCallTxn
  nameWithType: AppCallTxn
  fullName: AlgoSdk.AppCallTxn
- uid: AlgoSdk.Transaction.AppCreate*
  commentId: Overload:AlgoSdk.Transaction.AppCreate
  name: AppCreate
  nameWithType: Transaction.AppCreate
  fullName: AlgoSdk.Transaction.AppCreate
- uid: AlgoSdk.Transaction.AppCloseOut*
  commentId: Overload:AlgoSdk.Transaction.AppCloseOut
  name: AppCloseOut
  nameWithType: Transaction.AppCloseOut
  fullName: AlgoSdk.Transaction.AppCloseOut
- uid: AlgoSdk.Transaction.AppClearState*
  commentId: Overload:AlgoSdk.Transaction.AppClearState
  name: AppClearState
  nameWithType: Transaction.AppClearState
  fullName: AlgoSdk.Transaction.AppClearState
- uid: AlgoSdk.Transaction.AppCall*
  commentId: Overload:AlgoSdk.Transaction.AppCall
  name: AppCall
  nameWithType: Transaction.AppCall
  fullName: AlgoSdk.Transaction.AppCall
- uid: AlgoSdk.Transaction.AppOptIn*
  commentId: Overload:AlgoSdk.Transaction.AppOptIn
  name: AppOptIn
  nameWithType: Transaction.AppOptIn
  fullName: AlgoSdk.Transaction.AppOptIn
- uid: AlgoSdk.Transaction.AppUpdateTxn*
  commentId: Overload:AlgoSdk.Transaction.AppUpdateTxn
  name: AppUpdateTxn
  nameWithType: Transaction.AppUpdateTxn
  fullName: AlgoSdk.Transaction.AppUpdateTxn
- uid: AlgoSdk.Transaction.AppDelete*
  commentId: Overload:AlgoSdk.Transaction.AppDelete
  name: AppDelete
  nameWithType: Transaction.AppDelete
  fullName: AlgoSdk.Transaction.AppDelete
- uid: AlgoSdk.Transaction.XferAsset*
  commentId: Overload:AlgoSdk.Transaction.XferAsset
  name: XferAsset
  nameWithType: Transaction.XferAsset
  fullName: AlgoSdk.Transaction.XferAsset
- uid: AlgoSdk.Transaction.AssetAmount*
  commentId: Overload:AlgoSdk.Transaction.AssetAmount
  name: AssetAmount
  nameWithType: Transaction.AssetAmount
  fullName: AlgoSdk.Transaction.AssetAmount
- uid: AlgoSdk.Transaction.AssetSender*
  commentId: Overload:AlgoSdk.Transaction.AssetSender
  name: AssetSender
  nameWithType: Transaction.AssetSender
  fullName: AlgoSdk.Transaction.AssetSender
- uid: AlgoSdk.Transaction.AssetReceiver*
  commentId: Overload:AlgoSdk.Transaction.AssetReceiver
  name: AssetReceiver
  nameWithType: Transaction.AssetReceiver
  fullName: AlgoSdk.Transaction.AssetReceiver
- uid: AlgoSdk.Transaction.AssetCloseTo*
  commentId: Overload:AlgoSdk.Transaction.AssetCloseTo
  name: AssetCloseTo
  nameWithType: Transaction.AssetCloseTo
  fullName: AlgoSdk.Transaction.AssetCloseTo
- uid: AlgoSdk.AssetTransferTxn
  commentId: T:AlgoSdk.AssetTransferTxn
  parent: AlgoSdk
  name: AssetTransferTxn
  nameWithType: AssetTransferTxn
  fullName: AlgoSdk.AssetTransferTxn
- uid: AlgoSdk.Transaction.AssetTransfer*
  commentId: Overload:AlgoSdk.Transaction.AssetTransfer
  name: AssetTransfer
  nameWithType: Transaction.AssetTransfer
  fullName: AlgoSdk.Transaction.AssetTransfer
- uid: AlgoSdk.Transaction.AssetAccept*
  commentId: Overload:AlgoSdk.Transaction.AssetAccept
  name: AssetAccept
  nameWithType: Transaction.AssetAccept
  fullName: AlgoSdk.Transaction.AssetAccept
- uid: AlgoSdk.Transaction.AssetClawback*
  commentId: Overload:AlgoSdk.Transaction.AssetClawback
  name: AssetClawback
  nameWithType: Transaction.AssetClawback
  fullName: AlgoSdk.Transaction.AssetClawback
