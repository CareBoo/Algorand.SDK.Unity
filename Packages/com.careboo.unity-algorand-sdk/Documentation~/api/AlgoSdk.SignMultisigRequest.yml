### YamlMime:ManagedReference
items:
- uid: AlgoSdk.SignMultisigRequest
  commentId: T:AlgoSdk.SignMultisigRequest
  id: SignMultisigRequest
  parent: AlgoSdk
  children:
  - AlgoSdk.SignMultisigRequest.Equals(AlgoSdk.SignMultisigRequest)
  - AlgoSdk.SignMultisigRequest.Multisig
  - AlgoSdk.SignMultisigRequest.PublicKey
  - AlgoSdk.SignMultisigRequest.Signer
  - AlgoSdk.SignMultisigRequest.Transaction
  - AlgoSdk.SignMultisigRequest.WalletHandleToken
  - AlgoSdk.SignMultisigRequest.WalletPassword
  langs:
  - csharp
  - vb
  name: SignMultisigRequest
  nameWithType: SignMultisigRequest
  fullName: AlgoSdk.SignMultisigRequest
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/SignMultisigRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: SignMultisigRequest
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/SignMultisigRequest.cs
    startLine: 6
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: 'public struct SignMultisigRequest : IEquatable<SignMultisigRequest>'
    content.vb: >-
      Public Structure SignMultisigRequest
          Implements IEquatable(Of SignMultisigRequest)
  implements:
  - System.IEquatable{AlgoSdk.SignMultisigRequest}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: AlgoSdk.SignMultisigRequest.Multisig
  commentId: F:AlgoSdk.SignMultisigRequest.Multisig
  id: Multisig
  parent: AlgoSdk.SignMultisigRequest
  langs:
  - csharp
  - vb
  name: Multisig
  nameWithType: SignMultisigRequest.Multisig
  fullName: AlgoSdk.SignMultisigRequest.Multisig
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/SignMultisigRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Multisig
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/SignMultisigRequest.cs
    startLine: 11
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("partial_multisig", null, false)]

      public Multisig Multisig
    return:
      type: AlgoSdk.Multisig
    content.vb: >-
      <AlgoApiField("partial_multisig", Nothing, False)>

      Public Multisig As Multisig
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: partial_multisig
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.SignMultisigRequest.PublicKey
  commentId: F:AlgoSdk.SignMultisigRequest.PublicKey
  id: PublicKey
  parent: AlgoSdk.SignMultisigRequest
  langs:
  - csharp
  - vb
  name: PublicKey
  nameWithType: SignMultisigRequest.PublicKey
  fullName: AlgoSdk.SignMultisigRequest.PublicKey
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/SignMultisigRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: PublicKey
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/SignMultisigRequest.cs
    startLine: 14
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("public_key", null, false)]

      public Ed25519.PublicKey PublicKey
    return:
      type: AlgoSdk.Crypto.Ed25519.PublicKey
    content.vb: >-
      <AlgoApiField("public_key", Nothing, False)>

      Public PublicKey As Ed25519.PublicKey
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: public_key
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.SignMultisigRequest.Signer
  commentId: F:AlgoSdk.SignMultisigRequest.Signer
  id: Signer
  parent: AlgoSdk.SignMultisigRequest
  langs:
  - csharp
  - vb
  name: Signer
  nameWithType: SignMultisigRequest.Signer
  fullName: AlgoSdk.SignMultisigRequest.Signer
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/SignMultisigRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Signer
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/SignMultisigRequest.cs
    startLine: 17
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("signer", null, false)]

      public Address Signer
    return:
      type: AlgoSdk.Address
    content.vb: >-
      <AlgoApiField("signer", Nothing, False)>

      Public Signer As Address
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: signer
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.SignMultisigRequest.Transaction
  commentId: F:AlgoSdk.SignMultisigRequest.Transaction
  id: Transaction
  parent: AlgoSdk.SignMultisigRequest
  langs:
  - csharp
  - vb
  name: Transaction
  nameWithType: SignMultisigRequest.Transaction
  fullName: AlgoSdk.SignMultisigRequest.Transaction
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/SignMultisigRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Transaction
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/SignMultisigRequest.cs
    startLine: 20
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("transaction", null, false)]

      public byte[] Transaction
    return:
      type: System.Byte[]
    content.vb: >-
      <AlgoApiField("transaction", Nothing, False)>

      Public Transaction As Byte()
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: transaction
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.SignMultisigRequest.WalletHandleToken
  commentId: F:AlgoSdk.SignMultisigRequest.WalletHandleToken
  id: WalletHandleToken
  parent: AlgoSdk.SignMultisigRequest
  langs:
  - csharp
  - vb
  name: WalletHandleToken
  nameWithType: SignMultisigRequest.WalletHandleToken
  fullName: AlgoSdk.SignMultisigRequest.WalletHandleToken
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/SignMultisigRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: WalletHandleToken
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/SignMultisigRequest.cs
    startLine: 23
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("wallet_handle_token", null, false)]

      public FixedString128Bytes WalletHandleToken
    return:
      type: Unity.Collections.FixedString128Bytes
    content.vb: >-
      <AlgoApiField("wallet_handle_token", Nothing, False)>

      Public WalletHandleToken As FixedString128Bytes
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: wallet_handle_token
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.SignMultisigRequest.WalletPassword
  commentId: F:AlgoSdk.SignMultisigRequest.WalletPassword
  id: WalletPassword
  parent: AlgoSdk.SignMultisigRequest
  langs:
  - csharp
  - vb
  name: WalletPassword
  nameWithType: SignMultisigRequest.WalletPassword
  fullName: AlgoSdk.SignMultisigRequest.WalletPassword
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/SignMultisigRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: WalletPassword
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/SignMultisigRequest.cs
    startLine: 26
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("wallet_password", null, false)]

      public FixedString128Bytes WalletPassword
    return:
      type: Unity.Collections.FixedString128Bytes
    content.vb: >-
      <AlgoApiField("wallet_password", Nothing, False)>

      Public WalletPassword As FixedString128Bytes
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: wallet_password
    - type: System.String
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.SignMultisigRequest.Equals(AlgoSdk.SignMultisigRequest)
  commentId: M:AlgoSdk.SignMultisigRequest.Equals(AlgoSdk.SignMultisigRequest)
  id: Equals(AlgoSdk.SignMultisigRequest)
  parent: AlgoSdk.SignMultisigRequest
  langs:
  - csharp
  - vb
  name: Equals(SignMultisigRequest)
  nameWithType: SignMultisigRequest.Equals(SignMultisigRequest)
  fullName: AlgoSdk.SignMultisigRequest.Equals(AlgoSdk.SignMultisigRequest)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/SignMultisigRequest.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Equals
    path: ../CareBoo.AlgoSdk/AlgoApi/Kmd/Models/Signatures/SignMultisigRequest.cs
    startLine: 28
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public bool Equals(SignMultisigRequest other)
    parameters:
    - id: other
      type: AlgoSdk.SignMultisigRequest
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As SignMultisigRequest) As Boolean
  overload: AlgoSdk.SignMultisigRequest.Equals*
  implements:
  - System.IEquatable{AlgoSdk.SignMultisigRequest}.Equals(AlgoSdk.SignMultisigRequest)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: System.IEquatable{AlgoSdk.SignMultisigRequest}
  commentId: T:System.IEquatable{AlgoSdk.SignMultisigRequest}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<SignMultisigRequest>
  nameWithType: IEquatable<SignMultisigRequest>
  fullName: System.IEquatable<AlgoSdk.SignMultisigRequest>
  nameWithType.vb: IEquatable(Of SignMultisigRequest)
  fullName.vb: System.IEquatable(Of AlgoSdk.SignMultisigRequest)
  name.vb: IEquatable(Of SignMultisigRequest)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.SignMultisigRequest
    name: SignMultisigRequest
    nameWithType: SignMultisigRequest
    fullName: AlgoSdk.SignMultisigRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.SignMultisigRequest
    name: SignMultisigRequest
    nameWithType: SignMultisigRequest
    fullName: AlgoSdk.SignMultisigRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AlgoSdk.Multisig
  commentId: T:AlgoSdk.Multisig
  parent: AlgoSdk
  name: Multisig
  nameWithType: Multisig
  fullName: AlgoSdk.Multisig
- uid: AlgoSdk.Crypto.Ed25519.PublicKey
  commentId: T:AlgoSdk.Crypto.Ed25519.PublicKey
  parent: AlgoSdk.Crypto
  name: Ed25519.PublicKey
  nameWithType: Ed25519.PublicKey
  fullName: AlgoSdk.Crypto.Ed25519.PublicKey
- uid: AlgoSdk.Crypto
  commentId: N:AlgoSdk.Crypto
  name: AlgoSdk.Crypto
  nameWithType: AlgoSdk.Crypto
  fullName: AlgoSdk.Crypto
- uid: AlgoSdk.Address
  commentId: T:AlgoSdk.Address
  parent: AlgoSdk
  name: Address
  nameWithType: Address
  fullName: AlgoSdk.Address
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Unity.Collections.FixedString128Bytes
  commentId: T:Unity.Collections.FixedString128Bytes
  parent: Unity.Collections
  name: FixedString128Bytes
  nameWithType: FixedString128Bytes
  fullName: Unity.Collections.FixedString128Bytes
- uid: Unity.Collections
  commentId: N:Unity.Collections
  name: Unity.Collections
  nameWithType: Unity.Collections
  fullName: Unity.Collections
- uid: AlgoSdk.SignMultisigRequest.Equals*
  commentId: Overload:AlgoSdk.SignMultisigRequest.Equals
  name: Equals
  nameWithType: SignMultisigRequest.Equals
  fullName: AlgoSdk.SignMultisigRequest.Equals
- uid: System.IEquatable{AlgoSdk.SignMultisigRequest}.Equals(AlgoSdk.SignMultisigRequest)
  commentId: M:System.IEquatable{AlgoSdk.SignMultisigRequest}.Equals(AlgoSdk.SignMultisigRequest)
  parent: System.IEquatable{AlgoSdk.SignMultisigRequest}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(SignMultisigRequest)
  nameWithType: IEquatable<SignMultisigRequest>.Equals(SignMultisigRequest)
  fullName: System.IEquatable<AlgoSdk.SignMultisigRequest>.Equals(AlgoSdk.SignMultisigRequest)
  nameWithType.vb: IEquatable(Of SignMultisigRequest).Equals(SignMultisigRequest)
  fullName.vb: System.IEquatable(Of AlgoSdk.SignMultisigRequest).Equals(AlgoSdk.SignMultisigRequest)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<SignMultisigRequest>.Equals
    fullName: System.IEquatable<AlgoSdk.SignMultisigRequest>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.SignMultisigRequest
    name: SignMultisigRequest
    nameWithType: SignMultisigRequest
    fullName: AlgoSdk.SignMultisigRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of SignMultisigRequest).Equals
    fullName: System.IEquatable(Of AlgoSdk.SignMultisigRequest).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.SignMultisigRequest
    name: SignMultisigRequest
    nameWithType: SignMultisigRequest
    fullName: AlgoSdk.SignMultisigRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.SignMultisigRequest
  commentId: T:AlgoSdk.SignMultisigRequest
  parent: AlgoSdk
  name: SignMultisigRequest
  nameWithType: SignMultisigRequest
  fullName: AlgoSdk.SignMultisigRequest
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
