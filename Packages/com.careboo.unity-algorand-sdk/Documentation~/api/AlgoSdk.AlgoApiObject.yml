### YamlMime:ManagedReference
items:
- uid: AlgoSdk.AlgoApiObject
  commentId: T:AlgoSdk.AlgoApiObject
  id: AlgoApiObject
  parent: AlgoSdk
  children:
  - AlgoSdk.AlgoApiObject.Equals(AlgoSdk.AlgoApiObject)
  - AlgoSdk.AlgoApiObject.IsJson
  - AlgoSdk.AlgoApiObject.IsMessagePack
  - AlgoSdk.AlgoApiObject.Json
  - AlgoSdk.AlgoApiObject.MessagePack
  langs:
  - csharp
  - vb
  name: AlgoApiObject
  nameWithType: AlgoApiObject
  fullName: AlgoSdk.AlgoApiObject
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiObject.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AlgoApiObject
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiObject.cs
    startLine: 7
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nA non-deserialized object from an algorand service.\n"
  example: []
  syntax:
    content: >-
      [AlgoApiFormatter(typeof(AlgoApiObjectFormatter), "C:\\Users\\jason\\Projects\\CareBoo\\Unity.AlgoSdk\\Packages\\com.careboo.unity-algorand-sdk\\CareBoo.AlgoSdk\\AlgoApi\\AlgoApiObject.cs", 8)]

      public struct AlgoApiObject : IEquatable<AlgoApiObject>
    content.vb: >-
      <AlgoApiFormatter(GetType(AlgoApiObjectFormatter), "C:\Users\jason\Projects\CareBoo\Unity.AlgoSdk\Packages\com.careboo.unity-algorand-sdk\CareBoo.AlgoSdk\AlgoApi\AlgoApiObject.cs", 8)>

      Public Structure AlgoApiObject
          Implements IEquatable(Of AlgoApiObject)
  implements:
  - System.IEquatable{AlgoSdk.AlgoApiObject}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: AlgoSdk.AlgoApiFormatterAttribute
    ctor: AlgoSdk.AlgoApiFormatterAttribute.#ctor(System.Type,System.String,System.Int32)
    arguments:
    - type: System.Type
      value: AlgoSdk.AlgoApiObjectFormatter
    - type: System.String
      value: C:\Users\jason\Projects\CareBoo\Unity.AlgoSdk\Packages\com.careboo.unity-algorand-sdk\CareBoo.AlgoSdk\AlgoApi\AlgoApiObject.cs
    - type: System.Int32
      value: 8
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: AlgoSdk.AlgoApiObject.MessagePack
  commentId: F:AlgoSdk.AlgoApiObject.MessagePack
  id: MessagePack
  parent: AlgoSdk.AlgoApiObject
  langs:
  - csharp
  - vb
  name: MessagePack
  nameWithType: AlgoApiObject.MessagePack
  fullName: AlgoSdk.AlgoApiObject.MessagePack
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiObject.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: MessagePack
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiObject.cs
    startLine: 14
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nRaw message pack if the response had <xref href=\"AlgoSdk.ContentType.MessagePack\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public byte[] MessagePack
    return:
      type: System.Byte[]
    content.vb: Public MessagePack As Byte()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.AlgoApiObject.Json
  commentId: F:AlgoSdk.AlgoApiObject.Json
  id: Json
  parent: AlgoSdk.AlgoApiObject
  langs:
  - csharp
  - vb
  name: Json
  nameWithType: AlgoApiObject.Json
  fullName: AlgoSdk.AlgoApiObject.Json
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiObject.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Json
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiObject.cs
    startLine: 19
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\nRaw json if the response had <xref href=\"AlgoSdk.ContentType.Json\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public string Json
    return:
      type: System.String
    content.vb: Public Json As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.AlgoApiObject.IsMessagePack
  commentId: P:AlgoSdk.AlgoApiObject.IsMessagePack
  id: IsMessagePack
  parent: AlgoSdk.AlgoApiObject
  langs:
  - csharp
  - vb
  name: IsMessagePack
  nameWithType: AlgoApiObject.IsMessagePack
  fullName: AlgoSdk.AlgoApiObject.IsMessagePack
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiObject.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: IsMessagePack
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiObject.cs
    startLine: 24
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\n<see cref=\"!:true\"></see> if this is a messagepack object.\n"
  example: []
  syntax:
    content: public bool IsMessagePack { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsMessagePack As Boolean
  overload: AlgoSdk.AlgoApiObject.IsMessagePack*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AlgoSdk.AlgoApiObject.IsJson
  commentId: P:AlgoSdk.AlgoApiObject.IsJson
  id: IsJson
  parent: AlgoSdk.AlgoApiObject
  langs:
  - csharp
  - vb
  name: IsJson
  nameWithType: AlgoApiObject.IsJson
  fullName: AlgoSdk.AlgoApiObject.IsJson
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiObject.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: IsJson
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiObject.cs
    startLine: 29
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  summary: "\n<see cref=\"!:true\"></see> if this is a json object.\n"
  example: []
  syntax:
    content: public bool IsJson { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsJson As Boolean
  overload: AlgoSdk.AlgoApiObject.IsJson*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AlgoSdk.AlgoApiObject.Equals(AlgoSdk.AlgoApiObject)
  commentId: M:AlgoSdk.AlgoApiObject.Equals(AlgoSdk.AlgoApiObject)
  id: Equals(AlgoSdk.AlgoApiObject)
  parent: AlgoSdk.AlgoApiObject
  langs:
  - csharp
  - vb
  name: Equals(AlgoApiObject)
  nameWithType: AlgoApiObject.Equals(AlgoApiObject)
  fullName: AlgoSdk.AlgoApiObject.Equals(AlgoSdk.AlgoApiObject)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/AlgoApiObject.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Equals
    path: ../CareBoo.AlgoSdk/AlgoApi/AlgoApiObject.cs
    startLine: 31
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public bool Equals(AlgoApiObject other)
    parameters:
    - id: other
      type: AlgoSdk.AlgoApiObject
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As AlgoApiObject) As Boolean
  overload: AlgoSdk.AlgoApiObject.Equals*
  implements:
  - System.IEquatable{AlgoSdk.AlgoApiObject}.Equals(AlgoSdk.AlgoApiObject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: System.IEquatable{AlgoSdk.AlgoApiObject}
  commentId: T:System.IEquatable{AlgoSdk.AlgoApiObject}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<AlgoApiObject>
  nameWithType: IEquatable<AlgoApiObject>
  fullName: System.IEquatable<AlgoSdk.AlgoApiObject>
  nameWithType.vb: IEquatable(Of AlgoApiObject)
  fullName.vb: System.IEquatable(Of AlgoSdk.AlgoApiObject)
  name.vb: IEquatable(Of AlgoApiObject)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.AlgoApiObject
    name: AlgoApiObject
    nameWithType: AlgoApiObject
    fullName: AlgoSdk.AlgoApiObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.AlgoApiObject
    name: AlgoApiObject
    nameWithType: AlgoApiObject
    fullName: AlgoSdk.AlgoApiObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AlgoSdk.ContentType.MessagePack
  commentId: F:AlgoSdk.ContentType.MessagePack
  isExternal: true
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AlgoSdk.ContentType.Json
  commentId: F:AlgoSdk.ContentType.Json
  isExternal: true
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AlgoSdk.AlgoApiObject.IsMessagePack*
  commentId: Overload:AlgoSdk.AlgoApiObject.IsMessagePack
  name: IsMessagePack
  nameWithType: AlgoApiObject.IsMessagePack
  fullName: AlgoSdk.AlgoApiObject.IsMessagePack
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AlgoSdk.AlgoApiObject.IsJson*
  commentId: Overload:AlgoSdk.AlgoApiObject.IsJson
  name: IsJson
  nameWithType: AlgoApiObject.IsJson
  fullName: AlgoSdk.AlgoApiObject.IsJson
- uid: AlgoSdk.AlgoApiObject.Equals*
  commentId: Overload:AlgoSdk.AlgoApiObject.Equals
  name: Equals
  nameWithType: AlgoApiObject.Equals
  fullName: AlgoSdk.AlgoApiObject.Equals
- uid: System.IEquatable{AlgoSdk.AlgoApiObject}.Equals(AlgoSdk.AlgoApiObject)
  commentId: M:System.IEquatable{AlgoSdk.AlgoApiObject}.Equals(AlgoSdk.AlgoApiObject)
  parent: System.IEquatable{AlgoSdk.AlgoApiObject}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(AlgoApiObject)
  nameWithType: IEquatable<AlgoApiObject>.Equals(AlgoApiObject)
  fullName: System.IEquatable<AlgoSdk.AlgoApiObject>.Equals(AlgoSdk.AlgoApiObject)
  nameWithType.vb: IEquatable(Of AlgoApiObject).Equals(AlgoApiObject)
  fullName.vb: System.IEquatable(Of AlgoSdk.AlgoApiObject).Equals(AlgoSdk.AlgoApiObject)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<AlgoApiObject>.Equals
    fullName: System.IEquatable<AlgoSdk.AlgoApiObject>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.AlgoApiObject
    name: AlgoApiObject
    nameWithType: AlgoApiObject
    fullName: AlgoSdk.AlgoApiObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of AlgoApiObject).Equals
    fullName: System.IEquatable(Of AlgoSdk.AlgoApiObject).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.AlgoApiObject
    name: AlgoApiObject
    nameWithType: AlgoApiObject
    fullName: AlgoSdk.AlgoApiObject
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.AlgoApiObject
  commentId: T:AlgoSdk.AlgoApiObject
  parent: AlgoSdk
  name: AlgoApiObject
  nameWithType: AlgoApiObject
  fullName: AlgoSdk.AlgoApiObject
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
