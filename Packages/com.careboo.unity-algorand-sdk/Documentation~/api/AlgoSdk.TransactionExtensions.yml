### YamlMime:ManagedReference
items:
- uid: AlgoSdk.TransactionExtensions
  commentId: T:AlgoSdk.TransactionExtensions
  id: TransactionExtensions
  parent: AlgoSdk
  children:
  - AlgoSdk.TransactionExtensions.EstimateBlockSizeBytes``1(``0)
  - AlgoSdk.TransactionExtensions.GetId``1(``0)
  - AlgoSdk.TransactionExtensions.GetSignature``1(``0,AlgoSdk.Crypto.Ed25519.SecretKeyHandle)
  - AlgoSdk.TransactionExtensions.GetSuggestedFee``1(``0,AlgoSdk.TransactionParams)
  - AlgoSdk.TransactionExtensions.Sign``1(``0,AlgoSdk.Crypto.Ed25519.SecretKeyHandle)
  - AlgoSdk.TransactionExtensions.ToSignatureMessage``1(``0,Unity.Collections.Allocator)
  langs:
  - csharp
  - vb
  name: TransactionExtensions
  nameWithType: TransactionExtensions
  fullName: AlgoSdk.TransactionExtensions
  type: Class
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TransactionExtensions
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
    startLine: 78
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public static class TransactionExtensions
    content.vb: Public Module TransactionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: AlgoSdk.TransactionExtensions.Sign``1(``0,AlgoSdk.Crypto.Ed25519.SecretKeyHandle)
  commentId: M:AlgoSdk.TransactionExtensions.Sign``1(``0,AlgoSdk.Crypto.Ed25519.SecretKeyHandle)
  id: Sign``1(``0,AlgoSdk.Crypto.Ed25519.SecretKeyHandle)
  isExtensionMethod: true
  parent: AlgoSdk.TransactionExtensions
  langs:
  - csharp
  - vb
  name: Sign<T>(T, Ed25519.SecretKeyHandle)
  nameWithType: TransactionExtensions.Sign<T>(T, Ed25519.SecretKeyHandle)
  fullName: AlgoSdk.TransactionExtensions.Sign<T>(T, AlgoSdk.Crypto.Ed25519.SecretKeyHandle)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Sign
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
    startLine: 80
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      public static Signed<T> Sign<T>(this T txn, Ed25519.SecretKeyHandle secretKey)
          where T : struct, ITransaction, IEquatable<T>
    parameters:
    - id: txn
      type: '{T}'
    - id: secretKey
      type: AlgoSdk.Crypto.Ed25519.SecretKeyHandle
    typeParameters:
    - id: T
    return:
      type: AlgoSdk.Signed{{T}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Sign(Of T As {Structure, ITransaction, IEquatable(Of T)})(txn As T, secretKey As Ed25519.SecretKeyHandle) As Signed(Of T)
  overload: AlgoSdk.TransactionExtensions.Sign*
  nameWithType.vb: TransactionExtensions.Sign(Of T)(T, Ed25519.SecretKeyHandle)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.TransactionExtensions.Sign(Of T)(T, AlgoSdk.Crypto.Ed25519.SecretKeyHandle)
  name.vb: Sign(Of T)(T, Ed25519.SecretKeyHandle)
- uid: AlgoSdk.TransactionExtensions.GetSignature``1(``0,AlgoSdk.Crypto.Ed25519.SecretKeyHandle)
  commentId: M:AlgoSdk.TransactionExtensions.GetSignature``1(``0,AlgoSdk.Crypto.Ed25519.SecretKeyHandle)
  id: GetSignature``1(``0,AlgoSdk.Crypto.Ed25519.SecretKeyHandle)
  isExtensionMethod: true
  parent: AlgoSdk.TransactionExtensions
  langs:
  - csharp
  - vb
  name: GetSignature<T>(T, Ed25519.SecretKeyHandle)
  nameWithType: TransactionExtensions.GetSignature<T>(T, Ed25519.SecretKeyHandle)
  fullName: AlgoSdk.TransactionExtensions.GetSignature<T>(T, AlgoSdk.Crypto.Ed25519.SecretKeyHandle)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetSignature
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
    startLine: 90
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      public static Sig GetSignature<T>(this T txn, Ed25519.SecretKeyHandle secretKey)
          where T : struct, ITransaction, IEquatable<T>
    parameters:
    - id: txn
      type: '{T}'
    - id: secretKey
      type: AlgoSdk.Crypto.Ed25519.SecretKeyHandle
    typeParameters:
    - id: T
    return:
      type: AlgoSdk.Sig
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetSignature(Of T As {Structure, ITransaction, IEquatable(Of T)})(txn As T, secretKey As Ed25519.SecretKeyHandle) As Sig
  overload: AlgoSdk.TransactionExtensions.GetSignature*
  nameWithType.vb: TransactionExtensions.GetSignature(Of T)(T, Ed25519.SecretKeyHandle)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.TransactionExtensions.GetSignature(Of T)(T, AlgoSdk.Crypto.Ed25519.SecretKeyHandle)
  name.vb: GetSignature(Of T)(T, Ed25519.SecretKeyHandle)
- uid: AlgoSdk.TransactionExtensions.ToSignatureMessage``1(``0,Unity.Collections.Allocator)
  commentId: M:AlgoSdk.TransactionExtensions.ToSignatureMessage``1(``0,Unity.Collections.Allocator)
  id: ToSignatureMessage``1(``0,Unity.Collections.Allocator)
  isExtensionMethod: true
  parent: AlgoSdk.TransactionExtensions
  langs:
  - csharp
  - vb
  name: ToSignatureMessage<T>(T, Allocator)
  nameWithType: TransactionExtensions.ToSignatureMessage<T>(T, Allocator)
  fullName: AlgoSdk.TransactionExtensions.ToSignatureMessage<T>(T, Unity.Collections.Allocator)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ToSignatureMessage
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
    startLine: 100
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      public static NativeByteArray ToSignatureMessage<T>(this T txn, Allocator allocator)
          where T : struct, ITransaction, IEquatable<T>
    parameters:
    - id: txn
      type: '{T}'
    - id: allocator
      type: Unity.Collections.Allocator
    typeParameters:
    - id: T
    return:
      type: AlgoSdk.LowLevel.NativeByteArray
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToSignatureMessage(Of T As {Structure, ITransaction, IEquatable(Of T)})(txn As T, allocator As Allocator) As NativeByteArray
  overload: AlgoSdk.TransactionExtensions.ToSignatureMessage*
  nameWithType.vb: TransactionExtensions.ToSignatureMessage(Of T)(T, Allocator)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.TransactionExtensions.ToSignatureMessage(Of T)(T, Unity.Collections.Allocator)
  name.vb: ToSignatureMessage(Of T)(T, Allocator)
- uid: AlgoSdk.TransactionExtensions.GetSuggestedFee``1(``0,AlgoSdk.TransactionParams)
  commentId: M:AlgoSdk.TransactionExtensions.GetSuggestedFee``1(``0,AlgoSdk.TransactionParams)
  id: GetSuggestedFee``1(``0,AlgoSdk.TransactionParams)
  isExtensionMethod: true
  parent: AlgoSdk.TransactionExtensions
  langs:
  - csharp
  - vb
  name: GetSuggestedFee<T>(T, TransactionParams)
  nameWithType: TransactionExtensions.GetSuggestedFee<T>(T, TransactionParams)
  fullName: AlgoSdk.TransactionExtensions.GetSuggestedFee<T>(T, AlgoSdk.TransactionParams)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetSuggestedFee
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
    startLine: 115
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      public static ulong GetSuggestedFee<T>(this T txn, TransactionParams txnParams)
          where T : struct, ITransaction, IEquatable<T>
    parameters:
    - id: txn
      type: '{T}'
    - id: txnParams
      type: AlgoSdk.TransactionParams
    typeParameters:
    - id: T
    return:
      type: System.UInt64
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetSuggestedFee(Of T As {Structure, ITransaction, IEquatable(Of T)})(txn As T, txnParams As TransactionParams) As ULong
  overload: AlgoSdk.TransactionExtensions.GetSuggestedFee*
  nameWithType.vb: TransactionExtensions.GetSuggestedFee(Of T)(T, TransactionParams)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.TransactionExtensions.GetSuggestedFee(Of T)(T, AlgoSdk.TransactionParams)
  name.vb: GetSuggestedFee(Of T)(T, TransactionParams)
- uid: AlgoSdk.TransactionExtensions.EstimateBlockSizeBytes``1(``0)
  commentId: M:AlgoSdk.TransactionExtensions.EstimateBlockSizeBytes``1(``0)
  id: EstimateBlockSizeBytes``1(``0)
  isExtensionMethod: true
  parent: AlgoSdk.TransactionExtensions
  langs:
  - csharp
  - vb
  name: EstimateBlockSizeBytes<T>(T)
  nameWithType: TransactionExtensions.EstimateBlockSizeBytes<T>(T)
  fullName: AlgoSdk.TransactionExtensions.EstimateBlockSizeBytes<T>(T)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: EstimateBlockSizeBytes
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
    startLine: 125
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      public static int EstimateBlockSizeBytes<T>(this T txn)
          where T : struct, ITransaction, IEquatable<T>
    parameters:
    - id: txn
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Int32
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function EstimateBlockSizeBytes(Of T As {Structure, ITransaction, IEquatable(Of T)})(txn As T) As Integer
  overload: AlgoSdk.TransactionExtensions.EstimateBlockSizeBytes*
  nameWithType.vb: TransactionExtensions.EstimateBlockSizeBytes(Of T)(T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.TransactionExtensions.EstimateBlockSizeBytes(Of T)(T)
  name.vb: EstimateBlockSizeBytes(Of T)(T)
- uid: AlgoSdk.TransactionExtensions.GetId``1(``0)
  commentId: M:AlgoSdk.TransactionExtensions.GetId``1(``0)
  id: GetId``1(``0)
  isExtensionMethod: true
  parent: AlgoSdk.TransactionExtensions
  langs:
  - csharp
  - vb
  name: GetId<T>(T)
  nameWithType: TransactionExtensions.GetId<T>(T)
  fullName: AlgoSdk.TransactionExtensions.GetId<T>(T)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetId
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/Transaction/ITransaction.cs
    startLine: 134
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      public static TransactionId GetId<T>(this T txn)
          where T : struct, ITransaction, IEquatable<T>
    parameters:
    - id: txn
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: AlgoSdk.TransactionId
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetId(Of T As {Structure, ITransaction, IEquatable(Of T)})(txn As T) As TransactionId
  overload: AlgoSdk.TransactionExtensions.GetId*
  nameWithType.vb: TransactionExtensions.GetId(Of T)(T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.TransactionExtensions.GetId(Of T)(T)
  name.vb: GetId(Of T)(T)
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AlgoSdk.TransactionExtensions.Sign*
  commentId: Overload:AlgoSdk.TransactionExtensions.Sign
  name: Sign
  nameWithType: TransactionExtensions.Sign
  fullName: AlgoSdk.TransactionExtensions.Sign
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: AlgoSdk.Crypto.Ed25519.SecretKeyHandle
  commentId: T:AlgoSdk.Crypto.Ed25519.SecretKeyHandle
  parent: AlgoSdk.Crypto
  name: Ed25519.SecretKeyHandle
  nameWithType: Ed25519.SecretKeyHandle
  fullName: AlgoSdk.Crypto.Ed25519.SecretKeyHandle
- uid: AlgoSdk.Signed{{T}}
  commentId: T:AlgoSdk.Signed{``0}
  parent: AlgoSdk
  definition: AlgoSdk.Signed`1
  name: Signed<T>
  nameWithType: Signed<T>
  fullName: AlgoSdk.Signed<T>
  nameWithType.vb: Signed(Of T)
  fullName.vb: AlgoSdk.Signed(Of T)
  name.vb: Signed(Of T)
  spec.csharp:
  - uid: AlgoSdk.Signed`1
    name: Signed
    nameWithType: Signed
    fullName: AlgoSdk.Signed
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.Signed`1
    name: Signed
    nameWithType: Signed
    fullName: AlgoSdk.Signed
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: AlgoSdk.Crypto
  commentId: N:AlgoSdk.Crypto
  name: AlgoSdk.Crypto
  nameWithType: AlgoSdk.Crypto
  fullName: AlgoSdk.Crypto
- uid: AlgoSdk.Signed`1
  commentId: T:AlgoSdk.Signed`1
  parent: AlgoSdk
  name: Signed<TTransaction>
  nameWithType: Signed<TTransaction>
  fullName: AlgoSdk.Signed<TTransaction>
  nameWithType.vb: Signed(Of TTransaction)
  fullName.vb: AlgoSdk.Signed(Of TTransaction)
  name.vb: Signed(Of TTransaction)
  spec.csharp:
  - uid: AlgoSdk.Signed`1
    name: Signed
    nameWithType: Signed
    fullName: AlgoSdk.Signed
  - name: <
    nameWithType: <
    fullName: <
  - name: TTransaction
    nameWithType: TTransaction
    fullName: TTransaction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.Signed`1
    name: Signed
    nameWithType: Signed
    fullName: AlgoSdk.Signed
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTransaction
    nameWithType: TTransaction
    fullName: TTransaction
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.TransactionExtensions.GetSignature*
  commentId: Overload:AlgoSdk.TransactionExtensions.GetSignature
  name: GetSignature
  nameWithType: TransactionExtensions.GetSignature
  fullName: AlgoSdk.TransactionExtensions.GetSignature
- uid: AlgoSdk.Sig
  commentId: T:AlgoSdk.Sig
  parent: AlgoSdk
  name: Sig
  nameWithType: Sig
  fullName: AlgoSdk.Sig
- uid: AlgoSdk.TransactionExtensions.ToSignatureMessage*
  commentId: Overload:AlgoSdk.TransactionExtensions.ToSignatureMessage
  name: ToSignatureMessage
  nameWithType: TransactionExtensions.ToSignatureMessage
  fullName: AlgoSdk.TransactionExtensions.ToSignatureMessage
- uid: Unity.Collections.Allocator
  commentId: T:Unity.Collections.Allocator
  parent: Unity.Collections
  isExternal: true
  name: Allocator
  nameWithType: Allocator
  fullName: Unity.Collections.Allocator
- uid: AlgoSdk.LowLevel.NativeByteArray
  commentId: T:AlgoSdk.LowLevel.NativeByteArray
  parent: AlgoSdk.LowLevel
  name: NativeByteArray
  nameWithType: NativeByteArray
  fullName: AlgoSdk.LowLevel.NativeByteArray
- uid: Unity.Collections
  commentId: N:Unity.Collections
  name: Unity.Collections
  nameWithType: Unity.Collections
  fullName: Unity.Collections
- uid: AlgoSdk.LowLevel
  commentId: N:AlgoSdk.LowLevel
  name: AlgoSdk.LowLevel
  nameWithType: AlgoSdk.LowLevel
  fullName: AlgoSdk.LowLevel
- uid: AlgoSdk.TransactionExtensions.GetSuggestedFee*
  commentId: Overload:AlgoSdk.TransactionExtensions.GetSuggestedFee
  name: GetSuggestedFee
  nameWithType: TransactionExtensions.GetSuggestedFee
  fullName: AlgoSdk.TransactionExtensions.GetSuggestedFee
- uid: AlgoSdk.TransactionParams
  commentId: T:AlgoSdk.TransactionParams
  parent: AlgoSdk
  name: TransactionParams
  nameWithType: TransactionParams
  fullName: AlgoSdk.TransactionParams
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: AlgoSdk.TransactionExtensions.EstimateBlockSizeBytes*
  commentId: Overload:AlgoSdk.TransactionExtensions.EstimateBlockSizeBytes
  name: EstimateBlockSizeBytes
  nameWithType: TransactionExtensions.EstimateBlockSizeBytes
  fullName: AlgoSdk.TransactionExtensions.EstimateBlockSizeBytes
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: AlgoSdk.TransactionExtensions.GetId*
  commentId: Overload:AlgoSdk.TransactionExtensions.GetId
  name: GetId
  nameWithType: TransactionExtensions.GetId
  fullName: AlgoSdk.TransactionExtensions.GetId
- uid: AlgoSdk.TransactionId
  commentId: T:AlgoSdk.TransactionId
  parent: AlgoSdk
  name: TransactionId
  nameWithType: TransactionId
  fullName: AlgoSdk.TransactionId
