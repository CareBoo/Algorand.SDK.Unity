### YamlMime:ManagedReference
items:
- uid: AlgoSdk.PendingTransaction
  commentId: T:AlgoSdk.PendingTransaction
  id: PendingTransaction
  parent: AlgoSdk
  children:
  - AlgoSdk.PendingTransaction.ApplicationIndex
  - AlgoSdk.PendingTransaction.AssetClosingAmount
  - AlgoSdk.PendingTransaction.AssetIndex
  - AlgoSdk.PendingTransaction.CloseRewards
  - AlgoSdk.PendingTransaction.ClosingAmount
  - AlgoSdk.PendingTransaction.ConfirmedRound
  - AlgoSdk.PendingTransaction.Equals(AlgoSdk.PendingTransaction)
  - AlgoSdk.PendingTransaction.GlobalStateDelta
  - AlgoSdk.PendingTransaction.LocalStateDelta
  - AlgoSdk.PendingTransaction.PoolError
  - AlgoSdk.PendingTransaction.ReceiverRewards
  - AlgoSdk.PendingTransaction.SenderRewards
  - AlgoSdk.PendingTransaction.Transaction
  langs:
  - csharp
  - vb
  name: PendingTransaction
  nameWithType: PendingTransaction
  fullName: AlgoSdk.PendingTransaction
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/PendingTransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: PendingTransaction
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/PendingTransaction.cs
    startLine: 5
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: 'public struct PendingTransaction : IEquatable<PendingTransaction>'
    content.vb: >-
      Public Structure PendingTransaction
          Implements IEquatable(Of PendingTransaction)
  implements:
  - System.IEquatable{AlgoSdk.PendingTransaction}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: AlgoSdk.PendingTransaction.ApplicationIndex
  commentId: F:AlgoSdk.PendingTransaction.ApplicationIndex
  id: ApplicationIndex
  parent: AlgoSdk.PendingTransaction
  langs:
  - csharp
  - vb
  name: ApplicationIndex
  nameWithType: PendingTransaction.ApplicationIndex
  fullName: AlgoSdk.PendingTransaction.ApplicationIndex
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/PendingTransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ApplicationIndex
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/PendingTransaction.cs
    startLine: 10
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("application-index", "application-index", false)]

      public ulong ApplicationIndex
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("application-index", "application-index", False)>

      Public ApplicationIndex As ULong
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: application-index
    - type: System.String
      value: application-index
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.PendingTransaction.AssetClosingAmount
  commentId: F:AlgoSdk.PendingTransaction.AssetClosingAmount
  id: AssetClosingAmount
  parent: AlgoSdk.PendingTransaction
  langs:
  - csharp
  - vb
  name: AssetClosingAmount
  nameWithType: PendingTransaction.AssetClosingAmount
  fullName: AlgoSdk.PendingTransaction.AssetClosingAmount
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/PendingTransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AssetClosingAmount
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/PendingTransaction.cs
    startLine: 13
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("asset-closing-amount", "asset-closing-amount", false)]

      public ulong AssetClosingAmount
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("asset-closing-amount", "asset-closing-amount", False)>

      Public AssetClosingAmount As ULong
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: asset-closing-amount
    - type: System.String
      value: asset-closing-amount
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.PendingTransaction.AssetIndex
  commentId: F:AlgoSdk.PendingTransaction.AssetIndex
  id: AssetIndex
  parent: AlgoSdk.PendingTransaction
  langs:
  - csharp
  - vb
  name: AssetIndex
  nameWithType: PendingTransaction.AssetIndex
  fullName: AlgoSdk.PendingTransaction.AssetIndex
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/PendingTransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AssetIndex
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/PendingTransaction.cs
    startLine: 16
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("asset-index", "asset-index", false)]

      public ulong AssetIndex
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("asset-index", "asset-index", False)>

      Public AssetIndex As ULong
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: asset-index
    - type: System.String
      value: asset-index
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.PendingTransaction.CloseRewards
  commentId: F:AlgoSdk.PendingTransaction.CloseRewards
  id: CloseRewards
  parent: AlgoSdk.PendingTransaction
  langs:
  - csharp
  - vb
  name: CloseRewards
  nameWithType: PendingTransaction.CloseRewards
  fullName: AlgoSdk.PendingTransaction.CloseRewards
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/PendingTransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: CloseRewards
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/PendingTransaction.cs
    startLine: 19
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("close-rewards", "close-rewards", false)]

      public ulong CloseRewards
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("close-rewards", "close-rewards", False)>

      Public CloseRewards As ULong
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: close-rewards
    - type: System.String
      value: close-rewards
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.PendingTransaction.ClosingAmount
  commentId: F:AlgoSdk.PendingTransaction.ClosingAmount
  id: ClosingAmount
  parent: AlgoSdk.PendingTransaction
  langs:
  - csharp
  - vb
  name: ClosingAmount
  nameWithType: PendingTransaction.ClosingAmount
  fullName: AlgoSdk.PendingTransaction.ClosingAmount
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/PendingTransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ClosingAmount
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/PendingTransaction.cs
    startLine: 22
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("closing-amount", "closing-amount", false)]

      public ulong ClosingAmount
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("closing-amount", "closing-amount", False)>

      Public ClosingAmount As ULong
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: closing-amount
    - type: System.String
      value: closing-amount
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.PendingTransaction.ConfirmedRound
  commentId: F:AlgoSdk.PendingTransaction.ConfirmedRound
  id: ConfirmedRound
  parent: AlgoSdk.PendingTransaction
  langs:
  - csharp
  - vb
  name: ConfirmedRound
  nameWithType: PendingTransaction.ConfirmedRound
  fullName: AlgoSdk.PendingTransaction.ConfirmedRound
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/PendingTransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ConfirmedRound
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/PendingTransaction.cs
    startLine: 25
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("confirmed-round", "confirmed-round", false)]

      public ulong ConfirmedRound
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("confirmed-round", "confirmed-round", False)>

      Public ConfirmedRound As ULong
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: confirmed-round
    - type: System.String
      value: confirmed-round
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.PendingTransaction.GlobalStateDelta
  commentId: F:AlgoSdk.PendingTransaction.GlobalStateDelta
  id: GlobalStateDelta
  parent: AlgoSdk.PendingTransaction
  langs:
  - csharp
  - vb
  name: GlobalStateDelta
  nameWithType: PendingTransaction.GlobalStateDelta
  fullName: AlgoSdk.PendingTransaction.GlobalStateDelta
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/PendingTransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GlobalStateDelta
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/PendingTransaction.cs
    startLine: 28
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("global-state-delta", "global-state-delta", false)]

      public EvalDeltaKeyValue[] GlobalStateDelta
    return:
      type: AlgoSdk.EvalDeltaKeyValue[]
    content.vb: >-
      <AlgoApiField("global-state-delta", "global-state-delta", False)>

      Public GlobalStateDelta As EvalDeltaKeyValue()
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: global-state-delta
    - type: System.String
      value: global-state-delta
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.PendingTransaction.LocalStateDelta
  commentId: F:AlgoSdk.PendingTransaction.LocalStateDelta
  id: LocalStateDelta
  parent: AlgoSdk.PendingTransaction
  langs:
  - csharp
  - vb
  name: LocalStateDelta
  nameWithType: PendingTransaction.LocalStateDelta
  fullName: AlgoSdk.PendingTransaction.LocalStateDelta
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/PendingTransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: LocalStateDelta
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/PendingTransaction.cs
    startLine: 31
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("local-state-delta", "local-state-delta", false)]

      public ApplicationStateDelta[] LocalStateDelta
    return:
      type: AlgoSdk.ApplicationStateDelta[]
    content.vb: >-
      <AlgoApiField("local-state-delta", "local-state-delta", False)>

      Public LocalStateDelta As ApplicationStateDelta()
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: local-state-delta
    - type: System.String
      value: local-state-delta
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.PendingTransaction.PoolError
  commentId: F:AlgoSdk.PendingTransaction.PoolError
  id: PoolError
  parent: AlgoSdk.PendingTransaction
  langs:
  - csharp
  - vb
  name: PoolError
  nameWithType: PendingTransaction.PoolError
  fullName: AlgoSdk.PendingTransaction.PoolError
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/PendingTransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: PoolError
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/PendingTransaction.cs
    startLine: 34
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("pool-error", "pool-error", false)]

      public FixedString128Bytes PoolError
    return:
      type: Unity.Collections.FixedString128Bytes
    content.vb: >-
      <AlgoApiField("pool-error", "pool-error", False)>

      Public PoolError As FixedString128Bytes
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: pool-error
    - type: System.String
      value: pool-error
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.PendingTransaction.ReceiverRewards
  commentId: F:AlgoSdk.PendingTransaction.ReceiverRewards
  id: ReceiverRewards
  parent: AlgoSdk.PendingTransaction
  langs:
  - csharp
  - vb
  name: ReceiverRewards
  nameWithType: PendingTransaction.ReceiverRewards
  fullName: AlgoSdk.PendingTransaction.ReceiverRewards
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/PendingTransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: ReceiverRewards
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/PendingTransaction.cs
    startLine: 37
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("receiver-rewards", "receiver-rewards", false)]

      public ulong ReceiverRewards
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("receiver-rewards", "receiver-rewards", False)>

      Public ReceiverRewards As ULong
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: receiver-rewards
    - type: System.String
      value: receiver-rewards
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.PendingTransaction.SenderRewards
  commentId: F:AlgoSdk.PendingTransaction.SenderRewards
  id: SenderRewards
  parent: AlgoSdk.PendingTransaction
  langs:
  - csharp
  - vb
  name: SenderRewards
  nameWithType: PendingTransaction.SenderRewards
  fullName: AlgoSdk.PendingTransaction.SenderRewards
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/PendingTransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: SenderRewards
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/PendingTransaction.cs
    startLine: 40
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("sender-rewards", "sender-rewards", false)]

      public ulong SenderRewards
    return:
      type: System.UInt64
    content.vb: >-
      <AlgoApiField("sender-rewards", "sender-rewards", False)>

      Public SenderRewards As ULong
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: sender-rewards
    - type: System.String
      value: sender-rewards
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.PendingTransaction.Transaction
  commentId: F:AlgoSdk.PendingTransaction.Transaction
  id: Transaction
  parent: AlgoSdk.PendingTransaction
  langs:
  - csharp
  - vb
  name: Transaction
  nameWithType: PendingTransaction.Transaction
  fullName: AlgoSdk.PendingTransaction.Transaction
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/PendingTransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Transaction
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/PendingTransaction.cs
    startLine: 43
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      [AlgoApiField("txn", "txn", false)]

      public SignedTransaction Transaction
    return:
      type: AlgoSdk.SignedTransaction
    content.vb: >-
      <AlgoApiField("txn", "txn", False)>

      Public Transaction As SignedTransaction
  attributes:
  - type: AlgoSdk.AlgoApiField
    ctor: AlgoSdk.AlgoApiField.#ctor(System.String,System.String,System.Boolean)
    arguments:
    - type: System.String
      value: txn
    - type: System.String
      value: txn
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.PendingTransaction.Equals(AlgoSdk.PendingTransaction)
  commentId: M:AlgoSdk.PendingTransaction.Equals(AlgoSdk.PendingTransaction)
  id: Equals(AlgoSdk.PendingTransaction)
  parent: AlgoSdk.PendingTransaction
  langs:
  - csharp
  - vb
  name: Equals(PendingTransaction)
  nameWithType: PendingTransaction.Equals(PendingTransaction)
  fullName: AlgoSdk.PendingTransaction.Equals(AlgoSdk.PendingTransaction)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/Models/PendingTransaction.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Equals
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/Models/PendingTransaction.cs
    startLine: 45
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public bool Equals(PendingTransaction other)
    parameters:
    - id: other
      type: AlgoSdk.PendingTransaction
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As PendingTransaction) As Boolean
  overload: AlgoSdk.PendingTransaction.Equals*
  implements:
  - System.IEquatable{AlgoSdk.PendingTransaction}.Equals(AlgoSdk.PendingTransaction)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: System.IEquatable{AlgoSdk.PendingTransaction}
  commentId: T:System.IEquatable{AlgoSdk.PendingTransaction}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<PendingTransaction>
  nameWithType: IEquatable<PendingTransaction>
  fullName: System.IEquatable<AlgoSdk.PendingTransaction>
  nameWithType.vb: IEquatable(Of PendingTransaction)
  fullName.vb: System.IEquatable(Of AlgoSdk.PendingTransaction)
  name.vb: IEquatable(Of PendingTransaction)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AlgoSdk.PendingTransaction
    name: PendingTransaction
    nameWithType: PendingTransaction
    fullName: AlgoSdk.PendingTransaction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AlgoSdk.PendingTransaction
    name: PendingTransaction
    nameWithType: PendingTransaction
    fullName: AlgoSdk.PendingTransaction
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: AlgoSdk.EvalDeltaKeyValue[]
  isExternal: true
  name: EvalDeltaKeyValue[]
  nameWithType: EvalDeltaKeyValue[]
  fullName: AlgoSdk.EvalDeltaKeyValue[]
  nameWithType.vb: EvalDeltaKeyValue()
  fullName.vb: AlgoSdk.EvalDeltaKeyValue()
  name.vb: EvalDeltaKeyValue()
  spec.csharp:
  - uid: AlgoSdk.EvalDeltaKeyValue
    name: EvalDeltaKeyValue
    nameWithType: EvalDeltaKeyValue
    fullName: AlgoSdk.EvalDeltaKeyValue
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: AlgoSdk.EvalDeltaKeyValue
    name: EvalDeltaKeyValue
    nameWithType: EvalDeltaKeyValue
    fullName: AlgoSdk.EvalDeltaKeyValue
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AlgoSdk.ApplicationStateDelta[]
  isExternal: true
  name: ApplicationStateDelta[]
  nameWithType: ApplicationStateDelta[]
  fullName: AlgoSdk.ApplicationStateDelta[]
  nameWithType.vb: ApplicationStateDelta()
  fullName.vb: AlgoSdk.ApplicationStateDelta()
  name.vb: ApplicationStateDelta()
  spec.csharp:
  - uid: AlgoSdk.ApplicationStateDelta
    name: ApplicationStateDelta
    nameWithType: ApplicationStateDelta
    fullName: AlgoSdk.ApplicationStateDelta
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: AlgoSdk.ApplicationStateDelta
    name: ApplicationStateDelta
    nameWithType: ApplicationStateDelta
    fullName: AlgoSdk.ApplicationStateDelta
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Unity.Collections.FixedString128Bytes
  commentId: T:Unity.Collections.FixedString128Bytes
  parent: Unity.Collections
  name: FixedString128Bytes
  nameWithType: FixedString128Bytes
  fullName: Unity.Collections.FixedString128Bytes
- uid: Unity.Collections
  commentId: N:Unity.Collections
  name: Unity.Collections
  nameWithType: Unity.Collections
  fullName: Unity.Collections
- uid: AlgoSdk.SignedTransaction
  commentId: T:AlgoSdk.SignedTransaction
  parent: AlgoSdk
  name: SignedTransaction
  nameWithType: SignedTransaction
  fullName: AlgoSdk.SignedTransaction
- uid: AlgoSdk.PendingTransaction.Equals*
  commentId: Overload:AlgoSdk.PendingTransaction.Equals
  name: Equals
  nameWithType: PendingTransaction.Equals
  fullName: AlgoSdk.PendingTransaction.Equals
- uid: System.IEquatable{AlgoSdk.PendingTransaction}.Equals(AlgoSdk.PendingTransaction)
  commentId: M:System.IEquatable{AlgoSdk.PendingTransaction}.Equals(AlgoSdk.PendingTransaction)
  parent: System.IEquatable{AlgoSdk.PendingTransaction}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(PendingTransaction)
  nameWithType: IEquatable<PendingTransaction>.Equals(PendingTransaction)
  fullName: System.IEquatable<AlgoSdk.PendingTransaction>.Equals(AlgoSdk.PendingTransaction)
  nameWithType.vb: IEquatable(Of PendingTransaction).Equals(PendingTransaction)
  fullName.vb: System.IEquatable(Of AlgoSdk.PendingTransaction).Equals(AlgoSdk.PendingTransaction)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<PendingTransaction>.Equals
    fullName: System.IEquatable<AlgoSdk.PendingTransaction>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.PendingTransaction
    name: PendingTransaction
    nameWithType: PendingTransaction
    fullName: AlgoSdk.PendingTransaction
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of PendingTransaction).Equals
    fullName: System.IEquatable(Of AlgoSdk.PendingTransaction).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AlgoSdk.PendingTransaction
    name: PendingTransaction
    nameWithType: PendingTransaction
    fullName: AlgoSdk.PendingTransaction
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.PendingTransaction
  commentId: T:AlgoSdk.PendingTransaction
  parent: AlgoSdk
  name: PendingTransaction
  nameWithType: PendingTransaction
  fullName: AlgoSdk.PendingTransaction
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
