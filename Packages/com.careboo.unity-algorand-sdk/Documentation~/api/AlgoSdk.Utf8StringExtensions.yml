### YamlMime:ManagedReference
items:
- uid: AlgoSdk.Utf8StringExtensions
  commentId: T:AlgoSdk.Utf8StringExtensions
  id: Utf8StringExtensions
  parent: AlgoSdk
  children:
  - AlgoSdk.Utf8StringExtensions.Append``1(``0@,System.Boolean)
  - AlgoSdk.Utf8StringExtensions.Append``1(``0@,System.UInt64)
  langs:
  - csharp
  - vb
  name: Utf8StringExtensions
  nameWithType: Utf8StringExtensions
  fullName: AlgoSdk.Utf8StringExtensions
  type: Class
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Encoding/Utf8StringExtensions.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Utf8StringExtensions
    path: ../CareBoo.AlgoSdk/Encoding/Utf8StringExtensions.cs
    startLine: 4
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public static class Utf8StringExtensions
    content.vb: Public Module Utf8StringExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: AlgoSdk.Utf8StringExtensions.Append``1(``0@,System.UInt64)
  commentId: M:AlgoSdk.Utf8StringExtensions.Append``1(``0@,System.UInt64)
  id: Append``1(``0@,System.UInt64)
  isExtensionMethod: true
  parent: AlgoSdk.Utf8StringExtensions
  langs:
  - csharp
  - vb
  name: Append<T>(ref T, UInt64)
  nameWithType: Utf8StringExtensions.Append<T>(ref T, UInt64)
  fullName: AlgoSdk.Utf8StringExtensions.Append<T>(ref T, System.UInt64)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Encoding/Utf8StringExtensions.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Append
    path: ../CareBoo.AlgoSdk/Encoding/Utf8StringExtensions.cs
    startLine: 6
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      public static FormatError Append<T>(this ref T fs, ulong input)
          where T : struct, INativeList<byte>, IUTF8Bytes
    parameters:
    - id: fs
      type: '{T}'
    - id: input
      type: System.UInt64
    typeParameters:
    - id: T
    return:
      type: Unity.Collections.FormatError
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Append(Of T As {Structure, INativeList(Of Byte), IUTF8Bytes})(ByRef fs As T, input As ULong) As FormatError
  overload: AlgoSdk.Utf8StringExtensions.Append*
  nameWithType.vb: Utf8StringExtensions.Append(Of T)(ByRef T, UInt64)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.Utf8StringExtensions.Append(Of T)(ByRef T, System.UInt64)
  name.vb: Append(Of T)(ByRef T, UInt64)
- uid: AlgoSdk.Utf8StringExtensions.Append``1(``0@,System.Boolean)
  commentId: M:AlgoSdk.Utf8StringExtensions.Append``1(``0@,System.Boolean)
  id: Append``1(``0@,System.Boolean)
  isExtensionMethod: true
  parent: AlgoSdk.Utf8StringExtensions
  langs:
  - csharp
  - vb
  name: Append<T>(ref T, Boolean)
  nameWithType: Utf8StringExtensions.Append<T>(ref T, Boolean)
  fullName: AlgoSdk.Utf8StringExtensions.Append<T>(ref T, System.Boolean)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/Encoding/Utf8StringExtensions.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Append
    path: ../CareBoo.AlgoSdk/Encoding/Utf8StringExtensions.cs
    startLine: 23
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      public static FormatError Append<T>(this ref T fs, bool input)
          where T : struct, INativeList<byte>, IUTF8Bytes
    parameters:
    - id: fs
      type: '{T}'
    - id: input
      type: System.Boolean
    typeParameters:
    - id: T
    return:
      type: Unity.Collections.FormatError
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Append(Of T As {Structure, INativeList(Of Byte), IUTF8Bytes})(ByRef fs As T, input As Boolean) As FormatError
  overload: AlgoSdk.Utf8StringExtensions.Append*
  nameWithType.vb: Utf8StringExtensions.Append(Of T)(ByRef T, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.Utf8StringExtensions.Append(Of T)(ByRef T, System.Boolean)
  name.vb: Append(Of T)(ByRef T, Boolean)
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AlgoSdk.Utf8StringExtensions.Append*
  commentId: Overload:AlgoSdk.Utf8StringExtensions.Append
  name: Append
  nameWithType: Utf8StringExtensions.Append
  fullName: AlgoSdk.Utf8StringExtensions.Append
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Unity.Collections.FormatError
  commentId: T:Unity.Collections.FormatError
  parent: Unity.Collections
  name: FormatError
  nameWithType: FormatError
  fullName: Unity.Collections.FormatError
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Unity.Collections
  commentId: N:Unity.Collections
  name: Unity.Collections
  nameWithType: Unity.Collections
  fullName: Unity.Collections
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
