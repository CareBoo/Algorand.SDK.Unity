### YamlMime:ManagedReference
items:
- uid: AlgoSdk.Crypto.Ed25519.KeyPair
  commentId: T:AlgoSdk.Crypto.Ed25519.KeyPair
  id: Ed25519.KeyPair
  parent: AlgoSdk.Crypto
  children:
  - AlgoSdk.Crypto.Ed25519.KeyPair.#ctor(AlgoSdk.Crypto.Ed25519.SecretKeyHandle,AlgoSdk.Crypto.Ed25519.PublicKey@)
  - AlgoSdk.Crypto.Ed25519.KeyPair.Deconstruct(AlgoSdk.Crypto.Ed25519.SecretKeyHandle@,AlgoSdk.Crypto.Ed25519.PublicKey@)
  - AlgoSdk.Crypto.Ed25519.KeyPair.Dispose
  - AlgoSdk.Crypto.Ed25519.KeyPair.Dispose(Unity.Jobs.JobHandle)
  - AlgoSdk.Crypto.Ed25519.KeyPair.PublicKey
  - AlgoSdk.Crypto.Ed25519.KeyPair.SecretKey
  langs:
  - csharp
  - vb
  name: Ed25519.KeyPair
  nameWithType: Ed25519.KeyPair
  fullName: AlgoSdk.Crypto.Ed25519.KeyPair
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.Crypto/Ed25519.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: KeyPair
    path: ../CareBoo.AlgoSdk.Crypto/Ed25519.cs
    startLine: 12
  assemblies:
  - CareBoo.AlgoSdk.Crypto
  namespace: AlgoSdk.Crypto
  syntax:
    content: 'public struct KeyPair : INativeDisposable, IDisposable'
    content.vb: >-
      Public Structure KeyPair
          Implements INativeDisposable, IDisposable
  implements:
  - Unity.Collections.INativeDisposable
  - System.IDisposable
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: AlgoSdk.Crypto.Ed25519.KeyPair.SecretKey
  commentId: F:AlgoSdk.Crypto.Ed25519.KeyPair.SecretKey
  id: SecretKey
  parent: AlgoSdk.Crypto.Ed25519.KeyPair
  langs:
  - csharp
  - vb
  name: SecretKey
  nameWithType: Ed25519.KeyPair.SecretKey
  fullName: AlgoSdk.Crypto.Ed25519.KeyPair.SecretKey
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.Crypto/Ed25519.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: SecretKey
    path: ../CareBoo.AlgoSdk.Crypto/Ed25519.cs
    startLine: 15
  assemblies:
  - CareBoo.AlgoSdk.Crypto
  namespace: AlgoSdk.Crypto
  syntax:
    content: public readonly Ed25519.SecretKeyHandle SecretKey
    return:
      type: AlgoSdk.Crypto.Ed25519.SecretKeyHandle
    content.vb: Public ReadOnly SecretKey As Ed25519.SecretKeyHandle
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AlgoSdk.Crypto.Ed25519.KeyPair.PublicKey
  commentId: F:AlgoSdk.Crypto.Ed25519.KeyPair.PublicKey
  id: PublicKey
  parent: AlgoSdk.Crypto.Ed25519.KeyPair
  langs:
  - csharp
  - vb
  name: PublicKey
  nameWithType: Ed25519.KeyPair.PublicKey
  fullName: AlgoSdk.Crypto.Ed25519.KeyPair.PublicKey
  type: Field
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.Crypto/Ed25519.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: PublicKey
    path: ../CareBoo.AlgoSdk.Crypto/Ed25519.cs
    startLine: 16
  assemblies:
  - CareBoo.AlgoSdk.Crypto
  namespace: AlgoSdk.Crypto
  syntax:
    content: public readonly Ed25519.PublicKey PublicKey
    return:
      type: AlgoSdk.Crypto.Ed25519.PublicKey
    content.vb: Public ReadOnly PublicKey As Ed25519.PublicKey
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AlgoSdk.Crypto.Ed25519.KeyPair.#ctor(AlgoSdk.Crypto.Ed25519.SecretKeyHandle,AlgoSdk.Crypto.Ed25519.PublicKey@)
  commentId: M:AlgoSdk.Crypto.Ed25519.KeyPair.#ctor(AlgoSdk.Crypto.Ed25519.SecretKeyHandle,AlgoSdk.Crypto.Ed25519.PublicKey@)
  id: '#ctor(AlgoSdk.Crypto.Ed25519.SecretKeyHandle,AlgoSdk.Crypto.Ed25519.PublicKey@)'
  parent: AlgoSdk.Crypto.Ed25519.KeyPair
  langs:
  - csharp
  - vb
  name: KeyPair(Ed25519.SecretKeyHandle, Ed25519.PublicKey)
  nameWithType: Ed25519.KeyPair.KeyPair(Ed25519.SecretKeyHandle, Ed25519.PublicKey)
  fullName: AlgoSdk.Crypto.Ed25519.KeyPair.KeyPair(AlgoSdk.Crypto.Ed25519.SecretKeyHandle, AlgoSdk.Crypto.Ed25519.PublicKey)
  type: Constructor
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.Crypto/Ed25519.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: .ctor
    path: ../CareBoo.AlgoSdk.Crypto/Ed25519.cs
    startLine: 18
  assemblies:
  - CareBoo.AlgoSdk.Crypto
  namespace: AlgoSdk.Crypto
  syntax:
    content: public KeyPair(Ed25519.SecretKeyHandle secretKey, in Ed25519.PublicKey publicKey)
    parameters:
    - id: secretKey
      type: AlgoSdk.Crypto.Ed25519.SecretKeyHandle
    - id: publicKey
      type: AlgoSdk.Crypto.Ed25519.PublicKey
    content.vb: Public Sub New(secretKey As Ed25519.SecretKeyHandle, ByRef publicKey As Ed25519.PublicKey)
  overload: AlgoSdk.Crypto.Ed25519.KeyPair.#ctor*
  nameWithType.vb: Ed25519.KeyPair.KeyPair(Ed25519.SecretKeyHandle, ByRef Ed25519.PublicKey)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.Crypto.Ed25519.KeyPair.KeyPair(AlgoSdk.Crypto.Ed25519.SecretKeyHandle, ByRef AlgoSdk.Crypto.Ed25519.PublicKey)
  name.vb: KeyPair(Ed25519.SecretKeyHandle, ByRef Ed25519.PublicKey)
- uid: AlgoSdk.Crypto.Ed25519.KeyPair.Deconstruct(AlgoSdk.Crypto.Ed25519.SecretKeyHandle@,AlgoSdk.Crypto.Ed25519.PublicKey@)
  commentId: M:AlgoSdk.Crypto.Ed25519.KeyPair.Deconstruct(AlgoSdk.Crypto.Ed25519.SecretKeyHandle@,AlgoSdk.Crypto.Ed25519.PublicKey@)
  id: Deconstruct(AlgoSdk.Crypto.Ed25519.SecretKeyHandle@,AlgoSdk.Crypto.Ed25519.PublicKey@)
  parent: AlgoSdk.Crypto.Ed25519.KeyPair
  langs:
  - csharp
  - vb
  name: Deconstruct(out Ed25519.SecretKeyHandle, out Ed25519.PublicKey)
  nameWithType: Ed25519.KeyPair.Deconstruct(out Ed25519.SecretKeyHandle, out Ed25519.PublicKey)
  fullName: AlgoSdk.Crypto.Ed25519.KeyPair.Deconstruct(out AlgoSdk.Crypto.Ed25519.SecretKeyHandle, out AlgoSdk.Crypto.Ed25519.PublicKey)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.Crypto/Ed25519.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Deconstruct
    path: ../CareBoo.AlgoSdk.Crypto/Ed25519.cs
    startLine: 24
  assemblies:
  - CareBoo.AlgoSdk.Crypto
  namespace: AlgoSdk.Crypto
  syntax:
    content: public void Deconstruct(out Ed25519.SecretKeyHandle secretKey, out Ed25519.PublicKey publicKey)
    parameters:
    - id: secretKey
      type: AlgoSdk.Crypto.Ed25519.SecretKeyHandle
    - id: publicKey
      type: AlgoSdk.Crypto.Ed25519.PublicKey
    content.vb: Public Sub Deconstruct(ByRef secretKey As Ed25519.SecretKeyHandle, ByRef publicKey As Ed25519.PublicKey)
  overload: AlgoSdk.Crypto.Ed25519.KeyPair.Deconstruct*
  nameWithType.vb: Ed25519.KeyPair.Deconstruct(ByRef Ed25519.SecretKeyHandle, ByRef Ed25519.PublicKey)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.Crypto.Ed25519.KeyPair.Deconstruct(ByRef AlgoSdk.Crypto.Ed25519.SecretKeyHandle, ByRef AlgoSdk.Crypto.Ed25519.PublicKey)
  name.vb: Deconstruct(ByRef Ed25519.SecretKeyHandle, ByRef Ed25519.PublicKey)
- uid: AlgoSdk.Crypto.Ed25519.KeyPair.Dispose(Unity.Jobs.JobHandle)
  commentId: M:AlgoSdk.Crypto.Ed25519.KeyPair.Dispose(Unity.Jobs.JobHandle)
  id: Dispose(Unity.Jobs.JobHandle)
  parent: AlgoSdk.Crypto.Ed25519.KeyPair
  langs:
  - csharp
  - vb
  name: Dispose(JobHandle)
  nameWithType: Ed25519.KeyPair.Dispose(JobHandle)
  fullName: AlgoSdk.Crypto.Ed25519.KeyPair.Dispose(Unity.Jobs.JobHandle)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.Crypto/Ed25519.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Dispose
    path: ../CareBoo.AlgoSdk.Crypto/Ed25519.cs
    startLine: 30
  assemblies:
  - CareBoo.AlgoSdk.Crypto
  namespace: AlgoSdk.Crypto
  syntax:
    content: public JobHandle Dispose(JobHandle inputDeps)
    parameters:
    - id: inputDeps
      type: Unity.Jobs.JobHandle
    return:
      type: Unity.Jobs.JobHandle
    content.vb: Public Function Dispose(inputDeps As JobHandle) As JobHandle
  overload: AlgoSdk.Crypto.Ed25519.KeyPair.Dispose*
  implements:
  - Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoSdk.Crypto.Ed25519.KeyPair.Dispose
  commentId: M:AlgoSdk.Crypto.Ed25519.KeyPair.Dispose
  id: Dispose
  parent: AlgoSdk.Crypto.Ed25519.KeyPair
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Ed25519.KeyPair.Dispose()
  fullName: AlgoSdk.Crypto.Ed25519.KeyPair.Dispose()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.Crypto/Ed25519.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Dispose
    path: ../CareBoo.AlgoSdk.Crypto/Ed25519.cs
    startLine: 35
  assemblies:
  - CareBoo.AlgoSdk.Crypto
  namespace: AlgoSdk.Crypto
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: AlgoSdk.Crypto.Ed25519.KeyPair.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AlgoSdk.Crypto
  commentId: N:AlgoSdk.Crypto
  name: AlgoSdk.Crypto
  nameWithType: AlgoSdk.Crypto
  fullName: AlgoSdk.Crypto
- uid: Unity.Collections.INativeDisposable
  commentId: T:Unity.Collections.INativeDisposable
  parent: Unity.Collections
  name: INativeDisposable
  nameWithType: INativeDisposable
  fullName: Unity.Collections.INativeDisposable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Collections
  commentId: N:Unity.Collections
  name: Unity.Collections
  nameWithType: Unity.Collections
  fullName: Unity.Collections
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AlgoSdk.Crypto.Ed25519.SecretKeyHandle
  commentId: T:AlgoSdk.Crypto.Ed25519.SecretKeyHandle
  parent: AlgoSdk.Crypto
  name: Ed25519.SecretKeyHandle
  nameWithType: Ed25519.SecretKeyHandle
  fullName: AlgoSdk.Crypto.Ed25519.SecretKeyHandle
- uid: AlgoSdk.Crypto.Ed25519.PublicKey
  commentId: T:AlgoSdk.Crypto.Ed25519.PublicKey
  parent: AlgoSdk.Crypto
  name: Ed25519.PublicKey
  nameWithType: Ed25519.PublicKey
  fullName: AlgoSdk.Crypto.Ed25519.PublicKey
- uid: AlgoSdk.Crypto.Ed25519.KeyPair.#ctor*
  commentId: Overload:AlgoSdk.Crypto.Ed25519.KeyPair.#ctor
  name: KeyPair
  nameWithType: Ed25519.KeyPair.KeyPair
  fullName: AlgoSdk.Crypto.Ed25519.KeyPair.KeyPair
- uid: AlgoSdk.Crypto.Ed25519.KeyPair.Deconstruct*
  commentId: Overload:AlgoSdk.Crypto.Ed25519.KeyPair.Deconstruct
  name: Deconstruct
  nameWithType: Ed25519.KeyPair.Deconstruct
  fullName: AlgoSdk.Crypto.Ed25519.KeyPair.Deconstruct
- uid: AlgoSdk.Crypto.Ed25519.KeyPair.Dispose*
  commentId: Overload:AlgoSdk.Crypto.Ed25519.KeyPair.Dispose
  name: Dispose
  nameWithType: Ed25519.KeyPair.Dispose
  fullName: AlgoSdk.Crypto.Ed25519.KeyPair.Dispose
- uid: Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
  commentId: M:Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
  parent: Unity.Collections.INativeDisposable
  isExternal: true
  name: Dispose(JobHandle)
  nameWithType: INativeDisposable.Dispose(JobHandle)
  fullName: Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
  spec.csharp:
  - uid: Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
    name: Dispose
    nameWithType: INativeDisposable.Dispose
    fullName: Unity.Collections.INativeDisposable.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: Unity.Jobs.JobHandle
    name: JobHandle
    nameWithType: JobHandle
    fullName: Unity.Jobs.JobHandle
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
    name: Dispose
    nameWithType: INativeDisposable.Dispose
    fullName: Unity.Collections.INativeDisposable.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: Unity.Jobs.JobHandle
    name: JobHandle
    nameWithType: JobHandle
    fullName: Unity.Jobs.JobHandle
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Jobs.JobHandle
  commentId: T:Unity.Jobs.JobHandle
  parent: Unity.Jobs
  isExternal: true
  name: JobHandle
  nameWithType: JobHandle
  fullName: Unity.Jobs.JobHandle
- uid: Unity.Jobs
  commentId: N:Unity.Jobs
  isExternal: true
  name: Unity.Jobs
  nameWithType: Unity.Jobs
  fullName: Unity.Jobs
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
