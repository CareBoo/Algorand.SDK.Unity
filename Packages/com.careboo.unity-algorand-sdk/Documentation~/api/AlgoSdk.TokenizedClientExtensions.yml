### YamlMime:ManagedReference
items:
- uid: AlgoSdk.TokenizedClientExtensions
  commentId: T:AlgoSdk.TokenizedClientExtensions
  id: TokenizedClientExtensions
  parent: AlgoSdk
  children:
  - AlgoSdk.TokenizedClientExtensions.Delete``1(``0,System.String)
  - AlgoSdk.TokenizedClientExtensions.Get``1(``0,System.String)
  - AlgoSdk.TokenizedClientExtensions.GetUrl``1(``0,System.String)
  - AlgoSdk.TokenizedClientExtensions.Post``1(``0,System.String)
  langs:
  - csharp
  - vb
  name: TokenizedClientExtensions
  nameWithType: TokenizedClientExtensions
  fullName: AlgoSdk.TokenizedClientExtensions
  type: Class
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/IAlgoApiClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: TokenizedClientExtensions
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/IAlgoApiClient.cs
    startLine: 23
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: public static class TokenizedClientExtensions
    content.vb: Public Module TokenizedClientExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: AlgoSdk.TokenizedClientExtensions.GetUrl``1(``0,System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.GetUrl``1(``0,System.String)
  id: GetUrl``1(``0,System.String)
  isExtensionMethod: true
  parent: AlgoSdk.TokenizedClientExtensions
  langs:
  - csharp
  - vb
  name: GetUrl<T>(T, String)
  nameWithType: TokenizedClientExtensions.GetUrl<T>(T, String)
  fullName: AlgoSdk.TokenizedClientExtensions.GetUrl<T>(T, System.String)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/IAlgoApiClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: GetUrl
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/IAlgoApiClient.cs
    startLine: 25
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      public static string GetUrl<T>(this T client, string endpoint)
          where T : IAlgoApiClient
    parameters:
    - id: client
      type: '{T}'
    - id: endpoint
      type: System.String
    typeParameters:
    - id: T
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetUrl(Of T As IAlgoApiClient)(client As T, endpoint As String) As String
  overload: AlgoSdk.TokenizedClientExtensions.GetUrl*
  nameWithType.vb: TokenizedClientExtensions.GetUrl(Of T)(T, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.TokenizedClientExtensions.GetUrl(Of T)(T, System.String)
  name.vb: GetUrl(Of T)(T, String)
- uid: AlgoSdk.TokenizedClientExtensions.Get``1(``0,System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.Get``1(``0,System.String)
  id: Get``1(``0,System.String)
  isExtensionMethod: true
  parent: AlgoSdk.TokenizedClientExtensions
  langs:
  - csharp
  - vb
  name: Get<T>(T, String)
  nameWithType: TokenizedClientExtensions.Get<T>(T, String)
  fullName: AlgoSdk.TokenizedClientExtensions.Get<T>(T, System.String)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/IAlgoApiClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Get
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/IAlgoApiClient.cs
    startLine: 31
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      public static AlgoApiRequest Get<T>(this T client, string endpoint)
          where T : IAlgoApiClient
    parameters:
    - id: client
      type: '{T}'
    - id: endpoint
      type: System.String
    typeParameters:
    - id: T
    return:
      type: AlgoSdk.AlgoApiRequest
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(Of T As IAlgoApiClient)(client As T, endpoint As String) As AlgoApiRequest
  overload: AlgoSdk.TokenizedClientExtensions.Get*
  nameWithType.vb: TokenizedClientExtensions.Get(Of T)(T, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.TokenizedClientExtensions.Get(Of T)(T, System.String)
  name.vb: Get(Of T)(T, String)
- uid: AlgoSdk.TokenizedClientExtensions.Post``1(``0,System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.Post``1(``0,System.String)
  id: Post``1(``0,System.String)
  isExtensionMethod: true
  parent: AlgoSdk.TokenizedClientExtensions
  langs:
  - csharp
  - vb
  name: Post<T>(T, String)
  nameWithType: TokenizedClientExtensions.Post<T>(T, String)
  fullName: AlgoSdk.TokenizedClientExtensions.Post<T>(T, System.String)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/IAlgoApiClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Post
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/IAlgoApiClient.cs
    startLine: 39
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      public static AlgoApiRequest Post<T>(this T client, string endpoint)
          where T : IAlgoApiClient
    parameters:
    - id: client
      type: '{T}'
    - id: endpoint
      type: System.String
    typeParameters:
    - id: T
    return:
      type: AlgoSdk.AlgoApiRequest
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Post(Of T As IAlgoApiClient)(client As T, endpoint As String) As AlgoApiRequest
  overload: AlgoSdk.TokenizedClientExtensions.Post*
  nameWithType.vb: TokenizedClientExtensions.Post(Of T)(T, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.TokenizedClientExtensions.Post(Of T)(T, System.String)
  name.vb: Post(Of T)(T, String)
- uid: AlgoSdk.TokenizedClientExtensions.Delete``1(``0,System.String)
  commentId: M:AlgoSdk.TokenizedClientExtensions.Delete``1(``0,System.String)
  id: Delete``1(``0,System.String)
  isExtensionMethod: true
  parent: AlgoSdk.TokenizedClientExtensions
  langs:
  - csharp
  - vb
  name: Delete<T>(T, String)
  nameWithType: TokenizedClientExtensions.Delete<T>(T, String)
  fullName: AlgoSdk.TokenizedClientExtensions.Delete<T>(T, System.String)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk/AlgoApi/Shared/IAlgoApiClient.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Delete
    path: ../CareBoo.AlgoSdk/AlgoApi/Shared/IAlgoApiClient.cs
    startLine: 47
  assemblies:
  - CareBoo.AlgoSdk
  namespace: AlgoSdk
  syntax:
    content: >-
      public static AlgoApiRequest Delete<T>(this T client, string endpoint)
          where T : IAlgoApiClient
    parameters:
    - id: client
      type: '{T}'
    - id: endpoint
      type: System.String
    typeParameters:
    - id: T
    return:
      type: AlgoSdk.AlgoApiRequest
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Delete(Of T As IAlgoApiClient)(client As T, endpoint As String) As AlgoApiRequest
  overload: AlgoSdk.TokenizedClientExtensions.Delete*
  nameWithType.vb: TokenizedClientExtensions.Delete(Of T)(T, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.TokenizedClientExtensions.Delete(Of T)(T, System.String)
  name.vb: Delete(Of T)(T, String)
references:
- uid: AlgoSdk
  commentId: N:AlgoSdk
  name: AlgoSdk
  nameWithType: AlgoSdk
  fullName: AlgoSdk
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AlgoSdk.TokenizedClientExtensions.GetUrl*
  commentId: Overload:AlgoSdk.TokenizedClientExtensions.GetUrl
  name: GetUrl
  nameWithType: TokenizedClientExtensions.GetUrl
  fullName: AlgoSdk.TokenizedClientExtensions.GetUrl
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: AlgoSdk.TokenizedClientExtensions.Get*
  commentId: Overload:AlgoSdk.TokenizedClientExtensions.Get
  name: Get
  nameWithType: TokenizedClientExtensions.Get
  fullName: AlgoSdk.TokenizedClientExtensions.Get
- uid: AlgoSdk.AlgoApiRequest
  commentId: T:AlgoSdk.AlgoApiRequest
  parent: AlgoSdk
  name: AlgoApiRequest
  nameWithType: AlgoApiRequest
  fullName: AlgoSdk.AlgoApiRequest
- uid: AlgoSdk.TokenizedClientExtensions.Post*
  commentId: Overload:AlgoSdk.TokenizedClientExtensions.Post
  name: Post
  nameWithType: TokenizedClientExtensions.Post
  fullName: AlgoSdk.TokenizedClientExtensions.Post
- uid: AlgoSdk.TokenizedClientExtensions.Delete*
  commentId: Overload:AlgoSdk.TokenizedClientExtensions.Delete
  name: Delete
  nameWithType: TokenizedClientExtensions.Delete
  fullName: AlgoSdk.TokenizedClientExtensions.Delete
