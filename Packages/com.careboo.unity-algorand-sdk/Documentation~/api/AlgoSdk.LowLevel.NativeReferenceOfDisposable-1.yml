### YamlMime:ManagedReference
items:
- uid: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1
  commentId: T:AlgoSdk.LowLevel.NativeReferenceOfDisposable`1
  id: NativeReferenceOfDisposable`1
  parent: AlgoSdk.LowLevel
  children:
  - AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.#ctor(`0,Unity.Collections.Allocator)
  - AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.#ctor(Unity.Collections.NativeReference{`0})
  - AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.AsReadOnly
  - AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.Dispose
  - AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.Dispose(Unity.Jobs.JobHandle)
  - AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.IsCreated
  - AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.op_Implicit(Unity.Collections.NativeReference{`0})~AlgoSdk.LowLevel.NativeReferenceOfDisposable{`0}
  - AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.Value
  langs:
  - csharp
  - vb
  name: NativeReferenceOfDisposable<T>
  nameWithType: NativeReferenceOfDisposable<T>
  fullName: AlgoSdk.LowLevel.NativeReferenceOfDisposable<T>
  type: Struct
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.LowLevel/NativeReferenceOfDisposable.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: NativeReferenceOfDisposable
    path: ../CareBoo.AlgoSdk.LowLevel/NativeReferenceOfDisposable.cs
    startLine: 5
  assemblies:
  - CareBoo.AlgoSdk.LowLevel
  namespace: AlgoSdk.LowLevel
  syntax:
    content: 'public struct NativeReferenceOfDisposable<T> : INativeDisposable, IDisposable where T : struct, INativeDisposable'
    typeParameters:
    - id: T
    content.vb: >-
      Public Structure NativeReferenceOfDisposable(Of T As {Structure, INativeDisposable})
          Implements INativeDisposable, IDisposable
  implements:
  - Unity.Collections.INativeDisposable
  - System.IDisposable
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: NativeReferenceOfDisposable(Of T)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  fullName.vb: AlgoSdk.LowLevel.NativeReferenceOfDisposable(Of T)
  name.vb: NativeReferenceOfDisposable(Of T)
- uid: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.#ctor(`0,Unity.Collections.Allocator)
  commentId: M:AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.#ctor(`0,Unity.Collections.Allocator)
  id: '#ctor(`0,Unity.Collections.Allocator)'
  parent: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1
  langs:
  - csharp
  - vb
  name: NativeReferenceOfDisposable(T, Allocator)
  nameWithType: NativeReferenceOfDisposable<T>.NativeReferenceOfDisposable(T, Allocator)
  fullName: AlgoSdk.LowLevel.NativeReferenceOfDisposable<T>.NativeReferenceOfDisposable(T, Unity.Collections.Allocator)
  type: Constructor
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.LowLevel/NativeReferenceOfDisposable.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: .ctor
    path: ../CareBoo.AlgoSdk.LowLevel/NativeReferenceOfDisposable.cs
    startLine: 11
  assemblies:
  - CareBoo.AlgoSdk.LowLevel
  namespace: AlgoSdk.LowLevel
  syntax:
    content: public NativeReferenceOfDisposable(T value, Allocator allocator)
    parameters:
    - id: value
      type: '{T}'
    - id: allocator
      type: Unity.Collections.Allocator
    content.vb: Public Sub New(value As T, allocator As Allocator)
  overload: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.#ctor*
  nameWithType.vb: NativeReferenceOfDisposable(Of T).NativeReferenceOfDisposable(T, Allocator)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.LowLevel.NativeReferenceOfDisposable(Of T).NativeReferenceOfDisposable(T, Unity.Collections.Allocator)
- uid: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.#ctor(Unity.Collections.NativeReference{`0})
  commentId: M:AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.#ctor(Unity.Collections.NativeReference{`0})
  id: '#ctor(Unity.Collections.NativeReference{`0})'
  parent: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1
  langs:
  - csharp
  - vb
  name: NativeReferenceOfDisposable(NativeReference<T>)
  nameWithType: NativeReferenceOfDisposable<T>.NativeReferenceOfDisposable(NativeReference<T>)
  fullName: AlgoSdk.LowLevel.NativeReferenceOfDisposable<T>.NativeReferenceOfDisposable(Unity.Collections.NativeReference<T>)
  type: Constructor
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.LowLevel/NativeReferenceOfDisposable.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: .ctor
    path: ../CareBoo.AlgoSdk.LowLevel/NativeReferenceOfDisposable.cs
    startLine: 14
  assemblies:
  - CareBoo.AlgoSdk.LowLevel
  namespace: AlgoSdk.LowLevel
  syntax:
    content: public NativeReferenceOfDisposable(NativeReference<T> reference)
    parameters:
    - id: reference
      type: Unity.Collections.NativeReference{{T}}
    content.vb: Public Sub New(reference As NativeReference(Of T))
  overload: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.#ctor*
  nameWithType.vb: NativeReferenceOfDisposable(Of T).NativeReferenceOfDisposable(NativeReference(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.LowLevel.NativeReferenceOfDisposable(Of T).NativeReferenceOfDisposable(Unity.Collections.NativeReference(Of T))
  name.vb: NativeReferenceOfDisposable(NativeReference(Of T))
- uid: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.Dispose(Unity.Jobs.JobHandle)
  commentId: M:AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.Dispose(Unity.Jobs.JobHandle)
  id: Dispose(Unity.Jobs.JobHandle)
  parent: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1
  langs:
  - csharp
  - vb
  name: Dispose(JobHandle)
  nameWithType: NativeReferenceOfDisposable<T>.Dispose(JobHandle)
  fullName: AlgoSdk.LowLevel.NativeReferenceOfDisposable<T>.Dispose(Unity.Jobs.JobHandle)
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.LowLevel/NativeReferenceOfDisposable.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Dispose
    path: ../CareBoo.AlgoSdk.LowLevel/NativeReferenceOfDisposable.cs
    startLine: 19
  assemblies:
  - CareBoo.AlgoSdk.LowLevel
  namespace: AlgoSdk.LowLevel
  syntax:
    content: public JobHandle Dispose(JobHandle inputDeps)
    parameters:
    - id: inputDeps
      type: Unity.Jobs.JobHandle
    return:
      type: Unity.Jobs.JobHandle
    content.vb: Public Function Dispose(inputDeps As JobHandle) As JobHandle
  overload: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.Dispose*
  implements:
  - Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
  nameWithType.vb: NativeReferenceOfDisposable(Of T).Dispose(JobHandle)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.LowLevel.NativeReferenceOfDisposable(Of T).Dispose(Unity.Jobs.JobHandle)
- uid: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.IsCreated
  commentId: P:AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.IsCreated
  id: IsCreated
  parent: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1
  langs:
  - csharp
  - vb
  name: IsCreated
  nameWithType: NativeReferenceOfDisposable<T>.IsCreated
  fullName: AlgoSdk.LowLevel.NativeReferenceOfDisposable<T>.IsCreated
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.LowLevel/NativeReferenceOfDisposable.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: IsCreated
    path: ../CareBoo.AlgoSdk.LowLevel/NativeReferenceOfDisposable.cs
    startLine: 26
  assemblies:
  - CareBoo.AlgoSdk.LowLevel
  namespace: AlgoSdk.LowLevel
  syntax:
    content: public bool IsCreated { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCreated As Boolean
  overload: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.IsCreated*
  nameWithType.vb: NativeReferenceOfDisposable(Of T).IsCreated
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: AlgoSdk.LowLevel.NativeReferenceOfDisposable(Of T).IsCreated
- uid: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.Value
  commentId: P:AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.Value
  id: Value
  parent: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: NativeReferenceOfDisposable<T>.Value
  fullName: AlgoSdk.LowLevel.NativeReferenceOfDisposable<T>.Value
  type: Property
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.LowLevel/NativeReferenceOfDisposable.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Value
    path: ../CareBoo.AlgoSdk.LowLevel/NativeReferenceOfDisposable.cs
    startLine: 28
  assemblies:
  - CareBoo.AlgoSdk.LowLevel
  namespace: AlgoSdk.LowLevel
  syntax:
    content: public T Value { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public ReadOnly Property Value As T
  overload: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.Value*
  nameWithType.vb: NativeReferenceOfDisposable(Of T).Value
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: AlgoSdk.LowLevel.NativeReferenceOfDisposable(Of T).Value
- uid: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.AsReadOnly
  commentId: M:AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.AsReadOnly
  id: AsReadOnly
  parent: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1
  langs:
  - csharp
  - vb
  name: AsReadOnly()
  nameWithType: NativeReferenceOfDisposable<T>.AsReadOnly()
  fullName: AlgoSdk.LowLevel.NativeReferenceOfDisposable<T>.AsReadOnly()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.LowLevel/NativeReferenceOfDisposable.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: AsReadOnly
    path: ../CareBoo.AlgoSdk.LowLevel/NativeReferenceOfDisposable.cs
    startLine: 30
  assemblies:
  - CareBoo.AlgoSdk.LowLevel
  namespace: AlgoSdk.LowLevel
  syntax:
    content: public NativeReference<T>.ReadOnly AsReadOnly()
    return:
      type: Unity.Collections.NativeReference{{T}}.ReadOnly
    content.vb: Public Function AsReadOnly As NativeReference(Of T).ReadOnly
  overload: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.AsReadOnly*
  nameWithType.vb: NativeReferenceOfDisposable(Of T).AsReadOnly()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.LowLevel.NativeReferenceOfDisposable(Of T).AsReadOnly()
- uid: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.Dispose
  commentId: M:AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.Dispose
  id: Dispose
  parent: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: NativeReferenceOfDisposable<T>.Dispose()
  fullName: AlgoSdk.LowLevel.NativeReferenceOfDisposable<T>.Dispose()
  type: Method
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.LowLevel/NativeReferenceOfDisposable.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: Dispose
    path: ../CareBoo.AlgoSdk.LowLevel/NativeReferenceOfDisposable.cs
    startLine: 32
  assemblies:
  - CareBoo.AlgoSdk.LowLevel
  namespace: AlgoSdk.LowLevel
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.Dispose*
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: NativeReferenceOfDisposable(Of T).Dispose()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoSdk.LowLevel.NativeReferenceOfDisposable(Of T).Dispose()
- uid: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.op_Implicit(Unity.Collections.NativeReference{`0})~AlgoSdk.LowLevel.NativeReferenceOfDisposable{`0}
  commentId: M:AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.op_Implicit(Unity.Collections.NativeReference{`0})~AlgoSdk.LowLevel.NativeReferenceOfDisposable{`0}
  id: op_Implicit(Unity.Collections.NativeReference{`0})~AlgoSdk.LowLevel.NativeReferenceOfDisposable{`0}
  parent: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1
  langs:
  - csharp
  - vb
  name: Implicit(NativeReference<T> to NativeReferenceOfDisposable<T>)
  nameWithType: NativeReferenceOfDisposable<T>.Implicit(NativeReference<T> to NativeReferenceOfDisposable<T>)
  fullName: AlgoSdk.LowLevel.NativeReferenceOfDisposable<T>.Implicit(Unity.Collections.NativeReference<T> to AlgoSdk.LowLevel.NativeReferenceOfDisposable<T>)
  type: Operator
  source:
    remote:
      path: Packages/com.careboo.unity-algorand-sdk/CareBoo.AlgoSdk.LowLevel/NativeReferenceOfDisposable.cs
      branch: jasonboukheir/issue#33
      repo: git@github.com:CareBoo/unity-algorand-sdk.git
    id: op_Implicit
    path: ../CareBoo.AlgoSdk.LowLevel/NativeReferenceOfDisposable.cs
    startLine: 41
  assemblies:
  - CareBoo.AlgoSdk.LowLevel
  namespace: AlgoSdk.LowLevel
  syntax:
    content: public static implicit operator NativeReferenceOfDisposable<T>(NativeReference<T> reference)
    parameters:
    - id: reference
      type: Unity.Collections.NativeReference{{T}}
    return:
      type: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1
    content.vb: Public Shared Widening Operator CType(reference As NativeReference(Of T)) As NativeReferenceOfDisposable(Of T)
  overload: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.op_Implicit*
  nameWithType.vb: NativeReferenceOfDisposable(Of T).Widening(NativeReference(Of T) to NativeReferenceOfDisposable(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AlgoSdk.LowLevel.NativeReferenceOfDisposable(Of T).Widening(Unity.Collections.NativeReference(Of T) to AlgoSdk.LowLevel.NativeReferenceOfDisposable(Of T))
  name.vb: Widening(NativeReference(Of T) to NativeReferenceOfDisposable(Of T))
references:
- uid: AlgoSdk.LowLevel
  commentId: N:AlgoSdk.LowLevel
  name: AlgoSdk.LowLevel
  nameWithType: AlgoSdk.LowLevel
  fullName: AlgoSdk.LowLevel
- uid: Unity.Collections.INativeDisposable
  commentId: T:Unity.Collections.INativeDisposable
  parent: Unity.Collections
  name: INativeDisposable
  nameWithType: INativeDisposable
  fullName: Unity.Collections.INativeDisposable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Collections
  commentId: N:Unity.Collections
  name: Unity.Collections
  nameWithType: Unity.Collections
  fullName: Unity.Collections
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.#ctor*
  commentId: Overload:AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.#ctor
  name: NativeReferenceOfDisposable
  nameWithType: NativeReferenceOfDisposable<T>.NativeReferenceOfDisposable
  fullName: AlgoSdk.LowLevel.NativeReferenceOfDisposable<T>.NativeReferenceOfDisposable
  nameWithType.vb: NativeReferenceOfDisposable(Of T).NativeReferenceOfDisposable
  fullName.vb: AlgoSdk.LowLevel.NativeReferenceOfDisposable(Of T).NativeReferenceOfDisposable
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Unity.Collections.Allocator
  commentId: T:Unity.Collections.Allocator
  parent: Unity.Collections
  isExternal: true
  name: Allocator
  nameWithType: Allocator
  fullName: Unity.Collections.Allocator
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Unity.Collections.NativeReference{{T}}
  commentId: T:Unity.Collections.NativeReference{`0}
  parent: Unity.Collections
  definition: Unity.Collections.NativeReference`1
  name: NativeReference<T>
  nameWithType: NativeReference<T>
  fullName: Unity.Collections.NativeReference<T>
  nameWithType.vb: NativeReference(Of T)
  fullName.vb: Unity.Collections.NativeReference(Of T)
  name.vb: NativeReference(Of T)
  spec.csharp:
  - uid: Unity.Collections.NativeReference`1
    name: NativeReference
    nameWithType: NativeReference
    fullName: Unity.Collections.NativeReference
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Unity.Collections.NativeReference`1
    name: NativeReference
    nameWithType: NativeReference
    fullName: Unity.Collections.NativeReference
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Collections.NativeReference`1
  commentId: T:Unity.Collections.NativeReference`1
  name: NativeReference<T>
  nameWithType: NativeReference<T>
  fullName: Unity.Collections.NativeReference<T>
  nameWithType.vb: NativeReference(Of T)
  fullName.vb: Unity.Collections.NativeReference(Of T)
  name.vb: NativeReference(Of T)
  spec.csharp:
  - uid: Unity.Collections.NativeReference`1
    name: NativeReference
    nameWithType: NativeReference
    fullName: Unity.Collections.NativeReference
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Unity.Collections.NativeReference`1
    name: NativeReference
    nameWithType: NativeReference
    fullName: Unity.Collections.NativeReference
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.Dispose*
  commentId: Overload:AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.Dispose
  name: Dispose
  nameWithType: NativeReferenceOfDisposable<T>.Dispose
  fullName: AlgoSdk.LowLevel.NativeReferenceOfDisposable<T>.Dispose
  nameWithType.vb: NativeReferenceOfDisposable(Of T).Dispose
  fullName.vb: AlgoSdk.LowLevel.NativeReferenceOfDisposable(Of T).Dispose
- uid: Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
  commentId: M:Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
  parent: Unity.Collections.INativeDisposable
  isExternal: true
  name: Dispose(JobHandle)
  nameWithType: INativeDisposable.Dispose(JobHandle)
  fullName: Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
  spec.csharp:
  - uid: Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
    name: Dispose
    nameWithType: INativeDisposable.Dispose
    fullName: Unity.Collections.INativeDisposable.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: Unity.Jobs.JobHandle
    name: JobHandle
    nameWithType: JobHandle
    fullName: Unity.Jobs.JobHandle
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Unity.Collections.INativeDisposable.Dispose(Unity.Jobs.JobHandle)
    name: Dispose
    nameWithType: INativeDisposable.Dispose
    fullName: Unity.Collections.INativeDisposable.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: Unity.Jobs.JobHandle
    name: JobHandle
    nameWithType: JobHandle
    fullName: Unity.Jobs.JobHandle
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Jobs.JobHandle
  commentId: T:Unity.Jobs.JobHandle
  parent: Unity.Jobs
  isExternal: true
  name: JobHandle
  nameWithType: JobHandle
  fullName: Unity.Jobs.JobHandle
- uid: Unity.Jobs
  commentId: N:Unity.Jobs
  isExternal: true
  name: Unity.Jobs
  nameWithType: Unity.Jobs
  fullName: Unity.Jobs
- uid: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.IsCreated*
  commentId: Overload:AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.IsCreated
  name: IsCreated
  nameWithType: NativeReferenceOfDisposable<T>.IsCreated
  fullName: AlgoSdk.LowLevel.NativeReferenceOfDisposable<T>.IsCreated
  nameWithType.vb: NativeReferenceOfDisposable(Of T).IsCreated
  fullName.vb: AlgoSdk.LowLevel.NativeReferenceOfDisposable(Of T).IsCreated
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.Value*
  commentId: Overload:AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.Value
  name: Value
  nameWithType: NativeReferenceOfDisposable<T>.Value
  fullName: AlgoSdk.LowLevel.NativeReferenceOfDisposable<T>.Value
  nameWithType.vb: NativeReferenceOfDisposable(Of T).Value
  fullName.vb: AlgoSdk.LowLevel.NativeReferenceOfDisposable(Of T).Value
- uid: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.AsReadOnly*
  commentId: Overload:AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.AsReadOnly
  name: AsReadOnly
  nameWithType: NativeReferenceOfDisposable<T>.AsReadOnly
  fullName: AlgoSdk.LowLevel.NativeReferenceOfDisposable<T>.AsReadOnly
  nameWithType.vb: NativeReferenceOfDisposable(Of T).AsReadOnly
  fullName.vb: AlgoSdk.LowLevel.NativeReferenceOfDisposable(Of T).AsReadOnly
- uid: Unity.Collections.NativeReference{{T}}.ReadOnly
  commentId: T:Unity.Collections.NativeReference{`0}.ReadOnly
  parent: Unity.Collections
  definition: Unity.Collections.NativeReference`1.ReadOnly
  name: NativeReference.ReadOnly<>
  nameWithType: NativeReference.ReadOnly<>
  fullName: Unity.Collections.NativeReference.ReadOnly<>
  nameWithType.vb: NativeReference.ReadOnly(Of )
  fullName.vb: Unity.Collections.NativeReference.ReadOnly(Of )
  name.vb: NativeReference.ReadOnly(Of )
  spec.csharp:
  - uid: Unity.Collections.NativeReference`1.ReadOnly
    name: NativeReference.ReadOnly
    nameWithType: NativeReference.ReadOnly
    fullName: Unity.Collections.NativeReference.ReadOnly
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Unity.Collections.NativeReference`1.ReadOnly
    name: NativeReference.ReadOnly
    nameWithType: NativeReference.ReadOnly
    fullName: Unity.Collections.NativeReference.ReadOnly
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Unity.Collections.NativeReference`1.ReadOnly
  commentId: T:Unity.Collections.NativeReference`1.ReadOnly
  name: NativeReference.ReadOnly<>
  nameWithType: NativeReference.ReadOnly<>
  fullName: Unity.Collections.NativeReference.ReadOnly<>
  nameWithType.vb: NativeReference.ReadOnly(Of )
  fullName.vb: Unity.Collections.NativeReference.ReadOnly(Of )
  name.vb: NativeReference.ReadOnly(Of )
  spec.csharp:
  - uid: Unity.Collections.NativeReference`1.ReadOnly
    name: NativeReference.ReadOnly
    nameWithType: NativeReference.ReadOnly
    fullName: Unity.Collections.NativeReference.ReadOnly
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Unity.Collections.NativeReference`1.ReadOnly
    name: NativeReference.ReadOnly
    nameWithType: NativeReference.ReadOnly
    fullName: Unity.Collections.NativeReference.ReadOnly
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.op_Implicit*
  commentId: Overload:AlgoSdk.LowLevel.NativeReferenceOfDisposable`1.op_Implicit
  name: Implicit
  nameWithType: NativeReferenceOfDisposable<T>.Implicit
  fullName: AlgoSdk.LowLevel.NativeReferenceOfDisposable<T>.Implicit
  nameWithType.vb: NativeReferenceOfDisposable(Of T).Widening
  fullName.vb: AlgoSdk.LowLevel.NativeReferenceOfDisposable(Of T).Widening
  name.vb: Widening
- uid: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1
  commentId: T:AlgoSdk.LowLevel.NativeReferenceOfDisposable`1
  parent: AlgoSdk.LowLevel
  name: NativeReferenceOfDisposable<T>
  nameWithType: NativeReferenceOfDisposable<T>
  fullName: AlgoSdk.LowLevel.NativeReferenceOfDisposable<T>
  nameWithType.vb: NativeReferenceOfDisposable(Of T)
  fullName.vb: AlgoSdk.LowLevel.NativeReferenceOfDisposable(Of T)
  name.vb: NativeReferenceOfDisposable(Of T)
  spec.csharp:
  - uid: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1
    name: NativeReferenceOfDisposable
    nameWithType: NativeReferenceOfDisposable
    fullName: AlgoSdk.LowLevel.NativeReferenceOfDisposable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AlgoSdk.LowLevel.NativeReferenceOfDisposable`1
    name: NativeReferenceOfDisposable
    nameWithType: NativeReferenceOfDisposable
    fullName: AlgoSdk.LowLevel.NativeReferenceOfDisposable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
