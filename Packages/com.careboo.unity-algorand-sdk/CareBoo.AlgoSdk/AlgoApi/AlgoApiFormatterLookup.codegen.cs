//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AlgoSdk
{
    public sealed partial class AlgoApiFormatterLookup
    {
        private static void EnsureLookupInitialized()
        {
            AlgoSdk.AlgoApiFormatterLookup.InitLookup();
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.Account), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.Account>(new AlgoSdk.AlgoApiField<AlgoSdk.Account>.Map().Assign("address", (ref AlgoSdk.Account x) => ref x.Address).Assign("amount", (ref AlgoSdk.Account x) => ref x.Amount).Assign("amount-without-pending-rewards", (ref AlgoSdk.Account x) => ref x.AmountWithoutPendingRewards).Assign("apps-local-state", (ref AlgoSdk.Account x) => ref x.ApplicationsLocalState, AlgoSdk.MsgPack.ArrayComparer<AlgoSdk.ApplicationLocalState>.Instance).Assign("apps-total-extra-pages", (ref AlgoSdk.Account x) => ref x.ApplicationsTotalExtraPages).Assign("apps-total-schema", (ref AlgoSdk.Account x) => ref x.ApplicationsTotalSchema).Assign("assets", (ref AlgoSdk.Account x) => ref x.Assets, AlgoSdk.MsgPack.ArrayComparer<AlgoSdk.AssetHolding>.Instance).Assign("auth-addr", (ref AlgoSdk.Account x) => ref x.AuthAddress).Assign("created-apps", (ref AlgoSdk.Account x) => ref x.CreatedApplications, AlgoSdk.MsgPack.ArrayComparer<AlgoSdk.Application>.Instance).Assign("created-assets", (ref AlgoSdk.Account x) => ref x.CreatedAssets, AlgoSdk.MsgPack.ArrayComparer<AlgoSdk.Asset>.Instance).Assign("participation", (ref AlgoSdk.Account x) => ref x.Participation).Assign("pending-rewards", (ref AlgoSdk.Account x) => ref x.PendingRewards).Assign("reward-base", (ref AlgoSdk.Account x) => ref x.RewardBase).Assign("rewards", (ref AlgoSdk.Account x) => ref x.Rewards).Assign("round", (ref AlgoSdk.Account x) => ref x.Round).Assign("sig-type", (ref AlgoSdk.Account x) => ref x.SignatureType, AlgoSdk.MsgPack.SignatureTypeComparer.Instance).Assign("status", (ref AlgoSdk.Account x) => ref x.Status)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.AccountParticipation), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.AccountParticipation>(new AlgoSdk.AlgoApiField<AlgoSdk.AccountParticipation>.Map().Assign("selection-participation-key", (ref AlgoSdk.AccountParticipation x) => ref x.SelectionParticipationKey).Assign("vote-first-valid", (ref AlgoSdk.AccountParticipation x) => ref x.VoteFirstValid).Assign("vote-key-dilution", (ref AlgoSdk.AccountParticipation x) => ref x.VoteKeyDilution).Assign("vote-last-valid", (ref AlgoSdk.AccountParticipation x) => ref x.VoteLastValid).Assign("vote-participation-key", (ref AlgoSdk.AccountParticipation x) => ref x.VoteParticipationKey)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.AccountStateDelta), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.AccountStateDelta>(new AlgoSdk.AlgoApiField<AlgoSdk.AccountStateDelta>.Map().Assign("address", (ref AlgoSdk.AccountStateDelta x) => ref x.Address).Assign("delta", (ref AlgoSdk.AccountStateDelta x) => ref x.Delta, AlgoSdk.MsgPack.ArrayComparer<AlgoSdk.EvalDeltaKeyValue>.Instance)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.Application), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.Application>(new AlgoSdk.AlgoApiField<AlgoSdk.Application>.Map().Assign("id", (ref AlgoSdk.Application x) => ref x.Id).Assign("params", (ref AlgoSdk.Application x) => ref x.Params)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.ApplicationLocalState), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.ApplicationLocalState>(new AlgoSdk.AlgoApiField<AlgoSdk.ApplicationLocalState>.Map().Assign("id", (ref AlgoSdk.ApplicationLocalState x) => ref x.Id).Assign("key-value", (ref AlgoSdk.ApplicationLocalState x) => ref x.KeyValues, AlgoSdk.MsgPack.ArrayComparer<AlgoSdk.TealKeyValue>.Instance).Assign("schema", (ref AlgoSdk.ApplicationLocalState x) => ref x.Schema)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.ApplicationParams), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.ApplicationParams>(new AlgoSdk.AlgoApiField<AlgoSdk.ApplicationParams>.Map().Assign("approval-program", (ref AlgoSdk.ApplicationParams x) => ref x.ApprovalProgram, AlgoSdk.MsgPack.ArrayComparer<byte>.Instance).Assign("clear-state-program", (ref AlgoSdk.ApplicationParams x) => ref x.ClearStateProgram, AlgoSdk.MsgPack.ArrayComparer<byte>.Instance).Assign("creator", (ref AlgoSdk.ApplicationParams x) => ref x.Creator).Assign("extra-program-pages", (ref AlgoSdk.ApplicationParams x) => ref x.ExtraProgramPages).Assign("global-state", (ref AlgoSdk.ApplicationParams x) => ref x.GlobalState, AlgoSdk.MsgPack.ArrayComparer<AlgoSdk.TealKeyValue>.Instance).Assign("global-state-schema", (ref AlgoSdk.ApplicationParams x) => ref x.GlobalStateSchema).Assign("local-state-schema", (ref AlgoSdk.ApplicationParams x) => ref x.LocalStateSchema)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.ApplicationStateSchema), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.ApplicationStateSchema>(new AlgoSdk.AlgoApiField<AlgoSdk.ApplicationStateSchema>.Map().Assign("num-byte-slice", (ref AlgoSdk.ApplicationStateSchema x) => ref x.NumByteSlices).Assign("num-uint", (ref AlgoSdk.ApplicationStateSchema x) => ref x.NumUints)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.Asset), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.Asset>(new AlgoSdk.AlgoApiField<AlgoSdk.Asset>.Map().Assign("index", (ref AlgoSdk.Asset x) => ref x.Index).Assign("params", (ref AlgoSdk.Asset x) => ref x.Params)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.AssetHolding), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.AssetHolding>(new AlgoSdk.AlgoApiField<AlgoSdk.AssetHolding>.Map().Assign("amount", (ref AlgoSdk.AssetHolding x) => ref x.Amount).Assign("asset-id", (ref AlgoSdk.AssetHolding x) => ref x.AssetId).Assign("creator", (ref AlgoSdk.AssetHolding x) => ref x.Creator).Assign("is-frozen", (ref AlgoSdk.AssetHolding x) => ref x.IsFrozen)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.AssetParams), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.AssetParams>(new AlgoSdk.AlgoApiField<AlgoSdk.AssetParams>.Map().Assign("clawback", (ref AlgoSdk.AssetParams x) => ref x.Clawback).Assign("creator", (ref AlgoSdk.AssetParams x) => ref x.Creator).Assign("decimals", (ref AlgoSdk.AssetParams x) => ref x.Decimals).Assign("default-frozen", (ref AlgoSdk.AssetParams x) => ref x.DefaultFrozen).Assign("freeze", (ref AlgoSdk.AssetParams x) => ref x.Freeze).Assign("manager", (ref AlgoSdk.AssetParams x) => ref x.Manager).Assign("metadata-hash", (ref AlgoSdk.AssetParams x) => ref x.MetadataHash).Assign("name", (ref AlgoSdk.AssetParams x) => ref x.Name).Assign("reserve", (ref AlgoSdk.AssetParams x) => ref x.Reserve).Assign("total", (ref AlgoSdk.AssetParams x) => ref x.Total).Assign("unit-name", (ref AlgoSdk.AssetParams x) => ref x.UnitName).Assign("url", (ref AlgoSdk.AssetParams x) => ref x.Url)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.Block), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.Block>(new AlgoSdk.AlgoApiField<AlgoSdk.Block>.Map().Assign("block", (ref AlgoSdk.Block x) => ref x.HeaderData)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.BlockTransaction), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.BlockTransaction>(new AlgoSdk.AlgoApiField<AlgoSdk.BlockTransaction>.Map().Assign("txn", (ref AlgoSdk.BlockTransaction x) => ref x.Transaction).Assign("sig", (ref AlgoSdk.BlockTransaction x) => ref x.Sig).Assign("msig", (ref AlgoSdk.BlockTransaction x) => ref x.MultiSig).Assign("lsig", (ref AlgoSdk.BlockTransaction x) => ref x.LogicSig).Assign("hgi", (ref AlgoSdk.BlockTransaction x) => ref x.Hgi).Assign("rr", (ref AlgoSdk.BlockTransaction x) => ref x.Rr).Assign("rs", (ref AlgoSdk.BlockTransaction x) => ref x.Rs)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.BuildVersion), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.BuildVersion>(new AlgoSdk.AlgoApiField<AlgoSdk.BuildVersion>.Map().Assign("branch", (ref AlgoSdk.BuildVersion x) => ref x.Branch).Assign("build_number", (ref AlgoSdk.BuildVersion x) => ref x.BuildNumber).Assign("channel", (ref AlgoSdk.BuildVersion x) => ref x.Channel).Assign("commit_hash", (ref AlgoSdk.BuildVersion x) => ref x.CommitHash).Assign("major", (ref AlgoSdk.BuildVersion x) => ref x.Major).Assign("minor", (ref AlgoSdk.BuildVersion x) => ref x.Minor)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.CatchupMessage), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.CatchupMessage>(new AlgoSdk.AlgoApiField<AlgoSdk.CatchupMessage>.Map().Assign("catchup-message", (ref AlgoSdk.CatchupMessage x) => ref x.Message)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.DryrunRequest), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.DryrunRequest>(new AlgoSdk.AlgoApiField<AlgoSdk.DryrunRequest>.Map().Assign("accounts", (ref AlgoSdk.DryrunRequest x) => ref x.Accounts, AlgoSdk.MsgPack.ArrayComparer<AlgoSdk.Account>.Instance).Assign("apps", (ref AlgoSdk.DryrunRequest x) => ref x.Applications, AlgoSdk.MsgPack.ArrayComparer<AlgoSdk.Application>.Instance).Assign("latest-timestamp", (ref AlgoSdk.DryrunRequest x) => ref x.LatestTimestamp).Assign("protocol-version", (ref AlgoSdk.DryrunRequest x) => ref x.ProtocolVersion).Assign("round", (ref AlgoSdk.DryrunRequest x) => ref x.Round).Assign("sources", (ref AlgoSdk.DryrunRequest x) => ref x.Sources, AlgoSdk.MsgPack.ArrayComparer<AlgoSdk.DryrunSource>.Instance).Assign("txns", (ref AlgoSdk.DryrunRequest x) => ref x.Transactions, AlgoSdk.MsgPack.ArrayComparer<AlgoSdk.RawTransaction>.Instance)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.DryrunResults), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.DryrunResults>(new AlgoSdk.AlgoApiField<AlgoSdk.DryrunResults>.Map().Assign("error", (ref AlgoSdk.DryrunResults x) => ref x.Error).Assign("protocol-version", (ref AlgoSdk.DryrunResults x) => ref x.ProtocolVersion).Assign("txns", (ref AlgoSdk.DryrunResults x) => ref x.Txns, AlgoSdk.MsgPack.ArrayComparer<AlgoSdk.DryrunTxnResult>.Instance)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.DryrunSource), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.DryrunSource>(new AlgoSdk.AlgoApiField<AlgoSdk.DryrunSource>.Map().Assign("app-index", (ref AlgoSdk.DryrunSource x) => ref x.AppIndex).Assign("field-name", (ref AlgoSdk.DryrunSource x) => ref x.FieldName).Assign("source", (ref AlgoSdk.DryrunSource x) => ref x.Source).Assign("txn-index", (ref AlgoSdk.DryrunSource x) => ref x.TransactionIndex)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.DryrunState), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.DryrunState>(new AlgoSdk.AlgoApiField<AlgoSdk.DryrunState>.Map().Assign("error", (ref AlgoSdk.DryrunState x) => ref x.Error).Assign("line", (ref AlgoSdk.DryrunState x) => ref x.Line).Assign("pc", (ref AlgoSdk.DryrunState x) => ref x.ProgramCounter).Assign("scratch", (ref AlgoSdk.DryrunState x) => ref x.Scratch, AlgoSdk.MsgPack.ArrayComparer<AlgoSdk.TealValue>.Instance).Assign("stack", (ref AlgoSdk.DryrunState x) => ref x.Stack, AlgoSdk.MsgPack.ArrayComparer<AlgoSdk.TealValue>.Instance)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.DryrunTxnResult), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.DryrunTxnResult>(new AlgoSdk.AlgoApiField<AlgoSdk.DryrunTxnResult>.Map().Assign("app-call-messages", (ref AlgoSdk.DryrunTxnResult x) => ref x.AppCallMessages, AlgoSdk.MsgPack.ArrayComparer<Unity.Collections.FixedString128Bytes>.Instance).Assign("app-call-trace", (ref AlgoSdk.DryrunTxnResult x) => ref x.AppCallTrace, AlgoSdk.MsgPack.ArrayComparer<AlgoSdk.DryrunState>.Instance).Assign("disassembly", (ref AlgoSdk.DryrunTxnResult x) => ref x.Disassembly, AlgoSdk.MsgPack.ArrayComparer<Unity.Collections.FixedString128Bytes>.Instance).Assign("global-delta", (ref AlgoSdk.DryrunTxnResult x) => ref x.GlobalDelta, AlgoSdk.MsgPack.ArrayComparer<AlgoSdk.EvalDeltaKeyValue>.Instance).Assign("local-deltas", (ref AlgoSdk.DryrunTxnResult x) => ref x.LocalDeltas, AlgoSdk.MsgPack.ArrayComparer<AlgoSdk.AccountStateDelta>.Instance).Assign("logic-sig-messages", (ref AlgoSdk.DryrunTxnResult x) => ref x.LogicSigMessages, AlgoSdk.MsgPack.ArrayComparer<Unity.Collections.FixedString128Bytes>.Instance).Assign("logic-sig-trace", (ref AlgoSdk.DryrunTxnResult x) => ref x.LogicSigTrace, AlgoSdk.MsgPack.ArrayComparer<AlgoSdk.DryrunState>.Instance)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.ErrorResponse), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.ErrorResponse>(new AlgoSdk.AlgoApiField<AlgoSdk.ErrorResponse>.Map().Assign("data", (ref AlgoSdk.ErrorResponse x) => ref x.Data).Assign("message", (ref AlgoSdk.ErrorResponse x) => ref x.Message)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.EvalDelta), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.EvalDelta>(new AlgoSdk.AlgoApiField<AlgoSdk.EvalDelta>.Map().Assign("action", (ref AlgoSdk.EvalDelta x) => ref x.Action, AlgoSdk.MsgPack.EvalDeltaActionComparer.Instance).Assign("bytes", (ref AlgoSdk.EvalDelta x) => ref x.Bytes).Assign("uint", (ref AlgoSdk.EvalDelta x) => ref x.Uint)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.EvalDeltaKeyValue), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.EvalDeltaKeyValue>(new AlgoSdk.AlgoApiField<AlgoSdk.EvalDeltaKeyValue>.Map().Assign("key", (ref AlgoSdk.EvalDeltaKeyValue x) => ref x.Key).Assign("value", (ref AlgoSdk.EvalDeltaKeyValue x) => ref x.Value)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.Block.Header), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.Block.Header>(new AlgoSdk.AlgoApiField<AlgoSdk.Block.Header>.Map().Assign("earn", (ref AlgoSdk.Block.Header x) => ref x.Earn).Assign("fees", (ref AlgoSdk.Block.Header x) => ref x.Fees).Assign("frac", (ref AlgoSdk.Block.Header x) => ref x.Fraction).Assign("gen", (ref AlgoSdk.Block.Header x) => ref x.GenesisId).Assign("gh", (ref AlgoSdk.Block.Header x) => ref x.GenesisHash).Assign("prev", (ref AlgoSdk.Block.Header x) => ref x.PreviousBlock).Assign("proto", (ref AlgoSdk.Block.Header x) => ref x.Proto).Assign("rate", (ref AlgoSdk.Block.Header x) => ref x.Rate).Assign("rnd", (ref AlgoSdk.Block.Header x) => ref x.Round).Assign("rwcalr", (ref AlgoSdk.Block.Header x) => ref x.RwCalr).Assign("rwd", (ref AlgoSdk.Block.Header x) => ref x.Rwd).Assign("seed", (ref AlgoSdk.Block.Header x) => ref x.Seed).Assign("tc", (ref AlgoSdk.Block.Header x) => ref x.Tc).Assign("ts", (ref AlgoSdk.Block.Header x) => ref x.Ts).Assign("txn", (ref AlgoSdk.Block.Header x) => ref x.Txn).Assign("txns", (ref AlgoSdk.Block.Header x) => ref x.Txns, AlgoSdk.MsgPack.ArrayComparer<AlgoSdk.BlockTransaction>.Instance)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.LedgerSupply), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.LedgerSupply>(new AlgoSdk.AlgoApiField<AlgoSdk.LedgerSupply>.Map().Assign("current_round", (ref AlgoSdk.LedgerSupply x) => ref x.Round).Assign("online-money", (ref AlgoSdk.LedgerSupply x) => ref x.OnlineMoney).Assign("total-money", (ref AlgoSdk.LedgerSupply x) => ref x.TotalMoney)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.MerkleProof), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.MerkleProof>(new AlgoSdk.AlgoApiField<AlgoSdk.MerkleProof>.Map().Assign("idx", (ref AlgoSdk.MerkleProof x) => ref x.TransactionIndex).Assign("proof", (ref AlgoSdk.MerkleProof x) => ref x.Proof).Assign("stibhash", (ref AlgoSdk.MerkleProof x) => ref x.SignedTransactionHash)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.PendingTransaction), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.PendingTransaction>(new AlgoSdk.AlgoApiField<AlgoSdk.PendingTransaction>.Map().Assign("application-index", (ref AlgoSdk.PendingTransaction x) => ref x.ApplicationIndex).Assign("asset-closing-amount", (ref AlgoSdk.PendingTransaction x) => ref x.AssetClosingAmount).Assign("asset-index", (ref AlgoSdk.PendingTransaction x) => ref x.AssetIndex).Assign("close-rewards", (ref AlgoSdk.PendingTransaction x) => ref x.CloseRewards).Assign("closing-amount", (ref AlgoSdk.PendingTransaction x) => ref x.ClosingAmount).Assign("confirmed-round", (ref AlgoSdk.PendingTransaction x) => ref x.ConfirmedRound).Assign("global-state-delta", (ref AlgoSdk.PendingTransaction x) => ref x.GlobalStateDelta, AlgoSdk.MsgPack.ArrayComparer<AlgoSdk.EvalDeltaKeyValue>.Instance).Assign("local-state-delta", (ref AlgoSdk.PendingTransaction x) => ref x.LocalStateDelta, AlgoSdk.MsgPack.ArrayComparer<AlgoSdk.AccountStateDelta>.Instance).Assign("pool-error", (ref AlgoSdk.PendingTransaction x) => ref x.PoolError).Assign("receiver-rewards", (ref AlgoSdk.PendingTransaction x) => ref x.ReceiverRewards).Assign("sender-rewards", (ref AlgoSdk.PendingTransaction x) => ref x.SenderRewards).Assign("txn", (ref AlgoSdk.PendingTransaction x) => ref x.Transaction)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.PendingTransactions), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.PendingTransactions>(new AlgoSdk.AlgoApiField<AlgoSdk.PendingTransactions>.Map().Assign("top-transaction", (ref AlgoSdk.PendingTransactions x) => ref x.TopTransactions, AlgoSdk.MsgPack.ArrayComparer<AlgoSdk.PendingTransaction>.Instance).Assign("total-transactions", (ref AlgoSdk.PendingTransactions x) => ref x.TotalTransactions)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.RawSignedTransaction), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.RawSignedTransaction>(new AlgoSdk.AlgoApiField<AlgoSdk.RawSignedTransaction>.Map().Assign("txn", (ref AlgoSdk.RawSignedTransaction x) => ref x.Transaction).Assign("sig", (ref AlgoSdk.RawSignedTransaction x) => ref x.Sig).Assign("msig", (ref AlgoSdk.RawSignedTransaction x) => ref x.MultiSig).Assign("lsig", (ref AlgoSdk.RawSignedTransaction x) => ref x.LogicSig)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.RawTransaction), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.RawTransaction>(new AlgoSdk.AlgoApiField<AlgoSdk.RawTransaction>.Map().Assign("fee", (ref AlgoSdk.RawTransaction x) => ref x.Fee).Assign("fv", (ref AlgoSdk.RawTransaction x) => ref x.FirstValidRound).Assign("gh", (ref AlgoSdk.RawTransaction x) => ref x.GenesisHash).Assign("lv", (ref AlgoSdk.RawTransaction x) => ref x.LastValidRound).Assign("snd", (ref AlgoSdk.RawTransaction x) => ref x.Sender).Assign("type", (ref AlgoSdk.RawTransaction x) => ref x.TransactionType, AlgoSdk.MsgPack.TransactionTypeComparer.Instance).Assign("gen", (ref AlgoSdk.RawTransaction x) => ref x.GenesisId).Assign("grp", (ref AlgoSdk.RawTransaction x) => ref x.Group).Assign("lx", (ref AlgoSdk.RawTransaction x) => ref x.Lease).Assign("note", (ref AlgoSdk.RawTransaction x) => ref x.Note, AlgoSdk.MsgPack.ArrayComparer<byte>.Instance).Assign("rekey", (ref AlgoSdk.RawTransaction x) => ref x.RekeyTo).Assign("rcv", (ref AlgoSdk.RawTransaction x) => ref x.Receiver).Assign("amt", (ref AlgoSdk.RawTransaction x) => ref x.Amount).Assign("close", (ref AlgoSdk.RawTransaction x) => ref x.CloseRemainderTo).Assign("votekey", (ref AlgoSdk.RawTransaction x) => ref x.VotePk).Assign("selkey", (ref AlgoSdk.RawTransaction x) => ref x.SelectionPk).Assign("votefst", (ref AlgoSdk.RawTransaction x) => ref x.VoteFirst).Assign("votelst", (ref AlgoSdk.RawTransaction x) => ref x.VoteLast).Assign("votekd", (ref AlgoSdk.RawTransaction x) => ref x.VoteKeyDilution).Assign("nonpart", (ref AlgoSdk.RawTransaction x) => ref x.NonParticipation).Assign("caid", (ref AlgoSdk.RawTransaction x) => ref x.ConfigAsset).Assign("apar", (ref AlgoSdk.RawTransaction x) => ref x.AssetParams).Assign("xaid", (ref AlgoSdk.RawTransaction x) => ref x.XferAsset).Assign("aamt", (ref AlgoSdk.RawTransaction x) => ref x.AssetAmount).Assign("asnd", (ref AlgoSdk.RawTransaction x) => ref x.AssetSender).Assign("arcv", (ref AlgoSdk.RawTransaction x) => ref x.AssetReceiver).Assign("aclose", (ref AlgoSdk.RawTransaction x) => ref x.AssetCloseTo).Assign("fadd", (ref AlgoSdk.RawTransaction x) => ref x.FreezeAccount).Assign("faid", (ref AlgoSdk.RawTransaction x) => ref x.FreezeAsset).Assign("afrz", (ref AlgoSdk.RawTransaction x) => ref x.AssetFrozen).Assign("apid", (ref AlgoSdk.RawTransaction x) => ref x.ApplicationId).Assign("apan", (ref AlgoSdk.RawTransaction x) => ref x.OnComplete).Assign("apat", (ref AlgoSdk.RawTransaction x) => ref x.Accounts, AlgoSdk.MsgPack.ArrayComparer<AlgoSdk.Address>.Instance).Assign("apap", (ref AlgoSdk.RawTransaction x) => ref x.ApprovalProgram, AlgoSdk.MsgPack.ArrayComparer<byte>.Instance).Assign("apaa", (ref AlgoSdk.RawTransaction x) => ref x.AppArguments, AlgoSdk.MsgPack.ArrayComparer<byte>.Instance).Assign("apsu", (ref AlgoSdk.RawTransaction x) => ref x.ClearStateProgram, AlgoSdk.MsgPack.ArrayComparer<byte>.Instance).Assign("apfa", (ref AlgoSdk.RawTransaction x) => ref x.ForeignApps, AlgoSdk.MsgPack.ArrayComparer<AlgoSdk.Address>.Instance).Assign("apas", (ref AlgoSdk.RawTransaction x) => ref x.ForeignAssets, AlgoSdk.MsgPack.ArrayComparer<AlgoSdk.Address>.Instance).Assign("apgs", (ref AlgoSdk.RawTransaction x) => ref x.GlobalStateSchema).Assign("apls", (ref AlgoSdk.RawTransaction x) => ref x.LocalStateSchema).Assign("apep", (ref AlgoSdk.RawTransaction x) => ref x.ExtraProgramPages)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.Status), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.Status>(new AlgoSdk.AlgoApiField<AlgoSdk.Status>.Map().Assign("catchpoint", (ref AlgoSdk.Status x) => ref x.Catchpoint).Assign("catchpoint-acquired-blocks", (ref AlgoSdk.Status x) => ref x.CatchpointAcquiredBlocks).Assign("catchpoint-processed-accounts", (ref AlgoSdk.Status x) => ref x.CatchpointProcessedAmounts).Assign("catchpoint-total-accounts", (ref AlgoSdk.Status x) => ref x.CatchpointTotalAccounts).Assign("catchpoint-total-blocks", (ref AlgoSdk.Status x) => ref x.CatchpointTotalBlocks).Assign("catchpoint-verified-accounts", (ref AlgoSdk.Status x) => ref x.CatchpointVerifiedAccounts).Assign("catchup-time", (ref AlgoSdk.Status x) => ref x.CatchupTime).Assign("last-catchpoint", (ref AlgoSdk.Status x) => ref x.LastCatchpoint).Assign("last-round", (ref AlgoSdk.Status x) => ref x.LastRound).Assign("last-version", (ref AlgoSdk.Status x) => ref x.LastVersion).Assign("next-version", (ref AlgoSdk.Status x) => ref x.NextVersion).Assign("next-version-round", (ref AlgoSdk.Status x) => ref x.NextVersionRound).Assign("next-version-supported", (ref AlgoSdk.Status x) => ref x.NextVersionSupported).Assign("stopped-at-unsupported-round", (ref AlgoSdk.Status x) => ref x.StoppedAtUnsupportedRound).Assign("time-since-last-round", (ref AlgoSdk.Status x) => ref x.TimeSinceLastRound)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.TealCompilationResult), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.TealCompilationResult>(new AlgoSdk.AlgoApiField<AlgoSdk.TealCompilationResult>.Map().Assign("hash", (ref AlgoSdk.TealCompilationResult x) => ref x.Hash).Assign("result", (ref AlgoSdk.TealCompilationResult x) => ref x.BytesBase64)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.TealKeyValue), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.TealKeyValue>(new AlgoSdk.AlgoApiField<AlgoSdk.TealKeyValue>.Map().Assign("key", (ref AlgoSdk.TealKeyValue x) => ref x.Key).Assign("value", (ref AlgoSdk.TealKeyValue x) => ref x.Value)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.TransactionParams), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.TransactionParams>(new AlgoSdk.AlgoApiField<AlgoSdk.TransactionParams>.Map().Assign("consensus-version", (ref AlgoSdk.TransactionParams x) => ref x.ConsensusVersion).Assign("fee", (ref AlgoSdk.TransactionParams x) => ref x.Fee).Assign("genesis-hash", (ref AlgoSdk.TransactionParams x) => ref x.GenesisHash).Assign("genesis-id", (ref AlgoSdk.TransactionParams x) => ref x.GenesisId).Assign("last-round", (ref AlgoSdk.TransactionParams x) => ref x.LastRound).Assign("min-fee", (ref AlgoSdk.TransactionParams x) => ref x.MinFee)));
            AlgoSdk.AlgoApiFormatterLookup.lookup.Add(typeof(AlgoSdk.Version), new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.Version>(new AlgoSdk.AlgoApiField<AlgoSdk.Version>.Map().Assign("build", (ref AlgoSdk.Version x) => ref x.Build).Assign("genesis_hash_b64", (ref AlgoSdk.Version x) => ref x.GenesisHashBase64).Assign("genesis_id", (ref AlgoSdk.Version x) => ref x.GenesisId).Assign("versions", (ref AlgoSdk.Version x) => ref x.Versions, AlgoSdk.MsgPack.ArrayComparer<Unity.Collections.FixedString32Bytes>.Instance)));
        }
    }
}
