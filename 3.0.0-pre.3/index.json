{
  "api/AlgoSdk.Abi.AbiAddress.html": {
    "href": "api/AlgoSdk.Abi.AbiAddress.html",
    "title": "Struct AbiAddress | Unity Algorand SDK",
    "keywords": "Struct AbiAddress Stores data that can be converted to an address or an account reference in an ABI method call. Implements IAbiValue Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public struct AbiAddress : IAbiValue Constructors AbiAddress(Address) Declaration public AbiAddress(Address value) Parameters Type Name Description Address value Methods Encode(AbiType, AbiReferences, Allocator) Encode this value given a spec defined from an AbiType . Declaration public EncodedAbiArg Encode(AbiType type, AbiReferences references, Allocator allocator) Parameters Type Name Description AbiType type The type of the argument that the ABI is expecting. AbiReferences references Stores account, application, and asset references that are intended to be included in Accounts , ForeignApps , and ForeignAssets arguments. Allocator allocator The memory allocator to use. Returns Type Description EncodedAbiArg An EncodedAbiArg . Length(AbiType) Returns the length of the result of encoding this value as AbiType . Declaration public int Length(AbiType type) Parameters Type Name Description AbiType type The type to encode this value. Returns Type Description Int32 The length in bytes of the encoded value. Implements IAbiValue"
  },
  "api/AlgoSdk.Abi.AbiReferences.html": {
    "href": "api/AlgoSdk.Abi.AbiReferences.html",
    "title": "Struct AbiReferences | Unity Algorand SDK",
    "keywords": "Struct AbiReferences Stores and encodes references to foreign accounts, apps, and assets when generating an ABI Method Call. Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public struct AbiReferences : INativeDisposable Constructors AbiReferences(Address, AppIndex, Allocator) Declaration public AbiReferences(Address sender, AppIndex appId, Allocator allocator) Parameters Type Name Description Address sender AppIndex appId Allocator allocator AbiReferences(Allocator) Declaration public AbiReferences(Allocator allocator) Parameters Type Name Description Allocator allocator Methods Dispose() Declaration public void Dispose() Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle Encode(Address) Get the index of the given account and store it within this struct. Declaration public byte Encode(Address value) Parameters Type Name Description Address value The address of the account Returns Type Description Byte An index of the account in the accounts section of the AppCallTxn. Encode(UInt64, AbiReferenceType) Get the index of the given asset or application and store it within this struct. Declaration public byte Encode(ulong value, AbiReferenceType referenceType) Parameters Type Name Description UInt64 value The index of an asset or application. AbiReferenceType referenceType Is this an asset or application reference? Returns Type Description Byte The index of the given asset or application. Exceptions Type Condition NotSupportedException The given referenceType is not supported. GetForeignAccounts() Get an array of the referenced accounts to be used as the Accounts . Declaration public Address[] GetForeignAccounts() Returns Type Description Address [] An array of account addresses. GetForeignApps() Get an array of the referenced apps to be used as the ForeignApps . Declaration public ulong[] GetForeignApps() Returns Type Description UInt64 [] An array of app indices. GetForeignAssets() Get an array of the referenced assets to be used as the ForeignAssets . Declaration public ulong[] GetForeignAssets() Returns Type Description UInt64 [] An array of asset indices."
  },
  "api/AlgoSdk.Abi.AbiTransactionType.html": {
    "href": "api/AlgoSdk.Abi.AbiTransactionType.html",
    "title": "Enum AbiTransactionType | Unity Algorand SDK",
    "keywords": "Enum AbiTransactionType Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public enum AbiTransactionType : byte Fields Name Description acfg An asset configure transaction. afrz An asset freeze transaction. appl An applicatiopn call transaction. axfer An asset transfer transactions. keyreg A key-registration transaction. None pay A payment transaction. txn Any transaction type."
  },
  "api/AlgoSdk.Abi.AbiTransactionTypeExtensions.html": {
    "href": "api/AlgoSdk.Abi.AbiTransactionTypeExtensions.html",
    "title": "Class AbiTransactionTypeExtensions | Unity Algorand SDK",
    "keywords": "Class AbiTransactionTypeExtensions Inheritance Object AbiTransactionTypeExtensions Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public static class AbiTransactionTypeExtensions Methods Equals(AbiTransactionType, TransactionType) Declaration public static bool Equals(this AbiTransactionType abiType, TransactionType txnType) Parameters Type Name Description AbiTransactionType abiType TransactionType txnType Returns Type Description Boolean Parse(String) Declaration public static AbiTransactionType Parse(string type) Parameters Type Name Description String type Returns Type Description AbiTransactionType"
  },
  "api/AlgoSdk.Abi.AbiType.Formatter.html": {
    "href": "api/AlgoSdk.Abi.AbiType.Formatter.html",
    "title": "Struct AbiType.Formatter | Unity Algorand SDK",
    "keywords": "Struct AbiType.Formatter Implements IAlgoApiFormatter < AbiType > Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public struct Formatter : IAlgoApiFormatter<AbiType> Methods Deserialize(ref JsonReader) Declaration public AbiType Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description AbiType Deserialize(ref MessagePackReader) Declaration public AbiType Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description AbiType Serialize(ref JsonWriter, AbiType) Declaration public void Serialize(ref JsonWriter writer, AbiType value) Parameters Type Name Description JsonWriter writer AbiType value Serialize(ref MessagePackWriter, AbiType) Declaration public void Serialize(ref MessagePackWriter writer, AbiType value) Parameters Type Name Description MessagePackWriter writer AbiType value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Abi.AbiType.html": {
    "href": "api/AlgoSdk.Abi.AbiType.html",
    "title": "Struct AbiType | Unity Algorand SDK",
    "keywords": "Struct AbiType The type of an ABI value. Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public struct AbiType : IEquatable<AbiType> Properties AccountReference Represents an \"account\". Declaration public static AbiType AccountReference { get; } Property Value Type Description AbiType Address Represents an \"address\". Declaration public static AbiType Address { get; } Property Value Type Description AbiType ApplicationReference Represents an \"application\". Declaration public static AbiType ApplicationReference { get; } Property Value Type Description AbiType ArrayLength The length of the array if this is fixed, undefined otherwise. Declaration public int ArrayLength { get; } Property Value Type Description Int32 AssetReference Represents an \"asset\". Declaration public static AbiType AssetReference { get; } Property Value Type Description AbiType Boolean Represents a \"bool\". Declaration public static AbiType Boolean { get; } Property Value Type Description AbiType Byte Represents a \"byte\". Declaration public static AbiType Byte { get; } Property Value Type Description AbiType ElementType The element type if this is an array, undefined otherwise. Declaration public AbiType ElementType { get; } Property Value Type Description AbiType IsFixedArray true if this is a fixed array (has a fixed number of elements). Declaration public bool IsFixedArray { get; } Property Value Type Description Boolean IsReference true if this represents a reference to an account, application, or asset in other parts of the transaction. Declaration public bool IsReference { get; } Property Value Type Description Boolean IsStatic Is the type static or dynamic length? Declaration public bool IsStatic { get; } Property Value Type Description Boolean IsTxn true if this type represents a reference to a transaction that is previously set in the Atomic Transaction Group. Declaration public bool IsTxn { get; } Property Value Type Description Boolean M Represents the \"M\" in \"ufixed{N}x{M}\" Declaration public int M { get; } Property Value Type Description Int32 N Represents the \"N\" in \"uint{N}\", \"ufixed{N}x{M}\", or \"{type}[N]\" Declaration public int N { get; } Property Value Type Description Int32 Name Name of the ABI Type. See this list of possible ABI types . Declaration public string Name { get; } Property Value Type Description String NestedTypes Represents the Element type of an array, or the list of types in a tuple. Declaration public AbiType[] NestedTypes { get; } Property Value Type Description AbiType [] ReferenceType If IsReference , then this represents the type of the reference. Declaration public AbiReferenceType ReferenceType { get; } Property Value Type Description AbiReferenceType StaticLength The length of this type in bytes if it's static, otherwise undefined. Declaration public int StaticLength { get; } Property Value Type Description Int32 String Represents a \"string\". Declaration public static AbiType String { get; } Property Value Type Description AbiType TransactionType If IsTxn , then this represents the type of the transaction. Declaration public AbiTransactionType TransactionType { get; } Property Value Type Description AbiTransactionType ValueType The type of the value this ABI will encode. Used to determine how this type is represented. Declaration public AbiValueType ValueType { get; } Property Value Type Description AbiValueType Methods Equals(AbiType) Declaration public bool Equals(AbiType other) Parameters Type Name Description AbiType other Returns Type Description Boolean FixedArray(AbiType, Int32) Represents a \"{type}[N]\" (fixed array). Declaration public static AbiType FixedArray(AbiType elementType, int length) Parameters Type Name Description AbiType elementType The type of the elements in this array. Int32 length The length of this array. Must be larger than 0. Returns Type Description AbiType Exceptions Type Condition ArgumentOutOfRangeException thrown when length is negative. Parse(String) Parse a type string into an AbiType . Declaration public static AbiType Parse(string type) Parameters Type Name Description String type The typename to parse. Returns Type Description AbiType Exceptions Type Condition ArgumentException Thrown when the given type cannot be parsed. ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Transaction(AbiTransactionType) Represents a Transaction type. Declaration public static AbiType Transaction(AbiTransactionType txnType) Parameters Type Name Description AbiTransactionType txnType The type of the transaction. Returns Type Description AbiType Exceptions Type Condition ArgumentOutOfRangeException Thrown when the given transaction type is None . TryParse(String, out AbiType) Try parsing a type string into an AbiType . Declaration public static bool TryParse(string type, out AbiType abiType) Parameters Type Name Description String type The typename to parse. AbiType abiType The returned AbiType if the typename was parsed. Returns Type Description Boolean true if the typename could be parsed, false otherwise. Tuple(AbiType[]) Represents a \"({T1},{T2},...,{TN})\" (tuple). Declaration public static AbiType Tuple(AbiType[] nestedTypes) Parameters Type Name Description AbiType [] nestedTypes The types that make up this tuple. Returns Type Description AbiType UFixedNxM(Int32, Int32) Represents an \"ufixed{N}x{M}\". Declaration public static AbiType UFixedNxM(int n, int m) Parameters Type Name Description Int32 n The number of bits in this ufixed. Int32 m The precision of this ufixed (number of digits after the decimal). Returns Type Description AbiType Exceptions Type Condition ArgumentException Thrown when m is not in the range (0, 160]. UIntN(Int32) Represents an \"uint{N}\". Declaration public static AbiType UIntN(int n) Parameters Type Name Description Int32 n The number of bits in this uint. Returns Type Description AbiType Exceptions Type Condition ArgumentException Thrown when n is not a multiple of 8, or in the range [8, 512]. VariableArray(AbiType) Represents a \"{type}[]\" (variable array). Declaration public static AbiType VariableArray(AbiType elementType) Parameters Type Name Description AbiType elementType The type of the elements in this array. Returns Type Description AbiType"
  },
  "api/AlgoSdk.Abi.AbiType.Patterns.html": {
    "href": "api/AlgoSdk.Abi.AbiType.Patterns.html",
    "title": "Class AbiType.Patterns | Unity Algorand SDK",
    "keywords": "Class AbiType.Patterns Regex patterns used for parsing type names. Inheritance Object AbiType.Patterns Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public static class Patterns Fields AnyType Declaration public const string AnyType = \"[a-z0-9,\\\\[\\\\]()]+\" Field Value Type Description String Array Declaration public static readonly Regex Array Field Value Type Description Regex Tuple Declaration public static readonly Regex Tuple Field Value Type Description Regex UFixedNxM Declaration public static readonly Regex UFixedNxM Field Value Type Description Regex UIntN Declaration public static readonly Regex UIntN Field Value Type Description Regex"
  },
  "api/AlgoSdk.Abi.AbiValueType.html": {
    "href": "api/AlgoSdk.Abi.AbiValueType.html",
    "title": "Enum AbiValueType | Unity Algorand SDK",
    "keywords": "Enum AbiValueType Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public enum AbiValueType Fields Name Description Array Boolean None Tuple UFixedNxM UIntN"
  },
  "api/AlgoSdk.Abi.Args.html": {
    "href": "api/AlgoSdk.Abi.Args.html",
    "title": "Class Args | Unity Algorand SDK",
    "keywords": "Class Args Utility methods used to build IArgEnumerator<T> Inheritance Object Args Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public static class Args Properties Empty Declaration public static EmptyArgs Empty { get; } Property Value Type Description EmptyArgs Methods Add(Address) Declaration public static SingleArg<AbiAddress> Add(Address x) Parameters Type Name Description Address x Returns Type Description SingleArg < AbiAddress > Add(BigInteger) Declaration public static SingleArg<UIntN> Add(BigInteger x) Parameters Type Name Description BigInteger x Returns Type Description SingleArg < UIntN > Add(Byte) Declaration public static SingleArg<UInt8> Add(byte x) Parameters Type Name Description Byte x Returns Type Description SingleArg < UInt8 > Add(UInt16) Declaration public static SingleArg<UInt16> Add(ushort x) Parameters Type Name Description UInt16 x Returns Type Description SingleArg < UInt16 > Add(UInt32) Declaration public static SingleArg<UInt32> Add(uint x) Parameters Type Name Description UInt32 x Returns Type Description SingleArg < UInt32 > Add(UInt64) Declaration public static SingleArg<UInt64> Add(ulong x) Parameters Type Name Description UInt64 x Returns Type Description SingleArg < UInt64 > Add<T>(T) Declaration public static SingleArg<T> Add<T>(T arg) where T : IAbiValue Parameters Type Name Description T arg Returns Type Description SingleArg <T> Type Parameters Name Description T Add<T>(T, Address) Declaration public static ArgsList<AbiAddress, T> Add<T>(this T tail, Address head) where T : struct, IArgEnumerator<T> Parameters Type Name Description T tail Address head Returns Type Description ArgsList < AbiAddress , T> Type Parameters Name Description T Add<T>(T, BigInteger) Declaration public static ArgsList<UIntN, T> Add<T>(this T tail, BigInteger head) where T : struct, IArgEnumerator<T> Parameters Type Name Description T tail BigInteger head Returns Type Description ArgsList < UIntN , T> Type Parameters Name Description T Add<T>(T, Byte) Declaration public static ArgsList<UInt8, T> Add<T>(this T tail, byte head) where T : struct, IArgEnumerator<T> Parameters Type Name Description T tail Byte head Returns Type Description ArgsList < UInt8 , T> Type Parameters Name Description T Add<T>(T, UInt16) Declaration public static ArgsList<UInt16, T> Add<T>(this T tail, ushort head) where T : struct, IArgEnumerator<T> Parameters Type Name Description T tail UInt16 head Returns Type Description ArgsList < UInt16 , T> Type Parameters Name Description T Add<T>(T, UInt32) Declaration public static ArgsList<UInt32, T> Add<T>(this T tail, uint head) where T : struct, IArgEnumerator<T> Parameters Type Name Description T tail UInt32 head Returns Type Description ArgsList < UInt32 , T> Type Parameters Name Description T Add<T>(T, UInt64) Declaration public static ArgsList<UInt64, T> Add<T>(this T tail, ulong head) where T : struct, IArgEnumerator<T> Parameters Type Name Description T tail UInt64 head Returns Type Description ArgsList < UInt64 , T> Type Parameters Name Description T Add<T>(T[]) Declaration public static SingleArg<Array<T>> Add<T>(T[] x) where T : IAbiValue Parameters Type Name Description T[] x Returns Type Description SingleArg < Array <T>> Type Parameters Name Description T Add<THead, TTail>(TTail, THead) Declaration public static ArgsList<THead, TTail> Add<THead, TTail>(this TTail tail, THead head) where THead : IAbiValue where TTail : struct, IArgEnumerator<TTail> Parameters Type Name Description TTail tail THead head Returns Type Description ArgsList <THead, TTail> Type Parameters Name Description THead TTail Add<T, U>(U, T[]) Declaration public static ArgsList<Array<T>, U> Add<T, U>(this U tail, T[] x) where T : IAbiValue where U : struct, IArgEnumerator<U> Parameters Type Name Description U tail T[] x Returns Type Description ArgsList < Array <T>, U> Type Parameters Name Description T U"
  },
  "api/AlgoSdk.Abi.ArgsList-2.html": {
    "href": "api/AlgoSdk.Abi.ArgsList-2.html",
    "title": "Struct ArgsList<THead, TTail> | Unity Algorand SDK",
    "keywords": "Struct ArgsList<THead, TTail> Represents a linked-list of IAbiValue args given to call an ABI method. Implements IArgEnumerator < ArgsList <THead, TTail>> Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public struct ArgsList<THead, TTail> : IArgEnumerator<ArgsList<THead, TTail>> where THead : IAbiValue where TTail : struct, IArgEnumerator<TTail> Type Parameters Name Description THead The type of the head argument. TTail The type of the tail enumerator of arguments. Constructors ArgsList(THead, TTail) Declaration public ArgsList(THead head, TTail tail) Parameters Type Name Description THead head TTail tail Properties Count Returns the number of args in this enumerator Declaration public int Count { get; } Property Value Type Description Int32 Methods EncodeCurrent(AbiType, AbiReferences, Allocator) Encode the current argument given a spec defined from an AbiType . Declaration public EncodedAbiArg EncodeCurrent(AbiType type, AbiReferences references, Allocator allocator) Parameters Type Name Description AbiType type The type of the argument that the ABI is expecting. AbiReferences references Stores account, application, and asset references that are intended to be included in Accounts , ForeignApps , and ForeignAssets arguments. Allocator allocator The memory allocator to use. Returns Type Description EncodedAbiArg An EncodedAbiArg . LengthOfCurrent(AbiType) Returns the length of the result of encoding the current argument as AbiType . Declaration public int LengthOfCurrent(AbiType type) Parameters Type Name Description AbiType type The type to encode this value. Returns Type Description Int32 The length in bytes of the encoded value. TryNext(out ArgsList<THead, TTail>) Try setting current to the next argument in the enumerator. Declaration public bool TryNext(out ArgsList<THead, TTail> next) Parameters Type Name Description ArgsList <THead, TTail> next Returns Type Description Boolean true if there is a next argument, else false . TryPrev(out ArgsList<THead, TTail>) Try setting current to the previous argument in the enumerator. Declaration public bool TryPrev(out ArgsList<THead, TTail> prev) Parameters Type Name Description ArgsList <THead, TTail> prev Returns Type Description Boolean true if there is a previous argument, else false . Implements IArgEnumerator<T>"
  },
  "api/AlgoSdk.Abi.Array-1.html": {
    "href": "api/AlgoSdk.Abi.Array-1.html",
    "title": "Struct Array<T> | Unity Algorand SDK",
    "keywords": "Struct Array<T> Stores data that can be converted to an array in an ABI Method Call. Implements IArgEnumerator < Array <T>> IAbiValue Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public struct Array<T> : IArgEnumerator<Array<T>>, IAbiValue where T : IAbiValue Type Parameters Name Description T Constructors Array(T[]) Declaration public Array(T[] value) Parameters Type Name Description T[] value Properties Count Declaration public int Count { get; } Property Value Type Description Int32 Methods Encode(AbiType, AbiReferences, Allocator) Encode this value given a spec defined from an AbiType . Declaration public EncodedAbiArg Encode(AbiType type, AbiReferences references, Allocator allocator) Parameters Type Name Description AbiType type The type of the argument that the ABI is expecting. AbiReferences references Stores account, application, and asset references that are intended to be included in Accounts , ForeignApps , and ForeignAssets arguments. Allocator allocator The memory allocator to use. Returns Type Description EncodedAbiArg An EncodedAbiArg . EncodeCurrent(AbiType, AbiReferences, Allocator) Encode the current argument given a spec defined from an AbiType . Declaration public EncodedAbiArg EncodeCurrent(AbiType type, AbiReferences references, Allocator allocator) Parameters Type Name Description AbiType type The type of the argument that the ABI is expecting. AbiReferences references Stores account, application, and asset references that are intended to be included in Accounts , ForeignApps , and ForeignAssets arguments. Allocator allocator The memory allocator to use. Returns Type Description EncodedAbiArg An EncodedAbiArg . Length(AbiType) Returns the length of the result of encoding this value as AbiType . Declaration public int Length(AbiType type) Parameters Type Name Description AbiType type The type to encode this value. Returns Type Description Int32 The length in bytes of the encoded value. LengthOfCurrent(AbiType) Returns the length of the result of encoding the current argument as AbiType . Declaration public int LengthOfCurrent(AbiType type) Parameters Type Name Description AbiType type The type to encode this value. Returns Type Description Int32 The length in bytes of the encoded value. TryNext(out Array<T>) Try setting current to the next argument in the enumerator. Declaration public bool TryNext(out Array<T> next) Parameters Type Name Description Array <T> next Returns Type Description Boolean true if there is a next argument, else false . TryPrev(out Array<T>) Try setting current to the previous argument in the enumerator. Declaration public bool TryPrev(out Array<T> prev) Parameters Type Name Description Array <T> prev Returns Type Description Boolean true if there is a previous argument, else false . Implements IArgEnumerator<T> IAbiValue"
  },
  "api/AlgoSdk.Abi.Boolean.html": {
    "href": "api/AlgoSdk.Abi.Boolean.html",
    "title": "Struct Boolean | Unity Algorand SDK",
    "keywords": "Struct Boolean Stores a value that can be converted to an ABI \"bool\". Implements IAbiValue Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public struct Boolean : IAbiValue Constructors Boolean(Boolean) Declaration public Boolean(bool value) Parameters Type Name Description Boolean value Fields False Declaration public static readonly Boolean False Field Value Type Description Boolean True Declaration public static readonly Boolean True Field Value Type Description Boolean Methods Encode(AbiType, AbiReferences, Allocator) Encode this value given a spec defined from an AbiType . Declaration public EncodedAbiArg Encode(AbiType type, AbiReferences references, Allocator allocator) Parameters Type Name Description AbiType type The type of the argument that the ABI is expecting. AbiReferences references Stores account, application, and asset references that are intended to be included in Accounts , ForeignApps , and ForeignAssets arguments. Allocator allocator The memory allocator to use. Returns Type Description EncodedAbiArg An EncodedAbiArg . Length(AbiType) Returns the length of the result of encoding this value as AbiType . Declaration public int Length(AbiType type) Parameters Type Name Description AbiType type The type to encode this value. Returns Type Description Int32 The length in bytes of the encoded value. Operators Explicit(Boolean to Boolean) Declaration public static explicit operator bool (Boolean abiBool) Parameters Type Name Description Boolean abiBool Returns Type Description Boolean Explicit(Boolean to Boolean) Declaration public static explicit operator Boolean(bool value) Parameters Type Name Description Boolean value Returns Type Description Boolean Implements IAbiValue"
  },
  "api/AlgoSdk.Abi.Contract.Deployment.html": {
    "href": "api/AlgoSdk.Abi.Contract.Deployment.html",
    "title": "Struct Contract.Deployment | Unity Algorand SDK",
    "keywords": "Struct Contract.Deployment A key-value representing a contract deployment in a network. Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public struct Deployment : IEquatable<Contract.Deployment> Properties AppId The app ID of the deployed contract in this network. Declaration public AppIndex AppId { get; set; } Property Value Type Description AppIndex Network The base64 genesis hash of the network. Declaration public FixedString64Bytes Network { get; set; } Property Value Type Description FixedString64Bytes Methods Deconstruct(out FixedString64Bytes, out AppIndex) Declaration public void Deconstruct(out FixedString64Bytes network, out AppIndex appId) Parameters Type Name Description FixedString64Bytes network AppIndex appId Equals(Contract.Deployment) Declaration public bool Equals(Contract.Deployment other) Parameters Type Name Description Contract.Deployment other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Abi.Contract.Deployments.Formatter.html": {
    "href": "api/AlgoSdk.Abi.Contract.Deployments.Formatter.html",
    "title": "Class Contract.Deployments.Formatter | Unity Algorand SDK",
    "keywords": "Class Contract.Deployments.Formatter Inheritance Object Contract.Deployments.Formatter Implements IAlgoApiFormatter < Contract.Deployments > Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public sealed class Formatter : IAlgoApiFormatter<Contract.Deployments> Fields AppIdHeader Declaration public const string AppIdHeader = \"appID\" Field Value Type Description String AppIdHeaderFixed Declaration public static readonly FixedString32Bytes AppIdHeaderFixed Field Value Type Description FixedString32Bytes Methods Deserialize(ref JsonReader) Declaration public Contract.Deployments Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Contract.Deployments Deserialize(ref MessagePackReader) Declaration public Contract.Deployments Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Contract.Deployments Serialize(ref JsonWriter, Contract.Deployments) Declaration public void Serialize(ref JsonWriter writer, Contract.Deployments value) Parameters Type Name Description JsonWriter writer Contract.Deployments value Serialize(ref MessagePackWriter, Contract.Deployments) Declaration public void Serialize(ref MessagePackWriter writer, Contract.Deployments value) Parameters Type Name Description MessagePackWriter writer Contract.Deployments value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Abi.Contract.Deployments.html": {
    "href": "api/AlgoSdk.Abi.Contract.Deployments.html",
    "title": "Struct Contract.Deployments | Unity Algorand SDK",
    "keywords": "Struct Contract.Deployments Represents information about the deployments of a contract across different networks. Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public struct Deployments : IEquatable<Contract.Deployments> Properties Item[Int32] Declaration public Contract.Deployment this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Contract.Deployment Length Declaration public int Length { get; } Property Value Type Description Int32 LongLength Declaration public long LongLength { get; } Property Value Type Description Int64 Methods AsArray() Declaration public Contract.Deployment[] AsArray() Returns Type Description Contract.Deployment [] Equals(Contract.Deployments) Declaration public bool Equals(Contract.Deployments other) Parameters Type Name Description Contract.Deployments other Returns Type Description Boolean Operators Implicit(Contract.Deployment[] to Contract.Deployments) Declaration public static implicit operator Contract.Deployments(Contract.Deployment[] d) Parameters Type Name Description Contract.Deployment [] d Returns Type Description Contract.Deployments Implicit(Contract.Deployments to Contract.Deployment[]) Declaration public static implicit operator Contract.Deployment[](Contract.Deployments d) Parameters Type Name Description Contract.Deployments d Returns Type Description Contract.Deployment []"
  },
  "api/AlgoSdk.Abi.Contract.html": {
    "href": "api/AlgoSdk.Abi.Contract.html",
    "title": "Struct Contract | Unity Algorand SDK",
    "keywords": "Struct Contract A description for each of the methods in the contract. Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public struct Contract : IEquatable<Contract> Remarks See ARC-0004 for details. Properties Description Optional, user-friendly description for the interface Declaration public string Description { get; set; } Property Value Type Description String Methods All of the methods that the contract implements Declaration public Method[] Methods { get; set; } Property Value Type Description Method [] Name A user-friendly name for the contract Declaration public string Name { get; set; } Property Value Type Description String Networks Optional object listing the contract instances across different networks Declaration public Contract.Deployments Networks { get; set; } Property Value Type Description Contract.Deployments Methods Equals(Contract) Declaration public bool Equals(Contract other) Parameters Type Name Description Contract other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Abi.EmptyArgs.html": {
    "href": "api/AlgoSdk.Abi.EmptyArgs.html",
    "title": "Struct EmptyArgs | Unity Algorand SDK",
    "keywords": "Struct EmptyArgs Implements IArgEnumerator < EmptyArgs > Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public struct EmptyArgs : IArgEnumerator<EmptyArgs> Properties Count Returns the number of args in this enumerator Declaration public int Count { get; } Property Value Type Description Int32 Methods EncodeCurrent(AbiType, AbiReferences, Allocator) Encode the current argument given a spec defined from an AbiType . Declaration public EncodedAbiArg EncodeCurrent(AbiType type, AbiReferences references, Allocator allocator) Parameters Type Name Description AbiType type The type of the argument that the ABI is expecting. AbiReferences references Stores account, application, and asset references that are intended to be included in Accounts , ForeignApps , and ForeignAssets arguments. Allocator allocator The memory allocator to use. Returns Type Description EncodedAbiArg An EncodedAbiArg . LengthOfCurrent(AbiType) Returns the length of the result of encoding the current argument as AbiType . Declaration public int LengthOfCurrent(AbiType type) Parameters Type Name Description AbiType type The type to encode this value. Returns Type Description Int32 The length in bytes of the encoded value. TryNext(out EmptyArgs) Try setting current to the next argument in the enumerator. Declaration public bool TryNext(out EmptyArgs next) Parameters Type Name Description EmptyArgs next Returns Type Description Boolean true if there is a next argument, else false . TryPrev(out EmptyArgs) Try setting current to the previous argument in the enumerator. Declaration public bool TryPrev(out EmptyArgs prev) Parameters Type Name Description EmptyArgs prev Returns Type Description Boolean true if there is a previous argument, else false . Implements IArgEnumerator<T>"
  },
  "api/AlgoSdk.Abi.EncodedAbiArg.html": {
    "href": "api/AlgoSdk.Abi.EncodedAbiArg.html",
    "title": "Struct EncodedAbiArg | Unity Algorand SDK",
    "keywords": "Struct EncodedAbiArg Represents the result of encoding an IAbiValue following the specification of an AbiType . Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public struct EncodedAbiArg : IIndexable<byte>, IByteArray, INativeDisposable Constructors EncodedAbiArg(Allocator) Declaration public EncodedAbiArg(Allocator allocator) Parameters Type Name Description Allocator allocator EncodedAbiArg(Int32, Allocator) Declaration public EncodedAbiArg(int capacity, Allocator allocator) Parameters Type Name Description Int32 capacity Allocator allocator Properties Bytes The raw bytes backing this struct. Declaration public NativeList<byte> Bytes { get; } Property Value Type Description NativeList < Byte > Item[Int32] Declaration public byte this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Byte Length Declaration public int Length { get; set; } Property Value Type Description Int32 Methods Dispose() Declaration public void Dispose() Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle ElementAt(Int32) Declaration public byte ElementAt(int index) Parameters Type Name Description Int32 index Returns Type Description Byte GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void *"
  },
  "api/AlgoSdk.Abi.html": {
    "href": "api/AlgoSdk.Abi.html",
    "title": "Namespace AlgoSdk.Abi | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.Abi Classes AbiTransactionTypeExtensions AbiType.Patterns Regex patterns used for parsing type names. Args Utility methods used to build IArgEnumerator<T> Contract.Deployments.Formatter Tuple UIntNExtensions Structs AbiAddress Stores data that can be converted to an address or an account reference in an ABI method call. AbiReferences Stores and encodes references to foreign accounts, apps, and assets when generating an ABI Method Call. AbiType The type of an ABI value. AbiType.Formatter ArgsList<THead, TTail> Represents a linked-list of IAbiValue args given to call an ABI method. Array<T> Stores data that can be converted to an array in an ABI Method Call. Boolean Stores a value that can be converted to an ABI \"bool\". Contract A description for each of the methods in the contract. Contract.Deployment A key-value representing a contract deployment in a network. Contract.Deployments Represents information about the deployments of a contract across different networks. EmptyArgs EncodedAbiArg Represents the result of encoding an IAbiValue following the specification of an AbiType . Interface Defines a logically grouped set of methods in a Smart Contract ABI. Method A method description provides further information about a method beyond its signature. Method.Arg Represents a Method argument. Method.Return Represents a Method return value. MethodCallBuilder<TArguments> A utility struct that is used in building an AppCallTxn from ABI method spec and arguments. MethodSelector Used to select a method defined in an ABI. See Algorand's Method Selector Spec for more details. SingleArg<T> Tuple<T> Stores values that can be encoded as a tuple in an ABI method call. UFixedNxM Stores data that can be converted to a \"ufixed\" in an ABI method call. UInt16 Stores data that can be converted to a \"uint\" in an ABI Method call. UInt32 Stores data that can be converted to a \"uint\" in an ABI Method call. UInt64 Stores data that can be converted to a \"uint\" in an ABI Method call. UInt8 Stores data that can be converted to a \"uint\" in an ABI Method call. UIntN Stores data that can be converted to a \"uint\" in an ABI Method call. Interfaces IAbiValue Represents a value that can be encoded as an ABI argument when given an AbiType specification. IArgEnumerator<T> An ABI arg enumerator. IUFixedNxM IUIntN Stores data that can be converted to a \"uint\" in an ABI Method call. Enums AbiTransactionType AbiValueType"
  },
  "api/AlgoSdk.Abi.IAbiValue.html": {
    "href": "api/AlgoSdk.Abi.IAbiValue.html",
    "title": "Interface IAbiValue | Unity Algorand SDK",
    "keywords": "Interface IAbiValue Represents a value that can be encoded as an ABI argument when given an AbiType specification. Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public interface IAbiValue Methods Encode(AbiType, AbiReferences, Allocator) Encode this value given a spec defined from an AbiType . Declaration EncodedAbiArg Encode(AbiType type, AbiReferences references, Allocator allocator) Parameters Type Name Description AbiType type The type of the argument that the ABI is expecting. AbiReferences references Stores account, application, and asset references that are intended to be included in Accounts , ForeignApps , and ForeignAssets arguments. Allocator allocator The memory allocator to use. Returns Type Description EncodedAbiArg An EncodedAbiArg . Length(AbiType) Returns the length of the result of encoding this value as AbiType . Declaration int Length(AbiType type) Parameters Type Name Description AbiType type The type to encode this value. Returns Type Description Int32 The length in bytes of the encoded value."
  },
  "api/AlgoSdk.Abi.IArgEnumerator-1.html": {
    "href": "api/AlgoSdk.Abi.IArgEnumerator-1.html",
    "title": "Interface IArgEnumerator<T> | Unity Algorand SDK",
    "keywords": "Interface IArgEnumerator<T> An ABI arg enumerator. Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public interface IArgEnumerator<T> where T : IArgEnumerator<T> Type Parameters Name Description T The type of the enumerator; used for going to the next/prev state of the enumerator. Properties Count Returns the number of args in this enumerator Declaration int Count { get; } Property Value Type Description Int32 Methods EncodeCurrent(AbiType, AbiReferences, Allocator) Encode the current argument given a spec defined from an AbiType . Declaration EncodedAbiArg EncodeCurrent(AbiType type, AbiReferences references, Allocator allocator) Parameters Type Name Description AbiType type The type of the argument that the ABI is expecting. AbiReferences references Stores account, application, and asset references that are intended to be included in Accounts , ForeignApps , and ForeignAssets arguments. Allocator allocator The memory allocator to use. Returns Type Description EncodedAbiArg An EncodedAbiArg . LengthOfCurrent(AbiType) Returns the length of the result of encoding the current argument as AbiType . Declaration int LengthOfCurrent(AbiType type) Parameters Type Name Description AbiType type The type to encode this value. Returns Type Description Int32 The length in bytes of the encoded value. TryNext(out T) Try setting current to the next argument in the enumerator. Declaration bool TryNext(out T next) Parameters Type Name Description T next The enumerator with the next argument set as the current one. Returns Type Description Boolean true if there is a next argument, else false . TryPrev(out T) Try setting current to the previous argument in the enumerator. Declaration bool TryPrev(out T prev) Parameters Type Name Description T prev Returns Type Description Boolean true if there is a previous argument, else false ."
  },
  "api/AlgoSdk.Abi.Interface.html": {
    "href": "api/AlgoSdk.Abi.Interface.html",
    "title": "Struct Interface | Unity Algorand SDK",
    "keywords": "Struct Interface Defines a logically grouped set of methods in a Smart Contract ABI. Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public struct Interface : IEquatable<Interface> Remarks See ARC-0004 for details. Properties Description Optional, user-friendly description for the interface. Declaration public string Description { get; set; } Property Value Type Description String Methods All of the methods that the interface contains. Declaration public Method[] Methods { get; set; } Property Value Type Description Method [] Name A user-friendly name for the interface. Declaration public string Name { get; set; } Property Value Type Description String Methods Equals(Interface) Declaration public bool Equals(Interface other) Parameters Type Name Description Interface other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Abi.IUFixedNxM.html": {
    "href": "api/AlgoSdk.Abi.IUFixedNxM.html",
    "title": "Interface IUFixedNxM | Unity Algorand SDK",
    "keywords": "Interface IUFixedNxM Inherited Members IAbiValue.Encode(AbiType, AbiReferences, Allocator) IAbiValue.Length(AbiType) Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public interface IUFixedNxM : IAbiValue Properties M The precision of this value (the number of digits after the decimal place). Declaration byte M { get; } Property Value Type Description Byte N The number of bits available to this value. Declaration ushort N { get; } Property Value Type Description UInt16"
  },
  "api/AlgoSdk.Abi.IUIntN.html": {
    "href": "api/AlgoSdk.Abi.IUIntN.html",
    "title": "Interface IUIntN | Unity Algorand SDK",
    "keywords": "Interface IUIntN Stores data that can be converted to a \"uint\" in an ABI Method call. Inherited Members IAbiValue.Encode(AbiType, AbiReferences, Allocator) IAbiValue.Length(AbiType) Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public interface IUIntN : IAbiValue Properties N The number of bits available to this value. Declaration ushort N { get; } Property Value Type Description UInt16"
  },
  "api/AlgoSdk.Abi.Method.Arg.html": {
    "href": "api/AlgoSdk.Abi.Method.Arg.html",
    "title": "Struct Method.Arg | Unity Algorand SDK",
    "keywords": "Struct Method.Arg Represents a Method argument. Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public struct Arg : IEquatable<Method.Arg> Properties Description Optional, user-friendly description for the argument. Declaration public string Description { get; set; } Property Value Type Description String Name Optional, user-friendly name for the argument. Declaration public string Name { get; set; } Property Value Type Description String Type The type of the argument. Declaration public AbiType Type { get; set; } Property Value Type Description AbiType Methods Equals(Method.Arg) Declaration public bool Equals(Method.Arg other) Parameters Type Name Description Method.Arg other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Abi.Method.html": {
    "href": "api/AlgoSdk.Abi.Method.html",
    "title": "Struct Method | Unity Algorand SDK",
    "keywords": "Struct Method A method description provides further information about a method beyond its signature. Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public struct Method : IEquatable<Method> Remarks See ARC-0004 for more details. Properties Arguments The arguments of the method, in order. Declaration public Method.Arg[] Arguments { get; set; } Property Value Type Description Method.Arg [] Description Optional, user-friendly description for the method. Declaration public string Description { get; set; } Property Value Type Description String Name The name of the method. Declaration public string Name { get; set; } Property Value Type Description String Returns Information about the method's return value. Declaration public Method.Return Returns { get; set; } Property Value Type Description Method.Return Methods Equals(Method) Declaration public bool Equals(Method other) Parameters Type Name Description Method other Returns Type Description Boolean GetSignature(Allocator) Declaration public NativeText GetSignature(Allocator allocator) Parameters Type Name Description Allocator allocator Returns Type Description NativeText"
  },
  "api/AlgoSdk.Abi.Method.Return.html": {
    "href": "api/AlgoSdk.Abi.Method.Return.html",
    "title": "Struct Method.Return | Unity Algorand SDK",
    "keywords": "Struct Method.Return Represents a Method return value. Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public struct Return : IEquatable<Method.Return> Properties Description Optional, user-friendly description for the return value. Declaration public string Description { get; set; } Property Value Type Description String Type The type of the return value, or &quot;void&quot; to indicate no return value. Declaration public AbiType Type { get; set; } Property Value Type Description AbiType Methods Equals(Method.Return) Declaration public bool Equals(Method.Return other) Parameters Type Name Description Method.Return other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Abi.MethodCallBuilder-1.html": {
    "href": "api/AlgoSdk.Abi.MethodCallBuilder-1.html",
    "title": "Struct MethodCallBuilder<TArguments> | Unity Algorand SDK",
    "keywords": "Struct MethodCallBuilder<TArguments> A utility struct that is used in building an AppCallTxn from ABI method spec and arguments. Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public struct MethodCallBuilder<TArguments> : INativeDisposable where TArguments : struct, IArgEnumerator<TArguments> Type Parameters Name Description TArguments The type of the arguments provided. Constructors MethodCallBuilder(Address, TransactionParams, AppIndex, Method, TArguments, OnCompletion, Allocator) Declaration public MethodCallBuilder(Address sender, TransactionParams txnParams, AppIndex applicationId, Method method, in TArguments argValues, OnCompletion onComplete, Allocator allocator) Parameters Type Name Description Address sender TransactionParams txnParams AppIndex applicationId Method method TArguments argValues OnCompletion onComplete Allocator allocator Fields MaxAbiTxnArguments Declaration public const int MaxAbiTxnArguments = 15 Field Value Type Description Int32 Methods BuildTxn() Build the AppCallTxn from the arguments provided in creating this struct. Declaration public AppCallTxn BuildTxn() Returns Type Description AppCallTxn An AppCallTxn . Exceptions Type Condition ArgumentException Not enough arguments given to call this method. Dispose() Declaration public void Dispose() Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle ValidateTxnArgs<TTxns>(TTxns) Validates that the given transactions match any ABI transaction arguments. See Algorand's ABI specifications on Transaction Types . Declaration public void ValidateTxnArgs<TTxns>(TTxns prevTxns) where TTxns : IReadOnlyList<Transaction> Parameters Type Name Description TTxns prevTxns Previous transactions that are available in the atomic transaction group. Type Parameters Name Description TTxns Type of the given list of transactions Exceptions Type Condition InvalidOperationException Not enough transactions were given to call the method. InvalidCastException The given transactions were not the correct transaction type to call the method."
  },
  "api/AlgoSdk.Abi.MethodSelector.html": {
    "href": "api/AlgoSdk.Abi.MethodSelector.html",
    "title": "Struct MethodSelector | Unity Algorand SDK",
    "keywords": "Struct MethodSelector Used to select a method defined in an ABI. See Algorand's Method Selector Spec for more details. Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public struct MethodSelector : IByteArray Constructors MethodSelector(Method) Declaration public MethodSelector(Method method) Parameters Type Name Description Method method Fields SizeBytes Declaration public const int SizeBytes = 4 Field Value Type Description Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public int Length { get; } Property Value Type Description Int32 Methods GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void * Operators Explicit(MethodSelector to CompiledTeal) Declaration public static explicit operator CompiledTeal(MethodSelector selector) Parameters Type Name Description MethodSelector selector Returns Type Description CompiledTeal"
  },
  "api/AlgoSdk.Abi.SingleArg-1.html": {
    "href": "api/AlgoSdk.Abi.SingleArg-1.html",
    "title": "Struct SingleArg<T> | Unity Algorand SDK",
    "keywords": "Struct SingleArg<T> Implements IArgEnumerator < SingleArg <T>> Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public struct SingleArg<T> : IArgEnumerator<SingleArg<T>> where T : IAbiValue Type Parameters Name Description T Constructors SingleArg(T) Declaration public SingleArg(T arg) Parameters Type Name Description T arg Properties Count Returns the number of args in this enumerator Declaration public int Count { get; } Property Value Type Description Int32 Methods EncodeCurrent(AbiType, AbiReferences, Allocator) Encode the current argument given a spec defined from an AbiType . Declaration public EncodedAbiArg EncodeCurrent(AbiType type, AbiReferences references, Allocator allocator) Parameters Type Name Description AbiType type The type of the argument that the ABI is expecting. AbiReferences references Stores account, application, and asset references that are intended to be included in Accounts , ForeignApps , and ForeignAssets arguments. Allocator allocator The memory allocator to use. Returns Type Description EncodedAbiArg An EncodedAbiArg . LengthOfCurrent(AbiType) Returns the length of the result of encoding the current argument as AbiType . Declaration public int LengthOfCurrent(AbiType type) Parameters Type Name Description AbiType type The type to encode this value. Returns Type Description Int32 The length in bytes of the encoded value. TryNext(out SingleArg<T>) Try setting current to the next argument in the enumerator. Declaration public bool TryNext(out SingleArg<T> next) Parameters Type Name Description SingleArg <T> next Returns Type Description Boolean true if there is a next argument, else false . TryPrev(out SingleArg<T>) Try setting current to the previous argument in the enumerator. Declaration public bool TryPrev(out SingleArg<T> prev) Parameters Type Name Description SingleArg <T> prev Returns Type Description Boolean true if there is a previous argument, else false . Implements IArgEnumerator<T>"
  },
  "api/AlgoSdk.Abi.Tuple.html": {
    "href": "api/AlgoSdk.Abi.Tuple.html",
    "title": "Class Tuple | Unity Algorand SDK",
    "keywords": "Class Tuple Inheritance Object Tuple Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public static class Tuple Methods Of<T>(T) Declaration public static Tuple<T> Of<T>(T args) where T : IArgEnumerator<T> Parameters Type Name Description T args Returns Type Description Tuple <T> Type Parameters Name Description T"
  },
  "api/AlgoSdk.Abi.Tuple-1.html": {
    "href": "api/AlgoSdk.Abi.Tuple-1.html",
    "title": "Struct Tuple<T> | Unity Algorand SDK",
    "keywords": "Struct Tuple<T> Stores values that can be encoded as a tuple in an ABI method call. Implements IAbiValue Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public struct Tuple<T> : IAbiValue where T : IArgEnumerator<T> Type Parameters Name Description T Constructors Tuple(T) Declaration public Tuple(T args) Parameters Type Name Description T args Methods Encode(AbiType, AbiReferences, Allocator) Encode this value given a spec defined from an AbiType . Declaration public EncodedAbiArg Encode(AbiType type, AbiReferences references, Allocator allocator) Parameters Type Name Description AbiType type The type of the argument that the ABI is expecting. AbiReferences references Stores account, application, and asset references that are intended to be included in Accounts , ForeignApps , and ForeignAssets arguments. Allocator allocator The memory allocator to use. Returns Type Description EncodedAbiArg An EncodedAbiArg . Encode<U>(U, AbiReferences, Allocator) Declaration public EncodedAbiArg Encode<U>(U types, AbiReferences references, Allocator allocator) where U : IReadOnlyList<AbiType> Parameters Type Name Description U types AbiReferences references Allocator allocator Returns Type Description EncodedAbiArg Type Parameters Name Description U Length(AbiType) Returns the length of the result of encoding this value as AbiType . Declaration public int Length(AbiType type) Parameters Type Name Description AbiType type The type to encode this value. Returns Type Description Int32 The length in bytes of the encoded value. Implements IAbiValue"
  },
  "api/AlgoSdk.Abi.UFixedNxM.html": {
    "href": "api/AlgoSdk.Abi.UFixedNxM.html",
    "title": "Struct UFixedNxM | Unity Algorand SDK",
    "keywords": "Struct UFixedNxM Stores data that can be converted to a \"ufixed\" in an ABI method call. Implements IUFixedNxM IAbiValue Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public struct UFixedNxM : IUFixedNxM, IAbiValue Constructors UFixedNxM(UIntN, Byte) Declaration public UFixedNxM(UIntN value, byte precision) Parameters Type Name Description UIntN value Byte precision Properties M The precision of this value (the number of digits after the decimal place). Declaration public byte M { get; } Property Value Type Description Byte N The number of bits available to this value. Declaration public ushort N { get; } Property Value Type Description UInt16 Value Declaration public BigInteger Value { get; } Property Value Type Description BigInteger Methods As(AbiType) Declaration public UFixedNxM As(AbiType type) Parameters Type Name Description AbiType type Returns Type Description UFixedNxM Encode(AbiType, AbiReferences, Allocator) Encode this value given a spec defined from an AbiType . Declaration public EncodedAbiArg Encode(AbiType type, AbiReferences references, Allocator allocator) Parameters Type Name Description AbiType type The type of the argument that the ABI is expecting. AbiReferences references Stores account, application, and asset references that are intended to be included in Accounts , ForeignApps , and ForeignAssets arguments. Allocator allocator The memory allocator to use. Returns Type Description EncodedAbiArg An EncodedAbiArg . Length(AbiType) Returns the length of the result of encoding this value as AbiType . Declaration public int Length(AbiType type) Parameters Type Name Description AbiType type The type to encode this value. Returns Type Description Int32 The length in bytes of the encoded value. Implements IUFixedNxM IAbiValue"
  },
  "api/AlgoSdk.Abi.UInt16.html": {
    "href": "api/AlgoSdk.Abi.UInt16.html",
    "title": "Struct UInt16 | Unity Algorand SDK",
    "keywords": "Struct UInt16 Stores data that can be converted to a \"uint\" in an ABI Method call. Implements IUIntN IAbiValue Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public struct UInt16 : IUIntN, IAbiValue Constructors UInt16(UInt16) Declaration public UInt16(ushort value) Parameters Type Name Description UInt16 value Properties N The number of bits available to this value. Declaration public ushort N { get; } Property Value Type Description UInt16 Methods Encode(AbiType, AbiReferences, Allocator) Encode this value given a spec defined from an AbiType . Declaration public EncodedAbiArg Encode(AbiType type, AbiReferences references, Allocator allocator) Parameters Type Name Description AbiType type The type of the argument that the ABI is expecting. AbiReferences references Stores account, application, and asset references that are intended to be included in Accounts , ForeignApps , and ForeignAssets arguments. Allocator allocator The memory allocator to use. Returns Type Description EncodedAbiArg An EncodedAbiArg . Length(AbiType) Returns the length of the result of encoding this value as AbiType . Declaration public int Length(AbiType type) Parameters Type Name Description AbiType type The type to encode this value. Returns Type Description Int32 The length in bytes of the encoded value. Implements IUIntN IAbiValue"
  },
  "api/AlgoSdk.Abi.UInt32.html": {
    "href": "api/AlgoSdk.Abi.UInt32.html",
    "title": "Struct UInt32 | Unity Algorand SDK",
    "keywords": "Struct UInt32 Stores data that can be converted to a \"uint\" in an ABI Method call. Implements IUIntN IAbiValue Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public struct UInt32 : IUIntN, IAbiValue Constructors UInt32(UInt32) Declaration public UInt32(uint value) Parameters Type Name Description UInt32 value Properties N The number of bits available to this value. Declaration public ushort N { get; } Property Value Type Description UInt16 Methods Encode(AbiType, AbiReferences, Allocator) Encode this value given a spec defined from an AbiType . Declaration public EncodedAbiArg Encode(AbiType type, AbiReferences references, Allocator allocator) Parameters Type Name Description AbiType type The type of the argument that the ABI is expecting. AbiReferences references Stores account, application, and asset references that are intended to be included in Accounts , ForeignApps , and ForeignAssets arguments. Allocator allocator The memory allocator to use. Returns Type Description EncodedAbiArg An EncodedAbiArg . Length(AbiType) Returns the length of the result of encoding this value as AbiType . Declaration public int Length(AbiType type) Parameters Type Name Description AbiType type The type to encode this value. Returns Type Description Int32 The length in bytes of the encoded value. Implements IUIntN IAbiValue"
  },
  "api/AlgoSdk.Abi.UInt64.html": {
    "href": "api/AlgoSdk.Abi.UInt64.html",
    "title": "Struct UInt64 | Unity Algorand SDK",
    "keywords": "Struct UInt64 Stores data that can be converted to a \"uint\" in an ABI Method call. Implements IUIntN IAbiValue Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public struct UInt64 : IUIntN, IAbiValue Constructors UInt64(UInt64) Declaration public UInt64(ulong value) Parameters Type Name Description UInt64 value Properties N The number of bits available to this value. Declaration public ushort N { get; } Property Value Type Description UInt16 Methods Encode(AbiType, AbiReferences, Allocator) Encode this value given a spec defined from an AbiType . Declaration public EncodedAbiArg Encode(AbiType type, AbiReferences references, Allocator allocator) Parameters Type Name Description AbiType type The type of the argument that the ABI is expecting. AbiReferences references Stores account, application, and asset references that are intended to be included in Accounts , ForeignApps , and ForeignAssets arguments. Allocator allocator The memory allocator to use. Returns Type Description EncodedAbiArg An EncodedAbiArg . Length(AbiType) Returns the length of the result of encoding this value as AbiType . Declaration public int Length(AbiType type) Parameters Type Name Description AbiType type The type to encode this value. Returns Type Description Int32 The length in bytes of the encoded value. Implements IUIntN IAbiValue"
  },
  "api/AlgoSdk.Abi.UInt8.html": {
    "href": "api/AlgoSdk.Abi.UInt8.html",
    "title": "Struct UInt8 | Unity Algorand SDK",
    "keywords": "Struct UInt8 Stores data that can be converted to a \"uint\" in an ABI Method call. Implements IUIntN IAbiValue Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public struct UInt8 : IUIntN, IAbiValue Constructors UInt8(Byte) Declaration public UInt8(byte value) Parameters Type Name Description Byte value Properties N The number of bits available to this value. Declaration public ushort N { get; } Property Value Type Description UInt16 Methods Encode(AbiType, AbiReferences, Allocator) Encode this value given a spec defined from an AbiType . Declaration public EncodedAbiArg Encode(AbiType type, AbiReferences references, Allocator allocator) Parameters Type Name Description AbiType type The type of the argument that the ABI is expecting. AbiReferences references Stores account, application, and asset references that are intended to be included in Accounts , ForeignApps , and ForeignAssets arguments. Allocator allocator The memory allocator to use. Returns Type Description EncodedAbiArg An EncodedAbiArg . Length(AbiType) Returns the length of the result of encoding this value as AbiType . Declaration public int Length(AbiType type) Parameters Type Name Description AbiType type The type to encode this value. Returns Type Description Int32 The length in bytes of the encoded value. Implements IUIntN IAbiValue"
  },
  "api/AlgoSdk.Abi.UIntN.html": {
    "href": "api/AlgoSdk.Abi.UIntN.html",
    "title": "Struct UIntN | Unity Algorand SDK",
    "keywords": "Struct UIntN Stores data that can be converted to a \"uint\" in an ABI Method call. Implements IUIntN IAbiValue Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public struct UIntN : IUIntN, IAbiValue Constructors UIntN(BigInteger) Declaration public UIntN(BigInteger value) Parameters Type Name Description BigInteger value Properties N The number of bits available to this value. Declaration public ushort N { get; } Property Value Type Description UInt16 Value Declaration public BigInteger Value { get; } Property Value Type Description BigInteger Methods Encode(AbiType, AbiReferences, Allocator) Encode this value given a spec defined from an AbiType . Declaration public EncodedAbiArg Encode(AbiType type, AbiReferences references, Allocator allocator) Parameters Type Name Description AbiType type The type of the argument that the ABI is expecting. AbiReferences references Stores account, application, and asset references that are intended to be included in Accounts , ForeignApps , and ForeignAssets arguments. Allocator allocator The memory allocator to use. Returns Type Description EncodedAbiArg An EncodedAbiArg . Length(AbiType) Returns the length of the result of encoding this value as AbiType . Declaration public int Length(AbiType type) Parameters Type Name Description AbiType type The type to encode this value. Returns Type Description Int32 The length in bytes of the encoded value. Implements IUIntN IAbiValue"
  },
  "api/AlgoSdk.Abi.UIntNExtensions.html": {
    "href": "api/AlgoSdk.Abi.UIntNExtensions.html",
    "title": "Class UIntNExtensions | Unity Algorand SDK",
    "keywords": "Class UIntNExtensions Inheritance Object UIntNExtensions Namespace : AlgoSdk.Abi Assembly : cs.temp.dll.dll Syntax public static class UIntNExtensions Methods CheckFitsIn<T>(T, AbiType) Declaration public static void CheckFitsIn<T>(this T x, AbiType type) where T : IUIntN Parameters Type Name Description T x AbiType type Type Parameters Name Description T"
  },
  "api/AlgoSdk.AbiReferenceType.html": {
    "href": "api/AlgoSdk.AbiReferenceType.html",
    "title": "Enum AbiReferenceType | Unity Algorand SDK",
    "keywords": "Enum AbiReferenceType Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum AbiReferenceType : byte Fields Name Description Account Application Asset None"
  },
  "api/AlgoSdk.AbiReferenceTypeExtensions.html": {
    "href": "api/AlgoSdk.AbiReferenceTypeExtensions.html",
    "title": "Class AbiReferenceTypeExtensions | Unity Algorand SDK",
    "keywords": "Class AbiReferenceTypeExtensions Inheritance Object AbiReferenceTypeExtensions Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class AbiReferenceTypeExtensions Methods Parse(String) Declaration public static AbiReferenceType Parse(string type) Parameters Type Name Description String type Returns Type Description AbiReferenceType"
  },
  "api/AlgoSdk.Account.html": {
    "href": "api/AlgoSdk.Account.html",
    "title": "Struct Account | Unity Algorand SDK",
    "keywords": "Struct Account A local, in-memory account. Implements IAccount ISigner IAsyncSignerWithProgress IAsyncSigner Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Account : IAccount, ISigner, IAsyncSignerWithProgress, IAsyncSigner Constructors Account(PrivateKey) Instantiate an in-memory account. Declaration public Account(PrivateKey privateKey) Parameters Type Name Description PrivateKey privateKey The private key of the account. Account(PrivateKey, Address) Instantiate an in-memory account that is rekeyed. Declaration public Account(PrivateKey privateKey, Address address) Parameters Type Name Description PrivateKey privateKey The private key of the account. Address address The address of this account. Properties Address Address of this account Declaration public Address Address { get; } Property Value Type Description Address IsRekeyed Declaration public bool IsRekeyed { get; } Property Value Type Description Boolean Methods Deconstruct(out PrivateKey, out Address) Declaration public void Deconstruct(out PrivateKey privateKey, out Address address) Parameters Type Name Description PrivateKey privateKey Address address GenerateAccount() Generate a random, fresh account Declaration public static Account GenerateAccount() Returns Type Description Account SignTxn<T>(T) Declaration public SignedTxn<T> SignTxn<T>(T txn) where T : ITransaction, IEquatable<T> Parameters Type Name Description T txn Returns Type Description SignedTxn <T> Type Parameters Name Description T SignTxnAsync<T>(T) Declaration public UniTask<SignedTxn<T>> SignTxnAsync<T>(T txn) where T : ITransaction, IEquatable<T> Parameters Type Name Description T txn Returns Type Description UniTask < SignedTxn <T>> Type Parameters Name Description T SignTxns<T>(T[]) Declaration public SignedTxn<T>[] SignTxns<T>(T[] txns) where T : ITransaction, IEquatable<T> Parameters Type Name Description T[] txns Returns Type Description SignedTxn <T>[] Type Parameters Name Description T SignTxns<T>(T[], TxnIndices) Sign a group of transactions. Declaration public SignedTxn<T>[] SignTxns<T>(T[] txns, TxnIndices txnsToSign) where T : ITransaction, IEquatable<T> Parameters Type Name Description T[] txns The transactions to sign. TxnIndices txnsToSign Indexes of the transactions this signer should sign. Returns Type Description SignedTxn <T>[] An array of transactions with signatures. If the transaction at a given index was not signed, that signed transaction will have no signature. Type Parameters Name Description T The type of the transactions. Remarks Each transaction is expected to have a valid group id already set. SignTxnsAsync<T>(T[]) Declaration public UniTask<SignedTxn<T>[]> SignTxnsAsync<T>(T[] txns) where T : ITransaction, IEquatable<T> Parameters Type Name Description T[] txns Returns Type Description UniTask < SignedTxn <T>[]> Type Parameters Name Description T SignTxnsAsync<T>(T[], TxnIndices, CancellationToken) Sign a group of transactions. Declaration public UniTask<SignedTxn<T>[]> SignTxnsAsync<T>(T[] txns, TxnIndices txnsToSign, CancellationToken cancellationToken = null) where T : ITransaction, IEquatable<T> Parameters Type Name Description T[] txns The transactions to sign. TxnIndices txnsToSign Indexes of the transactions this signer should sign. CancellationToken cancellationToken Provide an optional cancellation token to interrupt signing. Returns Type Description UniTask < SignedTxn <T>[]> An array of transactions with signatures. If the transaction at a given index was not signed, that signed transaction will have no signature. Type Parameters Name Description T The type of the transactions. Remarks Each transaction is expected to have a valid group id already set. SignTxnsAsync<T, TProgress>(T[], TxnIndices, TProgress, CancellationToken) Sign a group of transactions. Declaration public UniTask<SignedTxn<T>[]> SignTxnsAsync<T, TProgress>(T[] txns, TxnIndices txnsToSign, TProgress progress, CancellationToken cancellationToken = null) where T : ITransaction, IEquatable<T> where TProgress : IProgress<float> Parameters Type Name Description T[] txns The transactions to sign. TxnIndices txnsToSign Indexes of the transactions this signer should sign. TProgress progress A progress token that can be used to periodically check the progress. CancellationToken cancellationToken Provide an optional cancellation token to interrupt signing. Returns Type Description UniTask < SignedTxn <T>[]> An array of transactions with signatures. If the transaction at a given index was not signed, that signed transaction will have no signature. Type Parameters Name Description T The type of the transactions. TProgress Remarks Each transaction is expected to have a valid group id already set. Implements IAccount ISigner IAsyncSignerWithProgress IAsyncSigner"
  },
  "api/AlgoSdk.AccountParticipation.html": {
    "href": "api/AlgoSdk.AccountParticipation.html",
    "title": "Struct AccountParticipation | Unity Algorand SDK",
    "keywords": "Struct AccountParticipation Describes the parameters used by this account in consensus protocol. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AccountParticipation : IEquatable<AccountParticipation> Fields SelectionParticipationKey Selection public key (if any) currently registered for this round. Declaration public VrfPubKey SelectionParticipationKey Field Value Type Description VrfPubKey VoteFirst First round for which this participation is valid. Declaration public ulong VoteFirst Field Value Type Description UInt64 VoteKeyDilution Number of subkeys in each batch of participation keys. Declaration public ulong VoteKeyDilution Field Value Type Description UInt64 VoteLast Last round for which this participation is valid. Declaration public ulong VoteLast Field Value Type Description UInt64 VoteParticipationKey Root participation public key (if any) currently registered for this round. Declaration public ParticipationPublicKey VoteParticipationKey Field Value Type Description ParticipationPublicKey Methods Equals(AccountParticipation) Declaration public bool Equals(AccountParticipation other) Parameters Type Name Description AccountParticipation other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Address.CheckSum.html": {
    "href": "api/AlgoSdk.Address.CheckSum.html",
    "title": "Struct Address.CheckSum | Unity Algorand SDK",
    "keywords": "Struct Address.CheckSum Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct CheckSum : IByteArray, IEquatable<Address.CheckSum> Fields SizeBytes Declaration public const int SizeBytes = 4 Field Value Type Description Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public int Length { get; } Property Value Type Description Int32 Methods Equals(Address.CheckSum) Declaration public bool Equals(Address.CheckSum other) Parameters Type Name Description Address.CheckSum other Returns Type Description Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void * ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators Equality(Address.CheckSum, Address.CheckSum) Declaration public static bool operator ==(in Address.CheckSum x, in Address.CheckSum y) Parameters Type Name Description Address.CheckSum x Address.CheckSum y Returns Type Description Boolean Implicit(Sha512_256_Hash to Address.CheckSum) Declaration public static implicit operator Address.CheckSum(Sha512_256_Hash hash) Parameters Type Name Description Sha512_256_Hash hash Returns Type Description Address.CheckSum Inequality(Address.CheckSum, Address.CheckSum) Declaration public static bool operator !=(in Address.CheckSum x, in Address.CheckSum y) Parameters Type Name Description Address.CheckSum x Address.CheckSum y Returns Type Description Boolean"
  },
  "api/AlgoSdk.Address.html": {
    "href": "api/AlgoSdk.Address.html",
    "title": "Struct Address | Unity Algorand SDK",
    "keywords": "Struct Address A public key for an Algorand account. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Address : IByteArray, IEquatable<Address> Fields Empty Declaration public static readonly Address Empty Field Value Type Description Address SizeBytes Declaration public const int SizeBytes = default(int) Field Value Type Description Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public int Length { get; } Property Value Type Description Int32 Methods Equals(Address) Declaration public bool Equals(Address other) Parameters Type Name Description Address other Returns Type Description Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) FromPublicKey(Ed25519.PublicKey) Declaration public static Address FromPublicKey(Ed25519.PublicKey publicKey) Parameters Type Name Description Ed25519.PublicKey publicKey Returns Type Description Address FromString(String) Declaration public static Address FromString(string addressString) Parameters Type Name Description String addressString Returns Type Description Address FromString<TString>(TString) Declaration public static Address FromString<TString>(TString s) where TString : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description TString s Returns Type Description Address Type Parameters Name Description TString GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void * ToFixedString() Declaration public FixedString128Bytes ToFixedString() Returns Type Description FixedString128Bytes ToPublicKey() Declaration public Ed25519.PublicKey ToPublicKey() Returns Type Description Ed25519.PublicKey ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators Equality(Address, Address) Declaration public static bool operator ==(in Address a1, in Address a2) Parameters Type Name Description Address a1 Address a2 Returns Type Description Boolean Implicit(Address to Ed25519.PublicKey) Declaration public static implicit operator Ed25519.PublicKey(Address address) Parameters Type Name Description Address address Returns Type Description Ed25519.PublicKey Implicit(Address to String) Declaration public static implicit operator string (Address addr) Parameters Type Name Description Address addr Returns Type Description String Implicit(Ed25519.PublicKey to Address) Declaration public static implicit operator Address(Ed25519.PublicKey publicKey) Parameters Type Name Description Ed25519.PublicKey publicKey Returns Type Description Address Implicit(Sha512_256_Hash to Address) Declaration public static implicit operator Address(Sha512_256_Hash checksum) Parameters Type Name Description Sha512_256_Hash checksum Returns Type Description Address Implicit(String to Address) Declaration public static implicit operator Address(string s) Parameters Type Name Description String s Returns Type Description Address Inequality(Address, Address) Declaration public static bool operator !=(in Address a1, in Address a2) Parameters Type Name Description Address a1 Address a2 Returns Type Description Boolean"
  },
  "api/AlgoSdk.AddressRole.html": {
    "href": "api/AlgoSdk.AddressRole.html",
    "title": "Enum AddressRole | Unity Algorand SDK",
    "keywords": "Enum AddressRole Role of an address for a transaction. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum AddressRole : byte Fields Name Description FreezeTarget None Receiver Sender"
  },
  "api/AlgoSdk.AddressRoleExtensions.html": {
    "href": "api/AlgoSdk.AddressRoleExtensions.html",
    "title": "Class AddressRoleExtensions | Unity Algorand SDK",
    "keywords": "Class AddressRoleExtensions Inheritance Object AddressRoleExtensions Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class AddressRoleExtensions Fields TypeToString Declaration public static readonly string[] TypeToString Field Value Type Description String [] Methods ToFixedString(AddressRole) Declaration public static FixedString32Bytes ToFixedString(this AddressRole addrRole) Parameters Type Name Description AddressRole addrRole Returns Type Description FixedString32Bytes ToOptionalFixedString(AddressRole) Declaration public static Optional<FixedString32Bytes> ToOptionalFixedString(this AddressRole addressRole) Parameters Type Name Description AddressRole addressRole Returns Type Description Optional < FixedString32Bytes >"
  },
  "api/AlgoSdk.AlgoApiField-1.EqualityComparer.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.EqualityComparer.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.EqualityComparer | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.EqualityComparer Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate bool EqualityComparer(TAlgoApiObject messagePackObject, TAlgoApiObject other); Parameters Type Name Description TAlgoApiObject messagePackObject TAlgoApiObject other Returns Type Description Boolean"
  },
  "api/AlgoSdk.AlgoApiField-1.FieldGetter-1.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.FieldGetter-1.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.FieldGetter<T> | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.FieldGetter<T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate T FieldGetter<T>(TAlgoApiObject messagePackObject); Parameters Type Name Description TAlgoApiObject messagePackObject Returns Type Description T Type Parameters Name Description T"
  },
  "api/AlgoSdk.AlgoApiField-1.FieldSetter-1.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.FieldSetter-1.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.FieldSetter<T> | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.FieldSetter<T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate void FieldSetter<T>(ref TAlgoApiObject messagePackObject, T value); Parameters Type Name Description TAlgoApiObject messagePackObject T value Type Parameters Name Description T"
  },
  "api/AlgoSdk.AlgoApiField-1.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.html",
    "title": "Class AlgoApiField<TAlgoApiObject> | Unity Algorand SDK",
    "keywords": "Class AlgoApiField<TAlgoApiObject> Inheritance Object AlgoApiField<TAlgoApiObject> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public class AlgoApiField<TAlgoApiObject> where TAlgoApiObject : struct Type Parameters Name Description TAlgoApiObject Constructors AlgoApiField(AlgoApiField<TAlgoApiObject>.MessagePackDeserializer, AlgoApiField<TAlgoApiObject>.MessagePackSerializer, AlgoApiField<TAlgoApiObject>.JsonDeserializer, AlgoApiField<TAlgoApiObject>.JsonSerializer, AlgoApiField<TAlgoApiObject>.SerializePredicate, AlgoApiField<TAlgoApiObject>.EqualityComparer) Declaration public AlgoApiField(AlgoApiField<TAlgoApiObject>.MessagePackDeserializer deserializeMessagePack, AlgoApiField<TAlgoApiObject>.MessagePackSerializer serializeMessagePack, AlgoApiField<TAlgoApiObject>.JsonDeserializer deserializeJson, AlgoApiField<TAlgoApiObject>.JsonSerializer serializeJson, AlgoApiField<TAlgoApiObject>.SerializePredicate shouldSerialize, AlgoApiField<TAlgoApiObject>.EqualityComparer fieldsEqual) Parameters Type Name Description AlgoApiField.MessagePackDeserializer <> deserializeMessagePack AlgoApiField.MessagePackSerializer <> serializeMessagePack AlgoApiField.JsonDeserializer <> deserializeJson AlgoApiField.JsonSerializer <> serializeJson AlgoApiField.SerializePredicate <> shouldSerialize AlgoApiField.EqualityComparer <> fieldsEqual Fields DeserializeJson Declaration public readonly AlgoApiField<TAlgoApiObject>.JsonDeserializer DeserializeJson Field Value Type Description AlgoApiField.JsonDeserializer <> DeserializeMessagePack Declaration public readonly AlgoApiField<TAlgoApiObject>.MessagePackDeserializer DeserializeMessagePack Field Value Type Description AlgoApiField.MessagePackDeserializer <> FieldsEqual Declaration public readonly AlgoApiField<TAlgoApiObject>.EqualityComparer FieldsEqual Field Value Type Description AlgoApiField.EqualityComparer <> SerializeJson Declaration public readonly AlgoApiField<TAlgoApiObject>.JsonSerializer SerializeJson Field Value Type Description AlgoApiField.JsonSerializer <> SerializeMessagePack Declaration public readonly AlgoApiField<TAlgoApiObject>.MessagePackSerializer SerializeMessagePack Field Value Type Description AlgoApiField.MessagePackSerializer <> ShouldSerialize Declaration public readonly AlgoApiField<TAlgoApiObject>.SerializePredicate ShouldSerialize Field Value Type Description AlgoApiField.SerializePredicate <> Methods Assign<T>(AlgoApiField<TAlgoApiObject>.FieldGetter<T>, AlgoApiField<TAlgoApiObject>.FieldSetter<T>) Declaration public static AlgoApiField<TAlgoApiObject> Assign<T>(AlgoApiField<TAlgoApiObject>.FieldGetter<T> getter, AlgoApiField<TAlgoApiObject>.FieldSetter<T> setter) where T : IEquatable<T> Parameters Type Name Description AlgoApiField.FieldGetter <T> getter AlgoApiField.FieldSetter <T> setter Returns Type Description AlgoApiField <TAlgoApiObject> Type Parameters Name Description T Assign<T>(AlgoApiField<TAlgoApiObject>.FieldGetter<T>, AlgoApiField<TAlgoApiObject>.FieldSetter<T>, AlgoApiField<TAlgoApiObject>.EqualityComparer, AlgoApiField<TAlgoApiObject>.SerializePredicate) Declaration public static AlgoApiField<TAlgoApiObject> Assign<T>(AlgoApiField<TAlgoApiObject>.FieldGetter<T> getter, AlgoApiField<TAlgoApiObject>.FieldSetter<T> setter, AlgoApiField<TAlgoApiObject>.EqualityComparer fieldsEqual, AlgoApiField<TAlgoApiObject>.SerializePredicate shouldSerialize) Parameters Type Name Description AlgoApiField.FieldGetter <T> getter AlgoApiField.FieldSetter <T> setter AlgoApiField.EqualityComparer <> fieldsEqual AlgoApiField.SerializePredicate <> shouldSerialize Returns Type Description AlgoApiField <TAlgoApiObject> Type Parameters Name Description T Assign<T>(AlgoApiField<TAlgoApiObject>.FieldGetter<T>, AlgoApiField<TAlgoApiObject>.FieldSetter<T>, IEqualityComparer<T>) Declaration public static AlgoApiField<TAlgoApiObject> Assign<T>(AlgoApiField<TAlgoApiObject>.FieldGetter<T> getter, AlgoApiField<TAlgoApiObject>.FieldSetter<T> setter, IEqualityComparer<T> comparer) Parameters Type Name Description AlgoApiField.FieldGetter <T> getter AlgoApiField.FieldSetter <T> setter IEqualityComparer <T> comparer Returns Type Description AlgoApiField <TAlgoApiObject> Type Parameters Name Description T"
  },
  "api/AlgoSdk.AlgoApiField-1.JsonDeserializer.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.JsonDeserializer.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.JsonDeserializer | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.JsonDeserializer Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate void JsonDeserializer(ref TAlgoApiObject obj, ref JsonReader reader); Parameters Type Name Description TAlgoApiObject obj JsonReader reader"
  },
  "api/AlgoSdk.AlgoApiField-1.JsonSerializer.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.JsonSerializer.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.JsonSerializer | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.JsonSerializer Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate void JsonSerializer(TAlgoApiObject obj, ref JsonWriter writer); Parameters Type Name Description TAlgoApiObject obj JsonWriter writer"
  },
  "api/AlgoSdk.AlgoApiField-1.Map-1.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.Map-1.html",
    "title": "Class AlgoApiField<TAlgoApiObject>.Map<TKey> | Unity Algorand SDK",
    "keywords": "Class AlgoApiField<TAlgoApiObject>.Map<TKey> Inheritance Object SortedDictionary <TKey, AlgoApiField <TAlgoApiObject>> AlgoApiField<TAlgoApiObject>.Map<TKey> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public class Map<TKey> : SortedDictionary<TKey, AlgoApiField<TAlgoApiObject>>, IDictionary<TKey, AlgoApiField<TAlgoApiObject>>, ICollection<KeyValuePair<TKey, AlgoApiField<TAlgoApiObject>>>, IDictionary, ICollection, IReadOnlyDictionary<TKey, AlgoApiField<TAlgoApiObject>>, IReadOnlyCollection<KeyValuePair<TKey, AlgoApiField<TAlgoApiObject>>>, IEnumerable<KeyValuePair<TKey, AlgoApiField<TAlgoApiObject>>>, IEnumerable where TKey : struct, INativeList<byte>, IUTF8Bytes Type Parameters Name Description TKey Methods Assign<T>(TKey, AlgoApiField<TAlgoApiObject>.FieldGetter<T>, AlgoApiField<TAlgoApiObject>.FieldSetter<T>) Declaration public AlgoApiField<TAlgoApiObject>.Map<TKey> Assign<T>(TKey key, AlgoApiField<TAlgoApiObject>.FieldGetter<T> getter, AlgoApiField<TAlgoApiObject>.FieldSetter<T> setter) where T : IEquatable<T> Parameters Type Name Description TKey key AlgoApiField.FieldGetter <T> getter AlgoApiField.FieldSetter <T> setter Returns Type Description AlgoApiField.Map <TKey> Type Parameters Name Description T Assign<T>(TKey, AlgoApiField<TAlgoApiObject>.FieldGetter<T>, AlgoApiField<TAlgoApiObject>.FieldSetter<T>, IEqualityComparer<T>) Declaration public AlgoApiField<TAlgoApiObject>.Map<TKey> Assign<T>(TKey key, AlgoApiField<TAlgoApiObject>.FieldGetter<T> getter, AlgoApiField<TAlgoApiObject>.FieldSetter<T> setter, IEqualityComparer<T> comparer) Parameters Type Name Description TKey key AlgoApiField.FieldGetter <T> getter AlgoApiField.FieldSetter <T> setter IEqualityComparer <T> comparer Returns Type Description AlgoApiField.Map <TKey> Type Parameters Name Description T GetField(TKey) Declaration public AlgoApiField<TAlgoApiObject> GetField(TKey key) Parameters Type Name Description TKey key Returns Type Description AlgoApiField <TAlgoApiObject> GetFieldsToSerialize(TAlgoApiObject, Allocator) Declaration public NativeList<TKey> GetFieldsToSerialize(TAlgoApiObject obj, Allocator allocator) Parameters Type Name Description TAlgoApiObject obj Allocator allocator Returns Type Description NativeList <TKey>"
  },
  "api/AlgoSdk.AlgoApiField-1.MessagePackDeserializer.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.MessagePackDeserializer.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.MessagePackDeserializer | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.MessagePackDeserializer Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate void MessagePackDeserializer(ref TAlgoApiObject obj, ref MessagePackReader reader); Parameters Type Name Description TAlgoApiObject obj MessagePackReader reader"
  },
  "api/AlgoSdk.AlgoApiField-1.MessagePackSerializer.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.MessagePackSerializer.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.MessagePackSerializer | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.MessagePackSerializer Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate void MessagePackSerializer(TAlgoApiObject obj, ref MessagePackWriter writer); Parameters Type Name Description TAlgoApiObject obj MessagePackWriter writer"
  },
  "api/AlgoSdk.AlgoApiField-1.SerializePredicate.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.SerializePredicate.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.SerializePredicate | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.SerializePredicate Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate bool SerializePredicate(TAlgoApiObject messagePackObject); Parameters Type Name Description TAlgoApiObject messagePackObject Returns Type Description Boolean"
  },
  "api/AlgoSdk.AlgoApiFieldAttribute.html": {
    "href": "api/AlgoSdk.AlgoApiFieldAttribute.html",
    "title": "Class AlgoApiFieldAttribute | Unity Algorand SDK",
    "keywords": "Class AlgoApiFieldAttribute Inheritance Object AlgoApiFieldAttribute Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public sealed class AlgoApiFieldAttribute : Attribute Constructors AlgoApiFieldAttribute(String) Declaration public AlgoApiFieldAttribute(string name) Parameters Type Name Description String name Properties Name Declaration public string Name { get; } Property Value Type Description String"
  },
  "api/AlgoSdk.AlgoApiFormatterAttribute.html": {
    "href": "api/AlgoSdk.AlgoApiFormatterAttribute.html",
    "title": "Class AlgoApiFormatterAttribute | Unity Algorand SDK",
    "keywords": "Class AlgoApiFormatterAttribute Inheritance Object ProvideSourceInfoAttribute AlgoApiFormatterAttribute Inherited Members ProvideSourceInfoAttribute.Member ProvideSourceInfoAttribute.LineNumber ProvideSourceInfoAttribute.AssetPath ProvideSourceInfoAttribute.AbsoluteFilePath Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public sealed class AlgoApiFormatterAttribute : ProvideSourceInfoAttribute Constructors AlgoApiFormatterAttribute(Type, String, String, Int32) Declaration public AlgoApiFormatterAttribute(Type formatterType, string member = \"\", string filePath = \"\", int lineNumber = 0) Parameters Type Name Description Type formatterType String member String filePath Int32 lineNumber Properties FormatterType Declaration public Type FormatterType { get; } Property Value Type Description Type"
  },
  "api/AlgoSdk.AlgoApiFormatterCache-1.html": {
    "href": "api/AlgoSdk.AlgoApiFormatterCache-1.html",
    "title": "Class AlgoApiFormatterCache<T> | Unity Algorand SDK",
    "keywords": "Class AlgoApiFormatterCache<T> Inheritance Object AlgoApiFormatterCache<T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class AlgoApiFormatterCache<T> Type Parameters Name Description T Fields Formatter Declaration public static readonly IAlgoApiFormatter<T> Formatter Field Value Type Description IAlgoApiFormatter <T>"
  },
  "api/AlgoSdk.AlgoApiFormatterLookup.html": {
    "href": "api/AlgoSdk.AlgoApiFormatterLookup.html",
    "title": "Class AlgoApiFormatterLookup | Unity Algorand SDK",
    "keywords": "Class AlgoApiFormatterLookup Inheritance Object Dictionary < Type , Object > AlgoApiFormatterLookup Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public class AlgoApiFormatterLookup : Dictionary<Type, object>, IDictionary<Type, object>, ICollection<KeyValuePair<Type, object>>, IDictionary, ICollection, IReadOnlyDictionary<Type, object>, IReadOnlyCollection<KeyValuePair<Type, object>>, IEnumerable<KeyValuePair<Type, object>>, IEnumerable, ISerializable, IDeserializationCallback Fields AddFormatterMethodName Declaration public const string AddFormatterMethodName = \"Add\" Field Value Type Description String Methods Add<T>(IAlgoApiFormatter<T>) Declaration public static void Add<T>(IAlgoApiFormatter<T> formatter) Parameters Type Name Description IAlgoApiFormatter <T> formatter Type Parameters Name Description T Get<T>() Declaration public static IAlgoApiFormatter<T> Get<T>() Returns Type Description IAlgoApiFormatter <T> Type Parameters Name Description T"
  },
  "api/AlgoSdk.AlgoApiObject.html": {
    "href": "api/AlgoSdk.AlgoApiObject.html",
    "title": "Struct AlgoApiObject | Unity Algorand SDK",
    "keywords": "Struct AlgoApiObject A non-deserialized object from an algorand service. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AlgoApiObject : IEquatable<AlgoApiObject> Constructors AlgoApiObject(Byte[], ContentType) Declaration public AlgoApiObject(byte[] data, ContentType contentType) Parameters Type Name Description Byte [] data ContentType contentType Properties IsJson if this is a json object. Declaration public bool IsJson { get; } Property Value Type Description Boolean IsMessagePack if this is a messagepack object. Declaration public bool IsMessagePack { get; } Property Value Type Description Boolean Json Raw json if the response had Json encoded as UTF8. Declaration public byte[] Json { get; } Property Value Type Description Byte [] MessagePack Raw message pack if the response had MessagePack Declaration public byte[] MessagePack { get; } Property Value Type Description Byte [] Methods Equals(AlgoApiObject) Declaration public bool Equals(AlgoApiObject other) Parameters Type Name Description AlgoApiObject other Returns Type Description Boolean Operators Implicit(NativeArray<Byte> to AlgoApiObject) Declaration public static implicit operator AlgoApiObject(NativeArray<byte> msgpack) Parameters Type Name Description NativeArray < Byte > msgpack Returns Type Description AlgoApiObject Implicit(NativeList<Byte> to AlgoApiObject) Declaration public static implicit operator AlgoApiObject(NativeList<byte> msgpack) Parameters Type Name Description NativeList < Byte > msgpack Returns Type Description AlgoApiObject Implicit(NativeText to AlgoApiObject) Declaration public static implicit operator AlgoApiObject(NativeText json) Parameters Type Name Description NativeText json Returns Type Description AlgoApiObject Implicit(Byte[] to AlgoApiObject) Declaration public static implicit operator AlgoApiObject(byte[] msgpack) Parameters Type Name Description Byte [] msgpack Returns Type Description AlgoApiObject Implicit(String to AlgoApiObject) Declaration public static implicit operator AlgoApiObject(string json) Parameters Type Name Description String json Returns Type Description AlgoApiObject"
  },
  "api/AlgoSdk.AlgoApiObjectAttribute.html": {
    "href": "api/AlgoSdk.AlgoApiObjectAttribute.html",
    "title": "Class AlgoApiObjectAttribute | Unity Algorand SDK",
    "keywords": "Class AlgoApiObjectAttribute Inheritance Object ProvideSourceInfoAttribute AlgoApiObjectAttribute Inherited Members ProvideSourceInfoAttribute.Member ProvideSourceInfoAttribute.LineNumber ProvideSourceInfoAttribute.AssetPath ProvideSourceInfoAttribute.AbsoluteFilePath Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public sealed class AlgoApiObjectAttribute : ProvideSourceInfoAttribute Constructors AlgoApiObjectAttribute(String, String, Int32) Declaration public AlgoApiObjectAttribute(string member = \"\", string filePath = \"\", int lineNumber = 0) Parameters Type Name Description String member String filePath Int32 lineNumber Fields IsStrict Determines if unknown keys should throw an error. Declaration public bool IsStrict Field Value Type Description Boolean"
  },
  "api/AlgoSdk.AlgoApiObjectFormatter.html": {
    "href": "api/AlgoSdk.AlgoApiObjectFormatter.html",
    "title": "Class AlgoApiObjectFormatter | Unity Algorand SDK",
    "keywords": "Class AlgoApiObjectFormatter Inheritance Object AlgoApiObjectFormatter Implements IAlgoApiFormatter < AlgoApiObject > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public class AlgoApiObjectFormatter : IAlgoApiFormatter<AlgoApiObject> Methods Deserialize(ref JsonReader) Declaration public AlgoApiObject Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description AlgoApiObject Deserialize(ref MessagePackReader) Declaration public AlgoApiObject Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description AlgoApiObject Serialize(ref JsonWriter, AlgoApiObject) Declaration public void Serialize(ref JsonWriter writer, AlgoApiObject value) Parameters Type Name Description JsonWriter writer AlgoApiObject value Serialize(ref MessagePackWriter, AlgoApiObject) Declaration public void Serialize(ref MessagePackWriter writer, AlgoApiObject value) Parameters Type Name Description MessagePackWriter writer AlgoApiObject value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.AlgoApiObjectFormatter-1.html": {
    "href": "api/AlgoSdk.AlgoApiObjectFormatter-1.html",
    "title": "Class AlgoApiObjectFormatter<T> | Unity Algorand SDK",
    "keywords": "Class AlgoApiObjectFormatter<T> Inheritance Object AlgoApiObjectFormatter<T> Implements IAlgoApiFormatter <T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public class AlgoApiObjectFormatter<T> : IAlgoApiFormatter<T> where T : struct Type Parameters Name Description T Constructors AlgoApiObjectFormatter(Boolean) Declaration public AlgoApiObjectFormatter(bool isStrict) Parameters Type Name Description Boolean isStrict Methods Assign<TField>(String, AlgoApiField<T>.FieldGetter<TField>, AlgoApiField<T>.FieldSetter<TField>) Declaration public AlgoApiObjectFormatter<T> Assign<TField>(string key, AlgoApiField<T>.FieldGetter<TField> getter, AlgoApiField<T>.FieldSetter<TField> setter) where TField : IEquatable<TField> Parameters Type Name Description String key AlgoApiField.FieldGetter <TField> getter AlgoApiField.FieldSetter <TField> setter Returns Type Description AlgoApiObjectFormatter <T> Type Parameters Name Description TField Assign<TField>(String, AlgoApiField<T>.FieldGetter<TField>, AlgoApiField<T>.FieldSetter<TField>, IEqualityComparer<TField>) Declaration public AlgoApiObjectFormatter<T> Assign<TField>(string key, AlgoApiField<T>.FieldGetter<TField> getter, AlgoApiField<T>.FieldSetter<TField> setter, IEqualityComparer<TField> comparer) Parameters Type Name Description String key AlgoApiField.FieldGetter <TField> getter AlgoApiField.FieldSetter <TField> setter IEqualityComparer <TField> comparer Returns Type Description AlgoApiObjectFormatter <T> Type Parameters Name Description TField Deserialize(ref JsonReader) Declaration public T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration public T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Serialize(ref JsonWriter, T) Declaration public void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref MessagePackWriter, T) Declaration public void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.AlgoApiRequest.Awaiter.html": {
    "href": "api/AlgoSdk.AlgoApiRequest.Awaiter.html",
    "title": "Struct AlgoApiRequest.Awaiter | Unity Algorand SDK",
    "keywords": "Struct AlgoApiRequest.Awaiter A Task Awaiter for Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Awaiter : ICriticalNotifyCompletion Constructors Awaiter(UniTask<UnityWebRequest>.Awaiter) Declaration public Awaiter(UniTask<UnityWebRequest>.Awaiter uniTaskAwaiter) Parameters Type Name Description UniTask.Awaiter <> uniTaskAwaiter Properties IsCompleted Declaration public bool IsCompleted { get; } Property Value Type Description Boolean Methods GetResult() Declaration public AlgoApiResponse GetResult() Returns Type Description AlgoApiResponse OnCompleted(Action) Declaration public void OnCompleted(Action continuation) Parameters Type Name Description Action continuation UnsafeOnCompleted(Action) Declaration public void UnsafeOnCompleted(Action continuation) Parameters Type Name Description Action continuation"
  },
  "api/AlgoSdk.AlgoApiRequest.Awaiter-1.html": {
    "href": "api/AlgoSdk.AlgoApiRequest.Awaiter-1.html",
    "title": "Struct AlgoApiRequest.Awaiter<TResponse> | Unity Algorand SDK",
    "keywords": "Struct AlgoApiRequest.Awaiter<TResponse> A Task Awaiter for Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Awaiter<TResponse> : ICriticalNotifyCompletion Type Parameters Name Description TResponse Constructors Awaiter(UniTask<UnityWebRequest>.Awaiter) Declaration public Awaiter(UniTask<UnityWebRequest>.Awaiter uniTaskAwaiter) Parameters Type Name Description UniTask.Awaiter <> uniTaskAwaiter Properties IsCompleted Declaration public bool IsCompleted { get; } Property Value Type Description Boolean Methods GetResult() Declaration public AlgoApiResponse<TResponse> GetResult() Returns Type Description AlgoApiResponse <TResponse> OnCompleted(Action) Declaration public void OnCompleted(Action continuation) Parameters Type Name Description Action continuation UnsafeOnCompleted(Action) Declaration public void UnsafeOnCompleted(Action continuation) Parameters Type Name Description Action continuation"
  },
  "api/AlgoSdk.AlgoApiRequest.html": {
    "href": "api/AlgoSdk.AlgoApiRequest.html",
    "title": "Struct AlgoApiRequest | Unity Algorand SDK",
    "keywords": "Struct AlgoApiRequest A wrapper around for handling requests to Algorand REST services. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AlgoApiRequest Methods Delete(String) Create a DELETE request Declaration public static AlgoApiRequest Delete(string url) Parameters Type Name Description String url The url for this request Returns Type Description AlgoApiRequest A new DELETE request Get(String) Create a GET request Declaration public static AlgoApiRequest Get(string url) Parameters Type Name Description String url The url for this request Returns Type Description AlgoApiRequest A new GET request Post(String) Create a POST request Declaration public static AlgoApiRequest Post(string url) Parameters Type Name Description String url The url for this request Returns Type Description AlgoApiRequest A new POST request Send(CancellationToken) Send the request. Declaration public AlgoApiRequest.Sent Send(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken An optional cancellation token Returns Type Description AlgoApiRequest.Sent A AlgoApiRequest.Sent request Send<TProgress>(TProgress, CancellationToken) Send the request and check progress callbacks using Declaration public AlgoApiRequest.SentWithProgress<TProgress> Send<TProgress>(TProgress progress, CancellationToken cancellationToken = null) where TProgress : IProgress<float> Parameters Type Name Description TProgress progress The progress callback CancellationToken cancellationToken An optional cancellation token Returns Type Description AlgoApiRequest.SentWithProgress <TProgress> A AlgoApiRequest.SentWithProgress<TProgress> request Type Parameters Name Description TProgress A progress callback implementing SetHeaders(Header[]) Set additional headers on this request Declaration public AlgoApiRequest SetHeaders(params Header[] headers) Parameters Type Name Description Header [] headers The headers in format \"key:value\" Returns Type Description AlgoApiRequest this request with headers set SetJsonBody(NativeText) Set body of the request, and set its content type header to \"application/json\" Declaration public AlgoApiRequest SetJsonBody(NativeText json) Parameters Type Name Description NativeText json The utf8 json to set the body of the request Returns Type Description AlgoApiRequest this request with body and header set SetJsonBody(String) Set body of the request, and set its content type header to \"application/json\" Declaration public AlgoApiRequest SetJsonBody(string json) Parameters Type Name Description String json The utf8 json to set the body of the request Returns Type Description AlgoApiRequest this request with body and header set SetJsonBody<TBody>(TBody) Set body of the request, and set its content type header to \"application/json\" Declaration public AlgoApiRequest SetJsonBody<TBody>(TBody value) Parameters Type Name Description TBody value An object to serialize into json, then to set in the body of the request Returns Type Description AlgoApiRequest this request with body and header set Type Parameters Name Description TBody Type of the object to serialize SetMessagePackBody(NativeArray<Byte>.ReadOnly) Set body of the request and set its content type header to \"application/msgpack\" Declaration public AlgoApiRequest SetMessagePackBody(NativeArray<byte>.ReadOnly bytes) Parameters Type Name Description NativeArray.ReadOnly <> bytes The msgpack bytes to set for the body Returns Type Description AlgoApiRequest this request with body and header set SetMessagePackBody(Byte[]) Set body of the request and set its content type header to \"application/msgpack\" Declaration public AlgoApiRequest SetMessagePackBody(byte[] bytes) Parameters Type Name Description Byte [] bytes The msgpack bytes to set for the body Returns Type Description AlgoApiRequest this request with body and header set SetMessagePackBody<TBody>(TBody) Set body of the request and set its content type header to \"application/msgpack\" Declaration public AlgoApiRequest SetMessagePackBody<TBody>(TBody value) Parameters Type Name Description TBody value The value to serialize to message pack and set for the body Returns Type Description AlgoApiRequest this request with body and header set Type Parameters Name Description TBody SetPlainTextBody(Byte[]) Set body of the request, and set its content type header to \"application/text\" Declaration public AlgoApiRequest SetPlainTextBody(byte[] plainText) Parameters Type Name Description Byte [] plainText The utf8 plaintext to use for the body Returns Type Description AlgoApiRequest this request with body and header set SetPlainTextBody(String) Set body of the request, and set its content type header to \"application/text\" Declaration public AlgoApiRequest SetPlainTextBody(string plainText) Parameters Type Name Description String plainText The utf8 plaintext to use for the body Returns Type Description AlgoApiRequest this request with body and header set SetRawBody(Byte[], ContentType) Set the body and content type header of the request Declaration public AlgoApiRequest SetRawBody(byte[] data, ContentType contentType) Parameters Type Name Description Byte [] data The raw bytes to set for the body ContentType contentType The content type to set the header of the request Returns Type Description AlgoApiRequest this request with body and header set SetToken(String, String) Set the token used for authenticating to the service. Declaration public AlgoApiRequest SetToken(string tokenHeader, string token) Parameters Type Name Description String tokenHeader The name of the request header used for the token. String token The token used for authenticating to the service. Returns Type Description AlgoApiRequest with token set"
  },
  "api/AlgoSdk.AlgoApiRequest.Sent.html": {
    "href": "api/AlgoSdk.AlgoApiRequest.Sent.html",
    "title": "Struct AlgoApiRequest.Sent | Unity Algorand SDK",
    "keywords": "Struct AlgoApiRequest.Sent A wrapper around the handling the sent request. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Sent Constructors Sent(UnityWebRequestAsyncOperation, CancellationToken) Declaration public Sent(UnityWebRequestAsyncOperation asyncOperation, CancellationToken cancellationToken = null) Parameters Type Name Description UnityWebRequestAsyncOperation asyncOperation CancellationToken cancellationToken Properties AsyncOperation Declaration public UnityWebRequestAsyncOperation AsyncOperation { get; } Property Value Type Description UnityWebRequestAsyncOperation Methods CastResponse<TResponse>() Declaration public AlgoApiRequest.Sent<TResponse> CastResponse<TResponse>() Returns Type Description AlgoApiRequest.Sent <TResponse> Type Parameters Name Description TResponse GetAwaiter() Declaration public AlgoApiRequest.Awaiter GetAwaiter() Returns Type Description AlgoApiRequest.Awaiter WithCancellation(CancellationToken) Declaration public AlgoApiRequest.Sent WithCancellation(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description AlgoApiRequest.Sent WithProgress<TProgress>(TProgress) Declaration public AlgoApiRequest.SentWithProgress<TProgress> WithProgress<TProgress>(TProgress progress) where TProgress : IProgress<float> Parameters Type Name Description TProgress progress Returns Type Description AlgoApiRequest.SentWithProgress <TProgress> Type Parameters Name Description TProgress"
  },
  "api/AlgoSdk.AlgoApiRequest.Sent-1.html": {
    "href": "api/AlgoSdk.AlgoApiRequest.Sent-1.html",
    "title": "Struct AlgoApiRequest.Sent<TResponse> | Unity Algorand SDK",
    "keywords": "Struct AlgoApiRequest.Sent<TResponse> A wrapper around the handling the sent request. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Sent<TResponse> Type Parameters Name Description TResponse Constructors Sent(UnityWebRequestAsyncOperation, CancellationToken) Declaration public Sent(UnityWebRequestAsyncOperation asyncOperation, CancellationToken cancellationToken = null) Parameters Type Name Description UnityWebRequestAsyncOperation asyncOperation CancellationToken cancellationToken Properties AsyncOperation Declaration public UnityWebRequestAsyncOperation AsyncOperation { get; } Property Value Type Description UnityWebRequestAsyncOperation Methods GetAwaiter() Declaration public AlgoApiRequest.Awaiter<TResponse> GetAwaiter() Returns Type Description AlgoApiRequest.Awaiter <TResponse> WithCancellation(CancellationToken) Declaration public AlgoApiRequest.Sent<TResponse> WithCancellation(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description AlgoApiRequest.Sent <TResponse> WithProgress<TProgress>(TProgress) Declaration public AlgoApiRequest.SentWithProgress<TResponse, TProgress> WithProgress<TProgress>(TProgress progress) where TProgress : IProgress<float> Parameters Type Name Description TProgress progress Returns Type Description AlgoApiRequest.SentWithProgress <TResponse, TProgress> Type Parameters Name Description TProgress Operators Implicit(AlgoApiRequest.Sent to AlgoApiRequest.Sent<TResponse>) Declaration public static implicit operator AlgoApiRequest.Sent<TResponse>(AlgoApiRequest.Sent sent) Parameters Type Name Description AlgoApiRequest.Sent sent Returns Type Description AlgoApiRequest.Sent <TResponse>"
  },
  "api/AlgoSdk.AlgoApiRequest.SentWithProgress-1.html": {
    "href": "api/AlgoSdk.AlgoApiRequest.SentWithProgress-1.html",
    "title": "Struct AlgoApiRequest.SentWithProgress<TProgress> | Unity Algorand SDK",
    "keywords": "Struct AlgoApiRequest.SentWithProgress<TProgress> A wrapper around the handling the sent request. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct SentWithProgress<TProgress> where TProgress : IProgress<float> Type Parameters Name Description TProgress Constructors SentWithProgress(UnityWebRequestAsyncOperation, TProgress, CancellationToken) Declaration public SentWithProgress(UnityWebRequestAsyncOperation asyncOperation, TProgress progress, CancellationToken cancellationToken = null) Parameters Type Name Description UnityWebRequestAsyncOperation asyncOperation TProgress progress CancellationToken cancellationToken Properties AsyncOperation Declaration public UnityWebRequestAsyncOperation AsyncOperation { get; } Property Value Type Description UnityWebRequestAsyncOperation Methods CastResponse<TResponse>() Declaration public AlgoApiRequest.SentWithProgress<TResponse, TProgress> CastResponse<TResponse>() Returns Type Description AlgoApiRequest.SentWithProgress <TResponse, TProgress> Type Parameters Name Description TResponse GetAwaiter() Declaration public AlgoApiRequest.Awaiter GetAwaiter() Returns Type Description AlgoApiRequest.Awaiter WithCancellation(CancellationToken) Declaration public AlgoApiRequest.SentWithProgress<TProgress> WithCancellation(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description AlgoApiRequest.SentWithProgress <TProgress>"
  },
  "api/AlgoSdk.AlgoApiRequest.SentWithProgress-2.html": {
    "href": "api/AlgoSdk.AlgoApiRequest.SentWithProgress-2.html",
    "title": "Struct AlgoApiRequest.SentWithProgress<TResponse, TProgress> | Unity Algorand SDK",
    "keywords": "Struct AlgoApiRequest.SentWithProgress<TResponse, TProgress> A wrapper around the handling the sent request. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct SentWithProgress<TResponse, TProgress> where TProgress : IProgress<float> Type Parameters Name Description TResponse TProgress Constructors SentWithProgress(UnityWebRequestAsyncOperation, TProgress, CancellationToken) Declaration public SentWithProgress(UnityWebRequestAsyncOperation asyncOperation, TProgress progress, CancellationToken cancellationToken = null) Parameters Type Name Description UnityWebRequestAsyncOperation asyncOperation TProgress progress CancellationToken cancellationToken Properties AsyncOperation Declaration public UnityWebRequestAsyncOperation AsyncOperation { get; } Property Value Type Description UnityWebRequestAsyncOperation Methods GetAwaiter() Declaration public AlgoApiRequest.Awaiter<TResponse> GetAwaiter() Returns Type Description AlgoApiRequest.Awaiter <TResponse> WithCancellation(CancellationToken) Declaration public AlgoApiRequest.SentWithProgress<TResponse, TProgress> WithCancellation(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description AlgoApiRequest.SentWithProgress <TResponse, TProgress> Operators Implicit(AlgoApiRequest.SentWithProgress<TProgress> to AlgoApiRequest.SentWithProgress<TResponse, TProgress>) Declaration public static implicit operator AlgoApiRequest.SentWithProgress<TResponse, TProgress>(AlgoApiRequest.SentWithProgress<TProgress> sent) Parameters Type Name Description AlgoApiRequest.SentWithProgress <TProgress> sent Returns Type Description AlgoApiRequest.SentWithProgress <TResponse, TProgress>"
  },
  "api/AlgoSdk.AlgoApiResponse.html": {
    "href": "api/AlgoSdk.AlgoApiResponse.html",
    "title": "Struct AlgoApiResponse | Unity Algorand SDK",
    "keywords": "Struct AlgoApiResponse Wrapper class around a completed Implements IAlgoApiResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AlgoApiResponse : IAlgoApiResponse Constructors AlgoApiResponse(UnityWebRequest) Declaration public AlgoApiResponse(UnityWebRequest completedRequest) Parameters Type Name Description UnityWebRequest completedRequest Properties ContentType Declaration public ContentType ContentType { get; } Property Value Type Description ContentType Data Declaration public byte[] Data { get; } Property Value Type Description Byte [] Error Declaration public ErrorResponse Error { get; } Property Value Type Description ErrorResponse ResponseCode Declaration public long ResponseCode { get; } Property Value Type Description Int64 Status Declaration public Result Status { get; } Property Value Type Description Result Methods GetText() Declaration public string GetText() Returns Type Description String Implements IAlgoApiResponse"
  },
  "api/AlgoSdk.AlgoApiResponse-1.html": {
    "href": "api/AlgoSdk.AlgoApiResponse-1.html",
    "title": "Struct AlgoApiResponse<T> | Unity Algorand SDK",
    "keywords": "Struct AlgoApiResponse<T> Wrapper class around a completed . This can be deconstructed into a tuple of (ErrorResponse, Payload) Implements IAlgoApiResponse <T> IAlgoApiResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AlgoApiResponse<T> : IAlgoApiResponse<T>, IAlgoApiResponse Type Parameters Name Description T The type of the object deserialized from the response Constructors AlgoApiResponse(AlgoApiResponse) Declaration public AlgoApiResponse(AlgoApiResponse response) Parameters Type Name Description AlgoApiResponse response AlgoApiResponse(AlgoApiResponse, T) Declaration public AlgoApiResponse(AlgoApiResponse response, T payload) Parameters Type Name Description AlgoApiResponse response T payload AlgoApiResponse(AlgoApiResponse, ErrorResponse) Declaration public AlgoApiResponse(AlgoApiResponse response, ErrorResponse error) Parameters Type Name Description AlgoApiResponse response ErrorResponse error Properties ContentType Declaration public ContentType ContentType { get; } Property Value Type Description ContentType Data Declaration public byte[] Data { get; } Property Value Type Description Byte [] Error Declaration public ErrorResponse Error { get; } Property Value Type Description ErrorResponse Payload Declaration public T Payload { get; } Property Value Type Description T ResponseCode Declaration public long ResponseCode { get; } Property Value Type Description Int64 Status Declaration public Result Status { get; } Property Value Type Description Result Methods Deconstruct(out ErrorResponse, out T) Declaration public void Deconstruct(out ErrorResponse error, out T payload) Parameters Type Name Description ErrorResponse error T payload GetText() Declaration public string GetText() Returns Type Description String Operators Implicit(AlgoApiResponse to AlgoApiResponse<T>) Declaration public static implicit operator AlgoApiResponse<T>(AlgoApiResponse response) Parameters Type Name Description AlgoApiResponse response Returns Type Description AlgoApiResponse <T> Implicit(AlgoApiResponse<T> to AlgoApiResponse) Declaration public static implicit operator AlgoApiResponse(AlgoApiResponse<T> response) Parameters Type Name Description AlgoApiResponse <T> response Returns Type Description AlgoApiResponse Implements IAlgoApiResponse<T> IAlgoApiResponse"
  },
  "api/AlgoSdk.AlgoApiSerializer.html": {
    "href": "api/AlgoSdk.AlgoApiSerializer.html",
    "title": "Class AlgoApiSerializer | Unity Algorand SDK",
    "keywords": "Class AlgoApiSerializer Contains functions for serializing and deserializing AlgoSdk types Inheritance Object AlgoApiSerializer Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class AlgoApiSerializer Methods Deserialize<T>(NativeArray<Byte>, ContentType) Deserializes raw data based on its ContentType Declaration public static T Deserialize<T>(NativeArray<byte> bytes, ContentType contentType) Parameters Type Name Description NativeArray < Byte > bytes The raw data to deserialize ContentType contentType The content type of the raw data (Json | MessagePack) Returns Type Description T The data deserialized as T Type Parameters Name Description T The type to deserialize to Deserialize<T>(Byte[], ContentType) Deserializes raw data based on its ContentType Declaration public static T Deserialize<T>(byte[] bytes, ContentType contentType) Parameters Type Name Description Byte [] bytes The raw data to deserialize ContentType contentType The content type of the raw data (Json | MessagePack) Returns Type Description T The data deserialized as T Type Parameters Name Description T The type to deserialize to DeserializeJson<T>(NativeArray<Byte>) Deserialize JSON encoded as UTF8 bytes Declaration public static T DeserializeJson<T>(NativeArray<byte> bytes) Parameters Type Name Description NativeArray < Byte > bytes UTF8 Bytes that can be decoded into JSON Returns Type Description T The data deserialized as T Type Parameters Name Description T The type to deserialize the data into DeserializeJson<T>(NativeText) Deserialize JSON text into an object Declaration public static T DeserializeJson<T>(NativeText text) Parameters Type Name Description NativeText text The JSON text Returns Type Description T The data deserialized as T Type Parameters Name Description T The type of the object that will be deserialized into DeserializeJson<T>(Byte[]) Deserialize JSON encoded as UTF8 bytes Declaration public static T DeserializeJson<T>(byte[] bytes) Parameters Type Name Description Byte [] bytes UTF8 Bytes that can be decoded into JSON Returns Type Description T The data deserialized as T Type Parameters Name Description T The type to deserialize the data into DeserializeJson<T>(String) Deserialize JSON text into an object Declaration public static T DeserializeJson<T>(string text) Parameters Type Name Description String text The JSON text Returns Type Description T The data deserialized as T Type Parameters Name Description T The type of the object that will be deserialized into DeserializeMessagePack<T>(NativeArray<Byte>) Deserialize messagepack bytes into an object Declaration public static T DeserializeMessagePack<T>(NativeArray<byte> bytes) Parameters Type Name Description NativeArray < Byte > bytes The messagepack bytes Returns Type Description T The data deserialized as T Type Parameters Name Description T The type of the object that will be deserialized into DeserializeMessagePack<T>(Byte[]) Deserialize messagepack bytes into an object Declaration public static T DeserializeMessagePack<T>(byte[] bytes) Parameters Type Name Description Byte [] bytes The messagepack bytes Returns Type Description T The data deserialized as T Type Parameters Name Description T The type of the object that will be deserialized into SerializeJson<T>(T) Serialize an object into json text Declaration public static string SerializeJson<T>(T obj) Parameters Type Name Description T obj The object to serialize Returns Type Description String json text as a string Type Parameters Name Description T The type of the object that is serialized SerializeJson<T>(T, Allocator) Serialize an object into json text Declaration public static NativeText SerializeJson<T>(T obj, Allocator allocator) Parameters Type Name Description T obj The object to serialize Allocator allocator The allocator to use for the created text of json Returns Type Description NativeText A allocated from the given allocator Type Parameters Name Description T The type of the object that is serialized SerializeMessagePack<T>(T) Serialize an object into messagepack bytes Declaration public static byte[] SerializeMessagePack<T>(T obj) Parameters Type Name Description T obj The object to serialize Returns Type Description Byte [] The message pack message as an array of bytes Type Parameters Name Description T The type of the object that is serialized SerializeMessagePack<T>(T, Allocator) Serialize an object into messagepack bytes Declaration public static NativeList<byte> SerializeMessagePack<T>(T obj, Allocator allocator) Parameters Type Name Description T obj The object to serialize Allocator allocator The allocator to use for the created list of message pack bytes Returns Type Description NativeList < Byte > A allocated using the given allocator Type Parameters Name Description T The type of the object that is serialized"
  },
  "api/AlgoSdk.Algod.Account.html": {
    "href": "api/AlgoSdk.Algod.Account.html",
    "title": "Struct Account | Unity Algorand SDK",
    "keywords": "Struct Account Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct Account : IEquatable<Account> Properties Address the account public key Declaration public string Address { get; set; } Property Value Type Description String Amount [algo] total number of MicroAlgos in the account Declaration public ulong Amount { get; set; } Property Value Type Description UInt64 AmountWithoutPendingRewards specifies the amount of MicroAlgos in the account, without the pending rewards. Declaration public ulong AmountWithoutPendingRewards { get; set; } Property Value Type Description UInt64 AppsLocalState [appl] applications local data stored in this account. Note the raw object uses map[int] -> AppLocalState for this type. Declaration public ApplicationLocalState[] AppsLocalState { get; set; } Property Value Type Description ApplicationLocalState [] AppsTotalExtraPages [teap] the sum of all extra application program pages for this account. Declaration public Optional<ulong> AppsTotalExtraPages { get; set; } Property Value Type Description Optional < UInt64 > AppsTotalSchema [tsch] stores the sum of all of the local schemas and global schemas in this account. Note: the raw account uses StateSchema for this type. Declaration public ApplicationStateSchema AppsTotalSchema { get; set; } Property Value Type Description ApplicationStateSchema Assets [asset] assets held by this account. Note the raw object uses map[int] -> AssetHolding for this type. Declaration public AssetHolding[] Assets { get; set; } Property Value Type Description AssetHolding [] AuthAddr [spend] the address against which signing should be checked. If empty, the address of the current account is used. This field can be updated in any transaction by setting the RekeyTo field. Declaration public Address AuthAddr { get; set; } Property Value Type Description Address CreatedApps [appp] parameters of applications created by this account including app global data. Note: the raw account uses map[int] -> AppParams for this type. Declaration public Application[] CreatedApps { get; set; } Property Value Type Description Application [] CreatedAssets [apar] parameters of assets created by this account. Note: the raw account uses map[int] -> Asset for this type. Declaration public Asset[] CreatedAssets { get; set; } Property Value Type Description Asset [] MinBalance MicroAlgo balance required by the account. The requirement grows based on asset and application usage. Declaration public ulong MinBalance { get; set; } Property Value Type Description UInt64 Participation Declaration public AccountParticipation Participation { get; set; } Property Value Type Description AccountParticipation PendingRewards amount of MicroAlgos of pending rewards in this account. Declaration public ulong PendingRewards { get; set; } Property Value Type Description UInt64 RewardBase [ebase] used as part of the rewards computation. Only applicable to accounts which are participating. Declaration public Optional<ulong> RewardBase { get; set; } Property Value Type Description Optional < UInt64 > Rewards [ern] total rewards of MicroAlgos the account has received, including pending rewards. Declaration public ulong Rewards { get; set; } Property Value Type Description UInt64 Round The round for which this information is relevant. Declaration public ulong Round { get; set; } Property Value Type Description UInt64 SigType Indicates what type of signature is used by this account, must be one of: sig msig lsig Declaration public SignatureType SigType { get; set; } Property Value Type Description SignatureType Status [onl] delegation status of the account's MicroAlgos Offline - indicates that the associated account is delegated. Online - indicates that the associated account used as part of the delegation pool. NotParticipating - indicates that the associated account is neither a delegator nor a delegate. Declaration public string Status { get; set; } Property Value Type Description String TotalAppsOptedIn The count of all applications that have been opted in, equivalent to the count of application local data (AppLocalState objects) stored in this account. Declaration public ulong TotalAppsOptedIn { get; set; } Property Value Type Description UInt64 TotalAssetsOptedIn The count of all assets that have been opted in, equivalent to the count of AssetHolding objects held by this account. Declaration public ulong TotalAssetsOptedIn { get; set; } Property Value Type Description UInt64 TotalCreatedApps The count of all apps (AppParams objects) created by this account. Declaration public ulong TotalCreatedApps { get; set; } Property Value Type Description UInt64 TotalCreatedAssets The count of all assets (AssetParams objects) created by this account. Declaration public ulong TotalCreatedAssets { get; set; } Property Value Type Description UInt64 Methods Equals(Account) Declaration public bool Equals(Account other) Parameters Type Name Description Account other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.AccountApplicationResponse.html": {
    "href": "api/AlgoSdk.Algod.AccountApplicationResponse.html",
    "title": "Struct AccountApplicationResponse | Unity Algorand SDK",
    "keywords": "Struct AccountApplicationResponse Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct AccountApplicationResponse : IEquatable<AccountApplicationResponse> Properties AppLocalState [appl] the application local data stored in this account. The raw account uses AppLocalState for this type. Declaration public ApplicationLocalState AppLocalState { get; set; } Property Value Type Description ApplicationLocalState CreatedApp [appp] parameters of the application created by this account including app global data. The raw account uses AppParams for this type. Declaration public ApplicationParams CreatedApp { get; set; } Property Value Type Description ApplicationParams Round The round for which this information is relevant. Declaration public ulong Round { get; set; } Property Value Type Description UInt64 Methods Equals(AccountApplicationResponse) Declaration public bool Equals(AccountApplicationResponse other) Parameters Type Name Description AccountApplicationResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.AccountAssetResponse.html": {
    "href": "api/AlgoSdk.Algod.AccountAssetResponse.html",
    "title": "Struct AccountAssetResponse | Unity Algorand SDK",
    "keywords": "Struct AccountAssetResponse Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct AccountAssetResponse : IEquatable<AccountAssetResponse> Properties AssetHolding [asset] Details about the asset held by this account. The raw account uses AssetHolding for this type. Declaration public AssetHolding AssetHolding { get; set; } Property Value Type Description AssetHolding CreatedAsset [apar] parameters of the asset created by this account. The raw account uses AssetParams for this type. Declaration public AssetParams CreatedAsset { get; set; } Property Value Type Description AssetParams Round The round for which this information is relevant. Declaration public ulong Round { get; set; } Property Value Type Description UInt64 Methods Equals(AccountAssetResponse) Declaration public bool Equals(AccountAssetResponse other) Parameters Type Name Description AccountAssetResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.AccountParticipation.html": {
    "href": "api/AlgoSdk.Algod.AccountParticipation.html",
    "title": "Struct AccountParticipation | Unity Algorand SDK",
    "keywords": "Struct AccountParticipation Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct AccountParticipation : IEquatable<AccountParticipation> Properties SelectionParticipationKey [sel] Selection public key (if any) currently registered for this round. Declaration public byte[] SelectionParticipationKey { get; set; } Property Value Type Description Byte [] StateProofKey [stprf] Root of the state proof key (if any) Declaration public byte[] StateProofKey { get; set; } Property Value Type Description Byte [] VoteFirstValid [voteFst] First round for which this participation is valid. Declaration public ulong VoteFirstValid { get; set; } Property Value Type Description UInt64 VoteKeyDilution [voteKD] Number of subkeys in each batch of participation keys. Declaration public ulong VoteKeyDilution { get; set; } Property Value Type Description UInt64 VoteLastValid [voteLst] Last round for which this participation is valid. Declaration public ulong VoteLastValid { get; set; } Property Value Type Description UInt64 VoteParticipationKey [vote] root participation public key (if any) currently registered for this round. Declaration public byte[] VoteParticipationKey { get; set; } Property Value Type Description Byte [] Methods Equals(AccountParticipation) Declaration public bool Equals(AccountParticipation other) Parameters Type Name Description AccountParticipation other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.AccountResponse.html": {
    "href": "api/AlgoSdk.Algod.AccountResponse.html",
    "title": "Struct AccountResponse | Unity Algorand SDK",
    "keywords": "Struct AccountResponse AccountResponse wraps the Account type in a response. Implements IWrappedValue < Account > Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct AccountResponse : IEquatable<AccountResponse>, IWrappedValue<Account> Constructors AccountResponse(Account) Declaration public AccountResponse(Account value) Parameters Type Name Description Account value Properties WrappedValue Declaration public Account WrappedValue { get; set; } Property Value Type Description Account Methods Equals(AccountResponse) Declaration public bool Equals(AccountResponse other) Parameters Type Name Description AccountResponse other Returns Type Description Boolean Operators Implicit(Account to AccountResponse) Declaration public static implicit operator AccountResponse(Account value) Parameters Type Name Description Account value Returns Type Description AccountResponse Implicit(AccountResponse to Account) Declaration public static implicit operator Account(AccountResponse wrapper) Parameters Type Name Description AccountResponse wrapper Returns Type Description Account Implements IWrappedValue<T>"
  },
  "api/AlgoSdk.Algod.AccountStateDelta.html": {
    "href": "api/AlgoSdk.Algod.AccountStateDelta.html",
    "title": "Struct AccountStateDelta | Unity Algorand SDK",
    "keywords": "Struct AccountStateDelta Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct AccountStateDelta : IEquatable<AccountStateDelta> Properties Address Declaration public string Address { get; set; } Property Value Type Description String Delta Declaration public StateDelta Delta { get; set; } Property Value Type Description StateDelta Methods Equals(AccountStateDelta) Declaration public bool Equals(AccountStateDelta other) Parameters Type Name Description AccountStateDelta other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.Application.html": {
    "href": "api/AlgoSdk.Algod.Application.html",
    "title": "Struct Application | Unity Algorand SDK",
    "keywords": "Struct Application Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct Application : IEquatable<Application> Properties Id [appidx] application index. Declaration public ulong Id { get; set; } Property Value Type Description UInt64 Params [appparams] application parameters. Declaration public ApplicationParams Params { get; set; } Property Value Type Description ApplicationParams Methods Equals(Application) Declaration public bool Equals(Application other) Parameters Type Name Description Application other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.ApplicationLocalState.html": {
    "href": "api/AlgoSdk.Algod.ApplicationLocalState.html",
    "title": "Struct ApplicationLocalState | Unity Algorand SDK",
    "keywords": "Struct ApplicationLocalState Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct ApplicationLocalState : IEquatable<ApplicationLocalState> Properties Id The application which this local state is for. Declaration public ulong Id { get; set; } Property Value Type Description UInt64 KeyValue [tkv] storage. Declaration public TealKeyValueStore KeyValue { get; set; } Property Value Type Description TealKeyValueStore Schema [hsch] schema. Declaration public ApplicationStateSchema Schema { get; set; } Property Value Type Description ApplicationStateSchema Methods Equals(ApplicationLocalState) Declaration public bool Equals(ApplicationLocalState other) Parameters Type Name Description ApplicationLocalState other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.ApplicationParams.html": {
    "href": "api/AlgoSdk.Algod.ApplicationParams.html",
    "title": "Struct ApplicationParams | Unity Algorand SDK",
    "keywords": "Struct ApplicationParams Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct ApplicationParams : IEquatable<ApplicationParams> Properties ApprovalProgram [approv] approval program. Declaration public CompiledTeal ApprovalProgram { get; set; } Property Value Type Description CompiledTeal ClearStateProgram [clearp] approval program. Declaration public CompiledTeal ClearStateProgram { get; set; } Property Value Type Description CompiledTeal Creator The address that created this application. This is the address where the parameters and global state for this application can be found. Declaration public Address Creator { get; set; } Property Value Type Description Address ExtraProgramPages [epp] the amount of extra program pages available to this app. Declaration public Optional<ulong> ExtraProgramPages { get; set; } Property Value Type Description Optional < UInt64 > GlobalState [gs] global schema Declaration public TealKeyValueStore GlobalState { get; set; } Property Value Type Description TealKeyValueStore GlobalStateSchema [gsch] global schema Declaration public ApplicationStateSchema GlobalStateSchema { get; set; } Property Value Type Description ApplicationStateSchema LocalStateSchema [lsch] local schema Declaration public ApplicationStateSchema LocalStateSchema { get; set; } Property Value Type Description ApplicationStateSchema Methods Equals(ApplicationParams) Declaration public bool Equals(ApplicationParams other) Parameters Type Name Description ApplicationParams other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.ApplicationResponse.html": {
    "href": "api/AlgoSdk.Algod.ApplicationResponse.html",
    "title": "Struct ApplicationResponse | Unity Algorand SDK",
    "keywords": "Struct ApplicationResponse Application information Implements IWrappedValue < Application > Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct ApplicationResponse : IEquatable<ApplicationResponse>, IWrappedValue<Application> Constructors ApplicationResponse(Application) Declaration public ApplicationResponse(Application value) Parameters Type Name Description Application value Properties WrappedValue Declaration public Application WrappedValue { get; set; } Property Value Type Description Application Methods Equals(ApplicationResponse) Declaration public bool Equals(ApplicationResponse other) Parameters Type Name Description ApplicationResponse other Returns Type Description Boolean Operators Implicit(Application to ApplicationResponse) Declaration public static implicit operator ApplicationResponse(Application value) Parameters Type Name Description Application value Returns Type Description ApplicationResponse Implicit(ApplicationResponse to Application) Declaration public static implicit operator Application(ApplicationResponse wrapper) Parameters Type Name Description ApplicationResponse wrapper Returns Type Description Application Implements IWrappedValue<T>"
  },
  "api/AlgoSdk.Algod.ApplicationStateSchema.html": {
    "href": "api/AlgoSdk.Algod.ApplicationStateSchema.html",
    "title": "Struct ApplicationStateSchema | Unity Algorand SDK",
    "keywords": "Struct ApplicationStateSchema Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct ApplicationStateSchema : IEquatable<ApplicationStateSchema> Properties NumByteSlice [nbs] num of byte slices. Declaration public ulong NumByteSlice { get; set; } Property Value Type Description UInt64 NumUint [nui] num of uints. Declaration public ulong NumUint { get; set; } Property Value Type Description UInt64 Methods Equals(ApplicationStateSchema) Declaration public bool Equals(ApplicationStateSchema other) Parameters Type Name Description ApplicationStateSchema other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.Asset.html": {
    "href": "api/AlgoSdk.Algod.Asset.html",
    "title": "Struct Asset | Unity Algorand SDK",
    "keywords": "Struct Asset Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct Asset : IEquatable<Asset> Properties Index unique asset identifier Declaration public ulong Index { get; set; } Property Value Type Description UInt64 Params Declaration public AssetParams Params { get; set; } Property Value Type Description AssetParams Methods Equals(Asset) Declaration public bool Equals(Asset other) Parameters Type Name Description Asset other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.AssetHolding.html": {
    "href": "api/AlgoSdk.Algod.AssetHolding.html",
    "title": "Struct AssetHolding | Unity Algorand SDK",
    "keywords": "Struct AssetHolding Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct AssetHolding : IEquatable<AssetHolding> Properties Amount [a] number of units held. Declaration public ulong Amount { get; set; } Property Value Type Description UInt64 AssetId Asset ID of the holding. Declaration public AssetIndex AssetId { get; set; } Property Value Type Description AssetIndex IsFrozen [f] whether or not the holding is frozen. Declaration public bool IsFrozen { get; set; } Property Value Type Description Boolean Methods Equals(AssetHolding) Declaration public bool Equals(AssetHolding other) Parameters Type Name Description AssetHolding other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.AssetParams.html": {
    "href": "api/AlgoSdk.Algod.AssetParams.html",
    "title": "Struct AssetParams | Unity Algorand SDK",
    "keywords": "Struct AssetParams Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct AssetParams : IEquatable<AssetParams> Properties Clawback [c] Address of account used to clawback holdings of this asset. If empty, clawback is not permitted. Declaration public string Clawback { get; set; } Property Value Type Description String Creator The address that created this asset. This is the address where the parameters for this asset can be found, and also the address where unwanted asset units can be sent in the worst case. Declaration public string Creator { get; set; } Property Value Type Description String Decimals [dc] The number of digits to use after the decimal point when displaying this asset. If 0, the asset is not divisible. If 1, the base unit of the asset is in tenths. If 2, the base unit of the asset is in hundredths, and so on. This value must be between 0 and 19 (inclusive). Declaration public ulong Decimals { get; set; } Property Value Type Description UInt64 DefaultFrozen [df] Whether holdings of this asset are frozen by default. Declaration public Optional<bool> DefaultFrozen { get; set; } Property Value Type Description Optional < Boolean > Freeze [f] Address of account used to freeze holdings of this asset. If empty, freezing is not permitted. Declaration public string Freeze { get; set; } Property Value Type Description String Manager [m] Address of account used to manage the keys of this asset and to destroy it. Declaration public string Manager { get; set; } Property Value Type Description String MetadataHash [am] A commitment to some unspecified asset metadata. The format of this metadata is up to the application. Declaration public byte[] MetadataHash { get; set; } Property Value Type Description Byte [] Name [an] Name of this asset, as supplied by the creator. Included only when the asset name is composed of printable utf-8 characters. Declaration public string Name { get; set; } Property Value Type Description String NameB64 Base64 encoded name of this asset, as supplied by the creator. Declaration public byte[] NameB64 { get; set; } Property Value Type Description Byte [] Reserve [r] Address of account holding reserve (non-minted) units of this asset. Declaration public string Reserve { get; set; } Property Value Type Description String Total [t] The total number of units of this asset. Declaration public ulong Total { get; set; } Property Value Type Description UInt64 UnitName [un] Name of a unit of this asset, as supplied by the creator. Included only when the name of a unit of this asset is composed of printable utf-8 characters. Declaration public string UnitName { get; set; } Property Value Type Description String UnitNameB64 Base64 encoded name of a unit of this asset, as supplied by the creator. Declaration public byte[] UnitNameB64 { get; set; } Property Value Type Description Byte [] Url [au] URL where more information about the asset can be retrieved. Included only when the URL is composed of printable utf-8 characters. Declaration public string Url { get; set; } Property Value Type Description String UrlB64 Base64 encoded URL where more information about the asset can be retrieved. Declaration public byte[] UrlB64 { get; set; } Property Value Type Description Byte [] Methods Equals(AssetParams) Declaration public bool Equals(AssetParams other) Parameters Type Name Description AssetParams other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.AssetResponse.html": {
    "href": "api/AlgoSdk.Algod.AssetResponse.html",
    "title": "Struct AssetResponse | Unity Algorand SDK",
    "keywords": "Struct AssetResponse Asset information Implements IWrappedValue < Asset > Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct AssetResponse : IEquatable<AssetResponse>, IWrappedValue<Asset> Constructors AssetResponse(Asset) Declaration public AssetResponse(Asset value) Parameters Type Name Description Asset value Properties WrappedValue Declaration public Asset WrappedValue { get; set; } Property Value Type Description Asset Methods Equals(AssetResponse) Declaration public bool Equals(AssetResponse other) Parameters Type Name Description AssetResponse other Returns Type Description Boolean Operators Implicit(Asset to AssetResponse) Declaration public static implicit operator AssetResponse(Asset value) Parameters Type Name Description Asset value Returns Type Description AssetResponse Implicit(AssetResponse to Asset) Declaration public static implicit operator Asset(AssetResponse wrapper) Parameters Type Name Description AssetResponse wrapper Returns Type Description Asset Implements IWrappedValue<T>"
  },
  "api/AlgoSdk.Algod.BlockResponse.html": {
    "href": "api/AlgoSdk.Algod.BlockResponse.html",
    "title": "Struct BlockResponse | Unity Algorand SDK",
    "keywords": "Struct BlockResponse Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct BlockResponse : IEquatable<BlockResponse> Properties Block Block header data. Declaration public BlockHeader Block { get; set; } Property Value Type Description BlockHeader Cert Optional certificate object. This is only included when the format is set to message pack. Declaration public BlockCertificate Cert { get; set; } Property Value Type Description BlockCertificate Methods Equals(BlockResponse) Declaration public bool Equals(BlockResponse other) Parameters Type Name Description BlockResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.BuildVersion.html": {
    "href": "api/AlgoSdk.Algod.BuildVersion.html",
    "title": "Struct BuildVersion | Unity Algorand SDK",
    "keywords": "Struct BuildVersion Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct BuildVersion : IEquatable<BuildVersion> Properties Branch Declaration public string Branch { get; set; } Property Value Type Description String Build_number Declaration public ulong Build_number { get; set; } Property Value Type Description UInt64 Channel Declaration public string Channel { get; set; } Property Value Type Description String Commit_hash Declaration public string Commit_hash { get; set; } Property Value Type Description String Major Declaration public ulong Major { get; set; } Property Value Type Description UInt64 Minor Declaration public ulong Minor { get; set; } Property Value Type Description UInt64 Methods Equals(BuildVersion) Declaration public bool Equals(BuildVersion other) Parameters Type Name Description BuildVersion other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.CatchpointAbortResponse.html": {
    "href": "api/AlgoSdk.Algod.CatchpointAbortResponse.html",
    "title": "Struct CatchpointAbortResponse | Unity Algorand SDK",
    "keywords": "Struct CatchpointAbortResponse Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct CatchpointAbortResponse : IEquatable<CatchpointAbortResponse> Properties CatchupMessage Catchup abort response string Declaration public string CatchupMessage { get; set; } Property Value Type Description String Methods Equals(CatchpointAbortResponse) Declaration public bool Equals(CatchpointAbortResponse other) Parameters Type Name Description CatchpointAbortResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.CatchpointStartResponse.html": {
    "href": "api/AlgoSdk.Algod.CatchpointStartResponse.html",
    "title": "Struct CatchpointStartResponse | Unity Algorand SDK",
    "keywords": "Struct CatchpointStartResponse Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct CatchpointStartResponse : IEquatable<CatchpointStartResponse> Properties CatchupMessage Catchup start response string Declaration public string CatchupMessage { get; set; } Property Value Type Description String Methods Equals(CatchpointStartResponse) Declaration public bool Equals(CatchpointStartResponse other) Parameters Type Name Description CatchpointStartResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.CompileResponse.html": {
    "href": "api/AlgoSdk.Algod.CompileResponse.html",
    "title": "Struct CompileResponse | Unity Algorand SDK",
    "keywords": "Struct CompileResponse Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct CompileResponse : IEquatable<CompileResponse> Properties Hash base32 SHA512_256 of program bytes (Address style) Declaration public string Hash { get; set; } Property Value Type Description String Result base64 encoded program bytes Declaration public string Result { get; set; } Property Value Type Description String Methods Equals(CompileResponse) Declaration public bool Equals(CompileResponse other) Parameters Type Name Description CompileResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.DryrunRequest.html": {
    "href": "api/AlgoSdk.Algod.DryrunRequest.html",
    "title": "Struct DryrunRequest | Unity Algorand SDK",
    "keywords": "Struct DryrunRequest Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct DryrunRequest : IEquatable<DryrunRequest> Properties Accounts Declaration public Account[] Accounts { get; set; } Property Value Type Description Account [] Apps Declaration public Application[] Apps { get; set; } Property Value Type Description Application [] LatestTimestamp LatestTimestamp is available to some TEAL scripts. Defaults to the latest confirmed timestamp this algod is attached to. Declaration public ulong LatestTimestamp { get; set; } Property Value Type Description UInt64 ProtocolVersion ProtocolVersion specifies a specific version string to operate under, otherwise whatever the current protocol of the network this algod is running in. Declaration public string ProtocolVersion { get; set; } Property Value Type Description String Round Round is available to some TEAL scripts. Defaults to the current round on the network this algod is attached to. Declaration public ulong Round { get; set; } Property Value Type Description UInt64 Sources Declaration public DryrunSource[] Sources { get; set; } Property Value Type Description DryrunSource [] Txns Declaration public byte[][] Txns { get; set; } Property Value Type Description Byte [][] Methods Equals(DryrunRequest) Declaration public bool Equals(DryrunRequest other) Parameters Type Name Description DryrunRequest other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.DryrunResponse.html": {
    "href": "api/AlgoSdk.Algod.DryrunResponse.html",
    "title": "Struct DryrunResponse | Unity Algorand SDK",
    "keywords": "Struct DryrunResponse Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct DryrunResponse : IEquatable<DryrunResponse> Properties Error Declaration public string Error { get; set; } Property Value Type Description String ProtocolVersion Protocol version is the protocol version Dryrun was operated under. Declaration public string ProtocolVersion { get; set; } Property Value Type Description String Txns Declaration public DryrunTxnResult[] Txns { get; set; } Property Value Type Description DryrunTxnResult [] Methods Equals(DryrunResponse) Declaration public bool Equals(DryrunResponse other) Parameters Type Name Description DryrunResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.DryrunSource.html": {
    "href": "api/AlgoSdk.Algod.DryrunSource.html",
    "title": "Struct DryrunSource | Unity Algorand SDK",
    "keywords": "Struct DryrunSource Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct DryrunSource : IEquatable<DryrunSource> Properties AppIndex Declaration public ulong AppIndex { get; set; } Property Value Type Description UInt64 FieldName FieldName is what kind of sources this is. If lsig then it goes into the transactions[this.TxnIndex].LogicSig. If approv or clearp it goes into the Approval Program or Clear State Program of application[this.AppIndex]. Declaration public string FieldName { get; set; } Property Value Type Description String Source Declaration public string Source { get; set; } Property Value Type Description String TxnIndex Declaration public ulong TxnIndex { get; set; } Property Value Type Description UInt64 Methods Equals(DryrunSource) Declaration public bool Equals(DryrunSource other) Parameters Type Name Description DryrunSource other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.DryrunState.html": {
    "href": "api/AlgoSdk.Algod.DryrunState.html",
    "title": "Struct DryrunState | Unity Algorand SDK",
    "keywords": "Struct DryrunState Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct DryrunState : IEquatable<DryrunState> Properties Error Evaluation error if any Declaration public string Error { get; set; } Property Value Type Description String Line Line number Declaration public ulong Line { get; set; } Property Value Type Description UInt64 Pc Program counter Declaration public ulong Pc { get; set; } Property Value Type Description UInt64 Scratch Declaration public TealValue[] Scratch { get; set; } Property Value Type Description TealValue [] Stack Declaration public TealValue[] Stack { get; set; } Property Value Type Description TealValue [] Methods Equals(DryrunState) Declaration public bool Equals(DryrunState other) Parameters Type Name Description DryrunState other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.DryrunTxnResult.html": {
    "href": "api/AlgoSdk.Algod.DryrunTxnResult.html",
    "title": "Struct DryrunTxnResult | Unity Algorand SDK",
    "keywords": "Struct DryrunTxnResult Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct DryrunTxnResult : IEquatable<DryrunTxnResult> Properties AppCallMessages Declaration public string[] AppCallMessages { get; set; } Property Value Type Description String [] AppCallTrace Declaration public DryrunState[] AppCallTrace { get; set; } Property Value Type Description DryrunState [] Cost Execution cost of app call transaction Declaration public Optional<ulong> Cost { get; set; } Property Value Type Description Optional < UInt64 > Disassembly Disassembled program line by line. Declaration public string[] Disassembly { get; set; } Property Value Type Description String [] GlobalDelta Declaration public StateDelta GlobalDelta { get; set; } Property Value Type Description StateDelta LocalDeltas Declaration public AccountStateDelta[] LocalDeltas { get; set; } Property Value Type Description AccountStateDelta [] LogicSigDisassembly Disassembled lsig program line by line. Declaration public string[] LogicSigDisassembly { get; set; } Property Value Type Description String [] LogicSigMessages Declaration public string[] LogicSigMessages { get; set; } Property Value Type Description String [] LogicSigTrace Declaration public DryrunState[] LogicSigTrace { get; set; } Property Value Type Description DryrunState [] Logs Declaration public byte[][] Logs { get; set; } Property Value Type Description Byte [][] Methods Equals(DryrunTxnResult) Declaration public bool Equals(DryrunTxnResult other) Parameters Type Name Description DryrunTxnResult other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.EvalDelta.html": {
    "href": "api/AlgoSdk.Algod.EvalDelta.html",
    "title": "Struct EvalDelta | Unity Algorand SDK",
    "keywords": "Struct EvalDelta Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct EvalDelta : IEquatable<EvalDelta> Properties Action [at] delta action. Declaration public ulong Action { get; set; } Property Value Type Description UInt64 Bytes [bs] bytes value. Declaration public string Bytes { get; set; } Property Value Type Description String Uint [ui] uint value. Declaration public Optional<ulong> Uint { get; set; } Property Value Type Description Optional < UInt64 > Methods Equals(EvalDelta) Declaration public bool Equals(EvalDelta other) Parameters Type Name Description EvalDelta other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.EvalDeltaKeyValue.html": {
    "href": "api/AlgoSdk.Algod.EvalDeltaKeyValue.html",
    "title": "Struct EvalDeltaKeyValue | Unity Algorand SDK",
    "keywords": "Struct EvalDeltaKeyValue Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct EvalDeltaKeyValue : IEquatable<EvalDeltaKeyValue> Properties Key Declaration public string Key { get; set; } Property Value Type Description String Value Declaration public EvalDelta Value { get; set; } Property Value Type Description EvalDelta Methods Equals(EvalDeltaKeyValue) Declaration public bool Equals(EvalDeltaKeyValue other) Parameters Type Name Description EvalDeltaKeyValue other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.html": {
    "href": "api/AlgoSdk.Algod.html",
    "title": "Namespace AlgoSdk.Algod | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.Algod Structs Account AccountApplicationResponse AccountAssetResponse AccountParticipation AccountResponse AccountResponse wraps the Account type in a response. AccountStateDelta Application ApplicationLocalState ApplicationParams ApplicationResponse Application information ApplicationStateSchema Asset AssetHolding AssetParams AssetResponse Asset information BlockResponse BuildVersion CatchpointAbortResponse CatchpointStartResponse CompileResponse DryrunRequest DryrunResponse DryrunSource DryrunState DryrunTxnResult EvalDelta EvalDeltaKeyValue NodeStatusResponse ParticipationKey ParticipationKeyResponse A detailed description of a participation ID ParticipationKeysResponse A list of participation keys PendingTransactionResponse PendingTransactionsResponse PostParticipationResponse PostTransactionsResponse ProofResponse StateDelta Application state delta. SupplyResponse TealKeyValue TealKeyValueStore Represents a key-value store for use in an application. TealValue TransactionParametersResponse Version VersionsResponse VersionsResponse is the response to 'GET /versions'"
  },
  "api/AlgoSdk.Algod.NodeStatusResponse.html": {
    "href": "api/AlgoSdk.Algod.NodeStatusResponse.html",
    "title": "Struct NodeStatusResponse | Unity Algorand SDK",
    "keywords": "Struct NodeStatusResponse Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct NodeStatusResponse : IEquatable<NodeStatusResponse> Properties Catchpoint The current catchpoint that is being caught up to Declaration public string Catchpoint { get; set; } Property Value Type Description String CatchpointAcquiredBlocks The number of blocks that have already been obtained by the node as part of the catchup Declaration public Optional<ulong> CatchpointAcquiredBlocks { get; set; } Property Value Type Description Optional < UInt64 > CatchpointProcessedAccounts The number of accounts from the current catchpoint that have been processed so far as part of the catchup Declaration public Optional<ulong> CatchpointProcessedAccounts { get; set; } Property Value Type Description Optional < UInt64 > CatchpointTotalAccounts The total number of accounts included in the current catchpoint Declaration public Optional<ulong> CatchpointTotalAccounts { get; set; } Property Value Type Description Optional < UInt64 > CatchpointTotalBlocks The total number of blocks that are required to complete the current catchpoint catchup Declaration public Optional<ulong> CatchpointTotalBlocks { get; set; } Property Value Type Description Optional < UInt64 > CatchpointVerifiedAccounts The number of accounts from the current catchpoint that have been verified so far as part of the catchup Declaration public Optional<ulong> CatchpointVerifiedAccounts { get; set; } Property Value Type Description Optional < UInt64 > CatchupTime CatchupTime in nanoseconds Declaration public ulong CatchupTime { get; set; } Property Value Type Description UInt64 LastCatchpoint The last catchpoint seen by the node Declaration public string LastCatchpoint { get; set; } Property Value Type Description String LastRound LastRound indicates the last round seen Declaration public ulong LastRound { get; set; } Property Value Type Description UInt64 LastVersion LastVersion indicates the last consensus version supported Declaration public string LastVersion { get; set; } Property Value Type Description String NextVersion NextVersion of consensus protocol to use Declaration public string NextVersion { get; set; } Property Value Type Description String NextVersionRound NextVersionRound is the round at which the next consensus version will apply Declaration public ulong NextVersionRound { get; set; } Property Value Type Description UInt64 NextVersionSupported NextVersionSupported indicates whether the next consensus version is supported by this node Declaration public bool NextVersionSupported { get; set; } Property Value Type Description Boolean StoppedAtUnsupportedRound StoppedAtUnsupportedRound indicates that the node does not support the new rounds and has stopped making progress Declaration public bool StoppedAtUnsupportedRound { get; set; } Property Value Type Description Boolean TimeSinceLastRound TimeSinceLastRound in nanoseconds Declaration public ulong TimeSinceLastRound { get; set; } Property Value Type Description UInt64 Methods Equals(NodeStatusResponse) Declaration public bool Equals(NodeStatusResponse other) Parameters Type Name Description NodeStatusResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.ParticipationKey.html": {
    "href": "api/AlgoSdk.Algod.ParticipationKey.html",
    "title": "Struct ParticipationKey | Unity Algorand SDK",
    "keywords": "Struct ParticipationKey Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct ParticipationKey : IEquatable<ParticipationKey> Properties Address Address the key was generated for. Declaration public Address Address { get; set; } Property Value Type Description Address EffectiveFirstValid When registered, this is the first round it may be used. Declaration public Optional<ulong> EffectiveFirstValid { get; set; } Property Value Type Description Optional < UInt64 > EffectiveLastValid When registered, this is the last round it may be used. Declaration public Optional<ulong> EffectiveLastValid { get; set; } Property Value Type Description Optional < UInt64 > Id The key's ParticipationID. Declaration public string Id { get; set; } Property Value Type Description String Key Key information stored on the account. Declaration public AccountParticipation Key { get; set; } Property Value Type Description AccountParticipation LastBlockProposal Round when this key was last used to propose a block. Declaration public Optional<ulong> LastBlockProposal { get; set; } Property Value Type Description Optional < UInt64 > LastStateProof Round when this key was last used to generate a state proof. Declaration public Optional<ulong> LastStateProof { get; set; } Property Value Type Description Optional < UInt64 > LastVote Round when this key was last used to vote. Declaration public Optional<ulong> LastVote { get; set; } Property Value Type Description Optional < UInt64 > Methods Equals(ParticipationKey) Declaration public bool Equals(ParticipationKey other) Parameters Type Name Description ParticipationKey other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.ParticipationKeyResponse.html": {
    "href": "api/AlgoSdk.Algod.ParticipationKeyResponse.html",
    "title": "Struct ParticipationKeyResponse | Unity Algorand SDK",
    "keywords": "Struct ParticipationKeyResponse A detailed description of a participation ID Implements IWrappedValue < ParticipationKey > Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct ParticipationKeyResponse : IEquatable<ParticipationKeyResponse>, IWrappedValue<ParticipationKey> Constructors ParticipationKeyResponse(ParticipationKey) Declaration public ParticipationKeyResponse(ParticipationKey value) Parameters Type Name Description ParticipationKey value Properties WrappedValue Declaration public ParticipationKey WrappedValue { get; set; } Property Value Type Description ParticipationKey Methods Equals(ParticipationKeyResponse) Declaration public bool Equals(ParticipationKeyResponse other) Parameters Type Name Description ParticipationKeyResponse other Returns Type Description Boolean Operators Implicit(ParticipationKey to ParticipationKeyResponse) Declaration public static implicit operator ParticipationKeyResponse(ParticipationKey value) Parameters Type Name Description ParticipationKey value Returns Type Description ParticipationKeyResponse Implicit(ParticipationKeyResponse to ParticipationKey) Declaration public static implicit operator ParticipationKey(ParticipationKeyResponse wrapper) Parameters Type Name Description ParticipationKeyResponse wrapper Returns Type Description ParticipationKey Implements IWrappedValue<T>"
  },
  "api/AlgoSdk.Algod.ParticipationKeysResponse.html": {
    "href": "api/AlgoSdk.Algod.ParticipationKeysResponse.html",
    "title": "Struct ParticipationKeysResponse | Unity Algorand SDK",
    "keywords": "Struct ParticipationKeysResponse A list of participation keys Implements IWrappedValue < ParticipationKey []> Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct ParticipationKeysResponse : IEquatable<ParticipationKeysResponse>, IWrappedValue<ParticipationKey[]> Constructors ParticipationKeysResponse(ParticipationKey[]) Declaration public ParticipationKeysResponse(ParticipationKey[] value) Parameters Type Name Description ParticipationKey [] value Properties WrappedValue Declaration public ParticipationKey[] WrappedValue { get; set; } Property Value Type Description ParticipationKey [] Methods Equals(ParticipationKeysResponse) Declaration public bool Equals(ParticipationKeysResponse other) Parameters Type Name Description ParticipationKeysResponse other Returns Type Description Boolean Operators Implicit(ParticipationKey[] to ParticipationKeysResponse) Declaration public static implicit operator ParticipationKeysResponse(ParticipationKey[] value) Parameters Type Name Description ParticipationKey [] value Returns Type Description ParticipationKeysResponse Implicit(ParticipationKeysResponse to ParticipationKey[]) Declaration public static implicit operator ParticipationKey[](ParticipationKeysResponse wrapper) Parameters Type Name Description ParticipationKeysResponse wrapper Returns Type Description ParticipationKey [] Implements IWrappedValue<T>"
  },
  "api/AlgoSdk.Algod.PendingTransactionResponse.html": {
    "href": "api/AlgoSdk.Algod.PendingTransactionResponse.html",
    "title": "Struct PendingTransactionResponse | Unity Algorand SDK",
    "keywords": "Struct PendingTransactionResponse Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct PendingTransactionResponse : IEquatable<PendingTransactionResponse> Properties ApplicationIndex The application index if the transaction was found and it created an application. Declaration public Optional<ulong> ApplicationIndex { get; set; } Property Value Type Description Optional < UInt64 > AssetClosingAmount The number of the asset's unit that were transferred to the close-to address. Declaration public Optional<ulong> AssetClosingAmount { get; set; } Property Value Type Description Optional < UInt64 > AssetIndex The asset index if the transaction was found and it created an asset. Declaration public Optional<ulong> AssetIndex { get; set; } Property Value Type Description Optional < UInt64 > CloseRewards Rewards in microalgos applied to the close remainder to account. Declaration public Optional<ulong> CloseRewards { get; set; } Property Value Type Description Optional < UInt64 > ClosingAmount Closing amount for the transaction. Declaration public Optional<ulong> ClosingAmount { get; set; } Property Value Type Description Optional < UInt64 > ConfirmedRound The round where this transaction was confirmed, if present. Declaration public Optional<ulong> ConfirmedRound { get; set; } Property Value Type Description Optional < UInt64 > GlobalStateDelta [gd] Global state key/value changes for the application being executed by this transaction. Declaration public StateDelta GlobalStateDelta { get; set; } Property Value Type Description StateDelta InnerTxns Inner transactions produced by application execution. Declaration public PendingTransactionResponse[] InnerTxns { get; set; } Property Value Type Description PendingTransactionResponse [] LocalStateDelta [ld] Local state key/value changes for the application being executed by this transaction. Declaration public AccountStateDelta[] LocalStateDelta { get; set; } Property Value Type Description AccountStateDelta [] Logs [lg] Logs for the application being executed by this transaction. Declaration public byte[][] Logs { get; set; } Property Value Type Description Byte [][] PoolError Indicates that the transaction was kicked out of this node's transaction pool (and specifies why that happened). An empty string indicates the transaction wasn't kicked out of this node's txpool due to an error. Declaration public string PoolError { get; set; } Property Value Type Description String ReceiverRewards Rewards in microalgos applied to the receiver account. Declaration public Optional<ulong> ReceiverRewards { get; set; } Property Value Type Description Optional < UInt64 > SenderRewards Rewards in microalgos applied to the sender account. Declaration public Optional<ulong> SenderRewards { get; set; } Property Value Type Description Optional < UInt64 > Txn The raw signed transaction. Declaration public SignedTxn Txn { get; set; } Property Value Type Description SignedTxn Methods Equals(PendingTransactionResponse) Declaration public bool Equals(PendingTransactionResponse other) Parameters Type Name Description PendingTransactionResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.PendingTransactionsResponse.html": {
    "href": "api/AlgoSdk.Algod.PendingTransactionsResponse.html",
    "title": "Struct PendingTransactionsResponse | Unity Algorand SDK",
    "keywords": "Struct PendingTransactionsResponse Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct PendingTransactionsResponse : IEquatable<PendingTransactionsResponse> Properties TopTransactions An array of signed transaction objects. Declaration public SignedTxn[] TopTransactions { get; set; } Property Value Type Description SignedTxn [] TotalTransactions Total number of transactions in the pool. Declaration public ulong TotalTransactions { get; set; } Property Value Type Description UInt64 Methods Equals(PendingTransactionsResponse) Declaration public bool Equals(PendingTransactionsResponse other) Parameters Type Name Description PendingTransactionsResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.PostParticipationResponse.html": {
    "href": "api/AlgoSdk.Algod.PostParticipationResponse.html",
    "title": "Struct PostParticipationResponse | Unity Algorand SDK",
    "keywords": "Struct PostParticipationResponse Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct PostParticipationResponse : IEquatable<PostParticipationResponse> Properties PartId encoding of the participation ID. Declaration public string PartId { get; set; } Property Value Type Description String Methods Equals(PostParticipationResponse) Declaration public bool Equals(PostParticipationResponse other) Parameters Type Name Description PostParticipationResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.PostTransactionsResponse.html": {
    "href": "api/AlgoSdk.Algod.PostTransactionsResponse.html",
    "title": "Struct PostTransactionsResponse | Unity Algorand SDK",
    "keywords": "Struct PostTransactionsResponse Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct PostTransactionsResponse : IEquatable<PostTransactionsResponse> Properties TxId encoding of the transaction hash. Declaration public string TxId { get; set; } Property Value Type Description String Methods Equals(PostTransactionsResponse) Declaration public bool Equals(PostTransactionsResponse other) Parameters Type Name Description PostTransactionsResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.ProofResponse.html": {
    "href": "api/AlgoSdk.Algod.ProofResponse.html",
    "title": "Struct ProofResponse | Unity Algorand SDK",
    "keywords": "Struct ProofResponse Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct ProofResponse : IEquatable<ProofResponse> Properties Hashtype The type of hash function used to create the proof, must be one of: sumhash sha512_256 Declaration public HashType Hashtype { get; set; } Property Value Type Description HashType Idx Index of the transaction in the block's payset. Declaration public ulong Idx { get; set; } Property Value Type Description UInt64 Proof Merkle proof of transaction membership. Declaration public byte[] Proof { get; set; } Property Value Type Description Byte [] Stibhash Hash of SignedTxnInBlock for verifying proof. Declaration public byte[] Stibhash { get; set; } Property Value Type Description Byte [] Treedepth Represents the depth of the tree that is being proven, i.e. the number of edges from a leaf to the root. Declaration public ulong Treedepth { get; set; } Property Value Type Description UInt64 Methods Equals(ProofResponse) Declaration public bool Equals(ProofResponse other) Parameters Type Name Description ProofResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.StateDelta.html": {
    "href": "api/AlgoSdk.Algod.StateDelta.html",
    "title": "Struct StateDelta | Unity Algorand SDK",
    "keywords": "Struct StateDelta Application state delta. Implements IWrappedValue < EvalDeltaKeyValue []> Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct StateDelta : IEquatable<StateDelta>, IWrappedValue<EvalDeltaKeyValue[]> Constructors StateDelta(EvalDeltaKeyValue[]) Declaration public StateDelta(EvalDeltaKeyValue[] value) Parameters Type Name Description EvalDeltaKeyValue [] value Properties WrappedValue Declaration public EvalDeltaKeyValue[] WrappedValue { get; set; } Property Value Type Description EvalDeltaKeyValue [] Methods Equals(StateDelta) Declaration public bool Equals(StateDelta other) Parameters Type Name Description StateDelta other Returns Type Description Boolean Operators Implicit(EvalDeltaKeyValue[] to StateDelta) Declaration public static implicit operator StateDelta(EvalDeltaKeyValue[] value) Parameters Type Name Description EvalDeltaKeyValue [] value Returns Type Description StateDelta Implicit(StateDelta to EvalDeltaKeyValue[]) Declaration public static implicit operator EvalDeltaKeyValue[](StateDelta wrapper) Parameters Type Name Description StateDelta wrapper Returns Type Description EvalDeltaKeyValue [] Implements IWrappedValue<T>"
  },
  "api/AlgoSdk.Algod.SupplyResponse.html": {
    "href": "api/AlgoSdk.Algod.SupplyResponse.html",
    "title": "Struct SupplyResponse | Unity Algorand SDK",
    "keywords": "Struct SupplyResponse Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct SupplyResponse : IEquatable<SupplyResponse> Properties Current_round Round Declaration public ulong Current_round { get; set; } Property Value Type Description UInt64 OnlineMoney OnlineMoney Declaration public ulong OnlineMoney { get; set; } Property Value Type Description UInt64 TotalMoney TotalMoney Declaration public ulong TotalMoney { get; set; } Property Value Type Description UInt64 Methods Equals(SupplyResponse) Declaration public bool Equals(SupplyResponse other) Parameters Type Name Description SupplyResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.TealKeyValue.html": {
    "href": "api/AlgoSdk.Algod.TealKeyValue.html",
    "title": "Struct TealKeyValue | Unity Algorand SDK",
    "keywords": "Struct TealKeyValue Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct TealKeyValue : IEquatable<TealKeyValue> Properties Key Declaration public string Key { get; set; } Property Value Type Description String Value Declaration public TealValue Value { get; set; } Property Value Type Description TealValue Methods Equals(TealKeyValue) Declaration public bool Equals(TealKeyValue other) Parameters Type Name Description TealKeyValue other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.TealKeyValueStore.html": {
    "href": "api/AlgoSdk.Algod.TealKeyValueStore.html",
    "title": "Struct TealKeyValueStore | Unity Algorand SDK",
    "keywords": "Struct TealKeyValueStore Represents a key-value store for use in an application. Implements IWrappedValue < TealKeyValue []> Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct TealKeyValueStore : IEquatable<TealKeyValueStore>, IWrappedValue<TealKeyValue[]> Constructors TealKeyValueStore(TealKeyValue[]) Declaration public TealKeyValueStore(TealKeyValue[] value) Parameters Type Name Description TealKeyValue [] value Properties WrappedValue Declaration public TealKeyValue[] WrappedValue { get; set; } Property Value Type Description TealKeyValue [] Methods Equals(TealKeyValueStore) Declaration public bool Equals(TealKeyValueStore other) Parameters Type Name Description TealKeyValueStore other Returns Type Description Boolean Operators Implicit(TealKeyValue[] to TealKeyValueStore) Declaration public static implicit operator TealKeyValueStore(TealKeyValue[] value) Parameters Type Name Description TealKeyValue [] value Returns Type Description TealKeyValueStore Implicit(TealKeyValueStore to TealKeyValue[]) Declaration public static implicit operator TealKeyValue[](TealKeyValueStore wrapper) Parameters Type Name Description TealKeyValueStore wrapper Returns Type Description TealKeyValue [] Implements IWrappedValue<T>"
  },
  "api/AlgoSdk.Algod.TealValue.html": {
    "href": "api/AlgoSdk.Algod.TealValue.html",
    "title": "Struct TealValue | Unity Algorand SDK",
    "keywords": "Struct TealValue Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct TealValue : IEquatable<TealValue> Properties Bytes [tb] bytes value. Declaration public string Bytes { get; set; } Property Value Type Description String Type [tt] value type. Value 1 refers to bytes , value 2 refers to uint Declaration public ulong Type { get; set; } Property Value Type Description UInt64 Uint [ui] uint value. Declaration public ulong Uint { get; set; } Property Value Type Description UInt64 Methods Equals(TealValue) Declaration public bool Equals(TealValue other) Parameters Type Name Description TealValue other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.TransactionParametersResponse.html": {
    "href": "api/AlgoSdk.Algod.TransactionParametersResponse.html",
    "title": "Struct TransactionParametersResponse | Unity Algorand SDK",
    "keywords": "Struct TransactionParametersResponse Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct TransactionParametersResponse : IEquatable<TransactionParametersResponse> Properties ConsensusVersion ConsensusVersion indicates the consensus protocol version as of LastRound. Declaration public string ConsensusVersion { get; set; } Property Value Type Description String Fee Fee is the suggested transaction fee Fee is in units of micro-Algos per byte. Fee may fall to zero but transactions must still have a fee of at least MinTxnFee for the current network protocol. Declaration public ulong Fee { get; set; } Property Value Type Description UInt64 GenesisHash GenesisHash is the hash of the genesis block. Declaration public byte[] GenesisHash { get; set; } Property Value Type Description Byte [] GenesisId GenesisID is an ID listed in the genesis block. Declaration public string GenesisId { get; set; } Property Value Type Description String LastRound LastRound indicates the last round seen Declaration public ulong LastRound { get; set; } Property Value Type Description UInt64 MinFee The minimum transaction fee (not per byte) required for the txn to validate for the current network protocol. Declaration public ulong MinFee { get; set; } Property Value Type Description UInt64 Methods Equals(TransactionParametersResponse) Declaration public bool Equals(TransactionParametersResponse other) Parameters Type Name Description TransactionParametersResponse other Returns Type Description Boolean Operators Implicit(TransactionParametersResponse to TransactionParams) Declaration public static implicit operator TransactionParams(TransactionParametersResponse response) Parameters Type Name Description TransactionParametersResponse response Returns Type Description TransactionParams"
  },
  "api/AlgoSdk.Algod.Version.html": {
    "href": "api/AlgoSdk.Algod.Version.html",
    "title": "Struct Version | Unity Algorand SDK",
    "keywords": "Struct Version Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct Version : IEquatable<Version> Properties Build Declaration public BuildVersion Build { get; set; } Property Value Type Description BuildVersion Genesis_hash_b64 Declaration public byte[] Genesis_hash_b64 { get; set; } Property Value Type Description Byte [] Genesis_id Declaration public string Genesis_id { get; set; } Property Value Type Description String Versions Declaration public string[] Versions { get; set; } Property Value Type Description String [] Methods Equals(Version) Declaration public bool Equals(Version other) Parameters Type Name Description Version other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Algod.VersionsResponse.html": {
    "href": "api/AlgoSdk.Algod.VersionsResponse.html",
    "title": "Struct VersionsResponse | Unity Algorand SDK",
    "keywords": "Struct VersionsResponse VersionsResponse is the response to 'GET /versions' Implements IWrappedValue < Version > Namespace : AlgoSdk.Algod Assembly : cs.temp.dll.dll Syntax public struct VersionsResponse : IEquatable<VersionsResponse>, IWrappedValue<Version> Constructors VersionsResponse(Version) Declaration public VersionsResponse(Version value) Parameters Type Name Description Version value Properties WrappedValue Declaration public Version WrappedValue { get; set; } Property Value Type Description Version Methods Equals(VersionsResponse) Declaration public bool Equals(VersionsResponse other) Parameters Type Name Description VersionsResponse other Returns Type Description Boolean Operators Implicit(Version to VersionsResponse) Declaration public static implicit operator VersionsResponse(Version value) Parameters Type Name Description Version value Returns Type Description VersionsResponse Implicit(VersionsResponse to Version) Declaration public static implicit operator Version(VersionsResponse wrapper) Parameters Type Name Description VersionsResponse wrapper Returns Type Description Version Implements IWrappedValue<T>"
  },
  "api/AlgoSdk.AlgodClient.html": {
    "href": "api/AlgoSdk.AlgodClient.html",
    "title": "Struct AlgodClient | Unity Algorand SDK",
    "keywords": "Struct AlgodClient A client for accessing the algod service Implements IAlgodClient IAlgoApiClient Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AlgodClient : IAlgodClient, IAlgoApiClient Remarks The algod service is responsible for handling information required to create and send transactions. Constructors AlgodClient(String, Header[]) Create a new algod client without using a token. Declaration public AlgodClient(string address, params Header[] headers) Parameters Type Name Description String address url of the algod service, including the port, e.g. \"http://localhost:4001\" Header [] headers extra headers to add to the requests. e.g. (\"x-api-key, my-api-key\") AlgodClient(String, String, Header[]) Create a new algod client with a token set to TokenHeader . Declaration public AlgodClient(string address, string token, params Header[] headers) Parameters Type Name Description String address url of the algod service, including the port, e.g. \"http://localhost:4001\" String token token used in authenticating to the algod service Header [] headers extra headers to add to the requests. e.g. (\"x-api-key, my-api-key\") Properties Address Declaration public string Address { get; } Property Value Type Description String Headers Declaration public Header[] Headers { get; } Property Value Type Description Header [] Token Declaration public string Token { get; } Property Value Type Description String TokenHeader Declaration public string TokenHeader { get; } Property Value Type Description String Methods AbortCatchup(String) Aborts a catchpoint catchup. Declaration public AlgoApiRequest.Sent<CatchpointAbortResponse> AbortCatchup(string catchpoint) Parameters Type Name Description String catchpoint A catch point Returns Type Description AlgoApiRequest.Sent < CatchpointAbortResponse > Remarks Given a catchpoint, it aborts catching up to this catchpoint AccountApplicationInformation(String, UInt64, ResponseFormat) Get account information about a given app. Declaration public AlgoApiRequest.Sent<AccountApplicationResponse> AccountApplicationInformation(string address, ulong applicationId, ResponseFormat format = ResponseFormat.None) Parameters Type Name Description String address An account public key UInt64 applicationId An application identifier ResponseFormat format Configures whether the response object is JSON or MessagePack encoded. Returns Type Description AlgoApiRequest.Sent < AccountApplicationResponse > Remarks Given a specific account public key and application ID, this call returns the account's application local state and global state (AppLocalState and AppParams, if either exists). Global state will only be returned if the provided address is the application's creator. AccountAssetInformation(String, UInt64, ResponseFormat) Get account information about a given asset. Declaration public AlgoApiRequest.Sent<AccountAssetResponse> AccountAssetInformation(string address, ulong assetId, ResponseFormat format = ResponseFormat.None) Parameters Type Name Description String address An account public key UInt64 assetId An asset identifier ResponseFormat format Configures whether the response object is JSON or MessagePack encoded. Returns Type Description AlgoApiRequest.Sent < AccountAssetResponse > Remarks Given a specific account public key and asset ID, this call returns the account's asset holding and asset parameters (if either exist). Asset parameters will only be returned if the provided address is the asset's creator. AccountInformation(String, ExcludeFields, ResponseFormat) Get account information. Declaration public AlgoApiRequest.Sent<AccountResponse> AccountInformation(string address, ExcludeFields exclude = ExcludeFields.Unknown, ResponseFormat format = ResponseFormat.None) Parameters Type Name Description String address An account public key ExcludeFields exclude When set to all will exclude asset holdings, application local state, created asset parameters, any created application parameters. Defaults to none . ResponseFormat format Configures whether the response object is JSON or MessagePack encoded. Returns Type Description AlgoApiRequest.Sent < AccountResponse > Remarks Given a specific account public key, this call returns the accounts status, balance and spendable amounts AddParticipationKey(Byte[]) Add a participation key to the node Declaration public AlgoApiRequest.Sent<PostParticipationResponse> AddParticipationKey(byte[] participationkey) Parameters Type Name Description Byte [] participationkey The participation key to add to the node Returns Type Description AlgoApiRequest.Sent < PostParticipationResponse > AppendKeys(Byte[], String) Append state proof keys to a participation key Declaration public AlgoApiRequest.Sent<ParticipationKeyResponse> AppendKeys(byte[] keymap, string participationId) Parameters Type Name Description Byte [] keymap The state proof keys to add to an existing participation ID String participationId Returns Type Description AlgoApiRequest.Sent < ParticipationKeyResponse > Remarks Given a participation ID, append state proof keys to a particular set of participation keys DeleteParticipationKeyByID(String) Delete a given participation key by ID Declaration public AlgoApiRequest.Sent DeleteParticipationKeyByID(string participationId) Parameters Type Name Description String participationId Returns Type Description AlgoApiRequest.Sent Remarks Delete a given participation key by ID GetAccountInformation(Address) Declaration public AlgoApiRequest.Sent<AccountResponse> GetAccountInformation(Address accountAddress) Parameters Type Name Description Address accountAddress Returns Type Description AlgoApiRequest.Sent < AccountResponse > GetApplication(UInt64) Declaration public AlgoApiRequest.Sent<ApplicationResponse> GetApplication(ulong applicationId) Parameters Type Name Description UInt64 applicationId Returns Type Description AlgoApiRequest.Sent < ApplicationResponse > GetApplicationByID(UInt64) Get application information. Declaration public AlgoApiRequest.Sent<ApplicationResponse> GetApplicationByID(ulong applicationId) Parameters Type Name Description UInt64 applicationId An application identifier Returns Type Description AlgoApiRequest.Sent < ApplicationResponse > Remarks Given a application ID, it returns application information including creator, approval and clear programs, global and local schemas, and global state. GetAsset(UInt64) Declaration public AlgoApiRequest.Sent<AssetResponse> GetAsset(ulong assetId) Parameters Type Name Description UInt64 assetId Returns Type Description AlgoApiRequest.Sent < AssetResponse > GetAssetByID(UInt64) Get asset information. Declaration public AlgoApiRequest.Sent<AssetResponse> GetAssetByID(ulong assetId) Parameters Type Name Description UInt64 assetId An asset identifier Returns Type Description AlgoApiRequest.Sent < AssetResponse > Remarks Given a asset ID, it returns asset information including creator, name, total supply and special addresses. GetBlock(UInt64, ResponseFormat) Get the block for the given round. Declaration public AlgoApiRequest.Sent<BlockResponse> GetBlock(ulong round, ResponseFormat format = ResponseFormat.None) Parameters Type Name Description UInt64 round The round from which to fetch block information. ResponseFormat format Configures whether the response object is JSON or MessagePack encoded. Returns Type Description AlgoApiRequest.Sent < BlockResponse > GetCurrentStatus() Declaration public AlgoApiRequest.Sent<NodeStatusResponse> GetCurrentStatus() Returns Type Description AlgoApiRequest.Sent < NodeStatusResponse > GetGenesis() Gets the genesis information. Declaration public AlgoApiRequest.Sent<AlgoApiObject> GetGenesis() Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > The genesis file in json. Remarks Returns the entire genesis file in json. GetGenesisInformation() Declaration public AlgoApiRequest.Sent<AlgoApiObject> GetGenesisInformation() Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > GetHealth() Declaration public AlgoApiRequest.Sent GetHealth() Returns Type Description AlgoApiRequest.Sent GetLedgerSupply() Declaration public AlgoApiRequest.Sent<SupplyResponse> GetLedgerSupply() Returns Type Description AlgoApiRequest.Sent < SupplyResponse > GetMerkleProof(UInt64, TransactionId) Declaration public AlgoApiRequest.Sent<ProofResponse> GetMerkleProof(ulong round, TransactionId txid) Parameters Type Name Description UInt64 round TransactionId txid Returns Type Description AlgoApiRequest.Sent < ProofResponse > GetMetrics() Declaration public AlgoApiRequest.Sent GetMetrics() Returns Type Description AlgoApiRequest.Sent GetParticipationKeyByID(String) Get participation key info given a participation ID Declaration public AlgoApiRequest.Sent<ParticipationKeyResponse> GetParticipationKeyByID(string participationId) Parameters Type Name Description String participationId Returns Type Description AlgoApiRequest.Sent < ParticipationKeyResponse > Remarks Given a participation ID, return information about that participation key GetParticipationKeys() Return a list of participation keys Declaration public AlgoApiRequest.Sent<ParticipationKeysResponse> GetParticipationKeys() Returns Type Description AlgoApiRequest.Sent < ParticipationKeysResponse > Remarks Return a list of participation keys GetPendingTransaction(TransactionId) Declaration public AlgoApiRequest.Sent<PendingTransactionResponse> GetPendingTransaction(TransactionId txid) Parameters Type Name Description TransactionId txid Returns Type Description AlgoApiRequest.Sent < PendingTransactionResponse > GetPendingTransactions(Optional<UInt64>, ResponseFormat) Get a list of unconfirmed transactions currently in the transaction pool. Declaration public AlgoApiRequest.Sent<PendingTransactionsResponse> GetPendingTransactions(Optional<ulong> max = default(Optional<ulong>), ResponseFormat format = ResponseFormat.None) Parameters Type Name Description Optional < UInt64 > max Truncated number of transactions to display. If max=0, returns all pending txns. ResponseFormat format Configures whether the response object is JSON or MessagePack encoded. Returns Type Description AlgoApiRequest.Sent < PendingTransactionsResponse > Remarks Get the list of pending transactions, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. GetPendingTransactionsByAccount(Address, UInt64) Declaration public AlgoApiRequest.Sent<PendingTransactionsResponse> GetPendingTransactionsByAccount(Address accountAddress, ulong max = 0UL) Parameters Type Name Description Address accountAddress UInt64 max Returns Type Description AlgoApiRequest.Sent < PendingTransactionsResponse > GetPendingTransactionsByAddress(String, Optional<UInt64>, ResponseFormat) Get a list of unconfirmed transactions currently in the transaction pool by address. Declaration public AlgoApiRequest.Sent<PendingTransactionsResponse> GetPendingTransactionsByAddress(string address, Optional<ulong> max = default(Optional<ulong>), ResponseFormat format = ResponseFormat.None) Parameters Type Name Description String address An account public key Optional < UInt64 > max Truncated number of transactions to display. If max=0, returns all pending txns. ResponseFormat format Configures whether the response object is JSON or MessagePack encoded. Returns Type Description AlgoApiRequest.Sent < PendingTransactionsResponse > Remarks Get the list of pending transactions by address, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. GetProof(UInt64, String, ResponseFormat) Get a Merkle proof for a transaction in a block. Declaration public AlgoApiRequest.Sent<ProofResponse> GetProof(ulong round, string txid, ResponseFormat format = ResponseFormat.None) Parameters Type Name Description UInt64 round The round in which the transaction appears. String txid The transaction ID for which to generate a proof. ResponseFormat format Configures whether the response object is JSON or MessagePack encoded. Returns Type Description AlgoApiRequest.Sent < ProofResponse > GetStatus() Gets the current node status. Declaration public AlgoApiRequest.Sent<NodeStatusResponse> GetStatus() Returns Type Description AlgoApiRequest.Sent < NodeStatusResponse > GetStatusAfterWaitingForRound(UInt64) Declaration public AlgoApiRequest.Sent<NodeStatusResponse> GetStatusAfterWaitingForRound(ulong round) Parameters Type Name Description UInt64 round Returns Type Description AlgoApiRequest.Sent < NodeStatusResponse > GetSuggestedParams() Declaration public AlgoApiRequest.Sent<TransactionParametersResponse> GetSuggestedParams() Returns Type Description AlgoApiRequest.Sent < TransactionParametersResponse > GetSupply() Get the current supply reported by the ledger. Declaration public AlgoApiRequest.Sent<SupplyResponse> GetSupply() Returns Type Description AlgoApiRequest.Sent < SupplyResponse > GetSwaggerSpec() Declaration public AlgoApiRequest.Sent<AlgoApiObject> GetSwaggerSpec() Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > GetVersion() Declaration public AlgoApiRequest.Sent<VersionsResponse> GetVersion() Returns Type Description AlgoApiRequest.Sent < VersionsResponse > Remarks Retrieves the supported API versions, binary build versions, and genesis information. GetVersions() Declaration public AlgoApiRequest.Sent<VersionsResponse> GetVersions() Returns Type Description AlgoApiRequest.Sent < VersionsResponse > HealthCheck() Returns OK if healthy. Declaration public AlgoApiRequest.Sent HealthCheck() Returns Type Description AlgoApiRequest.Sent Metrics() Return metrics about algod functioning. Declaration public AlgoApiRequest.Sent Metrics() Returns Type Description AlgoApiRequest.Sent PendingTransactionInformation(String, ResponseFormat) Get a specific pending transaction. Declaration public AlgoApiRequest.Sent<PendingTransactionResponse> PendingTransactionInformation(string txid, ResponseFormat format = ResponseFormat.None) Parameters Type Name Description String txid A transaction ID ResponseFormat format Configures whether the response object is JSON or MessagePack encoded. Returns Type Description AlgoApiRequest.Sent < PendingTransactionResponse > Given a transaction ID of a recently submitted transaction, it returns information about it. There are several cases when this might succeed: transaction committed (committed round > 0) transaction still in the pool (committed round = 0, pool error = \"\") transaction removed from pool due to error (committed round = 0, pool error != \"\") Or the transaction may have happened sufficiently long ago that the node no longer remembers it, and this will return an error. Remarks Given a transaction ID of a recently submitted transaction, it returns information about it. There are several cases when this might succeed: transaction committed (committed round > 0) transaction still in the pool (committed round = 0, pool error = \"\") transaction removed from pool due to error (committed round = 0, pool error != \"\") Or the transaction may have happened sufficiently long ago that the node no longer remembers it, and this will return an error. RawTransaction(Byte[]) Broadcasts a raw transaction to the network. Declaration public AlgoApiRequest.Sent<PostTransactionsResponse> RawTransaction(byte[] rawtxn) Parameters Type Name Description Byte [] rawtxn The byte encoded signed transaction to broadcast to network Returns Type Description AlgoApiRequest.Sent < PostTransactionsResponse > RegisterParticipationKeys(String, UInt64, Optional<UInt64>, Optional<Boolean>, Optional<Boolean>) Declaration public AlgoApiRequest.Sent<PostTransactionsResponse> RegisterParticipationKeys(string accountAddress, ulong fee = 1000UL, Optional<ulong> keyDilution = default(Optional<ulong>), Optional<bool> noWait = default(Optional<bool>), Optional<bool> roundLastValid = default(Optional<bool>)) Parameters Type Name Description String accountAddress UInt64 fee Optional < UInt64 > keyDilution Optional < Boolean > noWait Optional < Boolean > roundLastValid Returns Type Description AlgoApiRequest.Sent < PostTransactionsResponse > SendTransaction(Byte[]) Declaration public AlgoApiRequest.Sent<PostTransactionsResponse> SendTransaction(byte[] txn) Parameters Type Name Description Byte [] txn Returns Type Description AlgoApiRequest.Sent < PostTransactionsResponse > SendTransaction<T>(SignedTxn<T>) Declaration public AlgoApiRequest.Sent<PostTransactionsResponse> SendTransaction<T>(SignedTxn<T> txn) where T : struct, ITransaction, IEquatable<T> Parameters Type Name Description SignedTxn <T> txn Returns Type Description AlgoApiRequest.Sent < PostTransactionsResponse > Type Parameters Name Description T SendTransactions(SignedTxn[]) Declaration public AlgoApiRequest.Sent<PostTransactionsResponse> SendTransactions(params SignedTxn[] txns) Parameters Type Name Description SignedTxn [] txns Returns Type Description AlgoApiRequest.Sent < PostTransactionsResponse > SendTransactions(Byte[][]) Declaration public AlgoApiRequest.Sent<PostTransactionsResponse> SendTransactions(params byte[][] signedTxns) Parameters Type Name Description Byte [][] signedTxns Returns Type Description AlgoApiRequest.Sent < PostTransactionsResponse > ShutDown(Optional<UInt64>) Declaration public AlgoApiRequest.Sent<AlgoApiObject> ShutDown(Optional<ulong> timeout = default(Optional<ulong>)) Parameters Type Name Description Optional < UInt64 > timeout Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > ShutdownNode(Optional<UInt64>) Declaration public AlgoApiRequest.Sent<AlgoApiObject> ShutdownNode(Optional<ulong> timeout = default(Optional<ulong>)) Parameters Type Name Description Optional < UInt64 > timeout Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > Remarks Special management endpoint to shutdown the node. Optionally provide a timeout parameter to indicate that the node should begin shutting down after a number of seconds. StartCatchup(String) Starts a catchpoint catchup. Declaration public AlgoApiRequest.Sent<CatchpointStartResponse> StartCatchup(string catchpoint) Parameters Type Name Description String catchpoint A catch point Returns Type Description AlgoApiRequest.Sent < CatchpointStartResponse > Remarks Given a catchpoint, it starts catching up to this catchpoint SwaggerJSON() Gets the current swagger spec. Declaration public AlgoApiRequest.Sent<AlgoApiObject> SwaggerJSON() Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > The current swagger spec Remarks Returns the entire swagger spec in json. TealCompile(Byte[]) Compile TEAL source code to binary, produce its hash Declaration public AlgoApiRequest.Sent<CompileResponse> TealCompile(byte[] source) Parameters Type Name Description Byte [] source TEAL source code to be compiled Returns Type Description AlgoApiRequest.Sent < CompileResponse > Remarks Given TEAL source code in plain text, return base64 encoded program bytes and base32 SHA512_256 hash of program bytes (Address style). This endpoint is only enabled when a node's configuration file sets EnableDeveloperAPI to true. TealDryrun(DryrunRequest) Provide debugging information for a transaction (or group). Declaration public AlgoApiRequest.Sent<DryrunResponse> TealDryrun(DryrunRequest request = null) Parameters Type Name Description DryrunRequest request Transaction (or group) and any accompanying state-simulation data. Returns Type Description AlgoApiRequest.Sent < DryrunResponse > Remarks Executes TEAL program(s) in context and returns debugging information about the execution. This endpoint is only enabled when a node's configuration file sets EnableDeveloperAPI to true. TransactionParams() Get parameters for constructing a new transaction Declaration public AlgoApiRequest.Sent<TransactionParametersResponse> TransactionParams() Returns Type Description AlgoApiRequest.Sent < TransactionParametersResponse > WaitForBlock(UInt64) Gets the node status after waiting for the given round. Declaration public AlgoApiRequest.Sent<NodeStatusResponse> WaitForBlock(ulong round) Parameters Type Name Description UInt64 round The round to wait until returning status Returns Type Description AlgoApiRequest.Sent < NodeStatusResponse > Remarks Waits for a block to appear after round {round} and returns the node's status at the time. Implements IAlgodClient IAlgoApiClient"
  },
  "api/AlgoSdk.AppCallTxn.html": {
    "href": "api/AlgoSdk.AppCallTxn.html",
    "title": "Struct AppCallTxn | Unity Algorand SDK",
    "keywords": "Struct AppCallTxn Implements IAppCallTxn ITransaction ITransactionHeader Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AppCallTxn : IAppCallTxn, ITransaction, ITransactionHeader, IEquatable<AppCallTxn> Fields MaxNumAppArguments Declaration public const int MaxNumAppArguments = 16 Field Value Type Description Int32 Properties Accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. Declaration public Address[] Accounts { get; set; } Property Value Type Description Address [] AppArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Declaration public CompiledTeal[] AppArguments { get; set; } Property Value Type Description CompiledTeal [] ApplicationId ID of the application being configured or empty if creating. Declaration public AppIndex ApplicationId { get; set; } Property Value Type Description AppIndex ApprovalProgram Logic executed for every application transaction, except when on-completion is set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Approval programs may reject the transaction. Declaration public CompiledTeal ApprovalProgram { get; set; } Property Value Type Description CompiledTeal ClearStateProgram Logic executed for application transactions with on-completion set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Clear state programs cannot reject the transaction. Declaration public CompiledTeal ClearStateProgram { get; set; } Property Value Type Description CompiledTeal ExtraProgramPages Number of additional pages allocated to the application's approval and clear state programs. Each ExtraProgramPages is 2048 bytes. The sum of ApprovalProgram and ClearStateProgram may not exceed 2048*(1+ExtraProgramPages) bytes. Declaration public ulong ExtraProgramPages { get; set; } Property Value Type Description UInt64 Fee Paid by the sender to the FeeSink to prevent denial-of-service. The minimum fee on Algorand is currently 1000 microAlgos. Declaration public MicroAlgos Fee { get; set; } Property Value Type Description MicroAlgos FirstValidRound The first round for when the transaction is valid. If the transaction is sent prior to this round it will be rejected by the network. Declaration public ulong FirstValidRound { get; set; } Property Value Type Description UInt64 ForeignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. Declaration public ulong[] ForeignApps { get; set; } Property Value Type Description UInt64 [] ForeignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Declaration public ulong[] ForeignAssets { get; set; } Property Value Type Description UInt64 [] GenesisHash The hash of the genesis block of the network for which the transaction is valid. Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisId The human-readable string that identifies the network for the transaction. The genesis ID is found in the genesis block. Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes GlobalStateSchema Holds the maximum number of global state values defined within a StateSchema object. Declaration public StateSchema GlobalStateSchema { get; set; } Property Value Type Description StateSchema Group The group specifies that the transaction is part of a group and, if so, specifies the hash of the transaction group. See TransactionGroup . Declaration public TransactionId Group { get; set; } Property Value Type Description TransactionId LastValidRound The ending round for which the transaction is valid. After this round, the transaction will be rejected by the network. Declaration public ulong LastValidRound { get; set; } Property Value Type Description UInt64 Lease A lease enforces mutual exclusion of transactions. If this field is nonzero, then once the transaction is confirmed, it acquires the lease identified by the (Sender, Lease) pair of the transaction until the LastValid round passes. While this transaction possesses the lease, no other transaction specifying this lease can be confirmed. A lease is often used in the context of Algorand Smart Contracts to prevent replay attacks. Declaration public TransactionId Lease { get; set; } Property Value Type Description TransactionId LocalStateSchema Holds the maximum number of local state values defined within a StateSchema object. Declaration public StateSchema LocalStateSchema { get; set; } Property Value Type Description StateSchema Note Any data up to 1000 bytes. Declaration public byte[] Note { get; set; } Property Value Type Description Byte [] OnComplete Defines what additional actions occur with the transaction. Declaration public OnCompletion OnComplete { get; set; } Property Value Type Description OnCompletion RekeyTo Specifies the authorized address. This address will be used to authorize all future transactions. Declaration public Address RekeyTo { get; set; } Property Value Type Description Address Sender The address of the account that pays the fee and amount. Declaration public Address Sender { get; set; } Property Value Type Description Address TransactionType Specifies the type of transaction. This value is automatically generated using any of the developer tools. Declaration public TransactionType TransactionType { get; } Property Value Type Description TransactionType Methods CopyFrom(Transaction) Copy relevant fields to this transaction. Declaration public void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction A raw transaction with all possible transaction fields. CopyTo(ref Transaction) Copy this transactions fields to a Transaction which contains all possible transaction fields. Declaration public void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction A raw transaction with all possible transaction fields. Equals(AppCallTxn) Declaration public bool Equals(AppCallTxn other) Parameters Type Name Description AppCallTxn other Returns Type Description Boolean Implements IAppCallTxn ITransaction ITransactionHeader"
  },
  "api/AlgoSdk.AppCallTxn.Params.html": {
    "href": "api/AlgoSdk.AppCallTxn.Params.html",
    "title": "Struct AppCallTxn.Params | Unity Algorand SDK",
    "keywords": "Struct AppCallTxn.Params Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Params : IEquatable<AppCallTxn.Params> Fields Accounts Declaration public Address[] Accounts Field Value Type Description Address [] AppArguments Declaration public CompiledTeal[] AppArguments Field Value Type Description CompiledTeal [] ApplicationId Declaration public AppIndex ApplicationId Field Value Type Description AppIndex ApprovalProgram Declaration public CompiledTeal ApprovalProgram Field Value Type Description CompiledTeal ClearStateProgram Declaration public CompiledTeal ClearStateProgram Field Value Type Description CompiledTeal ExtraProgramPages Declaration public ulong ExtraProgramPages Field Value Type Description UInt64 ForeignApps Declaration public ulong[] ForeignApps Field Value Type Description UInt64 [] ForeignAssets Declaration public ulong[] ForeignAssets Field Value Type Description UInt64 [] GlobalStateSchema Declaration public StateSchema GlobalStateSchema Field Value Type Description StateSchema LocalStateSchema Declaration public StateSchema LocalStateSchema Field Value Type Description StateSchema OnComplete Declaration public OnCompletion OnComplete Field Value Type Description OnCompletion Methods Equals(AppCallTxn.Params) Declaration public bool Equals(AppCallTxn.Params other) Parameters Type Name Description AppCallTxn.Params other Returns Type Description Boolean"
  },
  "api/AlgoSdk.AppIndex.html": {
    "href": "api/AlgoSdk.AppIndex.html",
    "title": "Struct AppIndex | Unity Algorand SDK",
    "keywords": "Struct AppIndex Identifier of an Application Implements IWrappedValue < UInt64 > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AppIndex : IEquatable<AppIndex>, IEquatable<ulong>, IWrappedValue<ulong> Constructors AppIndex(UInt64) Declaration public AppIndex(ulong index) Parameters Type Name Description UInt64 index Fields HashPrefix Bytes prefix when hashing this struct Declaration public static readonly byte[] HashPrefix Field Value Type Description Byte [] Properties Index Declaration public ulong Index { get; set; } Property Value Type Description UInt64 Methods Equals(AppIndex) Declaration public bool Equals(AppIndex other) Parameters Type Name Description AppIndex other Returns Type Description Boolean Equals(UInt64) Declaration public bool Equals(ulong other) Parameters Type Name Description UInt64 other Returns Type Description Boolean GetAppAddress() Declaration public Address GetAppAddress() Returns Type Description Address Operators Implicit(AppIndex to UInt64) Declaration public static implicit operator ulong (AppIndex appIndex) Parameters Type Name Description AppIndex appIndex Returns Type Description UInt64 Implicit(UInt64 to AppIndex) Declaration public static implicit operator AppIndex(ulong index) Parameters Type Name Description UInt64 index Returns Type Description AppIndex Explicit Interface Implementations IWrappedValue<UInt64>.WrappedValue Declaration ulong IWrappedValue<ulong>.WrappedValue { get; set; } Returns Type Description UInt64 Implements IWrappedValue<T>"
  },
  "api/AlgoSdk.AppliedSignedTxn.html": {
    "href": "api/AlgoSdk.AppliedSignedTxn.html",
    "title": "Struct AppliedSignedTxn | Unity Algorand SDK",
    "keywords": "Struct AppliedSignedTxn A signed transaction that has already been executed. Implements IAppliedSignedTxn < AppliedSignedTxn > ISignedTxn ISignedTxn < Transaction > IUntypedTransaction ITransactionHeader IApplyData < AppliedSignedTxn > IAppEvalDelta < AppliedSignedTxn > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AppliedSignedTxn : IAppliedSignedTxn<AppliedSignedTxn>, ISignedTxn, ISignedTxn<Transaction>, IUntypedTransaction, ITransactionHeader, IApplyData<AppliedSignedTxn>, IAppEvalDelta<AppliedSignedTxn>, IEquatable<AppliedSignedTxn> Properties AppCallParams Params found in an application call transaction Declaration public AppCallTxn.Params AppCallParams { get; set; } Property Value Type Description AppCallTxn.Params ApplicationId If an app is called, the id used. Declaration public AppIndex ApplicationId { get; set; } Property Value Type Description AppIndex AssetClosingAmount Closing amount for asset transaction. Declaration public ulong AssetClosingAmount { get; set; } Property Value Type Description UInt64 AssetConfigParams Params found in an asset configuration transaction Declaration public AssetConfigTxn.Params AssetConfigParams { get; set; } Property Value Type Description AssetConfigTxn.Params AssetFreezeParams Params found in an asset freeze transaction Declaration public AssetFreezeTxn.Params AssetFreezeParams { get; set; } Property Value Type Description AssetFreezeTxn.Params AssetTransferParams Params found in an asset transfer transaction Declaration public AssetTransferTxn.Params AssetTransferParams { get; set; } Property Value Type Description AssetTransferTxn.Params AuthAddr The signer of the transaction if this account was rekeyed. Declaration public Address AuthAddr { get; set; } Property Value Type Description Address CloseRewards Rewards applied to CloseRemainderTo account. Declaration public MicroAlgos CloseRewards { get; set; } Property Value Type Description MicroAlgos ClosingAmount Closing amount for transaction. Declaration public MicroAlgos ClosingAmount { get; set; } Property Value Type Description MicroAlgos ConfigAsset If an asset is configured or created, the id used. Declaration public AssetIndex ConfigAsset { get; set; } Property Value Type Description AssetIndex EvalDelta Application global and local state delta Declaration public EvalDelta<AppliedSignedTxn> EvalDelta { get; set; } Property Value Type Description EvalDelta < AppliedSignedTxn > Fee Paid by the sender to the FeeSink to prevent denial-of-service. The minimum fee on Algorand is currently 1000 microAlgos. Declaration public MicroAlgos Fee { get; set; } Property Value Type Description MicroAlgos FirstValidRound The first round for when the transaction is valid. If the transaction is sent prior to this round it will be rejected by the network. Declaration public ulong FirstValidRound { get; set; } Property Value Type Description UInt64 GenesisHash The hash of the genesis block of the network for which the transaction is valid. Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisId The human-readable string that identifies the network for the transaction. The genesis ID is found in the genesis block. Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes GlobalDelta Global state delta Declaration public StateDelta GlobalDelta { get; set; } Property Value Type Description StateDelta Group The group specifies that the transaction is part of a group and, if so, specifies the hash of the transaction group. See TransactionGroup . Declaration public TransactionId Group { get; set; } Property Value Type Description TransactionId Header Params common to all transactions Declaration public TransactionHeader Header { get; set; } Property Value Type Description TransactionHeader InnerTxns The inner transactions (if any) that were evaluated. Declaration public AppliedSignedTxn[] InnerTxns { get; set; } Property Value Type Description AppliedSignedTxn [] KeyRegParams Params found in a key registration transaction Declaration public KeyRegTxn.Params KeyRegParams { get; set; } Property Value Type Description KeyRegTxn.Params LastValidRound The ending round for which the transaction is valid. After this round, the transaction will be rejected by the network. Declaration public ulong LastValidRound { get; set; } Property Value Type Description UInt64 Lease A lease enforces mutual exclusion of transactions. If this field is nonzero, then once the transaction is confirmed, it acquires the lease identified by the (Sender, Lease) pair of the transaction until the LastValid round passes. While this transaction possesses the lease, no other transaction specifying this lease can be confirmed. A lease is often used in the context of Algorand Smart Contracts to prevent replay attacks. Declaration public TransactionId Lease { get; set; } Property Value Type Description TransactionId LocalDeltas When decoding EvalDeltas, the integer key represents an offset into [txn.Sender, txn.Accounts[0], txn.Accounts[1], ...] Declaration public StateDelta[] LocalDeltas { get; set; } Property Value Type Description StateDelta [] Logs Logs from application calls Declaration public string[] Logs { get; set; } Property Value Type Description String [] Lsig The logic sig used to sign the transaction if there was one. Declaration public LogicSig Lsig { get; set; } Property Value Type Description LogicSig Msig The multi-signature used to sign the transaction if there was one. Declaration public MultisigSig Msig { get; set; } Property Value Type Description MultisigSig Note Any data up to 1000 bytes. Declaration public byte[] Note { get; set; } Property Value Type Description Byte [] PaymentParams Params found in a payment transaction Declaration public PaymentTxn.Params PaymentParams { get; set; } Property Value Type Description PaymentTxn.Params ReceiverRewards Rewards applied to Receiver account. Declaration public MicroAlgos ReceiverRewards { get; set; } Property Value Type Description MicroAlgos RekeyTo Specifies the authorized address. This address will be used to authorize all future transactions. Declaration public Address RekeyTo { get; set; } Property Value Type Description Address Sender The address of the account that pays the fee and amount. Declaration public Address Sender { get; set; } Property Value Type Description Address SenderRewards Rewards applied to Sender account. Declaration public MicroAlgos SenderRewards { get; set; } Property Value Type Description MicroAlgos Sig The signature used to sign the transaction if there was one. Declaration public Sig Sig { get; set; } Property Value Type Description Sig Signature Declaration public TransactionSignature Signature { get; set; } Property Value Type Description TransactionSignature TransactionType Specifies the type of transaction. This value is automatically generated using any of the developer tools. Declaration public TransactionType TransactionType { get; set; } Property Value Type Description TransactionType Txn The transaction signed. Declaration public Transaction Txn { get; set; } Property Value Type Description Transaction Methods Equals(AppliedSignedTxn) Declaration public bool Equals(AppliedSignedTxn other) Parameters Type Name Description AppliedSignedTxn other Returns Type Description Boolean Implements IAppliedSignedTxn<TTxn> ISignedTxn ISignedTxn<TTxn> IUntypedTransaction ITransactionHeader IApplyData<TTxn> IAppEvalDelta<TTxn>"
  },
  "api/AlgoSdk.ApplyData-1.html": {
    "href": "api/AlgoSdk.ApplyData-1.html",
    "title": "Struct ApplyData<TTxn> | Unity Algorand SDK",
    "keywords": "Struct ApplyData<TTxn> Implements IApplyData <TTxn> IAppEvalDelta <TTxn> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ApplyData<TTxn> : IEquatable<ApplyData<TTxn>>, IApplyData<TTxn>, IAppEvalDelta<TTxn> where TTxn : IAppliedSignedTxn<TTxn> Type Parameters Name Description TTxn Properties ApplicationId If an app is called, the id used. Declaration public AppIndex ApplicationId { get; set; } Property Value Type Description AppIndex AssetClosingAmount Closing amount for asset transaction. Declaration public ulong AssetClosingAmount { get; set; } Property Value Type Description UInt64 CloseRewards Rewards applied to CloseRemainderTo account. Declaration public MicroAlgos CloseRewards { get; set; } Property Value Type Description MicroAlgos ClosingAmount Closing amount for transaction. Declaration public MicroAlgos ClosingAmount { get; set; } Property Value Type Description MicroAlgos ConfigAsset If an asset is configured or created, the id used. Declaration public AssetIndex ConfigAsset { get; set; } Property Value Type Description AssetIndex EvalDelta Application global and local state delta Declaration public EvalDelta<TTxn> EvalDelta { get; set; } Property Value Type Description EvalDelta <TTxn> GlobalDelta Global state delta Declaration public StateDelta GlobalDelta { get; set; } Property Value Type Description StateDelta InnerTxns The inner transactions (if any) that were evaluated. Declaration public TTxn[] InnerTxns { get; set; } Property Value Type Description TTxn[] LocalDeltas When decoding EvalDeltas, the integer key represents an offset into [txn.Sender, txn.Accounts[0], txn.Accounts[1], ...] Declaration public StateDelta[] LocalDeltas { get; set; } Property Value Type Description StateDelta [] Logs Logs from application calls Declaration public string[] Logs { get; set; } Property Value Type Description String [] ReceiverRewards Rewards applied to Receiver account. Declaration public MicroAlgos ReceiverRewards { get; set; } Property Value Type Description MicroAlgos SenderRewards Rewards applied to Sender account. Declaration public MicroAlgos SenderRewards { get; set; } Property Value Type Description MicroAlgos Methods Equals(ApplyData<TTxn>) Declaration public bool Equals(ApplyData<TTxn> other) Parameters Type Name Description ApplyData <TTxn> other Returns Type Description Boolean Implements IApplyData<TTxn> IAppEvalDelta<TTxn>"
  },
  "api/AlgoSdk.ArrayComparer.html": {
    "href": "api/AlgoSdk.ArrayComparer.html",
    "title": "Class ArrayComparer | Unity Algorand SDK",
    "keywords": "Class ArrayComparer Inheritance Object ArrayComparer Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class ArrayComparer Methods Equals(Byte[][], Byte[][]) Declaration public static bool Equals(byte[][] x, byte[][] y) Parameters Type Name Description Byte [][] x Byte [][] y Returns Type Description Boolean Equals(String[], String[]) Declaration public static bool Equals(string[] x, string[] y) Parameters Type Name Description String [] x String [] y Returns Type Description Boolean Equals<T>(T[], T[]) Declaration public static bool Equals<T>(T[] x, T[] y) where T : IEquatable<T> Parameters Type Name Description T[] x T[] y Returns Type Description Boolean Type Parameters Name Description T"
  },
  "api/AlgoSdk.ArrayComparer-1.html": {
    "href": "api/AlgoSdk.ArrayComparer-1.html",
    "title": "Struct ArrayComparer<T> | Unity Algorand SDK",
    "keywords": "Struct ArrayComparer<T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ArrayComparer<T> : IEqualityComparer<T[]> where T : IEquatable<T> Type Parameters Name Description T Fields Instance Declaration public static readonly ArrayComparer<T> Instance Field Value Type Description ArrayComparer <T> Methods Equals(T[], T[]) Declaration public static bool Equals(T[] x, T[] y) Parameters Type Name Description T[] x T[] y Returns Type Description Boolean GetHashCode(T[]) Declaration public static int GetHashCode(T[] obj) Parameters Type Name Description T[] obj Returns Type Description Int32"
  },
  "api/AlgoSdk.ArrayComparer-2.html": {
    "href": "api/AlgoSdk.ArrayComparer-2.html",
    "title": "Struct ArrayComparer<T, TComparer> | Unity Algorand SDK",
    "keywords": "Struct ArrayComparer<T, TComparer> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ArrayComparer<T, TComparer> : IEqualityComparer<T[]> where TComparer : struct, IEqualityComparer<T> Type Parameters Name Description T TComparer Fields Instance Declaration public static readonly ArrayComparer<T, TComparer> Instance Field Value Type Description ArrayComparer <T, TComparer> Methods Equals(T[], T[]) Declaration public static bool Equals(T[] x, T[] y) Parameters Type Name Description T[] x T[] y Returns Type Description Boolean GetHashCode(T[]) Declaration public static int GetHashCode(T[] obj) Parameters Type Name Description T[] obj Returns Type Description Int32"
  },
  "api/AlgoSdk.AssetConfigTxn.html": {
    "href": "api/AlgoSdk.AssetConfigTxn.html",
    "title": "Struct AssetConfigTxn | Unity Algorand SDK",
    "keywords": "Struct AssetConfigTxn Implements IAssetConfigTxn ITransaction ITransactionHeader Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AssetConfigTxn : IAssetConfigTxn, ITransaction, ITransactionHeader, IEquatable<AssetConfigTxn> Properties AssetParams See AssetParams for all available fields. Declaration public AssetParams AssetParams { get; set; } Property Value Type Description AssetParams ConfigAsset For re-configure or destroy transactions, this is the unique asset ID. On asset creation, the ID is set to zero. Declaration public AssetIndex ConfigAsset { get; set; } Property Value Type Description AssetIndex Fee Paid by the sender to the FeeSink to prevent denial-of-service. The minimum fee on Algorand is currently 1000 microAlgos. Declaration public MicroAlgos Fee { get; set; } Property Value Type Description MicroAlgos FirstValidRound The first round for when the transaction is valid. If the transaction is sent prior to this round it will be rejected by the network. Declaration public ulong FirstValidRound { get; set; } Property Value Type Description UInt64 GenesisHash The hash of the genesis block of the network for which the transaction is valid. Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisId The human-readable string that identifies the network for the transaction. The genesis ID is found in the genesis block. Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes Group The group specifies that the transaction is part of a group and, if so, specifies the hash of the transaction group. See TransactionGroup . Declaration public TransactionId Group { get; set; } Property Value Type Description TransactionId LastValidRound The ending round for which the transaction is valid. After this round, the transaction will be rejected by the network. Declaration public ulong LastValidRound { get; set; } Property Value Type Description UInt64 Lease A lease enforces mutual exclusion of transactions. If this field is nonzero, then once the transaction is confirmed, it acquires the lease identified by the (Sender, Lease) pair of the transaction until the LastValid round passes. While this transaction possesses the lease, no other transaction specifying this lease can be confirmed. A lease is often used in the context of Algorand Smart Contracts to prevent replay attacks. Declaration public TransactionId Lease { get; set; } Property Value Type Description TransactionId Note Any data up to 1000 bytes. Declaration public byte[] Note { get; set; } Property Value Type Description Byte [] RekeyTo Specifies the authorized address. This address will be used to authorize all future transactions. Declaration public Address RekeyTo { get; set; } Property Value Type Description Address Sender The address of the account that pays the fee and amount. Declaration public Address Sender { get; set; } Property Value Type Description Address TransactionType Specifies the type of transaction. This value is automatically generated using any of the developer tools. Declaration public TransactionType TransactionType { get; } Property Value Type Description TransactionType Methods CopyFrom(Transaction) Copy relevant fields to this transaction. Declaration public void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction A raw transaction with all possible transaction fields. CopyTo(ref Transaction) Copy this transactions fields to a Transaction which contains all possible transaction fields. Declaration public void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction A raw transaction with all possible transaction fields. Equals(AssetConfigTxn) Declaration public bool Equals(AssetConfigTxn other) Parameters Type Name Description AssetConfigTxn other Returns Type Description Boolean Implements IAssetConfigTxn ITransaction ITransactionHeader"
  },
  "api/AlgoSdk.AssetConfigTxn.Params.html": {
    "href": "api/AlgoSdk.AssetConfigTxn.Params.html",
    "title": "Struct AssetConfigTxn.Params | Unity Algorand SDK",
    "keywords": "Struct AssetConfigTxn.Params Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Params : IEquatable<AssetConfigTxn.Params> Fields AssetParams Declaration public AssetParams AssetParams Field Value Type Description AssetParams ConfigAsset Declaration public AssetIndex ConfigAsset Field Value Type Description AssetIndex Methods Equals(AssetConfigTxn.Params) Declaration public bool Equals(AssetConfigTxn.Params other) Parameters Type Name Description AssetConfigTxn.Params other Returns Type Description Boolean"
  },
  "api/AlgoSdk.AssetFreezeTxn.html": {
    "href": "api/AlgoSdk.AssetFreezeTxn.html",
    "title": "Struct AssetFreezeTxn | Unity Algorand SDK",
    "keywords": "Struct AssetFreezeTxn Implements IAssetFreezeTxn ITransaction ITransactionHeader Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AssetFreezeTxn : IAssetFreezeTxn, ITransaction, ITransactionHeader, IEquatable<AssetFreezeTxn> Properties AssetFrozen True to freeze the asset. Declaration public Optional<bool> AssetFrozen { get; set; } Property Value Type Description Optional < Boolean > Fee Paid by the sender to the FeeSink to prevent denial-of-service. The minimum fee on Algorand is currently 1000 microAlgos. Declaration public MicroAlgos Fee { get; set; } Property Value Type Description MicroAlgos FirstValidRound The first round for when the transaction is valid. If the transaction is sent prior to this round it will be rejected by the network. Declaration public ulong FirstValidRound { get; set; } Property Value Type Description UInt64 FreezeAccount The address of the account whose asset is being frozen or unfrozen. Declaration public Address FreezeAccount { get; set; } Property Value Type Description Address FreezeAsset The asset ID being frozen or unfrozen. Declaration public AssetIndex FreezeAsset { get; set; } Property Value Type Description AssetIndex GenesisHash The hash of the genesis block of the network for which the transaction is valid. Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisId The human-readable string that identifies the network for the transaction. The genesis ID is found in the genesis block. Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes Group The group specifies that the transaction is part of a group and, if so, specifies the hash of the transaction group. See TransactionGroup . Declaration public TransactionId Group { get; set; } Property Value Type Description TransactionId LastValidRound The ending round for which the transaction is valid. After this round, the transaction will be rejected by the network. Declaration public ulong LastValidRound { get; set; } Property Value Type Description UInt64 Lease A lease enforces mutual exclusion of transactions. If this field is nonzero, then once the transaction is confirmed, it acquires the lease identified by the (Sender, Lease) pair of the transaction until the LastValid round passes. While this transaction possesses the lease, no other transaction specifying this lease can be confirmed. A lease is often used in the context of Algorand Smart Contracts to prevent replay attacks. Declaration public TransactionId Lease { get; set; } Property Value Type Description TransactionId Note Any data up to 1000 bytes. Declaration public byte[] Note { get; set; } Property Value Type Description Byte [] RekeyTo Specifies the authorized address. This address will be used to authorize all future transactions. Declaration public Address RekeyTo { get; set; } Property Value Type Description Address Sender The address of the account that pays the fee and amount. Declaration public Address Sender { get; set; } Property Value Type Description Address TransactionType Specifies the type of transaction. This value is automatically generated using any of the developer tools. Declaration public TransactionType TransactionType { get; } Property Value Type Description TransactionType Methods CopyFrom(Transaction) Copy relevant fields to this transaction. Declaration public void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction A raw transaction with all possible transaction fields. CopyTo(ref Transaction) Copy this transactions fields to a Transaction which contains all possible transaction fields. Declaration public void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction A raw transaction with all possible transaction fields. Equals(AssetFreezeTxn) Declaration public bool Equals(AssetFreezeTxn other) Parameters Type Name Description AssetFreezeTxn other Returns Type Description Boolean Implements IAssetFreezeTxn ITransaction ITransactionHeader"
  },
  "api/AlgoSdk.AssetFreezeTxn.Params.html": {
    "href": "api/AlgoSdk.AssetFreezeTxn.Params.html",
    "title": "Struct AssetFreezeTxn.Params | Unity Algorand SDK",
    "keywords": "Struct AssetFreezeTxn.Params Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Params : IEquatable<AssetFreezeTxn.Params> Fields AssetFrozen Declaration public Optional<bool> AssetFrozen Field Value Type Description Optional < Boolean > FreezeAccount Declaration public Address FreezeAccount Field Value Type Description Address FreezeAsset Declaration public AssetIndex FreezeAsset Field Value Type Description AssetIndex Methods Equals(AssetFreezeTxn.Params) Declaration public bool Equals(AssetFreezeTxn.Params other) Parameters Type Name Description AssetFreezeTxn.Params other Returns Type Description Boolean"
  },
  "api/AlgoSdk.AssetIndex.html": {
    "href": "api/AlgoSdk.AssetIndex.html",
    "title": "Struct AssetIndex | Unity Algorand SDK",
    "keywords": "Struct AssetIndex Identifier of an Asset Implements IWrappedValue < UInt64 > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AssetIndex : IEquatable<AssetIndex>, IEquatable<ulong>, IWrappedValue<ulong> Constructors AssetIndex(UInt64) Declaration public AssetIndex(ulong index) Parameters Type Name Description UInt64 index Fields Index Declaration public ulong Index Field Value Type Description UInt64 Methods Equals(AssetIndex) Declaration public bool Equals(AssetIndex other) Parameters Type Name Description AssetIndex other Returns Type Description Boolean Equals(UInt64) Declaration public bool Equals(ulong other) Parameters Type Name Description UInt64 other Returns Type Description Boolean Operators Implicit(AssetIndex to UInt64) Declaration public static implicit operator ulong (AssetIndex assetIndex) Parameters Type Name Description AssetIndex assetIndex Returns Type Description UInt64 Implicit(UInt64 to AssetIndex) Declaration public static implicit operator AssetIndex(ulong index) Parameters Type Name Description UInt64 index Returns Type Description AssetIndex Explicit Interface Implementations IWrappedValue<UInt64>.WrappedValue Declaration ulong IWrappedValue<ulong>.WrappedValue { get; set; } Returns Type Description UInt64 Implements IWrappedValue<T>"
  },
  "api/AlgoSdk.AssetParams.html": {
    "href": "api/AlgoSdk.AssetParams.html",
    "title": "Struct AssetParams | Unity Algorand SDK",
    "keywords": "Struct AssetParams AssetParams specifies the parameters for an asset. [apar] when part of an AssetConfig transaction. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AssetParams : IEquatable<AssetParams> Fields Clawback Address of account used to clawback holdings of this asset. If empty, clawback is not permitted. Declaration public Address Clawback Field Value Type Description Address Decimals The number of digits to use after the decimal point when displaying this asset. If 0, the asset is not divisible. If 1, the base unit of the asset is in tenths. If 2, the base unit of the asset is in hundredths, and so on. This value must be between 0 and 19 (inclusive). Minimum value: 0. Maximum value: 19. Declaration public uint Decimals Field Value Type Description UInt32 DefaultFrozen Whether holdings of this asset are frozen by default. Declaration public bool DefaultFrozen Field Value Type Description Boolean Freeze Address of account used to freeze holdings of this asset. If empty, freezing is not permitted. Declaration public Address Freeze Field Value Type Description Address Manager Address of account used to manage the keys of this asset and to destroy it. Declaration public Address Manager Field Value Type Description Address MetadataHash A commitment to some unspecified asset metadata. The format of this metadata is up to the application. Declaration public Sha512_256_Hash MetadataHash Field Value Type Description Sha512_256_Hash Name Name of this asset, as supplied by the creator. Included only when the asset name is composed of printable utf-8 characters. Declaration public FixedString64Bytes Name Field Value Type Description FixedString64Bytes Reserve Address of account holding reserve (non-minted) units of this asset. Declaration public Address Reserve Field Value Type Description Address Total The total number of units of this asset. Declaration public ulong Total Field Value Type Description UInt64 UnitName Name of a unit of this asset, as supplied by the creator. Included only when the name of a unit of this asset is composed of printable utf-8 characters. Declaration public FixedString32Bytes UnitName Field Value Type Description FixedString32Bytes Url URL where more information about the asset can be retrieved. Included only when the URL is composed of printable utf-8 characters. Declaration public FixedString128Bytes Url Field Value Type Description FixedString128Bytes Methods Equals(AssetParams) Declaration public bool Equals(AssetParams other) Parameters Type Name Description AssetParams other Returns Type Description Boolean"
  },
  "api/AlgoSdk.AssetTransferTxn.html": {
    "href": "api/AlgoSdk.AssetTransferTxn.html",
    "title": "Struct AssetTransferTxn | Unity Algorand SDK",
    "keywords": "Struct AssetTransferTxn Implements IAssetTransferTxn ITransaction ITransactionHeader Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AssetTransferTxn : IAssetTransferTxn, ITransaction, ITransactionHeader, IEquatable<AssetTransferTxn> Properties AssetAmount The amount of the asset to be transferred. A zero amount transferred to self allocates that asset in the account's Asset map. Declaration public ulong AssetAmount { get; set; } Property Value Type Description UInt64 AssetCloseTo Specify this field to remove the asset holding from the sender account and reduce the account's minimum balance (i.e. opt-out of the asset). Declaration public Address AssetCloseTo { get; set; } Property Value Type Description Address AssetReceiver The recipient of the asset transfer. Declaration public Address AssetReceiver { get; set; } Property Value Type Description Address AssetSender The sender of the transfer. The regular field should be used and this one set to the zero value for regular transfers between accounts. If this value is nonzero, it indicates a clawback transaction where the sender is the asset's clawback address and the asset sender is the address from which the funds will be withdrawn. Declaration public Address AssetSender { get; set; } Property Value Type Description Address Fee Paid by the sender to the FeeSink to prevent denial-of-service. The minimum fee on Algorand is currently 1000 microAlgos. Declaration public MicroAlgos Fee { get; set; } Property Value Type Description MicroAlgos FirstValidRound The first round for when the transaction is valid. If the transaction is sent prior to this round it will be rejected by the network. Declaration public ulong FirstValidRound { get; set; } Property Value Type Description UInt64 GenesisHash The hash of the genesis block of the network for which the transaction is valid. Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisId The human-readable string that identifies the network for the transaction. The genesis ID is found in the genesis block. Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes Group The group specifies that the transaction is part of a group and, if so, specifies the hash of the transaction group. See TransactionGroup . Declaration public TransactionId Group { get; set; } Property Value Type Description TransactionId LastValidRound The ending round for which the transaction is valid. After this round, the transaction will be rejected by the network. Declaration public ulong LastValidRound { get; set; } Property Value Type Description UInt64 Lease A lease enforces mutual exclusion of transactions. If this field is nonzero, then once the transaction is confirmed, it acquires the lease identified by the (Sender, Lease) pair of the transaction until the LastValid round passes. While this transaction possesses the lease, no other transaction specifying this lease can be confirmed. A lease is often used in the context of Algorand Smart Contracts to prevent replay attacks. Declaration public TransactionId Lease { get; set; } Property Value Type Description TransactionId Note Any data up to 1000 bytes. Declaration public byte[] Note { get; set; } Property Value Type Description Byte [] RekeyTo Specifies the authorized address. This address will be used to authorize all future transactions. Declaration public Address RekeyTo { get; set; } Property Value Type Description Address Sender The address of the account that pays the fee and amount. Declaration public Address Sender { get; set; } Property Value Type Description Address TransactionType Specifies the type of transaction. This value is automatically generated using any of the developer tools. Declaration public TransactionType TransactionType { get; } Property Value Type Description TransactionType XferAsset The unique ID of the asset to be transferred. Declaration public AssetIndex XferAsset { get; set; } Property Value Type Description AssetIndex Methods CopyFrom(Transaction) Copy relevant fields to this transaction. Declaration public void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction A raw transaction with all possible transaction fields. CopyTo(ref Transaction) Copy this transactions fields to a Transaction which contains all possible transaction fields. Declaration public void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction A raw transaction with all possible transaction fields. Equals(AssetTransferTxn) Declaration public bool Equals(AssetTransferTxn other) Parameters Type Name Description AssetTransferTxn other Returns Type Description Boolean Implements IAssetTransferTxn ITransaction ITransactionHeader"
  },
  "api/AlgoSdk.AssetTransferTxn.Params.html": {
    "href": "api/AlgoSdk.AssetTransferTxn.Params.html",
    "title": "Struct AssetTransferTxn.Params | Unity Algorand SDK",
    "keywords": "Struct AssetTransferTxn.Params Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Params : IEquatable<AssetTransferTxn.Params> Fields AssetAmount Declaration public ulong AssetAmount Field Value Type Description UInt64 AssetCloseTo Declaration public Address AssetCloseTo Field Value Type Description Address AssetReceiver Declaration public Address AssetReceiver Field Value Type Description Address AssetSender Declaration public Address AssetSender Field Value Type Description Address XferAsset Declaration public AssetIndex XferAsset Field Value Type Description AssetIndex Methods Equals(AssetTransferTxn.Params) Declaration public bool Equals(AssetTransferTxn.Params other) Parameters Type Name Description AssetTransferTxn.Params other Returns Type Description Boolean"
  },
  "api/AlgoSdk.AtomicTxn.AsyncSigning.html": {
    "href": "api/AlgoSdk.AtomicTxn.AsyncSigning.html",
    "title": "Struct AtomicTxn.AsyncSigning | Unity Algorand SDK",
    "keywords": "Struct AtomicTxn.AsyncSigning Represents an Atomic Txn that is being signed with asynchronous signers. Implements AtomicTxn.ISigning < AtomicTxn.AsyncSigning > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AsyncSigning : AtomicTxn.ISigning<AtomicTxn.AsyncSigning> Remarks Once all signatures have been added, serialize this transaction group to msgpack with FinishSigningAsync() . Constructors AsyncSigning(Transaction[], TransactionSignature[], TxnIndices) Create a new Atomic Txn group that contains some asynchronous signers. Declaration public AsyncSigning(Transaction[] txns, TransactionSignature[] sigs, TxnIndices signedIndices) Parameters Type Name Description Transaction [] txns Transactions that are part of this group. TransactionSignature [] sigs Existing signatures. TxnIndices signedIndices Indices of transactions with existing signatures. Properties SignedTxnIndices Indices of the transactions that have already been signed. Declaration public TxnIndices SignedTxnIndices { get; set; } Property Value Type Description TxnIndices Sigs Signatures associated with each transaction. Declaration public TransactionSignature[] Sigs { get; } Property Value Type Description TransactionSignature [] Txns Transactions in this group. Declaration public Transaction[] Txns { get; } Property Value Type Description Transaction [] Methods AsAsync() Represent this signing atomic txn group as an async signing group. Declaration public AtomicTxn.AsyncSigning AsAsync() Returns Type Description AtomicTxn.AsyncSigning Remarks Async signing groups will require waiting for signatures signing is finished. FinishSigningAsync() Finish signing this group and return the raw msgpack, ready to submit. Declaration public UniTask<byte[]> FinishSigningAsync() Returns Type Description UniTask < Byte []> Msgpack encoding of the transaction group. FinishSigningAsync(Allocator) Finish signing this group and return the msgpack of the group, ready to send to the network. Declaration public UniTask<NativeList<byte>> FinishSigningAsync(Allocator allocator) Parameters Type Name Description Allocator allocator Allocator to use in the returned NativeList (which must be disposed). Returns Type Description UniTask < NativeList < Byte >> A natively-allocated, msgpack-encoded transaction group, ready to send to the network. SignWithAsync<T>(T, TxnIndices, CancellationToken) Sign transactions in this group indicated by the given indices with the given signer. Declaration public AtomicTxn.AsyncSigning SignWithAsync<T>(T signer, TxnIndices txnsToSign, CancellationToken cancellationToken = null) where T : IAsyncSigner Parameters Type Name Description T signer TxnIndices txnsToSign CancellationToken cancellationToken Returns Type Description AtomicTxn.AsyncSigning An Async Signing Atomic Txn Group with new signatures awaiting to be added. Type Parameters Name Description T SignWithAsync<T, TProgress>(T, TxnIndices, TProgress, CancellationToken) Sign transactions in this group indicated by the given indices with the given signer. Declaration public AtomicTxn.AsyncSigning SignWithAsync<T, TProgress>(T signer, TxnIndices txnsToSign, TProgress progress, CancellationToken cancellationToken = null) where T : IAsyncSignerWithProgress where TProgress : IProgress<float> Parameters Type Name Description T signer TxnIndices txnsToSign TProgress progress CancellationToken cancellationToken Returns Type Description AtomicTxn.AsyncSigning An Async Signing Atomic Txn Group with new signatures awaiting to be added. Type Parameters Name Description T TProgress Implements AtomicTxn.ISigning<T>"
  },
  "api/AlgoSdk.AtomicTxn.Building.html": {
    "href": "api/AlgoSdk.AtomicTxn.Building.html",
    "title": "Struct AtomicTxn.Building | Unity Algorand SDK",
    "keywords": "Struct AtomicTxn.Building Represents an Atomic Txn group that is currently being built up with more transactions. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Building Remarks Once you are done building this txn group, use Build() to prepare the group for signing. Properties Item[Int32] Get the transaction in this group at the given index. Declaration public Transaction this[int i] { get; } Parameters Type Name Description Int32 i Property Value Type Description Transaction TxnCount The current number of transactions in this group. Declaration public int TxnCount { get; } Property Value Type Description Int32 Methods AddMethodCall<T>(Address, TransactionParams, AppIndex, Method, T, OnCompletion) Encode and apply ABI Method arguments to an AppCallTxn then add the transaction to this group. Declaration public AtomicTxn.Building AddMethodCall<T>(Address sender, TransactionParams txnParams, AppIndex applicationId, Method method, in T methodArgs, OnCompletion onComplete = OnCompletion.NoOp) where T : struct, IArgEnumerator<T> Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams AppIndex applicationId ID of the application being configured. Method method The ABI method definition. T methodArgs The list of arguments to encode. OnCompletion onComplete Defines what additional actions occur with the transaction. Returns Type Description AtomicTxn.Building An Atomic Transaction in the Building state, ready to add more transactions or build. Type Parameters Name Description T The type of arg enumerator. AddTxn<T>(T) Add a transaction to this group. Declaration public AtomicTxn.Building AddTxn<T>(T txn) where T : ITransaction Parameters Type Name Description T txn The transaction to add to this group, with a zeroed-out property. Returns Type Description AtomicTxn.Building An Atomic Transaction in the Building state, ready to add more transactions or build. Type Parameters Name Description T The type of the transaction. Remarks The transaction must not have its property set. Cannot add more transactions than . Build() Builds the current Atomic Transaction, generating a group ID and assigning it to all transactions in this group. Declaration public AtomicTxn.Signing Build() Returns Type Description AtomicTxn.Signing An Atomic Transaction that's ready to be signed by different signers."
  },
  "api/AlgoSdk.AtomicTxn.html": {
    "href": "api/AlgoSdk.AtomicTxn.html",
    "title": "Class AtomicTxn | Unity Algorand SDK",
    "keywords": "Class AtomicTxn Inheritance Object AtomicTxn Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class AtomicTxn Fields IdPrefix The prefix to use when converting this group of transactions to bytes. Declaration public static readonly byte[] IdPrefix Field Value Type Description Byte [] MaxNumTxns Max number of allowed transactions in an atomic transaction. Declaration public const int MaxNumTxns = 16 Field Value Type Description Int32 Methods CheckTxnIndicesToSign<TSigning>(TSigning, TxnIndices) Checks whether the given indices can be signed. Will throw exceptions if they cannot be signed. Declaration public static void CheckTxnIndicesToSign<TSigning>(this TSigning group, TxnIndices txnsToSign) where TSigning : AtomicTxn.ISigning<TSigning> Parameters Type Name Description TSigning group The signing atomic txn group. TxnIndices txnsToSign The txn indices to sign. Type Parameters Name Description TSigning The type of the signing atomic txn group. Remarks Indices must be in range of the length of transactions and cannot be associated with any transactions that are already signed. GetTxnIndicesWithSender<TSigning>(TSigning, Address) Get the transaction indices that have Sender equal to the given address. Declaration public static TxnIndices GetTxnIndicesWithSender<TSigning>(this TSigning group, Address sender) where TSigning : AtomicTxn.ISigning<TSigning> Parameters Type Name Description TSigning group The atomic transaction group to look for transactions. Address sender The address to compare to the transaction's Sender address. Returns Type Description TxnIndices Transaction indices flagged with the indices in the correct position. Type Parameters Name Description TSigning The type of the signing atomic txn group. SetSignatures<TSigning>(TSigning, SignedTxn<Transaction>[], TxnIndices) Utility function to set signatures given by signers to signatures in this signing atomic txn group. Declaration public static void SetSignatures<TSigning>(this TSigning group, SignedTxn<Transaction>[] signedTxns, TxnIndices indices) where TSigning : AtomicTxn.ISigning<TSigning> Parameters Type Name Description TSigning group The signing atomic txn group. SignedTxn < Transaction >[] signedTxns The result from signers. TxnIndices indices The txn indices that were going to be signed. Type Parameters Name Description TSigning The type of the signing atomic txn group. SignWith<TSigning, TSigner>(TSigning, TSigner) Sign transactions in this group where the Sender equals the Address . Declaration public static TSigning SignWith<TSigning, TSigner>(this TSigning group, TSigner signer) where TSigning : AtomicTxn.ISigning<TSigning> where TSigner : IAccount, ISigner Parameters Type Name Description TSigning group The signing atomic txn group. TSigner signer The account to sign with. Returns Type Description TSigning This signing atomic txn group with new signatures added. Type Parameters Name Description TSigning The type of the signing atomic txn group. TSigner The type of the account signer. SignWith<TSigning, TSigner>(TSigning, TSigner, TxnIndices) Sign transactions in this group indicated by the given indices with the given signer. Declaration public static TSigning SignWith<TSigning, TSigner>(this TSigning group, TSigner signer, TxnIndices txnsToSign) where TSigning : AtomicTxn.ISigning<TSigning> where TSigner : ISigner Parameters Type Name Description TSigning group The signing atomic txn group. TSigner signer The signer to sign these transactions. TxnIndices txnsToSign The indices of the transactions to sign. Returns Type Description TSigning This signing atomic txn group with new signatures added. Type Parameters Name Description TSigning The type of the signing atomic txn group. TSigner The type of the account signer. SignWithAsync<TSigning, TSigner>(TSigning, TSigner, TxnIndices, CancellationToken) Sign transactions in this group indicated by the given indices with the given signer. Declaration public static AtomicTxn.AsyncSigning SignWithAsync<TSigning, TSigner>(this TSigning group, TSigner signer, TxnIndices txnsToSign, CancellationToken cancellationToken = null) where TSigning : AtomicTxn.ISigning<TSigning> where TSigner : IAsyncSigner Parameters Type Name Description TSigning group The signing atomic txn group. TSigner signer The async signer account to sign the transactions. TxnIndices txnsToSign The indices of the transactions to sign. CancellationToken cancellationToken An optional cancellation token for this signer. Returns Type Description AtomicTxn.AsyncSigning An Async Signing Atomic Txn Group with new signatures awaiting to be added. Type Parameters Name Description TSigning The type of the signing atomic txn group. TSigner The type of the account signer. SignWithAsync<TSigning, TSigner>(TSigning, TSigner, CancellationToken) Sign transactions in this group where the Sender equals the Address . Declaration public static AtomicTxn.AsyncSigning SignWithAsync<TSigning, TSigner>(this TSigning group, TSigner signer, CancellationToken cancellationToken = null) where TSigning : AtomicTxn.ISigning<TSigning> where TSigner : IAccount, IAsyncSigner Parameters Type Name Description TSigning group The signing atomic txn group. TSigner signer The async signer account to sign the transactions. CancellationToken cancellationToken An optional cancellation token for this signer. Returns Type Description AtomicTxn.AsyncSigning An Async Signing Atomic Txn Group with new signatures awaiting to be added. Type Parameters Name Description TSigning The type of the signing atomic txn group. TSigner The type of the account signer. SignWithAsync<TSigning, TSigner, TProgress>(TSigning, TSigner, TProgress, CancellationToken) Sign transactions in this group where the Sender equals the Address . Declaration public static AtomicTxn.AsyncSigning SignWithAsync<TSigning, TSigner, TProgress>(this TSigning group, TSigner signer, TProgress progress, CancellationToken cancellationToken = null) where TSigning : AtomicTxn.ISigning<TSigning> where TSigner : IAccount, IAsyncSignerWithProgress where TProgress : IProgress<float> Parameters Type Name Description TSigning group The signing atomic txn group. TSigner signer The async signer account to sign the transactions. TProgress progress A progress token used to track progress CancellationToken cancellationToken An optional cancellation token for this signer. Returns Type Description AtomicTxn.AsyncSigning An Async Signing Atomic Txn Group with new signatures awaiting to be added. Type Parameters Name Description TSigning The type of the signing atomic txn group. TSigner The type of the account signer. TProgress SignWithAsync<TSigning, TSigner, TProgress>(TSigning, TSigner, TxnIndices, TProgress, CancellationToken) Sign transactions in this group indicated by the given indices with the given signer. Declaration public static AtomicTxn.AsyncSigning SignWithAsync<TSigning, TSigner, TProgress>(this TSigning group, TSigner signer, TxnIndices txnsToSign, TProgress progress, CancellationToken cancellationToken = null) where TSigning : AtomicTxn.ISigning<TSigning> where TSigner : IAsyncSignerWithProgress where TProgress : IProgress<float> Parameters Type Name Description TSigning group The signing atomic txn group. TSigner signer The async signer account to sign the transactions. TxnIndices txnsToSign The indices of the transactions to sign. TProgress progress A progress token used to track progress CancellationToken cancellationToken An optional cancellation token for this signer. Returns Type Description AtomicTxn.AsyncSigning An Async Signing Atomic Txn Group with new signatures awaiting to be added. Type Parameters Name Description TSigning The type of the signing atomic txn group. TSigner The type of the account signer. TProgress"
  },
  "api/AlgoSdk.AtomicTxn.ISigning-1.html": {
    "href": "api/AlgoSdk.AtomicTxn.ISigning-1.html",
    "title": "Interface AtomicTxn.ISigning<T> | Unity Algorand SDK",
    "keywords": "Interface AtomicTxn.ISigning<T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface ISigning<T> where T : AtomicTxn.ISigning<T> Type Parameters Name Description T Properties SignedTxnIndices Indices of the transactions that have already been signed. Declaration TxnIndices SignedTxnIndices { get; set; } Property Value Type Description TxnIndices Sigs Signatures associated with each transaction. Declaration TransactionSignature[] Sigs { get; } Property Value Type Description TransactionSignature [] Txns Transactions in this group. Declaration Transaction[] Txns { get; } Property Value Type Description Transaction [] Methods AsAsync() Represent this signing atomic txn group as an async signing group. Declaration AtomicTxn.AsyncSigning AsAsync() Returns Type Description AtomicTxn.AsyncSigning Remarks Async signing groups will require waiting for signatures signing is finished."
  },
  "api/AlgoSdk.AtomicTxn.Signing.html": {
    "href": "api/AlgoSdk.AtomicTxn.Signing.html",
    "title": "Struct AtomicTxn.Signing | Unity Algorand SDK",
    "keywords": "Struct AtomicTxn.Signing Represents an Atomic Txn that is currently being signed. Implements AtomicTxn.ISigning < AtomicTxn.Signing > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Signing : AtomicTxn.ISigning<AtomicTxn.Signing> Remarks Once all signatures have been added, serialize this transaction group to msgpack with FinishSigning() . Constructors Signing(Transaction[]) Create a new AtomicTransaction that is ready for signing. This assumes the given transactions already have the correct group id set. Declaration public Signing(Transaction[] txns) Parameters Type Name Description Transaction [] txns The transactions making up this transaction group. Properties SignedTxnIndices Indices of the transactions that have already been signed. Declaration public TxnIndices SignedTxnIndices { get; set; } Property Value Type Description TxnIndices Sigs Signatures associated with each transaction. Declaration public TransactionSignature[] Sigs { get; } Property Value Type Description TransactionSignature [] Txns Transactions in this group. Declaration public Transaction[] Txns { get; } Property Value Type Description Transaction [] Methods AsAsync() Represent this signing atomic txn group as an async signing group. Declaration public AtomicTxn.AsyncSigning AsAsync() Returns Type Description AtomicTxn.AsyncSigning Remarks Async signing groups will require waiting for signatures signing is finished. FinishSigning() Finish signing this group and return the raw msgpack, ready to submit. Declaration public byte[] FinishSigning() Returns Type Description Byte [] Msgpack encoding of the transaction group. FinishSigning(Allocator) Finish signing this group and return the msgpack of the group, ready to send to the network. Declaration public NativeList<byte> FinishSigning(Allocator allocator) Parameters Type Name Description Allocator allocator Allocator to use in the returned NativeList (which must be disposed). Returns Type Description NativeList < Byte > A natively-allocated, msgpack-encoded transaction group, ready to send to the network. Implements AtomicTxn.ISigning<T>"
  },
  "api/AlgoSdk.Base32Encoding.html": {
    "href": "api/AlgoSdk.Base32Encoding.html",
    "title": "Class Base32Encoding | Unity Algorand SDK",
    "keywords": "Class Base32Encoding Inheritance Object Base32Encoding Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class Base32Encoding Fields PaddingCharValue Declaration public static readonly byte PaddingCharValue Field Value Type Description Byte Methods ToBytes(String) Declaration public static byte[] ToBytes(string input) Parameters Type Name Description String input Returns Type Description Byte [] ToBytes<TByteArray, TString>(TString, ref TByteArray) Declaration public static void ToBytes<TByteArray, TString>(TString s, ref TByteArray bytes) where TByteArray : struct, IByteArray where TString : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description TString s TByteArray bytes Type Parameters Name Description TByteArray TString ToString(Byte[]) Declaration public static string ToString(byte[] input) Parameters Type Name Description Byte [] input Returns Type Description String ToString<TByteArray, TString>(TByteArray, ref TString) Declaration public static void ToString<TByteArray, TString>(TByteArray bytes, ref TString s) where TByteArray : struct, IByteArray where TString : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description TByteArray bytes TString s Type Parameters Name Description TByteArray TString TrimPadding<T>(ref T) Declaration public static void TrimPadding<T>(ref T fs) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Type Parameters Name Description T"
  },
  "api/AlgoSdk.Base64Encoding.html": {
    "href": "api/AlgoSdk.Base64Encoding.html",
    "title": "Class Base64Encoding | Unity Algorand SDK",
    "keywords": "Class Base64Encoding Inheritance Object Base64Encoding Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class Base64Encoding Methods Base64ToUtf8<T, U>(ref T, ref U) Declaration public static void Base64ToUtf8<T, U>(this ref T src, ref U tar) where T : struct, IUTF8Bytes, INativeList<byte> where U : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description T src U tar Type Parameters Name Description T U BytesRequiredForBase64Encoding(Int32) Declaration public static int BytesRequiredForBase64Encoding(int currentBytes) Parameters Type Name Description Int32 currentBytes Returns Type Description Int32 CopyFromBase64<TByteArray, T>(ref TByteArray, T, Int32) Declaration public static void CopyFromBase64<TByteArray, T>(this ref TByteArray bytes, T s, int maxLength = 2147483647) where TByteArray : struct, IArray<byte> where T : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description TByteArray bytes T s Int32 maxLength Type Parameters Name Description TByteArray T CopyToBase64<TBytes, T>(TBytes, ref T) Declaration public static void CopyToBase64<TBytes, T>(this TBytes bytes, ref T s) where TBytes : struct, IArray<byte> where T : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description TBytes bytes T s Type Parameters Name Description TBytes T Utf8ToBase64<T, U>(ref T, ref U) Declaration public static void Utf8ToBase64<T, U>(this ref T src, ref U tar) where T : struct, IUTF8Bytes, INativeList<byte> where U : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description T src U tar Type Parameters Name Description T U"
  },
  "api/AlgoSdk.BlockCertificate.html": {
    "href": "api/AlgoSdk.BlockCertificate.html",
    "title": "Struct BlockCertificate | Unity Algorand SDK",
    "keywords": "Struct BlockCertificate Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct BlockCertificate : IEquatable<BlockCertificate> Methods Equals(BlockCertificate) Declaration public bool Equals(BlockCertificate other) Parameters Type Name Description BlockCertificate other Returns Type Description Boolean"
  },
  "api/AlgoSdk.BlockHash.html": {
    "href": "api/AlgoSdk.BlockHash.html",
    "title": "Struct BlockHash | Unity Algorand SDK",
    "keywords": "Struct BlockHash Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct BlockHash : IByteArray, IEquatable<BlockHash> Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public int Length { get; } Property Value Type Description Int32 Methods Equals(BlockHash) Declaration public bool Equals(BlockHash other) Parameters Type Name Description BlockHash other Returns Type Description Boolean GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void * Operators Implicit(BlockHash to Sha512_256_Hash) Declaration public static implicit operator Sha512_256_Hash(BlockHash blockHash) Parameters Type Name Description BlockHash blockHash Returns Type Description Sha512_256_Hash Implicit(FixedString64Bytes to BlockHash) Declaration public static implicit operator BlockHash(FixedString64Bytes fs) Parameters Type Name Description FixedString64Bytes fs Returns Type Description BlockHash Implicit(Sha512_256_Hash to BlockHash) Declaration public static implicit operator BlockHash(Sha512_256_Hash hash) Parameters Type Name Description Sha512_256_Hash hash Returns Type Description BlockHash Implicit(String to BlockHash) Declaration public static implicit operator BlockHash(string s) Parameters Type Name Description String s Returns Type Description BlockHash"
  },
  "api/AlgoSdk.BlockHeader.html": {
    "href": "api/AlgoSdk.BlockHeader.html",
    "title": "Struct BlockHeader | Unity Algorand SDK",
    "keywords": "Struct BlockHeader Block information. Implements IBlockRewards IBlockUpgradeState IBlockUpgradeVote Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct BlockHeader : IEquatable<BlockHeader>, IBlockRewards, IBlockUpgradeState, IBlockUpgradeVote Fields Cc Declaration public AlgoApiObject Cc Field Value Type Description AlgoApiObject GenesisHash [gh] hash to which this block belongs. Declaration public GenesisHash GenesisHash Field Value Type Description GenesisHash GenesisId [gen] ID to which this block belongs. Declaration public FixedString64Bytes GenesisId Field Value Type Description FixedString64Bytes PreviousBlockHash [prev] Previous block hash. Declaration public BlockHash PreviousBlockHash Field Value Type Description BlockHash Rewards See BlockRewards Declaration public BlockRewards Rewards Field Value Type Description BlockRewards RootTransaction [txn] TransactionsRoot authenticates the set of transactions appearing in the block. More specifically, it's the root of a merkle tree whose leaves are the block's Txids, in lexicographic order. For the empty block, it's 0. Note that the TxnRoot does not authenticate the signatures on the transactions, only the transactions themselves. Two blocks with the same transactions but in a different order and with different signatures will have the same TxnRoot. Declaration public Sha512_256_Hash RootTransaction Field Value Type Description Sha512_256_Hash Round [rnd] Current round on which this block was appended to the chain. Declaration public ulong Round Field Value Type Description UInt64 Seed [seed] Sortition seed. Declaration public Sha512_256_Hash Seed Field Value Type Description Sha512_256_Hash Timestamp [ts] Block creation timestamp in seconds since epoch Declaration public ulong Timestamp Field Value Type Description UInt64 TransactionCounter [tc] TxnCounter counts the number of transactions committed in the ledger, from the time at which support for this feature was introduced. Declaration public ulong TransactionCounter Field Value Type Description UInt64 Remarks Specifically, TxnCounter is the number of the next transaction that will be committed after this block. It is 0 when no transactions have ever been committed (since TxnCounter started being supported). Transactions [txns] list of transactions corresponding to a given round. Declaration public BlockTransaction[] Transactions Field Value Type Description BlockTransaction [] UpgradeState See BlockUpgradeState Declaration public BlockUpgradeState UpgradeState Field Value Type Description BlockUpgradeState UpgradeVote See BlockUpgradeVote Declaration public BlockUpgradeVote UpgradeVote Field Value Type Description BlockUpgradeVote Properties CurrentProtocol Declaration public FixedString128Bytes CurrentProtocol { get; set; } Property Value Type Description FixedString128Bytes FeeSink Declaration public Address FeeSink { get; set; } Property Value Type Description Address NextProtocol Declaration public FixedString128Bytes NextProtocol { get; set; } Property Value Type Description FixedString128Bytes NextProtocolApprovals Declaration public ulong NextProtocolApprovals { get; set; } Property Value Type Description UInt64 NextProtocolSwitchOn Declaration public ulong NextProtocolSwitchOn { get; set; } Property Value Type Description UInt64 NextProtocolVoteBefore Declaration public ulong NextProtocolVoteBefore { get; set; } Property Value Type Description UInt64 RewardsCalculationRound Declaration public ulong RewardsCalculationRound { get; set; } Property Value Type Description UInt64 RewardsLevel Declaration public ulong RewardsLevel { get; set; } Property Value Type Description UInt64 RewardsPool Declaration public Address RewardsPool { get; set; } Property Value Type Description Address RewardsRate Declaration public ulong RewardsRate { get; set; } Property Value Type Description UInt64 RewardsResidue Declaration public ulong RewardsResidue { get; set; } Property Value Type Description UInt64 UpgradeApprove Declaration public Optional<bool> UpgradeApprove { get; set; } Property Value Type Description Optional < Boolean > UpgradeDelay Declaration public ulong UpgradeDelay { get; set; } Property Value Type Description UInt64 UpgradePropose Declaration public Address UpgradePropose { get; set; } Property Value Type Description Address Methods Equals(BlockHeader) Declaration public bool Equals(BlockHeader other) Parameters Type Name Description BlockHeader other Returns Type Description Boolean Implements IBlockRewards IBlockUpgradeState IBlockUpgradeVote"
  },
  "api/AlgoSdk.BlockResponse.html": {
    "href": "api/AlgoSdk.BlockResponse.html",
    "title": "Struct BlockResponse | Unity Algorand SDK",
    "keywords": "Struct BlockResponse A wrapped Block from the GetBlock(UInt64, ResponseFormat) Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct BlockResponse : IEquatable<BlockResponse> Fields BlockHeader Block data. Declaration public BlockHeader BlockHeader Field Value Type Description BlockHeader Cert Block certificate object. Declaration public AlgoApiObject Cert Field Value Type Description AlgoApiObject Methods Equals(BlockResponse) Declaration public bool Equals(BlockResponse other) Parameters Type Name Description BlockResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.BlockRewards.html": {
    "href": "api/AlgoSdk.BlockRewards.html",
    "title": "Struct BlockRewards | Unity Algorand SDK",
    "keywords": "Struct BlockRewards Implements IBlockRewards Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct BlockRewards : IEquatable<BlockRewards>, IBlockRewards Properties FeeSink Declaration public Address FeeSink { get; set; } Property Value Type Description Address RewardsCalculationRound Declaration public ulong RewardsCalculationRound { get; set; } Property Value Type Description UInt64 RewardsLevel Declaration public ulong RewardsLevel { get; set; } Property Value Type Description UInt64 RewardsPool Declaration public Address RewardsPool { get; set; } Property Value Type Description Address RewardsRate Declaration public ulong RewardsRate { get; set; } Property Value Type Description UInt64 RewardsResidue Declaration public ulong RewardsResidue { get; set; } Property Value Type Description UInt64 Methods Equals(BlockRewards) Declaration public bool Equals(BlockRewards other) Parameters Type Name Description BlockRewards other Returns Type Description Boolean Implements IBlockRewards"
  },
  "api/AlgoSdk.BlockTransaction.html": {
    "href": "api/AlgoSdk.BlockTransaction.html",
    "title": "Struct BlockTransaction | Unity Algorand SDK",
    "keywords": "Struct BlockTransaction A transaction found in a BlockResponse from GetBlock(UInt64, ResponseFormat) . Implements IBlockTransaction IAppliedSignedTxn < AppliedSignedTxn > ISignedTxn ISignedTxn < Transaction > IUntypedTransaction ITransactionHeader IApplyData < AppliedSignedTxn > IAppEvalDelta < AppliedSignedTxn > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct BlockTransaction : IEquatable<BlockTransaction>, IBlockTransaction, IAppliedSignedTxn<AppliedSignedTxn>, ISignedTxn, ISignedTxn<Transaction>, IUntypedTransaction, ITransactionHeader, IApplyData<AppliedSignedTxn>, IAppEvalDelta<AppliedSignedTxn>, IEquatable<AppliedSignedTxn> Remarks This is a SignedTxnInBlock from the algorand go project. Properties AppCallParams Params found in an application call transaction Declaration public AppCallTxn.Params AppCallParams { get; set; } Property Value Type Description AppCallTxn.Params ApplicationId If an app is called, the id used. Declaration public AppIndex ApplicationId { get; set; } Property Value Type Description AppIndex AssetClosingAmount Closing amount for asset transaction. Declaration public ulong AssetClosingAmount { get; set; } Property Value Type Description UInt64 AssetConfigParams Params found in an asset configuration transaction Declaration public AssetConfigTxn.Params AssetConfigParams { get; set; } Property Value Type Description AssetConfigTxn.Params AssetFreezeParams Params found in an asset freeze transaction Declaration public AssetFreezeTxn.Params AssetFreezeParams { get; set; } Property Value Type Description AssetFreezeTxn.Params AssetTransferParams Params found in an asset transfer transaction Declaration public AssetTransferTxn.Params AssetTransferParams { get; set; } Property Value Type Description AssetTransferTxn.Params AuthAddr The signer of the transaction if this account was rekeyed. Declaration public Address AuthAddr { get; set; } Property Value Type Description Address CloseRewards Rewards applied to CloseRemainderTo account. Declaration public MicroAlgos CloseRewards { get; set; } Property Value Type Description MicroAlgos ClosingAmount Closing amount for transaction. Declaration public MicroAlgos ClosingAmount { get; set; } Property Value Type Description MicroAlgos ConfigAsset If an asset is configured or created, the id used. Declaration public AssetIndex ConfigAsset { get; set; } Property Value Type Description AssetIndex EvalDelta Application global and local state delta Declaration public EvalDelta<AppliedSignedTxn> EvalDelta { get; set; } Property Value Type Description EvalDelta < AppliedSignedTxn > Fee Paid by the sender to the FeeSink to prevent denial-of-service. The minimum fee on Algorand is currently 1000 microAlgos. Declaration public MicroAlgos Fee { get; set; } Property Value Type Description MicroAlgos FirstValidRound The first round for when the transaction is valid. If the transaction is sent prior to this round it will be rejected by the network. Declaration public ulong FirstValidRound { get; set; } Property Value Type Description UInt64 GenesisHash The hash of the genesis block of the network for which the transaction is valid. Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisId The human-readable string that identifies the network for the transaction. The genesis ID is found in the genesis block. Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes GlobalDelta Global state delta Declaration public StateDelta GlobalDelta { get; set; } Property Value Type Description StateDelta Group The group specifies that the transaction is part of a group and, if so, specifies the hash of the transaction group. See TransactionGroup . Declaration public TransactionId Group { get; set; } Property Value Type Description TransactionId HasGenesisHash Declaration public Optional<bool> HasGenesisHash { get; set; } Property Value Type Description Optional < Boolean > HasGenesisId Declaration public Optional<bool> HasGenesisId { get; set; } Property Value Type Description Optional < Boolean > Header Params common to all transactions Declaration public TransactionHeader Header { get; set; } Property Value Type Description TransactionHeader InnerTxns The inner transactions (if any) that were evaluated. Declaration public AppliedSignedTxn[] InnerTxns { get; set; } Property Value Type Description AppliedSignedTxn [] KeyRegParams Params found in a key registration transaction Declaration public KeyRegTxn.Params KeyRegParams { get; set; } Property Value Type Description KeyRegTxn.Params LastValidRound The ending round for which the transaction is valid. After this round, the transaction will be rejected by the network. Declaration public ulong LastValidRound { get; set; } Property Value Type Description UInt64 Lease A lease enforces mutual exclusion of transactions. If this field is nonzero, then once the transaction is confirmed, it acquires the lease identified by the (Sender, Lease) pair of the transaction until the LastValid round passes. While this transaction possesses the lease, no other transaction specifying this lease can be confirmed. A lease is often used in the context of Algorand Smart Contracts to prevent replay attacks. Declaration public TransactionId Lease { get; set; } Property Value Type Description TransactionId LocalDeltas When decoding EvalDeltas, the integer key represents an offset into [txn.Sender, txn.Accounts[0], txn.Accounts[1], ...] Declaration public StateDelta[] LocalDeltas { get; set; } Property Value Type Description StateDelta [] Logs Logs from application calls Declaration public string[] Logs { get; set; } Property Value Type Description String [] Lsig The logic sig used to sign the transaction if there was one. Declaration public LogicSig Lsig { get; set; } Property Value Type Description LogicSig Msig The multi-signature used to sign the transaction if there was one. Declaration public MultisigSig Msig { get; set; } Property Value Type Description MultisigSig Note Any data up to 1000 bytes. Declaration public byte[] Note { get; set; } Property Value Type Description Byte [] PaymentParams Params found in a payment transaction Declaration public PaymentTxn.Params PaymentParams { get; set; } Property Value Type Description PaymentTxn.Params ReceiverRewards Rewards applied to Receiver account. Declaration public MicroAlgos ReceiverRewards { get; set; } Property Value Type Description MicroAlgos RekeyTo Specifies the authorized address. This address will be used to authorize all future transactions. Declaration public Address RekeyTo { get; set; } Property Value Type Description Address Sender The address of the account that pays the fee and amount. Declaration public Address Sender { get; set; } Property Value Type Description Address SenderRewards Rewards applied to Sender account. Declaration public MicroAlgos SenderRewards { get; set; } Property Value Type Description MicroAlgos Sig The signature used to sign the transaction if there was one. Declaration public Sig Sig { get; set; } Property Value Type Description Sig Signature Declaration public TransactionSignature Signature { get; set; } Property Value Type Description TransactionSignature TransactionType Specifies the type of transaction. This value is automatically generated using any of the developer tools. Declaration public TransactionType TransactionType { get; set; } Property Value Type Description TransactionType Txn The transaction signed. Declaration public Transaction Txn { get; set; } Property Value Type Description Transaction Methods Equals(AppliedSignedTxn) Declaration public bool Equals(AppliedSignedTxn other) Parameters Type Name Description AppliedSignedTxn other Returns Type Description Boolean Equals(BlockTransaction) Declaration public bool Equals(BlockTransaction other) Parameters Type Name Description BlockTransaction other Returns Type Description Boolean Operators Implicit(BlockTransaction to Transaction) Declaration public static implicit operator Transaction(BlockTransaction blockTxn) Parameters Type Name Description BlockTransaction blockTxn Returns Type Description Transaction Implements IBlockTransaction IAppliedSignedTxn<TTxn> ISignedTxn ISignedTxn<TTxn> IUntypedTransaction ITransactionHeader IApplyData<TTxn> IAppEvalDelta<TTxn>"
  },
  "api/AlgoSdk.BlockUpgradeState.html": {
    "href": "api/AlgoSdk.BlockUpgradeState.html",
    "title": "Struct BlockUpgradeState | Unity Algorand SDK",
    "keywords": "Struct BlockUpgradeState Implements IBlockUpgradeState Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct BlockUpgradeState : IEquatable<BlockUpgradeState>, IBlockUpgradeState Properties CurrentProtocol Declaration public FixedString128Bytes CurrentProtocol { get; set; } Property Value Type Description FixedString128Bytes NextProtocol Declaration public FixedString128Bytes NextProtocol { get; set; } Property Value Type Description FixedString128Bytes NextProtocolApprovals Declaration public ulong NextProtocolApprovals { get; set; } Property Value Type Description UInt64 NextProtocolSwitchOn Declaration public ulong NextProtocolSwitchOn { get; set; } Property Value Type Description UInt64 NextProtocolVoteBefore Declaration public ulong NextProtocolVoteBefore { get; set; } Property Value Type Description UInt64 Methods Equals(BlockUpgradeState) Declaration public bool Equals(BlockUpgradeState other) Parameters Type Name Description BlockUpgradeState other Returns Type Description Boolean Implements IBlockUpgradeState"
  },
  "api/AlgoSdk.BlockUpgradeVote.html": {
    "href": "api/AlgoSdk.BlockUpgradeVote.html",
    "title": "Struct BlockUpgradeVote | Unity Algorand SDK",
    "keywords": "Struct BlockUpgradeVote Implements IBlockUpgradeVote Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct BlockUpgradeVote : IEquatable<BlockUpgradeVote>, IBlockUpgradeVote Properties UpgradeApprove Declaration public Optional<bool> UpgradeApprove { get; set; } Property Value Type Description Optional < Boolean > UpgradeDelay Declaration public ulong UpgradeDelay { get; set; } Property Value Type Description UInt64 UpgradePropose Declaration public Address UpgradePropose { get; set; } Property Value Type Description Address Methods Equals(BlockUpgradeVote) Declaration public bool Equals(BlockUpgradeVote other) Parameters Type Name Description BlockUpgradeVote other Returns Type Description Boolean Implements IBlockUpgradeVote"
  },
  "api/AlgoSdk.ByteEnumComparer-1.html": {
    "href": "api/AlgoSdk.ByteEnumComparer-1.html",
    "title": "Struct ByteEnumComparer<T> | Unity Algorand SDK",
    "keywords": "Struct ByteEnumComparer<T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ByteEnumComparer<T> : IEqualityComparer<T> where T : Enum Type Parameters Name Description T Fields Instance Declaration public static readonly ByteEnumComparer<T> Instance Field Value Type Description ByteEnumComparer <T> Methods Equals(T, T) Declaration public static bool Equals(T x, T y) Parameters Type Name Description T x T y Returns Type Description Boolean GetHashCode(T) Declaration public static int GetHashCode(T obj) Parameters Type Name Description T obj Returns Type Description Int32"
  },
  "api/AlgoSdk.Collections.FixedStringParseExtensions.html": {
    "href": "api/AlgoSdk.Collections.FixedStringParseExtensions.html",
    "title": "Class FixedStringParseExtensions | Unity Algorand SDK",
    "keywords": "Class FixedStringParseExtensions Inheritance Object FixedStringParseExtensions Namespace : AlgoSdk.Collections Assembly : cs.temp.dll.dll Syntax public static class FixedStringParseExtensions Methods Found<T>(ref T, ref Int32, Char, Char, Char, Char) Declaration public static bool Found<T>(this ref T fs, ref int offset, char a, char b, char c, char d) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Int32 offset Char a Char b Char c Char d Returns Type Description Boolean Type Parameters Name Description T Found<T>(ref T, ref Int32, Char, Char, Char, Char, Char) Declaration public static bool Found<T>(this ref T fs, ref int offset, char a, char b, char c, char d, char e) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Int32 offset Char a Char b Char c Char d Char e Returns Type Description Boolean Type Parameters Name Description T Parse<T>(ref T, ref Int32, ref Int64) Declaration public static ParseError Parse<T>(this ref T fs, ref int offset, ref long output) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Int32 offset Int64 output Returns Type Description ParseError Type Parameters Name Description T Parse<T>(ref T, ref Int32, ref UInt64) Declaration public static ParseError Parse<T>(this ref T fs, ref int offset, ref ulong output) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Int32 offset UInt64 output Returns Type Description ParseError Type Parameters Name Description T"
  },
  "api/AlgoSdk.Collections.html": {
    "href": "api/AlgoSdk.Collections.html",
    "title": "Namespace AlgoSdk.Collections | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.Collections Classes FixedStringParseExtensions NativeTextExtensions"
  },
  "api/AlgoSdk.Collections.NativeTextExtensions.html": {
    "href": "api/AlgoSdk.Collections.NativeTextExtensions.html",
    "title": "Class NativeTextExtensions | Unity Algorand SDK",
    "keywords": "Class NativeTextExtensions Inheritance Object NativeTextExtensions Namespace : AlgoSdk.Collections Assembly : cs.temp.dll.dll Syntax public static class NativeTextExtensions Methods AsArray(NativeText) Declaration public static NativeArray<byte> AsArray(this NativeText text) Parameters Type Name Description NativeText text Returns Type Description NativeArray < Byte >"
  },
  "api/AlgoSdk.CompiledTeal.html": {
    "href": "api/AlgoSdk.CompiledTeal.html",
    "title": "Struct CompiledTeal | Unity Algorand SDK",
    "keywords": "Struct CompiledTeal A wrapper class around compiled teal bytes. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct CompiledTeal : IEquatable<CompiledTeal>, IEquatable<byte[]> Fields Bytes Declaration public byte[] Bytes Field Value Type Description Byte [] Methods Equals(CompiledTeal) Declaration public bool Equals(CompiledTeal other) Parameters Type Name Description CompiledTeal other Returns Type Description Boolean Equals(Byte[]) Declaration public bool Equals(byte[] other) Parameters Type Name Description Byte [] other Returns Type Description Boolean Operators Implicit(CompiledTeal to Byte[]) Declaration public static implicit operator byte[](CompiledTeal compiledTeal) Parameters Type Name Description CompiledTeal compiledTeal Returns Type Description Byte [] Implicit(FixedString128Bytes to CompiledTeal) Declaration public static implicit operator CompiledTeal(FixedString128Bytes x) Parameters Type Name Description FixedString128Bytes x Returns Type Description CompiledTeal Implicit(FixedString32Bytes to CompiledTeal) Declaration public static implicit operator CompiledTeal(FixedString32Bytes x) Parameters Type Name Description FixedString32Bytes x Returns Type Description CompiledTeal Implicit(FixedString4096Bytes to CompiledTeal) Declaration public static implicit operator CompiledTeal(FixedString4096Bytes x) Parameters Type Name Description FixedString4096Bytes x Returns Type Description CompiledTeal Implicit(FixedString512Bytes to CompiledTeal) Declaration public static implicit operator CompiledTeal(FixedString512Bytes x) Parameters Type Name Description FixedString512Bytes x Returns Type Description CompiledTeal Implicit(FixedString64Bytes to CompiledTeal) Declaration public static implicit operator CompiledTeal(FixedString64Bytes x) Parameters Type Name Description FixedString64Bytes x Returns Type Description CompiledTeal Implicit(NativeArray<Byte> to CompiledTeal) Declaration public static implicit operator CompiledTeal(NativeArray<byte> x) Parameters Type Name Description NativeArray < Byte > x Returns Type Description CompiledTeal Implicit(NativeArray<Byte>.ReadOnly to CompiledTeal) Declaration public static implicit operator CompiledTeal(NativeArray<byte>.ReadOnly x) Parameters Type Name Description NativeArray.ReadOnly <> x Returns Type Description CompiledTeal Implicit(NativeList<Byte> to CompiledTeal) Declaration public static implicit operator CompiledTeal(NativeList<byte> x) Parameters Type Name Description NativeList < Byte > x Returns Type Description CompiledTeal Implicit(NativeText to CompiledTeal) Declaration public static implicit operator CompiledTeal(NativeText x) Parameters Type Name Description NativeText x Returns Type Description CompiledTeal Implicit(Byte to CompiledTeal) Declaration public static implicit operator CompiledTeal(byte x) Parameters Type Name Description Byte x Returns Type Description CompiledTeal Implicit(Byte[] to CompiledTeal) Declaration public static implicit operator CompiledTeal(byte[] bytes) Parameters Type Name Description Byte [] bytes Returns Type Description CompiledTeal Implicit(Int16 to CompiledTeal) Declaration public static implicit operator CompiledTeal(short x) Parameters Type Name Description Int16 x Returns Type Description CompiledTeal Implicit(Int32 to CompiledTeal) Declaration public static implicit operator CompiledTeal(int x) Parameters Type Name Description Int32 x Returns Type Description CompiledTeal Implicit(Int64 to CompiledTeal) Declaration public static implicit operator CompiledTeal(long x) Parameters Type Name Description Int64 x Returns Type Description CompiledTeal Implicit(SByte to CompiledTeal) Declaration public static implicit operator CompiledTeal(sbyte x) Parameters Type Name Description SByte x Returns Type Description CompiledTeal Implicit(String to CompiledTeal) Declaration public static implicit operator CompiledTeal(string x) Parameters Type Name Description String x Returns Type Description CompiledTeal Implicit(UInt16 to CompiledTeal) Declaration public static implicit operator CompiledTeal(ushort x) Parameters Type Name Description UInt16 x Returns Type Description CompiledTeal Implicit(UInt32 to CompiledTeal) Declaration public static implicit operator CompiledTeal(uint x) Parameters Type Name Description UInt32 x Returns Type Description CompiledTeal Implicit(UInt64 to CompiledTeal) Declaration public static implicit operator CompiledTeal(ulong x) Parameters Type Name Description UInt64 x Returns Type Description CompiledTeal"
  },
  "api/AlgoSdk.CompiledTealFormatter.html": {
    "href": "api/AlgoSdk.CompiledTealFormatter.html",
    "title": "Class CompiledTealFormatter | Unity Algorand SDK",
    "keywords": "Class CompiledTealFormatter Inheritance Object CompiledTealFormatter Implements IAlgoApiFormatter < CompiledTeal > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public class CompiledTealFormatter : IAlgoApiFormatter<CompiledTeal> Methods Deserialize(ref JsonReader) Declaration public CompiledTeal Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description CompiledTeal Deserialize(ref MessagePackReader) Declaration public CompiledTeal Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description CompiledTeal Serialize(ref JsonWriter, CompiledTeal) Declaration public void Serialize(ref JsonWriter writer, CompiledTeal value) Parameters Type Name Description JsonWriter writer CompiledTeal value Serialize(ref MessagePackWriter, CompiledTeal) Declaration public void Serialize(ref MessagePackWriter writer, CompiledTeal value) Parameters Type Name Description MessagePackWriter writer CompiledTeal value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.ContentType.html": {
    "href": "api/AlgoSdk.ContentType.html",
    "title": "Enum ContentType | Unity Algorand SDK",
    "keywords": "Enum ContentType Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum ContentType : byte Fields Name Description Json MessagePack None PlainText"
  },
  "api/AlgoSdk.ContentTypeExtensions.html": {
    "href": "api/AlgoSdk.ContentTypeExtensions.html",
    "title": "Class ContentTypeExtensions | Unity Algorand SDK",
    "keywords": "Class ContentTypeExtensions Inheritance Object ContentTypeExtensions Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class ContentTypeExtensions Methods ParseRequestContentType(UnityWebRequest) Declaration public static ContentType ParseRequestContentType(this UnityWebRequest uwr) Parameters Type Name Description UnityWebRequest uwr Returns Type Description ContentType ParseResponseContentType(UnityWebRequest) Declaration public static ContentType ParseResponseContentType(this UnityWebRequest uwr) Parameters Type Name Description UnityWebRequest uwr Returns Type Description ContentType ToHeaderValue(ContentType) Declaration public static string ToHeaderValue(this ContentType contentType) Parameters Type Name Description ContentType contentType Returns Type Description String"
  },
  "api/AlgoSdk.Crypto.Ed25519.html": {
    "href": "api/AlgoSdk.Crypto.Ed25519.html",
    "title": "Class Ed25519 | Unity Algorand SDK",
    "keywords": "Class Ed25519 Inheritance Object Ed25519 Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public static class Ed25519"
  },
  "api/AlgoSdk.Crypto.Ed25519.KeyPair.html": {
    "href": "api/AlgoSdk.Crypto.Ed25519.KeyPair.html",
    "title": "Struct Ed25519.KeyPair | Unity Algorand SDK",
    "keywords": "Struct Ed25519.KeyPair Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public struct KeyPair : INativeDisposable Constructors KeyPair(Ed25519.SecretKeyHandle, Ed25519.PublicKey) Declaration public KeyPair(Ed25519.SecretKeyHandle secretKey, Ed25519.PublicKey publicKey) Parameters Type Name Description Ed25519.SecretKeyHandle secretKey Ed25519.PublicKey publicKey Fields PublicKey Declaration public readonly Ed25519.PublicKey PublicKey Field Value Type Description Ed25519.PublicKey SecretKey Declaration public readonly Ed25519.SecretKeyHandle SecretKey Field Value Type Description Ed25519.SecretKeyHandle Methods Deconstruct(out Ed25519.SecretKeyHandle, out Ed25519.PublicKey) Declaration public void Deconstruct(out Ed25519.SecretKeyHandle secretKey, out Ed25519.PublicKey publicKey) Parameters Type Name Description Ed25519.SecretKeyHandle secretKey Ed25519.PublicKey publicKey Dispose() Declaration public void Dispose() Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle"
  },
  "api/AlgoSdk.Crypto.Ed25519.PublicKey.html": {
    "href": "api/AlgoSdk.Crypto.Ed25519.PublicKey.html",
    "title": "Struct Ed25519.PublicKey | Unity Algorand SDK",
    "keywords": "Struct Ed25519.PublicKey Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public struct PublicKey : IByteArray, IEquatable<Ed25519.PublicKey> Fields SizeBytes Declaration public const int SizeBytes = 32 Field Value Type Description Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public int Length { get; } Property Value Type Description Int32 Methods Equals(Ed25519.PublicKey) Declaration public bool Equals(Ed25519.PublicKey other) Parameters Type Name Description Ed25519.PublicKey other Returns Type Description Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void * Operators Equality(Ed25519.PublicKey, Ed25519.PublicKey) Declaration public static bool operator ==(in Ed25519.PublicKey x, in Ed25519.PublicKey y) Parameters Type Name Description Ed25519.PublicKey x Ed25519.PublicKey y Returns Type Description Boolean Inequality(Ed25519.PublicKey, Ed25519.PublicKey) Declaration public static bool operator !=(in Ed25519.PublicKey x, in Ed25519.PublicKey y) Parameters Type Name Description Ed25519.PublicKey x Ed25519.PublicKey y Returns Type Description Boolean"
  },
  "api/AlgoSdk.Crypto.Ed25519.SecretKeyHandle.html": {
    "href": "api/AlgoSdk.Crypto.Ed25519.SecretKeyHandle.html",
    "title": "Struct Ed25519.SecretKeyHandle | Unity Algorand SDK",
    "keywords": "Struct Ed25519.SecretKeyHandle Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public struct SecretKeyHandle : INativeDisposable Fields KeySize Declaration public const int KeySize = 64 Field Value Type Description Int32 Properties Ptr Declaration public IntPtr Ptr { get; } Property Value Type Description IntPtr Methods Create() Declaration public static Ed25519.SecretKeyHandle Create() Returns Type Description Ed25519.SecretKeyHandle Dispose() Declaration public void Dispose() Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle Sign<TMessage>(TMessage) Declaration public Ed25519.Signature Sign<TMessage>(TMessage message) where TMessage : IByteArray Parameters Type Name Description TMessage message Returns Type Description Ed25519.Signature Type Parameters Name Description TMessage Operators Implicit(Ed25519.SecretKeyHandle to SecureMemoryHandle) Declaration public static implicit operator SecureMemoryHandle(Ed25519.SecretKeyHandle secretKeyHandle) Parameters Type Name Description Ed25519.SecretKeyHandle secretKeyHandle Returns Type Description SecureMemoryHandle Implicit(SecureMemoryHandle to Ed25519.SecretKeyHandle) Declaration public static implicit operator Ed25519.SecretKeyHandle(SecureMemoryHandle secureMemoryHandle) Parameters Type Name Description SecureMemoryHandle secureMemoryHandle Returns Type Description Ed25519.SecretKeyHandle"
  },
  "api/AlgoSdk.Crypto.Ed25519.Seed.html": {
    "href": "api/AlgoSdk.Crypto.Ed25519.Seed.html",
    "title": "Struct Ed25519.Seed | Unity Algorand SDK",
    "keywords": "Struct Ed25519.Seed Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public struct Seed : IByteArray, IEquatable<Ed25519.Seed> Fields Size Declaration public const int Size = 32 Field Value Type Description Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public int Length { get; } Property Value Type Description Int32 Methods Equals(Ed25519.Seed) Declaration public bool Equals(Ed25519.Seed other) Parameters Type Name Description Ed25519.Seed other Returns Type Description Boolean GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void * ToKeyPair() Declaration public Ed25519.KeyPair ToKeyPair() Returns Type Description Ed25519.KeyPair ToPublicKey() Declaration public Ed25519.PublicKey ToPublicKey() Returns Type Description Ed25519.PublicKey"
  },
  "api/AlgoSdk.Crypto.Ed25519.Signature.html": {
    "href": "api/AlgoSdk.Crypto.Ed25519.Signature.html",
    "title": "Struct Ed25519.Signature | Unity Algorand SDK",
    "keywords": "Struct Ed25519.Signature Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public struct Signature : IByteArray, IEquatable<Ed25519.Signature> Fields SizeBytes Declaration public const int SizeBytes = 64 Field Value Type Description Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public int Length { get; } Property Value Type Description Int32 Methods Equals(Ed25519.Signature) Declaration public bool Equals(Ed25519.Signature other) Parameters Type Name Description Ed25519.Signature other Returns Type Description Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void * Verify<TMessage>(TMessage, Ed25519.PublicKey) Declaration public bool Verify<TMessage>(TMessage message, Ed25519.PublicKey pk) where TMessage : IByteArray Parameters Type Name Description TMessage message Ed25519.PublicKey pk Returns Type Description Boolean Type Parameters Name Description TMessage Operators Equality(Ed25519.Signature, Ed25519.Signature) Declaration public static bool operator ==(in Ed25519.Signature x, in Ed25519.Signature y) Parameters Type Name Description Ed25519.Signature x Ed25519.Signature y Returns Type Description Boolean Inequality(Ed25519.Signature, Ed25519.Signature) Declaration public static bool operator !=(in Ed25519.Signature x, in Ed25519.Signature y) Parameters Type Name Description Ed25519.Signature x Ed25519.Signature y Returns Type Description Boolean"
  },
  "api/AlgoSdk.Crypto.html": {
    "href": "api/AlgoSdk.Crypto.html",
    "title": "Namespace AlgoSdk.Crypto | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.Crypto Classes Ed25519 Random Sha512 Structs Ed25519.KeyPair Ed25519.PublicKey Ed25519.SecretKeyHandle Ed25519.Seed Ed25519.Signature SecureMemoryHandle Sha512_256_Hash Sha512_Hash"
  },
  "api/AlgoSdk.Crypto.Random.html": {
    "href": "api/AlgoSdk.Crypto.Random.html",
    "title": "Class Random | Unity Algorand SDK",
    "keywords": "Class Random Inheritance Object Random Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public static class Random Methods Bytes<T>() Declaration public static T Bytes<T>() where T : struct Returns Type Description T Type Parameters Name Description T Randomize<T>(T) Declaration public static void Randomize<T>(T bytes) where T : struct, IByteArray Parameters Type Name Description T bytes Type Parameters Name Description T"
  },
  "api/AlgoSdk.Crypto.SecureMemoryHandle.html": {
    "href": "api/AlgoSdk.Crypto.SecureMemoryHandle.html",
    "title": "Struct SecureMemoryHandle | Unity Algorand SDK",
    "keywords": "Struct SecureMemoryHandle Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public struct SecureMemoryHandle : INativeDisposable Fields Ptr Declaration public IntPtr Ptr Field Value Type Description IntPtr Properties IsCreated Declaration public bool IsCreated { get; } Property Value Type Description Boolean Methods Create(UIntPtr) Declaration public static SecureMemoryHandle Create(UIntPtr sizeBytes) Parameters Type Name Description UIntPtr sizeBytes Returns Type Description SecureMemoryHandle Dispose() Declaration public void Dispose() Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle"
  },
  "api/AlgoSdk.Crypto.Sha512.html": {
    "href": "api/AlgoSdk.Crypto.Sha512.html",
    "title": "Class Sha512 | Unity Algorand SDK",
    "keywords": "Class Sha512 Inheritance Object Sha512 Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public static class Sha512 Methods Hash256Truncated(NativeArray<Byte>.ReadOnly) Declaration public static Sha512_256_Hash Hash256Truncated(NativeArray<byte>.ReadOnly bytes) Parameters Type Name Description NativeArray.ReadOnly <> bytes Returns Type Description Sha512_256_Hash Hash256Truncated(Void*, Int32) Declaration public static Sha512_256_Hash Hash256Truncated(void *ptr, int length) Parameters Type Name Description Void * ptr Int32 length Returns Type Description Sha512_256_Hash Hash256Truncated<TByteArray>(TByteArray) Declaration public static Sha512_256_Hash Hash256Truncated<TByteArray>(TByteArray bytes) where TByteArray : struct, IByteArray Parameters Type Name Description TByteArray bytes Returns Type Description Sha512_256_Hash Type Parameters Name Description TByteArray"
  },
  "api/AlgoSdk.Crypto.Sha512_256_Hash.html": {
    "href": "api/AlgoSdk.Crypto.Sha512_256_Hash.html",
    "title": "Struct Sha512_256_Hash | Unity Algorand SDK",
    "keywords": "Struct Sha512_256_Hash Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public struct Sha512_256_Hash : IByteArray, IEquatable<Sha512_256_Hash> Fields SizeBytes Declaration public const int SizeBytes = 32 Field Value Type Description Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public int Length { get; } Property Value Type Description Int32 Methods Equals(Sha512_256_Hash) Declaration public bool Equals(Sha512_256_Hash other) Parameters Type Name Description Sha512_256_Hash other Returns Type Description Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void * Operators Equality(Sha512_256_Hash, Sha512_256_Hash) Declaration public static bool operator ==(in Sha512_256_Hash x, in Sha512_256_Hash y) Parameters Type Name Description Sha512_256_Hash x Sha512_256_Hash y Returns Type Description Boolean Inequality(Sha512_256_Hash, Sha512_256_Hash) Declaration public static bool operator !=(in Sha512_256_Hash x, in Sha512_256_Hash y) Parameters Type Name Description Sha512_256_Hash x Sha512_256_Hash y Returns Type Description Boolean"
  },
  "api/AlgoSdk.Crypto.Sha512_Hash.html": {
    "href": "api/AlgoSdk.Crypto.Sha512_Hash.html",
    "title": "Struct Sha512_Hash | Unity Algorand SDK",
    "keywords": "Struct Sha512_Hash Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public struct Sha512_Hash : IByteArray, IEquatable<Sha512_Hash> Fields SizeBytes Declaration public const int SizeBytes = 64 Field Value Type Description Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public int Length { get; } Property Value Type Description Int32 Methods Equals(Sha512_Hash) Declaration public bool Equals(Sha512_Hash other) Parameters Type Name Description Sha512_Hash other Returns Type Description Boolean GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void *"
  },
  "api/AlgoSdk.DeltaAction.html": {
    "href": "api/AlgoSdk.DeltaAction.html",
    "title": "Enum DeltaAction | Unity Algorand SDK",
    "keywords": "Enum DeltaAction Represents the action on the value Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum DeltaAction : byte Fields Name Description Delete None SetBytes SetUInt"
  },
  "api/AlgoSdk.Editor.AddressDrawer.html": {
    "href": "api/AlgoSdk.Editor.AddressDrawer.html",
    "title": "Class AddressDrawer | Unity Algorand SDK",
    "keywords": "Class AddressDrawer Inheritance Object BytesTextDrawer BytesTextDrawer < Address > AddressDrawer Inherited Members BytesTextDrawer<Address>.GetString(List<Byte>) BytesTextDrawer<Address>.GetBytes(String) BytesTextDrawer.OnGUI(Rect, SerializedProperty, GUIContent) Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public class AddressDrawer : BytesTextDrawer<Address> Methods GetByteArray(String) Declaration protected override Address GetByteArray(string s) Parameters Type Name Description String s Returns Type Description Address Overrides AlgoSdk.Editor.BytesTextDrawer<AlgoSdk.Address>.GetByteArray(System.String) GetString(Address) Declaration protected override string GetString(Address bytes) Parameters Type Name Description Address bytes Returns Type Description String Overrides AlgoSdk.Editor.BytesTextDrawer<AlgoSdk.Address>.GetString(AlgoSdk.Address)"
  },
  "api/AlgoSdk.Editor.Base32Drawer.html": {
    "href": "api/AlgoSdk.Editor.Base32Drawer.html",
    "title": "Class Base32Drawer | Unity Algorand SDK",
    "keywords": "Class Base32Drawer Inheritance Object BytesTextDrawer Base32Drawer Inherited Members BytesTextDrawer.OnGUI(Rect, SerializedProperty, GUIContent) Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public class Base32Drawer : BytesTextDrawer Methods GetBytes(String) Declaration protected override List<byte> GetBytes(string s) Parameters Type Name Description String s Returns Type Description List < Byte > Overrides BytesTextDrawer.GetBytes(String) GetString(List<Byte>) Declaration protected override string GetString(List<byte> bytes) Parameters Type Name Description List < Byte > bytes Returns Type Description String Overrides BytesTextDrawer.GetString(List<Byte>)"
  },
  "api/AlgoSdk.Editor.Base64Drawer.html": {
    "href": "api/AlgoSdk.Editor.Base64Drawer.html",
    "title": "Class Base64Drawer | Unity Algorand SDK",
    "keywords": "Class Base64Drawer Inheritance Object BytesTextDrawer Base64Drawer Inherited Members BytesTextDrawer.OnGUI(Rect, SerializedProperty, GUIContent) Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public class Base64Drawer : BytesTextDrawer Methods GetBytes(String) Declaration protected override List<byte> GetBytes(string s) Parameters Type Name Description String s Returns Type Description List < Byte > Overrides BytesTextDrawer.GetBytes(String) GetString(List<Byte>) Declaration protected override string GetString(List<byte> bytes) Parameters Type Name Description List < Byte > bytes Returns Type Description String Overrides BytesTextDrawer.GetString(List<Byte>)"
  },
  "api/AlgoSdk.Editor.BytesTextDrawer.html": {
    "href": "api/AlgoSdk.Editor.BytesTextDrawer.html",
    "title": "Class BytesTextDrawer | Unity Algorand SDK",
    "keywords": "Class BytesTextDrawer Inheritance Object BytesTextDrawer Base32Drawer Base64Drawer BytesTextDrawer<T> MnemonicDrawer Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public abstract class BytesTextDrawer : PropertyDrawer Methods GetBytes(String) Declaration protected abstract List<byte> GetBytes(string s) Parameters Type Name Description String s Returns Type Description List < Byte > GetString(List<Byte>) Declaration protected abstract string GetString(List<byte> bytes) Parameters Type Name Description List < Byte > bytes Returns Type Description String OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/AlgoSdk.Editor.BytesTextDrawer-1.html": {
    "href": "api/AlgoSdk.Editor.BytesTextDrawer-1.html",
    "title": "Class BytesTextDrawer<T> | Unity Algorand SDK",
    "keywords": "Class BytesTextDrawer<T> Inheritance Object BytesTextDrawer BytesTextDrawer<T> AddressDrawer PrivateKeyDrawer Inherited Members BytesTextDrawer.OnGUI(Rect, SerializedProperty, GUIContent) Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public abstract class BytesTextDrawer<T> : BytesTextDrawer where T : struct, IByteArray Type Parameters Name Description T Methods GetByteArray(String) Declaration protected abstract T GetByteArray(string s) Parameters Type Name Description String s Returns Type Description T GetBytes(String) Declaration protected override List<byte> GetBytes(string s) Parameters Type Name Description String s Returns Type Description List < Byte > Overrides BytesTextDrawer.GetBytes(String) GetString(T) Declaration protected abstract string GetString(T bytes) Parameters Type Name Description T bytes Returns Type Description String GetString(List<Byte>) Declaration protected override string GetString(List<byte> bytes) Parameters Type Name Description List < Byte > bytes Returns Type Description String Overrides BytesTextDrawer.GetString(List<Byte>)"
  },
  "api/AlgoSdk.Editor.CompiledTealDrawer.html": {
    "href": "api/AlgoSdk.Editor.CompiledTealDrawer.html",
    "title": "Class CompiledTealDrawer | Unity Algorand SDK",
    "keywords": "Class CompiledTealDrawer Inheritance Object CompiledTealDrawer Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public class CompiledTealDrawer : PropertyDrawer Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/AlgoSdk.Editor.FixedStringDrawer.html": {
    "href": "api/AlgoSdk.Editor.FixedStringDrawer.html",
    "title": "Class FixedStringDrawer | Unity Algorand SDK",
    "keywords": "Class FixedStringDrawer Inheritance Object FixedStringDrawer Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public class FixedStringDrawer : PropertyDrawer Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/AlgoSdk.Editor.html": {
    "href": "api/AlgoSdk.Editor.html",
    "title": "Namespace AlgoSdk.Editor | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.Editor Classes AddressDrawer Base32Drawer Base64Drawer BytesTextDrawer BytesTextDrawer<T> CompiledTealDrawer FixedStringDrawer MnemonicDrawer PrivateKeyDrawer SerializedBytes"
  },
  "api/AlgoSdk.Editor.MnemonicDrawer.html": {
    "href": "api/AlgoSdk.Editor.MnemonicDrawer.html",
    "title": "Class MnemonicDrawer | Unity Algorand SDK",
    "keywords": "Class MnemonicDrawer Inheritance Object BytesTextDrawer MnemonicDrawer Inherited Members BytesTextDrawer.OnGUI(Rect, SerializedProperty, GUIContent) Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public class MnemonicDrawer : BytesTextDrawer Methods GetBytes(String) Declaration protected override List<byte> GetBytes(string s) Parameters Type Name Description String s Returns Type Description List < Byte > Overrides BytesTextDrawer.GetBytes(String) GetString(List<Byte>) Declaration protected override string GetString(List<byte> bytes) Parameters Type Name Description List < Byte > bytes Returns Type Description String Overrides BytesTextDrawer.GetString(List<Byte>)"
  },
  "api/AlgoSdk.Editor.PrivateKeyDrawer.html": {
    "href": "api/AlgoSdk.Editor.PrivateKeyDrawer.html",
    "title": "Class PrivateKeyDrawer | Unity Algorand SDK",
    "keywords": "Class PrivateKeyDrawer Inheritance Object BytesTextDrawer BytesTextDrawer < PrivateKey > PrivateKeyDrawer Inherited Members BytesTextDrawer<PrivateKey>.GetString(List<Byte>) BytesTextDrawer<PrivateKey>.GetBytes(String) BytesTextDrawer.OnGUI(Rect, SerializedProperty, GUIContent) Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public class PrivateKeyDrawer : BytesTextDrawer<PrivateKey> Methods GetByteArray(String) Declaration protected override PrivateKey GetByteArray(string s) Parameters Type Name Description String s Returns Type Description PrivateKey Overrides AlgoSdk.Editor.BytesTextDrawer<AlgoSdk.PrivateKey>.GetByteArray(System.String) GetString(PrivateKey) Declaration protected override string GetString(PrivateKey bytes) Parameters Type Name Description PrivateKey bytes Returns Type Description String Overrides AlgoSdk.Editor.BytesTextDrawer<AlgoSdk.PrivateKey>.GetString(AlgoSdk.PrivateKey)"
  },
  "api/AlgoSdk.Editor.SerializedBytes.html": {
    "href": "api/AlgoSdk.Editor.SerializedBytes.html",
    "title": "Class SerializedBytes | Unity Algorand SDK",
    "keywords": "Class SerializedBytes Inheritance Object SerializedBytes Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public class SerializedBytes Constructors SerializedBytes(SerializedProperty) Declaration public SerializedBytes(SerializedProperty root) Parameters Type Name Description SerializedProperty root Methods GetBytes() Declaration public List<byte> GetBytes() Returns Type Description List < Byte > SetBytes(List<Byte>) Declaration public void SetBytes(List<byte> bytes) Parameters Type Name Description List < Byte > bytes"
  },
  "api/AlgoSdk.Either-2.html": {
    "href": "api/AlgoSdk.Either-2.html",
    "title": "Struct Either<T, U> | Unity Algorand SDK",
    "keywords": "Struct Either<T, U> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Either<T, U> Type Parameters Name Description T U Constructors Either(T) Declaration public Either(T value) Parameters Type Name Description T value Either(U) Declaration public Either(U value) Parameters Type Name Description U value Properties IsValue1 Declaration public bool IsValue1 { get; } Property Value Type Description Boolean IsValue2 Declaration public bool IsValue2 { get; } Property Value Type Description Boolean Value1 Declaration public T Value1 { get; } Property Value Type Description T Value2 Declaration public U Value2 { get; } Property Value Type Description U Methods Deconstruct(out T, out U) Declaration public void Deconstruct(out T value1, out U value2) Parameters Type Name Description T value1 U value2 TryGetValue1(out T) Declaration public bool TryGetValue1(out T value) Parameters Type Name Description T value Returns Type Description Boolean TryGetValue2(out U) Declaration public bool TryGetValue2(out U value) Parameters Type Name Description U value Returns Type Description Boolean Operators Implicit(T to Either<T, U>) Declaration public static implicit operator Either<T, U>(T value1) Parameters Type Name Description T value1 Returns Type Description Either <T, U> Implicit(U to Either<T, U>) Declaration public static implicit operator Either<T, U>(U value2) Parameters Type Name Description U value2 Returns Type Description Either <T, U> Implicit(Either<T, U> to Either<U, T>) Declaration public static implicit operator Either<U, T>(Either<T, U> either) Parameters Type Name Description Either <T, U> either Returns Type Description Either <U, T>"
  },
  "api/AlgoSdk.EitherFormatter-2.html": {
    "href": "api/AlgoSdk.EitherFormatter-2.html",
    "title": "Class EitherFormatter<T, U> | Unity Algorand SDK",
    "keywords": "Class EitherFormatter<T, U> Inheritance Object EitherFormatter<T, U> Implements IAlgoApiFormatter < Either <T, U>> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public sealed class EitherFormatter<T, U> : IAlgoApiFormatter<Either<T, U>> Type Parameters Name Description T U Methods Deserialize(ref JsonReader) Declaration public Either<T, U> Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Either <T, U> Deserialize(ref MessagePackReader) Declaration public Either<T, U> Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Either <T, U> Serialize(ref JsonWriter, Either<T, U>) Declaration public void Serialize(ref JsonWriter writer, Either<T, U> value) Parameters Type Name Description JsonWriter writer Either <T, U> value Serialize(ref MessagePackWriter, Either<T, U>) Declaration public void Serialize(ref MessagePackWriter writer, Either<T, U> value) Parameters Type Name Description MessagePackWriter writer Either <T, U> value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Endianness.html": {
    "href": "api/AlgoSdk.Endianness.html",
    "title": "Class Endianness | Unity Algorand SDK",
    "keywords": "Class Endianness Inheritance Object Endianness Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class Endianness Methods CopyToBytesBigEndian<TByteArray>(Int16, ref TByteArray, Int32) Declaration public static void CopyToBytesBigEndian<TByteArray>(this short value, ref TByteArray bytes, int offset = 0) where TByteArray : IList<byte> Parameters Type Name Description Int16 value TByteArray bytes Int32 offset Type Parameters Name Description TByteArray CopyToBytesBigEndian<TByteArray>(Int32, ref TByteArray, Int32) Declaration public static void CopyToBytesBigEndian<TByteArray>(this int value, ref TByteArray bytes, int offset = 0) where TByteArray : IList<byte> Parameters Type Name Description Int32 value TByteArray bytes Int32 offset Type Parameters Name Description TByteArray CopyToBytesBigEndian<TByteArray>(Int64, ref TByteArray, Int32) Declaration public static void CopyToBytesBigEndian<TByteArray>(this long value, ref TByteArray bytes, int offset = 0) where TByteArray : IList<byte> Parameters Type Name Description Int64 value TByteArray bytes Int32 offset Type Parameters Name Description TByteArray CopyToBytesBigEndian<TByteArray>(UInt16, ref TByteArray, Int32) Declaration public static void CopyToBytesBigEndian<TByteArray>(this ushort value, ref TByteArray bytes, int offset = 0) where TByteArray : IList<byte> Parameters Type Name Description UInt16 value TByteArray bytes Int32 offset Type Parameters Name Description TByteArray CopyToBytesBigEndian<TByteArray>(UInt32, ref TByteArray, Int32) Declaration public static void CopyToBytesBigEndian<TByteArray>(this uint value, ref TByteArray bytes, int offset = 0) where TByteArray : IList<byte> Parameters Type Name Description UInt32 value TByteArray bytes Int32 offset Type Parameters Name Description TByteArray CopyToBytesBigEndian<TByteArray>(UInt64, ref TByteArray, Int32) Declaration public static void CopyToBytesBigEndian<TByteArray>(this ulong value, ref TByteArray bytes, int offset = 0) where TByteArray : IList<byte> Parameters Type Name Description UInt64 value TByteArray bytes Int32 offset Type Parameters Name Description TByteArray CopyToNativeBytesBigEndian(Int16, ref NativeArray<Byte>, Int32) Declaration public static void CopyToNativeBytesBigEndian(this short value, ref NativeArray<byte> bytes, int offset = 0) Parameters Type Name Description Int16 value NativeArray < Byte > bytes Int32 offset CopyToNativeBytesBigEndian(Int32, ref NativeArray<Byte>, Int32) Declaration public static void CopyToNativeBytesBigEndian(this int value, ref NativeArray<byte> bytes, int offset = 0) Parameters Type Name Description Int32 value NativeArray < Byte > bytes Int32 offset CopyToNativeBytesBigEndian(Int64, ref NativeArray<Byte>, Int32) Declaration public static void CopyToNativeBytesBigEndian(this long value, ref NativeArray<byte> bytes, int offset = 0) Parameters Type Name Description Int64 value NativeArray < Byte > bytes Int32 offset CopyToNativeBytesBigEndian(UInt16, ref NativeArray<Byte>, Int32) Declaration public static void CopyToNativeBytesBigEndian(this ushort value, ref NativeArray<byte> bytes, int offset = 0) Parameters Type Name Description UInt16 value NativeArray < Byte > bytes Int32 offset CopyToNativeBytesBigEndian(UInt32, ref NativeArray<Byte>, Int32) Declaration public static void CopyToNativeBytesBigEndian(this uint value, ref NativeArray<byte> bytes, int offset = 0) Parameters Type Name Description UInt32 value NativeArray < Byte > bytes Int32 offset CopyToNativeBytesBigEndian(UInt64, ref NativeArray<Byte>, Int32) Declaration public static void CopyToNativeBytesBigEndian(this ulong value, ref NativeArray<byte> bytes, int offset = 0) Parameters Type Name Description UInt64 value NativeArray < Byte > bytes Int32 offset CopyToNativeBytesBigEndian<TByteArray>(Int16, ref TByteArray, Int32) Declaration public static void CopyToNativeBytesBigEndian<TByteArray>(this short value, ref TByteArray bytes, int offset = 0) where TByteArray : IIndexable<byte> Parameters Type Name Description Int16 value TByteArray bytes Int32 offset Type Parameters Name Description TByteArray CopyToNativeBytesBigEndian<TByteArray>(Int32, ref TByteArray, Int32) Declaration public static void CopyToNativeBytesBigEndian<TByteArray>(this int value, ref TByteArray bytes, int offset = 0) where TByteArray : IIndexable<byte> Parameters Type Name Description Int32 value TByteArray bytes Int32 offset Type Parameters Name Description TByteArray CopyToNativeBytesBigEndian<TByteArray>(Int64, ref TByteArray, Int32) Declaration public static void CopyToNativeBytesBigEndian<TByteArray>(this long value, ref TByteArray bytes, int offset = 0) where TByteArray : IIndexable<byte> Parameters Type Name Description Int64 value TByteArray bytes Int32 offset Type Parameters Name Description TByteArray CopyToNativeBytesBigEndian<TByteArray>(UInt16, ref TByteArray, Int32) Declaration public static void CopyToNativeBytesBigEndian<TByteArray>(this ushort value, ref TByteArray bytes, int offset = 0) where TByteArray : IIndexable<byte> Parameters Type Name Description UInt16 value TByteArray bytes Int32 offset Type Parameters Name Description TByteArray CopyToNativeBytesBigEndian<TByteArray>(UInt32, ref TByteArray, Int32) Declaration public static void CopyToNativeBytesBigEndian<TByteArray>(this uint value, ref TByteArray bytes, int offset = 0) where TByteArray : IIndexable<byte> Parameters Type Name Description UInt32 value TByteArray bytes Int32 offset Type Parameters Name Description TByteArray CopyToNativeBytesBigEndian<TByteArray>(UInt64, ref TByteArray, Int32) Declaration public static void CopyToNativeBytesBigEndian<TByteArray>(this ulong value, ref TByteArray bytes, int offset = 0) where TByteArray : IIndexable<byte> Parameters Type Name Description UInt64 value TByteArray bytes Int32 offset Type Parameters Name Description TByteArray ToBytesBigEndian(Int16) Declaration public static byte[] ToBytesBigEndian(this short value) Parameters Type Name Description Int16 value Returns Type Description Byte [] ToBytesBigEndian(Int16, Allocator) Declaration public static NativeArray<byte> ToBytesBigEndian(this short value, Allocator allocator) Parameters Type Name Description Int16 value Allocator allocator Returns Type Description NativeArray < Byte > ToBytesBigEndian(Int32) Declaration public static byte[] ToBytesBigEndian(this int value) Parameters Type Name Description Int32 value Returns Type Description Byte [] ToBytesBigEndian(Int32, Allocator) Declaration public static NativeArray<byte> ToBytesBigEndian(this int value, Allocator allocator) Parameters Type Name Description Int32 value Allocator allocator Returns Type Description NativeArray < Byte > ToBytesBigEndian(Int64) Declaration public static byte[] ToBytesBigEndian(this long value) Parameters Type Name Description Int64 value Returns Type Description Byte [] ToBytesBigEndian(Int64, Allocator) Declaration public static NativeArray<byte> ToBytesBigEndian(this long value, Allocator allocator) Parameters Type Name Description Int64 value Allocator allocator Returns Type Description NativeArray < Byte > ToBytesBigEndian(UInt16) Declaration public static byte[] ToBytesBigEndian(this ushort value) Parameters Type Name Description UInt16 value Returns Type Description Byte [] ToBytesBigEndian(UInt16, Allocator) Declaration public static NativeArray<byte> ToBytesBigEndian(this ushort value, Allocator allocator) Parameters Type Name Description UInt16 value Allocator allocator Returns Type Description NativeArray < Byte > ToBytesBigEndian(UInt32) Declaration public static byte[] ToBytesBigEndian(this uint value) Parameters Type Name Description UInt32 value Returns Type Description Byte [] ToBytesBigEndian(UInt32, Allocator) Declaration public static NativeArray<byte> ToBytesBigEndian(this uint value, Allocator allocator) Parameters Type Name Description UInt32 value Allocator allocator Returns Type Description NativeArray < Byte > ToBytesBigEndian(UInt64) Declaration public static byte[] ToBytesBigEndian(this ulong value) Parameters Type Name Description UInt64 value Returns Type Description Byte [] ToBytesBigEndian(UInt64, Allocator) Declaration public static NativeArray<byte> ToBytesBigEndian(this ulong value, Allocator allocator) Parameters Type Name Description UInt64 value Allocator allocator Returns Type Description NativeArray < Byte >"
  },
  "api/AlgoSdk.ErrorResponse.html": {
    "href": "api/AlgoSdk.ErrorResponse.html",
    "title": "Struct ErrorResponse | Unity Algorand SDK",
    "keywords": "Struct ErrorResponse An error response from algorand APIs with optional data field. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ErrorResponse : IEquatable<ErrorResponse> Fields Code HTTP response code Declaration public long Code Field Value Type Description Int64 Data Declaration public string Data Field Value Type Description String Message Declaration public string Message Field Value Type Description String Properties IsError Declaration public bool IsError { get; } Property Value Type Description Boolean Methods Equals(ErrorResponse) Declaration public bool Equals(ErrorResponse other) Parameters Type Name Description ErrorResponse other Returns Type Description Boolean ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() WithCode(Int64) Declaration public ErrorResponse WithCode(long code) Parameters Type Name Description Int64 code Returns Type Description ErrorResponse Operators Implicit(ErrorResponse to Boolean) Declaration public static implicit operator bool (ErrorResponse error) Parameters Type Name Description ErrorResponse error Returns Type Description Boolean Implicit(ErrorResponse to String) Declaration public static implicit operator string (ErrorResponse error) Parameters Type Name Description ErrorResponse error Returns Type Description String"
  },
  "api/AlgoSdk.EvalDelta-1.html": {
    "href": "api/AlgoSdk.EvalDelta-1.html",
    "title": "Struct EvalDelta<TTxn> | Unity Algorand SDK",
    "keywords": "Struct EvalDelta<TTxn> Stores StateDelta for an application's global key/value store, and a number of accounts holding local state for that application. Implements IAppEvalDelta <TTxn> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct EvalDelta<TTxn> : IEquatable<EvalDelta<TTxn>>, IAppEvalDelta<TTxn> where TTxn : IAppliedSignedTxn<TTxn> Type Parameters Name Description TTxn Properties GlobalDelta Global state delta Declaration public StateDelta GlobalDelta { get; set; } Property Value Type Description StateDelta InnerTxns The inner transactions (if any) that were evaluated. Declaration public TTxn[] InnerTxns { get; set; } Property Value Type Description TTxn[] LocalDeltas When decoding EvalDeltas, the integer key represents an offset into [txn.Sender, txn.Accounts[0], txn.Accounts[1], ...] Declaration public StateDelta[] LocalDeltas { get; set; } Property Value Type Description StateDelta [] Logs Logs from application calls Declaration public string[] Logs { get; set; } Property Value Type Description String [] Methods Equals(EvalDelta<TTxn>) Declaration public bool Equals(EvalDelta<TTxn> other) Parameters Type Name Description EvalDelta <TTxn> other Returns Type Description Boolean Implements IAppEvalDelta<TTxn>"
  },
  "api/AlgoSdk.ExcludeAccountFields.html": {
    "href": "api/AlgoSdk.ExcludeAccountFields.html",
    "title": "Enum ExcludeAccountFields | Unity Algorand SDK",
    "keywords": "Enum ExcludeAccountFields Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum ExcludeAccountFields : byte Fields Name Description All AppsLocalState Assets CreatedApps CreatedAssets None Unknown"
  },
  "api/AlgoSdk.ExcludeAccountFieldsExtensions.html": {
    "href": "api/AlgoSdk.ExcludeAccountFieldsExtensions.html",
    "title": "Class ExcludeAccountFieldsExtensions | Unity Algorand SDK",
    "keywords": "Class ExcludeAccountFieldsExtensions Inheritance Object ExcludeAccountFieldsExtensions Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class ExcludeAccountFieldsExtensions Fields AllFixedString Declaration public static readonly FixedString32Bytes AllFixedString Field Value Type Description FixedString32Bytes AllString Declaration public const string AllString = \"all\" Field Value Type Description String AppsLocalStateFixedString Declaration public static readonly FixedString32Bytes AppsLocalStateFixedString Field Value Type Description FixedString32Bytes AppsLocalStateString Declaration public const string AppsLocalStateString = \"apps-local-state\" Field Value Type Description String AssetsFixedString Declaration public static readonly FixedString32Bytes AssetsFixedString Field Value Type Description FixedString32Bytes AssetsString Declaration public const string AssetsString = \"assets\" Field Value Type Description String CreatedAppsFixedString Declaration public static readonly FixedString32Bytes CreatedAppsFixedString Field Value Type Description FixedString32Bytes CreatedAppsString Declaration public const string CreatedAppsString = \"created-apps\" Field Value Type Description String CreatedAssetsFixedString Declaration public static readonly FixedString32Bytes CreatedAssetsFixedString Field Value Type Description FixedString32Bytes CreatedAssetsString Declaration public const string CreatedAssetsString = \"created-assets\" Field Value Type Description String NoneFixedString Declaration public static readonly FixedString32Bytes NoneFixedString Field Value Type Description FixedString32Bytes NoneString Declaration public const string NoneString = \"none\" Field Value Type Description String Methods ToFixedString(ExcludeAccountFields) Declaration public static FixedString128Bytes ToFixedString(this ExcludeAccountFields exclude) Parameters Type Name Description ExcludeAccountFields exclude Returns Type Description FixedString128Bytes ToOptionalFixedString(ExcludeAccountFields) Declaration public static Optional<FixedString128Bytes> ToOptionalFixedString(this ExcludeAccountFields exclude) Parameters Type Name Description ExcludeAccountFields exclude Returns Type Description Optional < FixedString128Bytes >"
  },
  "api/AlgoSdk.ExcludeFields.html": {
    "href": "api/AlgoSdk.ExcludeFields.html",
    "title": "Enum ExcludeFields | Unity Algorand SDK",
    "keywords": "Enum ExcludeFields Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum ExcludeFields : byte Fields Name Description All None Unknown"
  },
  "api/AlgoSdk.ExcludeFieldsExtensions.html": {
    "href": "api/AlgoSdk.ExcludeFieldsExtensions.html",
    "title": "Class ExcludeFieldsExtensions | Unity Algorand SDK",
    "keywords": "Class ExcludeFieldsExtensions Inheritance Object ExcludeFieldsExtensions Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class ExcludeFieldsExtensions Fields AllFixedString Declaration public static readonly FixedString32Bytes AllFixedString Field Value Type Description FixedString32Bytes AllString Declaration public const string AllString = \"all\" Field Value Type Description String NoneFixedString Declaration public static readonly FixedString32Bytes NoneFixedString Field Value Type Description FixedString32Bytes NoneString Declaration public const string NoneString = \"none\" Field Value Type Description String TypeToString Declaration public static readonly string[] TypeToString Field Value Type Description String [] Methods ToFixedString(ExcludeFields) Declaration public static FixedString32Bytes ToFixedString(this ExcludeFields excludeFields) Parameters Type Name Description ExcludeFields excludeFields Returns Type Description FixedString32Bytes ToOptionalFixedString(ExcludeFields) Declaration public static Optional<FixedString32Bytes> ToOptionalFixedString(this ExcludeFields excludeFields) Parameters Type Name Description ExcludeFields excludeFields Returns Type Description Optional < FixedString32Bytes >"
  },
  "api/AlgoSdk.Formatters.AddressFormatter.html": {
    "href": "api/AlgoSdk.Formatters.AddressFormatter.html",
    "title": "Class AddressFormatter | Unity Algorand SDK",
    "keywords": "Class AddressFormatter Inheritance Object AddressFormatter Implements IAlgoApiFormatter < Address > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class AddressFormatter : IAlgoApiFormatter<Address> Methods Deserialize(ref JsonReader) Declaration public Address Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Address Deserialize(ref MessagePackReader) Declaration public Address Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Address Serialize(ref JsonWriter, Address) Declaration public void Serialize(ref JsonWriter writer, Address value) Parameters Type Name Description JsonWriter writer Address value Serialize(ref MessagePackWriter, Address) Declaration public void Serialize(ref MessagePackWriter writer, Address value) Parameters Type Name Description MessagePackWriter writer Address value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.AddressRoleFormatter.html": {
    "href": "api/AlgoSdk.Formatters.AddressRoleFormatter.html",
    "title": "Class AddressRoleFormatter | Unity Algorand SDK",
    "keywords": "Class AddressRoleFormatter Inheritance Object KeywordByteEnumFormatter < AddressRole > AddressRoleFormatter Implements IAlgoApiFormatter < AddressRole > Inherited Members KeywordByteEnumFormatter<AddressRole>.Deserialize(JsonReader) KeywordByteEnumFormatter<AddressRole>.Deserialize(MessagePackReader) KeywordByteEnumFormatter<AddressRole>.Serialize(JsonWriter, AddressRole) KeywordByteEnumFormatter<AddressRole>.Serialize(MessagePackWriter, AddressRole) Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class AddressRoleFormatter : KeywordByteEnumFormatter<AddressRole>, IAlgoApiFormatter<AddressRole> Constructors AddressRoleFormatter() Declaration public AddressRoleFormatter() Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.ArrayFormatter-1.html": {
    "href": "api/AlgoSdk.Formatters.ArrayFormatter-1.html",
    "title": "Class ArrayFormatter<T> | Unity Algorand SDK",
    "keywords": "Class ArrayFormatter<T> Inheritance Object ArrayFormatter<T> Implements IAlgoApiFormatter <T[]> Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class ArrayFormatter<T> : IAlgoApiFormatter<T[]> Type Parameters Name Description T Fields Instance Declaration public static ArrayFormatter<T> Instance Field Value Type Description ArrayFormatter <T> Methods Deserialize(ref JsonReader) Declaration public T[] Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T[] Deserialize(ref MessagePackReader) Declaration public T[] Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T[] Serialize(ref JsonWriter, T[]) Declaration public void Serialize(ref JsonWriter writer, T[] value) Parameters Type Name Description JsonWriter writer T[] value Serialize(ref MessagePackWriter, T[]) Declaration public void Serialize(ref MessagePackWriter writer, T[] value) Parameters Type Name Description MessagePackWriter writer T[] value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.BlockHashFormatter.html": {
    "href": "api/AlgoSdk.Formatters.BlockHashFormatter.html",
    "title": "Class BlockHashFormatter | Unity Algorand SDK",
    "keywords": "Class BlockHashFormatter Inheritance Object BlockHashFormatter Implements IAlgoApiFormatter < BlockHash > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public sealed class BlockHashFormatter : IAlgoApiFormatter<BlockHash> Methods Deserialize(ref JsonReader) Declaration public BlockHash Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description BlockHash Deserialize(ref MessagePackReader) Declaration public BlockHash Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description BlockHash Serialize(ref JsonWriter, BlockHash) Declaration public void Serialize(ref JsonWriter writer, BlockHash value) Parameters Type Name Description JsonWriter writer BlockHash value Serialize(ref MessagePackWriter, BlockHash) Declaration public void Serialize(ref MessagePackWriter writer, BlockHash value) Parameters Type Name Description MessagePackWriter writer BlockHash value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.BoolFormatter.html": {
    "href": "api/AlgoSdk.Formatters.BoolFormatter.html",
    "title": "Class BoolFormatter | Unity Algorand SDK",
    "keywords": "Class BoolFormatter Inheritance Object BoolFormatter Implements IAlgoApiFormatter < Boolean > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class BoolFormatter : IAlgoApiFormatter<bool> Methods Deserialize(ref JsonReader) Declaration public bool Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Boolean Deserialize(ref MessagePackReader) Declaration public bool Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Boolean Serialize(ref JsonWriter, Boolean) Declaration public void Serialize(ref JsonWriter writer, bool value) Parameters Type Name Description JsonWriter writer Boolean value Serialize(ref MessagePackWriter, Boolean) Declaration public void Serialize(ref MessagePackWriter writer, bool value) Parameters Type Name Description MessagePackWriter writer Boolean value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.ByteArrayFormatter.html": {
    "href": "api/AlgoSdk.Formatters.ByteArrayFormatter.html",
    "title": "Class ByteArrayFormatter | Unity Algorand SDK",
    "keywords": "Class ByteArrayFormatter Inheritance Object ByteArrayFormatter Implements IAlgoApiFormatter < Byte []> Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class ByteArrayFormatter : IAlgoApiFormatter<byte[]> Methods Deserialize(ref JsonReader) Declaration public byte[] Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Byte [] Deserialize(ref MessagePackReader) Declaration public byte[] Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Byte [] Serialize(ref JsonWriter, Byte[]) Declaration public void Serialize(ref JsonWriter writer, byte[] value) Parameters Type Name Description JsonWriter writer Byte [] value Serialize(ref MessagePackWriter, Byte[]) Declaration public void Serialize(ref MessagePackWriter writer, byte[] value) Parameters Type Name Description MessagePackWriter writer Byte [] value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.ByteArrayFormatter-1.html": {
    "href": "api/AlgoSdk.Formatters.ByteArrayFormatter-1.html",
    "title": "Class ByteArrayFormatter<TByteArray> | Unity Algorand SDK",
    "keywords": "Class ByteArrayFormatter<TByteArray> Inheritance Object ByteArrayFormatter<TByteArray> Implements IAlgoApiFormatter <TByteArray> Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class ByteArrayFormatter<TByteArray> : IAlgoApiFormatter<TByteArray> where TByteArray : struct, IByteArray Type Parameters Name Description TByteArray Fields Instance Declaration public static ByteArrayFormatter<TByteArray> Instance Field Value Type Description ByteArrayFormatter <TByteArray> Methods Deserialize(ref JsonReader) Declaration public TByteArray Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description TByteArray Deserialize(ref MessagePackReader) Declaration public TByteArray Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description TByteArray Serialize(ref JsonWriter, TByteArray) Declaration public void Serialize(ref JsonWriter writer, TByteArray value) Parameters Type Name Description JsonWriter writer TByteArray value Serialize(ref MessagePackWriter, TByteArray) Declaration public void Serialize(ref MessagePackWriter writer, TByteArray value) Parameters Type Name Description MessagePackWriter writer TByteArray value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.ByteEnumFormatter-1.html": {
    "href": "api/AlgoSdk.Formatters.ByteEnumFormatter-1.html",
    "title": "Class ByteEnumFormatter<T> | Unity Algorand SDK",
    "keywords": "Class ByteEnumFormatter<T> Inheritance Object ByteEnumFormatter<T> Implements IAlgoApiFormatter <T> Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public sealed class ByteEnumFormatter<T> : IAlgoApiFormatter<T> where T : Enum Type Parameters Name Description T Methods Deserialize(ref JsonReader) Declaration public T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration public T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Serialize(ref JsonWriter, T) Declaration public void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref MessagePackWriter, T) Declaration public void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.ErrorResponseFormatter.html": {
    "href": "api/AlgoSdk.Formatters.ErrorResponseFormatter.html",
    "title": "Class ErrorResponseFormatter | Unity Algorand SDK",
    "keywords": "Class ErrorResponseFormatter Inheritance Object ErrorResponseFormatter Implements IAlgoApiFormatter < ErrorResponse > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class ErrorResponseFormatter : IAlgoApiFormatter<ErrorResponse> Methods Deserialize(ref JsonReader) Declaration public ErrorResponse Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description ErrorResponse Deserialize(ref MessagePackReader) Declaration public ErrorResponse Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description ErrorResponse Serialize(ref JsonWriter, ErrorResponse) Declaration public void Serialize(ref JsonWriter writer, ErrorResponse value) Parameters Type Name Description JsonWriter writer ErrorResponse value Serialize(ref MessagePackWriter, ErrorResponse) Declaration public void Serialize(ref MessagePackWriter writer, ErrorResponse value) Parameters Type Name Description MessagePackWriter writer ErrorResponse value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.FixedBytesArray-1.html": {
    "href": "api/AlgoSdk.Formatters.FixedBytesArray-1.html",
    "title": "Struct FixedBytesArray<T> | Unity Algorand SDK",
    "keywords": "Struct FixedBytesArray<T> Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public struct FixedBytesArray<T> : IArray<byte> where T : struct, INativeList<byte> Type Parameters Name Description T Constructors FixedBytesArray(T) Declaration public FixedBytesArray(T bytes) Parameters Type Name Description T bytes Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public int Length { get; set; } Property Value Type Description Int32 Operators Implicit(T to FixedBytesArray<T>) Declaration public static implicit operator FixedBytesArray<T>(T bytes) Parameters Type Name Description T bytes Returns Type Description FixedBytesArray <T> Implicit(FixedBytesArray<T> to T) Declaration public static implicit operator T(FixedBytesArray<T> fixedBytesArray) Parameters Type Name Description FixedBytesArray <T> fixedBytesArray Returns Type Description T"
  },
  "api/AlgoSdk.Formatters.FixedBytesFormatter-1.html": {
    "href": "api/AlgoSdk.Formatters.FixedBytesFormatter-1.html",
    "title": "Class FixedBytesFormatter<T> | Unity Algorand SDK",
    "keywords": "Class FixedBytesFormatter<T> Inheritance Object FixedBytesFormatter<T> Implements IAlgoApiFormatter <T> Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class FixedBytesFormatter<T> : IAlgoApiFormatter<T> where T : struct, INativeList<byte> Type Parameters Name Description T Methods Deserialize(ref JsonReader) Declaration public T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration public T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Serialize(ref JsonWriter, T) Declaration public void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref MessagePackWriter, T) Declaration public void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.FixedStringFormatter-1.html": {
    "href": "api/AlgoSdk.Formatters.FixedStringFormatter-1.html",
    "title": "Class FixedStringFormatter<T> | Unity Algorand SDK",
    "keywords": "Class FixedStringFormatter<T> Inheritance Object FixedStringFormatter<T> Implements IAlgoApiFormatter <T> Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public sealed class FixedStringFormatter<T> : IAlgoApiFormatter<T> where T : struct, IUTF8Bytes, INativeList<byte> Type Parameters Name Description T Methods Deserialize(ref JsonReader) Declaration public T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration public T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Serialize(ref JsonWriter, T) Declaration public void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref MessagePackWriter, T) Declaration public void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.GenesisHashFormatter.html": {
    "href": "api/AlgoSdk.Formatters.GenesisHashFormatter.html",
    "title": "Class GenesisHashFormatter | Unity Algorand SDK",
    "keywords": "Class GenesisHashFormatter Inheritance Object GenesisHashFormatter Implements IAlgoApiFormatter < GenesisHash > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public sealed class GenesisHashFormatter : IAlgoApiFormatter<GenesisHash> Methods Deserialize(ref JsonReader) Declaration public GenesisHash Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description GenesisHash Deserialize(ref MessagePackReader) Declaration public GenesisHash Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description GenesisHash Serialize(ref JsonWriter, GenesisHash) Declaration public void Serialize(ref JsonWriter writer, GenesisHash value) Parameters Type Name Description JsonWriter writer GenesisHash value Serialize(ref MessagePackWriter, GenesisHash) Declaration public void Serialize(ref MessagePackWriter writer, GenesisHash value) Parameters Type Name Description MessagePackWriter writer GenesisHash value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.HashTypeFormatter.html": {
    "href": "api/AlgoSdk.Formatters.HashTypeFormatter.html",
    "title": "Class HashTypeFormatter | Unity Algorand SDK",
    "keywords": "Class HashTypeFormatter Inheritance Object KeywordByteEnumFormatter < HashType > HashTypeFormatter Implements IAlgoApiFormatter < HashType > Inherited Members KeywordByteEnumFormatter<HashType>.Deserialize(JsonReader) KeywordByteEnumFormatter<HashType>.Deserialize(MessagePackReader) KeywordByteEnumFormatter<HashType>.Serialize(JsonWriter, HashType) KeywordByteEnumFormatter<HashType>.Serialize(MessagePackWriter, HashType) Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public sealed class HashTypeFormatter : KeywordByteEnumFormatter<HashType>, IAlgoApiFormatter<HashType> Constructors HashTypeFormatter() Declaration public HashTypeFormatter() Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.HexFormatter.html": {
    "href": "api/AlgoSdk.Formatters.HexFormatter.html",
    "title": "Class HexFormatter | Unity Algorand SDK",
    "keywords": "Class HexFormatter Inheritance Object HexFormatter Implements IAlgoApiFormatter < Hex > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public sealed class HexFormatter : IAlgoApiFormatter<Hex> Methods Deserialize(ref JsonReader) Declaration public Hex Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Hex Deserialize(ref MessagePackReader) Declaration public Hex Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Hex Serialize(ref JsonWriter, Hex) Declaration public void Serialize(ref JsonWriter writer, Hex value) Parameters Type Name Description JsonWriter writer Hex value Serialize(ref MessagePackWriter, Hex) Declaration public void Serialize(ref MessagePackWriter writer, Hex value) Parameters Type Name Description MessagePackWriter writer Hex value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.html": {
    "href": "api/AlgoSdk.Formatters.html",
    "title": "Namespace AlgoSdk.Formatters | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.Formatters Classes AddressFormatter AddressRoleFormatter ArrayFormatter<T> BlockHashFormatter BoolFormatter ByteArrayFormatter ByteArrayFormatter<TByteArray> ByteEnumFormatter<T> ErrorResponseFormatter FixedBytesFormatter<T> FixedStringFormatter<T> GenesisHashFormatter HashTypeFormatter HexFormatter Int16Formatter Int32Formatter Int64Formatter Int8Formatter KeywordByteEnumFormatter<T> OnCompletionFormatter OptionalFormatter<T> PrivateKeyFormatter SignatureTypeFormatter StringFormatter TransactionIdFormatter TransactionTypeFormatter UInt16Formatter UInt32Formatter UInt64Formatter UInt8Formatter Structs FixedBytesArray<T>"
  },
  "api/AlgoSdk.Formatters.Int16Formatter.html": {
    "href": "api/AlgoSdk.Formatters.Int16Formatter.html",
    "title": "Class Int16Formatter | Unity Algorand SDK",
    "keywords": "Class Int16Formatter Inheritance Object Int16Formatter Implements IAlgoApiFormatter < Int16 > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class Int16Formatter : IAlgoApiFormatter<short> Methods Deserialize(ref JsonReader) Declaration public short Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Int16 Deserialize(ref MessagePackReader) Declaration public short Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Int16 Serialize(ref JsonWriter, Int16) Declaration public void Serialize(ref JsonWriter writer, short value) Parameters Type Name Description JsonWriter writer Int16 value Serialize(ref MessagePackWriter, Int16) Declaration public void Serialize(ref MessagePackWriter writer, short value) Parameters Type Name Description MessagePackWriter writer Int16 value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.Int32Formatter.html": {
    "href": "api/AlgoSdk.Formatters.Int32Formatter.html",
    "title": "Class Int32Formatter | Unity Algorand SDK",
    "keywords": "Class Int32Formatter Inheritance Object Int32Formatter Implements IAlgoApiFormatter < Int32 > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class Int32Formatter : IAlgoApiFormatter<int> Methods Deserialize(ref JsonReader) Declaration public int Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Int32 Deserialize(ref MessagePackReader) Declaration public int Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Int32 Serialize(ref JsonWriter, Int32) Declaration public void Serialize(ref JsonWriter writer, int value) Parameters Type Name Description JsonWriter writer Int32 value Serialize(ref MessagePackWriter, Int32) Declaration public void Serialize(ref MessagePackWriter writer, int value) Parameters Type Name Description MessagePackWriter writer Int32 value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.Int64Formatter.html": {
    "href": "api/AlgoSdk.Formatters.Int64Formatter.html",
    "title": "Class Int64Formatter | Unity Algorand SDK",
    "keywords": "Class Int64Formatter Inheritance Object Int64Formatter Implements IAlgoApiFormatter < Int64 > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class Int64Formatter : IAlgoApiFormatter<long> Methods Deserialize(ref JsonReader) Declaration public long Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Int64 Deserialize(ref MessagePackReader) Declaration public long Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Int64 Serialize(ref JsonWriter, Int64) Declaration public void Serialize(ref JsonWriter writer, long value) Parameters Type Name Description JsonWriter writer Int64 value Serialize(ref MessagePackWriter, Int64) Declaration public void Serialize(ref MessagePackWriter writer, long value) Parameters Type Name Description MessagePackWriter writer Int64 value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.Int8Formatter.html": {
    "href": "api/AlgoSdk.Formatters.Int8Formatter.html",
    "title": "Class Int8Formatter | Unity Algorand SDK",
    "keywords": "Class Int8Formatter Inheritance Object Int8Formatter Implements IAlgoApiFormatter < SByte > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class Int8Formatter : IAlgoApiFormatter<sbyte> Methods Deserialize(ref JsonReader) Declaration public sbyte Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description SByte Deserialize(ref MessagePackReader) Declaration public sbyte Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description SByte Serialize(ref JsonWriter, SByte) Declaration public void Serialize(ref JsonWriter writer, sbyte value) Parameters Type Name Description JsonWriter writer SByte value Serialize(ref MessagePackWriter, SByte) Declaration public void Serialize(ref MessagePackWriter writer, sbyte value) Parameters Type Name Description MessagePackWriter writer SByte value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.KeywordByteEnumFormatter-1.html": {
    "href": "api/AlgoSdk.Formatters.KeywordByteEnumFormatter-1.html",
    "title": "Class KeywordByteEnumFormatter<T> | Unity Algorand SDK",
    "keywords": "Class KeywordByteEnumFormatter<T> Inheritance Object KeywordByteEnumFormatter<T> AddressRoleFormatter HashTypeFormatter OnCompletionFormatter SignatureTypeFormatter TransactionTypeFormatter Implements IAlgoApiFormatter <T> Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public abstract class KeywordByteEnumFormatter<T> : IAlgoApiFormatter<T> where T : Enum Type Parameters Name Description T Constructors KeywordByteEnumFormatter(String[]) Declaration public KeywordByteEnumFormatter(string[] typeToString) Parameters Type Name Description String [] typeToString Methods Deserialize(ref JsonReader) Declaration public virtual T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration public virtual T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Serialize(ref JsonWriter, T) Declaration public virtual void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref MessagePackWriter, T) Declaration public virtual void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.OnCompletionFormatter.html": {
    "href": "api/AlgoSdk.Formatters.OnCompletionFormatter.html",
    "title": "Class OnCompletionFormatter | Unity Algorand SDK",
    "keywords": "Class OnCompletionFormatter Inheritance Object KeywordByteEnumFormatter < OnCompletion > OnCompletionFormatter Implements IAlgoApiFormatter < OnCompletion > Inherited Members KeywordByteEnumFormatter<OnCompletion>.Deserialize(JsonReader) KeywordByteEnumFormatter<OnCompletion>.Serialize(JsonWriter, OnCompletion) Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public sealed class OnCompletionFormatter : KeywordByteEnumFormatter<OnCompletion>, IAlgoApiFormatter<OnCompletion> Constructors OnCompletionFormatter() Declaration public OnCompletionFormatter() Methods Deserialize(ref MessagePackReader) Declaration public override OnCompletion Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description OnCompletion Overrides AlgoSdk.Formatters.KeywordByteEnumFormatter<AlgoSdk.OnCompletion>.Deserialize(MessagePackReader) Serialize(ref MessagePackWriter, OnCompletion) Declaration public override void Serialize(ref MessagePackWriter writer, OnCompletion value) Parameters Type Name Description MessagePackWriter writer OnCompletion value Overrides AlgoSdk.Formatters.KeywordByteEnumFormatter<AlgoSdk.OnCompletion>.Serialize(MessagePackWriter, AlgoSdk.OnCompletion) Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.OptionalFormatter-1.html": {
    "href": "api/AlgoSdk.Formatters.OptionalFormatter-1.html",
    "title": "Class OptionalFormatter<T> | Unity Algorand SDK",
    "keywords": "Class OptionalFormatter<T> Inheritance Object OptionalFormatter<T> Implements IAlgoApiFormatter < Optional <T>> Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public sealed class OptionalFormatter<T> : IAlgoApiFormatter<Optional<T>> where T : struct, IEquatable<T> Type Parameters Name Description T Methods Deserialize(ref JsonReader) Declaration public Optional<T> Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Optional <T> Deserialize(ref MessagePackReader) Declaration public Optional<T> Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Optional <T> Serialize(ref JsonWriter, Optional<T>) Declaration public void Serialize(ref JsonWriter writer, Optional<T> value) Parameters Type Name Description JsonWriter writer Optional <T> value Serialize(ref MessagePackWriter, Optional<T>) Declaration public void Serialize(ref MessagePackWriter writer, Optional<T> value) Parameters Type Name Description MessagePackWriter writer Optional <T> value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.PrivateKeyFormatter.html": {
    "href": "api/AlgoSdk.Formatters.PrivateKeyFormatter.html",
    "title": "Class PrivateKeyFormatter | Unity Algorand SDK",
    "keywords": "Class PrivateKeyFormatter Inheritance Object PrivateKeyFormatter Implements IAlgoApiFormatter < PrivateKey > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class PrivateKeyFormatter : IAlgoApiFormatter<PrivateKey> Methods Deserialize(ref JsonReader) Declaration public PrivateKey Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description PrivateKey Deserialize(ref MessagePackReader) Declaration public PrivateKey Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description PrivateKey Serialize(ref JsonWriter, PrivateKey) Declaration public void Serialize(ref JsonWriter writer, PrivateKey value) Parameters Type Name Description JsonWriter writer PrivateKey value Serialize(ref MessagePackWriter, PrivateKey) Declaration public void Serialize(ref MessagePackWriter writer, PrivateKey value) Parameters Type Name Description MessagePackWriter writer PrivateKey value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.SignatureTypeFormatter.html": {
    "href": "api/AlgoSdk.Formatters.SignatureTypeFormatter.html",
    "title": "Class SignatureTypeFormatter | Unity Algorand SDK",
    "keywords": "Class SignatureTypeFormatter Inheritance Object KeywordByteEnumFormatter < SignatureType > SignatureTypeFormatter Implements IAlgoApiFormatter < SignatureType > Inherited Members KeywordByteEnumFormatter<SignatureType>.Deserialize(JsonReader) KeywordByteEnumFormatter<SignatureType>.Deserialize(MessagePackReader) KeywordByteEnumFormatter<SignatureType>.Serialize(JsonWriter, SignatureType) KeywordByteEnumFormatter<SignatureType>.Serialize(MessagePackWriter, SignatureType) Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public sealed class SignatureTypeFormatter : KeywordByteEnumFormatter<SignatureType>, IAlgoApiFormatter<SignatureType> Constructors SignatureTypeFormatter() Declaration public SignatureTypeFormatter() Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.StringFormatter.html": {
    "href": "api/AlgoSdk.Formatters.StringFormatter.html",
    "title": "Class StringFormatter | Unity Algorand SDK",
    "keywords": "Class StringFormatter Inheritance Object StringFormatter Implements IAlgoApiFormatter < String > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class StringFormatter : IAlgoApiFormatter<string> Methods Deserialize(ref JsonReader) Declaration public string Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description String Deserialize(ref MessagePackReader) Declaration public string Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description String Serialize(ref JsonWriter, String) Declaration public void Serialize(ref JsonWriter writer, string value) Parameters Type Name Description JsonWriter writer String value Serialize(ref MessagePackWriter, String) Declaration public void Serialize(ref MessagePackWriter writer, string value) Parameters Type Name Description MessagePackWriter writer String value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.TransactionIdFormatter.html": {
    "href": "api/AlgoSdk.Formatters.TransactionIdFormatter.html",
    "title": "Class TransactionIdFormatter | Unity Algorand SDK",
    "keywords": "Class TransactionIdFormatter Inheritance Object TransactionIdFormatter Implements IAlgoApiFormatter < TransactionId > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class TransactionIdFormatter : IAlgoApiFormatter<TransactionId> Methods Deserialize(ref JsonReader) Declaration public TransactionId Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description TransactionId Deserialize(ref MessagePackReader) Declaration public TransactionId Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description TransactionId Serialize(ref JsonWriter, TransactionId) Declaration public void Serialize(ref JsonWriter writer, TransactionId value) Parameters Type Name Description JsonWriter writer TransactionId value Serialize(ref MessagePackWriter, TransactionId) Declaration public void Serialize(ref MessagePackWriter writer, TransactionId value) Parameters Type Name Description MessagePackWriter writer TransactionId value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.TransactionTypeFormatter.html": {
    "href": "api/AlgoSdk.Formatters.TransactionTypeFormatter.html",
    "title": "Class TransactionTypeFormatter | Unity Algorand SDK",
    "keywords": "Class TransactionTypeFormatter Inheritance Object KeywordByteEnumFormatter < TransactionType > TransactionTypeFormatter Implements IAlgoApiFormatter < TransactionType > Inherited Members KeywordByteEnumFormatter<TransactionType>.Deserialize(JsonReader) KeywordByteEnumFormatter<TransactionType>.Deserialize(MessagePackReader) KeywordByteEnumFormatter<TransactionType>.Serialize(JsonWriter, TransactionType) KeywordByteEnumFormatter<TransactionType>.Serialize(MessagePackWriter, TransactionType) Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class TransactionTypeFormatter : KeywordByteEnumFormatter<TransactionType>, IAlgoApiFormatter<TransactionType> Constructors TransactionTypeFormatter() Declaration public TransactionTypeFormatter() Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.UInt16Formatter.html": {
    "href": "api/AlgoSdk.Formatters.UInt16Formatter.html",
    "title": "Class UInt16Formatter | Unity Algorand SDK",
    "keywords": "Class UInt16Formatter Inheritance Object UInt16Formatter Implements IAlgoApiFormatter < UInt16 > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class UInt16Formatter : IAlgoApiFormatter<ushort> Methods Deserialize(ref JsonReader) Declaration public ushort Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description UInt16 Deserialize(ref MessagePackReader) Declaration public ushort Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description UInt16 Serialize(ref JsonWriter, UInt16) Declaration public void Serialize(ref JsonWriter writer, ushort value) Parameters Type Name Description JsonWriter writer UInt16 value Serialize(ref MessagePackWriter, UInt16) Declaration public void Serialize(ref MessagePackWriter writer, ushort value) Parameters Type Name Description MessagePackWriter writer UInt16 value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.UInt32Formatter.html": {
    "href": "api/AlgoSdk.Formatters.UInt32Formatter.html",
    "title": "Class UInt32Formatter | Unity Algorand SDK",
    "keywords": "Class UInt32Formatter Inheritance Object UInt32Formatter Implements IAlgoApiFormatter < UInt32 > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class UInt32Formatter : IAlgoApiFormatter<uint> Methods Deserialize(ref JsonReader) Declaration public uint Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description UInt32 Deserialize(ref MessagePackReader) Declaration public uint Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description UInt32 Serialize(ref JsonWriter, UInt32) Declaration public void Serialize(ref JsonWriter writer, uint value) Parameters Type Name Description JsonWriter writer UInt32 value Serialize(ref MessagePackWriter, UInt32) Declaration public void Serialize(ref MessagePackWriter writer, uint value) Parameters Type Name Description MessagePackWriter writer UInt32 value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.UInt64Formatter.html": {
    "href": "api/AlgoSdk.Formatters.UInt64Formatter.html",
    "title": "Class UInt64Formatter | Unity Algorand SDK",
    "keywords": "Class UInt64Formatter Inheritance Object UInt64Formatter Implements IAlgoApiFormatter < UInt64 > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class UInt64Formatter : IAlgoApiFormatter<ulong> Methods Deserialize(ref JsonReader) Declaration public ulong Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description UInt64 Deserialize(ref MessagePackReader) Declaration public ulong Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description UInt64 Serialize(ref JsonWriter, UInt64) Declaration public void Serialize(ref JsonWriter writer, ulong value) Parameters Type Name Description JsonWriter writer UInt64 value Serialize(ref MessagePackWriter, UInt64) Declaration public void Serialize(ref MessagePackWriter writer, ulong value) Parameters Type Name Description MessagePackWriter writer UInt64 value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.UInt8Formatter.html": {
    "href": "api/AlgoSdk.Formatters.UInt8Formatter.html",
    "title": "Class UInt8Formatter | Unity Algorand SDK",
    "keywords": "Class UInt8Formatter Inheritance Object UInt8Formatter Implements IAlgoApiFormatter < Byte > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class UInt8Formatter : IAlgoApiFormatter<byte> Methods Deserialize(ref JsonReader) Declaration public byte Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Byte Deserialize(ref MessagePackReader) Declaration public byte Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Byte Serialize(ref JsonWriter, Byte) Declaration public void Serialize(ref JsonWriter writer, byte value) Parameters Type Name Description JsonWriter writer Byte value Serialize(ref MessagePackWriter, Byte) Declaration public void Serialize(ref MessagePackWriter writer, byte value) Parameters Type Name Description MessagePackWriter writer Byte value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.GenesisAccountAlloc.html": {
    "href": "api/AlgoSdk.GenesisAccountAlloc.html",
    "title": "Struct GenesisAccountAlloc | Unity Algorand SDK",
    "keywords": "Struct GenesisAccountAlloc Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct GenesisAccountAlloc Fields addr Declaration public string addr Field Value Type Description String comment Declaration public string comment Field Value Type Description String state Declaration public GenesisAccountAlloc.State state Field Value Type Description GenesisAccountAlloc.State"
  },
  "api/AlgoSdk.GenesisAccountAlloc.State.html": {
    "href": "api/AlgoSdk.GenesisAccountAlloc.State.html",
    "title": "Struct GenesisAccountAlloc.State | Unity Algorand SDK",
    "keywords": "Struct GenesisAccountAlloc.State Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct State Fields algo Declaration public ulong algo Field Value Type Description UInt64 onl Declaration public ulong onl Field Value Type Description UInt64 sel Declaration public string sel Field Value Type Description String vote Declaration public string vote Field Value Type Description String voteKD Declaration public ulong voteKD Field Value Type Description UInt64 voteLst Declaration public ulong voteLst Field Value Type Description UInt64"
  },
  "api/AlgoSdk.GenesisHash.html": {
    "href": "api/AlgoSdk.GenesisHash.html",
    "title": "Struct GenesisHash | Unity Algorand SDK",
    "keywords": "Struct GenesisHash Genesis hash found of the genesis block. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct GenesisHash : IByteArray, IEquatable<GenesisHash> Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public int Length { get; } Property Value Type Description Int32 Methods Equals(GenesisHash) Declaration public bool Equals(GenesisHash other) Parameters Type Name Description GenesisHash other Returns Type Description Boolean GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void * Operators Implicit(GenesisHash to Sha512_256_Hash) Declaration public static implicit operator Sha512_256_Hash(GenesisHash genesisHash) Parameters Type Name Description GenesisHash genesisHash Returns Type Description Sha512_256_Hash Implicit(Sha512_256_Hash to GenesisHash) Declaration public static implicit operator GenesisHash(Sha512_256_Hash hash) Parameters Type Name Description Sha512_256_Hash hash Returns Type Description GenesisHash Implicit(Byte[] to GenesisHash) Declaration public static implicit operator GenesisHash(byte[] bytes) Parameters Type Name Description Byte [] bytes Returns Type Description GenesisHash Implicit(String to GenesisHash) Declaration public static implicit operator GenesisHash(string s) Parameters Type Name Description String s Returns Type Description GenesisHash"
  },
  "api/AlgoSdk.GenesisInformation.html": {
    "href": "api/AlgoSdk.GenesisInformation.html",
    "title": "Struct GenesisInformation | Unity Algorand SDK",
    "keywords": "Struct GenesisInformation JSON information from Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct GenesisInformation Fields alloc Genesis account allocations Declaration public GenesisAccountAlloc[] alloc Field Value Type Description GenesisAccountAlloc [] fees Declaration public string fees Field Value Type Description String id Declaration public string id Field Value Type Description String network Declaration public string network Field Value Type Description String proto Declaration public string proto Field Value Type Description String rwd Declaration public string rwd Field Value Type Description String"
  },
  "api/AlgoSdk.HashType.html": {
    "href": "api/AlgoSdk.HashType.html",
    "title": "Enum HashType | Unity Algorand SDK",
    "keywords": "Enum HashType Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum HashType : byte Fields Name Description None Sha512_256 Sumhash"
  },
  "api/AlgoSdk.HashTypeExtensions.html": {
    "href": "api/AlgoSdk.HashTypeExtensions.html",
    "title": "Class HashTypeExtensions | Unity Algorand SDK",
    "keywords": "Class HashTypeExtensions Inheritance Object HashTypeExtensions Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class HashTypeExtensions Fields TypeToString Declaration public static readonly string[] TypeToString Field Value Type Description String [] Methods ToFixedString(HashType) Declaration public static FixedString32Bytes ToFixedString(this HashType hashType) Parameters Type Name Description HashType hashType Returns Type Description FixedString32Bytes ToOptionalFixedString(HashType) Declaration public static Optional<FixedString32Bytes> ToOptionalFixedString(this HashType hashType) Parameters Type Name Description HashType hashType Returns Type Description Optional < FixedString32Bytes >"
  },
  "api/AlgoSdk.Header.html": {
    "href": "api/AlgoSdk.Header.html",
    "title": "Struct Header | Unity Algorand SDK",
    "keywords": "Struct Header A serializable key-value pair that's used in http request headers. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Header Constructors Header(String, String) Declaration public Header(string key, string value) Parameters Type Name Description String key String value Fields Key Declaration public string Key Field Value Type Description String Value Declaration public string Value Field Value Type Description String Methods Deconstruct(out String, out String) Declaration public void Deconstruct(out string key, out string value) Parameters Type Name Description String key String value ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators Implicit(Header to (String, String)) Declaration public static implicit operator (string, string)(Header header) Parameters Type Name Description Header header Returns Type Description ValueTuple < String , String > Implicit((String, String) to Header) Declaration public static implicit operator Header((string, string) tuple) Parameters Type Name Description ValueTuple < String , String > tuple Returns Type Description Header"
  },
  "api/AlgoSdk.Hex.html": {
    "href": "api/AlgoSdk.Hex.html",
    "title": "Struct Hex | Unity Algorand SDK",
    "keywords": "Struct Hex Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Hex : IEquatable<Hex> Properties Data Declaration public byte[] Data { get; } Property Value Type Description Byte [] Methods Equals(Hex) Declaration public bool Equals(Hex other) Parameters Type Name Description Hex other Returns Type Description Boolean FromString(String) Declaration public static Hex FromString(string s) Parameters Type Name Description String s Returns Type Description Hex ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators Implicit(Hex to Byte[]) Declaration public static implicit operator byte[](Hex hex) Parameters Type Name Description Hex hex Returns Type Description Byte [] Implicit(Byte[] to Hex) Declaration public static implicit operator Hex(byte[] data) Parameters Type Name Description Byte [] data Returns Type Description Hex"
  },
  "api/AlgoSdk.html": {
    "href": "api/AlgoSdk.html",
    "title": "Namespace AlgoSdk | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk Classes AbiReferenceTypeExtensions AddressRoleExtensions AlgoApiField<TAlgoApiObject> AlgoApiField<TAlgoApiObject>.Map<TKey> AlgoApiFieldAttribute AlgoApiFormatterAttribute AlgoApiFormatterCache<T> AlgoApiFormatterLookup AlgoApiObjectAttribute AlgoApiObjectFormatter AlgoApiObjectFormatter<T> AlgoApiSerializer Contains functions for serializing and deserializing AlgoSdk types ArrayComparer AtomicTxn Base32Encoding Base64Encoding CompiledTealFormatter ContentTypeExtensions EitherFormatter<T, U> Endianness ExcludeAccountFieldsExtensions ExcludeFieldsExtensions HashTypeExtensions IntEnumFormatter<T> Logic OnCompletionExtensions ProvideSourceInfoAttribute ResponseFormatExtensions SerializationException SignatureTypeExtensions StateDeltaFormatter TokenizedClientExtensions TransactionExtensions TransactionTypeExtensions Utf8StringExtensions WrappedValueFormatter<T, U> Structs Account A local, in-memory account. AccountParticipation Describes the parameters used by this account in consensus protocol. Address A public key for an Algorand account. Address.CheckSum AlgoApiObject A non-deserialized object from an algorand service. AlgoApiRequest A wrapper around for handling requests to Algorand REST services. AlgoApiRequest.Awaiter A Task Awaiter for AlgoApiRequest.Awaiter<TResponse> A Task Awaiter for AlgoApiRequest.Sent A wrapper around the handling the sent request. AlgoApiRequest.Sent<TResponse> A wrapper around the handling the sent request. AlgoApiRequest.SentWithProgress<TProgress> A wrapper around the handling the sent request. AlgoApiRequest.SentWithProgress<TResponse, TProgress> A wrapper around the handling the sent request. AlgoApiResponse Wrapper class around a completed AlgoApiResponse<T> Wrapper class around a completed . This can be deconstructed into a tuple of (ErrorResponse, Payload) AlgodClient A client for accessing the algod service AppCallTxn AppCallTxn.Params AppIndex Identifier of an Application AppliedSignedTxn A signed transaction that has already been executed. ApplyData<TTxn> ArrayComparer<T> ArrayComparer<T, TComparer> AssetConfigTxn AssetConfigTxn.Params AssetFreezeTxn AssetFreezeTxn.Params AssetIndex Identifier of an Asset AssetParams AssetParams specifies the parameters for an asset. [apar] when part of an AssetConfig transaction. AssetTransferTxn AssetTransferTxn.Params AtomicTxn.AsyncSigning Represents an Atomic Txn that is being signed with asynchronous signers. AtomicTxn.Building Represents an Atomic Txn group that is currently being built up with more transactions. AtomicTxn.Signing Represents an Atomic Txn that is currently being signed. BlockCertificate BlockHash BlockHeader Block information. BlockResponse A wrapped Block from the GetBlock(UInt64, ResponseFormat) BlockRewards BlockTransaction A transaction found in a BlockResponse from GetBlock(UInt64, ResponseFormat) . BlockUpgradeState BlockUpgradeVote ByteEnumComparer<T> CompiledTeal A wrapper class around compiled teal bytes. Either<T, U> ErrorResponse An error response from algorand APIs with optional data field. EvalDelta<TTxn> Stores StateDelta for an application's global key/value store, and a number of accounts holding local state for that application. GenesisAccountAlloc GenesisAccountAlloc.State GenesisHash Genesis hash found of the genesis block. GenesisInformation JSON information from Header A serializable key-value pair that's used in http request headers. Hex IndexerClient A client for accessing the indexer service IntEnumComparer<T> KeyRegTxn KeyRegTxn.Params KmdAccount KmdClient A client for accessing the kmd service LogicSig MicroAlgos Base unit of Algos MinBalance The minimum balance in micro algos required for a given amount of data associated with an account. Mnemonic Byte struct representing a private key encoded with Length words. MultisigSig MultisigSig.Subsig Optional<T> ParticipationPublicKey Participation Public Key used for account registration. PaymentTxn PaymentTxn.Params PrivateKey The private key for an Algorand account. Sig SignedTxn An untyped signed transaction. See SignedTxn<TTxn> for a typed version. SignedTxn<TTxn> A typed signed transaction. StateDelta StateSchema The StateSchema object is only required for the create application call transaction. The StateSchema object must be fully populated for both the GlobalStateSchema and LocalStateSchema objects. StringComparer TealBytes TealValue Represents a TEAL value. Transaction TransactionGroup A group of transactions used to generate a group id for atomic transactions. TransactionHeader Contains parameters used in all transaction types. TransactionId A SHA512 256-truncated hash of a transaction's bytes. This is usually Base32 encoded with the padding chars trimmed. TransactionParams Params used for setting all transactions. Contains fee, genesis info, and round constraints. TransactionSignature An untyped wrapper around different transaction signatures. TxnIndices TxnIndices.Enumerator ValueDelta Represents a TEAL value delta. ValueDeltaKeyValue VrfPubKey 32 byte public key required for SelectionParticipationKey Interfaces AtomicTxn.ISigning<T> IAccount IAlgoApiClient IAlgoApiFormatter<T> IAlgoApiResponse IAlgoApiResponse<T> IAlgodClient IAppCallTxn IAppEvalDelta<TTxn> IAppliedSignedTxn<TTxn> IApplyData<TTxn> Contains information about a transaction's execution IAssetConfigTxn IAssetFreezeTxn IAssetTransferTxn IAsyncSigner IAsyncSignerWithProgress IBlockRewards IBlockTransaction IBlockUpgradeState IBlockUpgradeVote IIndexerClient IKeyRegTxn IKmdClient IPaymentTxn ISignature ISignedTxn ISignedTxn<TTxn> ISigner ITransaction ITransactionHeader IUntypedTransaction IWrappedValue<T> Enums AbiReferenceType AddressRole Role of an address for a transaction. ContentType DeltaAction Represents the action on the value ExcludeAccountFields ExcludeFields HashType Mnemonic.Word A list of possible words that occur in a Mnemonic OnCompletion [apan] defines the what additional actions occur with the transaction. ResponseFormat SignatureType TealValueType TEAL Value Type. Value 1 refers to bytes, value 2 refers to uint. TransactionType An enum representing the type of transaction. TxnFlags Delegates AlgoApiField<TAlgoApiObject>.EqualityComparer AlgoApiField<TAlgoApiObject>.FieldGetter<T> AlgoApiField<TAlgoApiObject>.FieldSetter<T> AlgoApiField<TAlgoApiObject>.JsonDeserializer AlgoApiField<TAlgoApiObject>.JsonSerializer AlgoApiField<TAlgoApiObject>.MessagePackDeserializer AlgoApiField<TAlgoApiObject>.MessagePackSerializer AlgoApiField<TAlgoApiObject>.SerializePredicate"
  },
  "api/AlgoSdk.IAccount.html": {
    "href": "api/AlgoSdk.IAccount.html",
    "title": "Interface IAccount | Unity Algorand SDK",
    "keywords": "Interface IAccount Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAccount Properties Address Address of this account Declaration Address Address { get; } Property Value Type Description Address"
  },
  "api/AlgoSdk.IAlgoApiClient.html": {
    "href": "api/AlgoSdk.IAlgoApiClient.html",
    "title": "Interface IAlgoApiClient | Unity Algorand SDK",
    "keywords": "Interface IAlgoApiClient Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAlgoApiClient Properties Address Address of the service, including the port Declaration string Address { get; } Property Value Type Description String Remarks e.g. \"http://localhost:4001\" Headers Additional headers to add to requests Declaration Header[] Headers { get; } Property Value Type Description Header [] Token Token used in authenticating to the service Declaration string Token { get; } Property Value Type Description String TokenHeader Request header to use for the authenticating Token Declaration string TokenHeader { get; } Property Value Type Description String"
  },
  "api/AlgoSdk.IAlgoApiFormatter-1.html": {
    "href": "api/AlgoSdk.IAlgoApiFormatter-1.html",
    "title": "Interface IAlgoApiFormatter<T> | Unity Algorand SDK",
    "keywords": "Interface IAlgoApiFormatter<T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAlgoApiFormatter<T> Type Parameters Name Description T Methods Deserialize(ref JsonReader) Declaration T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Serialize(ref JsonWriter, T) Declaration void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref MessagePackWriter, T) Declaration void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value"
  },
  "api/AlgoSdk.IAlgoApiResponse.html": {
    "href": "api/AlgoSdk.IAlgoApiResponse.html",
    "title": "Interface IAlgoApiResponse | Unity Algorand SDK",
    "keywords": "Interface IAlgoApiResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAlgoApiResponse Properties ContentType The ContentType found in the Response header Declaration ContentType ContentType { get; } Property Value Type Description ContentType Data Raw downloaded data Declaration byte[] Data { get; } Property Value Type Description Byte [] Error An ErrorResponse that is populated if there is an error. Check IsError to see if there was an error. Declaration ErrorResponse Error { get; } Property Value Type Description ErrorResponse ResponseCode HTTP status code Declaration long ResponseCode { get; } Property Value Type Description Int64 Status A status for the request Declaration Result Status { get; } Property Value Type Description Result Methods GetText() Parses the Data into a string based on ContentType Declaration string GetText() Returns Type Description String A string encoded from Data"
  },
  "api/AlgoSdk.IAlgoApiResponse-1.html": {
    "href": "api/AlgoSdk.IAlgoApiResponse-1.html",
    "title": "Interface IAlgoApiResponse<T> | Unity Algorand SDK",
    "keywords": "Interface IAlgoApiResponse<T> Inherited Members IAlgoApiResponse.Data IAlgoApiResponse.ResponseCode IAlgoApiResponse.Status IAlgoApiResponse.ContentType IAlgoApiResponse.Error IAlgoApiResponse.GetText() Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAlgoApiResponse<T> : IAlgoApiResponse Type Parameters Name Description T Properties Payload The object deserialized from the response Declaration T Payload { get; } Property Value Type Description T"
  },
  "api/AlgoSdk.IAlgodClient.html": {
    "href": "api/AlgoSdk.IAlgodClient.html",
    "title": "Interface IAlgodClient | Unity Algorand SDK",
    "keywords": "Interface IAlgodClient Inherited Members IAlgoApiClient.Address IAlgoApiClient.Token IAlgoApiClient.TokenHeader IAlgoApiClient.Headers Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAlgodClient : IAlgoApiClient Methods AbortCatchup(String) Aborts a catchpoint catchup. Declaration AlgoApiRequest.Sent<CatchpointAbortResponse> AbortCatchup(string catchpoint) Parameters Type Name Description String catchpoint A catch point Returns Type Description AlgoApiRequest.Sent < CatchpointAbortResponse > Remarks Given a catchpoint, it aborts catching up to this catchpoint AccountApplicationInformation(String, UInt64, ResponseFormat) Get account information about a given app. Declaration AlgoApiRequest.Sent<AccountApplicationResponse> AccountApplicationInformation(string address, ulong applicationId, ResponseFormat format = ResponseFormat.None) Parameters Type Name Description String address An account public key UInt64 applicationId An application identifier ResponseFormat format Configures whether the response object is JSON or MessagePack encoded. Returns Type Description AlgoApiRequest.Sent < AccountApplicationResponse > Remarks Given a specific account public key and application ID, this call returns the account's application local state and global state (AppLocalState and AppParams, if either exists). Global state will only be returned if the provided address is the application's creator. AccountAssetInformation(String, UInt64, ResponseFormat) Get account information about a given asset. Declaration AlgoApiRequest.Sent<AccountAssetResponse> AccountAssetInformation(string address, ulong assetId, ResponseFormat format = ResponseFormat.None) Parameters Type Name Description String address An account public key UInt64 assetId An asset identifier ResponseFormat format Configures whether the response object is JSON or MessagePack encoded. Returns Type Description AlgoApiRequest.Sent < AccountAssetResponse > Remarks Given a specific account public key and asset ID, this call returns the account's asset holding and asset parameters (if either exist). Asset parameters will only be returned if the provided address is the asset's creator. AccountInformation(String, ExcludeFields, ResponseFormat) Get account information. Declaration AlgoApiRequest.Sent<AccountResponse> AccountInformation(string address, ExcludeFields exclude = ExcludeFields.Unknown, ResponseFormat format = ResponseFormat.None) Parameters Type Name Description String address An account public key ExcludeFields exclude When set to all will exclude asset holdings, application local state, created asset parameters, any created application parameters. Defaults to none . ResponseFormat format Configures whether the response object is JSON or MessagePack encoded. Returns Type Description AlgoApiRequest.Sent < AccountResponse > Remarks Given a specific account public key, this call returns the accounts status, balance and spendable amounts AddParticipationKey(Byte[]) Add a participation key to the node Declaration AlgoApiRequest.Sent<PostParticipationResponse> AddParticipationKey(byte[] participationkey) Parameters Type Name Description Byte [] participationkey The participation key to add to the node Returns Type Description AlgoApiRequest.Sent < PostParticipationResponse > AppendKeys(Byte[], String) Append state proof keys to a participation key Declaration AlgoApiRequest.Sent<ParticipationKeyResponse> AppendKeys(byte[] keymap, string participationId) Parameters Type Name Description Byte [] keymap The state proof keys to add to an existing participation ID String participationId Returns Type Description AlgoApiRequest.Sent < ParticipationKeyResponse > Remarks Given a participation ID, append state proof keys to a particular set of participation keys DeleteParticipationKeyByID(String) Delete a given participation key by ID Declaration AlgoApiRequest.Sent DeleteParticipationKeyByID(string participationId) Parameters Type Name Description String participationId Returns Type Description AlgoApiRequest.Sent Remarks Delete a given participation key by ID GetApplicationByID(UInt64) Get application information. Declaration AlgoApiRequest.Sent<ApplicationResponse> GetApplicationByID(ulong applicationId) Parameters Type Name Description UInt64 applicationId An application identifier Returns Type Description AlgoApiRequest.Sent < ApplicationResponse > Remarks Given a application ID, it returns application information including creator, approval and clear programs, global and local schemas, and global state. GetAssetByID(UInt64) Get asset information. Declaration AlgoApiRequest.Sent<AssetResponse> GetAssetByID(ulong assetId) Parameters Type Name Description UInt64 assetId An asset identifier Returns Type Description AlgoApiRequest.Sent < AssetResponse > Remarks Given a asset ID, it returns asset information including creator, name, total supply and special addresses. GetBlock(UInt64, ResponseFormat) Get the block for the given round. Declaration AlgoApiRequest.Sent<BlockResponse> GetBlock(ulong round, ResponseFormat format = ResponseFormat.None) Parameters Type Name Description UInt64 round The round from which to fetch block information. ResponseFormat format Configures whether the response object is JSON or MessagePack encoded. Returns Type Description AlgoApiRequest.Sent < BlockResponse > GetGenesis() Gets the genesis information. Declaration AlgoApiRequest.Sent<AlgoApiObject> GetGenesis() Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > The genesis file in json. Remarks Returns the entire genesis file in json. GetParticipationKeyByID(String) Get participation key info given a participation ID Declaration AlgoApiRequest.Sent<ParticipationKeyResponse> GetParticipationKeyByID(string participationId) Parameters Type Name Description String participationId Returns Type Description AlgoApiRequest.Sent < ParticipationKeyResponse > Remarks Given a participation ID, return information about that participation key GetParticipationKeys() Return a list of participation keys Declaration AlgoApiRequest.Sent<ParticipationKeysResponse> GetParticipationKeys() Returns Type Description AlgoApiRequest.Sent < ParticipationKeysResponse > Remarks Return a list of participation keys GetPendingTransactions(Optional<UInt64>, ResponseFormat) Get a list of unconfirmed transactions currently in the transaction pool. Declaration AlgoApiRequest.Sent<PendingTransactionsResponse> GetPendingTransactions(Optional<ulong> max = default(Optional<ulong>), ResponseFormat format = ResponseFormat.None) Parameters Type Name Description Optional < UInt64 > max Truncated number of transactions to display. If max=0, returns all pending txns. ResponseFormat format Configures whether the response object is JSON or MessagePack encoded. Returns Type Description AlgoApiRequest.Sent < PendingTransactionsResponse > Remarks Get the list of pending transactions, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. GetPendingTransactionsByAddress(String, Optional<UInt64>, ResponseFormat) Get a list of unconfirmed transactions currently in the transaction pool by address. Declaration AlgoApiRequest.Sent<PendingTransactionsResponse> GetPendingTransactionsByAddress(string address, Optional<ulong> max = default(Optional<ulong>), ResponseFormat format = ResponseFormat.None) Parameters Type Name Description String address An account public key Optional < UInt64 > max Truncated number of transactions to display. If max=0, returns all pending txns. ResponseFormat format Configures whether the response object is JSON or MessagePack encoded. Returns Type Description AlgoApiRequest.Sent < PendingTransactionsResponse > Remarks Get the list of pending transactions by address, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. GetProof(UInt64, String, ResponseFormat) Get a Merkle proof for a transaction in a block. Declaration AlgoApiRequest.Sent<ProofResponse> GetProof(ulong round, string txid, ResponseFormat format = ResponseFormat.None) Parameters Type Name Description UInt64 round The round in which the transaction appears. String txid The transaction ID for which to generate a proof. ResponseFormat format Configures whether the response object is JSON or MessagePack encoded. Returns Type Description AlgoApiRequest.Sent < ProofResponse > GetStatus() Gets the current node status. Declaration AlgoApiRequest.Sent<NodeStatusResponse> GetStatus() Returns Type Description AlgoApiRequest.Sent < NodeStatusResponse > GetSupply() Get the current supply reported by the ledger. Declaration AlgoApiRequest.Sent<SupplyResponse> GetSupply() Returns Type Description AlgoApiRequest.Sent < SupplyResponse > GetVersion() Declaration AlgoApiRequest.Sent<VersionsResponse> GetVersion() Returns Type Description AlgoApiRequest.Sent < VersionsResponse > Remarks Retrieves the supported API versions, binary build versions, and genesis information. HealthCheck() Returns OK if healthy. Declaration AlgoApiRequest.Sent HealthCheck() Returns Type Description AlgoApiRequest.Sent Metrics() Return metrics about algod functioning. Declaration AlgoApiRequest.Sent Metrics() Returns Type Description AlgoApiRequest.Sent PendingTransactionInformation(String, ResponseFormat) Get a specific pending transaction. Declaration AlgoApiRequest.Sent<PendingTransactionResponse> PendingTransactionInformation(string txid, ResponseFormat format = ResponseFormat.None) Parameters Type Name Description String txid A transaction ID ResponseFormat format Configures whether the response object is JSON or MessagePack encoded. Returns Type Description AlgoApiRequest.Sent < PendingTransactionResponse > Given a transaction ID of a recently submitted transaction, it returns information about it. There are several cases when this might succeed: transaction committed (committed round > 0) transaction still in the pool (committed round = 0, pool error = \"\") transaction removed from pool due to error (committed round = 0, pool error != \"\") Or the transaction may have happened sufficiently long ago that the node no longer remembers it, and this will return an error. Remarks Given a transaction ID of a recently submitted transaction, it returns information about it. There are several cases when this might succeed: transaction committed (committed round > 0) transaction still in the pool (committed round = 0, pool error = \"\") transaction removed from pool due to error (committed round = 0, pool error != \"\") Or the transaction may have happened sufficiently long ago that the node no longer remembers it, and this will return an error. RawTransaction(Byte[]) Broadcasts a raw transaction to the network. Declaration AlgoApiRequest.Sent<PostTransactionsResponse> RawTransaction(byte[] rawtxn) Parameters Type Name Description Byte [] rawtxn The byte encoded signed transaction to broadcast to network Returns Type Description AlgoApiRequest.Sent < PostTransactionsResponse > ShutdownNode(Optional<UInt64>) Declaration AlgoApiRequest.Sent<AlgoApiObject> ShutdownNode(Optional<ulong> timeout = default(Optional<ulong>)) Parameters Type Name Description Optional < UInt64 > timeout Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > Remarks Special management endpoint to shutdown the node. Optionally provide a timeout parameter to indicate that the node should begin shutting down after a number of seconds. StartCatchup(String) Starts a catchpoint catchup. Declaration AlgoApiRequest.Sent<CatchpointStartResponse> StartCatchup(string catchpoint) Parameters Type Name Description String catchpoint A catch point Returns Type Description AlgoApiRequest.Sent < CatchpointStartResponse > Remarks Given a catchpoint, it starts catching up to this catchpoint SwaggerJSON() Gets the current swagger spec. Declaration AlgoApiRequest.Sent<AlgoApiObject> SwaggerJSON() Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > The current swagger spec Remarks Returns the entire swagger spec in json. TealCompile(Byte[]) Compile TEAL source code to binary, produce its hash Declaration AlgoApiRequest.Sent<CompileResponse> TealCompile(byte[] source) Parameters Type Name Description Byte [] source TEAL source code to be compiled Returns Type Description AlgoApiRequest.Sent < CompileResponse > Remarks Given TEAL source code in plain text, return base64 encoded program bytes and base32 SHA512_256 hash of program bytes (Address style). This endpoint is only enabled when a node's configuration file sets EnableDeveloperAPI to true. TealDryrun(DryrunRequest) Provide debugging information for a transaction (or group). Declaration AlgoApiRequest.Sent<DryrunResponse> TealDryrun(DryrunRequest request = null) Parameters Type Name Description DryrunRequest request Transaction (or group) and any accompanying state-simulation data. Returns Type Description AlgoApiRequest.Sent < DryrunResponse > Remarks Executes TEAL program(s) in context and returns debugging information about the execution. This endpoint is only enabled when a node's configuration file sets EnableDeveloperAPI to true. TransactionParams() Get parameters for constructing a new transaction Declaration AlgoApiRequest.Sent<TransactionParametersResponse> TransactionParams() Returns Type Description AlgoApiRequest.Sent < TransactionParametersResponse > WaitForBlock(UInt64) Gets the node status after waiting for the given round. Declaration AlgoApiRequest.Sent<NodeStatusResponse> WaitForBlock(ulong round) Parameters Type Name Description UInt64 round The round to wait until returning status Returns Type Description AlgoApiRequest.Sent < NodeStatusResponse > Remarks Waits for a block to appear after round {round} and returns the node's status at the time."
  },
  "api/AlgoSdk.IAppCallTxn.html": {
    "href": "api/AlgoSdk.IAppCallTxn.html",
    "title": "Interface IAppCallTxn | Unity Algorand SDK",
    "keywords": "Interface IAppCallTxn Inherited Members ITransaction.CopyTo(Transaction) ITransaction.CopyFrom(Transaction) ITransactionHeader.Fee ITransactionHeader.FirstValidRound ITransactionHeader.GenesisHash ITransactionHeader.LastValidRound ITransactionHeader.Sender ITransactionHeader.TransactionType ITransactionHeader.GenesisId ITransactionHeader.Group ITransactionHeader.Lease ITransactionHeader.Note ITransactionHeader.RekeyTo Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAppCallTxn : ITransaction, ITransactionHeader Properties Accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. Declaration Address[] Accounts { get; set; } Property Value Type Description Address [] AppArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Declaration CompiledTeal[] AppArguments { get; set; } Property Value Type Description CompiledTeal [] ApplicationId ID of the application being configured or empty if creating. Declaration AppIndex ApplicationId { get; set; } Property Value Type Description AppIndex ApprovalProgram Logic executed for every application transaction, except when on-completion is set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Approval programs may reject the transaction. Declaration CompiledTeal ApprovalProgram { get; set; } Property Value Type Description CompiledTeal ClearStateProgram Logic executed for application transactions with on-completion set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Clear state programs cannot reject the transaction. Declaration CompiledTeal ClearStateProgram { get; set; } Property Value Type Description CompiledTeal ExtraProgramPages Number of additional pages allocated to the application's approval and clear state programs. Each ExtraProgramPages is 2048 bytes. The sum of ApprovalProgram and ClearStateProgram may not exceed 2048*(1+ExtraProgramPages) bytes. Declaration ulong ExtraProgramPages { get; set; } Property Value Type Description UInt64 ForeignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. Declaration ulong[] ForeignApps { get; set; } Property Value Type Description UInt64 [] ForeignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Declaration ulong[] ForeignAssets { get; set; } Property Value Type Description UInt64 [] GlobalStateSchema Holds the maximum number of global state values defined within a StateSchema object. Declaration StateSchema GlobalStateSchema { get; set; } Property Value Type Description StateSchema LocalStateSchema Holds the maximum number of local state values defined within a StateSchema object. Declaration StateSchema LocalStateSchema { get; set; } Property Value Type Description StateSchema OnComplete Defines what additional actions occur with the transaction. Declaration OnCompletion OnComplete { get; set; } Property Value Type Description OnCompletion"
  },
  "api/AlgoSdk.IAppEvalDelta-1.html": {
    "href": "api/AlgoSdk.IAppEvalDelta-1.html",
    "title": "Interface IAppEvalDelta<TTxn> | Unity Algorand SDK",
    "keywords": "Interface IAppEvalDelta<TTxn> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAppEvalDelta<TTxn> where TTxn : IAppliedSignedTxn<TTxn> Type Parameters Name Description TTxn Properties GlobalDelta Global state delta Declaration StateDelta GlobalDelta { get; set; } Property Value Type Description StateDelta InnerTxns The inner transactions (if any) that were evaluated. Declaration TTxn[] InnerTxns { get; set; } Property Value Type Description TTxn[] LocalDeltas When decoding EvalDeltas, the integer key represents an offset into [txn.Sender, txn.Accounts[0], txn.Accounts[1], ...] Declaration StateDelta[] LocalDeltas { get; set; } Property Value Type Description StateDelta [] Logs Logs from application calls Declaration string[] Logs { get; set; } Property Value Type Description String []"
  },
  "api/AlgoSdk.IAppliedSignedTxn-1.html": {
    "href": "api/AlgoSdk.IAppliedSignedTxn-1.html",
    "title": "Interface IAppliedSignedTxn<TTxn> | Unity Algorand SDK",
    "keywords": "Interface IAppliedSignedTxn<TTxn> Inherited Members ISignedTxn<Transaction>.Sig ISignedTxn<Transaction>.Msig ISignedTxn<Transaction>.Lsig ISignedTxn<Transaction>.Txn ISignedTxn<Transaction>.AuthAddr IUntypedTransaction.Header IUntypedTransaction.PaymentParams IUntypedTransaction.AssetConfigParams IUntypedTransaction.AssetTransferParams IUntypedTransaction.AssetFreezeParams IUntypedTransaction.AppCallParams IUntypedTransaction.KeyRegParams ITransactionHeader.Fee ITransactionHeader.FirstValidRound ITransactionHeader.GenesisHash ITransactionHeader.LastValidRound ITransactionHeader.Sender ITransactionHeader.TransactionType ITransactionHeader.GenesisId ITransactionHeader.Group ITransactionHeader.Lease ITransactionHeader.Note ITransactionHeader.RekeyTo IApplyData<TTxn>.ClosingAmount IApplyData<TTxn>.AssetClosingAmount IApplyData<TTxn>.SenderRewards IApplyData<TTxn>.ReceiverRewards IApplyData<TTxn>.CloseRewards IApplyData<TTxn>.EvalDelta IApplyData<TTxn>.ConfigAsset IApplyData<TTxn>.ApplicationId IAppEvalDelta<TTxn>.GlobalDelta IAppEvalDelta<TTxn>.LocalDeltas IAppEvalDelta<TTxn>.Logs IAppEvalDelta<TTxn>.InnerTxns Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAppliedSignedTxn<TTxn> : ISignedTxn, ISignedTxn<Transaction>, IUntypedTransaction, ITransactionHeader, IApplyData<TTxn>, IAppEvalDelta<TTxn>, IEquatable<TTxn> where TTxn : IAppliedSignedTxn<TTxn> Type Parameters Name Description TTxn"
  },
  "api/AlgoSdk.IApplyData-1.html": {
    "href": "api/AlgoSdk.IApplyData-1.html",
    "title": "Interface IApplyData<TTxn> | Unity Algorand SDK",
    "keywords": "Interface IApplyData<TTxn> Contains information about a transaction's execution Inherited Members IAppEvalDelta<TTxn>.GlobalDelta IAppEvalDelta<TTxn>.LocalDeltas IAppEvalDelta<TTxn>.Logs IAppEvalDelta<TTxn>.InnerTxns Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IApplyData<TTxn> : IAppEvalDelta<TTxn> where TTxn : IAppliedSignedTxn<TTxn> Type Parameters Name Description TTxn Properties ApplicationId If an app is called, the id used. Declaration AppIndex ApplicationId { get; set; } Property Value Type Description AppIndex AssetClosingAmount Closing amount for asset transaction. Declaration ulong AssetClosingAmount { get; set; } Property Value Type Description UInt64 CloseRewards Rewards applied to CloseRemainderTo account. Declaration MicroAlgos CloseRewards { get; set; } Property Value Type Description MicroAlgos ClosingAmount Closing amount for transaction. Declaration MicroAlgos ClosingAmount { get; set; } Property Value Type Description MicroAlgos ConfigAsset If an asset is configured or created, the id used. Declaration AssetIndex ConfigAsset { get; set; } Property Value Type Description AssetIndex EvalDelta Application global and local state delta Declaration EvalDelta<TTxn> EvalDelta { get; set; } Property Value Type Description EvalDelta <TTxn> ReceiverRewards Rewards applied to Receiver account. Declaration MicroAlgos ReceiverRewards { get; set; } Property Value Type Description MicroAlgos SenderRewards Rewards applied to Sender account. Declaration MicroAlgos SenderRewards { get; set; } Property Value Type Description MicroAlgos"
  },
  "api/AlgoSdk.IAssetConfigTxn.html": {
    "href": "api/AlgoSdk.IAssetConfigTxn.html",
    "title": "Interface IAssetConfigTxn | Unity Algorand SDK",
    "keywords": "Interface IAssetConfigTxn Inherited Members ITransaction.CopyTo(Transaction) ITransaction.CopyFrom(Transaction) ITransactionHeader.Fee ITransactionHeader.FirstValidRound ITransactionHeader.GenesisHash ITransactionHeader.LastValidRound ITransactionHeader.Sender ITransactionHeader.TransactionType ITransactionHeader.GenesisId ITransactionHeader.Group ITransactionHeader.Lease ITransactionHeader.Note ITransactionHeader.RekeyTo Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAssetConfigTxn : ITransaction, ITransactionHeader Properties AssetParams See AssetParams for all available fields. Declaration AssetParams AssetParams { get; set; } Property Value Type Description AssetParams ConfigAsset For re-configure or destroy transactions, this is the unique asset ID. On asset creation, the ID is set to zero. Declaration AssetIndex ConfigAsset { get; set; } Property Value Type Description AssetIndex"
  },
  "api/AlgoSdk.IAssetFreezeTxn.html": {
    "href": "api/AlgoSdk.IAssetFreezeTxn.html",
    "title": "Interface IAssetFreezeTxn | Unity Algorand SDK",
    "keywords": "Interface IAssetFreezeTxn Inherited Members ITransaction.CopyTo(Transaction) ITransaction.CopyFrom(Transaction) ITransactionHeader.Fee ITransactionHeader.FirstValidRound ITransactionHeader.GenesisHash ITransactionHeader.LastValidRound ITransactionHeader.Sender ITransactionHeader.TransactionType ITransactionHeader.GenesisId ITransactionHeader.Group ITransactionHeader.Lease ITransactionHeader.Note ITransactionHeader.RekeyTo Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAssetFreezeTxn : ITransaction, ITransactionHeader Properties AssetFrozen True to freeze the asset. Declaration Optional<bool> AssetFrozen { get; set; } Property Value Type Description Optional < Boolean > FreezeAccount The address of the account whose asset is being frozen or unfrozen. Declaration Address FreezeAccount { get; set; } Property Value Type Description Address FreezeAsset The asset ID being frozen or unfrozen. Declaration AssetIndex FreezeAsset { get; set; } Property Value Type Description AssetIndex"
  },
  "api/AlgoSdk.IAssetTransferTxn.html": {
    "href": "api/AlgoSdk.IAssetTransferTxn.html",
    "title": "Interface IAssetTransferTxn | Unity Algorand SDK",
    "keywords": "Interface IAssetTransferTxn Inherited Members ITransaction.CopyTo(Transaction) ITransaction.CopyFrom(Transaction) ITransactionHeader.Fee ITransactionHeader.FirstValidRound ITransactionHeader.GenesisHash ITransactionHeader.LastValidRound ITransactionHeader.Sender ITransactionHeader.TransactionType ITransactionHeader.GenesisId ITransactionHeader.Group ITransactionHeader.Lease ITransactionHeader.Note ITransactionHeader.RekeyTo Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAssetTransferTxn : ITransaction, ITransactionHeader Properties AssetAmount The amount of the asset to be transferred. A zero amount transferred to self allocates that asset in the account's Asset map. Declaration ulong AssetAmount { get; set; } Property Value Type Description UInt64 AssetCloseTo Specify this field to remove the asset holding from the sender account and reduce the account's minimum balance (i.e. opt-out of the asset). Declaration Address AssetCloseTo { get; set; } Property Value Type Description Address AssetReceiver The recipient of the asset transfer. Declaration Address AssetReceiver { get; set; } Property Value Type Description Address AssetSender The sender of the transfer. The regular field should be used and this one set to the zero value for regular transfers between accounts. If this value is nonzero, it indicates a clawback transaction where the sender is the asset's clawback address and the asset sender is the address from which the funds will be withdrawn. Declaration Address AssetSender { get; set; } Property Value Type Description Address XferAsset The unique ID of the asset to be transferred. Declaration AssetIndex XferAsset { get; set; } Property Value Type Description AssetIndex"
  },
  "api/AlgoSdk.IAsyncSigner.html": {
    "href": "api/AlgoSdk.IAsyncSigner.html",
    "title": "Interface IAsyncSigner | Unity Algorand SDK",
    "keywords": "Interface IAsyncSigner Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAsyncSigner Methods SignTxnsAsync<T>(T[], TxnIndices, CancellationToken) Sign a group of transactions. Declaration UniTask<SignedTxn<T>[]> SignTxnsAsync<T>(T[] txns, TxnIndices txnsToSign, CancellationToken cancellationToken = null) where T : ITransaction, IEquatable<T> Parameters Type Name Description T[] txns The transactions to sign. TxnIndices txnsToSign Indexes of the transactions this signer should sign. CancellationToken cancellationToken Provide an optional cancellation token to interrupt signing. Returns Type Description UniTask < SignedTxn <T>[]> An array of transactions with signatures. If the transaction at a given index was not signed, that signed transaction will have no signature. Type Parameters Name Description T The type of the transactions. Remarks Each transaction is expected to have a valid group id already set."
  },
  "api/AlgoSdk.IAsyncSignerWithProgress.html": {
    "href": "api/AlgoSdk.IAsyncSignerWithProgress.html",
    "title": "Interface IAsyncSignerWithProgress | Unity Algorand SDK",
    "keywords": "Interface IAsyncSignerWithProgress Inherited Members IAsyncSigner.SignTxnsAsync<T>(T[], TxnIndices, CancellationToken) Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAsyncSignerWithProgress : IAsyncSigner Methods SignTxnsAsync<T, TProgress>(T[], TxnIndices, TProgress, CancellationToken) Sign a group of transactions. Declaration UniTask<SignedTxn<T>[]> SignTxnsAsync<T, TProgress>(T[] txns, TxnIndices txnsToSign, TProgress progress, CancellationToken cancellationToken = null) where T : ITransaction, IEquatable<T> where TProgress : IProgress<float> Parameters Type Name Description T[] txns The transactions to sign. TxnIndices txnsToSign Indexes of the transactions this signer should sign. TProgress progress A progress token that can be used to periodically check the progress. CancellationToken cancellationToken Provide an optional cancellation token to interrupt signing. Returns Type Description UniTask < SignedTxn <T>[]> An array of transactions with signatures. If the transaction at a given index was not signed, that signed transaction will have no signature. Type Parameters Name Description T The type of the transactions. TProgress Remarks Each transaction is expected to have a valid group id already set."
  },
  "api/AlgoSdk.IBlockRewards.html": {
    "href": "api/AlgoSdk.IBlockRewards.html",
    "title": "Interface IBlockRewards | Unity Algorand SDK",
    "keywords": "Interface IBlockRewards Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IBlockRewards Properties FeeSink [fees] accepts transaction fees, it can only spend to the incentive pool. Declaration Address FeeSink { get; set; } Property Value Type Description Address RewardsCalculationRound [rwcalr] number of leftover MicroAlgos after the distribution of rewards-rate MicroAlgos for every reward unit in the next round. Declaration ulong RewardsCalculationRound { get; set; } Property Value Type Description UInt64 RewardsLevel [earn] How many rewards, in MicroAlgos, have been distributed to each RewardUnit of MicroAlgos since genesis. Declaration ulong RewardsLevel { get; set; } Property Value Type Description UInt64 RewardsPool [rwd] accepts periodic injections from the fee-sink and continually redistributes them as rewards. Declaration Address RewardsPool { get; set; } Property Value Type Description Address RewardsRate [rate] Number of new MicroAlgos added to the participation stake from rewards at the next round. Declaration ulong RewardsRate { get; set; } Property Value Type Description UInt64 RewardsResidue [frac] Number of leftover MicroAlgos after the distribution of RewardsRate/rewardUnits MicroAlgos for every reward unit in the next round. Declaration ulong RewardsResidue { get; set; } Property Value Type Description UInt64"
  },
  "api/AlgoSdk.IBlockTransaction.html": {
    "href": "api/AlgoSdk.IBlockTransaction.html",
    "title": "Interface IBlockTransaction | Unity Algorand SDK",
    "keywords": "Interface IBlockTransaction Inherited Members ISignedTxn<Transaction>.Sig ISignedTxn<Transaction>.Msig ISignedTxn<Transaction>.Lsig ISignedTxn<Transaction>.Txn ISignedTxn<Transaction>.AuthAddr IUntypedTransaction.Header IUntypedTransaction.PaymentParams IUntypedTransaction.AssetConfigParams IUntypedTransaction.AssetTransferParams IUntypedTransaction.AssetFreezeParams IUntypedTransaction.AppCallParams IUntypedTransaction.KeyRegParams ITransactionHeader.Fee ITransactionHeader.FirstValidRound ITransactionHeader.GenesisHash ITransactionHeader.LastValidRound ITransactionHeader.Sender ITransactionHeader.TransactionType ITransactionHeader.GenesisId ITransactionHeader.Group ITransactionHeader.Lease ITransactionHeader.Note ITransactionHeader.RekeyTo IApplyData<AppliedSignedTxn>.ClosingAmount IApplyData<AppliedSignedTxn>.AssetClosingAmount IApplyData<AppliedSignedTxn>.SenderRewards IApplyData<AppliedSignedTxn>.ReceiverRewards IApplyData<AppliedSignedTxn>.CloseRewards IApplyData<AppliedSignedTxn>.EvalDelta IApplyData<AppliedSignedTxn>.ConfigAsset IApplyData<AppliedSignedTxn>.ApplicationId IAppEvalDelta<AppliedSignedTxn>.GlobalDelta IAppEvalDelta<AppliedSignedTxn>.LocalDeltas IAppEvalDelta<AppliedSignedTxn>.Logs IAppEvalDelta<AppliedSignedTxn>.InnerTxns Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IBlockTransaction : IAppliedSignedTxn<AppliedSignedTxn>, ISignedTxn, ISignedTxn<Transaction>, IUntypedTransaction, ITransactionHeader, IApplyData<AppliedSignedTxn>, IAppEvalDelta<AppliedSignedTxn>, IEquatable<AppliedSignedTxn> Properties HasGenesisHash Declaration Optional<bool> HasGenesisHash { get; set; } Property Value Type Description Optional < Boolean > HasGenesisId Declaration Optional<bool> HasGenesisId { get; set; } Property Value Type Description Optional < Boolean >"
  },
  "api/AlgoSdk.IBlockUpgradeState.html": {
    "href": "api/AlgoSdk.IBlockUpgradeState.html",
    "title": "Interface IBlockUpgradeState | Unity Algorand SDK",
    "keywords": "Interface IBlockUpgradeState Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IBlockUpgradeState Properties CurrentProtocol [proto] The current protocol version. Declaration FixedString128Bytes CurrentProtocol { get; set; } Property Value Type Description FixedString128Bytes NextProtocol [nextproto] The next proposed protocol version. Declaration FixedString128Bytes NextProtocol { get; set; } Property Value Type Description FixedString128Bytes NextProtocolApprovals [nextyes] Number of blocks which approved the protocol upgrade. Declaration ulong NextProtocolApprovals { get; set; } Property Value Type Description UInt64 NextProtocolSwitchOn [nextswitch] Round on which the protocol upgrade will take effect. Declaration ulong NextProtocolSwitchOn { get; set; } Property Value Type Description UInt64 NextProtocolVoteBefore [nextbefore] Deadline round for this protocol upgrade (No votes will be consider after this round). Declaration ulong NextProtocolVoteBefore { get; set; } Property Value Type Description UInt64"
  },
  "api/AlgoSdk.IBlockUpgradeVote.html": {
    "href": "api/AlgoSdk.IBlockUpgradeVote.html",
    "title": "Interface IBlockUpgradeVote | Unity Algorand SDK",
    "keywords": "Interface IBlockUpgradeVote Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IBlockUpgradeVote Properties UpgradeApprove [upgradeyes] Indicates a yes vote for the current proposal. Declaration Optional<bool> UpgradeApprove { get; set; } Property Value Type Description Optional < Boolean > UpgradeDelay [upgradedelay] Indicates the time between acceptance and execution. Declaration ulong UpgradeDelay { get; set; } Property Value Type Description UInt64 UpgradePropose [upgradeprop] Indicates a proposed upgrade. Declaration Address UpgradePropose { get; set; } Property Value Type Description Address"
  },
  "api/AlgoSdk.IIndexerClient.html": {
    "href": "api/AlgoSdk.IIndexerClient.html",
    "title": "Interface IIndexerClient | Unity Algorand SDK",
    "keywords": "Interface IIndexerClient Inherited Members IAlgoApiClient.Address IAlgoApiClient.Token IAlgoApiClient.TokenHeader IAlgoApiClient.Headers Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IIndexerClient : IAlgoApiClient Methods LookupAccountAppLocalStates(String, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, String) Declaration AlgoApiRequest.Sent<ApplicationLocalStatesResponse> LookupAccountAppLocalStates(string accountId, Optional<ulong> applicationId = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), string next = null) Parameters Type Name Description String accountId account string Optional < UInt64 > applicationId Application ID Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < UInt64 > limit Maximum number of results to return. There could be additional pages even if the limit is not reached. String next The next page of results. Use the next token provided by the previous results. Returns Type Description AlgoApiRequest.Sent < ApplicationLocalStatesResponse > Remarks Lookup an account's asset holdings, optionally for a specific ID. LookupAccountAssets(String, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, String) Declaration AlgoApiRequest.Sent<AssetHoldingsResponse> LookupAccountAssets(string accountId, Optional<ulong> assetId = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), string next = null) Parameters Type Name Description String accountId account string Optional < UInt64 > assetId Asset ID Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < UInt64 > limit Maximum number of results to return. There could be additional pages even if the limit is not reached. String next The next page of results. Use the next token provided by the previous results. Returns Type Description AlgoApiRequest.Sent < AssetHoldingsResponse > Remarks Lookup an account's asset holdings, optionally for a specific ID. LookupAccountByID(String, Optional<UInt64>, Optional<Boolean>, ExcludeAccountFields) Declaration AlgoApiRequest.Sent<AccountResponse> LookupAccountByID(string accountId, Optional<ulong> round = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), ExcludeAccountFields exclude = ExcludeAccountFields.Unknown) Parameters Type Name Description String accountId account string Optional < UInt64 > round Include results for the specified round. Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. ExcludeAccountFields exclude Exclude additional items such as asset holdings, application local data stored for this account, asset parameters created by this account, and application parameters created by this account. Returns Type Description AlgoApiRequest.Sent < AccountResponse > Remarks Lookup account information. LookupAccountCreatedApplications(String, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, String) Declaration AlgoApiRequest.Sent<ApplicationsResponse> LookupAccountCreatedApplications(string accountId, Optional<ulong> applicationId = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), string next = null) Parameters Type Name Description String accountId account string Optional < UInt64 > applicationId Application ID Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < UInt64 > limit Maximum number of results to return. There could be additional pages even if the limit is not reached. String next The next page of results. Use the next token provided by the previous results. Returns Type Description AlgoApiRequest.Sent < ApplicationsResponse > Remarks Lookup an account's created application parameters, optionally for a specific ID. LookupAccountCreatedAssets(String, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, String) Declaration AlgoApiRequest.Sent<AssetsResponse> LookupAccountCreatedAssets(string accountId, Optional<ulong> assetId = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), string next = null) Parameters Type Name Description String accountId account string Optional < UInt64 > assetId Asset ID Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < UInt64 > limit Maximum number of results to return. There could be additional pages even if the limit is not reached. String next The next page of results. Use the next token provided by the previous results. Returns Type Description AlgoApiRequest.Sent < AssetsResponse > Remarks Lookup an account's created asset parameters, optionally for a specific ID. LookupAccountTransactions(String, Byte[], Optional<Boolean>, String, Optional<UInt64>, DateTime, TransactionType, Optional<UInt64>, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, SignatureType, String, Optional<UInt64>) Declaration AlgoApiRequest.Sent<TransactionsResponse> LookupAccountTransactions(string accountId, byte[] notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), string next = null, Optional<ulong> maxRound = default(Optional<ulong>), DateTime afterTime = null, TransactionType txType = TransactionType.None, Optional<ulong> limit = default(Optional<ulong>), DateTime beforeTime = null, Optional<ulong> minRound = default(Optional<ulong>), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> assetId = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), SignatureType sigType = SignatureType.None, string txid = null, Optional<ulong> round = default(Optional<ulong>)) Parameters Type Name Description String accountId account string Byte [] notePrefix Specifies a prefix which must be contained in the note field. Optional < Boolean > rekeyTo Include results which include the rekey-to field. String next The next page of results. Use the next token provided by the previous results. Optional < UInt64 > maxRound Include results at or before the specified max-round. DateTime afterTime Include results after the given time. Must be an RFC 3339 formatted string. TransactionType txType Optional < UInt64 > limit Maximum number of results to return. There could be additional pages even if the limit is not reached. DateTime beforeTime Include results before the given time. Must be an RFC 3339 formatted string. Optional < UInt64 > minRound Include results at or after the specified min-round. Optional < UInt64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < UInt64 > assetId Asset ID Optional < UInt64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. SignatureType sigType SigType filters just results using the specified type of signature: sig - Standard msig - MultiSig lsig - LogicSig String txid Lookup the specific transaction by ID. Optional < UInt64 > round Include results for the specified round. Returns Type Description AlgoApiRequest.Sent < TransactionsResponse > Remarks Lookup account transactions. LookupApplicationByID(UInt64, Optional<Boolean>) Declaration AlgoApiRequest.Sent<ApplicationResponse> LookupApplicationByID(ulong applicationId, Optional<bool> includeAll = default(Optional<bool>)) Parameters Type Name Description UInt64 applicationId Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Returns Type Description AlgoApiRequest.Sent < ApplicationResponse > Remarks Lookup application. LookupApplicationLogsByID(UInt64, Optional<UInt64>, String, String, Optional<UInt64>, Optional<UInt64>, Address) Declaration AlgoApiRequest.Sent<ApplicationLogsResponse> LookupApplicationLogsByID(ulong applicationId, Optional<ulong> limit = default(Optional<ulong>), string next = null, string txid = null, Optional<ulong> minRound = default(Optional<ulong>), Optional<ulong> maxRound = default(Optional<ulong>), Address senderAddress = default(Address)) Parameters Type Name Description UInt64 applicationId Optional < UInt64 > limit Maximum number of results to return. There could be additional pages even if the limit is not reached. String next The next page of results. Use the next token provided by the previous results. String txid Lookup the specific transaction by ID. Optional < UInt64 > minRound Include results at or after the specified min-round. Optional < UInt64 > maxRound Include results at or before the specified max-round. Address senderAddress Only include transactions with this sender address. Returns Type Description AlgoApiRequest.Sent < ApplicationLogsResponse > Remarks Lookup application logs. LookupAssetBalances(UInt64, Optional<Boolean>, Optional<UInt64>, String, Optional<UInt64>, Optional<UInt64>) Declaration AlgoApiRequest.Sent<AssetBalancesResponse> LookupAssetBalances(ulong assetId, Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), string next = null, Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>)) Parameters Type Name Description UInt64 assetId Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < UInt64 > limit Maximum number of results to return. There could be additional pages even if the limit is not reached. String next The next page of results. Use the next token provided by the previous results. Optional < UInt64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < UInt64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Returns Type Description AlgoApiRequest.Sent < AssetBalancesResponse > Remarks Lookup the list of accounts who hold this asset LookupAssetByID(UInt64, Optional<Boolean>) Declaration AlgoApiRequest.Sent<AssetResponse> LookupAssetByID(ulong assetId, Optional<bool> includeAll = default(Optional<bool>)) Parameters Type Name Description UInt64 assetId Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Returns Type Description AlgoApiRequest.Sent < AssetResponse > Remarks Lookup asset information. LookupAssetTransactions(UInt64, Byte[], Optional<Boolean>, String, Optional<UInt64>, DateTime, TransactionType, Optional<Boolean>, Optional<UInt64>, DateTime, Optional<UInt64>, Optional<UInt64>, Address, Optional<UInt64>, SignatureType, String, AddressRole, Optional<UInt64>) Declaration AlgoApiRequest.Sent<TransactionsResponse> LookupAssetTransactions(ulong assetId, byte[] notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), string next = null, Optional<ulong> maxRound = default(Optional<ulong>), DateTime afterTime = null, TransactionType txType = TransactionType.None, Optional<bool> excludeCloseTo = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), DateTime beforeTime = null, Optional<ulong> minRound = default(Optional<ulong>), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Address address = default(Address), Optional<ulong> currencyLessThan = default(Optional<ulong>), SignatureType sigType = SignatureType.None, string txid = null, AddressRole addressRole = AddressRole.None, Optional<ulong> round = default(Optional<ulong>)) Parameters Type Name Description UInt64 assetId Byte [] notePrefix Specifies a prefix which must be contained in the note field. Optional < Boolean > rekeyTo Include results which include the rekey-to field. String next The next page of results. Use the next token provided by the previous results. Optional < UInt64 > maxRound Include results at or before the specified max-round. DateTime afterTime Include results after the given time. Must be an RFC 3339 formatted string. TransactionType txType Optional < Boolean > excludeCloseTo Combine with address and address-role parameters to define what type of address to search for. The close to fields are normally treated as a receiver, if you would like to exclude them set this parameter to true. Optional < UInt64 > limit Maximum number of results to return. There could be additional pages even if the limit is not reached. DateTime beforeTime Include results before the given time. Must be an RFC 3339 formatted string. Optional < UInt64 > minRound Include results at or after the specified min-round. Optional < UInt64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Address address Only include transactions with this address in one of the transaction fields. Optional < UInt64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. SignatureType sigType SigType filters just results using the specified type of signature: sig - Standard msig - MultiSig lsig - LogicSig String txid Lookup the specific transaction by ID. AddressRole addressRole Combine with the address parameter to define what type of address to search for. Optional < UInt64 > round Include results for the specified round. Returns Type Description AlgoApiRequest.Sent < TransactionsResponse > Remarks Lookup transactions for an asset. LookupBlock(UInt64) Declaration AlgoApiRequest.Sent<BlockResponse> LookupBlock(ulong roundNumber) Parameters Type Name Description UInt64 roundNumber Round number Returns Type Description AlgoApiRequest.Sent < BlockResponse > Remarks Lookup block. LookupTransaction(String) Declaration AlgoApiRequest.Sent<TransactionResponse> LookupTransaction(string txid) Parameters Type Name Description String txid Returns Type Description AlgoApiRequest.Sent < TransactionResponse > Remarks Lookup a single transaction. MakeHealthCheck() Returns 200 if healthy. Declaration AlgoApiRequest.Sent<HealthCheckResponse> MakeHealthCheck() Returns Type Description AlgoApiRequest.Sent < HealthCheckResponse > SearchForAccounts(String, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Address, Optional<UInt64>, ExcludeAccountFields, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>) Declaration AlgoApiRequest.Sent<AccountsResponse> SearchForAccounts(string next = null, Optional<ulong> applicationId = default(Optional<ulong>), Optional<ulong> limit = default(Optional<ulong>), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Address authAddr = default(Address), Optional<ulong> assetId = default(Optional<ulong>), ExcludeAccountFields exclude = ExcludeAccountFields.Unknown, Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<ulong> round = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>)) Parameters Type Name Description String next The next page of results. Use the next token provided by the previous results. Optional < UInt64 > applicationId Application ID Optional < UInt64 > limit Maximum number of results to return. There could be additional pages even if the limit is not reached. Optional < UInt64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Address authAddr Include accounts configured to use this spending key. Optional < UInt64 > assetId Asset ID ExcludeAccountFields exclude Exclude additional items such as asset holdings, application local data stored for this account, asset parameters created by this account, and application parameters created by this account. Optional < UInt64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < UInt64 > round Include results for the specified round. For performance reasons, this parameter may be disabled on some configurations. Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Returns Type Description AlgoApiRequest.Sent < AccountsResponse > Remarks Search for accounts. SearchForApplications(Optional<UInt64>, String, Optional<Boolean>, Optional<UInt64>, String) Declaration AlgoApiRequest.Sent<ApplicationsResponse> SearchForApplications(Optional<ulong> applicationId = default(Optional<ulong>), string creator = null, Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), string next = null) Parameters Type Name Description Optional < UInt64 > applicationId Application ID String creator Filter just applications with the given creator address. Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < UInt64 > limit Maximum number of results to return. There could be additional pages even if the limit is not reached. String next The next page of results. Use the next token provided by the previous results. Returns Type Description AlgoApiRequest.Sent < ApplicationsResponse > Remarks Search for applications SearchForAssets(Optional<Boolean>, Optional<UInt64>, String, String, String, String, Optional<UInt64>) Declaration AlgoApiRequest.Sent<AssetsResponse> SearchForAssets(Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), string next = null, string creator = null, string name = null, string unit = null, Optional<ulong> assetId = default(Optional<ulong>)) Parameters Type Name Description Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < UInt64 > limit Maximum number of results to return. There could be additional pages even if the limit is not reached. String next The next page of results. Use the next token provided by the previous results. String creator Filter just assets with the given creator address. String name Filter just assets with the given name. String unit Filter just assets with the given unit. Optional < UInt64 > assetId Asset ID Returns Type Description AlgoApiRequest.Sent < AssetsResponse > Remarks Search for assets. SearchForTransactions(Byte[], Optional<Boolean>, String, Optional<UInt64>, DateTime, Optional<UInt64>, TransactionType, Optional<Boolean>, Optional<UInt64>, DateTime, Optional<UInt64>, Optional<UInt64>, Address, Optional<UInt64>, Optional<UInt64>, SignatureType, String, AddressRole, Optional<UInt64>) Declaration AlgoApiRequest.Sent<TransactionsResponse> SearchForTransactions(byte[] notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), string next = null, Optional<ulong> maxRound = default(Optional<ulong>), DateTime afterTime = null, Optional<ulong> applicationId = default(Optional<ulong>), TransactionType txType = TransactionType.None, Optional<bool> excludeCloseTo = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), DateTime beforeTime = null, Optional<ulong> minRound = default(Optional<ulong>), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Address address = default(Address), Optional<ulong> assetId = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), SignatureType sigType = SignatureType.None, string txid = null, AddressRole addressRole = AddressRole.None, Optional<ulong> round = default(Optional<ulong>)) Parameters Type Name Description Byte [] notePrefix Specifies a prefix which must be contained in the note field. Optional < Boolean > rekeyTo Include results which include the rekey-to field. String next The next page of results. Use the next token provided by the previous results. Optional < UInt64 > maxRound Include results at or before the specified max-round. DateTime afterTime Include results after the given time. Must be an RFC 3339 formatted string. Optional < UInt64 > applicationId Application ID TransactionType txType Optional < Boolean > excludeCloseTo Combine with address and address-role parameters to define what type of address to search for. The close to fields are normally treated as a receiver, if you would like to exclude them set this parameter to true. Optional < UInt64 > limit Maximum number of results to return. There could be additional pages even if the limit is not reached. DateTime beforeTime Include results before the given time. Must be an RFC 3339 formatted string. Optional < UInt64 > minRound Include results at or after the specified min-round. Optional < UInt64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Address address Only include transactions with this address in one of the transaction fields. Optional < UInt64 > assetId Asset ID Optional < UInt64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. SignatureType sigType SigType filters just results using the specified type of signature: sig - Standard msig - MultiSig lsig - LogicSig String txid Lookup the specific transaction by ID. AddressRole addressRole Combine with the address parameter to define what type of address to search for. Optional < UInt64 > round Include results for the specified round. Returns Type Description AlgoApiRequest.Sent < TransactionsResponse > Remarks Search for transactions."
  },
  "api/AlgoSdk.IKeyRegTxn.html": {
    "href": "api/AlgoSdk.IKeyRegTxn.html",
    "title": "Interface IKeyRegTxn | Unity Algorand SDK",
    "keywords": "Interface IKeyRegTxn Inherited Members ITransaction.CopyTo(Transaction) ITransaction.CopyFrom(Transaction) ITransactionHeader.Fee ITransactionHeader.FirstValidRound ITransactionHeader.GenesisHash ITransactionHeader.LastValidRound ITransactionHeader.Sender ITransactionHeader.TransactionType ITransactionHeader.GenesisId ITransactionHeader.Group ITransactionHeader.Lease ITransactionHeader.Note ITransactionHeader.RekeyTo Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IKeyRegTxn : ITransaction, ITransactionHeader Properties NonParticipation All new Algorand accounts are participating by default. This means that they earn rewards. Mark an account nonparticipating by setting this value to true and this account will no longer earn rewards. It is unlikely that you will ever need to do this and exists mainly for economic-related functions on the network. Declaration Optional<bool> NonParticipation { get; set; } Property Value Type Description Optional < Boolean > SelectionParticipationKey The VRF public key. Declaration VrfPubKey SelectionParticipationKey { get; set; } Property Value Type Description VrfPubKey VoteFirst The first round that the participation key is valid. Not to be confused with the of the keyreg transaction. Declaration ulong VoteFirst { get; set; } Property Value Type Description UInt64 VoteKeyDilution This is the dilution for the 2-level participation key. Declaration ulong VoteKeyDilution { get; set; } Property Value Type Description UInt64 VoteLast The last round that the participation key is valid. Not to be confused with the of the keyreg transaction. Declaration ulong VoteLast { get; set; } Property Value Type Description UInt64 VoteParticipationKey The root participation public key. Declaration ParticipationPublicKey VoteParticipationKey { get; set; } Property Value Type Description ParticipationPublicKey"
  },
  "api/AlgoSdk.IKmdClient.html": {
    "href": "api/AlgoSdk.IKmdClient.html",
    "title": "Interface IKmdClient | Unity Algorand SDK",
    "keywords": "Interface IKmdClient Inherited Members IAlgoApiClient.Address IAlgoApiClient.Token IAlgoApiClient.TokenHeader IAlgoApiClient.Headers Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IKmdClient : IAlgoApiClient Methods CreateWallet(PrivateKey, FixedString128Bytes, FixedString128Bytes, FixedString128Bytes) Create a wallet Declaration AlgoApiRequest.Sent<CreateWalletResponse> CreateWallet(PrivateKey masterDerivationKey, FixedString128Bytes walletDriverName, FixedString128Bytes walletName, FixedString128Bytes walletPassword) Parameters Type Name Description PrivateKey masterDerivationKey FixedString128Bytes walletDriverName FixedString128Bytes walletName FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < CreateWalletResponse > Remarks Create a new wallet (collection of keys) with the given parameters. DeleteKey(Address, FixedString128Bytes, FixedString128Bytes) Deletes the key with the passed public key from the wallet. Declaration AlgoApiRequest.Sent DeleteKey(Address address, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address address public key of the key to delete FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent DeleteMultisig(Address, FixedString128Bytes, FixedString128Bytes) Deletes multisig preimage information for the passed address from the wallet. Declaration AlgoApiRequest.Sent DeleteMultisig(Address address, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address address public key for the key to delete multisig preimage information FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent ExportKey(Address, FixedString128Bytes, FixedString128Bytes) Export the secret key associated with the passed public key. Declaration AlgoApiRequest.Sent<ExportKeyResponse> ExportKey(Address address, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address address public key of the key to export FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < ExportKeyResponse > ExportMasterKey(FixedString128Bytes, FixedString128Bytes) Export the master derivation key from the wallet. This key is a master \"backup\" key for the underlying wallet. With it, you can regenerate all of the wallets that have been generated with this wallet's POST /v1/key endpoint. This key will not allow you to recover keys imported from other wallets, however. Declaration AlgoApiRequest.Sent<ExportMasterKeyResponse> ExportMasterKey(FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < ExportMasterKeyResponse > ExportMultisig(Address, FixedString128Bytes) Given a multisig address whose preimage this wallet stores, returns the information used to generate the address, including public keys, threshold, and multisig version. Declaration AlgoApiRequest.Sent<ExportMultisigResponse> ExportMultisig(Address address, FixedString128Bytes walletHandleToken) Parameters Type Name Description Address address public key for the key to export multisig preimage information FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < ExportMultisigResponse > GenerateKey(FixedString128Bytes, Optional<Boolean>) Generates the next key in the deterministic key sequence (as determined by the master derivation key) and adds it to the wallet, returning the public key. Declaration AlgoApiRequest.Sent<GenerateKeyResponse> GenerateKey(FixedString128Bytes walletHandleToken, Optional<bool> displayMnemonic = default(Optional<bool>)) Parameters Type Name Description FixedString128Bytes walletHandleToken Optional < Boolean > displayMnemonic whether or not to display the mnemonic Returns Type Description AlgoApiRequest.Sent < GenerateKeyResponse > GetSwaggerSpec() Gets the current swagger spec. Declaration AlgoApiRequest.Sent<AlgoApiObject> GetSwaggerSpec() Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > The entire swagger spec in json. ImportKey(PrivateKey, FixedString128Bytes) Import an externally generated key into the wallet. Note that if you wish to back up the imported key, you must do so by backing up the entire wallet database, because imported keys were not derived from the wallet's master derivation key. Declaration AlgoApiRequest.Sent<ImportKeyResponse> ImportKey(PrivateKey privateKey, FixedString128Bytes walletPassword) Parameters Type Name Description PrivateKey privateKey key to import FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < ImportKeyResponse > ImportMultisig(Ed25519.PublicKey[], Byte, FixedString128Bytes, Byte) Generates a multisig account from the passed public keys array and multisig metadata, and stores all of this in the wallet. Declaration AlgoApiRequest.Sent<ImportMultisigResponse> ImportMultisig(Ed25519.PublicKey[] publicKeys, byte threshold, FixedString128Bytes walletHandleToken, byte version = 1) Parameters Type Name Description Ed25519.PublicKey [] publicKeys Public keys for the accounts used to sign Byte threshold Number of valid signatures required FixedString128Bytes walletHandleToken Byte version Multisig version. This should always be set to 1. Returns Type Description AlgoApiRequest.Sent < ImportMultisigResponse > InitWalletHandleToken(FixedString128Bytes, FixedString128Bytes) Initialize a wallet handle token Declaration AlgoApiRequest.Sent<InitWalletHandleTokenResponse> InitWalletHandleToken(FixedString128Bytes walletId, FixedString128Bytes walletPassword) Parameters Type Name Description FixedString128Bytes walletId FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < InitWalletHandleTokenResponse > Remarks Unlock the wallet and return a wallet handle token that can be used for subsequent operations. These tokens expire periodically and must be renewed. You can use WalletInfo(FixedString128Bytes) to see how much time remains until expiration, and renew it with RenewWalletHandleToken(FixedString128Bytes) . When you're done, you can invalidate the token with ReleaseWalletHandleToken(FixedString128Bytes) . ListKeys(FixedString128Bytes) Lists all of the public keys in this wallet. All of them have a stored private key. Declaration AlgoApiRequest.Sent<ListKeysResponse> ListKeys(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < ListKeysResponse > ListMultisig(FixedString128Bytes) Lists all of the multisig accounts whose preimages this wallet stores Declaration AlgoApiRequest.Sent<ListMultisigResponse> ListMultisig(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < ListMultisigResponse > ListWallets() List Wallets Declaration AlgoApiRequest.Sent<ListWalletsResponse> ListWallets() Returns Type Description AlgoApiRequest.Sent < ListWalletsResponse > Remarks Lists all of the wallets that kmd is aware of. ReleaseWalletHandleToken(FixedString128Bytes) Release a wallet handle token Declaration AlgoApiRequest.Sent ReleaseWalletHandleToken(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent Remarks Invalidate the passed wallet handle token, making it invalid for use in subsequent requests. RenameWallet(FixedString128Bytes, FixedString128Bytes, FixedString128Bytes) Rename a wallet Declaration AlgoApiRequest.Sent<RenameWalletResponse> RenameWallet(FixedString128Bytes walletId, FixedString128Bytes walletName, FixedString128Bytes walletPassword) Parameters Type Name Description FixedString128Bytes walletId FixedString128Bytes walletName FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < RenameWalletResponse > Remarks Rename the underlying wallet to something else RenewWalletHandleToken(FixedString128Bytes) Renew a wallet handle token Declaration AlgoApiRequest.Sent<RenewWalletHandleTokenResponse> RenewWalletHandleToken(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < RenewWalletHandleTokenResponse > Remarks Renew a wallet handle token, increasing its expiration duration to its initial value SignMultisig(MultisigSig, Ed25519.PublicKey, Byte[], FixedString128Bytes, FixedString128Bytes) Sign a multisig transaction Declaration AlgoApiRequest.Sent<SignMultisigResponse> SignMultisig(MultisigSig msig, Ed25519.PublicKey publicKey, byte[] transactionData, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description MultisigSig msig Current multisig signature object Ed25519.PublicKey publicKey public key of the key to use to add a signature to the multisig Byte [] transactionData transaction serialized as msgpack FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignMultisigResponse > Remarks Start a multisig signature, or add a signature to a partially completed multisig signature object. SignProgram(Address, Byte[], FixedString128Bytes, FixedString128Bytes) Sign program Declaration AlgoApiRequest.Sent<SignProgramResponse> SignProgram(Address account, byte[] programData, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address account Account to sign the program with Byte [] programData compiled program bytes FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignProgramResponse > Remarks Signs the passed program with a key from the wallet, determined by the account named in the request. SignProgramMultisig(Address, Byte[], MultisigSig, Ed25519.PublicKey, FixedString128Bytes, FixedString128Bytes) Sign a program for a multisig account Declaration AlgoApiRequest.Sent<SignProgramMultisigResponse> SignProgramMultisig(Address msigAccount, byte[] programData, MultisigSig msig, Ed25519.PublicKey publicKey, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address msigAccount The address of the multisig account. See https://developer.algorand.org/docs/get-details/accounts/create/#multisignature Byte [] programData compiled program bytes MultisigSig msig current multisig signature object Ed25519.PublicKey publicKey public key of the key to use to add a signature to the multisig FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignProgramMultisigResponse > Remarks Start a multisig signature, or add a signature to a partially completed multisig signature object. SignTransaction(Address, Byte[], FixedString128Bytes, FixedString128Bytes) Sign a transaction Declaration AlgoApiRequest.Sent<SignTransactionResponse> SignTransaction(Address account, byte[] transactionData, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address account public key of the key to sign the transaction Byte [] transactionData transaction serialized as msgpack FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignTransactionResponse > Versions() Retrieves the current version of the kmd service Declaration AlgoApiRequest.Sent<VersionsResponse> Versions() Returns Type Description AlgoApiRequest.Sent < VersionsResponse > WalletInfo(FixedString128Bytes) Get wallet info Declaration AlgoApiRequest.Sent<WalletInfoResponse> WalletInfo(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < WalletInfoResponse > Remarks Returns information about the wallet associated with the passed wallet handle token. Additionally returns expiration information about the token itself."
  },
  "api/AlgoSdk.Indexer.Account.html": {
    "href": "api/AlgoSdk.Indexer.Account.html",
    "title": "Struct Account | Unity Algorand SDK",
    "keywords": "Struct Account Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct Account : IEquatable<Account> Properties Address the account public key Declaration public string Address { get; set; } Property Value Type Description String Amount [algo] total number of MicroAlgos in the account Declaration public ulong Amount { get; set; } Property Value Type Description UInt64 AmountWithoutPendingRewards specifies the amount of MicroAlgos in the account, without the pending rewards. Declaration public ulong AmountWithoutPendingRewards { get; set; } Property Value Type Description UInt64 AppsLocalState [appl] applications local data stored in this account. Note the raw object uses map[int] -> AppLocalState for this type. Declaration public ApplicationLocalState[] AppsLocalState { get; set; } Property Value Type Description ApplicationLocalState [] AppsTotalExtraPages [teap] the sum of all extra application program pages for this account. Declaration public Optional<ulong> AppsTotalExtraPages { get; set; } Property Value Type Description Optional < UInt64 > AppsTotalSchema [tsch] stores the sum of all of the local schemas and global schemas in this account. Note: the raw account uses StateSchema for this type. Declaration public ApplicationStateSchema AppsTotalSchema { get; set; } Property Value Type Description ApplicationStateSchema Assets [asset] assets held by this account. Note the raw object uses map[int] -> AssetHolding for this type. Declaration public AssetHolding[] Assets { get; set; } Property Value Type Description AssetHolding [] AuthAddr [spend] the address against which signing should be checked. If empty, the address of the current account is used. This field can be updated in any transaction by setting the RekeyTo field. Declaration public Address AuthAddr { get; set; } Property Value Type Description Address ClosedAtRound Round during which this account was most recently closed. Declaration public Optional<ulong> ClosedAtRound { get; set; } Property Value Type Description Optional < UInt64 > CreatedApps [appp] parameters of applications created by this account including app global data. Note: the raw account uses map[int] -> AppParams for this type. Declaration public Application[] CreatedApps { get; set; } Property Value Type Description Application [] CreatedAssets [apar] parameters of assets created by this account. Note: the raw account uses map[int] -> Asset for this type. Declaration public Asset[] CreatedAssets { get; set; } Property Value Type Description Asset [] CreatedAtRound Round during which this account first appeared in a transaction. Declaration public Optional<ulong> CreatedAtRound { get; set; } Property Value Type Description Optional < UInt64 > Deleted Whether or not this account is currently closed. Declaration public Optional<bool> Deleted { get; set; } Property Value Type Description Optional < Boolean > Participation Declaration public AccountParticipation Participation { get; set; } Property Value Type Description AccountParticipation PendingRewards amount of MicroAlgos of pending rewards in this account. Declaration public ulong PendingRewards { get; set; } Property Value Type Description UInt64 RewardBase [ebase] used as part of the rewards computation. Only applicable to accounts which are participating. Declaration public Optional<ulong> RewardBase { get; set; } Property Value Type Description Optional < UInt64 > Rewards [ern] total rewards of MicroAlgos the account has received, including pending rewards. Declaration public ulong Rewards { get; set; } Property Value Type Description UInt64 Round The round for which this information is relevant. Declaration public ulong Round { get; set; } Property Value Type Description UInt64 SigType Indicates what type of signature is used by this account, must be one of: sig msig lsig or null if unknown Declaration public SignatureType SigType { get; set; } Property Value Type Description SignatureType Status [onl] delegation status of the account's MicroAlgos Offline - indicates that the associated account is delegated. Online - indicates that the associated account used as part of the delegation pool. NotParticipating - indicates that the associated account is neither a delegator nor a delegate. Declaration public string Status { get; set; } Property Value Type Description String TotalAppsOptedIn The count of all applications that have been opted in, equivalent to the count of application local data (AppLocalState objects) stored in this account. Declaration public ulong TotalAppsOptedIn { get; set; } Property Value Type Description UInt64 TotalAssetsOptedIn The count of all assets that have been opted in, equivalent to the count of AssetHolding objects held by this account. Declaration public ulong TotalAssetsOptedIn { get; set; } Property Value Type Description UInt64 TotalCreatedApps The count of all apps (AppParams objects) created by this account. Declaration public ulong TotalCreatedApps { get; set; } Property Value Type Description UInt64 TotalCreatedAssets The count of all assets (AssetParams objects) created by this account. Declaration public ulong TotalCreatedAssets { get; set; } Property Value Type Description UInt64 Methods Equals(Account) Declaration public bool Equals(Account other) Parameters Type Name Description Account other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.AccountParticipation.html": {
    "href": "api/AlgoSdk.Indexer.AccountParticipation.html",
    "title": "Struct AccountParticipation | Unity Algorand SDK",
    "keywords": "Struct AccountParticipation Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct AccountParticipation : IEquatable<AccountParticipation> Properties SelectionParticipationKey [sel] Selection public key (if any) currently registered for this round. Declaration public byte[] SelectionParticipationKey { get; set; } Property Value Type Description Byte [] StateProofKey [stprf] Root of the state proof key (if any) Declaration public byte[] StateProofKey { get; set; } Property Value Type Description Byte [] VoteFirstValid [voteFst] First round for which this participation is valid. Declaration public ulong VoteFirstValid { get; set; } Property Value Type Description UInt64 VoteKeyDilution [voteKD] Number of subkeys in each batch of participation keys. Declaration public ulong VoteKeyDilution { get; set; } Property Value Type Description UInt64 VoteLastValid [voteLst] Last round for which this participation is valid. Declaration public ulong VoteLastValid { get; set; } Property Value Type Description UInt64 VoteParticipationKey [vote] root participation public key (if any) currently registered for this round. Declaration public byte[] VoteParticipationKey { get; set; } Property Value Type Description Byte [] Methods Equals(AccountParticipation) Declaration public bool Equals(AccountParticipation other) Parameters Type Name Description AccountParticipation other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.AccountResponse.html": {
    "href": "api/AlgoSdk.Indexer.AccountResponse.html",
    "title": "Struct AccountResponse | Unity Algorand SDK",
    "keywords": "Struct AccountResponse Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct AccountResponse : IEquatable<AccountResponse> Properties Account Declaration public Account Account { get; set; } Property Value Type Description Account CurrentRound Round at which the results were computed. Declaration public ulong CurrentRound { get; set; } Property Value Type Description UInt64 Methods Equals(AccountResponse) Declaration public bool Equals(AccountResponse other) Parameters Type Name Description AccountResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.AccountsResponse.html": {
    "href": "api/AlgoSdk.Indexer.AccountsResponse.html",
    "title": "Struct AccountsResponse | Unity Algorand SDK",
    "keywords": "Struct AccountsResponse Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct AccountsResponse : IEquatable<AccountsResponse> Properties Accounts Declaration public Account[] Accounts { get; set; } Property Value Type Description Account [] CurrentRound Round at which the results were computed. Declaration public ulong CurrentRound { get; set; } Property Value Type Description UInt64 NextToken Used for pagination, when making another request provide this token with the next parameter. Declaration public string NextToken { get; set; } Property Value Type Description String Methods Equals(AccountsResponse) Declaration public bool Equals(AccountsResponse other) Parameters Type Name Description AccountsResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.AccountStateDelta.html": {
    "href": "api/AlgoSdk.Indexer.AccountStateDelta.html",
    "title": "Struct AccountStateDelta | Unity Algorand SDK",
    "keywords": "Struct AccountStateDelta Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct AccountStateDelta : IEquatable<AccountStateDelta> Properties Address Declaration public string Address { get; set; } Property Value Type Description String Delta Declaration public StateDelta Delta { get; set; } Property Value Type Description StateDelta Methods Equals(AccountStateDelta) Declaration public bool Equals(AccountStateDelta other) Parameters Type Name Description AccountStateDelta other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.Application.html": {
    "href": "api/AlgoSdk.Indexer.Application.html",
    "title": "Struct Application | Unity Algorand SDK",
    "keywords": "Struct Application Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct Application : IEquatable<Application> Properties CreatedAtRound Round when this application was created. Declaration public Optional<ulong> CreatedAtRound { get; set; } Property Value Type Description Optional < UInt64 > Deleted Whether or not this application is currently deleted. Declaration public Optional<bool> Deleted { get; set; } Property Value Type Description Optional < Boolean > DeletedAtRound Round when this application was deleted. Declaration public Optional<ulong> DeletedAtRound { get; set; } Property Value Type Description Optional < UInt64 > Id [appidx] application index. Declaration public ulong Id { get; set; } Property Value Type Description UInt64 Params [appparams] application parameters. Declaration public ApplicationParams Params { get; set; } Property Value Type Description ApplicationParams Methods Equals(Application) Declaration public bool Equals(Application other) Parameters Type Name Description Application other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.ApplicationLocalState.html": {
    "href": "api/AlgoSdk.Indexer.ApplicationLocalState.html",
    "title": "Struct ApplicationLocalState | Unity Algorand SDK",
    "keywords": "Struct ApplicationLocalState Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct ApplicationLocalState : IEquatable<ApplicationLocalState> Properties ClosedOutAtRound Round when account closed out of the application. Declaration public Optional<ulong> ClosedOutAtRound { get; set; } Property Value Type Description Optional < UInt64 > Deleted Whether or not the application local state is currently deleted from its account. Declaration public Optional<bool> Deleted { get; set; } Property Value Type Description Optional < Boolean > Id The application which this local state is for. Declaration public ulong Id { get; set; } Property Value Type Description UInt64 KeyValue [tkv] storage. Declaration public TealKeyValueStore KeyValue { get; set; } Property Value Type Description TealKeyValueStore OptedInAtRound Round when the account opted into the application. Declaration public Optional<ulong> OptedInAtRound { get; set; } Property Value Type Description Optional < UInt64 > Schema [hsch] schema. Declaration public ApplicationStateSchema Schema { get; set; } Property Value Type Description ApplicationStateSchema Methods Equals(ApplicationLocalState) Declaration public bool Equals(ApplicationLocalState other) Parameters Type Name Description ApplicationLocalState other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.ApplicationLocalStatesResponse.html": {
    "href": "api/AlgoSdk.Indexer.ApplicationLocalStatesResponse.html",
    "title": "Struct ApplicationLocalStatesResponse | Unity Algorand SDK",
    "keywords": "Struct ApplicationLocalStatesResponse Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct ApplicationLocalStatesResponse : IEquatable<ApplicationLocalStatesResponse> Properties AppsLocalStates Declaration public ApplicationLocalState[] AppsLocalStates { get; set; } Property Value Type Description ApplicationLocalState [] CurrentRound Round at which the results were computed. Declaration public ulong CurrentRound { get; set; } Property Value Type Description UInt64 NextToken Used for pagination, when making another request provide this token with the next parameter. Declaration public string NextToken { get; set; } Property Value Type Description String Methods Equals(ApplicationLocalStatesResponse) Declaration public bool Equals(ApplicationLocalStatesResponse other) Parameters Type Name Description ApplicationLocalStatesResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.ApplicationLogData.html": {
    "href": "api/AlgoSdk.Indexer.ApplicationLogData.html",
    "title": "Struct ApplicationLogData | Unity Algorand SDK",
    "keywords": "Struct ApplicationLogData Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct ApplicationLogData : IEquatable<ApplicationLogData> Properties Logs [lg] Logs for the application being executed by the transaction. Declaration public byte[][] Logs { get; set; } Property Value Type Description Byte [][] Txid Transaction ID Declaration public string Txid { get; set; } Property Value Type Description String Methods Equals(ApplicationLogData) Declaration public bool Equals(ApplicationLogData other) Parameters Type Name Description ApplicationLogData other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.ApplicationLogsResponse.html": {
    "href": "api/AlgoSdk.Indexer.ApplicationLogsResponse.html",
    "title": "Struct ApplicationLogsResponse | Unity Algorand SDK",
    "keywords": "Struct ApplicationLogsResponse Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct ApplicationLogsResponse : IEquatable<ApplicationLogsResponse> Properties ApplicationId [appidx] application index. Declaration public ulong ApplicationId { get; set; } Property Value Type Description UInt64 CurrentRound Round at which the results were computed. Declaration public ulong CurrentRound { get; set; } Property Value Type Description UInt64 LogData Declaration public ApplicationLogData[] LogData { get; set; } Property Value Type Description ApplicationLogData [] NextToken Used for pagination, when making another request provide this token with the next parameter. Declaration public string NextToken { get; set; } Property Value Type Description String Methods Equals(ApplicationLogsResponse) Declaration public bool Equals(ApplicationLogsResponse other) Parameters Type Name Description ApplicationLogsResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.ApplicationParams.html": {
    "href": "api/AlgoSdk.Indexer.ApplicationParams.html",
    "title": "Struct ApplicationParams | Unity Algorand SDK",
    "keywords": "Struct ApplicationParams Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct ApplicationParams : IEquatable<ApplicationParams> Properties ApprovalProgram [approv] approval program. Declaration public CompiledTeal ApprovalProgram { get; set; } Property Value Type Description CompiledTeal ClearStateProgram [clearp] approval program. Declaration public CompiledTeal ClearStateProgram { get; set; } Property Value Type Description CompiledTeal Creator The address that created this application. This is the address where the parameters and global state for this application can be found. Declaration public Address Creator { get; set; } Property Value Type Description Address ExtraProgramPages [epp] the amount of extra program pages available to this app. Declaration public Optional<ulong> ExtraProgramPages { get; set; } Property Value Type Description Optional < UInt64 > GlobalState [gs] global schema Declaration public TealKeyValueStore GlobalState { get; set; } Property Value Type Description TealKeyValueStore GlobalStateSchema [gsch] global schema Declaration public ApplicationStateSchema GlobalStateSchema { get; set; } Property Value Type Description ApplicationStateSchema LocalStateSchema [lsch] local schema Declaration public ApplicationStateSchema LocalStateSchema { get; set; } Property Value Type Description ApplicationStateSchema Methods Equals(ApplicationParams) Declaration public bool Equals(ApplicationParams other) Parameters Type Name Description ApplicationParams other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.ApplicationResponse.html": {
    "href": "api/AlgoSdk.Indexer.ApplicationResponse.html",
    "title": "Struct ApplicationResponse | Unity Algorand SDK",
    "keywords": "Struct ApplicationResponse Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct ApplicationResponse : IEquatable<ApplicationResponse> Properties Application Declaration public Application Application { get; set; } Property Value Type Description Application CurrentRound Round at which the results were computed. Declaration public ulong CurrentRound { get; set; } Property Value Type Description UInt64 Methods Equals(ApplicationResponse) Declaration public bool Equals(ApplicationResponse other) Parameters Type Name Description ApplicationResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.ApplicationsResponse.html": {
    "href": "api/AlgoSdk.Indexer.ApplicationsResponse.html",
    "title": "Struct ApplicationsResponse | Unity Algorand SDK",
    "keywords": "Struct ApplicationsResponse Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct ApplicationsResponse : IEquatable<ApplicationsResponse> Properties Applications Declaration public Application[] Applications { get; set; } Property Value Type Description Application [] CurrentRound Round at which the results were computed. Declaration public ulong CurrentRound { get; set; } Property Value Type Description UInt64 NextToken Used for pagination, when making another request provide this token with the next parameter. Declaration public string NextToken { get; set; } Property Value Type Description String Methods Equals(ApplicationsResponse) Declaration public bool Equals(ApplicationsResponse other) Parameters Type Name Description ApplicationsResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.ApplicationStateSchema.html": {
    "href": "api/AlgoSdk.Indexer.ApplicationStateSchema.html",
    "title": "Struct ApplicationStateSchema | Unity Algorand SDK",
    "keywords": "Struct ApplicationStateSchema Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct ApplicationStateSchema : IEquatable<ApplicationStateSchema> Properties NumByteSlice [nbs] num of byte slices. Declaration public ulong NumByteSlice { get; set; } Property Value Type Description UInt64 NumUint [nui] num of uints. Declaration public ulong NumUint { get; set; } Property Value Type Description UInt64 Methods Equals(ApplicationStateSchema) Declaration public bool Equals(ApplicationStateSchema other) Parameters Type Name Description ApplicationStateSchema other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.Asset.html": {
    "href": "api/AlgoSdk.Indexer.Asset.html",
    "title": "Struct Asset | Unity Algorand SDK",
    "keywords": "Struct Asset Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct Asset : IEquatable<Asset> Properties CreatedAtRound Round during which this asset was created. Declaration public Optional<ulong> CreatedAtRound { get; set; } Property Value Type Description Optional < UInt64 > Deleted Whether or not this asset is currently deleted. Declaration public Optional<bool> Deleted { get; set; } Property Value Type Description Optional < Boolean > DestroyedAtRound Round during which this asset was destroyed. Declaration public Optional<ulong> DestroyedAtRound { get; set; } Property Value Type Description Optional < UInt64 > Index unique asset identifier Declaration public ulong Index { get; set; } Property Value Type Description UInt64 Params Declaration public AssetParams Params { get; set; } Property Value Type Description AssetParams Methods Equals(Asset) Declaration public bool Equals(Asset other) Parameters Type Name Description Asset other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.AssetBalancesResponse.html": {
    "href": "api/AlgoSdk.Indexer.AssetBalancesResponse.html",
    "title": "Struct AssetBalancesResponse | Unity Algorand SDK",
    "keywords": "Struct AssetBalancesResponse Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct AssetBalancesResponse : IEquatable<AssetBalancesResponse> Properties Balances Declaration public MiniAssetHolding[] Balances { get; set; } Property Value Type Description MiniAssetHolding [] CurrentRound Round at which the results were computed. Declaration public ulong CurrentRound { get; set; } Property Value Type Description UInt64 NextToken Used for pagination, when making another request provide this token with the next parameter. Declaration public string NextToken { get; set; } Property Value Type Description String Methods Equals(AssetBalancesResponse) Declaration public bool Equals(AssetBalancesResponse other) Parameters Type Name Description AssetBalancesResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.AssetHolding.html": {
    "href": "api/AlgoSdk.Indexer.AssetHolding.html",
    "title": "Struct AssetHolding | Unity Algorand SDK",
    "keywords": "Struct AssetHolding Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct AssetHolding : IEquatable<AssetHolding> Properties Amount [a] number of units held. Declaration public ulong Amount { get; set; } Property Value Type Description UInt64 AssetId Asset ID of the holding. Declaration public ulong AssetId { get; set; } Property Value Type Description UInt64 Deleted Whether or not the asset holding is currently deleted from its account. Declaration public Optional<bool> Deleted { get; set; } Property Value Type Description Optional < Boolean > IsFrozen [f] whether or not the holding is frozen. Declaration public bool IsFrozen { get; set; } Property Value Type Description Boolean OptedInAtRound Round during which the account opted into this asset holding. Declaration public Optional<ulong> OptedInAtRound { get; set; } Property Value Type Description Optional < UInt64 > OptedOutAtRound Round during which the account opted out of this asset holding. Declaration public Optional<ulong> OptedOutAtRound { get; set; } Property Value Type Description Optional < UInt64 > Methods Equals(AssetHolding) Declaration public bool Equals(AssetHolding other) Parameters Type Name Description AssetHolding other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.AssetHoldingsResponse.html": {
    "href": "api/AlgoSdk.Indexer.AssetHoldingsResponse.html",
    "title": "Struct AssetHoldingsResponse | Unity Algorand SDK",
    "keywords": "Struct AssetHoldingsResponse Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct AssetHoldingsResponse : IEquatable<AssetHoldingsResponse> Properties Assets Declaration public AssetHolding[] Assets { get; set; } Property Value Type Description AssetHolding [] CurrentRound Round at which the results were computed. Declaration public ulong CurrentRound { get; set; } Property Value Type Description UInt64 NextToken Used for pagination, when making another request provide this token with the next parameter. Declaration public string NextToken { get; set; } Property Value Type Description String Methods Equals(AssetHoldingsResponse) Declaration public bool Equals(AssetHoldingsResponse other) Parameters Type Name Description AssetHoldingsResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.AssetParams.html": {
    "href": "api/AlgoSdk.Indexer.AssetParams.html",
    "title": "Struct AssetParams | Unity Algorand SDK",
    "keywords": "Struct AssetParams Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct AssetParams : IEquatable<AssetParams> Properties Clawback [c] Address of account used to clawback holdings of this asset. If empty, clawback is not permitted. Declaration public string Clawback { get; set; } Property Value Type Description String Creator The address that created this asset. This is the address where the parameters for this asset can be found, and also the address where unwanted asset units can be sent in the worst case. Declaration public string Creator { get; set; } Property Value Type Description String Decimals [dc] The number of digits to use after the decimal point when displaying this asset. If 0, the asset is not divisible. If 1, the base unit of the asset is in tenths. If 2, the base unit of the asset is in hundredths, and so on. This value must be between 0 and 19 (inclusive). Declaration public ulong Decimals { get; set; } Property Value Type Description UInt64 DefaultFrozen [df] Whether holdings of this asset are frozen by default. Declaration public Optional<bool> DefaultFrozen { get; set; } Property Value Type Description Optional < Boolean > Freeze [f] Address of account used to freeze holdings of this asset. If empty, freezing is not permitted. Declaration public string Freeze { get; set; } Property Value Type Description String Manager [m] Address of account used to manage the keys of this asset and to destroy it. Declaration public string Manager { get; set; } Property Value Type Description String MetadataHash [am] A commitment to some unspecified asset metadata. The format of this metadata is up to the application. Declaration public byte[] MetadataHash { get; set; } Property Value Type Description Byte [] Name [an] Name of this asset, as supplied by the creator. Included only when the asset name is composed of printable utf-8 characters. Declaration public string Name { get; set; } Property Value Type Description String NameB64 Base64 encoded name of this asset, as supplied by the creator. Declaration public byte[] NameB64 { get; set; } Property Value Type Description Byte [] Reserve [r] Address of account holding reserve (non-minted) units of this asset. Declaration public string Reserve { get; set; } Property Value Type Description String Total [t] The total number of units of this asset. Declaration public ulong Total { get; set; } Property Value Type Description UInt64 UnitName [un] Name of a unit of this asset, as supplied by the creator. Included only when the name of a unit of this asset is composed of printable utf-8 characters. Declaration public string UnitName { get; set; } Property Value Type Description String UnitNameB64 Base64 encoded name of a unit of this asset, as supplied by the creator. Declaration public byte[] UnitNameB64 { get; set; } Property Value Type Description Byte [] Url [au] URL where more information about the asset can be retrieved. Included only when the URL is composed of printable utf-8 characters. Declaration public string Url { get; set; } Property Value Type Description String UrlB64 Base64 encoded URL where more information about the asset can be retrieved. Declaration public byte[] UrlB64 { get; set; } Property Value Type Description Byte [] Methods Equals(AssetParams) Declaration public bool Equals(AssetParams other) Parameters Type Name Description AssetParams other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.AssetResponse.html": {
    "href": "api/AlgoSdk.Indexer.AssetResponse.html",
    "title": "Struct AssetResponse | Unity Algorand SDK",
    "keywords": "Struct AssetResponse Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct AssetResponse : IEquatable<AssetResponse> Properties Asset Declaration public Asset Asset { get; set; } Property Value Type Description Asset CurrentRound Round at which the results were computed. Declaration public ulong CurrentRound { get; set; } Property Value Type Description UInt64 Methods Equals(AssetResponse) Declaration public bool Equals(AssetResponse other) Parameters Type Name Description AssetResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.AssetsResponse.html": {
    "href": "api/AlgoSdk.Indexer.AssetsResponse.html",
    "title": "Struct AssetsResponse | Unity Algorand SDK",
    "keywords": "Struct AssetsResponse Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct AssetsResponse : IEquatable<AssetsResponse> Properties Assets Declaration public Asset[] Assets { get; set; } Property Value Type Description Asset [] CurrentRound Round at which the results were computed. Declaration public ulong CurrentRound { get; set; } Property Value Type Description UInt64 NextToken Used for pagination, when making another request provide this token with the next parameter. Declaration public string NextToken { get; set; } Property Value Type Description String Methods Equals(AssetsResponse) Declaration public bool Equals(AssetsResponse other) Parameters Type Name Description AssetsResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.Block.html": {
    "href": "api/AlgoSdk.Indexer.Block.html",
    "title": "Struct Block | Unity Algorand SDK",
    "keywords": "Struct Block Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct Block : IEquatable<Block> Properties GenesisHash [gh] hash to which this block belongs. Declaration public byte[] GenesisHash { get; set; } Property Value Type Description Byte [] GenesisId [gen] ID to which this block belongs. Declaration public string GenesisId { get; set; } Property Value Type Description String PreviousBlockHash [prev] Previous block hash. Declaration public byte[] PreviousBlockHash { get; set; } Property Value Type Description Byte [] Rewards Declaration public BlockRewards Rewards { get; set; } Property Value Type Description BlockRewards Round [rnd] Current round on which this block was appended to the chain. Declaration public ulong Round { get; set; } Property Value Type Description UInt64 Seed [seed] Sortition seed. Declaration public byte[] Seed { get; set; } Property Value Type Description Byte [] Timestamp [ts] Block creation timestamp in seconds since eposh Declaration public ulong Timestamp { get; set; } Property Value Type Description UInt64 Transactions [txns] list of transactions corresponding to a given round. Declaration public Transaction[] Transactions { get; set; } Property Value Type Description Transaction [] TransactionsRoot [txn] TransactionsRoot authenticates the set of transactions appearing in the block. More specifically, it's the root of a merkle tree whose leaves are the block's Txids, in lexicographic order. For the empty block, it's 0. Note that the TxnRoot does not authenticate the signatures on the transactions, only the transactions themselves. Two blocks with the same transactions but in a different order and with different signatures will have the same TxnRoot. Declaration public byte[] TransactionsRoot { get; set; } Property Value Type Description Byte [] TxnCounter [tc] TxnCounter counts the number of transactions committed in the ledger, from the time at which support for this feature was introduced. Specifically, TxnCounter is the number of the next transaction that will be committed after this block. It is 0 when no transactions have ever been committed (since TxnCounter started being supported). Declaration public Optional<ulong> TxnCounter { get; set; } Property Value Type Description Optional < UInt64 > UpgradeState Declaration public BlockUpgradeState UpgradeState { get; set; } Property Value Type Description BlockUpgradeState UpgradeVote Declaration public BlockUpgradeVote UpgradeVote { get; set; } Property Value Type Description BlockUpgradeVote Methods Equals(Block) Declaration public bool Equals(Block other) Parameters Type Name Description Block other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.BlockResponse.html": {
    "href": "api/AlgoSdk.Indexer.BlockResponse.html",
    "title": "Struct BlockResponse | Unity Algorand SDK",
    "keywords": "Struct BlockResponse (empty) Implements IWrappedValue < Block > Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct BlockResponse : IEquatable<BlockResponse>, IWrappedValue<Block> Constructors BlockResponse(Block) Declaration public BlockResponse(Block value) Parameters Type Name Description Block value Properties WrappedValue Declaration public Block WrappedValue { get; set; } Property Value Type Description Block Methods Equals(BlockResponse) Declaration public bool Equals(BlockResponse other) Parameters Type Name Description BlockResponse other Returns Type Description Boolean Operators Implicit(Block to BlockResponse) Declaration public static implicit operator BlockResponse(Block value) Parameters Type Name Description Block value Returns Type Description BlockResponse Implicit(BlockResponse to Block) Declaration public static implicit operator Block(BlockResponse wrapper) Parameters Type Name Description BlockResponse wrapper Returns Type Description Block Implements IWrappedValue<T>"
  },
  "api/AlgoSdk.Indexer.BlockRewards.html": {
    "href": "api/AlgoSdk.Indexer.BlockRewards.html",
    "title": "Struct BlockRewards | Unity Algorand SDK",
    "keywords": "Struct BlockRewards Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct BlockRewards : IEquatable<BlockRewards> Properties FeeSink [fees] accepts transaction fees, it can only spend to the incentive pool. Declaration public string FeeSink { get; set; } Property Value Type Description String RewardsCalculationRound [rwcalr] number of leftover MicroAlgos after the distribution of rewards-rate MicroAlgos for every reward unit in the next round. Declaration public ulong RewardsCalculationRound { get; set; } Property Value Type Description UInt64 RewardsLevel [earn] How many rewards, in MicroAlgos, have been distributed to each RewardUnit of MicroAlgos since genesis. Declaration public ulong RewardsLevel { get; set; } Property Value Type Description UInt64 RewardsPool [rwd] accepts periodic injections from the fee-sink and continually redistributes them as rewards. Declaration public string RewardsPool { get; set; } Property Value Type Description String RewardsRate [rate] Number of new MicroAlgos added to the participation stake from rewards at the next round. Declaration public ulong RewardsRate { get; set; } Property Value Type Description UInt64 RewardsResidue [frac] Number of leftover MicroAlgos after the distribution of RewardsRate/rewardUnits MicroAlgos for every reward unit in the next round. Declaration public ulong RewardsResidue { get; set; } Property Value Type Description UInt64 Methods Equals(BlockRewards) Declaration public bool Equals(BlockRewards other) Parameters Type Name Description BlockRewards other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.BlockUpgradeState.html": {
    "href": "api/AlgoSdk.Indexer.BlockUpgradeState.html",
    "title": "Struct BlockUpgradeState | Unity Algorand SDK",
    "keywords": "Struct BlockUpgradeState Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct BlockUpgradeState : IEquatable<BlockUpgradeState> Properties CurrentProtocol [proto] The current protocol version. Declaration public string CurrentProtocol { get; set; } Property Value Type Description String NextProtocol [nextproto] The next proposed protocol version. Declaration public string NextProtocol { get; set; } Property Value Type Description String NextProtocolApprovals [nextyes] Number of blocks which approved the protocol upgrade. Declaration public Optional<ulong> NextProtocolApprovals { get; set; } Property Value Type Description Optional < UInt64 > NextProtocolSwitchOn [nextswitch] Round on which the protocol upgrade will take effect. Declaration public Optional<ulong> NextProtocolSwitchOn { get; set; } Property Value Type Description Optional < UInt64 > NextProtocolVoteBefore [nextbefore] Deadline round for this protocol upgrade (No votes will be consider after this round). Declaration public Optional<ulong> NextProtocolVoteBefore { get; set; } Property Value Type Description Optional < UInt64 > Methods Equals(BlockUpgradeState) Declaration public bool Equals(BlockUpgradeState other) Parameters Type Name Description BlockUpgradeState other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.BlockUpgradeVote.html": {
    "href": "api/AlgoSdk.Indexer.BlockUpgradeVote.html",
    "title": "Struct BlockUpgradeVote | Unity Algorand SDK",
    "keywords": "Struct BlockUpgradeVote Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct BlockUpgradeVote : IEquatable<BlockUpgradeVote> Properties UpgradeApprove [upgradeyes] Indicates a yes vote for the current proposal. Declaration public Optional<bool> UpgradeApprove { get; set; } Property Value Type Description Optional < Boolean > UpgradeDelay [upgradedelay] Indicates the time between acceptance and execution. Declaration public Optional<ulong> UpgradeDelay { get; set; } Property Value Type Description Optional < UInt64 > UpgradePropose [upgradeprop] Indicates a proposed upgrade. Declaration public string UpgradePropose { get; set; } Property Value Type Description String Methods Equals(BlockUpgradeVote) Declaration public bool Equals(BlockUpgradeVote other) Parameters Type Name Description BlockUpgradeVote other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.EvalDelta.html": {
    "href": "api/AlgoSdk.Indexer.EvalDelta.html",
    "title": "Struct EvalDelta | Unity Algorand SDK",
    "keywords": "Struct EvalDelta Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct EvalDelta : IEquatable<EvalDelta> Properties Action [at] delta action. Declaration public ulong Action { get; set; } Property Value Type Description UInt64 Bytes [bs] bytes value. Declaration public string Bytes { get; set; } Property Value Type Description String Uint [ui] uint value. Declaration public Optional<ulong> Uint { get; set; } Property Value Type Description Optional < UInt64 > Methods Equals(EvalDelta) Declaration public bool Equals(EvalDelta other) Parameters Type Name Description EvalDelta other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.EvalDeltaKeyValue.html": {
    "href": "api/AlgoSdk.Indexer.EvalDeltaKeyValue.html",
    "title": "Struct EvalDeltaKeyValue | Unity Algorand SDK",
    "keywords": "Struct EvalDeltaKeyValue Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct EvalDeltaKeyValue : IEquatable<EvalDeltaKeyValue> Properties Key Declaration public string Key { get; set; } Property Value Type Description String Value Declaration public EvalDelta Value { get; set; } Property Value Type Description EvalDelta Methods Equals(EvalDeltaKeyValue) Declaration public bool Equals(EvalDeltaKeyValue other) Parameters Type Name Description EvalDeltaKeyValue other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.HealthCheck.html": {
    "href": "api/AlgoSdk.Indexer.HealthCheck.html",
    "title": "Struct HealthCheck | Unity Algorand SDK",
    "keywords": "Struct HealthCheck Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct HealthCheck : IEquatable<HealthCheck> Properties Data Declaration public AlgoApiObject Data { get; set; } Property Value Type Description AlgoApiObject DbAvailable Declaration public bool DbAvailable { get; set; } Property Value Type Description Boolean Errors Declaration public string[] Errors { get; set; } Property Value Type Description String [] IsMigrating Declaration public bool IsMigrating { get; set; } Property Value Type Description Boolean Message Declaration public string Message { get; set; } Property Value Type Description String Round Declaration public ulong Round { get; set; } Property Value Type Description UInt64 Version Current version. Declaration public string Version { get; set; } Property Value Type Description String Methods Equals(HealthCheck) Declaration public bool Equals(HealthCheck other) Parameters Type Name Description HealthCheck other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.HealthCheckResponse.html": {
    "href": "api/AlgoSdk.Indexer.HealthCheckResponse.html",
    "title": "Struct HealthCheckResponse | Unity Algorand SDK",
    "keywords": "Struct HealthCheckResponse (empty) Implements IWrappedValue < HealthCheck > Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct HealthCheckResponse : IEquatable<HealthCheckResponse>, IWrappedValue<HealthCheck> Constructors HealthCheckResponse(HealthCheck) Declaration public HealthCheckResponse(HealthCheck value) Parameters Type Name Description HealthCheck value Properties WrappedValue Declaration public HealthCheck WrappedValue { get; set; } Property Value Type Description HealthCheck Methods Equals(HealthCheckResponse) Declaration public bool Equals(HealthCheckResponse other) Parameters Type Name Description HealthCheckResponse other Returns Type Description Boolean Operators Implicit(HealthCheck to HealthCheckResponse) Declaration public static implicit operator HealthCheckResponse(HealthCheck value) Parameters Type Name Description HealthCheck value Returns Type Description HealthCheckResponse Implicit(HealthCheckResponse to HealthCheck) Declaration public static implicit operator HealthCheck(HealthCheckResponse wrapper) Parameters Type Name Description HealthCheckResponse wrapper Returns Type Description HealthCheck Implements IWrappedValue<T>"
  },
  "api/AlgoSdk.Indexer.html": {
    "href": "api/AlgoSdk.Indexer.html",
    "title": "Namespace AlgoSdk.Indexer | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.Indexer Structs Account AccountParticipation AccountResponse AccountsResponse AccountStateDelta Application ApplicationLocalState ApplicationLocalStatesResponse ApplicationLogData ApplicationLogsResponse ApplicationParams ApplicationResponse ApplicationsResponse ApplicationStateSchema Asset AssetBalancesResponse AssetHolding AssetHoldingsResponse AssetParams AssetResponse AssetsResponse Block BlockResponse (empty) BlockRewards BlockUpgradeState BlockUpgradeVote EvalDelta EvalDeltaKeyValue HealthCheck HealthCheckResponse (empty) MiniAssetHolding StateDelta Application state delta. StateSchema TealKeyValue TealKeyValueStore Represents a key-value store for use in an application. TealValue Transaction TransactionApplication TransactionAssetConfig TransactionAssetFreeze TransactionAssetTransfer TransactionKeyreg TransactionPayment TransactionResponse TransactionSignature TransactionSignatureLogicsig TransactionSignatureMultisig TransactionSignatureMultisigSubsignature TransactionsResponse"
  },
  "api/AlgoSdk.Indexer.MiniAssetHolding.html": {
    "href": "api/AlgoSdk.Indexer.MiniAssetHolding.html",
    "title": "Struct MiniAssetHolding | Unity Algorand SDK",
    "keywords": "Struct MiniAssetHolding Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct MiniAssetHolding : IEquatable<MiniAssetHolding> Properties Address Declaration public string Address { get; set; } Property Value Type Description String Amount Declaration public ulong Amount { get; set; } Property Value Type Description UInt64 Deleted Whether or not this asset holding is currently deleted from its account. Declaration public Optional<bool> Deleted { get; set; } Property Value Type Description Optional < Boolean > IsFrozen Declaration public bool IsFrozen { get; set; } Property Value Type Description Boolean OptedInAtRound Round during which the account opted into the asset. Declaration public Optional<ulong> OptedInAtRound { get; set; } Property Value Type Description Optional < UInt64 > OptedOutAtRound Round during which the account opted out of the asset. Declaration public Optional<ulong> OptedOutAtRound { get; set; } Property Value Type Description Optional < UInt64 > Methods Equals(MiniAssetHolding) Declaration public bool Equals(MiniAssetHolding other) Parameters Type Name Description MiniAssetHolding other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.StateDelta.html": {
    "href": "api/AlgoSdk.Indexer.StateDelta.html",
    "title": "Struct StateDelta | Unity Algorand SDK",
    "keywords": "Struct StateDelta Application state delta. Implements IWrappedValue < EvalDeltaKeyValue []> Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct StateDelta : IEquatable<StateDelta>, IWrappedValue<EvalDeltaKeyValue[]> Constructors StateDelta(EvalDeltaKeyValue[]) Declaration public StateDelta(EvalDeltaKeyValue[] value) Parameters Type Name Description EvalDeltaKeyValue [] value Properties WrappedValue Declaration public EvalDeltaKeyValue[] WrappedValue { get; set; } Property Value Type Description EvalDeltaKeyValue [] Methods Equals(StateDelta) Declaration public bool Equals(StateDelta other) Parameters Type Name Description StateDelta other Returns Type Description Boolean Operators Implicit(EvalDeltaKeyValue[] to StateDelta) Declaration public static implicit operator StateDelta(EvalDeltaKeyValue[] value) Parameters Type Name Description EvalDeltaKeyValue [] value Returns Type Description StateDelta Implicit(StateDelta to EvalDeltaKeyValue[]) Declaration public static implicit operator EvalDeltaKeyValue[](StateDelta wrapper) Parameters Type Name Description StateDelta wrapper Returns Type Description EvalDeltaKeyValue [] Implements IWrappedValue<T>"
  },
  "api/AlgoSdk.Indexer.StateSchema.html": {
    "href": "api/AlgoSdk.Indexer.StateSchema.html",
    "title": "Struct StateSchema | Unity Algorand SDK",
    "keywords": "Struct StateSchema Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct StateSchema : IEquatable<StateSchema> Properties NumByteSlice Maximum number of TEAL byte slices that may be stored in the key/value store. Declaration public ulong NumByteSlice { get; set; } Property Value Type Description UInt64 NumUint Maximum number of TEAL uints that may be stored in the key/value store. Declaration public ulong NumUint { get; set; } Property Value Type Description UInt64 Methods Equals(StateSchema) Declaration public bool Equals(StateSchema other) Parameters Type Name Description StateSchema other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.TealKeyValue.html": {
    "href": "api/AlgoSdk.Indexer.TealKeyValue.html",
    "title": "Struct TealKeyValue | Unity Algorand SDK",
    "keywords": "Struct TealKeyValue Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct TealKeyValue : IEquatable<TealKeyValue> Properties Key Declaration public string Key { get; set; } Property Value Type Description String Value Declaration public TealValue Value { get; set; } Property Value Type Description TealValue Methods Equals(TealKeyValue) Declaration public bool Equals(TealKeyValue other) Parameters Type Name Description TealKeyValue other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.TealKeyValueStore.html": {
    "href": "api/AlgoSdk.Indexer.TealKeyValueStore.html",
    "title": "Struct TealKeyValueStore | Unity Algorand SDK",
    "keywords": "Struct TealKeyValueStore Represents a key-value store for use in an application. Implements IWrappedValue < TealKeyValue []> Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct TealKeyValueStore : IEquatable<TealKeyValueStore>, IWrappedValue<TealKeyValue[]> Constructors TealKeyValueStore(TealKeyValue[]) Declaration public TealKeyValueStore(TealKeyValue[] value) Parameters Type Name Description TealKeyValue [] value Properties WrappedValue Declaration public TealKeyValue[] WrappedValue { get; set; } Property Value Type Description TealKeyValue [] Methods Equals(TealKeyValueStore) Declaration public bool Equals(TealKeyValueStore other) Parameters Type Name Description TealKeyValueStore other Returns Type Description Boolean Operators Implicit(TealKeyValue[] to TealKeyValueStore) Declaration public static implicit operator TealKeyValueStore(TealKeyValue[] value) Parameters Type Name Description TealKeyValue [] value Returns Type Description TealKeyValueStore Implicit(TealKeyValueStore to TealKeyValue[]) Declaration public static implicit operator TealKeyValue[](TealKeyValueStore wrapper) Parameters Type Name Description TealKeyValueStore wrapper Returns Type Description TealKeyValue [] Implements IWrappedValue<T>"
  },
  "api/AlgoSdk.Indexer.TealValue.html": {
    "href": "api/AlgoSdk.Indexer.TealValue.html",
    "title": "Struct TealValue | Unity Algorand SDK",
    "keywords": "Struct TealValue Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct TealValue : IEquatable<TealValue> Properties Bytes [tb] bytes value. Declaration public string Bytes { get; set; } Property Value Type Description String Type [tt] value type. Value 1 refers to bytes , value 2 refers to uint Declaration public ulong Type { get; set; } Property Value Type Description UInt64 Uint [ui] uint value. Declaration public ulong Uint { get; set; } Property Value Type Description UInt64 Methods Equals(TealValue) Declaration public bool Equals(TealValue other) Parameters Type Name Description TealValue other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.Transaction.html": {
    "href": "api/AlgoSdk.Indexer.Transaction.html",
    "title": "Struct Transaction | Unity Algorand SDK",
    "keywords": "Struct Transaction Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct Transaction : IEquatable<Transaction> Properties ApplicationTransaction Declaration public TransactionApplication ApplicationTransaction { get; set; } Property Value Type Description TransactionApplication AssetConfigTransaction Declaration public TransactionAssetConfig AssetConfigTransaction { get; set; } Property Value Type Description TransactionAssetConfig AssetFreezeTransaction Declaration public TransactionAssetFreeze AssetFreezeTransaction { get; set; } Property Value Type Description TransactionAssetFreeze AssetTransferTransaction Declaration public TransactionAssetTransfer AssetTransferTransaction { get; set; } Property Value Type Description TransactionAssetTransfer AuthAddr [sgnr] this is included with signed transactions when the signing address does not equal the sender. The backend can use this to ensure that auth addr is equal to the accounts auth addr. Declaration public Address AuthAddr { get; set; } Property Value Type Description Address CloseRewards [rc] rewards applied to close-remainder-to account. Declaration public Optional<ulong> CloseRewards { get; set; } Property Value Type Description Optional < UInt64 > ClosingAmount [ca] closing amount for transaction. Declaration public Optional<ulong> ClosingAmount { get; set; } Property Value Type Description Optional < UInt64 > ConfirmedRound Round when the transaction was confirmed. Declaration public Optional<ulong> ConfirmedRound { get; set; } Property Value Type Description Optional < UInt64 > CreatedApplicationIndex Specifies an application index (ID) if an application was created with this transaction. Declaration public Optional<ulong> CreatedApplicationIndex { get; set; } Property Value Type Description Optional < UInt64 > CreatedAssetIndex Specifies an asset index (ID) if an asset was created with this transaction. Declaration public Optional<ulong> CreatedAssetIndex { get; set; } Property Value Type Description Optional < UInt64 > Fee [fee] Transaction fee. Declaration public ulong Fee { get; set; } Property Value Type Description UInt64 FirstValid [fv] First valid round for this transaction. Declaration public ulong FirstValid { get; set; } Property Value Type Description UInt64 GenesisHash [gh] Hash of genesis block. Declaration public byte[] GenesisHash { get; set; } Property Value Type Description Byte [] GenesisId [gen] genesis block ID. Declaration public string GenesisId { get; set; } Property Value Type Description String GlobalStateDelta [gd] Global state key/value changes for the application being executed by this transaction. Declaration public StateDelta GlobalStateDelta { get; set; } Property Value Type Description StateDelta Group [grp] Base64 encoded byte array of a sha512/256 digest. When present indicates that this transaction is part of a transaction group and the value is the sha512/256 hash of the transactions in that group. Declaration public byte[] Group { get; set; } Property Value Type Description Byte [] Id Transaction ID Declaration public string Id { get; set; } Property Value Type Description String InnerTxns Inner transactions produced by application execution. Declaration public Transaction[] InnerTxns { get; set; } Property Value Type Description Transaction [] IntraRoundOffset Offset into the round where this transaction was confirmed. Declaration public Optional<ulong> IntraRoundOffset { get; set; } Property Value Type Description Optional < UInt64 > KeyregTransaction Declaration public TransactionKeyreg KeyregTransaction { get; set; } Property Value Type Description TransactionKeyreg LastValid [lv] Last valid round for this transaction. Declaration public ulong LastValid { get; set; } Property Value Type Description UInt64 Lease [lx] Base64 encoded 32-byte array. Lease enforces mutual exclusion of transactions. If this field is nonzero, then once the transaction is confirmed, it acquires the lease identified by the (Sender, Lease) pair of the transaction until the LastValid round passes. While this transaction possesses the lease, no other transaction specifying this lease can be confirmed. Declaration public byte[] Lease { get; set; } Property Value Type Description Byte [] LocalStateDelta [ld] Local state key/value changes for the application being executed by this transaction. Declaration public AccountStateDelta[] LocalStateDelta { get; set; } Property Value Type Description AccountStateDelta [] Logs [lg] Logs for the application being executed by this transaction. Declaration public byte[][] Logs { get; set; } Property Value Type Description Byte [][] Note [note] Free form data. Declaration public byte[] Note { get; set; } Property Value Type Description Byte [] PaymentTransaction Declaration public TransactionPayment PaymentTransaction { get; set; } Property Value Type Description TransactionPayment ReceiverRewards [rr] rewards applied to receiver account. Declaration public Optional<ulong> ReceiverRewards { get; set; } Property Value Type Description Optional < UInt64 > RekeyTo [rekey] when included in a valid transaction, the accounts auth addr will be updated with this value and future signatures must be signed with the key represented by this address. Declaration public Address RekeyTo { get; set; } Property Value Type Description Address RoundTime Time when the block this transaction is in was confirmed. Declaration public Optional<ulong> RoundTime { get; set; } Property Value Type Description Optional < UInt64 > Sender [snd] Sender's address. Declaration public string Sender { get; set; } Property Value Type Description String SenderRewards [rs] rewards applied to sender account. Declaration public Optional<ulong> SenderRewards { get; set; } Property Value Type Description Optional < UInt64 > Signature Declaration public TransactionSignature Signature { get; set; } Property Value Type Description TransactionSignature TxType [type] Indicates what type of transaction this is. Different types have different fields. Valid types, and where their fields are stored: [pay] payment-transaction [keyreg] keyreg-transaction [acfg] asset-config-transaction [axfer] asset-transfer-transaction [afrz] asset-freeze-transaction [appl] application-transaction Declaration public TransactionType TxType { get; set; } Property Value Type Description TransactionType Methods Equals(Transaction) Declaration public bool Equals(Transaction other) Parameters Type Name Description Transaction other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.TransactionApplication.html": {
    "href": "api/AlgoSdk.Indexer.TransactionApplication.html",
    "title": "Struct TransactionApplication | Unity Algorand SDK",
    "keywords": "Struct TransactionApplication Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct TransactionApplication : IEquatable<TransactionApplication> Properties Accounts [apat] List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. Declaration public Address[] Accounts { get; set; } Property Value Type Description Address [] ApplicationArgs [apaa] transaction specific arguments accessed from the application's approval-program and clear-state-program. Declaration public string[] ApplicationArgs { get; set; } Property Value Type Description String [] ApplicationId [apid] ID of the application being configured or empty if creating. Declaration public ulong ApplicationId { get; set; } Property Value Type Description UInt64 ApprovalProgram [apap] Logic executed for every application transaction, except when on-completion is set to 'clear'. It can read and write global state for the application, as well as account-specific local state. Approval programs may reject the transaction. Declaration public CompiledTeal ApprovalProgram { get; set; } Property Value Type Description CompiledTeal ClearStateProgram [apsu] Logic executed for application transactions with on-completion set to 'clear'. It can read and write global state for the application, as well as account-specific local state. Clear state programs cannot reject the transaction. Declaration public CompiledTeal ClearStateProgram { get; set; } Property Value Type Description CompiledTeal ExtraProgramPages [epp] specifies the additional app program len requested in pages. Declaration public Optional<ulong> ExtraProgramPages { get; set; } Property Value Type Description Optional < UInt64 > ForeignApps [apfa] Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. Declaration public ulong[] ForeignApps { get; set; } Property Value Type Description UInt64 [] ForeignAssets [apas] lists the assets whose parameters may be accessed by this application's ApprovalProgram and ClearStateProgram. The access is read-only. Declaration public ulong[] ForeignAssets { get; set; } Property Value Type Description UInt64 [] GlobalStateSchema Declaration public StateSchema GlobalStateSchema { get; set; } Property Value Type Description StateSchema LocalStateSchema Declaration public StateSchema LocalStateSchema { get; set; } Property Value Type Description StateSchema OnCompletion Declaration public OnCompletion OnCompletion { get; set; } Property Value Type Description OnCompletion Methods Equals(TransactionApplication) Declaration public bool Equals(TransactionApplication other) Parameters Type Name Description TransactionApplication other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.TransactionAssetConfig.html": {
    "href": "api/AlgoSdk.Indexer.TransactionAssetConfig.html",
    "title": "Struct TransactionAssetConfig | Unity Algorand SDK",
    "keywords": "Struct TransactionAssetConfig Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct TransactionAssetConfig : IEquatable<TransactionAssetConfig> Properties AssetId [xaid] ID of the asset being configured or empty if creating. Declaration public Optional<ulong> AssetId { get; set; } Property Value Type Description Optional < UInt64 > Params Declaration public AssetParams Params { get; set; } Property Value Type Description AssetParams Methods Equals(TransactionAssetConfig) Declaration public bool Equals(TransactionAssetConfig other) Parameters Type Name Description TransactionAssetConfig other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.TransactionAssetFreeze.html": {
    "href": "api/AlgoSdk.Indexer.TransactionAssetFreeze.html",
    "title": "Struct TransactionAssetFreeze | Unity Algorand SDK",
    "keywords": "Struct TransactionAssetFreeze Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct TransactionAssetFreeze : IEquatable<TransactionAssetFreeze> Properties Address [fadd] Address of the account whose asset is being frozen or thawed. Declaration public string Address { get; set; } Property Value Type Description String AssetId [faid] ID of the asset being frozen or thawed. Declaration public ulong AssetId { get; set; } Property Value Type Description UInt64 NewFreezeStatus [afrz] The new freeze status. Declaration public bool NewFreezeStatus { get; set; } Property Value Type Description Boolean Methods Equals(TransactionAssetFreeze) Declaration public bool Equals(TransactionAssetFreeze other) Parameters Type Name Description TransactionAssetFreeze other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.TransactionAssetTransfer.html": {
    "href": "api/AlgoSdk.Indexer.TransactionAssetTransfer.html",
    "title": "Struct TransactionAssetTransfer | Unity Algorand SDK",
    "keywords": "Struct TransactionAssetTransfer Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct TransactionAssetTransfer : IEquatable<TransactionAssetTransfer> Properties Amount [aamt] Amount of asset to transfer. A zero amount transferred to self allocates that asset in the account's Assets map. Declaration public ulong Amount { get; set; } Property Value Type Description UInt64 AssetId [xaid] ID of the asset being transferred. Declaration public ulong AssetId { get; set; } Property Value Type Description UInt64 CloseAmount Number of assets transfered to the close-to account as part of the transaction. Declaration public Optional<ulong> CloseAmount { get; set; } Property Value Type Description Optional < UInt64 > CloseTo [aclose] Indicates that the asset should be removed from the account's Assets map, and specifies where the remaining asset holdings should be transferred. It's always valid to transfer remaining asset holdings to the creator account. Declaration public string CloseTo { get; set; } Property Value Type Description String Receiver [arcv] Recipient address of the transfer. Declaration public string Receiver { get; set; } Property Value Type Description String Sender [asnd] The effective sender during a clawback transactions. If this is not a zero value, the real transaction sender must be the Clawback address from the AssetParams. Declaration public string Sender { get; set; } Property Value Type Description String Methods Equals(TransactionAssetTransfer) Declaration public bool Equals(TransactionAssetTransfer other) Parameters Type Name Description TransactionAssetTransfer other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.TransactionKeyreg.html": {
    "href": "api/AlgoSdk.Indexer.TransactionKeyreg.html",
    "title": "Struct TransactionKeyreg | Unity Algorand SDK",
    "keywords": "Struct TransactionKeyreg Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct TransactionKeyreg : IEquatable<TransactionKeyreg> Properties NonParticipation [nonpart] Mark the account as participating or non-participating. Declaration public Optional<bool> NonParticipation { get; set; } Property Value Type Description Optional < Boolean > SelectionParticipationKey [selkey] Public key used with the Verified Random Function (VRF) result during committee selection. Declaration public byte[] SelectionParticipationKey { get; set; } Property Value Type Description Byte [] StateProofKey [sprfkey] State proof key used in key registration transactions. Declaration public byte[] StateProofKey { get; set; } Property Value Type Description Byte [] VoteFirstValid [votefst] First round this participation key is valid. Declaration public Optional<ulong> VoteFirstValid { get; set; } Property Value Type Description Optional < UInt64 > VoteKeyDilution [votekd] Number of subkeys in each batch of participation keys. Declaration public Optional<ulong> VoteKeyDilution { get; set; } Property Value Type Description Optional < UInt64 > VoteLastValid [votelst] Last round this participation key is valid. Declaration public Optional<ulong> VoteLastValid { get; set; } Property Value Type Description Optional < UInt64 > VoteParticipationKey [votekey] Participation public key used in key registration transactions. Declaration public byte[] VoteParticipationKey { get; set; } Property Value Type Description Byte [] Methods Equals(TransactionKeyreg) Declaration public bool Equals(TransactionKeyreg other) Parameters Type Name Description TransactionKeyreg other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.TransactionPayment.html": {
    "href": "api/AlgoSdk.Indexer.TransactionPayment.html",
    "title": "Struct TransactionPayment | Unity Algorand SDK",
    "keywords": "Struct TransactionPayment Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct TransactionPayment : IEquatable<TransactionPayment> Properties Amount [amt] number of MicroAlgos intended to be transferred. Declaration public ulong Amount { get; set; } Property Value Type Description UInt64 CloseAmount Number of MicroAlgos that were sent to the close-remainder-to address when closing the sender account. Declaration public Optional<ulong> CloseAmount { get; set; } Property Value Type Description Optional < UInt64 > CloseRemainderTo [close] when set, indicates that the sending account should be closed and all remaining funds be transferred to this address. Declaration public string CloseRemainderTo { get; set; } Property Value Type Description String Receiver [rcv] receiver's address. Declaration public string Receiver { get; set; } Property Value Type Description String Methods Equals(TransactionPayment) Declaration public bool Equals(TransactionPayment other) Parameters Type Name Description TransactionPayment other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.TransactionResponse.html": {
    "href": "api/AlgoSdk.Indexer.TransactionResponse.html",
    "title": "Struct TransactionResponse | Unity Algorand SDK",
    "keywords": "Struct TransactionResponse Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct TransactionResponse : IEquatable<TransactionResponse> Properties CurrentRound Round at which the results were computed. Declaration public ulong CurrentRound { get; set; } Property Value Type Description UInt64 Transaction Declaration public Transaction Transaction { get; set; } Property Value Type Description Transaction Methods Equals(TransactionResponse) Declaration public bool Equals(TransactionResponse other) Parameters Type Name Description TransactionResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.TransactionSignature.html": {
    "href": "api/AlgoSdk.Indexer.TransactionSignature.html",
    "title": "Struct TransactionSignature | Unity Algorand SDK",
    "keywords": "Struct TransactionSignature Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct TransactionSignature : IEquatable<TransactionSignature> Properties Logicsig Declaration public TransactionSignatureLogicsig Logicsig { get; set; } Property Value Type Description TransactionSignatureLogicsig Multisig Declaration public TransactionSignatureMultisig Multisig { get; set; } Property Value Type Description TransactionSignatureMultisig Sig [sig] Standard ed25519 signature. Declaration public byte[] Sig { get; set; } Property Value Type Description Byte [] Methods Equals(TransactionSignature) Declaration public bool Equals(TransactionSignature other) Parameters Type Name Description TransactionSignature other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.TransactionSignatureLogicsig.html": {
    "href": "api/AlgoSdk.Indexer.TransactionSignatureLogicsig.html",
    "title": "Struct TransactionSignatureLogicsig | Unity Algorand SDK",
    "keywords": "Struct TransactionSignatureLogicsig Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct TransactionSignatureLogicsig : IEquatable<TransactionSignatureLogicsig> Properties Args [arg] Logic arguments, base64 encoded. Declaration public string[] Args { get; set; } Property Value Type Description String [] Logic [l] Program signed by a signature or multi signature, or hashed to be the address of ana ccount. Base64 encoded TEAL program. Declaration public byte[] Logic { get; set; } Property Value Type Description Byte [] MultisigSignature Declaration public TransactionSignatureMultisig MultisigSignature { get; set; } Property Value Type Description TransactionSignatureMultisig Signature [sig] ed25519 signature. Declaration public byte[] Signature { get; set; } Property Value Type Description Byte [] Methods Equals(TransactionSignatureLogicsig) Declaration public bool Equals(TransactionSignatureLogicsig other) Parameters Type Name Description TransactionSignatureLogicsig other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.TransactionSignatureMultisig.html": {
    "href": "api/AlgoSdk.Indexer.TransactionSignatureMultisig.html",
    "title": "Struct TransactionSignatureMultisig | Unity Algorand SDK",
    "keywords": "Struct TransactionSignatureMultisig Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct TransactionSignatureMultisig : IEquatable<TransactionSignatureMultisig> Properties Subsignature [subsig] holds pairs of public key and signatures. Declaration public TransactionSignatureMultisigSubsignature[] Subsignature { get; set; } Property Value Type Description TransactionSignatureMultisigSubsignature [] Threshold [thr] Declaration public Optional<ulong> Threshold { get; set; } Property Value Type Description Optional < UInt64 > Version [v] Declaration public Optional<ulong> Version { get; set; } Property Value Type Description Optional < UInt64 > Methods Equals(TransactionSignatureMultisig) Declaration public bool Equals(TransactionSignatureMultisig other) Parameters Type Name Description TransactionSignatureMultisig other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.TransactionSignatureMultisigSubsignature.html": {
    "href": "api/AlgoSdk.Indexer.TransactionSignatureMultisigSubsignature.html",
    "title": "Struct TransactionSignatureMultisigSubsignature | Unity Algorand SDK",
    "keywords": "Struct TransactionSignatureMultisigSubsignature Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct TransactionSignatureMultisigSubsignature : IEquatable<TransactionSignatureMultisigSubsignature> Properties PublicKey [pk] Declaration public byte[] PublicKey { get; set; } Property Value Type Description Byte [] Signature [s] Declaration public byte[] Signature { get; set; } Property Value Type Description Byte [] Methods Equals(TransactionSignatureMultisigSubsignature) Declaration public bool Equals(TransactionSignatureMultisigSubsignature other) Parameters Type Name Description TransactionSignatureMultisigSubsignature other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Indexer.TransactionsResponse.html": {
    "href": "api/AlgoSdk.Indexer.TransactionsResponse.html",
    "title": "Struct TransactionsResponse | Unity Algorand SDK",
    "keywords": "Struct TransactionsResponse Namespace : AlgoSdk.Indexer Assembly : cs.temp.dll.dll Syntax public struct TransactionsResponse : IEquatable<TransactionsResponse> Properties CurrentRound Round at which the results were computed. Declaration public ulong CurrentRound { get; set; } Property Value Type Description UInt64 NextToken Used for pagination, when making another request provide this token with the next parameter. Declaration public string NextToken { get; set; } Property Value Type Description String Transactions Declaration public Transaction[] Transactions { get; set; } Property Value Type Description Transaction [] Methods Equals(TransactionsResponse) Declaration public bool Equals(TransactionsResponse other) Parameters Type Name Description TransactionsResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.IndexerClient.html": {
    "href": "api/AlgoSdk.IndexerClient.html",
    "title": "Struct IndexerClient | Unity Algorand SDK",
    "keywords": "Struct IndexerClient A client for accessing the indexer service Implements IIndexerClient IAlgoApiClient Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct IndexerClient : IIndexerClient, IAlgoApiClient Remarks The indexer service is responsible for querying the blockchain Constructors IndexerClient(String, Header[]) Create a new indexer client Declaration public IndexerClient(string address, params Header[] headers) Parameters Type Name Description String address url of the service, including the port, e.g. \"http://localhost:4001\" Header [] headers extra headers to add to the requests. e.g. (\"x-api-key\", \"my-private-key\") IndexerClient(String, String, Header[]) Create a new indexer client with a token set for TokenHeader . Declaration public IndexerClient(string address, string token = null, params Header[] headers) Parameters Type Name Description String address url of the service, including the port, e.g. \"http://localhost:4001\" String token token used in authenticating to the service Header [] headers extra headers to add to the requests. e.g. (\"x-api-key\", \"my-private-key\") Properties Address Declaration public string Address { get; } Property Value Type Description String Headers Declaration public Header[] Headers { get; } Property Value Type Description Header [] Token Declaration public string Token { get; } Property Value Type Description String TokenHeader Declaration public string TokenHeader { get; } Property Value Type Description String Methods GetAccount(Address, Optional<Boolean>, Optional<UInt64>) Declaration public AlgoApiRequest.Sent<AccountResponse> GetAccount(Address accountAddress, Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>)) Parameters Type Name Description Address accountAddress Optional < Boolean > includeAll Optional < UInt64 > round Returns Type Description AlgoApiRequest.Sent < AccountResponse > GetAccounts(Optional<UInt64>, Optional<UInt64>, Address, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>, Optional<UInt64>) Declaration public AlgoApiRequest.Sent<AccountsResponse> GetAccounts(Optional<ulong> applicationId = default(Optional<ulong>), Optional<ulong> assetId = default(Optional<ulong>), Address authAddr = default(Address), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), Optional<ulong> round = default(Optional<ulong>)) Parameters Type Name Description Optional < UInt64 > applicationId Optional < UInt64 > assetId Address authAddr Optional < UInt64 > currencyGreaterThan Optional < UInt64 > currencyLessThan Optional < Boolean > includeAll Optional < UInt64 > limit Optional < FixedString128Bytes > next Optional < UInt64 > round Returns Type Description AlgoApiRequest.Sent < AccountsResponse > GetAccountTransactions(Address, DateTime, Optional<UInt64>, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId) Declaration public AlgoApiRequest.Sent<TransactionsResponse> GetAccountTransactions(Address accountAddress, DateTime afterTime = null, Optional<ulong> assetId = default(Optional<ulong>), DateTime beforeTime = null, Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<ulong> limit = default(Optional<ulong>), Optional<ulong> maxRound = default(Optional<ulong>), Optional<ulong> minRound = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>), SignatureType sigType = SignatureType.None, TransactionType txType = TransactionType.None, TransactionId txid = default(TransactionId)) Parameters Type Name Description Address accountAddress DateTime afterTime Optional < UInt64 > assetId DateTime beforeTime Optional < UInt64 > currencyGreaterThan Optional < UInt64 > currencyLessThan Optional < UInt64 > limit Optional < UInt64 > maxRound Optional < UInt64 > minRound Optional < FixedString128Bytes > next String notePrefix Optional < Boolean > rekeyTo Optional < UInt64 > round SignatureType sigType TransactionType txType TransactionId txid Returns Type Description AlgoApiRequest.Sent < TransactionsResponse > GetApplication(UInt64, Optional<Boolean>) Declaration public AlgoApiRequest.Sent<ApplicationResponse> GetApplication(ulong applicationId, Optional<bool> includeAll = default(Optional<bool>)) Parameters Type Name Description UInt64 applicationId Optional < Boolean > includeAll Returns Type Description AlgoApiRequest.Sent < ApplicationResponse > GetApplications(Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>) Declaration public AlgoApiRequest.Sent<ApplicationsResponse> GetApplications(Optional<ulong> applicationId = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>)) Parameters Type Name Description Optional < UInt64 > applicationId Optional < Boolean > includeAll Optional < UInt64 > limit Optional < FixedString128Bytes > next Returns Type Description AlgoApiRequest.Sent < ApplicationsResponse > GetAsset(UInt64, Optional<Boolean>) Declaration public AlgoApiRequest.Sent<AssetResponse> GetAsset(ulong assetId, Optional<bool> includeAll = default(Optional<bool>)) Parameters Type Name Description UInt64 assetId Optional < Boolean > includeAll Returns Type Description AlgoApiRequest.Sent < AssetResponse > GetAssetBalances(UInt64, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>, Optional<UInt64>) Declaration public AlgoApiRequest.Sent<AssetBalancesResponse> GetAssetBalances(ulong assetId, Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), Optional<ulong> round = default(Optional<ulong>)) Parameters Type Name Description UInt64 assetId Optional < UInt64 > currencyGreaterThan Optional < UInt64 > currencyLessThan Optional < Boolean > includeAll Optional < UInt64 > limit Optional < FixedString128Bytes > next Optional < UInt64 > round Returns Type Description AlgoApiRequest.Sent < AssetBalancesResponse > GetAssets(Optional<UInt64>, Address, Optional<Boolean>, Optional<UInt64>, String, Optional<FixedString128Bytes>, String) Declaration public AlgoApiRequest.Sent<AssetsResponse> GetAssets(Optional<ulong> assetId = default(Optional<ulong>), Address creator = default(Address), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), string name = null, Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string unit = null) Parameters Type Name Description Optional < UInt64 > assetId Address creator Optional < Boolean > includeAll Optional < UInt64 > limit String name Optional < FixedString128Bytes > next String unit Returns Type Description AlgoApiRequest.Sent < AssetsResponse > GetAssetTransactions(UInt64, Address, AddressRole, DateTime, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId) Declaration public AlgoApiRequest.Sent<TransactionsResponse> GetAssetTransactions(ulong assetId, Address address = default(Address), AddressRole addressRole = AddressRole.None, DateTime afterTime = null, DateTime beforeTime = null, Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> excludeCloseTo = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<ulong> maxRound = default(Optional<ulong>), Optional<ulong> minRound = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>), SignatureType sigType = SignatureType.None, TransactionType txType = TransactionType.None, TransactionId txid = default(TransactionId)) Parameters Type Name Description UInt64 assetId Address address AddressRole addressRole DateTime afterTime DateTime beforeTime Optional < UInt64 > currencyGreaterThan Optional < UInt64 > currencyLessThan Optional < Boolean > excludeCloseTo Optional < UInt64 > limit Optional < UInt64 > maxRound Optional < UInt64 > minRound Optional < FixedString128Bytes > next String notePrefix Optional < Boolean > rekeyTo Optional < UInt64 > round SignatureType sigType TransactionType txType TransactionId txid Returns Type Description AlgoApiRequest.Sent < TransactionsResponse > GetBlock(UInt64) Declaration public AlgoApiRequest.Sent<BlockResponse> GetBlock(ulong round) Parameters Type Name Description UInt64 round Returns Type Description AlgoApiRequest.Sent < BlockResponse > GetHealth() Declaration public AlgoApiRequest.Sent<HealthCheckResponse> GetHealth() Returns Type Description AlgoApiRequest.Sent < HealthCheckResponse > GetTransaction(TransactionId) Declaration public AlgoApiRequest.Sent<TransactionResponse> GetTransaction(TransactionId txid) Parameters Type Name Description TransactionId txid Returns Type Description AlgoApiRequest.Sent < TransactionResponse > GetTransactions(Address, AddressRole, DateTime, Optional<UInt64>, Optional<UInt64>, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId) Declaration public AlgoApiRequest.Sent<TransactionsResponse> GetTransactions(Address address = default(Address), AddressRole addressRole = AddressRole.None, DateTime afterTime = null, Optional<ulong> applicationId = default(Optional<ulong>), Optional<ulong> assetId = default(Optional<ulong>), DateTime beforeTime = null, Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> excludeCloseTo = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<ulong> maxRound = default(Optional<ulong>), Optional<ulong> minRound = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>), SignatureType sigType = SignatureType.None, TransactionType txType = TransactionType.None, TransactionId txid = default(TransactionId)) Parameters Type Name Description Address address AddressRole addressRole DateTime afterTime Optional < UInt64 > applicationId Optional < UInt64 > assetId DateTime beforeTime Optional < UInt64 > currencyGreaterThan Optional < UInt64 > currencyLessThan Optional < Boolean > excludeCloseTo Optional < UInt64 > limit Optional < UInt64 > maxRound Optional < UInt64 > minRound Optional < FixedString128Bytes > next String notePrefix Optional < Boolean > rekeyTo Optional < UInt64 > round SignatureType sigType TransactionType txType TransactionId txid Returns Type Description AlgoApiRequest.Sent < TransactionsResponse > LookupAccountAppLocalStates(String, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, String) Declaration public AlgoApiRequest.Sent<ApplicationLocalStatesResponse> LookupAccountAppLocalStates(string accountId, Optional<ulong> applicationId = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), string next = null) Parameters Type Name Description String accountId account string Optional < UInt64 > applicationId Application ID Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < UInt64 > limit Maximum number of results to return. There could be additional pages even if the limit is not reached. String next The next page of results. Use the next token provided by the previous results. Returns Type Description AlgoApiRequest.Sent < ApplicationLocalStatesResponse > Remarks Lookup an account's asset holdings, optionally for a specific ID. LookupAccountAssets(String, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, String) Declaration public AlgoApiRequest.Sent<AssetHoldingsResponse> LookupAccountAssets(string accountId, Optional<ulong> assetId = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), string next = null) Parameters Type Name Description String accountId account string Optional < UInt64 > assetId Asset ID Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < UInt64 > limit Maximum number of results to return. There could be additional pages even if the limit is not reached. String next The next page of results. Use the next token provided by the previous results. Returns Type Description AlgoApiRequest.Sent < AssetHoldingsResponse > Remarks Lookup an account's asset holdings, optionally for a specific ID. LookupAccountByID(String, Optional<UInt64>, Optional<Boolean>, ExcludeAccountFields) Declaration public AlgoApiRequest.Sent<AccountResponse> LookupAccountByID(string accountId, Optional<ulong> round = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), ExcludeAccountFields exclude = ExcludeAccountFields.Unknown) Parameters Type Name Description String accountId account string Optional < UInt64 > round Include results for the specified round. Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. ExcludeAccountFields exclude Exclude additional items such as asset holdings, application local data stored for this account, asset parameters created by this account, and application parameters created by this account. Returns Type Description AlgoApiRequest.Sent < AccountResponse > Remarks Lookup account information. LookupAccountCreatedApplications(String, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, String) Declaration public AlgoApiRequest.Sent<ApplicationsResponse> LookupAccountCreatedApplications(string accountId, Optional<ulong> applicationId = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), string next = null) Parameters Type Name Description String accountId account string Optional < UInt64 > applicationId Application ID Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < UInt64 > limit Maximum number of results to return. There could be additional pages even if the limit is not reached. String next The next page of results. Use the next token provided by the previous results. Returns Type Description AlgoApiRequest.Sent < ApplicationsResponse > Remarks Lookup an account's created application parameters, optionally for a specific ID. LookupAccountCreatedAssets(String, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, String) Declaration public AlgoApiRequest.Sent<AssetsResponse> LookupAccountCreatedAssets(string accountId, Optional<ulong> assetId = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), string next = null) Parameters Type Name Description String accountId account string Optional < UInt64 > assetId Asset ID Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < UInt64 > limit Maximum number of results to return. There could be additional pages even if the limit is not reached. String next The next page of results. Use the next token provided by the previous results. Returns Type Description AlgoApiRequest.Sent < AssetsResponse > Remarks Lookup an account's created asset parameters, optionally for a specific ID. LookupAccountTransactions(String, Byte[], Optional<Boolean>, String, Optional<UInt64>, DateTime, TransactionType, Optional<UInt64>, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, SignatureType, String, Optional<UInt64>) Declaration public AlgoApiRequest.Sent<TransactionsResponse> LookupAccountTransactions(string accountId, byte[] notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), string next = null, Optional<ulong> maxRound = default(Optional<ulong>), DateTime afterTime = null, TransactionType txType = TransactionType.None, Optional<ulong> limit = default(Optional<ulong>), DateTime beforeTime = null, Optional<ulong> minRound = default(Optional<ulong>), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> assetId = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), SignatureType sigType = SignatureType.None, string txid = null, Optional<ulong> round = default(Optional<ulong>)) Parameters Type Name Description String accountId account string Byte [] notePrefix Specifies a prefix which must be contained in the note field. Optional < Boolean > rekeyTo Include results which include the rekey-to field. String next The next page of results. Use the next token provided by the previous results. Optional < UInt64 > maxRound Include results at or before the specified max-round. DateTime afterTime Include results after the given time. Must be an RFC 3339 formatted string. TransactionType txType Optional < UInt64 > limit Maximum number of results to return. There could be additional pages even if the limit is not reached. DateTime beforeTime Include results before the given time. Must be an RFC 3339 formatted string. Optional < UInt64 > minRound Include results at or after the specified min-round. Optional < UInt64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < UInt64 > assetId Asset ID Optional < UInt64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. SignatureType sigType SigType filters just results using the specified type of signature: sig - Standard msig - MultiSig lsig - LogicSig String txid Lookup the specific transaction by ID. Optional < UInt64 > round Include results for the specified round. Returns Type Description AlgoApiRequest.Sent < TransactionsResponse > Remarks Lookup account transactions. LookupApplicationByID(UInt64, Optional<Boolean>) Declaration public AlgoApiRequest.Sent<ApplicationResponse> LookupApplicationByID(ulong applicationId, Optional<bool> includeAll = default(Optional<bool>)) Parameters Type Name Description UInt64 applicationId Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Returns Type Description AlgoApiRequest.Sent < ApplicationResponse > Remarks Lookup application. LookupApplicationLogsByID(UInt64, Optional<UInt64>, String, String, Optional<UInt64>, Optional<UInt64>, Address) Declaration public AlgoApiRequest.Sent<ApplicationLogsResponse> LookupApplicationLogsByID(ulong applicationId, Optional<ulong> limit = default(Optional<ulong>), string next = null, string txid = null, Optional<ulong> minRound = default(Optional<ulong>), Optional<ulong> maxRound = default(Optional<ulong>), Address senderAddress = default(Address)) Parameters Type Name Description UInt64 applicationId Optional < UInt64 > limit Maximum number of results to return. There could be additional pages even if the limit is not reached. String next The next page of results. Use the next token provided by the previous results. String txid Lookup the specific transaction by ID. Optional < UInt64 > minRound Include results at or after the specified min-round. Optional < UInt64 > maxRound Include results at or before the specified max-round. Address senderAddress Only include transactions with this sender address. Returns Type Description AlgoApiRequest.Sent < ApplicationLogsResponse > Remarks Lookup application logs. LookupAssetBalances(UInt64, Optional<Boolean>, Optional<UInt64>, String, Optional<UInt64>, Optional<UInt64>) Declaration public AlgoApiRequest.Sent<AssetBalancesResponse> LookupAssetBalances(ulong assetId, Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), string next = null, Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>)) Parameters Type Name Description UInt64 assetId Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < UInt64 > limit Maximum number of results to return. There could be additional pages even if the limit is not reached. String next The next page of results. Use the next token provided by the previous results. Optional < UInt64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < UInt64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Returns Type Description AlgoApiRequest.Sent < AssetBalancesResponse > Remarks Lookup the list of accounts who hold this asset LookupAssetByID(UInt64, Optional<Boolean>) Declaration public AlgoApiRequest.Sent<AssetResponse> LookupAssetByID(ulong assetId, Optional<bool> includeAll = default(Optional<bool>)) Parameters Type Name Description UInt64 assetId Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Returns Type Description AlgoApiRequest.Sent < AssetResponse > Remarks Lookup asset information. LookupAssetTransactions(UInt64, Byte[], Optional<Boolean>, String, Optional<UInt64>, DateTime, TransactionType, Optional<Boolean>, Optional<UInt64>, DateTime, Optional<UInt64>, Optional<UInt64>, Address, Optional<UInt64>, SignatureType, String, AddressRole, Optional<UInt64>) Declaration public AlgoApiRequest.Sent<TransactionsResponse> LookupAssetTransactions(ulong assetId, byte[] notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), string next = null, Optional<ulong> maxRound = default(Optional<ulong>), DateTime afterTime = null, TransactionType txType = TransactionType.None, Optional<bool> excludeCloseTo = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), DateTime beforeTime = null, Optional<ulong> minRound = default(Optional<ulong>), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Address address = default(Address), Optional<ulong> currencyLessThan = default(Optional<ulong>), SignatureType sigType = SignatureType.None, string txid = null, AddressRole addressRole = AddressRole.None, Optional<ulong> round = default(Optional<ulong>)) Parameters Type Name Description UInt64 assetId Byte [] notePrefix Specifies a prefix which must be contained in the note field. Optional < Boolean > rekeyTo Include results which include the rekey-to field. String next The next page of results. Use the next token provided by the previous results. Optional < UInt64 > maxRound Include results at or before the specified max-round. DateTime afterTime Include results after the given time. Must be an RFC 3339 formatted string. TransactionType txType Optional < Boolean > excludeCloseTo Combine with address and address-role parameters to define what type of address to search for. The close to fields are normally treated as a receiver, if you would like to exclude them set this parameter to true. Optional < UInt64 > limit Maximum number of results to return. There could be additional pages even if the limit is not reached. DateTime beforeTime Include results before the given time. Must be an RFC 3339 formatted string. Optional < UInt64 > minRound Include results at or after the specified min-round. Optional < UInt64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Address address Only include transactions with this address in one of the transaction fields. Optional < UInt64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. SignatureType sigType SigType filters just results using the specified type of signature: sig - Standard msig - MultiSig lsig - LogicSig String txid Lookup the specific transaction by ID. AddressRole addressRole Combine with the address parameter to define what type of address to search for. Optional < UInt64 > round Include results for the specified round. Returns Type Description AlgoApiRequest.Sent < TransactionsResponse > Remarks Lookup transactions for an asset. LookupBlock(UInt64) Declaration public AlgoApiRequest.Sent<BlockResponse> LookupBlock(ulong roundNumber) Parameters Type Name Description UInt64 roundNumber Round number Returns Type Description AlgoApiRequest.Sent < BlockResponse > Remarks Lookup block. LookupTransaction(String) Declaration public AlgoApiRequest.Sent<TransactionResponse> LookupTransaction(string txid) Parameters Type Name Description String txid Returns Type Description AlgoApiRequest.Sent < TransactionResponse > Remarks Lookup a single transaction. MakeHealthCheck() Returns 200 if healthy. Declaration public AlgoApiRequest.Sent<HealthCheckResponse> MakeHealthCheck() Returns Type Description AlgoApiRequest.Sent < HealthCheckResponse > SearchForAccounts(String, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Address, Optional<UInt64>, ExcludeAccountFields, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>) Declaration public AlgoApiRequest.Sent<AccountsResponse> SearchForAccounts(string next = null, Optional<ulong> applicationId = default(Optional<ulong>), Optional<ulong> limit = default(Optional<ulong>), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Address authAddr = default(Address), Optional<ulong> assetId = default(Optional<ulong>), ExcludeAccountFields exclude = ExcludeAccountFields.Unknown, Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<ulong> round = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>)) Parameters Type Name Description String next The next page of results. Use the next token provided by the previous results. Optional < UInt64 > applicationId Application ID Optional < UInt64 > limit Maximum number of results to return. There could be additional pages even if the limit is not reached. Optional < UInt64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Address authAddr Include accounts configured to use this spending key. Optional < UInt64 > assetId Asset ID ExcludeAccountFields exclude Exclude additional items such as asset holdings, application local data stored for this account, asset parameters created by this account, and application parameters created by this account. Optional < UInt64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < UInt64 > round Include results for the specified round. For performance reasons, this parameter may be disabled on some configurations. Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Returns Type Description AlgoApiRequest.Sent < AccountsResponse > Remarks Search for accounts. SearchForApplications(Optional<UInt64>, String, Optional<Boolean>, Optional<UInt64>, String) Declaration public AlgoApiRequest.Sent<ApplicationsResponse> SearchForApplications(Optional<ulong> applicationId = default(Optional<ulong>), string creator = null, Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), string next = null) Parameters Type Name Description Optional < UInt64 > applicationId Application ID String creator Filter just applications with the given creator address. Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < UInt64 > limit Maximum number of results to return. There could be additional pages even if the limit is not reached. String next The next page of results. Use the next token provided by the previous results. Returns Type Description AlgoApiRequest.Sent < ApplicationsResponse > Remarks Search for applications SearchForAssets(Optional<Boolean>, Optional<UInt64>, String, String, String, String, Optional<UInt64>) Declaration public AlgoApiRequest.Sent<AssetsResponse> SearchForAssets(Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), string next = null, string creator = null, string name = null, string unit = null, Optional<ulong> assetId = default(Optional<ulong>)) Parameters Type Name Description Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < UInt64 > limit Maximum number of results to return. There could be additional pages even if the limit is not reached. String next The next page of results. Use the next token provided by the previous results. String creator Filter just assets with the given creator address. String name Filter just assets with the given name. String unit Filter just assets with the given unit. Optional < UInt64 > assetId Asset ID Returns Type Description AlgoApiRequest.Sent < AssetsResponse > Remarks Search for assets. SearchForTransactions(Byte[], Optional<Boolean>, String, Optional<UInt64>, DateTime, Optional<UInt64>, TransactionType, Optional<Boolean>, Optional<UInt64>, DateTime, Optional<UInt64>, Optional<UInt64>, Address, Optional<UInt64>, Optional<UInt64>, SignatureType, String, AddressRole, Optional<UInt64>) Declaration public AlgoApiRequest.Sent<TransactionsResponse> SearchForTransactions(byte[] notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), string next = null, Optional<ulong> maxRound = default(Optional<ulong>), DateTime afterTime = null, Optional<ulong> applicationId = default(Optional<ulong>), TransactionType txType = TransactionType.None, Optional<bool> excludeCloseTo = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), DateTime beforeTime = null, Optional<ulong> minRound = default(Optional<ulong>), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Address address = default(Address), Optional<ulong> assetId = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), SignatureType sigType = SignatureType.None, string txid = null, AddressRole addressRole = AddressRole.None, Optional<ulong> round = default(Optional<ulong>)) Parameters Type Name Description Byte [] notePrefix Specifies a prefix which must be contained in the note field. Optional < Boolean > rekeyTo Include results which include the rekey-to field. String next The next page of results. Use the next token provided by the previous results. Optional < UInt64 > maxRound Include results at or before the specified max-round. DateTime afterTime Include results after the given time. Must be an RFC 3339 formatted string. Optional < UInt64 > applicationId Application ID TransactionType txType Optional < Boolean > excludeCloseTo Combine with address and address-role parameters to define what type of address to search for. The close to fields are normally treated as a receiver, if you would like to exclude them set this parameter to true. Optional < UInt64 > limit Maximum number of results to return. There could be additional pages even if the limit is not reached. DateTime beforeTime Include results before the given time. Must be an RFC 3339 formatted string. Optional < UInt64 > minRound Include results at or after the specified min-round. Optional < UInt64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Address address Only include transactions with this address in one of the transaction fields. Optional < UInt64 > assetId Asset ID Optional < UInt64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. SignatureType sigType SigType filters just results using the specified type of signature: sig - Standard msig - MultiSig lsig - LogicSig String txid Lookup the specific transaction by ID. AddressRole addressRole Combine with the address parameter to define what type of address to search for. Optional < UInt64 > round Include results for the specified round. Returns Type Description AlgoApiRequest.Sent < TransactionsResponse > Remarks Search for transactions. Implements IIndexerClient IAlgoApiClient"
  },
  "api/AlgoSdk.IntEnumComparer-1.html": {
    "href": "api/AlgoSdk.IntEnumComparer-1.html",
    "title": "Struct IntEnumComparer<T> | Unity Algorand SDK",
    "keywords": "Struct IntEnumComparer<T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct IntEnumComparer<T> : IEqualityComparer<T> where T : Enum Type Parameters Name Description T Fields Instance Declaration public static readonly IntEnumComparer<T> Instance Field Value Type Description IntEnumComparer <T> Methods Equals(T, T) Declaration public static bool Equals(T x, T y) Parameters Type Name Description T x T y Returns Type Description Boolean GetHashCode(T) Declaration public static int GetHashCode(T obj) Parameters Type Name Description T obj Returns Type Description Int32"
  },
  "api/AlgoSdk.IntEnumFormatter-1.html": {
    "href": "api/AlgoSdk.IntEnumFormatter-1.html",
    "title": "Class IntEnumFormatter<T> | Unity Algorand SDK",
    "keywords": "Class IntEnumFormatter<T> Inheritance Object IntEnumFormatter<T> Implements IAlgoApiFormatter <T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public sealed class IntEnumFormatter<T> : IAlgoApiFormatter<T> where T : Enum Type Parameters Name Description T Methods Deserialize(ref JsonReader) Declaration public T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration public T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Serialize(ref JsonWriter, T) Declaration public void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref MessagePackWriter, T) Declaration public void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.IPaymentTxn.html": {
    "href": "api/AlgoSdk.IPaymentTxn.html",
    "title": "Interface IPaymentTxn | Unity Algorand SDK",
    "keywords": "Interface IPaymentTxn Inherited Members ITransaction.CopyTo(Transaction) ITransaction.CopyFrom(Transaction) ITransactionHeader.Fee ITransactionHeader.FirstValidRound ITransactionHeader.GenesisHash ITransactionHeader.LastValidRound ITransactionHeader.Sender ITransactionHeader.TransactionType ITransactionHeader.GenesisId ITransactionHeader.Group ITransactionHeader.Lease ITransactionHeader.Note ITransactionHeader.RekeyTo Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IPaymentTxn : ITransaction, ITransactionHeader Properties Amount The total amount to be sent in microAlgos. Declaration MicroAlgos Amount { get; set; } Property Value Type Description MicroAlgos CloseRemainderTo When set, it indicates that the transaction is requesting that the account should be closed, and all remaining funds, after the and Amount are paid, be transferred to this address. Declaration Address CloseRemainderTo { get; set; } Property Value Type Description Address Receiver The address of the account that receives the Amount . Declaration Address Receiver { get; set; } Property Value Type Description Address"
  },
  "api/AlgoSdk.ISignature.html": {
    "href": "api/AlgoSdk.ISignature.html",
    "title": "Interface ISignature | Unity Algorand SDK",
    "keywords": "Interface ISignature Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface ISignature"
  },
  "api/AlgoSdk.ISignedTxn.html": {
    "href": "api/AlgoSdk.ISignedTxn.html",
    "title": "Interface ISignedTxn | Unity Algorand SDK",
    "keywords": "Interface ISignedTxn Inherited Members ISignedTxn<Transaction>.Sig ISignedTxn<Transaction>.Msig ISignedTxn<Transaction>.Lsig ISignedTxn<Transaction>.Txn ISignedTxn<Transaction>.AuthAddr IUntypedTransaction.Header IUntypedTransaction.PaymentParams IUntypedTransaction.AssetConfigParams IUntypedTransaction.AssetTransferParams IUntypedTransaction.AssetFreezeParams IUntypedTransaction.AppCallParams IUntypedTransaction.KeyRegParams ITransactionHeader.Fee ITransactionHeader.FirstValidRound ITransactionHeader.GenesisHash ITransactionHeader.LastValidRound ITransactionHeader.Sender ITransactionHeader.TransactionType ITransactionHeader.GenesisId ITransactionHeader.Group ITransactionHeader.Lease ITransactionHeader.Note ITransactionHeader.RekeyTo Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface ISignedTxn : ISignedTxn<Transaction>, IUntypedTransaction, ITransactionHeader"
  },
  "api/AlgoSdk.ISignedTxn-1.html": {
    "href": "api/AlgoSdk.ISignedTxn-1.html",
    "title": "Interface ISignedTxn<TTxn> | Unity Algorand SDK",
    "keywords": "Interface ISignedTxn<TTxn> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface ISignedTxn<TTxn> where TTxn : ITransaction, IEquatable<TTxn> Type Parameters Name Description TTxn Properties AuthAddr The signer of the transaction if this account was rekeyed. Declaration Address AuthAddr { get; set; } Property Value Type Description Address Lsig The logic sig used to sign the transaction if there was one. Declaration LogicSig Lsig { get; set; } Property Value Type Description LogicSig Msig The multi-signature used to sign the transaction if there was one. Declaration MultisigSig Msig { get; set; } Property Value Type Description MultisigSig Sig The signature used to sign the transaction if there was one. Declaration Sig Sig { get; set; } Property Value Type Description Sig Txn The transaction signed. Declaration TTxn Txn { get; set; } Property Value Type Description TTxn"
  },
  "api/AlgoSdk.ISigner.html": {
    "href": "api/AlgoSdk.ISigner.html",
    "title": "Interface ISigner | Unity Algorand SDK",
    "keywords": "Interface ISigner Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface ISigner Methods SignTxns<T>(T[], TxnIndices) Sign a group of transactions. Declaration SignedTxn<T>[] SignTxns<T>(T[] txns, TxnIndices txnsToSign) where T : ITransaction, IEquatable<T> Parameters Type Name Description T[] txns The transactions to sign. TxnIndices txnsToSign Indexes of the transactions this signer should sign. Returns Type Description SignedTxn <T>[] An array of transactions with signatures. If the transaction at a given index was not signed, that signed transaction will have no signature. Type Parameters Name Description T The type of the transactions. Remarks Each transaction is expected to have a valid group id already set."
  },
  "api/AlgoSdk.ITransaction.html": {
    "href": "api/AlgoSdk.ITransaction.html",
    "title": "Interface ITransaction | Unity Algorand SDK",
    "keywords": "Interface ITransaction Inherited Members ITransactionHeader.Fee ITransactionHeader.FirstValidRound ITransactionHeader.GenesisHash ITransactionHeader.LastValidRound ITransactionHeader.Sender ITransactionHeader.TransactionType ITransactionHeader.GenesisId ITransactionHeader.Group ITransactionHeader.Lease ITransactionHeader.Note ITransactionHeader.RekeyTo Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface ITransaction : ITransactionHeader Methods CopyFrom(Transaction) Copy relevant fields to this transaction. Declaration void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction A raw transaction with all possible transaction fields. CopyTo(ref Transaction) Copy this transactions fields to a Transaction which contains all possible transaction fields. Declaration void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction A raw transaction with all possible transaction fields."
  },
  "api/AlgoSdk.ITransactionHeader.html": {
    "href": "api/AlgoSdk.ITransactionHeader.html",
    "title": "Interface ITransactionHeader | Unity Algorand SDK",
    "keywords": "Interface ITransactionHeader Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface ITransactionHeader Properties Fee Paid by the sender to the FeeSink to prevent denial-of-service. The minimum fee on Algorand is currently 1000 microAlgos. Declaration MicroAlgos Fee { get; set; } Property Value Type Description MicroAlgos FirstValidRound The first round for when the transaction is valid. If the transaction is sent prior to this round it will be rejected by the network. Declaration ulong FirstValidRound { get; set; } Property Value Type Description UInt64 GenesisHash The hash of the genesis block of the network for which the transaction is valid. Declaration GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisId The human-readable string that identifies the network for the transaction. The genesis ID is found in the genesis block. Declaration FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes Group The group specifies that the transaction is part of a group and, if so, specifies the hash of the transaction group. See TransactionGroup . Declaration TransactionId Group { get; set; } Property Value Type Description TransactionId LastValidRound The ending round for which the transaction is valid. After this round, the transaction will be rejected by the network. Declaration ulong LastValidRound { get; set; } Property Value Type Description UInt64 Lease A lease enforces mutual exclusion of transactions. If this field is nonzero, then once the transaction is confirmed, it acquires the lease identified by the (Sender, Lease) pair of the transaction until the LastValid round passes. While this transaction possesses the lease, no other transaction specifying this lease can be confirmed. A lease is often used in the context of Algorand Smart Contracts to prevent replay attacks. Declaration TransactionId Lease { get; set; } Property Value Type Description TransactionId Note Any data up to 1000 bytes. Declaration byte[] Note { get; set; } Property Value Type Description Byte [] RekeyTo Specifies the authorized address. This address will be used to authorize all future transactions. Declaration Address RekeyTo { get; set; } Property Value Type Description Address Sender The address of the account that pays the fee and amount. Declaration Address Sender { get; set; } Property Value Type Description Address TransactionType Specifies the type of transaction. This value is automatically generated using any of the developer tools. Declaration TransactionType TransactionType { get; } Property Value Type Description TransactionType"
  },
  "api/AlgoSdk.IUntypedTransaction.html": {
    "href": "api/AlgoSdk.IUntypedTransaction.html",
    "title": "Interface IUntypedTransaction | Unity Algorand SDK",
    "keywords": "Interface IUntypedTransaction Inherited Members ITransactionHeader.Fee ITransactionHeader.FirstValidRound ITransactionHeader.GenesisHash ITransactionHeader.LastValidRound ITransactionHeader.Sender ITransactionHeader.TransactionType ITransactionHeader.GenesisId ITransactionHeader.Group ITransactionHeader.Lease ITransactionHeader.Note ITransactionHeader.RekeyTo Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IUntypedTransaction : ITransactionHeader Properties AppCallParams Params found in an application call transaction Declaration AppCallTxn.Params AppCallParams { get; set; } Property Value Type Description AppCallTxn.Params AssetConfigParams Params found in an asset configuration transaction Declaration AssetConfigTxn.Params AssetConfigParams { get; set; } Property Value Type Description AssetConfigTxn.Params AssetFreezeParams Params found in an asset freeze transaction Declaration AssetFreezeTxn.Params AssetFreezeParams { get; set; } Property Value Type Description AssetFreezeTxn.Params AssetTransferParams Params found in an asset transfer transaction Declaration AssetTransferTxn.Params AssetTransferParams { get; set; } Property Value Type Description AssetTransferTxn.Params Header Params common to all transactions Declaration TransactionHeader Header { get; set; } Property Value Type Description TransactionHeader KeyRegParams Params found in a key registration transaction Declaration KeyRegTxn.Params KeyRegParams { get; set; } Property Value Type Description KeyRegTxn.Params PaymentParams Params found in a payment transaction Declaration PaymentTxn.Params PaymentParams { get; set; } Property Value Type Description PaymentTxn.Params"
  },
  "api/AlgoSdk.IWrappedValue-1.html": {
    "href": "api/AlgoSdk.IWrappedValue-1.html",
    "title": "Interface IWrappedValue<T> | Unity Algorand SDK",
    "keywords": "Interface IWrappedValue<T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IWrappedValue<T> Type Parameters Name Description T Properties WrappedValue Declaration T WrappedValue { get; set; } Property Value Type Description T"
  },
  "api/AlgoSdk.Json.html": {
    "href": "api/AlgoSdk.Json.html",
    "title": "Namespace AlgoSdk.Json | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.Json Classes JsonReadErrorExtensions JsonReadException JsonTokenExtensions UnicodeExtensions Structs JsonReader JsonWriter Enums JsonReadError JsonToken"
  },
  "api/AlgoSdk.Json.JsonReader.html": {
    "href": "api/AlgoSdk.Json.JsonReader.html",
    "title": "Struct JsonReader | Unity Algorand SDK",
    "keywords": "Struct JsonReader Namespace : AlgoSdk.Json Assembly : cs.temp.dll.dll Syntax public struct JsonReader Constructors JsonReader(NativeText) Declaration public JsonReader(NativeText text) Parameters Type Name Description NativeText text Properties Char Declaration public char Char { get; } Property Value Type Description Char Position Declaration public int Position { get; set; } Property Value Type Description Int32 Text Declaration public string Text { get; } Property Value Type Description String Methods Peek() Declaration public JsonToken Peek() Returns Type Description JsonToken Read() Declaration public JsonToken Read() Returns Type Description JsonToken ReadBool(out Boolean) Declaration public JsonReadError ReadBool(out bool value) Parameters Type Name Description Boolean value Returns Type Description JsonReadError ReadNull() Declaration public JsonReadError ReadNull() Returns Type Description JsonReadError ReadNumber(out Byte) Declaration public JsonReadError ReadNumber(out byte value) Parameters Type Name Description Byte value Returns Type Description JsonReadError ReadNumber(out Int16) Declaration public JsonReadError ReadNumber(out short value) Parameters Type Name Description Int16 value Returns Type Description JsonReadError ReadNumber(out Int32) Declaration public JsonReadError ReadNumber(out int value) Parameters Type Name Description Int32 value Returns Type Description JsonReadError ReadNumber(out Int64) Declaration public JsonReadError ReadNumber(out long value) Parameters Type Name Description Int64 value Returns Type Description JsonReadError ReadNumber(out SByte) Declaration public JsonReadError ReadNumber(out sbyte value) Parameters Type Name Description SByte value Returns Type Description JsonReadError ReadNumber(out Single) Declaration public JsonReadError ReadNumber(out float value) Parameters Type Name Description Single value Returns Type Description JsonReadError ReadNumber(out UInt16) Declaration public JsonReadError ReadNumber(out ushort value) Parameters Type Name Description UInt16 value Returns Type Description JsonReadError ReadNumber(out UInt32) Declaration public JsonReadError ReadNumber(out uint value) Parameters Type Name Description UInt32 value Returns Type Description JsonReadError ReadNumber(out UInt64) Declaration public JsonReadError ReadNumber(out ulong value) Parameters Type Name Description UInt64 value Returns Type Description JsonReadError ReadRaw<T>(ref T) Declaration public JsonReadError ReadRaw<T>(ref T value) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T value Returns Type Description JsonReadError Type Parameters Name Description T ReadString(out String) Declaration public JsonReadError ReadString(out string value) Parameters Type Name Description String value Returns Type Description JsonReadError ReadString<T>(ref T) Declaration public JsonReadError ReadString<T>(ref T value) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T value Returns Type Description JsonReadError Type Parameters Name Description T Skip() Declaration public JsonReadError Skip() Returns Type Description JsonReadError SkipBool() Declaration public JsonReadError SkipBool() Returns Type Description JsonReadError SkipNull() Declaration public JsonReadError SkipNull() Returns Type Description JsonReadError SkipString() Declaration public JsonReadError SkipString() Returns Type Description JsonReadError TryRead(JsonToken) Declaration public bool TryRead(JsonToken token) Parameters Type Name Description JsonToken token Returns Type Description Boolean TryReadNull() Declaration public bool TryReadNull() Returns Type Description Boolean"
  },
  "api/AlgoSdk.Json.JsonReadError.html": {
    "href": "api/AlgoSdk.Json.JsonReadError.html",
    "title": "Enum JsonReadError | Unity Algorand SDK",
    "keywords": "Enum JsonReadError Namespace : AlgoSdk.Json Assembly : cs.temp.dll.dll Syntax public enum JsonReadError Fields Name Description IncorrectFormat IncorrectType None Overflow ParseError UnknownError"
  },
  "api/AlgoSdk.Json.JsonReadErrorExtensions.html": {
    "href": "api/AlgoSdk.Json.JsonReadErrorExtensions.html",
    "title": "Class JsonReadErrorExtensions | Unity Algorand SDK",
    "keywords": "Class JsonReadErrorExtensions Inheritance Object JsonReadErrorExtensions Namespace : AlgoSdk.Json Assembly : cs.temp.dll.dll Syntax public static class JsonReadErrorExtensions Methods ThrowIfError(JsonReadError, JsonReader) Declaration public static void ThrowIfError(this JsonReadError err, JsonReader context) Parameters Type Name Description JsonReadError err JsonReader context ThrowIfError(JsonReadError, Char, Int32) Declaration public static void ThrowIfError(this JsonReadError err, char c, int pos) Parameters Type Name Description JsonReadError err Char c Int32 pos"
  },
  "api/AlgoSdk.Json.JsonReadException.html": {
    "href": "api/AlgoSdk.Json.JsonReadException.html",
    "title": "Class JsonReadException | Unity Algorand SDK",
    "keywords": "Class JsonReadException Inheritance Object JsonReadException Namespace : AlgoSdk.Json Assembly : cs.temp.dll.dll Syntax public class JsonReadException : Exception Constructors JsonReadException(JsonReadError, JsonReader) Declaration public JsonReadException(JsonReadError error, JsonReader context) Parameters Type Name Description JsonReadError error JsonReader context JsonReadException(JsonReadError, Char, Int32) Declaration public JsonReadException(JsonReadError error, char c, int pos) Parameters Type Name Description JsonReadError error Char c Int32 pos"
  },
  "api/AlgoSdk.Json.JsonToken.html": {
    "href": "api/AlgoSdk.Json.JsonToken.html",
    "title": "Enum JsonToken | Unity Algorand SDK",
    "keywords": "Enum JsonToken Namespace : AlgoSdk.Json Assembly : cs.temp.dll.dll Syntax public enum JsonToken Fields Name Description ArrayBegin ArrayEnd Bool EscapeChar None Null Number ObjectBegin ObjectEnd String"
  },
  "api/AlgoSdk.Json.JsonTokenExtensions.html": {
    "href": "api/AlgoSdk.Json.JsonTokenExtensions.html",
    "title": "Class JsonTokenExtensions | Unity Algorand SDK",
    "keywords": "Class JsonTokenExtensions Inheritance Object JsonTokenExtensions Namespace : AlgoSdk.Json Assembly : cs.temp.dll.dll Syntax public static class JsonTokenExtensions Methods ToJsonToken(Char) Declaration public static JsonToken ToJsonToken(this char c) Parameters Type Name Description Char c Returns Type Description JsonToken ToJsonToken(Unicode.Rune) Declaration public static JsonToken ToJsonToken(this Unicode.Rune rune) Parameters Type Name Description Unicode.Rune rune Returns Type Description JsonToken"
  },
  "api/AlgoSdk.Json.JsonWriter.html": {
    "href": "api/AlgoSdk.Json.JsonWriter.html",
    "title": "Struct JsonWriter | Unity Algorand SDK",
    "keywords": "Struct JsonWriter Namespace : AlgoSdk.Json Assembly : cs.temp.dll.dll Syntax public struct JsonWriter : INativeDisposable Constructors JsonWriter(Allocator) Declaration public JsonWriter(Allocator allocator) Parameters Type Name Description Allocator allocator Properties Text Declaration public NativeText Text { get; } Property Value Type Description NativeText Methods BeginArray() Declaration public JsonWriter BeginArray() Returns Type Description JsonWriter BeginNextItem() Declaration public JsonWriter BeginNextItem() Returns Type Description JsonWriter BeginObject() Declaration public JsonWriter BeginObject() Returns Type Description JsonWriter Dispose() Declaration public void Dispose() Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle EndArray() Declaration public JsonWriter EndArray() Returns Type Description JsonWriter EndObject() Declaration public JsonWriter EndObject() Returns Type Description JsonWriter WriteBool(Boolean) Declaration public JsonWriter WriteBool(bool value) Parameters Type Name Description Boolean value Returns Type Description JsonWriter WriteChar(Char) Declaration public JsonWriter WriteChar(char c) Parameters Type Name Description Char c Returns Type Description JsonWriter WriteNull() Declaration public JsonWriter WriteNull() Returns Type Description JsonWriter WriteNumber(Int64) Declaration public JsonWriter WriteNumber(long value) Parameters Type Name Description Int64 value Returns Type Description JsonWriter WriteNumber(Single) Declaration public JsonWriter WriteNumber(float value) Parameters Type Name Description Single value Returns Type Description JsonWriter WriteNumber(UInt64) Declaration public JsonWriter WriteNumber(ulong value) Parameters Type Name Description UInt64 value Returns Type Description JsonWriter WriteObjectKey(String) Declaration public JsonWriter WriteObjectKey(string s) Parameters Type Name Description String s Returns Type Description JsonWriter WriteObjectKey<T>(T) Declaration public JsonWriter WriteObjectKey<T>(T fs) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Returns Type Description JsonWriter Type Parameters Name Description T WriteRaw(NativeArray<Byte>) Declaration public JsonWriter WriteRaw(NativeArray<byte> raw) Parameters Type Name Description NativeArray < Byte > raw Returns Type Description JsonWriter WriteRaw(NativeText) Declaration public JsonWriter WriteRaw(NativeText raw) Parameters Type Name Description NativeText raw Returns Type Description JsonWriter WriteString(String) Declaration public JsonWriter WriteString(string s) Parameters Type Name Description String s Returns Type Description JsonWriter WriteString<T>(T) Declaration public JsonWriter WriteString<T>(T fs) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Returns Type Description JsonWriter Type Parameters Name Description T"
  },
  "api/AlgoSdk.Json.UnicodeExtensions.html": {
    "href": "api/AlgoSdk.Json.UnicodeExtensions.html",
    "title": "Class UnicodeExtensions | Unity Algorand SDK",
    "keywords": "Class UnicodeExtensions Inheritance Object UnicodeExtensions Namespace : AlgoSdk.Json Assembly : cs.temp.dll.dll Syntax public static class UnicodeExtensions Methods IsWhiteSpaceOrSeparator(Char) Declaration public static bool IsWhiteSpaceOrSeparator(this char c) Parameters Type Name Description Char c Returns Type Description Boolean IsWhiteSpaceOrSeparator(Unicode.Rune) Declaration public static bool IsWhiteSpaceOrSeparator(this Unicode.Rune rune) Parameters Type Name Description Unicode.Rune rune Returns Type Description Boolean ToChar(Unicode.Rune) Declaration public static char ToChar(this Unicode.Rune rune) Parameters Type Name Description Unicode.Rune rune Returns Type Description Char ToRune(Char) Declaration public static Unicode.Rune ToRune(this char c) Parameters Type Name Description Char c Returns Type Description Unicode.Rune"
  },
  "api/AlgoSdk.KeyRegTxn.html": {
    "href": "api/AlgoSdk.KeyRegTxn.html",
    "title": "Struct KeyRegTxn | Unity Algorand SDK",
    "keywords": "Struct KeyRegTxn Implements IKeyRegTxn ITransaction ITransactionHeader Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct KeyRegTxn : IKeyRegTxn, ITransaction, ITransactionHeader, IEquatable<KeyRegTxn> Properties AccountParticipation Declaration public AccountParticipation AccountParticipation { get; set; } Property Value Type Description AccountParticipation Fee Paid by the sender to the FeeSink to prevent denial-of-service. The minimum fee on Algorand is currently 1000 microAlgos. Declaration public MicroAlgos Fee { get; set; } Property Value Type Description MicroAlgos FirstValidRound The first round for when the transaction is valid. If the transaction is sent prior to this round it will be rejected by the network. Declaration public ulong FirstValidRound { get; set; } Property Value Type Description UInt64 GenesisHash The hash of the genesis block of the network for which the transaction is valid. Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisId The human-readable string that identifies the network for the transaction. The genesis ID is found in the genesis block. Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes Group The group specifies that the transaction is part of a group and, if so, specifies the hash of the transaction group. See TransactionGroup . Declaration public TransactionId Group { get; set; } Property Value Type Description TransactionId LastValidRound The ending round for which the transaction is valid. After this round, the transaction will be rejected by the network. Declaration public ulong LastValidRound { get; set; } Property Value Type Description UInt64 Lease A lease enforces mutual exclusion of transactions. If this field is nonzero, then once the transaction is confirmed, it acquires the lease identified by the (Sender, Lease) pair of the transaction until the LastValid round passes. While this transaction possesses the lease, no other transaction specifying this lease can be confirmed. A lease is often used in the context of Algorand Smart Contracts to prevent replay attacks. Declaration public TransactionId Lease { get; set; } Property Value Type Description TransactionId NonParticipation All new Algorand accounts are participating by default. This means that they earn rewards. Mark an account nonparticipating by setting this value to true and this account will no longer earn rewards. It is unlikely that you will ever need to do this and exists mainly for economic-related functions on the network. Declaration public Optional<bool> NonParticipation { get; set; } Property Value Type Description Optional < Boolean > Note Any data up to 1000 bytes. Declaration public byte[] Note { get; set; } Property Value Type Description Byte [] RekeyTo Specifies the authorized address. This address will be used to authorize all future transactions. Declaration public Address RekeyTo { get; set; } Property Value Type Description Address SelectionParticipationKey The VRF public key. Declaration public VrfPubKey SelectionParticipationKey { get; set; } Property Value Type Description VrfPubKey Sender The address of the account that pays the fee and amount. Declaration public Address Sender { get; set; } Property Value Type Description Address TransactionType Specifies the type of transaction. This value is automatically generated using any of the developer tools. Declaration public TransactionType TransactionType { get; } Property Value Type Description TransactionType VoteFirst The first round that the participation key is valid. Not to be confused with the of the keyreg transaction. Declaration public ulong VoteFirst { get; set; } Property Value Type Description UInt64 VoteKeyDilution This is the dilution for the 2-level participation key. Declaration public ulong VoteKeyDilution { get; set; } Property Value Type Description UInt64 VoteLast The last round that the participation key is valid. Not to be confused with the of the keyreg transaction. Declaration public ulong VoteLast { get; set; } Property Value Type Description UInt64 VoteParticipationKey The root participation public key. Declaration public ParticipationPublicKey VoteParticipationKey { get; set; } Property Value Type Description ParticipationPublicKey Methods CopyFrom(Transaction) Copy relevant fields to this transaction. Declaration public void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction A raw transaction with all possible transaction fields. CopyTo(ref Transaction) Copy this transactions fields to a Transaction which contains all possible transaction fields. Declaration public void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction A raw transaction with all possible transaction fields. Equals(KeyRegTxn) Declaration public bool Equals(KeyRegTxn other) Parameters Type Name Description KeyRegTxn other Returns Type Description Boolean Implements IKeyRegTxn ITransaction ITransactionHeader"
  },
  "api/AlgoSdk.KeyRegTxn.Params.html": {
    "href": "api/AlgoSdk.KeyRegTxn.Params.html",
    "title": "Struct KeyRegTxn.Params | Unity Algorand SDK",
    "keywords": "Struct KeyRegTxn.Params Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Params : IEquatable<KeyRegTxn.Params> Fields AccountParticipation Declaration public AccountParticipation AccountParticipation Field Value Type Description AccountParticipation NonParticipation Declaration public Optional<bool> NonParticipation Field Value Type Description Optional < Boolean > Properties SelectionParticipationKey Declaration public VrfPubKey SelectionParticipationKey { get; set; } Property Value Type Description VrfPubKey VoteFirst Declaration public ulong VoteFirst { get; set; } Property Value Type Description UInt64 VoteKeyDilution Declaration public ulong VoteKeyDilution { get; set; } Property Value Type Description UInt64 VoteLast Declaration public ulong VoteLast { get; set; } Property Value Type Description UInt64 VoteParticipationKey Declaration public ParticipationPublicKey VoteParticipationKey { get; set; } Property Value Type Description ParticipationPublicKey Methods Equals(KeyRegTxn.Params) Declaration public bool Equals(KeyRegTxn.Params other) Parameters Type Name Description KeyRegTxn.Params other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.CreateWalletRequest.html": {
    "href": "api/AlgoSdk.Kmd.CreateWalletRequest.html",
    "title": "Struct CreateWalletRequest | Unity Algorand SDK",
    "keywords": "Struct CreateWalletRequest Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct CreateWalletRequest : IEquatable<CreateWalletRequest> Fields MasterDerivationKey Declaration public PrivateKey MasterDerivationKey Field Value Type Description PrivateKey WalletDriverName Declaration public FixedString128Bytes WalletDriverName Field Value Type Description FixedString128Bytes WalletName Declaration public FixedString128Bytes WalletName Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(CreateWalletRequest) Declaration public bool Equals(CreateWalletRequest other) Parameters Type Name Description CreateWalletRequest other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.CreateWalletResponse.html": {
    "href": "api/AlgoSdk.Kmd.CreateWalletResponse.html",
    "title": "Struct CreateWalletResponse | Unity Algorand SDK",
    "keywords": "Struct CreateWalletResponse Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct CreateWalletResponse : IEquatable<CreateWalletResponse> Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String Wallet Declaration public Wallet Wallet Field Value Type Description Wallet Methods Equals(CreateWalletResponse) Declaration public bool Equals(CreateWalletResponse other) Parameters Type Name Description CreateWalletResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.DeleteKeyRequest.html": {
    "href": "api/AlgoSdk.Kmd.DeleteKeyRequest.html",
    "title": "Struct DeleteKeyRequest | Unity Algorand SDK",
    "keywords": "Struct DeleteKeyRequest Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct DeleteKeyRequest : IEquatable<DeleteKeyRequest> Fields Address Declaration public Address Address Field Value Type Description Address WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(DeleteKeyRequest) Declaration public bool Equals(DeleteKeyRequest other) Parameters Type Name Description DeleteKeyRequest other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.DeleteMultisigRequest.html": {
    "href": "api/AlgoSdk.Kmd.DeleteMultisigRequest.html",
    "title": "Struct DeleteMultisigRequest | Unity Algorand SDK",
    "keywords": "Struct DeleteMultisigRequest Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct DeleteMultisigRequest : IEquatable<DeleteMultisigRequest> Fields Address Declaration public Address Address Field Value Type Description Address WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(DeleteMultisigRequest) Declaration public bool Equals(DeleteMultisigRequest other) Parameters Type Name Description DeleteMultisigRequest other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.ExportKeyRequest.html": {
    "href": "api/AlgoSdk.Kmd.ExportKeyRequest.html",
    "title": "Struct ExportKeyRequest | Unity Algorand SDK",
    "keywords": "Struct ExportKeyRequest Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct ExportKeyRequest : IEquatable<ExportKeyRequest> Fields Address Declaration public Address Address Field Value Type Description Address WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(ExportKeyRequest) Declaration public bool Equals(ExportKeyRequest other) Parameters Type Name Description ExportKeyRequest other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.ExportKeyResponse.html": {
    "href": "api/AlgoSdk.Kmd.ExportKeyResponse.html",
    "title": "Struct ExportKeyResponse | Unity Algorand SDK",
    "keywords": "Struct ExportKeyResponse Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct ExportKeyResponse : IEquatable<ExportKeyResponse> Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String PrivateKey Declaration public PrivateKey PrivateKey Field Value Type Description PrivateKey Methods Equals(ExportKeyResponse) Declaration public bool Equals(ExportKeyResponse other) Parameters Type Name Description ExportKeyResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.ExportMasterKeyRequest.html": {
    "href": "api/AlgoSdk.Kmd.ExportMasterKeyRequest.html",
    "title": "Struct ExportMasterKeyRequest | Unity Algorand SDK",
    "keywords": "Struct ExportMasterKeyRequest Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct ExportMasterKeyRequest : IEquatable<ExportMasterKeyRequest> Fields WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(ExportMasterKeyRequest) Declaration public bool Equals(ExportMasterKeyRequest other) Parameters Type Name Description ExportMasterKeyRequest other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.ExportMasterKeyResponse.html": {
    "href": "api/AlgoSdk.Kmd.ExportMasterKeyResponse.html",
    "title": "Struct ExportMasterKeyResponse | Unity Algorand SDK",
    "keywords": "Struct ExportMasterKeyResponse Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct ExportMasterKeyResponse : IEquatable<ExportMasterKeyResponse> Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > MasterDerivationKey Declaration public PrivateKey MasterDerivationKey Field Value Type Description PrivateKey Message Declaration public string Message Field Value Type Description String Methods Equals(ExportMasterKeyResponse) Declaration public bool Equals(ExportMasterKeyResponse other) Parameters Type Name Description ExportMasterKeyResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.ExportMultisigRequest.html": {
    "href": "api/AlgoSdk.Kmd.ExportMultisigRequest.html",
    "title": "Struct ExportMultisigRequest | Unity Algorand SDK",
    "keywords": "Struct ExportMultisigRequest Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct ExportMultisigRequest : IEquatable<ExportMultisigRequest> Fields Address Declaration public Address Address Field Value Type Description Address WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(ExportMultisigRequest) Declaration public bool Equals(ExportMultisigRequest other) Parameters Type Name Description ExportMultisigRequest other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.ExportMultisigResponse.html": {
    "href": "api/AlgoSdk.Kmd.ExportMultisigResponse.html",
    "title": "Struct ExportMultisigResponse | Unity Algorand SDK",
    "keywords": "Struct ExportMultisigResponse Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct ExportMultisigResponse : IEquatable<ExportMultisigResponse> Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String MultisigVersion Declaration public byte MultisigVersion Field Value Type Description Byte Pks Declaration public Ed25519.PublicKey[] Pks Field Value Type Description Ed25519.PublicKey [] Threshold Declaration public byte Threshold Field Value Type Description Byte Methods Equals(ExportMultisigResponse) Declaration public bool Equals(ExportMultisigResponse other) Parameters Type Name Description ExportMultisigResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.GenerateKeyRequest.html": {
    "href": "api/AlgoSdk.Kmd.GenerateKeyRequest.html",
    "title": "Struct GenerateKeyRequest | Unity Algorand SDK",
    "keywords": "Struct GenerateKeyRequest Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct GenerateKeyRequest : IEquatable<GenerateKeyRequest> Fields DisplayMnemonic Declaration public Optional<bool> DisplayMnemonic Field Value Type Description Optional < Boolean > WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(GenerateKeyRequest) Declaration public bool Equals(GenerateKeyRequest other) Parameters Type Name Description GenerateKeyRequest other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.GenerateKeyResponse.html": {
    "href": "api/AlgoSdk.Kmd.GenerateKeyResponse.html",
    "title": "Struct GenerateKeyResponse | Unity Algorand SDK",
    "keywords": "Struct GenerateKeyResponse Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct GenerateKeyResponse : IEquatable<GenerateKeyResponse> Fields Address Declaration public Address Address Field Value Type Description Address Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String Methods Equals(GenerateKeyResponse) Declaration public bool Equals(GenerateKeyResponse other) Parameters Type Name Description GenerateKeyResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.html": {
    "href": "api/AlgoSdk.Kmd.html",
    "title": "Namespace AlgoSdk.Kmd | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.Kmd Structs CreateWalletRequest CreateWalletResponse DeleteKeyRequest DeleteMultisigRequest ExportKeyRequest ExportKeyResponse ExportMasterKeyRequest ExportMasterKeyResponse ExportMultisigRequest ExportMultisigResponse GenerateKeyRequest GenerateKeyResponse ImportKeyRequest ImportKeyResponse ImportMultisigRequest ImportMultisigResponse InitWalletHandleTokenRequest InitWalletHandleTokenResponse ListKeysRequest ListKeysResponse ListMultisigRequest ListMultisigResponse ListWalletsResponse ReleaseWalletHandleTokenRequest RenameWalletRequest RenameWalletResponse RenewWalletHandleTokenRequest RenewWalletHandleTokenResponse SignMultisigRequest SignMultisigResponse SignProgramMultisigRequest SignProgramMultisigResponse SignProgramRequest SignProgramResponse SignTransactionRequest SignTransactionResponse VersionsResponse Wallet WalletHandle WalletInfoRequest WalletInfoResponse"
  },
  "api/AlgoSdk.Kmd.ImportKeyRequest.html": {
    "href": "api/AlgoSdk.Kmd.ImportKeyRequest.html",
    "title": "Struct ImportKeyRequest | Unity Algorand SDK",
    "keywords": "Struct ImportKeyRequest Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct ImportKeyRequest : IEquatable<ImportKeyRequest> Fields PrivateKey Declaration public PrivateKey PrivateKey Field Value Type Description PrivateKey WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(ImportKeyRequest) Declaration public bool Equals(ImportKeyRequest other) Parameters Type Name Description ImportKeyRequest other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.ImportKeyResponse.html": {
    "href": "api/AlgoSdk.Kmd.ImportKeyResponse.html",
    "title": "Struct ImportKeyResponse | Unity Algorand SDK",
    "keywords": "Struct ImportKeyResponse Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct ImportKeyResponse : IEquatable<ImportKeyResponse> Fields Address Declaration public Address Address Field Value Type Description Address Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String Methods Equals(ImportKeyResponse) Declaration public bool Equals(ImportKeyResponse other) Parameters Type Name Description ImportKeyResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.ImportMultisigRequest.html": {
    "href": "api/AlgoSdk.Kmd.ImportMultisigRequest.html",
    "title": "Struct ImportMultisigRequest | Unity Algorand SDK",
    "keywords": "Struct ImportMultisigRequest Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct ImportMultisigRequest : IEquatable<ImportMultisigRequest> Fields PublicKeys Declaration public Ed25519.PublicKey[] PublicKeys Field Value Type Description Ed25519.PublicKey [] Threshold Declaration public byte Threshold Field Value Type Description Byte Version Declaration public byte Version Field Value Type Description Byte WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(ImportMultisigRequest) Declaration public bool Equals(ImportMultisigRequest other) Parameters Type Name Description ImportMultisigRequest other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.ImportMultisigResponse.html": {
    "href": "api/AlgoSdk.Kmd.ImportMultisigResponse.html",
    "title": "Struct ImportMultisigResponse | Unity Algorand SDK",
    "keywords": "Struct ImportMultisigResponse Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct ImportMultisigResponse : IEquatable<ImportMultisigResponse> Fields Address Declaration public Address Address Field Value Type Description Address Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String Methods Equals(ImportMultisigResponse) Declaration public bool Equals(ImportMultisigResponse other) Parameters Type Name Description ImportMultisigResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.InitWalletHandleTokenRequest.html": {
    "href": "api/AlgoSdk.Kmd.InitWalletHandleTokenRequest.html",
    "title": "Struct InitWalletHandleTokenRequest | Unity Algorand SDK",
    "keywords": "Struct InitWalletHandleTokenRequest Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct InitWalletHandleTokenRequest : IEquatable<InitWalletHandleTokenRequest> Fields WalletId Declaration public FixedString128Bytes WalletId Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(InitWalletHandleTokenRequest) Declaration public bool Equals(InitWalletHandleTokenRequest other) Parameters Type Name Description InitWalletHandleTokenRequest other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.InitWalletHandleTokenResponse.html": {
    "href": "api/AlgoSdk.Kmd.InitWalletHandleTokenResponse.html",
    "title": "Struct InitWalletHandleTokenResponse | Unity Algorand SDK",
    "keywords": "Struct InitWalletHandleTokenResponse Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct InitWalletHandleTokenResponse : IEquatable<InitWalletHandleTokenResponse> Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(InitWalletHandleTokenResponse) Declaration public bool Equals(InitWalletHandleTokenResponse other) Parameters Type Name Description InitWalletHandleTokenResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.ListKeysRequest.html": {
    "href": "api/AlgoSdk.Kmd.ListKeysRequest.html",
    "title": "Struct ListKeysRequest | Unity Algorand SDK",
    "keywords": "Struct ListKeysRequest Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct ListKeysRequest : IEquatable<ListKeysRequest> Fields WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(ListKeysRequest) Declaration public bool Equals(ListKeysRequest other) Parameters Type Name Description ListKeysRequest other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.ListKeysResponse.html": {
    "href": "api/AlgoSdk.Kmd.ListKeysResponse.html",
    "title": "Struct ListKeysResponse | Unity Algorand SDK",
    "keywords": "Struct ListKeysResponse Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct ListKeysResponse : IEquatable<ListKeysResponse> Fields Addresses Declaration public Address[] Addresses Field Value Type Description Address [] Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String Methods Equals(ListKeysResponse) Declaration public bool Equals(ListKeysResponse other) Parameters Type Name Description ListKeysResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.ListMultisigRequest.html": {
    "href": "api/AlgoSdk.Kmd.ListMultisigRequest.html",
    "title": "Struct ListMultisigRequest | Unity Algorand SDK",
    "keywords": "Struct ListMultisigRequest Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct ListMultisigRequest : IEquatable<ListMultisigRequest> Fields WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(ListMultisigRequest) Declaration public bool Equals(ListMultisigRequest other) Parameters Type Name Description ListMultisigRequest other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.ListMultisigResponse.html": {
    "href": "api/AlgoSdk.Kmd.ListMultisigResponse.html",
    "title": "Struct ListMultisigResponse | Unity Algorand SDK",
    "keywords": "Struct ListMultisigResponse Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct ListMultisigResponse : IEquatable<ListMultisigResponse> Fields Addresses Declaration public Address[] Addresses Field Value Type Description Address [] Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String Methods Equals(ListMultisigResponse) Declaration public bool Equals(ListMultisigResponse other) Parameters Type Name Description ListMultisigResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.ListWalletsResponse.html": {
    "href": "api/AlgoSdk.Kmd.ListWalletsResponse.html",
    "title": "Struct ListWalletsResponse | Unity Algorand SDK",
    "keywords": "Struct ListWalletsResponse Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct ListWalletsResponse : IEquatable<ListWalletsResponse> Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String Wallets Declaration public Wallet[] Wallets Field Value Type Description Wallet [] Methods Equals(ListWalletsResponse) Declaration public bool Equals(ListWalletsResponse other) Parameters Type Name Description ListWalletsResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.ReleaseWalletHandleTokenRequest.html": {
    "href": "api/AlgoSdk.Kmd.ReleaseWalletHandleTokenRequest.html",
    "title": "Struct ReleaseWalletHandleTokenRequest | Unity Algorand SDK",
    "keywords": "Struct ReleaseWalletHandleTokenRequest Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct ReleaseWalletHandleTokenRequest : IEquatable<ReleaseWalletHandleTokenRequest> Fields WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(ReleaseWalletHandleTokenRequest) Declaration public bool Equals(ReleaseWalletHandleTokenRequest other) Parameters Type Name Description ReleaseWalletHandleTokenRequest other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.RenameWalletRequest.html": {
    "href": "api/AlgoSdk.Kmd.RenameWalletRequest.html",
    "title": "Struct RenameWalletRequest | Unity Algorand SDK",
    "keywords": "Struct RenameWalletRequest Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct RenameWalletRequest : IEquatable<RenameWalletRequest> Fields WalletId Declaration public FixedString128Bytes WalletId Field Value Type Description FixedString128Bytes WalletName Declaration public FixedString128Bytes WalletName Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(RenameWalletRequest) Declaration public bool Equals(RenameWalletRequest other) Parameters Type Name Description RenameWalletRequest other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.RenameWalletResponse.html": {
    "href": "api/AlgoSdk.Kmd.RenameWalletResponse.html",
    "title": "Struct RenameWalletResponse | Unity Algorand SDK",
    "keywords": "Struct RenameWalletResponse Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct RenameWalletResponse : IEquatable<RenameWalletResponse> Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String Wallet Declaration public Wallet Wallet Field Value Type Description Wallet Methods Equals(RenameWalletResponse) Declaration public bool Equals(RenameWalletResponse other) Parameters Type Name Description RenameWalletResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.RenewWalletHandleTokenRequest.html": {
    "href": "api/AlgoSdk.Kmd.RenewWalletHandleTokenRequest.html",
    "title": "Struct RenewWalletHandleTokenRequest | Unity Algorand SDK",
    "keywords": "Struct RenewWalletHandleTokenRequest Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct RenewWalletHandleTokenRequest : IEquatable<RenewWalletHandleTokenRequest> Fields WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(RenewWalletHandleTokenRequest) Declaration public bool Equals(RenewWalletHandleTokenRequest other) Parameters Type Name Description RenewWalletHandleTokenRequest other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.RenewWalletHandleTokenResponse.html": {
    "href": "api/AlgoSdk.Kmd.RenewWalletHandleTokenResponse.html",
    "title": "Struct RenewWalletHandleTokenResponse | Unity Algorand SDK",
    "keywords": "Struct RenewWalletHandleTokenResponse Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct RenewWalletHandleTokenResponse : IEquatable<RenewWalletHandleTokenResponse> Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String WalletHandle Declaration public WalletHandle WalletHandle Field Value Type Description WalletHandle Methods Equals(RenewWalletHandleTokenResponse) Declaration public bool Equals(RenewWalletHandleTokenResponse other) Parameters Type Name Description RenewWalletHandleTokenResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.SignMultisigRequest.html": {
    "href": "api/AlgoSdk.Kmd.SignMultisigRequest.html",
    "title": "Struct SignMultisigRequest | Unity Algorand SDK",
    "keywords": "Struct SignMultisigRequest Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct SignMultisigRequest : IEquatable<SignMultisigRequest> Fields Multisig Declaration public MultisigSig Multisig Field Value Type Description MultisigSig PublicKey Declaration public Ed25519.PublicKey PublicKey Field Value Type Description Ed25519.PublicKey Signer Declaration public Address Signer Field Value Type Description Address Transaction Declaration public byte[] Transaction Field Value Type Description Byte [] WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(SignMultisigRequest) Declaration public bool Equals(SignMultisigRequest other) Parameters Type Name Description SignMultisigRequest other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.SignMultisigResponse.html": {
    "href": "api/AlgoSdk.Kmd.SignMultisigResponse.html",
    "title": "Struct SignMultisigResponse | Unity Algorand SDK",
    "keywords": "Struct SignMultisigResponse Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct SignMultisigResponse : IEquatable<SignMultisigResponse> Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String SignedTransaction Declaration public byte[] SignedTransaction Field Value Type Description Byte [] Methods Equals(SignMultisigResponse) Declaration public bool Equals(SignMultisigResponse other) Parameters Type Name Description SignMultisigResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.SignProgramMultisigRequest.html": {
    "href": "api/AlgoSdk.Kmd.SignProgramMultisigRequest.html",
    "title": "Struct SignProgramMultisigRequest | Unity Algorand SDK",
    "keywords": "Struct SignProgramMultisigRequest Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct SignProgramMultisigRequest : IEquatable<SignProgramMultisigRequest> Fields Address Declaration public Address Address Field Value Type Description Address Data Declaration public byte[] Data Field Value Type Description Byte [] Multisig Declaration public MultisigSig Multisig Field Value Type Description MultisigSig PublicKey Declaration public Ed25519.PublicKey PublicKey Field Value Type Description Ed25519.PublicKey WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(SignProgramMultisigRequest) Declaration public bool Equals(SignProgramMultisigRequest other) Parameters Type Name Description SignProgramMultisigRequest other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.SignProgramMultisigResponse.html": {
    "href": "api/AlgoSdk.Kmd.SignProgramMultisigResponse.html",
    "title": "Struct SignProgramMultisigResponse | Unity Algorand SDK",
    "keywords": "Struct SignProgramMultisigResponse Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct SignProgramMultisigResponse : IEquatable<SignProgramMultisigResponse> Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String SignedProgram Declaration public byte[] SignedProgram Field Value Type Description Byte [] Methods Equals(SignProgramMultisigResponse) Declaration public bool Equals(SignProgramMultisigResponse other) Parameters Type Name Description SignProgramMultisigResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.SignProgramRequest.html": {
    "href": "api/AlgoSdk.Kmd.SignProgramRequest.html",
    "title": "Struct SignProgramRequest | Unity Algorand SDK",
    "keywords": "Struct SignProgramRequest Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct SignProgramRequest : IEquatable<SignProgramRequest> Fields Address Declaration public Address Address Field Value Type Description Address Data Declaration public byte[] Data Field Value Type Description Byte [] WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(SignProgramRequest) Declaration public bool Equals(SignProgramRequest other) Parameters Type Name Description SignProgramRequest other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.SignProgramResponse.html": {
    "href": "api/AlgoSdk.Kmd.SignProgramResponse.html",
    "title": "Struct SignProgramResponse | Unity Algorand SDK",
    "keywords": "Struct SignProgramResponse Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct SignProgramResponse : IEquatable<SignProgramResponse> Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String SignedProgram Declaration public Sig SignedProgram Field Value Type Description Sig Methods Equals(SignProgramResponse) Declaration public bool Equals(SignProgramResponse other) Parameters Type Name Description SignProgramResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.SignTransactionRequest.html": {
    "href": "api/AlgoSdk.Kmd.SignTransactionRequest.html",
    "title": "Struct SignTransactionRequest | Unity Algorand SDK",
    "keywords": "Struct SignTransactionRequest Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct SignTransactionRequest : IEquatable<SignTransactionRequest> Fields PublicKey Declaration public Ed25519.PublicKey PublicKey Field Value Type Description Ed25519.PublicKey Transaction Declaration public byte[] Transaction Field Value Type Description Byte [] WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(SignTransactionRequest) Declaration public bool Equals(SignTransactionRequest other) Parameters Type Name Description SignTransactionRequest other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.SignTransactionResponse.html": {
    "href": "api/AlgoSdk.Kmd.SignTransactionResponse.html",
    "title": "Struct SignTransactionResponse | Unity Algorand SDK",
    "keywords": "Struct SignTransactionResponse Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct SignTransactionResponse : IEquatable<SignTransactionResponse> Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String SignedTransaction Declaration public byte[] SignedTransaction Field Value Type Description Byte [] Methods Equals(SignTransactionResponse) Declaration public bool Equals(SignTransactionResponse other) Parameters Type Name Description SignTransactionResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.VersionsResponse.html": {
    "href": "api/AlgoSdk.Kmd.VersionsResponse.html",
    "title": "Struct VersionsResponse | Unity Algorand SDK",
    "keywords": "Struct VersionsResponse Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct VersionsResponse : IEquatable<VersionsResponse> Fields Versions Declaration public FixedString64Bytes[] Versions Field Value Type Description FixedString64Bytes [] Methods Equals(VersionsResponse) Declaration public bool Equals(VersionsResponse other) Parameters Type Name Description VersionsResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.Wallet.html": {
    "href": "api/AlgoSdk.Kmd.Wallet.html",
    "title": "Struct Wallet | Unity Algorand SDK",
    "keywords": "Struct Wallet Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct Wallet : IEquatable<Wallet> Fields DriverName Declaration public FixedString64Bytes DriverName Field Value Type Description FixedString64Bytes DriverVersion Declaration public uint DriverVersion Field Value Type Description UInt32 Id Declaration public FixedString128Bytes Id Field Value Type Description FixedString128Bytes MnemonicUx Declaration public Optional<bool> MnemonicUx Field Value Type Description Optional < Boolean > Name Declaration public FixedString64Bytes Name Field Value Type Description FixedString64Bytes SupportedTransactions Declaration public TransactionType[] SupportedTransactions Field Value Type Description TransactionType [] Methods Equals(Wallet) Declaration public bool Equals(Wallet other) Parameters Type Name Description Wallet other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.WalletHandle.html": {
    "href": "api/AlgoSdk.Kmd.WalletHandle.html",
    "title": "Struct WalletHandle | Unity Algorand SDK",
    "keywords": "Struct WalletHandle Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct WalletHandle : IEquatable<WalletHandle> Fields ExpiresSeconds Declaration public ulong ExpiresSeconds Field Value Type Description UInt64 Wallet Declaration public Wallet Wallet Field Value Type Description Wallet Methods Equals(WalletHandle) Declaration public bool Equals(WalletHandle other) Parameters Type Name Description WalletHandle other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.WalletInfoRequest.html": {
    "href": "api/AlgoSdk.Kmd.WalletInfoRequest.html",
    "title": "Struct WalletInfoRequest | Unity Algorand SDK",
    "keywords": "Struct WalletInfoRequest Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct WalletInfoRequest : IEquatable<WalletInfoRequest> Fields WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(WalletInfoRequest) Declaration public bool Equals(WalletInfoRequest other) Parameters Type Name Description WalletInfoRequest other Returns Type Description Boolean"
  },
  "api/AlgoSdk.Kmd.WalletInfoResponse.html": {
    "href": "api/AlgoSdk.Kmd.WalletInfoResponse.html",
    "title": "Struct WalletInfoResponse | Unity Algorand SDK",
    "keywords": "Struct WalletInfoResponse Namespace : AlgoSdk.Kmd Assembly : cs.temp.dll.dll Syntax public struct WalletInfoResponse : IEquatable<WalletInfoResponse> Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String WalletHandle Declaration public WalletHandle WalletHandle Field Value Type Description WalletHandle Methods Equals(WalletInfoResponse) Declaration public bool Equals(WalletInfoResponse other) Parameters Type Name Description WalletInfoResponse other Returns Type Description Boolean"
  },
  "api/AlgoSdk.KmdAccount.html": {
    "href": "api/AlgoSdk.KmdAccount.html",
    "title": "Struct KmdAccount | Unity Algorand SDK",
    "keywords": "Struct KmdAccount Implements IAccount IAsyncSigner Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct KmdAccount : IAccount, IAsyncSigner Constructors KmdAccount(KmdClient, FixedString128Bytes, FixedString128Bytes, Address, FixedString128Bytes) Declaration public KmdAccount(KmdClient client, FixedString128Bytes walletId, FixedString128Bytes walletPassword, Address address, FixedString128Bytes walletHandleToken = null) Parameters Type Name Description KmdClient client FixedString128Bytes walletId FixedString128Bytes walletPassword Address address FixedString128Bytes walletHandleToken Properties Address Address of this account Declaration public Address Address { get; } Property Value Type Description Address Methods RefreshWalletHandleToken(CancellationToken) Declaration public UniTask<FixedString128Bytes> RefreshWalletHandleToken(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description UniTask < FixedString128Bytes > SignTxnsAsync<T>(T[], TxnIndices, CancellationToken) Sign a group of transactions. Declaration public UniTask<SignedTxn<T>[]> SignTxnsAsync<T>(T[] txns, TxnIndices txnsToSign, CancellationToken cancellationToken = null) where T : ITransaction, IEquatable<T> Parameters Type Name Description T[] txns The transactions to sign. TxnIndices txnsToSign Indexes of the transactions this signer should sign. CancellationToken cancellationToken Provide an optional cancellation token to interrupt signing. Returns Type Description UniTask < SignedTxn <T>[]> An array of transactions with signatures. If the transaction at a given index was not signed, that signed transaction will have no signature. Type Parameters Name Description T The type of the transactions. Remarks Each transaction is expected to have a valid group id already set. Implements IAccount IAsyncSigner"
  },
  "api/AlgoSdk.KmdClient.html": {
    "href": "api/AlgoSdk.KmdClient.html",
    "title": "Struct KmdClient | Unity Algorand SDK",
    "keywords": "Struct KmdClient A client for accessing the kmd service Implements IKmdClient IAlgoApiClient Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct KmdClient : IKmdClient, IAlgoApiClient Remarks The kmd service is responsible for managing keys and wallets Constructors KmdClient(String, Header[]) Create a new kmd client Declaration public KmdClient(string address, params Header[] headers) Parameters Type Name Description String address url of the service, including the port, e.g. \"http://localhost:4001\" Header [] headers extra headers to add to the requests. e.g. (\"x-api-key, my-api-key\") KmdClient(String, String, Header[]) Create a new kmd client Declaration public KmdClient(string address, string token = null, params Header[] headers) Parameters Type Name Description String address url of the service, including the port, e.g. \"http://localhost:4001\" String token token used in authenticating to the service Header [] headers extra headers to add to the requests. e.g. (\"x-api-key, my-api-key\") Properties Address Declaration public string Address { get; } Property Value Type Description String Headers Declaration public Header[] Headers { get; } Property Value Type Description Header [] Token Declaration public string Token { get; } Property Value Type Description String TokenHeader Declaration public string TokenHeader { get; } Property Value Type Description String Methods CreateWallet(PrivateKey, FixedString128Bytes, FixedString128Bytes, FixedString128Bytes) Create a wallet Declaration public AlgoApiRequest.Sent<CreateWalletResponse> CreateWallet(PrivateKey masterDerivationKey, FixedString128Bytes walletDriverName, FixedString128Bytes walletName, FixedString128Bytes walletPassword) Parameters Type Name Description PrivateKey masterDerivationKey FixedString128Bytes walletDriverName FixedString128Bytes walletName FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < CreateWalletResponse > Remarks Create a new wallet (collection of keys) with the given parameters. DeleteKey(Address, FixedString128Bytes, FixedString128Bytes) Deletes the key with the passed public key from the wallet. Declaration public AlgoApiRequest.Sent DeleteKey(Address address, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address address public key of the key to delete FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent DeleteMultisig(Address, FixedString128Bytes, FixedString128Bytes) Deletes multisig preimage information for the passed address from the wallet. Declaration public AlgoApiRequest.Sent DeleteMultisig(Address address, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address address public key for the key to delete multisig preimage information FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent ExportKey(Address, FixedString128Bytes, FixedString128Bytes) Export the secret key associated with the passed public key. Declaration public AlgoApiRequest.Sent<ExportKeyResponse> ExportKey(Address address, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address address public key of the key to export FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < ExportKeyResponse > ExportMasterKey(FixedString128Bytes, FixedString128Bytes) Export the master derivation key from the wallet. This key is a master \"backup\" key for the underlying wallet. With it, you can regenerate all of the wallets that have been generated with this wallet's POST /v1/key endpoint. This key will not allow you to recover keys imported from other wallets, however. Declaration public AlgoApiRequest.Sent<ExportMasterKeyResponse> ExportMasterKey(FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < ExportMasterKeyResponse > ExportMultisig(Address, FixedString128Bytes) Given a multisig address whose preimage this wallet stores, returns the information used to generate the address, including public keys, threshold, and multisig version. Declaration public AlgoApiRequest.Sent<ExportMultisigResponse> ExportMultisig(Address address, FixedString128Bytes walletHandleToken) Parameters Type Name Description Address address public key for the key to export multisig preimage information FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < ExportMultisigResponse > GenerateKey(FixedString128Bytes, Optional<Boolean>) Generates the next key in the deterministic key sequence (as determined by the master derivation key) and adds it to the wallet, returning the public key. Declaration public AlgoApiRequest.Sent<GenerateKeyResponse> GenerateKey(FixedString128Bytes walletHandleToken, Optional<bool> displayMnemonic = default(Optional<bool>)) Parameters Type Name Description FixedString128Bytes walletHandleToken Optional < Boolean > displayMnemonic whether or not to display the mnemonic Returns Type Description AlgoApiRequest.Sent < GenerateKeyResponse > GetSwaggerSpec() Gets the current swagger spec. Declaration public AlgoApiRequest.Sent<AlgoApiObject> GetSwaggerSpec() Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > The entire swagger spec in json. ImportKey(PrivateKey, FixedString128Bytes) Import an externally generated key into the wallet. Note that if you wish to back up the imported key, you must do so by backing up the entire wallet database, because imported keys were not derived from the wallet's master derivation key. Declaration public AlgoApiRequest.Sent<ImportKeyResponse> ImportKey(PrivateKey privateKey, FixedString128Bytes walletHandleToken) Parameters Type Name Description PrivateKey privateKey key to import FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < ImportKeyResponse > ImportMultisig(Ed25519.PublicKey[], Byte, FixedString128Bytes, Byte) Generates a multisig account from the passed public keys array and multisig metadata, and stores all of this in the wallet. Declaration public AlgoApiRequest.Sent<ImportMultisigResponse> ImportMultisig(Ed25519.PublicKey[] publicKeys, byte threshold, FixedString128Bytes walletHandleToken, byte version = 1) Parameters Type Name Description Ed25519.PublicKey [] publicKeys Public keys for the accounts used to sign Byte threshold Number of valid signatures required FixedString128Bytes walletHandleToken Byte version Multisig version. This should always be set to 1. Returns Type Description AlgoApiRequest.Sent < ImportMultisigResponse > InitWalletHandleToken(FixedString128Bytes, FixedString128Bytes) Initialize a wallet handle token Declaration public AlgoApiRequest.Sent<InitWalletHandleTokenResponse> InitWalletHandleToken(FixedString128Bytes walletId, FixedString128Bytes walletPassword) Parameters Type Name Description FixedString128Bytes walletId FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < InitWalletHandleTokenResponse > Remarks Unlock the wallet and return a wallet handle token that can be used for subsequent operations. These tokens expire periodically and must be renewed. You can use WalletInfo(FixedString128Bytes) to see how much time remains until expiration, and renew it with RenewWalletHandleToken(FixedString128Bytes) . When you're done, you can invalidate the token with ReleaseWalletHandleToken(FixedString128Bytes) . ListKeys(FixedString128Bytes) Lists all of the public keys in this wallet. All of them have a stored private key. Declaration public AlgoApiRequest.Sent<ListKeysResponse> ListKeys(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < ListKeysResponse > ListMultisig(FixedString128Bytes) Lists all of the multisig accounts whose preimages this wallet stores Declaration public AlgoApiRequest.Sent<ListMultisigResponse> ListMultisig(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < ListMultisigResponse > ListWallets() List Wallets Declaration public AlgoApiRequest.Sent<ListWalletsResponse> ListWallets() Returns Type Description AlgoApiRequest.Sent < ListWalletsResponse > Remarks Lists all of the wallets that kmd is aware of. ReleaseWalletHandleToken(FixedString128Bytes) Release a wallet handle token Declaration public AlgoApiRequest.Sent ReleaseWalletHandleToken(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent Remarks Invalidate the passed wallet handle token, making it invalid for use in subsequent requests. RenameWallet(FixedString128Bytes, FixedString128Bytes, FixedString128Bytes) Rename a wallet Declaration public AlgoApiRequest.Sent<RenameWalletResponse> RenameWallet(FixedString128Bytes walletId, FixedString128Bytes newName, FixedString128Bytes walletPassword) Parameters Type Name Description FixedString128Bytes walletId FixedString128Bytes newName FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < RenameWalletResponse > Remarks Rename the underlying wallet to something else RenewWalletHandleToken(FixedString128Bytes) Renew a wallet handle token Declaration public AlgoApiRequest.Sent<RenewWalletHandleTokenResponse> RenewWalletHandleToken(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < RenewWalletHandleTokenResponse > Remarks Renew a wallet handle token, increasing its expiration duration to its initial value SignMultisig(MultisigSig, Ed25519.PublicKey, Byte[], FixedString128Bytes, FixedString128Bytes) Sign a multisig transaction Declaration public AlgoApiRequest.Sent<SignMultisigResponse> SignMultisig(MultisigSig msig, Ed25519.PublicKey publicKey, byte[] transactionData, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description MultisigSig msig Current multisig signature object Ed25519.PublicKey publicKey public key of the key to use to add a signature to the multisig Byte [] transactionData transaction serialized as msgpack FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignMultisigResponse > Remarks Start a multisig signature, or add a signature to a partially completed multisig signature object. SignProgram(Address, Byte[], FixedString128Bytes, FixedString128Bytes) Sign program Declaration public AlgoApiRequest.Sent<SignProgramResponse> SignProgram(Address account, byte[] programData, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address account Account to sign the program with Byte [] programData compiled program bytes FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignProgramResponse > Remarks Signs the passed program with a key from the wallet, determined by the account named in the request. SignProgramMultisig(Address, Byte[], MultisigSig, Ed25519.PublicKey, FixedString128Bytes, FixedString128Bytes) Sign a program for a multisig account Declaration public AlgoApiRequest.Sent<SignProgramMultisigResponse> SignProgramMultisig(Address msigAccount, byte[] programData, MultisigSig msig, Ed25519.PublicKey publicKey, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address msigAccount The address of the multisig account. See https://developer.algorand.org/docs/get-details/accounts/create/#multisignature Byte [] programData compiled program bytes MultisigSig msig current multisig signature object Ed25519.PublicKey publicKey public key of the key to use to add a signature to the multisig FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignProgramMultisigResponse > Remarks Start a multisig signature, or add a signature to a partially completed multisig signature object. SignTransaction(Address, Byte[], FixedString128Bytes, FixedString128Bytes) Sign a transaction Declaration public AlgoApiRequest.Sent<SignTransactionResponse> SignTransaction(Address account, byte[] transactionData, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address account public key of the key to sign the transaction Byte [] transactionData transaction serialized as msgpack FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignTransactionResponse > Versions() Retrieves the current version of the kmd service Declaration public AlgoApiRequest.Sent<VersionsResponse> Versions() Returns Type Description AlgoApiRequest.Sent < VersionsResponse > WalletInfo(FixedString128Bytes) Get wallet info Declaration public AlgoApiRequest.Sent<WalletInfoResponse> WalletInfo(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < WalletInfoResponse > Remarks Returns information about the wallet associated with the passed wallet handle token. Additionally returns expiration information about the token itself. Implements IKmdClient IAlgoApiClient"
  },
  "api/AlgoSdk.Logic.html": {
    "href": "api/AlgoSdk.Logic.html",
    "title": "Class Logic | Unity Algorand SDK",
    "keywords": "Class Logic Inheritance Object Logic Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class Logic Fields SigningPrefix Declaration public static readonly byte[] SigningPrefix Field Value Type Description Byte [] Methods GetAddress(CompiledTeal) Return the Address of a program. Declaration public static Address GetAddress(CompiledTeal program) Parameters Type Name Description CompiledTeal program The stateful or stateless program to get the address of. Returns Type Description Address An Address for a program. GetSignBytes(CompiledTeal, Allocator) Get a message used for signing. Declaration public static NativeByteArray GetSignBytes(CompiledTeal program, Allocator allocator) Parameters Type Name Description CompiledTeal program The program that will be signed. Allocator allocator Defines the memory lifetime used for , which must be disposed. Returns Type Description NativeByteArray A . The caller must manage its lifetime. Sign(CompiledTeal, MultisigSig, PrivateKey) Signs the program with the msig and returns a signature and its index. Declaration public static (Sig, int) Sign(CompiledTeal program, MultisigSig msig, PrivateKey privateKey) Parameters Type Name Description CompiledTeal program The program to sign. MultisigSig msig A MultisigSig that contains the matching privateKey . PrivateKey privateKey The private key to sign with. Its corresponding must be inside of msig . Returns Type Description ValueTuple < Sig , Int32 > A tuple of the Sig from signing the program and its index in the msig Sign(CompiledTeal, SecretKeyHandle) Signs the given program and returns the signature. Declaration public static Sig Sign(CompiledTeal program, SecretKeyHandle secretKey) Parameters Type Name Description CompiledTeal program Program to sign SecretKeyHandle secretKey Key to sign this program with. Returns Type Description Sig Sig"
  },
  "api/AlgoSdk.LogicSig.html": {
    "href": "api/AlgoSdk.LogicSig.html",
    "title": "Struct LogicSig | Unity Algorand SDK",
    "keywords": "Struct LogicSig Implements ISignature Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct LogicSig : ISignature, IEquatable<LogicSig> Fields Args Declaration public FixedList128Bytes<byte>[] Args Field Value Type Description FixedList128Bytes < Byte >[] Multisig Declaration public MultisigSig Multisig Field Value Type Description MultisigSig Program Declaration public byte[] Program Field Value Type Description Byte [] Sig Declaration public Sig Sig Field Value Type Description Sig Methods Equals(LogicSig) Declaration public bool Equals(LogicSig other) Parameters Type Name Description LogicSig other Returns Type Description Boolean GetAddress() Get the Address of this logicsig. Declaration public Address GetAddress() Returns Type Description Address An Address from the checksum of the logic sig. IsValid(Address) Determines if transactions from the sender can by signed by this LogicSig . Declaration public bool IsValid(Address sender) Parameters Type Name Description Address sender The Sender Returns Type Description Boolean true if this LogicSig can sign for the sender. Implements ISignature"
  },
  "api/AlgoSdk.LowLevel.ByteArray.html": {
    "href": "api/AlgoSdk.LowLevel.ByteArray.html",
    "title": "Class ByteArray | Unity Algorand SDK",
    "keywords": "Class ByteArray Inheritance Object ByteArray Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public static class ByteArray Methods CheckElementAccess(Int32, Int32) Declaration public static void CheckElementAccess(int index, int length) Parameters Type Name Description Int32 index Int32 length CopyFrom<T>(ref T, NativeArray<Byte>, Int32, Int32) Declaration public static void CopyFrom<T>(this ref T target, NativeArray<byte> source, int start, int length = 2147483647) where T : struct, IByteArray Parameters Type Name Description T target NativeArray < Byte > source Int32 start Int32 length Type Parameters Name Description T CopyFrom<T>(ref T, Byte[], Int32, Int32) Declaration public static void CopyFrom<T>(this ref T target, byte[] source, int start, int length = 2147483647) where T : struct, IByteArray Parameters Type Name Description T target Byte [] source Int32 start Int32 length Type Parameters Name Description T CopyFrom<T, U>(ref T, U, Int32, Int32) Declaration public static void CopyFrom<T, U>(this ref T target, U source, int start, int length = 2147483647) where T : struct, IByteArray where U : struct, IByteArray Parameters Type Name Description T target U source Int32 start Int32 length Type Parameters Name Description T U CopyTo<T, U>(T, ref U) Declaration public static void CopyTo<T, U>(this T from, ref U to) where T : struct, IByteArray where U : struct, IByteArray Parameters Type Name Description T from U to Type Parameters Name Description T U CopyTo<T, U>(T, ref U, Int32, Int32) Declaration public static void CopyTo<T, U>(this T source, ref U target, int start, int length = 2147483647) where T : struct, IByteArray where U : struct, IByteArray Parameters Type Name Description T source U target Int32 start Int32 length Type Parameters Name Description T U Equals<TByteArray>(TByteArray, TByteArray) Declaration public static bool Equals<TByteArray>(TByteArray x, TByteArray y) where TByteArray : struct, IByteArray Parameters Type Name Description TByteArray x TByteArray y Returns Type Description Boolean Type Parameters Name Description TByteArray Equals<TByteArray>(TByteArray, Object) Declaration public static bool Equals<TByteArray>(TByteArray x, object obj) where TByteArray : struct, IByteArray Parameters Type Name Description TByteArray x Object obj Returns Type Description Boolean Type Parameters Name Description TByteArray EqualsOther<T, U>(T, U) Declaration public static bool EqualsOther<T, U>(T x, U y) where T : struct, IByteArray where U : struct, IByteArray Parameters Type Name Description T x U y Returns Type Description Boolean Type Parameters Name Description T U FromBase64<TByteArray>(String) Declaration public static TByteArray FromBase64<TByteArray>(string b64) where TByteArray : struct, IByteArray Parameters Type Name Description String b64 Returns Type Description TByteArray Type Parameters Name Description TByteArray GetByteAt<TByteArray>(ref TByteArray, Int32) Declaration public static byte GetByteAt<TByteArray>(this ref TByteArray bytes, int index) where TByteArray : struct, IByteArray Parameters Type Name Description TByteArray bytes Int32 index Returns Type Description Byte Type Parameters Name Description TByteArray GetHashCode<TByteArray>(TByteArray) Declaration public static int GetHashCode<TByteArray>(TByteArray bytes) where TByteArray : struct, IByteArray Parameters Type Name Description TByteArray bytes Returns Type Description Int32 Type Parameters Name Description TByteArray ReadByteAt<TByteArray>(TByteArray, Int32) Declaration public static byte ReadByteAt<TByteArray>(TByteArray bytes, int index) where TByteArray : struct, IByteArray Parameters Type Name Description TByteArray bytes Int32 index Returns Type Description Byte Type Parameters Name Description TByteArray SetByteAt<TByteArray>(ref TByteArray, Int32, Byte) Declaration public static void SetByteAt<TByteArray>(this ref TByteArray bytes, int index, byte value) where TByteArray : struct, IByteArray Parameters Type Name Description TByteArray bytes Int32 index Byte value Type Parameters Name Description TByteArray ToArray<TByteArray>(TByteArray) Declaration public static byte[] ToArray<TByteArray>(this TByteArray bytes) where TByteArray : struct, IArray<byte> Parameters Type Name Description TByteArray bytes Returns Type Description Byte [] Type Parameters Name Description TByteArray ToBase64<TByteArray>(TByteArray) Declaration public static string ToBase64<TByteArray>(this TByteArray bytes) where TByteArray : struct, IArray<byte> Parameters Type Name Description TByteArray bytes Returns Type Description String Type Parameters Name Description TByteArray ToNativeArray<TByteArray>(TByteArray, Allocator) Declaration public static NativeArray<byte> ToNativeArray<TByteArray>(this TByteArray bytes, Allocator allocator) where TByteArray : struct, IArray<byte> Parameters Type Name Description TByteArray bytes Allocator allocator Returns Type Description NativeArray < Byte > Type Parameters Name Description TByteArray"
  },
  "api/AlgoSdk.LowLevel.ByteArrayComparer-1.html": {
    "href": "api/AlgoSdk.LowLevel.ByteArrayComparer-1.html",
    "title": "Struct ByteArrayComparer<T> | Unity Algorand SDK",
    "keywords": "Struct ByteArrayComparer<T> Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public struct ByteArrayComparer<T> : IEqualityComparer<T> where T : struct, IByteArray Type Parameters Name Description T Methods Equals(T, T) Declaration public static bool Equals(T x, T y) Parameters Type Name Description T x T y Returns Type Description Boolean GetHashCode(T) Declaration public static int GetHashCode(T obj) Parameters Type Name Description T obj Returns Type Description Int32"
  },
  "api/AlgoSdk.LowLevel.FixedBytes128.html": {
    "href": "api/AlgoSdk.LowLevel.FixedBytes128.html",
    "title": "Struct FixedBytes128 | Unity Algorand SDK",
    "keywords": "Struct FixedBytes128 Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public struct FixedBytes128 Fields byte00126 Declaration public byte byte00126 Field Value Type Description Byte byte00127 Declaration public byte byte00127 Field Value Type Description Byte offset0000 Declaration public FixedBytes126 offset0000 Field Value Type Description FixedBytes126"
  },
  "api/AlgoSdk.LowLevel.FixedBytes32.html": {
    "href": "api/AlgoSdk.LowLevel.FixedBytes32.html",
    "title": "Struct FixedBytes32 | Unity Algorand SDK",
    "keywords": "Struct FixedBytes32 Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public struct FixedBytes32 Fields byte0030 Declaration public byte byte0030 Field Value Type Description Byte byte0031 Declaration public byte byte0031 Field Value Type Description Byte offset0000 Declaration public FixedBytes30 offset0000 Field Value Type Description FixedBytes30"
  },
  "api/AlgoSdk.LowLevel.FixedBytes64.html": {
    "href": "api/AlgoSdk.LowLevel.FixedBytes64.html",
    "title": "Struct FixedBytes64 | Unity Algorand SDK",
    "keywords": "Struct FixedBytes64 Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public struct FixedBytes64 Fields byte0062 Declaration public byte byte0062 Field Value Type Description Byte byte0063 Declaration public byte byte0063 Field Value Type Description Byte offset0000 Declaration public FixedBytes62 offset0000 Field Value Type Description FixedBytes62"
  },
  "api/AlgoSdk.LowLevel.html": {
    "href": "api/AlgoSdk.LowLevel.html",
    "title": "Namespace AlgoSdk.LowLevel | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.LowLevel Classes ByteArray NativeArrayExtensions NativeArrayUtil Structs ByteArrayComparer<T> FixedBytes128 FixedBytes32 FixedBytes64 ListEnumerator<T, TList> NativeByteArray A wrapper around that implements IByteArray . NativeIndexer<T> NativeListOfList<T> NativeOrderedSet<T> ReadOnlySlice<T, TList> Repeated<T> Repeated<T>.Enumerator Interfaces IArray<T> IByteArray IContiguousArray<T>"
  },
  "api/AlgoSdk.LowLevel.IArray-1.html": {
    "href": "api/AlgoSdk.LowLevel.IArray-1.html",
    "title": "Interface IArray<T> | Unity Algorand SDK",
    "keywords": "Interface IArray<T> Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public interface IArray<T> Type Parameters Name Description T Properties Item[Int32] Get/set the element at the index. Declaration T this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description T Length The length in of this array. Declaration int Length { get; } Property Value Type Description Int32"
  },
  "api/AlgoSdk.LowLevel.IByteArray.html": {
    "href": "api/AlgoSdk.LowLevel.IByteArray.html",
    "title": "Interface IByteArray | Unity Algorand SDK",
    "keywords": "Interface IByteArray Inherited Members IContiguousArray<Byte>.GetUnsafePtr() IArray<Byte>.Length IArray<Byte>.Item[Int32] Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public interface IByteArray : IContiguousArray<byte>, IArray<byte>"
  },
  "api/AlgoSdk.LowLevel.IContiguousArray-1.html": {
    "href": "api/AlgoSdk.LowLevel.IContiguousArray-1.html",
    "title": "Interface IContiguousArray<T> | Unity Algorand SDK",
    "keywords": "Interface IContiguousArray<T> Inherited Members IArray<T>.Length IArray<T>.Item[Int32] Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public interface IContiguousArray<T> : IArray<T> Type Parameters Name Description T Methods GetUnsafePtr() Gets the ptr at the beginning of this array. Declaration void *GetUnsafePtr() Returns Type Description Void *"
  },
  "api/AlgoSdk.LowLevel.ListEnumerator-2.html": {
    "href": "api/AlgoSdk.LowLevel.ListEnumerator-2.html",
    "title": "Struct ListEnumerator<T, TList> | Unity Algorand SDK",
    "keywords": "Struct ListEnumerator<T, TList> Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public struct ListEnumerator<T, TList> : IEnumerator<T>, IDisposable, IEnumerator where TList : IReadOnlyList<T> Type Parameters Name Description T TList Constructors ListEnumerator(TList) Declaration public ListEnumerator(TList list) Parameters Type Name Description TList list Properties Current Declaration public T Current { get; } Property Value Type Description T Methods Dispose() Declaration public void Dispose() MoveNext() Declaration public bool MoveNext() Returns Type Description Boolean Reset() Declaration public void Reset()"
  },
  "api/AlgoSdk.LowLevel.NativeArrayExtensions.html": {
    "href": "api/AlgoSdk.LowLevel.NativeArrayExtensions.html",
    "title": "Class NativeArrayExtensions | Unity Algorand SDK",
    "keywords": "Class NativeArrayExtensions Inheritance Object NativeArrayExtensions Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public static class NativeArrayExtensions Methods AsUtf8Text(NativeArray<Byte>, Allocator) Declaration public static NativeText AsUtf8Text(this NativeArray<byte> rawBytes, Allocator allocator) Parameters Type Name Description NativeArray < Byte > rawBytes Allocator allocator Returns Type Description NativeText AsUtf8Text(NativeArray<Byte>.ReadOnly, Allocator) Declaration public static NativeText AsUtf8Text(this NativeArray<byte>.ReadOnly rawBytes, Allocator allocator) Parameters Type Name Description NativeArray.ReadOnly <> rawBytes Allocator allocator Returns Type Description NativeText"
  },
  "api/AlgoSdk.LowLevel.NativeArrayUtil.html": {
    "href": "api/AlgoSdk.LowLevel.NativeArrayUtil.html",
    "title": "Class NativeArrayUtil | Unity Algorand SDK",
    "keywords": "Class NativeArrayUtil Inheritance Object NativeArrayUtil Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public static class NativeArrayUtil Methods ConcatAll(Byte[][], Allocator) Declaration public static NativeArray<byte> ConcatAll(byte[][] byteArrays, Allocator allocator) Parameters Type Name Description Byte [][] byteArrays Allocator allocator Returns Type Description NativeArray < Byte >"
  },
  "api/AlgoSdk.LowLevel.NativeByteArray.html": {
    "href": "api/AlgoSdk.LowLevel.NativeByteArray.html",
    "title": "Struct NativeByteArray | Unity Algorand SDK",
    "keywords": "Struct NativeByteArray A wrapper around that implements IByteArray . Implements IByteArray IContiguousArray < Byte > IArray < Byte > Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public struct NativeByteArray : IByteArray, IContiguousArray<byte>, IArray<byte>, IEquatable<NativeByteArray>, INativeDisposable Constructors NativeByteArray(NativeArray<Byte>) Declaration public NativeByteArray(NativeArray<byte> data) Parameters Type Name Description NativeArray < Byte > data NativeByteArray(Byte[], Allocator) Declaration public NativeByteArray(byte[] arr, Allocator allocator) Parameters Type Name Description Byte [] arr Allocator allocator NativeByteArray(Int32, Allocator) Declaration public NativeByteArray(int capacity, Allocator allocator) Parameters Type Name Description Int32 capacity Allocator allocator Properties Data Declaration public NativeArray<byte>.ReadOnly Data { get; } Property Value Type Description NativeArray.ReadOnly <> Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public int Length { get; } Property Value Type Description Int32 Methods Dispose() Declaration public void Dispose() Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle Equals(NativeByteArray) Declaration public bool Equals(NativeByteArray other) Parameters Type Name Description NativeByteArray other Returns Type Description Boolean GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void * Implements IByteArray IContiguousArray<T> IArray<T>"
  },
  "api/AlgoSdk.LowLevel.NativeIndexer-1.html": {
    "href": "api/AlgoSdk.LowLevel.NativeIndexer-1.html",
    "title": "Struct NativeIndexer<T> | Unity Algorand SDK",
    "keywords": "Struct NativeIndexer<T> Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public struct NativeIndexer<T> : IReadOnlyList<T>, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable, INativeDisposable Type Parameters Name Description T Constructors NativeIndexer(T[], Allocator) Declaration public NativeIndexer(T[] array, Allocator allocator) Parameters Type Name Description T[] array Allocator allocator Properties Count Declaration public int Count { get; } Property Value Type Description Int32 Item[Int32] Declaration public T this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description T Methods Add(Int32) Declaration public void Add(int index) Parameters Type Name Description Int32 index Dispose() Declaration public void Dispose() Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> Slice(Int32, Int32) Declaration public ReadOnlySlice<T, NativeIndexer<T>> Slice(int start, int count = -1) Parameters Type Name Description Int32 start Int32 count Returns Type Description ReadOnlySlice <T, NativeIndexer <T>>"
  },
  "api/AlgoSdk.LowLevel.NativeListOfList-1.html": {
    "href": "api/AlgoSdk.LowLevel.NativeListOfList-1.html",
    "title": "Struct NativeListOfList<T> | Unity Algorand SDK",
    "keywords": "Struct NativeListOfList<T> Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public struct NativeListOfList<T> : INativeDisposable where T : struct Type Parameters Name Description T Constructors NativeListOfList(Allocator) Declaration public NativeListOfList(Allocator allocator) Parameters Type Name Description Allocator allocator Properties IsCreated Declaration public bool IsCreated { get; } Property Value Type Description Boolean IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description Boolean Item[Int32] Declaration public NativeSlice<T> this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description NativeSlice <T> Length Declaration public int Length { get; } Property Value Type Description Int32 Methods Add<TList>(TList) Declaration public void Add<TList>(TList val) where TList : IIndexable<T> Parameters Type Name Description TList val Type Parameters Name Description TList AddArray<TArray>(TArray) Declaration public void AddArray<TArray>(TArray arr) where TArray : IContiguousArray<T> Parameters Type Name Description TArray arr Type Parameters Name Description TArray Dispose() Declaration public void Dispose() Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle GetRange(Int32, out Int32, out Int32) Declaration public void GetRange(int index, out int start, out int count) Parameters Type Name Description Int32 index Int32 start Int32 count RemoveAt(Int32) Declaration public void RemoveAt(int index) Parameters Type Name Description Int32 index ToArray() Declaration public T[][] ToArray() Returns Type Description T[][]"
  },
  "api/AlgoSdk.LowLevel.NativeOrderedSet-1.html": {
    "href": "api/AlgoSdk.LowLevel.NativeOrderedSet-1.html",
    "title": "Struct NativeOrderedSet<T> | Unity Algorand SDK",
    "keywords": "Struct NativeOrderedSet<T> Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public struct NativeOrderedSet<T> : INativeDisposable, IReadOnlyList<T>, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable where T : struct, IEquatable<T> Type Parameters Name Description T Constructors NativeOrderedSet(Int32, Allocator) Declaration public NativeOrderedSet(int initialCapacity, Allocator allocator) Parameters Type Name Description Int32 initialCapacity Allocator allocator Properties Capacity Declaration public int Capacity { get; set; } Property Value Type Description Int32 Count Declaration public int Count { get; } Property Value Type Description Int32 IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description Boolean Item[Int32] Declaration public T this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description T Length Declaration public int Length { get; } Property Value Type Description Int32 Methods Add(T) Declaration public bool Add(T element) Parameters Type Name Description T element Returns Type Description Boolean AddIndexOf(T) Declaration public int AddIndexOf(T element) Parameters Type Name Description T element Returns Type Description Int32 Clear() Declaration public void Clear() Contains(T) Declaration public bool Contains(T element) Parameters Type Name Description T element Returns Type Description Boolean Dispose() Declaration public void Dispose() Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> IndexOf(T) Declaration public int IndexOf(T element) Parameters Type Name Description T element Returns Type Description Int32 RemoveAt(Int32) Declaration public void RemoveAt(int index) Parameters Type Name Description Int32 index Slice(Int32) Declaration public ReadOnlySlice<T, NativeOrderedSet<T>> Slice(int start) Parameters Type Name Description Int32 start Returns Type Description ReadOnlySlice <T, NativeOrderedSet <T>> Slice(Int32, Int32) Declaration public ReadOnlySlice<T, NativeOrderedSet<T>> Slice(int start, int count) Parameters Type Name Description Int32 start Int32 count Returns Type Description ReadOnlySlice <T, NativeOrderedSet <T>> ToArray() Declaration public T[] ToArray() Returns Type Description T[] TryPop(out T) Declaration public bool TryPop(out T element) Parameters Type Name Description T element Returns Type Description Boolean"
  },
  "api/AlgoSdk.LowLevel.ReadOnlySlice-2.html": {
    "href": "api/AlgoSdk.LowLevel.ReadOnlySlice-2.html",
    "title": "Struct ReadOnlySlice<T, TList> | Unity Algorand SDK",
    "keywords": "Struct ReadOnlySlice<T, TList> Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public struct ReadOnlySlice<T, TList> : IReadOnlyList<T>, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable where TList : IReadOnlyList<T> Type Parameters Name Description T TList Constructors ReadOnlySlice(TList, Int32, Int32) Declaration public ReadOnlySlice(TList list, int start, int count) Parameters Type Name Description TList list Int32 start Int32 count Properties Count Declaration public int Count { get; } Property Value Type Description Int32 Item[Int32] Declaration public T this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description T Methods GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> ToArray() Declaration public T[] ToArray() Returns Type Description T[]"
  },
  "api/AlgoSdk.LowLevel.Repeated-1.Enumerator.html": {
    "href": "api/AlgoSdk.LowLevel.Repeated-1.Enumerator.html",
    "title": "Struct Repeated<T>.Enumerator | Unity Algorand SDK",
    "keywords": "Struct Repeated<T>.Enumerator Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public struct Enumerator : IEnumerator<T>, IDisposable, IEnumerator Constructors Enumerator(Repeated<T>) Declaration public Enumerator(Repeated<T> coll) Parameters Type Name Description Repeated <T> coll Properties Current Declaration public T Current { get; } Property Value Type Description T Methods Dispose() Declaration public void Dispose() MoveNext() Declaration public bool MoveNext() Returns Type Description Boolean Reset() Declaration public void Reset()"
  },
  "api/AlgoSdk.LowLevel.Repeated-1.html": {
    "href": "api/AlgoSdk.LowLevel.Repeated-1.html",
    "title": "Struct Repeated<T> | Unity Algorand SDK",
    "keywords": "Struct Repeated<T> Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public struct Repeated<T> : IReadOnlyList<T>, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable Type Parameters Name Description T Constructors Repeated(Int32, T) Declaration public Repeated(int count, T value) Parameters Type Name Description Int32 count T value Properties Count Declaration public int Count { get; } Property Value Type Description Int32 Item[Int32] Declaration public T this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description T Value Declaration public T Value { get; } Property Value Type Description T Methods GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T>"
  },
  "api/AlgoSdk.MessagePack.BinaryUtils.html": {
    "href": "api/AlgoSdk.MessagePack.BinaryUtils.html",
    "title": "Class BinaryUtils | Unity Algorand SDK",
    "keywords": "Class BinaryUtils Inheritance Object BinaryUtils Namespace : AlgoSdk.MessagePack Assembly : cs.temp.dll.dll Syntax public static class BinaryUtils Methods ReverseEndianness(Byte) Declaration public static byte ReverseEndianness(byte value) Parameters Type Name Description Byte value Returns Type Description Byte ReverseEndianness(Int16) Declaration public static short ReverseEndianness(short value) Parameters Type Name Description Int16 value Returns Type Description Int16 ReverseEndianness(Int32) Declaration public static int ReverseEndianness(int value) Parameters Type Name Description Int32 value Returns Type Description Int32 ReverseEndianness(Int64) Declaration public static long ReverseEndianness(long value) Parameters Type Name Description Int64 value Returns Type Description Int64 ReverseEndianness(SByte) Declaration public static sbyte ReverseEndianness(sbyte value) Parameters Type Name Description SByte value Returns Type Description SByte ReverseEndianness(UInt16) Declaration public static ushort ReverseEndianness(ushort value) Parameters Type Name Description UInt16 value Returns Type Description UInt16 ReverseEndianness(UInt32) Declaration public static uint ReverseEndianness(uint value) Parameters Type Name Description UInt32 value Returns Type Description UInt32 ReverseEndianness(UInt64) Declaration public static ulong ReverseEndianness(ulong value) Parameters Type Name Description UInt64 value Returns Type Description UInt64"
  },
  "api/AlgoSdk.MessagePack.ExtensionHeader.html": {
    "href": "api/AlgoSdk.MessagePack.ExtensionHeader.html",
    "title": "Struct ExtensionHeader | Unity Algorand SDK",
    "keywords": "Struct ExtensionHeader Namespace : AlgoSdk.MessagePack Assembly : cs.temp.dll.dll Syntax public struct ExtensionHeader : IEquatable<ExtensionHeader> Constructors ExtensionHeader(SByte, Int32) Declaration public ExtensionHeader(sbyte typeCode, int length) Parameters Type Name Description SByte typeCode Int32 length ExtensionHeader(SByte, UInt32) Declaration public ExtensionHeader(sbyte typeCode, uint length) Parameters Type Name Description SByte typeCode UInt32 length Fields Length Declaration public readonly uint Length Field Value Type Description UInt32 TypeCode Declaration public readonly sbyte TypeCode Field Value Type Description SByte Methods Equals(ExtensionHeader) Declaration public bool Equals(ExtensionHeader other) Parameters Type Name Description ExtensionHeader other Returns Type Description Boolean"
  },
  "api/AlgoSdk.MessagePack.html": {
    "href": "api/AlgoSdk.MessagePack.html",
    "title": "Namespace AlgoSdk.MessagePack | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.MessagePack Classes BinaryUtils MessagePackCode MessagePackRange ReservedMessagePackExtensionTypeCode Structs ExtensionHeader MessagePackReader MessagePackWriter Enums MessagePackType"
  },
  "api/AlgoSdk.MessagePack.MessagePackCode.html": {
    "href": "api/AlgoSdk.MessagePack.MessagePackCode.html",
    "title": "Class MessagePackCode | Unity Algorand SDK",
    "keywords": "Class MessagePackCode Inheritance Object MessagePackCode Namespace : AlgoSdk.MessagePack Assembly : cs.temp.dll.dll Syntax public static class MessagePackCode Fields Array16 Declaration public const byte Array16 = 220 Field Value Type Description Byte Array32 Declaration public const byte Array32 = 221 Field Value Type Description Byte Bin16 Declaration public const byte Bin16 = 197 Field Value Type Description Byte Bin32 Declaration public const byte Bin32 = 198 Field Value Type Description Byte Bin8 Declaration public const byte Bin8 = 196 Field Value Type Description Byte Ext16 Declaration public const byte Ext16 = 200 Field Value Type Description Byte Ext32 Declaration public const byte Ext32 = 201 Field Value Type Description Byte Ext8 Declaration public const byte Ext8 = 199 Field Value Type Description Byte False Declaration public const byte False = 194 Field Value Type Description Byte FixExt1 Declaration public const byte FixExt1 = 212 Field Value Type Description Byte FixExt16 Declaration public const byte FixExt16 = 216 Field Value Type Description Byte FixExt2 Declaration public const byte FixExt2 = 213 Field Value Type Description Byte FixExt4 Declaration public const byte FixExt4 = 214 Field Value Type Description Byte FixExt8 Declaration public const byte FixExt8 = 215 Field Value Type Description Byte Float32 Declaration public const byte Float32 = 202 Field Value Type Description Byte Float64 Declaration public const byte Float64 = 203 Field Value Type Description Byte Int16 Declaration public const byte Int16 = 209 Field Value Type Description Byte Int32 Declaration public const byte Int32 = 210 Field Value Type Description Byte Int64 Declaration public const byte Int64 = 211 Field Value Type Description Byte Int8 Declaration public const byte Int8 = 208 Field Value Type Description Byte Map16 Declaration public const byte Map16 = 222 Field Value Type Description Byte Map32 Declaration public const byte Map32 = 223 Field Value Type Description Byte MaxFixArray Declaration public const byte MaxFixArray = 159 Field Value Type Description Byte MaxFixInt Declaration public const byte MaxFixInt = 127 Field Value Type Description Byte MaxFixMap Declaration public const byte MaxFixMap = 143 Field Value Type Description Byte MaxFixStr Declaration public const byte MaxFixStr = 191 Field Value Type Description Byte MaxNegativeFixInt Declaration public const byte MaxNegativeFixInt = 255 Field Value Type Description Byte MinFixArray Declaration public const byte MinFixArray = 144 Field Value Type Description Byte MinFixInt Declaration public const byte MinFixInt = 0 Field Value Type Description Byte MinFixMap Declaration public const byte MinFixMap = 128 Field Value Type Description Byte MinFixStr Declaration public const byte MinFixStr = 160 Field Value Type Description Byte MinNegativeFixInt Declaration public const byte MinNegativeFixInt = 224 Field Value Type Description Byte NeverUsed Declaration public const byte NeverUsed = 193 Field Value Type Description Byte Nil Declaration public const byte Nil = 192 Field Value Type Description Byte Str16 Declaration public const byte Str16 = 218 Field Value Type Description Byte Str32 Declaration public const byte Str32 = 219 Field Value Type Description Byte Str8 Declaration public const byte Str8 = 217 Field Value Type Description Byte True Declaration public const byte True = 195 Field Value Type Description Byte UInt16 Declaration public const byte UInt16 = 205 Field Value Type Description Byte UInt32 Declaration public const byte UInt32 = 206 Field Value Type Description Byte UInt64 Declaration public const byte UInt64 = 207 Field Value Type Description Byte UInt8 Declaration public const byte UInt8 = 204 Field Value Type Description Byte Methods ToFormatName(Byte) Declaration public static string ToFormatName(byte code) Parameters Type Name Description Byte code Returns Type Description String ToMessagePackType(Byte) Declaration public static MessagePackType ToMessagePackType(this byte code) Parameters Type Name Description Byte code Returns Type Description MessagePackType"
  },
  "api/AlgoSdk.MessagePack.MessagePackRange.html": {
    "href": "api/AlgoSdk.MessagePack.MessagePackRange.html",
    "title": "Class MessagePackRange | Unity Algorand SDK",
    "keywords": "Class MessagePackRange Inheritance Object MessagePackRange Namespace : AlgoSdk.MessagePack Assembly : cs.temp.dll.dll Syntax public static class MessagePackRange Fields MaxFixArrayCount Declaration public const int MaxFixArrayCount = 15 Field Value Type Description Int32 MaxFixMapCount Declaration public const int MaxFixMapCount = 15 Field Value Type Description Int32 MaxFixNegativeInt Declaration public const int MaxFixNegativeInt = -1 Field Value Type Description Int32 MaxFixPositiveInt Declaration public const int MaxFixPositiveInt = 127 Field Value Type Description Int32 MaxFixStringLength Declaration public const int MaxFixStringLength = 31 Field Value Type Description Int32 MinFixNegativeInt Declaration public const int MinFixNegativeInt = -32 Field Value Type Description Int32 MinFixStringLength Declaration public const int MinFixStringLength = 0 Field Value Type Description Int32"
  },
  "api/AlgoSdk.MessagePack.MessagePackReader.html": {
    "href": "api/AlgoSdk.MessagePack.MessagePackReader.html",
    "title": "Struct MessagePackReader | Unity Algorand SDK",
    "keywords": "Struct MessagePackReader Namespace : AlgoSdk.MessagePack Assembly : cs.temp.dll.dll Syntax public struct MessagePackReader Constructors MessagePackReader(NativeArray<Byte>) Declaration public MessagePackReader(NativeArray<byte> data) Parameters Type Name Description NativeArray < Byte > data Properties Position Declaration public int Position { get; set; } Property Value Type Description Int32 Methods Peek() Declaration public byte Peek() Returns Type Description Byte ReadArrayHeader() Declaration public int ReadArrayHeader() Returns Type Description Int32 ReadBool() Declaration public bool ReadBool() Returns Type Description Boolean ReadByte() Declaration public byte ReadByte() Returns Type Description Byte ReadBytes() Declaration public NativeSlice<byte> ReadBytes() Returns Type Description NativeSlice < Byte > ReadBytes<T>() Declaration public T ReadBytes<T>() where T : struct, IByteArray Returns Type Description T Type Parameters Name Description T ReadInt16() Declaration public short ReadInt16() Returns Type Description Int16 ReadInt32() Declaration public int ReadInt32() Returns Type Description Int32 ReadInt64() Declaration public long ReadInt64() Returns Type Description Int64 ReadInt8() Declaration public sbyte ReadInt8() Returns Type Description SByte ReadMapHeader() Declaration public int ReadMapHeader() Returns Type Description Int32 ReadRaw(NativeList<Byte>) Declaration public void ReadRaw(NativeList<byte> bytes) Parameters Type Name Description NativeList < Byte > bytes ReadSByte() Declaration public sbyte ReadSByte() Returns Type Description SByte ReadString(out String) Declaration public void ReadString(out string s) Parameters Type Name Description String s ReadString<T>(ref T) Declaration public void ReadString<T>(ref T fs) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Type Parameters Name Description T ReadUInt16() Declaration public ushort ReadUInt16() Returns Type Description UInt16 ReadUInt32() Declaration public uint ReadUInt32() Returns Type Description UInt32 ReadUInt64() Declaration public ulong ReadUInt64() Returns Type Description UInt64 ReadUInt8() Declaration public byte ReadUInt8() Returns Type Description Byte Skip() Declaration public void Skip() TryPeek(out Byte) Declaration public bool TryPeek(out byte code) Parameters Type Name Description Byte code Returns Type Description Boolean TryRead(out Byte) Declaration public bool TryRead(out byte code) Parameters Type Name Description Byte code Returns Type Description Boolean TryRead(out SByte) Declaration public bool TryRead(out sbyte value) Parameters Type Name Description SByte value Returns Type Description Boolean TryReadArrayHeader(out Int32) Declaration public bool TryReadArrayHeader(out int count) Parameters Type Name Description Int32 count Returns Type Description Boolean TryReadBigEndian(out Int16) Declaration public bool TryReadBigEndian(out short value) Parameters Type Name Description Int16 value Returns Type Description Boolean TryReadBigEndian(out Int32) Declaration public bool TryReadBigEndian(out int value) Parameters Type Name Description Int32 value Returns Type Description Boolean TryReadBigEndian(out Int64) Declaration public bool TryReadBigEndian(out long value) Parameters Type Name Description Int64 value Returns Type Description Boolean TryReadBigEndian(out UInt16) Declaration public bool TryReadBigEndian(out ushort value) Parameters Type Name Description UInt16 value Returns Type Description Boolean TryReadBigEndian(out UInt32) Declaration public bool TryReadBigEndian(out uint value) Parameters Type Name Description UInt32 value Returns Type Description Boolean TryReadBigEndian(out UInt64) Declaration public bool TryReadBigEndian(out ulong value) Parameters Type Name Description UInt64 value Returns Type Description Boolean TryReadBytes(out NativeSlice<Byte>) Declaration public bool TryReadBytes(out NativeSlice<byte> bytes) Parameters Type Name Description NativeSlice < Byte > bytes Returns Type Description Boolean TryReadExtensionFormatHeader(out ExtensionHeader) Declaration public bool TryReadExtensionFormatHeader(out ExtensionHeader header) Parameters Type Name Description ExtensionHeader header Returns Type Description Boolean TryReadMapHeader(out Int32) Declaration public bool TryReadMapHeader(out int count) Parameters Type Name Description Int32 count Returns Type Description Boolean TryReadNil() Declaration public bool TryReadNil() Returns Type Description Boolean TryReadRaw(NativeList<Byte>) Declaration public bool TryReadRaw(NativeList<byte> bytes) Parameters Type Name Description NativeList < Byte > bytes Returns Type Description Boolean TryReadString<T>(ref T) Declaration public bool TryReadString<T>(ref T fs) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Returns Type Description Boolean Type Parameters Name Description T TrySkip() Declaration public bool TrySkip() Returns Type Description Boolean UnsafeReadBytes(Void*, Int32) Declaration public void UnsafeReadBytes(void *ptr, int length) Parameters Type Name Description Void * ptr Int32 length"
  },
  "api/AlgoSdk.MessagePack.MessagePackType.html": {
    "href": "api/AlgoSdk.MessagePack.MessagePackType.html",
    "title": "Enum MessagePackType | Unity Algorand SDK",
    "keywords": "Enum MessagePackType Namespace : AlgoSdk.MessagePack Assembly : cs.temp.dll.dll Syntax public enum MessagePackType : byte Fields Name Description Array Binary Boolean Extension Float Integer Map Nil String Unknown"
  },
  "api/AlgoSdk.MessagePack.MessagePackWriter.html": {
    "href": "api/AlgoSdk.MessagePack.MessagePackWriter.html",
    "title": "Struct MessagePackWriter | Unity Algorand SDK",
    "keywords": "Struct MessagePackWriter Namespace : AlgoSdk.MessagePack Assembly : cs.temp.dll.dll Syntax public struct MessagePackWriter : INativeDisposable Constructors MessagePackWriter(Allocator) Declaration public MessagePackWriter(Allocator allocator) Parameters Type Name Description Allocator allocator Properties Data Declaration public NativeList<byte> Data { get; } Property Value Type Description NativeList < Byte > Methods Dispose() Declaration public void Dispose() Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle Write(Boolean) Declaration public void Write(bool value) Parameters Type Name Description Boolean value Write(Byte) Declaration public void Write(byte value) Parameters Type Name Description Byte value Write(Int16) Declaration public void Write(short value) Parameters Type Name Description Int16 value Write(Int32) Declaration public void Write(int value) Parameters Type Name Description Int32 value Write(Int64) Declaration public void Write(long value) Parameters Type Name Description Int64 value Write(SByte) Declaration public void Write(sbyte value) Parameters Type Name Description SByte value Write(UInt16) Declaration public void Write(ushort value) Parameters Type Name Description UInt16 value Write(UInt32) Declaration public void Write(uint value) Parameters Type Name Description UInt32 value Write(UInt64) Declaration public void Write(ulong value) Parameters Type Name Description UInt64 value WriteArrayHeader(Int32) Declaration public void WriteArrayHeader(int count) Parameters Type Name Description Int32 count WriteArrayHeader(UInt32) Declaration public void WriteArrayHeader(uint count) Parameters Type Name Description UInt32 count WriteBigEndian(Int16) Declaration public void WriteBigEndian(short value) Parameters Type Name Description Int16 value WriteBigEndian(Int32) Declaration public void WriteBigEndian(int value) Parameters Type Name Description Int32 value WriteBigEndian(Int64) Declaration public void WriteBigEndian(long value) Parameters Type Name Description Int64 value WriteBigEndian(UInt16) Declaration public void WriteBigEndian(ushort value) Parameters Type Name Description UInt16 value WriteBigEndian(UInt32) Declaration public void WriteBigEndian(uint value) Parameters Type Name Description UInt32 value WriteBigEndian(UInt64) Declaration public void WriteBigEndian(ulong value) Parameters Type Name Description UInt64 value WriteBytes(Byte[]) Declaration public void WriteBytes(byte[] arr) Parameters Type Name Description Byte [] arr WriteBytes(Void*, Int32) Declaration public void WriteBytes(void *buffer, int length) Parameters Type Name Description Void * buffer Int32 length WriteBytesHeader(Int32) Declaration public void WriteBytesHeader(int length) Parameters Type Name Description Int32 length WriteMapHeader(Int32) Declaration public void WriteMapHeader(int length) Parameters Type Name Description Int32 length WriteMapHeader(UInt32) Declaration public void WriteMapHeader(uint length) Parameters Type Name Description UInt32 length WriteNil() Declaration public void WriteNil() WriteRaw(NativeArray<Byte>) Declaration public void WriteRaw(NativeArray<byte> bytes) Parameters Type Name Description NativeArray < Byte > bytes WriteString(String) Declaration public void WriteString(string s) Parameters Type Name Description String s WriteString<T>(T) Declaration public void WriteString<T>(T fs) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Type Parameters Name Description T WriteStringHeader(Int32) Declaration public void WriteStringHeader(int length) Parameters Type Name Description Int32 length"
  },
  "api/AlgoSdk.MessagePack.ReservedMessagePackExtensionTypeCode.html": {
    "href": "api/AlgoSdk.MessagePack.ReservedMessagePackExtensionTypeCode.html",
    "title": "Class ReservedMessagePackExtensionTypeCode | Unity Algorand SDK",
    "keywords": "Class ReservedMessagePackExtensionTypeCode Inheritance Object ReservedMessagePackExtensionTypeCode Namespace : AlgoSdk.MessagePack Assembly : cs.temp.dll.dll Syntax public static class ReservedMessagePackExtensionTypeCode Fields DateTime Declaration public const sbyte DateTime = -1 Field Value Type Description SByte"
  },
  "api/AlgoSdk.MicroAlgos.html": {
    "href": "api/AlgoSdk.MicroAlgos.html",
    "title": "Struct MicroAlgos | Unity Algorand SDK",
    "keywords": "Struct MicroAlgos Base unit of Algos Implements IWrappedValue < UInt64 > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct MicroAlgos : IEquatable<MicroAlgos>, IEquatable<ulong>, IWrappedValue<ulong> Constructors MicroAlgos(UInt64) Declaration public MicroAlgos(ulong amount) Parameters Type Name Description UInt64 amount Fields PerAlgo Amount of micro algos per algo. Declaration public const ulong PerAlgo = 1000000UL Field Value Type Description UInt64 Properties Amount Declaration public ulong Amount { get; set; } Property Value Type Description UInt64 Methods Equals(MicroAlgos) Declaration public bool Equals(MicroAlgos other) Parameters Type Name Description MicroAlgos other Returns Type Description Boolean Equals(UInt64) Declaration public bool Equals(ulong other) Parameters Type Name Description UInt64 other Returns Type Description Boolean ToAlgos() Declaration public double ToAlgos() Returns Type Description Double Operators Implicit(MicroAlgos to UInt64) Declaration public static implicit operator ulong (MicroAlgos microAlgos) Parameters Type Name Description MicroAlgos microAlgos Returns Type Description UInt64 Implicit(UInt64 to MicroAlgos) Declaration public static implicit operator MicroAlgos(ulong amount) Parameters Type Name Description UInt64 amount Returns Type Description MicroAlgos Explicit Interface Implementations IWrappedValue<UInt64>.WrappedValue Declaration ulong IWrappedValue<ulong>.WrappedValue { get; set; } Returns Type Description UInt64 Implements IWrappedValue<T>"
  },
  "api/AlgoSdk.MinBalance.html": {
    "href": "api/AlgoSdk.MinBalance.html",
    "title": "Struct MinBalance | Unity Algorand SDK",
    "keywords": "Struct MinBalance The minimum balance in micro algos required for a given amount of data associated with an account. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct MinBalance Constructors MinBalance(AlgodAccount) Get the minimum balance of an account. Declaration public MinBalance(AlgodAccount accountInfo) Parameters Type Name Description AlgodAccount accountInfo The to obtain the minimum balance. MinBalance(UInt64, UInt64, UInt64, UInt64, UInt64, UInt64) Get the minimum balance from explicit data. Declaration public MinBalance(ulong assets = 0UL, ulong applicationsOptedIn = 0UL, ulong applicationsCreated = 0UL, ulong applicationExtraPages = 0UL, ulong applicationSchemaUints = 0UL, ulong applicationSchemaByteSlices = 0UL) Parameters Type Name Description UInt64 assets The number of assets opted in and created. UInt64 applicationsOptedIn The number of applications opted in. UInt64 applicationsCreated The number of applications created. UInt64 applicationExtraPages The total number of extra application pages. UInt64 applicationSchemaUints The total number of application schema uints. UInt64 applicationSchemaByteSlices The total number of application schema byte slices. Fields ApplicationCreatedCost The minimum balance required per application created. Declaration public const ulong ApplicationCreatedCost = 100000UL Field Value Type Description UInt64 ApplicationExtraPageCost The minimum balance required per extra application page. Declaration public const ulong ApplicationExtraPageCost = 100000UL Field Value Type Description UInt64 ApplicationExtraPages The total number of application extra pages. Declaration public readonly ulong ApplicationExtraPages Field Value Type Description UInt64 ApplicationOptedInCost The minimum balance required per application opted in. Declaration public const ulong ApplicationOptedInCost = 100000UL Field Value Type Description UInt64 ApplicationSchemaByteSlices The total number of byteslices in application schema. Declaration public readonly ulong ApplicationSchemaByteSlices Field Value Type Description UInt64 ApplicationSchemaUints The total number of uints in application schema. Declaration public readonly ulong ApplicationSchemaUints Field Value Type Description UInt64 ApplicationsCreated The number of applications created. Declaration public readonly ulong ApplicationsCreated Field Value Type Description UInt64 ApplicationsOptedIn The number of applications opted in. Declaration public readonly ulong ApplicationsOptedIn Field Value Type Description UInt64 AssetCost The minimum balance required per Asset created or opted in. Declaration public const ulong AssetCost = 100000UL Field Value Type Description UInt64 Assets The number of assets opted in and created. Declaration public readonly ulong Assets Field Value Type Description UInt64 ByteSliceCost The minimum balance required per byteslice in application schema. Declaration public const ulong ByteSliceCost = 50000UL Field Value Type Description UInt64 UintCost The minimum balance required per uint in application schema. Declaration public const ulong UintCost = 28500UL Field Value Type Description UInt64 Methods Estimate() Estimate the min balance with its current parameters. Declaration public ulong Estimate() Returns Type Description UInt64 An estimate of the min balance in Micro Algos. With(Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>) Modify this min balance with a different amount of data. Declaration public MinBalance With(Optional<ulong> assets = default(Optional<ulong>), Optional<ulong> applicationsOptedIn = default(Optional<ulong>), Optional<ulong> applicationsCreated = default(Optional<ulong>), Optional<ulong> applicationExtraPages = default(Optional<ulong>), Optional<ulong> applicationSchemaUints = default(Optional<ulong>), Optional<ulong> applicationSchemaByteSlices = default(Optional<ulong>)) Parameters Type Name Description Optional < UInt64 > assets The number of assets opted in and created. Optional < UInt64 > applicationsOptedIn The number of applications opted in. Optional < UInt64 > applicationsCreated The number of applications created. Optional < UInt64 > applicationExtraPages The total number of extra application pages. Optional < UInt64 > applicationSchemaUints The total number of application schema uints. Optional < UInt64 > applicationSchemaByteSlices The total number of application schema byte slices. Returns Type Description MinBalance A MinBalance with given parameters replaced."
  },
  "api/AlgoSdk.Mnemonic.html": {
    "href": "api/AlgoSdk.Mnemonic.html",
    "title": "Struct Mnemonic | Unity Algorand SDK",
    "keywords": "Struct Mnemonic Byte struct representing a private key encoded with Length words. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Mnemonic : IEquatable<Mnemonic> Fields BitsPerWord The number of bits encoded by each word. Declaration public const int BitsPerWord = 11 Field Value Type Description Int32 ChecksumIndex Index of the word used for the checksum. Declaration public const int ChecksumIndex = 24 Field Value Type Description Int32 Length Number of words contained in the mnemonic. Declaration public const int Length = 25 Field Value Type Description Int32 SizeBytes Size of Mnemonic in bytes. Declaration public const int SizeBytes = 50 Field Value Type Description Int32 Properties Item[Int32] The word at a given index. Declaration public Mnemonic.Word this[int index] { get; set; } Parameters Type Name Description Int32 index The index of the word. Property Value Type Description Mnemonic.Word A word in the set of possible mnemonic words. Methods Equals(Mnemonic) Declaration public bool Equals(Mnemonic other) Parameters Type Name Description Mnemonic other Returns Type Description Boolean FromKey(PrivateKey) Declaration public static Mnemonic FromKey(PrivateKey key) Parameters Type Name Description PrivateKey key Returns Type Description Mnemonic FromString(String) Declaration public static Mnemonic FromString(string mnemonicString) Parameters Type Name Description String mnemonicString Returns Type Description Mnemonic GetUnsafePtr() Get the byte pointer at the start of this struct. Declaration public byte *GetUnsafePtr() Returns Type Description Byte * An unsafe byte pointer. ToPrivateKey() Get the PrivateKey from this mnemonic encodes. Declaration public PrivateKey ToPrivateKey() Returns Type Description PrivateKey ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators Implicit(Mnemonic to String) Declaration public static implicit operator string (Mnemonic mnemonic) Parameters Type Name Description Mnemonic mnemonic Returns Type Description String Implicit(String to Mnemonic) Declaration public static implicit operator Mnemonic(string mnemonicString) Parameters Type Name Description String mnemonicString Returns Type Description Mnemonic"
  },
  "api/AlgoSdk.Mnemonic.Word.html": {
    "href": "api/AlgoSdk.Mnemonic.Word.html",
    "title": "Enum Mnemonic.Word | Unity Algorand SDK",
    "keywords": "Enum Mnemonic.Word A list of possible words that occur in a Mnemonic Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum Word : ushort Fields Name Description abandon ability able about above absent absorb abstract absurd abuse access accident account accuse achieve acid acoustic acquire across act action actor actress actual adapt add addict address adjust admit adult advance advice aerobic affair afford afraid again age agent agree ahead aim air airport aisle alarm album alcohol alert alien all alley allow almost alone alpha already also alter always amateur amazing among amount amused analyst anchor ancient anger angle angry animal ankle announce annual another answer antenna antique anxiety any apart apology appear apple approve april arch arctic area arena argue arm armed armor army around arrange arrest arrive arrow art artefact artist artwork ask aspect assault asset assist assume asthma athlete atom attack attend attitude attract auction audit august aunt author auto autumn average avocado avoid awake aware away awesome awful awkward axis baby bachelor bacon badge bag balance balcony ball bamboo banana banner bar barely bargain barrel base basic basket battle beach bean beauty because become beef before begin behave behind believe below belt bench benefit best betray better between beyond bicycle bid bike bind biology bird birth bitter black blade blame blanket blast bleak bless blind blood blossom blouse blue blur blush board boat body boil bomb bone bonus book boost border boring borrow boss bottom bounce box boy bracket brain brand brass brave bread breeze brick bridge brief bright bring brisk broccoli broken bronze broom brother brown brush bubble buddy budget buffalo build bulb bulk bullet bundle bunker burden burger burst bus business busy butter buyer buzz cabbage cabin cable cactus cage cake call calm camera camp can canal cancel candy cannon canoe canvas canyon capable capital captain car carbon card cargo carpet carry cart case cash casino castle casual cat catalog catch category cattle caught cause caution cave ceiling celery cement census century cereal certain chair chalk champion change chaos chapter charge chase chat cheap check cheese chef cherry chest chicken chief child chimney choice choose chronic chuckle chunk churn cigar cinnamon circle citizen city civil claim clap clarify claw clay clean clerk clever click client cliff climb clinic clip clock clog close cloth cloud clown club clump cluster clutch coach coast coconut code coffee coil coin collect color column combine come comfort comic common company concert conduct confirm congress connect consider control convince cook cool copper copy coral core corn correct cost cotton couch country couple course cousin cover coyote crack cradle craft cram crane crash crater crawl crazy cream credit creek crew cricket crime crisp critic crop cross crouch crowd crucial cruel cruise crumble crunch crush cry crystal cube culture cup cupboard curious current curtain curve cushion custom cute cycle dad damage damp dance danger daring dash daughter dawn day deal debate debris decade december decide decline decorate decrease deer defense define defy degree delay deliver demand demise denial dentist deny depart depend deposit depth deputy derive describe desert design desk despair destroy detail detect develop device devote diagram dial diamond diary dice diesel diet differ digital dignity dilemma dinner dinosaur direct dirt disagree discover disease dish dismiss disorder display distance divert divide divorce dizzy doctor document dog doll dolphin domain donate donkey donor door dose double dove draft dragon drama drastic draw dream dress drift drill drink drip drive drop drum dry duck dumb dune during dust dutch duty dwarf dynamic eager eagle early earn earth easily east easy echo ecology economy edge edit educate effort egg eight either elbow elder electric elegant element elephant elevator elite else embark embody embrace emerge emotion employ empower empty enable enact end endless endorse enemy energy enforce engage engine enhance enjoy enlist enough enrich enroll ensure enter entire entry envelope episode equal equip era erase erode erosion error erupt escape essay essence estate eternal ethics evidence evil evoke evolve exact example excess exchange excite exclude excuse execute exercise exhaust exhibit exile exist exit exotic expand expect expire explain expose express extend extra eye eyebrow fabric face faculty fade faint faith fall false fame family famous fan fancy fantasy farm fashion fat fatal father fatigue fault favorite feature february federal fee feed feel female fence festival fetch fever few fiber fiction field figure file film filter final find fine finger finish fire firm first fiscal fish fit fitness fix flag flame flash flat flavor flee flight flip float flock floor flower fluid flush fly foam focus fog foil fold follow food foot force forest forget fork fortune forum forward fossil foster found fox fragile frame frequent fresh friend fringe frog front frost frown frozen fruit fuel fun funny furnace fury future gadget gain galaxy gallery game gap garage garbage garden garlic garment gas gasp gate gather gauge gaze general genius genre gentle genuine gesture ghost giant gift giggle ginger giraffe girl give glad glance glare glass glide glimpse globe gloom glory glove glow glue goat goddess gold good goose gorilla gospel gossip govern gown grab grace grain grant grape grass gravity great green grid grief grit grocery group grow grunt guard guess guide guilt guitar gun gym habit hair half hammer hamster hand happy harbor hard harsh harvest hat have hawk hazard head health heart heavy hedgehog height hello helmet help hen hero hidden high hill hint hip hire history hobby hockey hold hole holiday hollow home honey hood hope horn horror horse hospital host hotel hour hover hub huge human humble humor hundred hungry hunt hurdle hurry hurt husband hybrid ice icon idea identify idle ignore ill illegal illness image imitate immense immune impact impose improve impulse inch include income increase index indicate indoor industry infant inflict inform inhale inherit initial inject injury inmate inner innocent input inquiry insane insect inside inspire install intact interest into invest invite involve iron island isolate issue item ivory jacket jaguar jar jazz jealous jeans jelly jewel job join joke journey joy judge juice jump jungle junior junk just kangaroo keen keep ketchup key kick kid kidney kind kingdom kiss kit kitchen kite kitten kiwi knee knife knock know lab label labor ladder lady lake lamp language laptop large later latin laugh laundry lava law lawn lawsuit layer lazy leader leaf learn leave lecture left leg legal legend leisure lemon lend length LENGTH lens leopard lesson letter level liar liberty library license life lift light like limb limit link lion liquid list little live lizard load loan lobster local lock logic lonely long loop lottery loud lounge love loyal lucky luggage lumber lunar lunch luxury lyrics machine mad magic magnet maid mail main major make mammal man manage mandate mango mansion manual maple marble march margin marine market marriage mask mass master match material math matrix matter maximum maze meadow mean measure meat mechanic medal media melody melt member memory mention menu mercy merge merit merry mesh message metal method middle midnight milk million mimic mind minimum minor minute miracle mirror misery miss mistake mix mixed mixture mobile model modify mom moment monitor monkey monster month moon moral more morning mosquito mother motion motor mountain mouse move movie much muffin mule multiply muscle museum mushroom music must mutual myself mystery myth naive name napkin narrow nasty nation nature near neck need negative neglect neither nephew nerve nest net network neutral never news next nice night noble noise nominee noodle normal north nose notable note nothing notice novel now nuclear number nurse nut oak obey object oblige obscure observe obtain obvious occur ocean october odor off offer office often oil okay old olive olympic omit once one onion online only open opera opinion oppose option orange orbit orchard order ordinary organ orient original orphan ostrich other outdoor outer output outside oval oven over own owner oxygen oyster ozone pact paddle page pair palace palm panda panel panic panther paper parade parent park parrot party pass patch path patient patrol pattern pause pave payment peace peanut pear peasant pelican pen penalty pencil people pepper perfect permit person pet phone photo phrase physical piano picnic picture piece pig pigeon pill pilot pink pioneer pipe pistol pitch pizza place planet plastic plate play please pledge pluck plug plunge poem poet point polar pole police pond pony pool popular portion position possible post potato pottery poverty powder power practice praise predict prefer prepare present pretty prevent price pride primary print priority prison private prize problem process produce profit program project promote proof property prosper protect proud provide public pudding pull pulp pulse pumpkin punch pupil puppy purchase purity purpose purse push put puzzle pyramid quality quantum quarter question quick quit quiz quote rabbit raccoon race rack radar radio rail rain raise rally ramp ranch random range rapid rare rate rather raven raw razor ready real reason rebel rebuild recall receive recipe record recycle reduce reflect reform refuse region regret regular reject relax release relief rely remain remember remind remove render renew rent reopen repair repeat replace report require rescue resemble resist resource response result retire retreat return reunion reveal review reward rhythm rib ribbon rice rich ride ridge rifle right rigid ring riot ripple risk ritual rival river road roast robot robust rocket romance roof rookie room rose rotate rough round route royal rubber rude rug rule run runway rural sad saddle sadness safe sail salad salmon salon salt salute same sample sand satisfy satoshi sauce sausage save say scale scan scare scatter scene scheme school science scissors scorpion scout scrap screen script scrub sea search season seat second secret section security seed seek segment select sell seminar senior sense sentence series service session settle setup seven shadow shaft shallow share shed shell sheriff shield shift shine ship shiver shock shoe shoot shop short shoulder shove shrimp shrug shuffle shy sibling sick side siege sight sign silent silk silly silver similar simple since sing siren sister situate six size skate sketch ski skill skin skirt skull slab slam sleep slender slice slide slight slim slogan slot slow slush small smart smile smoke smooth snack snake snap sniff snow soap soccer social sock soda soft solar soldier solid solution solve someone song soon sorry sort soul sound soup source south space spare spatial spawn speak special speed spell spend sphere spice spider spike spin spirit split spoil sponsor spoon sport spot spray spread spring spy square squeeze squirrel stable stadium staff stage stairs stamp stand start state stay steak steel stem step stereo stick still sting stock stomach stone stool story stove strategy street strike strong struggle student stuff stumble style subject submit subway success such sudden suffer sugar suggest suit summer sun sunny sunset super supply supreme sure surface surge surprise surround survey suspect sustain swallow swamp swap swarm swear sweet swift swim swing switch sword symbol symptom syrup system table tackle tag tail talent talk tank tape target task taste tattoo taxi teach team tell ten tenant tennis tent term test text thank that theme then theory there they thing this thought three thrive throw thumb thunder ticket tide tiger tilt timber time tiny tip tired tissue title toast tobacco today toddler toe together toilet token tomato tomorrow tone tongue tonight tool tooth top topic topple torch tornado tortoise toss total tourist toward tower town toy track trade traffic tragic train transfer trap trash travel tray treat tree trend trial tribe trick trigger trim trip trophy trouble truck true truly trumpet trust truth try tube tuition tumble tuna tunnel turkey turn turtle twelve twenty twice twin twist two type typical ugly umbrella unable unaware uncle uncover under undo unfair unfold unhappy uniform unique unit universe unknown unlock until unusual unveil update upgrade uphold upon upper upset urban urge usage use used useful useless usual utility vacant vacuum vague valid valley valve van vanish vapor various vast vault vehicle velvet vendor venture venue verb verify version very vessel veteran viable vibrant vicious victory video view village vintage violin virtual virus visa visit visual vital vivid vocal voice void volcano volume vote voyage wage wagon wait walk wall walnut want warfare warm warrior wash wasp waste water wave way wealth weapon wear weasel weather web wedding weekend weird welcome west wet whale what wheat wheel when where whip whisper wide width wife wild will win window wine wing wink winner winter wire wisdom wise wish witness wolf woman wonder wood wool word work world worry worth wrap wreck wrestle wrist write wrong yard year yellow you young youth zebra zero zone zoo"
  },
  "api/AlgoSdk.MultisigSig.html": {
    "href": "api/AlgoSdk.MultisigSig.html",
    "title": "Struct MultisigSig | Unity Algorand SDK",
    "keywords": "Struct MultisigSig Implements ISignature Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct MultisigSig : ISignature, IEquatable<MultisigSig> Constructors MultisigSig(Byte, Byte, Address[]) Create a new multisig Declaration public MultisigSig(byte version, byte threshold, Address[] addresses) Parameters Type Name Description Byte version The version of the msig protocol. The latest version is version 1. Byte threshold The number of signatures required for this msig to be valid. Address [] addresses The addresses or public keys composing this msig. Order matters! Fields AddressPrefix Declaration public static readonly byte[] AddressPrefix Field Value Type Description Byte [] Subsigs Subsignatures representing this multisig. Declaration public MultisigSig.Subsig[] Subsigs Field Value Type Description MultisigSig.Subsig [] Threshold Number of signatures required for the multisig to be valid. Declaration public byte Threshold Field Value Type Description Byte Version Version of the multisig. Declaration public byte Version Field Value Type Description Byte Methods Equals(MultisigSig) Declaration public bool Equals(MultisigSig other) Parameters Type Name Description MultisigSig other Returns Type Description Boolean GetAddress() Generate the address for this MultisigSig . Declaration public Address GetAddress() Returns Type Description Address An Address made from hashing the addresses in this subsig. Verify<TMessage>(TMessage) Verify this msig against the message. Declaration public bool Verify<TMessage>(TMessage message) where TMessage : IByteArray Parameters Type Name Description TMessage message The message that was signed. Returns Type Description Boolean true if a threshold of signatures were valid, fals otherwise Type Parameters Name Description TMessage The type of the bytearray the message is contained in. Implements ISignature"
  },
  "api/AlgoSdk.MultisigSig.Subsig.html": {
    "href": "api/AlgoSdk.MultisigSig.Subsig.html",
    "title": "Struct MultisigSig.Subsig | Unity Algorand SDK",
    "keywords": "Struct MultisigSig.Subsig Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Subsig : IEquatable<MultisigSig.Subsig> Fields PublicKey The address for this subsig. Declaration public Ed25519.PublicKey PublicKey Field Value Type Description Ed25519.PublicKey Sig The signed message if it exists. Declaration public Sig Sig Field Value Type Description Sig Methods Equals(MultisigSig.Subsig) Declaration public bool Equals(MultisigSig.Subsig other) Parameters Type Name Description MultisigSig.Subsig other Returns Type Description Boolean Operators Implicit(Address to MultisigSig.Subsig) Declaration public static implicit operator MultisigSig.Subsig(Address address) Parameters Type Name Description Address address Returns Type Description MultisigSig.Subsig Implicit(MultisigSig.Subsig to Address) Declaration public static implicit operator Address(MultisigSig.Subsig subsig) Parameters Type Name Description MultisigSig.Subsig subsig Returns Type Description Address"
  },
  "api/AlgoSdk.OnCompletion.html": {
    "href": "api/AlgoSdk.OnCompletion.html",
    "title": "Enum OnCompletion | Unity Algorand SDK",
    "keywords": "Enum OnCompletion [apan] defines the what additional actions occur with the transaction. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum OnCompletion : byte Fields Name Description Clear Similar to CloseOut, but the transaction will always clear a contract from the account’s balance record whether the program succeeds or fails. CloseOut Accounts use this transaction to close out their participation in the contract. This call can fail based on the TEAL logic, preventing the account from removing the contract from its balance record. Delete Transaction to delete the application. NoOp Generic application calls to execute the ApprovalProgram OptIn Accounts use this transaction to opt into the smart contract to participate (local storage usage). Update Transaction to update TEAL Programs for a contract."
  },
  "api/AlgoSdk.OnCompletionExtensions.html": {
    "href": "api/AlgoSdk.OnCompletionExtensions.html",
    "title": "Class OnCompletionExtensions | Unity Algorand SDK",
    "keywords": "Class OnCompletionExtensions Inheritance Object OnCompletionExtensions Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class OnCompletionExtensions Fields TypeToFixedString Declaration public static readonly FixedString32Bytes[] TypeToFixedString Field Value Type Description FixedString32Bytes [] TypeToString Declaration public static readonly string[] TypeToString Field Value Type Description String [] Methods ToFixedString(OnCompletion) Declaration public static FixedString32Bytes ToFixedString(this OnCompletion onCompletion) Parameters Type Name Description OnCompletion onCompletion Returns Type Description FixedString32Bytes"
  },
  "api/AlgoSdk.Optional-1.html": {
    "href": "api/AlgoSdk.Optional-1.html",
    "title": "Struct Optional<T> | Unity Algorand SDK",
    "keywords": "Struct Optional<T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Optional<T> : IEquatable<Optional<T>> where T : struct, IEquatable<T> Type Parameters Name Description T Constructors Optional(T) Declaration public Optional(T value) Parameters Type Name Description T value Fields HasValue Declaration public bool HasValue Field Value Type Description Boolean Value Declaration public T Value Field Value Type Description T Properties Empty Declaration public static Optional<T> Empty { get; } Property Value Type Description Optional <T> Methods Equals(Optional<T>) Declaration public bool Equals(Optional<T> other) Parameters Type Name Description Optional <T> other Returns Type Description Boolean Operators Implicit(T to Optional<T>) Declaration public static implicit operator Optional<T>(T value) Parameters Type Name Description T value Returns Type Description Optional <T> Implicit(Optional<T> to T) Declaration public static implicit operator T(Optional<T> optional) Parameters Type Name Description Optional <T> optional Returns Type Description T"
  },
  "api/AlgoSdk.ParticipationPublicKey.html": {
    "href": "api/AlgoSdk.ParticipationPublicKey.html",
    "title": "Struct ParticipationPublicKey | Unity Algorand SDK",
    "keywords": "Struct ParticipationPublicKey Participation Public Key used for account registration. Implements IWrappedValue < Ed25519.PublicKey > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ParticipationPublicKey : IWrappedValue<Ed25519.PublicKey>, IByteArray, IEquatable<ParticipationPublicKey> Fields SizeBytes Declaration public const int SizeBytes = default(int) Field Value Type Description Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public int Length { get; } Property Value Type Description Int32 Methods Equals(ParticipationPublicKey) Declaration public bool Equals(ParticipationPublicKey other) Parameters Type Name Description ParticipationPublicKey other Returns Type Description Boolean GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void * Operators Implicit(ParticipationPublicKey to Ed25519.PublicKey) Declaration public static implicit operator Ed25519.PublicKey(ParticipationPublicKey partPk) Parameters Type Name Description ParticipationPublicKey partPk Returns Type Description Ed25519.PublicKey Implicit(Ed25519.PublicKey to ParticipationPublicKey) Declaration public static implicit operator ParticipationPublicKey(Ed25519.PublicKey pk) Parameters Type Name Description Ed25519.PublicKey pk Returns Type Description ParticipationPublicKey Explicit Interface Implementations IWrappedValue<Ed25519.PublicKey>.WrappedValue Declaration Ed25519.PublicKey IWrappedValue<Ed25519.PublicKey>.WrappedValue { get; set; } Returns Type Description Ed25519.PublicKey Implements IWrappedValue<T>"
  },
  "api/AlgoSdk.PaymentTxn.html": {
    "href": "api/AlgoSdk.PaymentTxn.html",
    "title": "Struct PaymentTxn | Unity Algorand SDK",
    "keywords": "Struct PaymentTxn Implements IPaymentTxn ITransaction ITransactionHeader Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct PaymentTxn : IPaymentTxn, ITransaction, ITransactionHeader, IEquatable<PaymentTxn> Properties Amount The total amount to be sent in microAlgos. Declaration public MicroAlgos Amount { get; set; } Property Value Type Description MicroAlgos CloseRemainderTo When set, it indicates that the transaction is requesting that the account should be closed, and all remaining funds, after the and Amount are paid, be transferred to this address. Declaration public Address CloseRemainderTo { get; set; } Property Value Type Description Address Fee Paid by the sender to the FeeSink to prevent denial-of-service. The minimum fee on Algorand is currently 1000 microAlgos. Declaration public MicroAlgos Fee { get; set; } Property Value Type Description MicroAlgos FirstValidRound The first round for when the transaction is valid. If the transaction is sent prior to this round it will be rejected by the network. Declaration public ulong FirstValidRound { get; set; } Property Value Type Description UInt64 GenesisHash The hash of the genesis block of the network for which the transaction is valid. Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisId The human-readable string that identifies the network for the transaction. The genesis ID is found in the genesis block. Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes Group The group specifies that the transaction is part of a group and, if so, specifies the hash of the transaction group. See TransactionGroup . Declaration public TransactionId Group { get; set; } Property Value Type Description TransactionId LastValidRound The ending round for which the transaction is valid. After this round, the transaction will be rejected by the network. Declaration public ulong LastValidRound { get; set; } Property Value Type Description UInt64 Lease A lease enforces mutual exclusion of transactions. If this field is nonzero, then once the transaction is confirmed, it acquires the lease identified by the (Sender, Lease) pair of the transaction until the LastValid round passes. While this transaction possesses the lease, no other transaction specifying this lease can be confirmed. A lease is often used in the context of Algorand Smart Contracts to prevent replay attacks. Declaration public TransactionId Lease { get; set; } Property Value Type Description TransactionId Note Any data up to 1000 bytes. Declaration public byte[] Note { get; set; } Property Value Type Description Byte [] Receiver The address of the account that receives the Amount . Declaration public Address Receiver { get; set; } Property Value Type Description Address RekeyTo Specifies the authorized address. This address will be used to authorize all future transactions. Declaration public Address RekeyTo { get; set; } Property Value Type Description Address Sender The address of the account that pays the fee and amount. Declaration public Address Sender { get; set; } Property Value Type Description Address TransactionType Specifies the type of transaction. This value is automatically generated using any of the developer tools. Declaration public TransactionType TransactionType { get; } Property Value Type Description TransactionType Methods CopyFrom(Transaction) Copy relevant fields to this transaction. Declaration public void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction A raw transaction with all possible transaction fields. CopyTo(ref Transaction) Copy this transactions fields to a Transaction which contains all possible transaction fields. Declaration public void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction A raw transaction with all possible transaction fields. Equals(PaymentTxn) Declaration public bool Equals(PaymentTxn other) Parameters Type Name Description PaymentTxn other Returns Type Description Boolean Implements IPaymentTxn ITransaction ITransactionHeader"
  },
  "api/AlgoSdk.PaymentTxn.Params.html": {
    "href": "api/AlgoSdk.PaymentTxn.Params.html",
    "title": "Struct PaymentTxn.Params | Unity Algorand SDK",
    "keywords": "Struct PaymentTxn.Params Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Params : IEquatable<PaymentTxn.Params> Fields Amount Declaration public MicroAlgos Amount Field Value Type Description MicroAlgos CloseRemainderTo Declaration public Address CloseRemainderTo Field Value Type Description Address Receiver Declaration public Address Receiver Field Value Type Description Address Methods Equals(PaymentTxn.Params) Declaration public bool Equals(PaymentTxn.Params other) Parameters Type Name Description PaymentTxn.Params other Returns Type Description Boolean"
  },
  "api/AlgoSdk.PrivateKey.html": {
    "href": "api/AlgoSdk.PrivateKey.html",
    "title": "Struct PrivateKey | Unity Algorand SDK",
    "keywords": "Struct PrivateKey The private key for an Algorand account. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct PrivateKey : IEquatable<PrivateKey>, IByteArray Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public int Length { get; } Property Value Type Description Int32 Methods Equals(PrivateKey) Declaration public bool Equals(PrivateKey other) Parameters Type Name Description PrivateKey other Returns Type Description Boolean FromString(String) Declaration public static PrivateKey FromString(string keyString) Parameters Type Name Description String keyString Returns Type Description PrivateKey GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void * Sign<T>(T) Declaration public Sig Sign<T>(T msg) where T : IByteArray Parameters Type Name Description T msg Returns Type Description Sig Type Parameters Name Description T ToAddress() Declaration public Address ToAddress() Returns Type Description Address ToKeyPair() Declaration public Ed25519.KeyPair ToKeyPair() Returns Type Description Ed25519.KeyPair ToMnemonic() Declaration public Mnemonic ToMnemonic() Returns Type Description Mnemonic ToPublicKey() Declaration public Ed25519.PublicKey ToPublicKey() Returns Type Description Ed25519.PublicKey ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString()"
  },
  "api/AlgoSdk.ProvideSourceInfoAttribute.html": {
    "href": "api/AlgoSdk.ProvideSourceInfoAttribute.html",
    "title": "Class ProvideSourceInfoAttribute | Unity Algorand SDK",
    "keywords": "Class ProvideSourceInfoAttribute Inheritance Object ProvideSourceInfoAttribute AlgoApiFormatterAttribute AlgoApiObjectAttribute Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public class ProvideSourceInfoAttribute : Attribute Constructors ProvideSourceInfoAttribute(String, String, Int32) Declaration public ProvideSourceInfoAttribute(string member = \"\", string filePath = \"\", int lineNumber = 0) Parameters Type Name Description String member String filePath Int32 lineNumber Properties AbsoluteFilePath Declaration public string AbsoluteFilePath { get; } Property Value Type Description String AssetPath Declaration public string AssetPath { get; } Property Value Type Description String LineNumber Declaration public int LineNumber { get; } Property Value Type Description Int32 Member Declaration public string Member { get; } Property Value Type Description String"
  },
  "api/AlgoSdk.QrCode.html": {
    "href": "api/AlgoSdk.QrCode.html",
    "title": "Namespace AlgoSdk.QrCode | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.QrCode Classes QrCodeUtility"
  },
  "api/AlgoSdk.QrCode.QrCodeUtility.html": {
    "href": "api/AlgoSdk.QrCode.QrCodeUtility.html",
    "title": "Class QrCodeUtility | Unity Algorand SDK",
    "keywords": "Class QrCodeUtility Inheritance Object QrCodeUtility Namespace : AlgoSdk.QrCode Assembly : cs.temp.dll.dll Syntax public static class QrCodeUtility Methods Encode(String, Int32, Int32) Generates a QR-Code with specified width/height. Declaration public static Color32[] Encode(string textForEncoding, int width, int height) Parameters Type Name Description String textForEncoding The text to encode Int32 width The width in pixels Int32 height The height in pixels Returns Type Description Color32 [] A flat array of the generated pixels. GenerateTexture(String) Generates a 256x256 QR-Code Declaration public static Texture2D GenerateTexture(string text) Parameters Type Name Description String text The text to use to generate the QR-Code Returns Type Description Texture2D A with width=256 and height=256."
  },
  "api/AlgoSdk.ResponseFormat.html": {
    "href": "api/AlgoSdk.ResponseFormat.html",
    "title": "Enum ResponseFormat | Unity Algorand SDK",
    "keywords": "Enum ResponseFormat Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum ResponseFormat : byte Fields Name Description Json MessagePack None"
  },
  "api/AlgoSdk.ResponseFormatExtensions.html": {
    "href": "api/AlgoSdk.ResponseFormatExtensions.html",
    "title": "Class ResponseFormatExtensions | Unity Algorand SDK",
    "keywords": "Class ResponseFormatExtensions Inheritance Object ResponseFormatExtensions Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class ResponseFormatExtensions Fields JsonFixedString Declaration public static readonly FixedString32Bytes JsonFixedString Field Value Type Description FixedString32Bytes JsonString Declaration public const string JsonString = \"json\" Field Value Type Description String MessagePackFixedString Declaration public static readonly FixedString32Bytes MessagePackFixedString Field Value Type Description FixedString32Bytes MessagePackString Declaration public const string MessagePackString = \"msgpack\" Field Value Type Description String TypeToString Declaration public static readonly string[] TypeToString Field Value Type Description String [] Methods ToFixedString(ResponseFormat) Declaration public static FixedString32Bytes ToFixedString(this ResponseFormat responseFormat) Parameters Type Name Description ResponseFormat responseFormat Returns Type Description FixedString32Bytes ToOptionalFixedString(ResponseFormat) Declaration public static Optional<FixedString32Bytes> ToOptionalFixedString(this ResponseFormat responseFormat) Parameters Type Name Description ResponseFormat responseFormat Returns Type Description Optional < FixedString32Bytes >"
  },
  "api/AlgoSdk.SerializationException.html": {
    "href": "api/AlgoSdk.SerializationException.html",
    "title": "Class SerializationException | Unity Algorand SDK",
    "keywords": "Class SerializationException Inheritance Object SerializationException Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public class SerializationException : Exception Constructors SerializationException(String) Declaration public SerializationException(string message) Parameters Type Name Description String message SerializationException(String, Exception) Declaration public SerializationException(string message, Exception cause) Parameters Type Name Description String message Exception cause"
  },
  "api/AlgoSdk.Sig.html": {
    "href": "api/AlgoSdk.Sig.html",
    "title": "Struct Sig | Unity Algorand SDK",
    "keywords": "Struct Sig Implements ISignature Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Sig : ISignature, IEquatable<Sig>, IByteArray Constructors Sig(Ed25519.Signature) Declaration public Sig(in Ed25519.Signature sig) Parameters Type Name Description Ed25519.Signature sig Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public int Length { get; } Property Value Type Description Int32 Methods Equals(Sig) Declaration public bool Equals(Sig other) Parameters Type Name Description Sig other Returns Type Description Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void * Verify<TMessage>(TMessage, Ed25519.PublicKey) Declaration public bool Verify<TMessage>(TMessage message, Ed25519.PublicKey pk) where TMessage : IByteArray Parameters Type Name Description TMessage message Ed25519.PublicKey pk Returns Type Description Boolean Type Parameters Name Description TMessage Operators Equality(Sig, Sig) Declaration public static bool operator ==(in Sig x, in Sig y) Parameters Type Name Description Sig x Sig y Returns Type Description Boolean Implicit(Sig to Ed25519.Signature) Declaration public static implicit operator Ed25519.Signature(Sig signature) Parameters Type Name Description Sig signature Returns Type Description Ed25519.Signature Implicit(Ed25519.Signature to Sig) Declaration public static implicit operator Sig(Ed25519.Signature sig) Parameters Type Name Description Ed25519.Signature sig Returns Type Description Sig Inequality(Sig, Sig) Declaration public static bool operator !=(in Sig x, in Sig y) Parameters Type Name Description Sig x Sig y Returns Type Description Boolean Implements ISignature"
  },
  "api/AlgoSdk.SignatureType.html": {
    "href": "api/AlgoSdk.SignatureType.html",
    "title": "Enum SignatureType | Unity Algorand SDK",
    "keywords": "Enum SignatureType Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum SignatureType : byte Fields Name Description LogicSig Multisig None Sig"
  },
  "api/AlgoSdk.SignatureTypeExtensions.html": {
    "href": "api/AlgoSdk.SignatureTypeExtensions.html",
    "title": "Class SignatureTypeExtensions | Unity Algorand SDK",
    "keywords": "Class SignatureTypeExtensions Inheritance Object SignatureTypeExtensions Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class SignatureTypeExtensions Fields TypeToString Declaration public static readonly string[] TypeToString Field Value Type Description String [] Methods ToFixedString(SignatureType) Declaration public static FixedString32Bytes ToFixedString(this SignatureType sigType) Parameters Type Name Description SignatureType sigType Returns Type Description FixedString32Bytes ToOptionalFixedString(SignatureType) Declaration public static Optional<FixedString32Bytes> ToOptionalFixedString(this SignatureType sigType) Parameters Type Name Description SignatureType sigType Returns Type Description Optional < FixedString32Bytes >"
  },
  "api/AlgoSdk.SignedTxn.html": {
    "href": "api/AlgoSdk.SignedTxn.html",
    "title": "Struct SignedTxn | Unity Algorand SDK",
    "keywords": "Struct SignedTxn An untyped signed transaction. See SignedTxn<TTxn> for a typed version. Implements ISignedTxn ISignedTxn < Transaction > IUntypedTransaction ITransactionHeader Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct SignedTxn : IEquatable<SignedTxn>, ISignedTxn, ISignedTxn<Transaction>, IUntypedTransaction, ITransactionHeader Properties AppCallParams Params found in an application call transaction Declaration public AppCallTxn.Params AppCallParams { get; set; } Property Value Type Description AppCallTxn.Params AssetConfigParams Params found in an asset configuration transaction Declaration public AssetConfigTxn.Params AssetConfigParams { get; set; } Property Value Type Description AssetConfigTxn.Params AssetFreezeParams Params found in an asset freeze transaction Declaration public AssetFreezeTxn.Params AssetFreezeParams { get; set; } Property Value Type Description AssetFreezeTxn.Params AssetTransferParams Params found in an asset transfer transaction Declaration public AssetTransferTxn.Params AssetTransferParams { get; set; } Property Value Type Description AssetTransferTxn.Params AuthAddr The signer of the transaction if this account was rekeyed. Declaration public Address AuthAddr { get; set; } Property Value Type Description Address Fee Paid by the sender to the FeeSink to prevent denial-of-service. The minimum fee on Algorand is currently 1000 microAlgos. Declaration public MicroAlgos Fee { get; set; } Property Value Type Description MicroAlgos FirstValidRound The first round for when the transaction is valid. If the transaction is sent prior to this round it will be rejected by the network. Declaration public ulong FirstValidRound { get; set; } Property Value Type Description UInt64 GenesisHash The hash of the genesis block of the network for which the transaction is valid. Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisId The human-readable string that identifies the network for the transaction. The genesis ID is found in the genesis block. Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes Group The group specifies that the transaction is part of a group and, if so, specifies the hash of the transaction group. See TransactionGroup . Declaration public TransactionId Group { get; set; } Property Value Type Description TransactionId Header Params common to all transactions Declaration public TransactionHeader Header { get; set; } Property Value Type Description TransactionHeader KeyRegParams Params found in a key registration transaction Declaration public KeyRegTxn.Params KeyRegParams { get; set; } Property Value Type Description KeyRegTxn.Params LastValidRound The ending round for which the transaction is valid. After this round, the transaction will be rejected by the network. Declaration public ulong LastValidRound { get; set; } Property Value Type Description UInt64 Lease A lease enforces mutual exclusion of transactions. If this field is nonzero, then once the transaction is confirmed, it acquires the lease identified by the (Sender, Lease) pair of the transaction until the LastValid round passes. While this transaction possesses the lease, no other transaction specifying this lease can be confirmed. A lease is often used in the context of Algorand Smart Contracts to prevent replay attacks. Declaration public TransactionId Lease { get; set; } Property Value Type Description TransactionId Lsig The logic sig used to sign the transaction if there was one. Declaration public LogicSig Lsig { get; set; } Property Value Type Description LogicSig Msig The multi-signature used to sign the transaction if there was one. Declaration public MultisigSig Msig { get; set; } Property Value Type Description MultisigSig Note Any data up to 1000 bytes. Declaration public byte[] Note { get; set; } Property Value Type Description Byte [] PaymentParams Params found in a payment transaction Declaration public PaymentTxn.Params PaymentParams { get; set; } Property Value Type Description PaymentTxn.Params RekeyTo Specifies the authorized address. This address will be used to authorize all future transactions. Declaration public Address RekeyTo { get; set; } Property Value Type Description Address Sender The address of the account that pays the fee and amount. Declaration public Address Sender { get; set; } Property Value Type Description Address Sig The signature used to sign the transaction if there was one. Declaration public Sig Sig { get; set; } Property Value Type Description Sig Signature Declaration public TransactionSignature Signature { get; set; } Property Value Type Description TransactionSignature TransactionType Specifies the type of transaction. This value is automatically generated using any of the developer tools. Declaration public TransactionType TransactionType { get; set; } Property Value Type Description TransactionType Txn The transaction signed. Declaration public Transaction Txn { get; set; } Property Value Type Description Transaction Methods Equals(SignedTxn) Declaration public bool Equals(SignedTxn other) Parameters Type Name Description SignedTxn other Returns Type Description Boolean Implements ISignedTxn ISignedTxn<TTxn> IUntypedTransaction ITransactionHeader"
  },
  "api/AlgoSdk.SignedTxn-1.html": {
    "href": "api/AlgoSdk.SignedTxn-1.html",
    "title": "Struct SignedTxn<TTxn> | Unity Algorand SDK",
    "keywords": "Struct SignedTxn<TTxn> A typed signed transaction. Implements ISignedTxn <TTxn> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct SignedTxn<TTxn> : IEquatable<SignedTxn<TTxn>>, ISignedTxn<TTxn> where TTxn : ITransaction, IEquatable<TTxn> Type Parameters Name Description TTxn The type of the transaction backing this struct. Properties AuthAddr The signer of the transaction if this account was rekeyed. Declaration public Address AuthAddr { get; set; } Property Value Type Description Address Lsig The logic sig used to sign the transaction if there was one. Declaration public LogicSig Lsig { get; set; } Property Value Type Description LogicSig Msig The multi-signature used to sign the transaction if there was one. Declaration public MultisigSig Msig { get; set; } Property Value Type Description MultisigSig Sig The signature used to sign the transaction if there was one. Declaration public Sig Sig { get; set; } Property Value Type Description Sig Signature Declaration public TransactionSignature Signature { get; set; } Property Value Type Description TransactionSignature Txn The transaction signed. Declaration public TTxn Txn { get; set; } Property Value Type Description TTxn Methods Equals(SignedTxn<TTxn>) Declaration public bool Equals(SignedTxn<TTxn> other) Parameters Type Name Description SignedTxn <TTxn> other Returns Type Description Boolean ToUntyped() Declaration public SignedTxn ToUntyped() Returns Type Description SignedTxn Operators Implicit(SignedTxn<TTxn> to SignedTxn) Declaration public static implicit operator SignedTxn(SignedTxn<TTxn> signedTxn) Parameters Type Name Description SignedTxn <TTxn> signedTxn Returns Type Description SignedTxn Implements ISignedTxn<TTxn>"
  },
  "api/AlgoSdk.StateDelta.html": {
    "href": "api/AlgoSdk.StateDelta.html",
    "title": "Struct StateDelta | Unity Algorand SDK",
    "keywords": "Struct StateDelta Implements IWrappedValue < ValueDeltaKeyValue []> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct StateDelta : IEquatable<StateDelta>, IEquatable<ValueDeltaKeyValue[]>, IWrappedValue<ValueDeltaKeyValue[]> Constructors StateDelta(ValueDeltaKeyValue[]) Declaration public StateDelta(ValueDeltaKeyValue[] map) Parameters Type Name Description ValueDeltaKeyValue [] map Fields Map Declaration public ValueDeltaKeyValue[] Map Field Value Type Description ValueDeltaKeyValue [] Methods Equals(StateDelta) Declaration public bool Equals(StateDelta other) Parameters Type Name Description StateDelta other Returns Type Description Boolean Equals(ValueDeltaKeyValue[]) Declaration public bool Equals(ValueDeltaKeyValue[] other) Parameters Type Name Description ValueDeltaKeyValue [] other Returns Type Description Boolean Operators Implicit(StateDelta to ValueDeltaKeyValue[]) Declaration public static implicit operator ValueDeltaKeyValue[](StateDelta sd) Parameters Type Name Description StateDelta sd Returns Type Description ValueDeltaKeyValue [] Implicit(ValueDeltaKeyValue[] to StateDelta) Declaration public static implicit operator StateDelta(ValueDeltaKeyValue[] map) Parameters Type Name Description ValueDeltaKeyValue [] map Returns Type Description StateDelta Explicit Interface Implementations IWrappedValue<ValueDeltaKeyValue[]>.WrappedValue Declaration ValueDeltaKeyValue[] IWrappedValue<ValueDeltaKeyValue[]>.WrappedValue { get; set; } Returns Type Description ValueDeltaKeyValue [] Implements IWrappedValue<T>"
  },
  "api/AlgoSdk.StateDeltaFormatter.html": {
    "href": "api/AlgoSdk.StateDeltaFormatter.html",
    "title": "Class StateDeltaFormatter | Unity Algorand SDK",
    "keywords": "Class StateDeltaFormatter Inheritance Object StateDeltaFormatter Implements IAlgoApiFormatter < StateDelta > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public sealed class StateDeltaFormatter : IAlgoApiFormatter<StateDelta> Methods Deserialize(ref JsonReader) Declaration public StateDelta Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description StateDelta Deserialize(ref MessagePackReader) Declaration public StateDelta Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description StateDelta Serialize(ref JsonWriter, StateDelta) Declaration public void Serialize(ref JsonWriter writer, StateDelta value) Parameters Type Name Description JsonWriter writer StateDelta value Serialize(ref MessagePackWriter, StateDelta) Declaration public void Serialize(ref MessagePackWriter writer, StateDelta value) Parameters Type Name Description MessagePackWriter writer StateDelta value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.StateSchema.html": {
    "href": "api/AlgoSdk.StateSchema.html",
    "title": "Struct StateSchema | Unity Algorand SDK",
    "keywords": "Struct StateSchema The StateSchema object is only required for the create application call transaction. The StateSchema object must be fully populated for both the GlobalStateSchema and LocalStateSchema objects. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct StateSchema : IEquatable<StateSchema> Properties NumByteSlices Maximum number of integer values that may be stored in the [global || local] application key/value store. Immutable. Declaration public ulong NumByteSlices { get; set; } Property Value Type Description UInt64 NumUints Maximum number of byte slices values that may be stored in the [global || local] application key/value store. Immutable. Declaration public ulong NumUints { get; set; } Property Value Type Description UInt64 Methods Equals(StateSchema) Declaration public bool Equals(StateSchema other) Parameters Type Name Description StateSchema other Returns Type Description Boolean"
  },
  "api/AlgoSdk.StringComparer.html": {
    "href": "api/AlgoSdk.StringComparer.html",
    "title": "Struct StringComparer | Unity Algorand SDK",
    "keywords": "Struct StringComparer Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct StringComparer : IEqualityComparer<string> Fields Instance Declaration public static readonly StringComparer Instance Field Value Type Description StringComparer Methods Equals(String, String) Declaration public static bool Equals(string x, string y) Parameters Type Name Description String x String y Returns Type Description Boolean"
  },
  "api/AlgoSdk.TealBytes.html": {
    "href": "api/AlgoSdk.TealBytes.html",
    "title": "Struct TealBytes | Unity Algorand SDK",
    "keywords": "Struct TealBytes Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct TealBytes : IEquatable<TealBytes>, IByteArray Fields Bytes Declaration public FixedBytes128 Bytes Field Value Type Description FixedBytes128 SizeBytes Declaration public const int SizeBytes = 128 Field Value Type Description Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public int Length { get; } Property Value Type Description Int32 Methods Equals(TealBytes) Declaration public bool Equals(TealBytes other) Parameters Type Name Description TealBytes other Returns Type Description Boolean GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void *"
  },
  "api/AlgoSdk.TealValue.html": {
    "href": "api/AlgoSdk.TealValue.html",
    "title": "Struct TealValue | Unity Algorand SDK",
    "keywords": "Struct TealValue Represents a TEAL value. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct TealValue : IEquatable<TealValue> Fields Bytes [tb] bytes value. Declaration public TealBytes Bytes Field Value Type Description TealBytes Type See TealValueType Declaration public TealValueType Type Field Value Type Description TealValueType UintValue [ui] uint value. Declaration public ulong UintValue Field Value Type Description UInt64 Methods Equals(TealValue) Declaration public bool Equals(TealValue other) Parameters Type Name Description TealValue other Returns Type Description Boolean"
  },
  "api/AlgoSdk.TealValueType.html": {
    "href": "api/AlgoSdk.TealValueType.html",
    "title": "Enum TealValueType | Unity Algorand SDK",
    "keywords": "Enum TealValueType TEAL Value Type. Value 1 refers to bytes, value 2 refers to uint. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum TealValueType : byte Fields Name Description Bytes None Uint"
  },
  "api/AlgoSdk.TokenizedClientExtensions.html": {
    "href": "api/AlgoSdk.TokenizedClientExtensions.html",
    "title": "Class TokenizedClientExtensions | Unity Algorand SDK",
    "keywords": "Class TokenizedClientExtensions Inheritance Object TokenizedClientExtensions Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class TokenizedClientExtensions Methods Delete<T>(T, String) Declaration public static AlgoApiRequest Delete<T>(this T client, string endpoint) where T : IAlgoApiClient Parameters Type Name Description T client String endpoint Returns Type Description AlgoApiRequest Type Parameters Name Description T Get<T>(T, String) Declaration public static AlgoApiRequest Get<T>(this T client, string endpoint) where T : IAlgoApiClient Parameters Type Name Description T client String endpoint Returns Type Description AlgoApiRequest Type Parameters Name Description T GetUrl<T>(T, String) Declaration public static string GetUrl<T>(this T client, string endpoint) where T : IAlgoApiClient Parameters Type Name Description T client String endpoint Returns Type Description String Type Parameters Name Description T Post<T>(T, String) Declaration public static AlgoApiRequest Post<T>(this T client, string endpoint) where T : IAlgoApiClient Parameters Type Name Description T client String endpoint Returns Type Description AlgoApiRequest Type Parameters Name Description T"
  },
  "api/AlgoSdk.Transaction.html": {
    "href": "api/AlgoSdk.Transaction.html",
    "title": "Struct Transaction | Unity Algorand SDK",
    "keywords": "Struct Transaction Implements IAssetConfigTxn IAppCallTxn IAssetFreezeTxn IAssetTransferTxn IUntypedTransaction IPaymentTxn ITransaction ITransactionHeader Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Transaction : IAssetConfigTxn, IAppCallTxn, IAssetFreezeTxn, IAssetTransferTxn, IEquatable<Transaction>, IUntypedTransaction, IPaymentTxn, ITransaction, ITransactionHeader Fields SignaturePrefix Prefix bytes for signing transaction bytes. Declaration public static readonly byte[] SignaturePrefix Field Value Type Description Byte [] Properties Accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. Declaration public Address[] Accounts { get; set; } Property Value Type Description Address [] Amount The total amount to be sent in microAlgos. Declaration public MicroAlgos Amount { get; set; } Property Value Type Description MicroAlgos AppArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Declaration public CompiledTeal[] AppArguments { get; set; } Property Value Type Description CompiledTeal [] AppCallParams Params found in an application call transaction Declaration public AppCallTxn.Params AppCallParams { get; set; } Property Value Type Description AppCallTxn.Params ApplicationId ID of the application being configured or empty if creating. Declaration public AppIndex ApplicationId { get; set; } Property Value Type Description AppIndex ApprovalProgram Logic executed for every application transaction, except when on-completion is set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Approval programs may reject the transaction. Declaration public CompiledTeal ApprovalProgram { get; set; } Property Value Type Description CompiledTeal AssetAmount The amount of the asset to be transferred. A zero amount transferred to self allocates that asset in the account's Asset map. Declaration public ulong AssetAmount { get; set; } Property Value Type Description UInt64 AssetCloseTo Specify this field to remove the asset holding from the sender account and reduce the account's minimum balance (i.e. opt-out of the asset). Declaration public Address AssetCloseTo { get; set; } Property Value Type Description Address AssetConfigParams Params found in an asset configuration transaction Declaration public AssetConfigTxn.Params AssetConfigParams { get; set; } Property Value Type Description AssetConfigTxn.Params AssetFreezeParams Params found in an asset freeze transaction Declaration public AssetFreezeTxn.Params AssetFreezeParams { get; set; } Property Value Type Description AssetFreezeTxn.Params AssetFrozen True to freeze the asset. Declaration public Optional<bool> AssetFrozen { get; set; } Property Value Type Description Optional < Boolean > AssetParams See AssetParams for all available fields. Declaration public AssetParams AssetParams { get; set; } Property Value Type Description AssetParams AssetReceiver The recipient of the asset transfer. Declaration public Address AssetReceiver { get; set; } Property Value Type Description Address AssetSender The sender of the transfer. The regular field should be used and this one set to the zero value for regular transfers between accounts. If this value is nonzero, it indicates a clawback transaction where the sender is the asset's clawback address and the asset sender is the address from which the funds will be withdrawn. Declaration public Address AssetSender { get; set; } Property Value Type Description Address AssetTransferParams Params found in an asset transfer transaction Declaration public AssetTransferTxn.Params AssetTransferParams { get; set; } Property Value Type Description AssetTransferTxn.Params ClearStateProgram Logic executed for application transactions with on-completion set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Clear state programs cannot reject the transaction. Declaration public CompiledTeal ClearStateProgram { get; set; } Property Value Type Description CompiledTeal CloseRemainderTo When set, it indicates that the transaction is requesting that the account should be closed, and all remaining funds, after the and Amount are paid, be transferred to this address. Declaration public Address CloseRemainderTo { get; set; } Property Value Type Description Address ConfigAsset For re-configure or destroy transactions, this is the unique asset ID. On asset creation, the ID is set to zero. Declaration public AssetIndex ConfigAsset { get; set; } Property Value Type Description AssetIndex ExtraProgramPages Number of additional pages allocated to the application's approval and clear state programs. Each ExtraProgramPages is 2048 bytes. The sum of ApprovalProgram and ClearStateProgram may not exceed 2048*(1+ExtraProgramPages) bytes. Declaration public ulong ExtraProgramPages { get; set; } Property Value Type Description UInt64 Fee Paid by the sender to the FeeSink to prevent denial-of-service. The minimum fee on Algorand is currently 1000 microAlgos. Declaration public MicroAlgos Fee { get; set; } Property Value Type Description MicroAlgos FirstValidRound The first round for when the transaction is valid. If the transaction is sent prior to this round it will be rejected by the network. Declaration public ulong FirstValidRound { get; set; } Property Value Type Description UInt64 ForeignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. Declaration public ulong[] ForeignApps { get; set; } Property Value Type Description UInt64 [] ForeignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Declaration public ulong[] ForeignAssets { get; set; } Property Value Type Description UInt64 [] FreezeAccount The address of the account whose asset is being frozen or unfrozen. Declaration public Address FreezeAccount { get; set; } Property Value Type Description Address FreezeAsset The asset ID being frozen or unfrozen. Declaration public AssetIndex FreezeAsset { get; set; } Property Value Type Description AssetIndex GenesisHash The hash of the genesis block of the network for which the transaction is valid. Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisId The human-readable string that identifies the network for the transaction. The genesis ID is found in the genesis block. Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes GlobalStateSchema Holds the maximum number of global state values defined within a StateSchema object. Declaration public StateSchema GlobalStateSchema { get; set; } Property Value Type Description StateSchema Group The group specifies that the transaction is part of a group and, if so, specifies the hash of the transaction group. See TransactionGroup . Declaration public TransactionId Group { get; set; } Property Value Type Description TransactionId Header Params common to all transactions Declaration public TransactionHeader Header { get; set; } Property Value Type Description TransactionHeader KeyRegParams Params found in a key registration transaction Declaration public KeyRegTxn.Params KeyRegParams { get; set; } Property Value Type Description KeyRegTxn.Params LastValidRound The ending round for which the transaction is valid. After this round, the transaction will be rejected by the network. Declaration public ulong LastValidRound { get; set; } Property Value Type Description UInt64 Lease A lease enforces mutual exclusion of transactions. If this field is nonzero, then once the transaction is confirmed, it acquires the lease identified by the (Sender, Lease) pair of the transaction until the LastValid round passes. While this transaction possesses the lease, no other transaction specifying this lease can be confirmed. A lease is often used in the context of Algorand Smart Contracts to prevent replay attacks. Declaration public TransactionId Lease { get; set; } Property Value Type Description TransactionId LocalStateSchema Holds the maximum number of local state values defined within a StateSchema object. Declaration public StateSchema LocalStateSchema { get; set; } Property Value Type Description StateSchema NonParticipation Declaration public Optional<bool> NonParticipation { get; set; } Property Value Type Description Optional < Boolean > Note Any data up to 1000 bytes. Declaration public byte[] Note { get; set; } Property Value Type Description Byte [] OnComplete Defines what additional actions occur with the transaction. Declaration public OnCompletion OnComplete { get; set; } Property Value Type Description OnCompletion PaymentParams Params found in a payment transaction Declaration public PaymentTxn.Params PaymentParams { get; set; } Property Value Type Description PaymentTxn.Params Receiver The address of the account that receives the Amount . Declaration public Address Receiver { get; set; } Property Value Type Description Address RekeyTo Specifies the authorized address. This address will be used to authorize all future transactions. Declaration public Address RekeyTo { get; set; } Property Value Type Description Address SelectionParticipationKey Declaration public VrfPubKey SelectionParticipationKey { get; set; } Property Value Type Description VrfPubKey Sender The address of the account that pays the fee and amount. Declaration public Address Sender { get; set; } Property Value Type Description Address TransactionType Specifies the type of transaction. This value is automatically generated using any of the developer tools. Declaration public TransactionType TransactionType { get; set; } Property Value Type Description TransactionType VoteFirst Declaration public ulong VoteFirst { get; set; } Property Value Type Description UInt64 VoteKeyDilution Declaration public ulong VoteKeyDilution { get; set; } Property Value Type Description UInt64 VoteLast Declaration public ulong VoteLast { get; set; } Property Value Type Description UInt64 VoteParticipationKey Declaration public ParticipationPublicKey VoteParticipationKey { get; set; } Property Value Type Description ParticipationPublicKey XferAsset The unique ID of the asset to be transferred. Declaration public AssetIndex XferAsset { get; set; } Property Value Type Description AssetIndex Methods AppCall(Address, TransactionParams, AppIndex, OnCompletion, CompiledTeal[], Address[], UInt64[], UInt64[]) Create an AppCallTxn used to call an application. Declaration public static AppCallTxn AppCall(Address sender, TransactionParams txnParams, AppIndex applicationId, OnCompletion onComplete = OnCompletion.NoOp, CompiledTeal[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams AppIndex applicationId ID of the application being configured. OnCompletion onComplete Defines what additional actions occur with the transaction. CompiledTeal [] appArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Address [] accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. UInt64 [] foreignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. UInt64 [] foreignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Returns Type Description AppCallTxn An AppCallTxn used to call an application. AppClearState(Address, TransactionParams, AppIndex, CompiledTeal[], Address[], UInt64[], UInt64[]) Create an AppCallTxn with params to clear state with your account. Declaration public static AppCallTxn AppClearState(Address sender, TransactionParams txnParams, AppIndex applicationId, CompiledTeal[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams AppIndex applicationId ID of the application being configured. CompiledTeal [] appArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Address [] accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. UInt64 [] foreignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. UInt64 [] foreignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Returns Type Description AppCallTxn An AppCallTxn with params to clear app state with your account. AppCloseOut(Address, TransactionParams, AppIndex, CompiledTeal[], Address[], UInt64[], UInt64[]) Create an AppCallTxn with params to close out state with your account. Declaration public static AppCallTxn AppCloseOut(Address sender, TransactionParams txnParams, AppIndex applicationId, CompiledTeal[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams AppIndex applicationId ID of the application being configured. CompiledTeal [] appArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Address [] accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. UInt64 [] foreignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. UInt64 [] foreignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Returns Type Description AppCallTxn An AppCallTxn with params set to close out state with your account. AppCreate(Address, TransactionParams, CompiledTeal, CompiledTeal, StateSchema, StateSchema, UInt64) Create an AppCallTxn with params to create apps. Declaration public static AppCallTxn AppCreate(Address sender, TransactionParams txnParams, CompiledTeal approvalProgram, CompiledTeal clearStateProgram, StateSchema globalStateSchema = default(StateSchema), StateSchema localStateSchema = default(StateSchema), ulong extraProgramPages = 0UL) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams CompiledTeal approvalProgram Logic executed for every application transaction, except when on-completion is set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Approval programs may reject the transaction. CompiledTeal clearStateProgram Logic executed for application transactions with on-completion set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Clear state programs cannot reject the transaction. StateSchema globalStateSchema Holds the maximum number of global state values defined within a StateSchema object. StateSchema localStateSchema Holds the maximum number of local state values defined within a StateSchema object. UInt64 extraProgramPages Number of additional pages allocated to the application's approval and clear state programs. Each ExtraProgramPages is 2048 bytes. The sum of ApprovalProgram and ClearStateProgram may not exceed 2048*(1+ExtraProgramPages) bytes. Returns Type Description AppCallTxn An AppCallTxn with params set to create apps AppDelete(Address, TransactionParams, AppIndex, CompiledTeal[], Address[], UInt64[], UInt64[]) Create an AppCallTxn used to delete an application. Declaration public static AppCallTxn AppDelete(Address sender, TransactionParams txnParams, AppIndex applicationId, CompiledTeal[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams AppIndex applicationId ID of the application being configured. CompiledTeal [] appArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Address [] accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. UInt64 [] foreignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. UInt64 [] foreignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Returns Type Description AppCallTxn An AppCallTxn with params to delete an application. AppOptIn(Address, TransactionParams, AppIndex, CompiledTeal[], Address[], UInt64[], UInt64[]) Create an AppCallTxn used to opt in to an application. Declaration public static AppCallTxn AppOptIn(Address sender, TransactionParams txnParams, AppIndex applicationId, CompiledTeal[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams AppIndex applicationId ID of the application being configured. CompiledTeal [] appArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Address [] accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. UInt64 [] foreignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. UInt64 [] foreignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Returns Type Description AppCallTxn An AppCallTxn with params to opt in to an application. AppUpdateTxn(Address, TransactionParams, AppIndex, CompiledTeal, CompiledTeal, UInt64, CompiledTeal[], Address[], UInt64[], UInt64[]) Create an AppCallTxn used to update an application. Declaration public static AppCallTxn AppUpdateTxn(Address sender, TransactionParams txnParams, AppIndex applicationId, CompiledTeal approvalProgram = default(CompiledTeal), CompiledTeal clearStateProgram = default(CompiledTeal), ulong extraProgramPages = 0UL, CompiledTeal[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams AppIndex applicationId ID of the application being configured. CompiledTeal approvalProgram Logic executed for every application transaction, except when on-completion is set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Approval programs may reject the transaction. CompiledTeal clearStateProgram Logic executed for application transactions with on-completion set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Clear state programs cannot reject the transaction. UInt64 extraProgramPages Number of additional pages allocated to the application's approval and clear state programs. Each ExtraProgramPages is 2048 bytes. The sum of ApprovalProgram and ClearStateProgram may not exceed 2048*(1+ExtraProgramPages) bytes. CompiledTeal [] appArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Address [] accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. UInt64 [] foreignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. UInt64 [] foreignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Returns Type Description AppCallTxn An AppCallTxn with params to update an application. AssetAccept(Address, TransactionParams, AssetIndex) Create an AssetTransferTxn for opting in to an asset. Declaration public static AssetTransferTxn AssetAccept(Address sender, TransactionParams txnParams, AssetIndex xferAsset) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams AssetIndex xferAsset The unique ID of the asset to opt-in to. Returns Type Description AssetTransferTxn An AssetTransferTxn for opting in to an asset. AssetClawback(Address, TransactionParams, AssetIndex, UInt64, Address, Address) Creates a form of AssetTransferTxn to clawback assets from an account. Declaration public static AssetTransferTxn AssetClawback(Address sender, TransactionParams txnParams, AssetIndex xferAsset, ulong assetAmount, Address assetSender, Address assetReceiver) Parameters Type Name Description Address sender The sender of this transaction must be the clawback account specified in the asset configuration. TransactionParams txnParams See TransactionParams AssetIndex xferAsset The unique ID of the asset to be transferred. UInt64 assetAmount The amount of the asset to be transferred. Address assetSender The address from which the funds will be withdrawn. Address assetReceiver The recipient of the asset transfer. Returns Type Description AssetTransferTxn A form of AssetTransferTxn to clawback assets from an account AssetConfigure(Address, TransactionParams, AssetIndex, AssetParams) Create an AssetConfigTxn that will configure an asset. Declaration public static AssetConfigTxn AssetConfigure(Address sender, TransactionParams txnParams, AssetIndex assetId, AssetParams assetParams) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams AssetIndex assetId The unique asset id. AssetParams assetParams See AssetParams for all available fields. Returns Type Description AssetConfigTxn An AssetConfigTxn that will configure an asset. AssetCreate(Address, TransactionParams, AssetParams) Create an AssetConfigTxn that will create an asset. Declaration public static AssetConfigTxn AssetCreate(Address sender, TransactionParams txnParams, AssetParams assetParams) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams AssetParams assetParams See AssetParams for all available fields. Returns Type Description AssetConfigTxn An AssetConfigTxn that will create an asset. AssetDelete(Address, TransactionParams, AssetIndex) Create an AssetConfigTxn that will delete an asset. Declaration public static AssetConfigTxn AssetDelete(Address sender, TransactionParams txnParams, AssetIndex assetId) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams AssetIndex assetId The unique asset id. Returns Type Description AssetConfigTxn An AssetConfigTxn that will delete an asset. AssetFreeze(Address, TransactionParams, Address, AssetIndex, Boolean) Create an AssetFreezeTxn which is used to freeze or unfreeze an asset from transfers. Declaration public static AssetFreezeTxn AssetFreeze(Address sender, TransactionParams txnParams, Address freezeAccount, AssetIndex freezeAsset, bool assetFrozen) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams Address freezeAccount The address of the account whose asset is being frozen or unfrozen. AssetIndex freezeAsset The asset ID being frozen or unfrozen. Boolean assetFrozen True to freeze the asset. Returns Type Description AssetFreezeTxn An AssetFreezeTxn . AssetTransfer(Address, TransactionParams, AssetIndex, UInt64, Address) Create an AssetTransferTxn for transferring an asset to another account. Declaration public static AssetTransferTxn AssetTransfer(Address sender, TransactionParams txnParams, AssetIndex xferAsset, ulong assetAmount, Address assetReceiver) Parameters Type Name Description Address sender The address of the account that pays the fee and sends the asset amount. TransactionParams txnParams See TransactionParams AssetIndex xferAsset The unique ID of the asset to be transferred. UInt64 assetAmount The amount of the asset to be transferred. A zero amount transferred to self allocates that asset in the account's Asset map. Address assetReceiver Returns Type Description AssetTransferTxn An AssetTransferTxn for transferring an asset to another account. Atomic() Initialize a new Atomic Txn in the building stage. Declaration public static AtomicTxn.Building Atomic() Returns Type Description AtomicTxn.Building An Atomic Txn in the building stage. See AddTxn<T>(T) for adding transactions to this transaction group. CopyFrom(Transaction) Copy relevant fields to this transaction. Declaration public void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction A raw transaction with all possible transaction fields. CopyTo(ref Transaction) Copy this transactions fields to a Transaction which contains all possible transaction fields. Declaration public void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction A raw transaction with all possible transaction fields. Equals(Transaction) Declaration public bool Equals(Transaction other) Parameters Type Name Description Transaction other Returns Type Description Boolean KeyRegOffline(Address, TransactionParams) Register account offline for participation. Declaration public static KeyRegTxn KeyRegOffline(Address account, TransactionParams txnParams) Parameters Type Name Description Address account Account to register offline. This is the sender of the transaction. TransactionParams txnParams See TransactionParams Returns Type Description KeyRegTxn A KeyRegTxn . KeyRegOnline(Address, TransactionParams, AccountParticipation) Register account online for participation. Declaration public static KeyRegTxn KeyRegOnline(Address account, TransactionParams txnParams, AccountParticipation accountParticipation) Parameters Type Name Description Address account Account to register online. This is the sender of the transaction. TransactionParams txnParams See TransactionParams AccountParticipation accountParticipation See AccountParticipation Returns Type Description KeyRegTxn A KeyRegTxn . Payment(Address, TransactionParams, Address, MicroAlgos, Address) Create a PaymentTxn Declaration public static PaymentTxn Payment(Address sender, TransactionParams txnParams, Address receiver, MicroAlgos amount, Address closeRemainderTo = default(Address)) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams Address receiver The address of the account that receives the amount. MicroAlgos amount The total amount to be sent in microAlgos. Address closeRemainderTo When set, it indicates that the transaction is requesting that the Sender account should be closed, and all remaining funds, after the fee and amount are paid, be transferred to this address. Returns Type Description PaymentTxn A PaymentTxn ToTypedTxn<T>() Converts this transaction to a specific transaction type implementing ITransaction . Declaration public T ToTypedTxn<T>() where T : struct, ITransaction Returns Type Description T A typed transaction implementing ITransaction . Type Parameters Name Description T The type of the transaction to convert to. Implements IAssetConfigTxn IAppCallTxn IAssetFreezeTxn IAssetTransferTxn IUntypedTransaction IPaymentTxn ITransaction ITransactionHeader"
  },
  "api/AlgoSdk.TransactionExtensions.html": {
    "href": "api/AlgoSdk.TransactionExtensions.html",
    "title": "Class TransactionExtensions | Unity Algorand SDK",
    "keywords": "Class TransactionExtensions Inheritance Object TransactionExtensions Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class TransactionExtensions Methods EstimateBlockSizeBytes<T>(T) Estimate the size this transaction will take up in a block in bytes. Declaration public static int EstimateBlockSizeBytes<T>(this T txn) where T : ITransaction, IEquatable<T> Parameters Type Name Description T txn Returns Type Description Int32 Size in bytes. Type Parameters Name Description T GetId<T>(T) Calculate the ID for this transaction. Declaration public static TransactionId GetId<T>(this T txn) where T : ITransaction Parameters Type Name Description T txn Returns Type Description TransactionId A TransactionId calculated from its current parameters. Type Parameters Name Description T GetSuggestedFee<T>(T, TransactionParams) Declaration public static MicroAlgos GetSuggestedFee<T>(this T txn, TransactionParams txnParams) where T : ITransaction, IEquatable<T> Parameters Type Name Description T txn TransactionParams txnParams Returns Type Description MicroAlgos Type Parameters Name Description T ToSignatureMessage<T>(T) Declaration public static byte[] ToSignatureMessage<T>(this T txn) where T : ITransaction Parameters Type Name Description T txn Returns Type Description Byte [] Type Parameters Name Description T ToSignatureMessage<T>(T, Allocator) Serializes this transaction to a message to use for signing. Declaration public static NativeByteArray ToSignatureMessage<T>(this T txn, Allocator allocator) where T : ITransaction Parameters Type Name Description T txn Allocator allocator How memory should be allocated for the returned byte array. Returns Type Description NativeByteArray A Type Parameters Name Description T"
  },
  "api/AlgoSdk.TransactionGroup.html": {
    "href": "api/AlgoSdk.TransactionGroup.html",
    "title": "Struct TransactionGroup | Unity Algorand SDK",
    "keywords": "Struct TransactionGroup A group of transactions used to generate a group id for atomic transactions. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct TransactionGroup : IEquatable<TransactionGroup> Fields IdPrefix The prefix to use when converting this group of transactions to bytes. Declaration public static readonly byte[] IdPrefix Field Value Type Description Byte [] MaxSize Max number of allowed transactions in an atomic transaction. Declaration public const int MaxSize = 16 Field Value Type Description Int32 Txns The list of transaction ids belonging to this group. Declaration public TransactionId[] Txns Field Value Type Description TransactionId [] Methods Equals(TransactionGroup) Declaration public bool Equals(TransactionGroup other) Parameters Type Name Description TransactionGroup other Returns Type Description Boolean GetId() Hash the transaction ids contained in this group. Declaration public TransactionId GetId() Returns Type Description TransactionId A TransactionId Of(TransactionId[]) Get a transaction group using the transaction ids given. Declaration public static TransactionGroup Of(params TransactionId[] txns) Parameters Type Name Description TransactionId [] txns The transaction ids of the transactions in the group. Returns Type Description TransactionGroup A transaction group that can be used to generate a group id. Of<T0>(T0) Declaration public static TransactionGroup Of<T0>(in T0 txn0) where T0 : IEquatable<T0>, ITransaction Parameters Type Name Description T0 txn0 Returns Type Description TransactionGroup Type Parameters Name Description T0 Of<T>(T[]) Generate a TransactionGroup with the given transactions that can be used to generate a GroupId. Declaration public static TransactionGroup Of<T>(params T[] txns) where T : ITransaction, IEquatable<T> Parameters Type Name Description T[] txns The transactions to use. Returns Type Description TransactionGroup Type Parameters Name Description T The type of the transactions. Of<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9>(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9) Declaration public static TransactionGroup Of<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9>(in T0 txn0, in T1 txn1, in T2 txn2, in T3 txn3, in T4 txn4, in T5 txn5, in T6 txn6, in T7 txn7, in T8 txn8, in T9 txn9) where T0 : IEquatable<T0>, ITransaction where T1 : IEquatable<T1>, ITransaction where T2 : IEquatable<T2>, ITransaction where T3 : IEquatable<T3>, ITransaction where T4 : IEquatable<T4>, ITransaction where T5 : IEquatable<T5>, ITransaction where T6 : IEquatable<T6>, ITransaction where T7 : IEquatable<T7>, ITransaction where T8 : IEquatable<T8>, ITransaction where T9 : IEquatable<T9>, ITransaction Parameters Type Name Description T0 txn0 T1 txn1 T2 txn2 T3 txn3 T4 txn4 T5 txn5 T6 txn6 T7 txn7 T8 txn8 T9 txn9 Returns Type Description TransactionGroup Type Parameters Name Description T0 T1 T2 T3 T4 T5 T6 T7 T8 T9 Of<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) Declaration public static TransactionGroup Of<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(in T0 txn0, in T1 txn1, in T2 txn2, in T3 txn3, in T4 txn4, in T5 txn5, in T6 txn6, in T7 txn7, in T8 txn8, in T9 txn9, in T10 txn10) where T0 : IEquatable<T0>, ITransaction where T1 : IEquatable<T1>, ITransaction where T2 : IEquatable<T2>, ITransaction where T3 : IEquatable<T3>, ITransaction where T4 : IEquatable<T4>, ITransaction where T5 : IEquatable<T5>, ITransaction where T6 : IEquatable<T6>, ITransaction where T7 : IEquatable<T7>, ITransaction where T8 : IEquatable<T8>, ITransaction where T9 : IEquatable<T9>, ITransaction where T10 : IEquatable<T10>, ITransaction Parameters Type Name Description T0 txn0 T1 txn1 T2 txn2 T3 txn3 T4 txn4 T5 txn5 T6 txn6 T7 txn7 T8 txn8 T9 txn9 T10 txn10 Returns Type Description TransactionGroup Type Parameters Name Description T0 T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 Of<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) Declaration public static TransactionGroup Of<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(in T0 txn0, in T1 txn1, in T2 txn2, in T3 txn3, in T4 txn4, in T5 txn5, in T6 txn6, in T7 txn7, in T8 txn8, in T9 txn9, in T10 txn10, in T11 txn11) where T0 : IEquatable<T0>, ITransaction where T1 : IEquatable<T1>, ITransaction where T2 : IEquatable<T2>, ITransaction where T3 : IEquatable<T3>, ITransaction where T4 : IEquatable<T4>, ITransaction where T5 : IEquatable<T5>, ITransaction where T6 : IEquatable<T6>, ITransaction where T7 : IEquatable<T7>, ITransaction where T8 : IEquatable<T8>, ITransaction where T9 : IEquatable<T9>, ITransaction where T10 : IEquatable<T10>, ITransaction where T11 : IEquatable<T11>, ITransaction Parameters Type Name Description T0 txn0 T1 txn1 T2 txn2 T3 txn3 T4 txn4 T5 txn5 T6 txn6 T7 txn7 T8 txn8 T9 txn9 T10 txn10 T11 txn11 Returns Type Description TransactionGroup Type Parameters Name Description T0 T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 Of<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) Declaration public static TransactionGroup Of<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(in T0 txn0, in T1 txn1, in T2 txn2, in T3 txn3, in T4 txn4, in T5 txn5, in T6 txn6, in T7 txn7, in T8 txn8, in T9 txn9, in T10 txn10, in T11 txn11, in T12 txn12) where T0 : IEquatable<T0>, ITransaction where T1 : IEquatable<T1>, ITransaction where T2 : IEquatable<T2>, ITransaction where T3 : IEquatable<T3>, ITransaction where T4 : IEquatable<T4>, ITransaction where T5 : IEquatable<T5>, ITransaction where T6 : IEquatable<T6>, ITransaction where T7 : IEquatable<T7>, ITransaction where T8 : IEquatable<T8>, ITransaction where T9 : IEquatable<T9>, ITransaction where T10 : IEquatable<T10>, ITransaction where T11 : IEquatable<T11>, ITransaction where T12 : IEquatable<T12>, ITransaction Parameters Type Name Description T0 txn0 T1 txn1 T2 txn2 T3 txn3 T4 txn4 T5 txn5 T6 txn6 T7 txn7 T8 txn8 T9 txn9 T10 txn10 T11 txn11 T12 txn12 Returns Type Description TransactionGroup Type Parameters Name Description T0 T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 Of<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) Declaration public static TransactionGroup Of<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(in T0 txn0, in T1 txn1, in T2 txn2, in T3 txn3, in T4 txn4, in T5 txn5, in T6 txn6, in T7 txn7, in T8 txn8, in T9 txn9, in T10 txn10, in T11 txn11, in T12 txn12, in T13 txn13) where T0 : IEquatable<T0>, ITransaction where T1 : IEquatable<T1>, ITransaction where T2 : IEquatable<T2>, ITransaction where T3 : IEquatable<T3>, ITransaction where T4 : IEquatable<T4>, ITransaction where T5 : IEquatable<T5>, ITransaction where T6 : IEquatable<T6>, ITransaction where T7 : IEquatable<T7>, ITransaction where T8 : IEquatable<T8>, ITransaction where T9 : IEquatable<T9>, ITransaction where T10 : IEquatable<T10>, ITransaction where T11 : IEquatable<T11>, ITransaction where T12 : IEquatable<T12>, ITransaction where T13 : IEquatable<T13>, ITransaction Parameters Type Name Description T0 txn0 T1 txn1 T2 txn2 T3 txn3 T4 txn4 T5 txn5 T6 txn6 T7 txn7 T8 txn8 T9 txn9 T10 txn10 T11 txn11 T12 txn12 T13 txn13 Returns Type Description TransactionGroup Type Parameters Name Description T0 T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 Of<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) Declaration public static TransactionGroup Of<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(in T0 txn0, in T1 txn1, in T2 txn2, in T3 txn3, in T4 txn4, in T5 txn5, in T6 txn6, in T7 txn7, in T8 txn8, in T9 txn9, in T10 txn10, in T11 txn11, in T12 txn12, in T13 txn13, in T14 txn14) where T0 : IEquatable<T0>, ITransaction where T1 : IEquatable<T1>, ITransaction where T2 : IEquatable<T2>, ITransaction where T3 : IEquatable<T3>, ITransaction where T4 : IEquatable<T4>, ITransaction where T5 : IEquatable<T5>, ITransaction where T6 : IEquatable<T6>, ITransaction where T7 : IEquatable<T7>, ITransaction where T8 : IEquatable<T8>, ITransaction where T9 : IEquatable<T9>, ITransaction where T10 : IEquatable<T10>, ITransaction where T11 : IEquatable<T11>, ITransaction where T12 : IEquatable<T12>, ITransaction where T13 : IEquatable<T13>, ITransaction where T14 : IEquatable<T14>, ITransaction Parameters Type Name Description T0 txn0 T1 txn1 T2 txn2 T3 txn3 T4 txn4 T5 txn5 T6 txn6 T7 txn7 T8 txn8 T9 txn9 T10 txn10 T11 txn11 T12 txn12 T13 txn13 T14 txn14 Returns Type Description TransactionGroup Type Parameters Name Description T0 T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 Of<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) Declaration public static TransactionGroup Of<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(in T0 txn0, in T1 txn1, in T2 txn2, in T3 txn3, in T4 txn4, in T5 txn5, in T6 txn6, in T7 txn7, in T8 txn8, in T9 txn9, in T10 txn10, in T11 txn11, in T12 txn12, in T13 txn13, in T14 txn14, in T15 txn15) where T0 : IEquatable<T0>, ITransaction where T1 : IEquatable<T1>, ITransaction where T2 : IEquatable<T2>, ITransaction where T3 : IEquatable<T3>, ITransaction where T4 : IEquatable<T4>, ITransaction where T5 : IEquatable<T5>, ITransaction where T6 : IEquatable<T6>, ITransaction where T7 : IEquatable<T7>, ITransaction where T8 : IEquatable<T8>, ITransaction where T9 : IEquatable<T9>, ITransaction where T10 : IEquatable<T10>, ITransaction where T11 : IEquatable<T11>, ITransaction where T12 : IEquatable<T12>, ITransaction where T13 : IEquatable<T13>, ITransaction where T14 : IEquatable<T14>, ITransaction where T15 : IEquatable<T15>, ITransaction Parameters Type Name Description T0 txn0 T1 txn1 T2 txn2 T3 txn3 T4 txn4 T5 txn5 T6 txn6 T7 txn7 T8 txn8 T9 txn9 T10 txn10 T11 txn11 T12 txn12 T13 txn13 T14 txn14 T15 txn15 Returns Type Description TransactionGroup Type Parameters Name Description T0 T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 Of<T0, T1>(T0, T1) Declaration public static TransactionGroup Of<T0, T1>(in T0 txn0, in T1 txn1) where T0 : IEquatable<T0>, ITransaction where T1 : IEquatable<T1>, ITransaction Parameters Type Name Description T0 txn0 T1 txn1 Returns Type Description TransactionGroup Type Parameters Name Description T0 T1 Of<T0, T1, T2>(T0, T1, T2) Declaration public static TransactionGroup Of<T0, T1, T2>(in T0 txn0, in T1 txn1, in T2 txn2) where T0 : IEquatable<T0>, ITransaction where T1 : IEquatable<T1>, ITransaction where T2 : IEquatable<T2>, ITransaction Parameters Type Name Description T0 txn0 T1 txn1 T2 txn2 Returns Type Description TransactionGroup Type Parameters Name Description T0 T1 T2 Of<T0, T1, T2, T3>(T0, T1, T2, T3) Declaration public static TransactionGroup Of<T0, T1, T2, T3>(in T0 txn0, in T1 txn1, in T2 txn2, in T3 txn3) where T0 : IEquatable<T0>, ITransaction where T1 : IEquatable<T1>, ITransaction where T2 : IEquatable<T2>, ITransaction where T3 : IEquatable<T3>, ITransaction Parameters Type Name Description T0 txn0 T1 txn1 T2 txn2 T3 txn3 Returns Type Description TransactionGroup Type Parameters Name Description T0 T1 T2 T3 Of<T0, T1, T2, T3, T4>(T0, T1, T2, T3, T4) Declaration public static TransactionGroup Of<T0, T1, T2, T3, T4>(in T0 txn0, in T1 txn1, in T2 txn2, in T3 txn3, in T4 txn4) where T0 : IEquatable<T0>, ITransaction where T1 : IEquatable<T1>, ITransaction where T2 : IEquatable<T2>, ITransaction where T3 : IEquatable<T3>, ITransaction where T4 : IEquatable<T4>, ITransaction Parameters Type Name Description T0 txn0 T1 txn1 T2 txn2 T3 txn3 T4 txn4 Returns Type Description TransactionGroup Type Parameters Name Description T0 T1 T2 T3 T4 Of<T0, T1, T2, T3, T4, T5>(T0, T1, T2, T3, T4, T5) Declaration public static TransactionGroup Of<T0, T1, T2, T3, T4, T5>(in T0 txn0, in T1 txn1, in T2 txn2, in T3 txn3, in T4 txn4, in T5 txn5) where T0 : IEquatable<T0>, ITransaction where T1 : IEquatable<T1>, ITransaction where T2 : IEquatable<T2>, ITransaction where T3 : IEquatable<T3>, ITransaction where T4 : IEquatable<T4>, ITransaction where T5 : IEquatable<T5>, ITransaction Parameters Type Name Description T0 txn0 T1 txn1 T2 txn2 T3 txn3 T4 txn4 T5 txn5 Returns Type Description TransactionGroup Type Parameters Name Description T0 T1 T2 T3 T4 T5 Of<T0, T1, T2, T3, T4, T5, T6>(T0, T1, T2, T3, T4, T5, T6) Declaration public static TransactionGroup Of<T0, T1, T2, T3, T4, T5, T6>(in T0 txn0, in T1 txn1, in T2 txn2, in T3 txn3, in T4 txn4, in T5 txn5, in T6 txn6) where T0 : IEquatable<T0>, ITransaction where T1 : IEquatable<T1>, ITransaction where T2 : IEquatable<T2>, ITransaction where T3 : IEquatable<T3>, ITransaction where T4 : IEquatable<T4>, ITransaction where T5 : IEquatable<T5>, ITransaction where T6 : IEquatable<T6>, ITransaction Parameters Type Name Description T0 txn0 T1 txn1 T2 txn2 T3 txn3 T4 txn4 T5 txn5 T6 txn6 Returns Type Description TransactionGroup Type Parameters Name Description T0 T1 T2 T3 T4 T5 T6 Of<T0, T1, T2, T3, T4, T5, T6, T7>(T0, T1, T2, T3, T4, T5, T6, T7) Declaration public static TransactionGroup Of<T0, T1, T2, T3, T4, T5, T6, T7>(in T0 txn0, in T1 txn1, in T2 txn2, in T3 txn3, in T4 txn4, in T5 txn5, in T6 txn6, in T7 txn7) where T0 : IEquatable<T0>, ITransaction where T1 : IEquatable<T1>, ITransaction where T2 : IEquatable<T2>, ITransaction where T3 : IEquatable<T3>, ITransaction where T4 : IEquatable<T4>, ITransaction where T5 : IEquatable<T5>, ITransaction where T6 : IEquatable<T6>, ITransaction where T7 : IEquatable<T7>, ITransaction Parameters Type Name Description T0 txn0 T1 txn1 T2 txn2 T3 txn3 T4 txn4 T5 txn5 T6 txn6 T7 txn7 Returns Type Description TransactionGroup Type Parameters Name Description T0 T1 T2 T3 T4 T5 T6 T7 Of<T0, T1, T2, T3, T4, T5, T6, T7, T8>(T0, T1, T2, T3, T4, T5, T6, T7, T8) Declaration public static TransactionGroup Of<T0, T1, T2, T3, T4, T5, T6, T7, T8>(in T0 txn0, in T1 txn1, in T2 txn2, in T3 txn3, in T4 txn4, in T5 txn5, in T6 txn6, in T7 txn7, in T8 txn8) where T0 : IEquatable<T0>, ITransaction where T1 : IEquatable<T1>, ITransaction where T2 : IEquatable<T2>, ITransaction where T3 : IEquatable<T3>, ITransaction where T4 : IEquatable<T4>, ITransaction where T5 : IEquatable<T5>, ITransaction where T6 : IEquatable<T6>, ITransaction where T7 : IEquatable<T7>, ITransaction where T8 : IEquatable<T8>, ITransaction Parameters Type Name Description T0 txn0 T1 txn1 T2 txn2 T3 txn3 T4 txn4 T5 txn5 T6 txn6 T7 txn7 T8 txn8 Returns Type Description TransactionGroup Type Parameters Name Description T0 T1 T2 T3 T4 T5 T6 T7 T8"
  },
  "api/AlgoSdk.TransactionHeader.html": {
    "href": "api/AlgoSdk.TransactionHeader.html",
    "title": "Struct TransactionHeader | Unity Algorand SDK",
    "keywords": "Struct TransactionHeader Contains parameters used in all transaction types. Implements ITransactionHeader Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct TransactionHeader : IEquatable<TransactionHeader>, ITransactionHeader Remarks For the most part, this is used internally in the sdk and shouldn't be used directly. Constructors TransactionHeader(Address, TransactionType, TransactionParams) Declaration public TransactionHeader(Address sender, TransactionType transactionType, TransactionParams transactionParams) Parameters Type Name Description Address sender TransactionType transactionType TransactionParams transactionParams Properties Fee Paid by the sender to the FeeSink to prevent denial-of-service. The minimum fee on Algorand is currently 1000 microAlgos. Declaration public MicroAlgos Fee { get; set; } Property Value Type Description MicroAlgos FirstValidRound The first round for when the transaction is valid. If the transaction is sent prior to this round it will be rejected by the network. Declaration public ulong FirstValidRound { get; set; } Property Value Type Description UInt64 GenesisHash The hash of the genesis block of the network for which the transaction is valid. Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisId The human-readable string that identifies the network for the transaction. The genesis ID is found in the genesis block. Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes Group The group specifies that the transaction is part of a group and, if so, specifies the hash of the transaction group. See TransactionGroup . Declaration public TransactionId Group { get; set; } Property Value Type Description TransactionId LastValidRound The ending round for which the transaction is valid. After this round, the transaction will be rejected by the network. Declaration public ulong LastValidRound { get; set; } Property Value Type Description UInt64 Lease A lease enforces mutual exclusion of transactions. If this field is nonzero, then once the transaction is confirmed, it acquires the lease identified by the (Sender, Lease) pair of the transaction until the LastValid round passes. While this transaction possesses the lease, no other transaction specifying this lease can be confirmed. A lease is often used in the context of Algorand Smart Contracts to prevent replay attacks. Declaration public TransactionId Lease { get; set; } Property Value Type Description TransactionId Note Any data up to 1000 bytes. Declaration public byte[] Note { get; set; } Property Value Type Description Byte [] RekeyTo Specifies the authorized address. This address will be used to authorize all future transactions. Declaration public Address RekeyTo { get; set; } Property Value Type Description Address Sender The address of the account that pays the fee and amount. Declaration public Address Sender { get; set; } Property Value Type Description Address TransactionType Specifies the type of transaction. This value is automatically generated using any of the developer tools. Declaration public TransactionType TransactionType { get; set; } Property Value Type Description TransactionType Methods Equals(TransactionHeader) Declaration public bool Equals(TransactionHeader other) Parameters Type Name Description TransactionHeader other Returns Type Description Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() Implements ITransactionHeader"
  },
  "api/AlgoSdk.TransactionId.html": {
    "href": "api/AlgoSdk.TransactionId.html",
    "title": "Struct TransactionId | Unity Algorand SDK",
    "keywords": "Struct TransactionId A SHA512 256-truncated hash of a transaction's bytes. This is usually Base32 encoded with the padding chars trimmed. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct TransactionId : IByteArray, IEquatable<TransactionId> Fields SizeBytes Declaration public const int SizeBytes = default(int) Field Value Type Description Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public int Length { get; } Property Value Type Description Int32 Methods Equals(TransactionId) Declaration public bool Equals(TransactionId other) Parameters Type Name Description TransactionId other Returns Type Description Boolean FromString(String) Declaration public static TransactionId FromString(string s) Parameters Type Name Description String s Returns Type Description TransactionId FromString<T>(T) Declaration public static TransactionId FromString<T>(T fs) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Returns Type Description TransactionId Type Parameters Name Description T GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void * ToFixedString() Declaration public FixedString64Bytes ToFixedString() Returns Type Description FixedString64Bytes ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators Implicit(TransactionId to Sha512_256_Hash) Declaration public static implicit operator Sha512_256_Hash(TransactionId txid) Parameters Type Name Description TransactionId txid Returns Type Description Sha512_256_Hash Implicit(TransactionId to String) Declaration public static implicit operator string (TransactionId txId) Parameters Type Name Description TransactionId txId Returns Type Description String Implicit(Sha512_256_Hash to TransactionId) Declaration public static implicit operator TransactionId(Sha512_256_Hash hash) Parameters Type Name Description Sha512_256_Hash hash Returns Type Description TransactionId Implicit(String to TransactionId) Declaration public static implicit operator TransactionId(string s) Parameters Type Name Description String s Returns Type Description TransactionId"
  },
  "api/AlgoSdk.TransactionParams.html": {
    "href": "api/AlgoSdk.TransactionParams.html",
    "title": "Struct TransactionParams | Unity Algorand SDK",
    "keywords": "Struct TransactionParams Params used for setting all transactions. Contains fee, genesis info, and round constraints. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct TransactionParams : IEquatable<TransactionParams> Fields ConsensusVersion Indicates the consensus protocol version as of LastRound . Declaration public string ConsensusVersion Field Value Type Description String Fee Fee is the suggested transaction fee in units of micro-Algos per byte. Fee may fall to zero but transactions must still have a fee of at least MinFee for the current network protocol. Declaration public MicroAlgos Fee Field Value Type Description MicroAlgos FirstValidRound The last valid round for a transaction. Declaration public ulong FirstValidRound Field Value Type Description UInt64 GenesisHash The hash of the genesis block. Declaration public GenesisHash GenesisHash Field Value Type Description GenesisHash GenesisId An ID listed in the genesis block. Declaration public FixedString32Bytes GenesisId Field Value Type Description FixedString32Bytes LastValidRound The first valid round for a transaction. Declaration public ulong LastValidRound Field Value Type Description UInt64 MinFee The minimum transaction fee (not per byte) required for the txn to validate for the current network protocol. Declaration public MicroAlgos MinFee Field Value Type Description MicroAlgos Properties FlatFee Whether to interpret Fee as microalgos per byte, or as a flat amount of microalgos. Declaration public bool FlatFee { get; set; } Property Value Type Description Boolean LastRound Indicates the last round seen by the node Declaration public ulong LastRound { get; set; } Property Value Type Description UInt64 Methods Equals(TransactionParams) Declaration public bool Equals(TransactionParams other) Parameters Type Name Description TransactionParams other Returns Type Description Boolean"
  },
  "api/AlgoSdk.TransactionSignature.html": {
    "href": "api/AlgoSdk.TransactionSignature.html",
    "title": "Struct TransactionSignature | Unity Algorand SDK",
    "keywords": "Struct TransactionSignature An untyped wrapper around different transaction signatures. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct TransactionSignature : IEquatable<TransactionSignature> Fields LogicSig Declaration public LogicSig LogicSig Field Value Type Description LogicSig Multisig Declaration public MultisigSig Multisig Field Value Type Description MultisigSig Sig Declaration public Sig Sig Field Value Type Description Sig Methods Equals(TransactionSignature) Declaration public bool Equals(TransactionSignature other) Parameters Type Name Description TransactionSignature other Returns Type Description Boolean Operators Implicit(LogicSig to TransactionSignature) Declaration public static implicit operator TransactionSignature(LogicSig lsig) Parameters Type Name Description LogicSig lsig Returns Type Description TransactionSignature Implicit(MultisigSig to TransactionSignature) Declaration public static implicit operator TransactionSignature(MultisigSig msig) Parameters Type Name Description MultisigSig msig Returns Type Description TransactionSignature Implicit(Sig to TransactionSignature) Declaration public static implicit operator TransactionSignature(Sig sig) Parameters Type Name Description Sig sig Returns Type Description TransactionSignature"
  },
  "api/AlgoSdk.TransactionType.html": {
    "href": "api/AlgoSdk.TransactionType.html",
    "title": "Enum TransactionType | Unity Algorand SDK",
    "keywords": "Enum TransactionType An enum representing the type of transaction. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum TransactionType : byte Fields Name Description ApplicationCall AssetConfiguration AssetFreeze AssetTransfer Count KeyRegistration None Payment"
  },
  "api/AlgoSdk.TransactionTypeExtensions.html": {
    "href": "api/AlgoSdk.TransactionTypeExtensions.html",
    "title": "Class TransactionTypeExtensions | Unity Algorand SDK",
    "keywords": "Class TransactionTypeExtensions Inheritance Object TransactionTypeExtensions Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class TransactionTypeExtensions Fields TypeToString Declaration public static readonly string[] TypeToString Field Value Type Description String [] Methods ToFixedString(TransactionType) Declaration public static FixedString32Bytes ToFixedString(this TransactionType txType) Parameters Type Name Description TransactionType txType Returns Type Description FixedString32Bytes ToOptionalFixedString(TransactionType) Declaration public static Optional<FixedString32Bytes> ToOptionalFixedString(this TransactionType txType) Parameters Type Name Description TransactionType txType Returns Type Description Optional < FixedString32Bytes >"
  },
  "api/AlgoSdk.TxnFlags.html": {
    "href": "api/AlgoSdk.TxnFlags.html",
    "title": "Enum TxnFlags | Unity Algorand SDK",
    "keywords": "Enum TxnFlags Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum TxnFlags : ushort Fields Name Description All None Txn0 Txn1 Txn10 Txn11 Txn12 Txn13 Txn14 Txn15 Txn2 Txn3 Txn4 Txn5 Txn6 Txn7 Txn8 Txn9"
  },
  "api/AlgoSdk.TxnIndices.Enumerator.html": {
    "href": "api/AlgoSdk.TxnIndices.Enumerator.html",
    "title": "Struct TxnIndices.Enumerator | Unity Algorand SDK",
    "keywords": "Struct TxnIndices.Enumerator Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Enumerator : IEnumerator<int>, IDisposable, IEnumerator Constructors Enumerator(TxnFlags) Declaration public Enumerator(TxnFlags indices) Parameters Type Name Description TxnFlags indices Properties Current Declaration public int Current { get; } Property Value Type Description Int32 Methods Dispose() Declaration public void Dispose() MoveNext() Declaration public bool MoveNext() Returns Type Description Boolean Reset() Declaration public void Reset()"
  },
  "api/AlgoSdk.TxnIndices.html": {
    "href": "api/AlgoSdk.TxnIndices.html",
    "title": "Struct TxnIndices | Unity Algorand SDK",
    "keywords": "Struct TxnIndices Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct TxnIndices : IEnumerable<int>, IEnumerable Fields MaxIndex Declaration public const int MaxIndex = 15 Field Value Type Description Int32 MinIndex Declaration public const int MinIndex = 0 Field Value Type Description Int32 Properties All Declaration public static TxnIndices All { get; } Property Value Type Description TxnIndices None Declaration public static TxnIndices None { get; } Property Value Type Description TxnIndices Methods AllBut(Int32, Int32) Declaration public static TxnIndices AllBut(int x0, int x1) Parameters Type Name Description Int32 x0 Int32 x1 Returns Type Description TxnIndices AllBut(Int32, Int32, Int32) Declaration public static TxnIndices AllBut(int x0, int x1, int x2) Parameters Type Name Description Int32 x0 Int32 x1 Int32 x2 Returns Type Description TxnIndices AllBut(Int32, Int32, Int32, Int32) Declaration public static TxnIndices AllBut(int x0, int x1, int x2, int x3) Parameters Type Name Description Int32 x0 Int32 x1 Int32 x2 Int32 x3 Returns Type Description TxnIndices AllBut(Int32, Int32, Int32, Int32, Int32) Declaration public static TxnIndices AllBut(int x0, int x1, int x2, int x3, int x4) Parameters Type Name Description Int32 x0 Int32 x1 Int32 x2 Int32 x3 Int32 x4 Returns Type Description TxnIndices AllBut(Int32, Int32, Int32, Int32, Int32, Int32) Declaration public static TxnIndices AllBut(int x0, int x1, int x2, int x3, int x4, int x5) Parameters Type Name Description Int32 x0 Int32 x1 Int32 x2 Int32 x3 Int32 x4 Int32 x5 Returns Type Description TxnIndices AllBut(Int32, Int32, Int32, Int32, Int32, Int32, Int32) Declaration public static TxnIndices AllBut(int x0, int x1, int x2, int x3, int x4, int x5, int x6) Parameters Type Name Description Int32 x0 Int32 x1 Int32 x2 Int32 x3 Int32 x4 Int32 x5 Int32 x6 Returns Type Description TxnIndices AllBut(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32) Declaration public static TxnIndices AllBut(int x0, int x1, int x2, int x3, int x4, int x5, int x6, int x7) Parameters Type Name Description Int32 x0 Int32 x1 Int32 x2 Int32 x3 Int32 x4 Int32 x5 Int32 x6 Int32 x7 Returns Type Description TxnIndices AllBut(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32) Declaration public static TxnIndices AllBut(int x0, int x1, int x2, int x3, int x4, int x5, int x6, int x7, int x8) Parameters Type Name Description Int32 x0 Int32 x1 Int32 x2 Int32 x3 Int32 x4 Int32 x5 Int32 x6 Int32 x7 Int32 x8 Returns Type Description TxnIndices AllBut(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32) Declaration public static TxnIndices AllBut(int x0, int x1, int x2, int x3, int x4, int x5, int x6, int x7, int x8, int x9) Parameters Type Name Description Int32 x0 Int32 x1 Int32 x2 Int32 x3 Int32 x4 Int32 x5 Int32 x6 Int32 x7 Int32 x8 Int32 x9 Returns Type Description TxnIndices AllBut(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32) Declaration public static TxnIndices AllBut(int x0, int x1, int x2, int x3, int x4, int x5, int x6, int x7, int x8, int x9, int x10) Parameters Type Name Description Int32 x0 Int32 x1 Int32 x2 Int32 x3 Int32 x4 Int32 x5 Int32 x6 Int32 x7 Int32 x8 Int32 x9 Int32 x10 Returns Type Description TxnIndices AllBut(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32) Declaration public static TxnIndices AllBut(int x0, int x1, int x2, int x3, int x4, int x5, int x6, int x7, int x8, int x9, int x10, int x11) Parameters Type Name Description Int32 x0 Int32 x1 Int32 x2 Int32 x3 Int32 x4 Int32 x5 Int32 x6 Int32 x7 Int32 x8 Int32 x9 Int32 x10 Int32 x11 Returns Type Description TxnIndices AllBut(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32) Declaration public static TxnIndices AllBut(int x0, int x1, int x2, int x3, int x4, int x5, int x6, int x7, int x8, int x9, int x10, int x11, int x12) Parameters Type Name Description Int32 x0 Int32 x1 Int32 x2 Int32 x3 Int32 x4 Int32 x5 Int32 x6 Int32 x7 Int32 x8 Int32 x9 Int32 x10 Int32 x11 Int32 x12 Returns Type Description TxnIndices AllBut(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32) Declaration public static TxnIndices AllBut(int x0, int x1, int x2, int x3, int x4, int x5, int x6, int x7, int x8, int x9, int x10, int x11, int x12, int x13) Parameters Type Name Description Int32 x0 Int32 x1 Int32 x2 Int32 x3 Int32 x4 Int32 x5 Int32 x6 Int32 x7 Int32 x8 Int32 x9 Int32 x10 Int32 x11 Int32 x12 Int32 x13 Returns Type Description TxnIndices AllBut(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32) Declaration public static TxnIndices AllBut(int x0, int x1, int x2, int x3, int x4, int x5, int x6, int x7, int x8, int x9, int x10, int x11, int x12, int x13, int x14) Parameters Type Name Description Int32 x0 Int32 x1 Int32 x2 Int32 x3 Int32 x4 Int32 x5 Int32 x6 Int32 x7 Int32 x8 Int32 x9 Int32 x10 Int32 x11 Int32 x12 Int32 x13 Int32 x14 Returns Type Description TxnIndices Count() Declaration public int Count() Returns Type Description Int32 GetEnumerator() Declaration public TxnIndices.Enumerator GetEnumerator() Returns Type Description TxnIndices.Enumerator Select(Int32) Declaration public static TxnIndices Select(int x) Parameters Type Name Description Int32 x Returns Type Description TxnIndices Select(Int32, Int32) Declaration public static TxnIndices Select(int x0, int x1) Parameters Type Name Description Int32 x0 Int32 x1 Returns Type Description TxnIndices Select(Int32, Int32, Int32) Declaration public static TxnIndices Select(int x0, int x1, int x2) Parameters Type Name Description Int32 x0 Int32 x1 Int32 x2 Returns Type Description TxnIndices Select(Int32, Int32, Int32, Int32) Declaration public static TxnIndices Select(int x0, int x1, int x2, int x3) Parameters Type Name Description Int32 x0 Int32 x1 Int32 x2 Int32 x3 Returns Type Description TxnIndices Select(Int32, Int32, Int32, Int32, Int32) Declaration public static TxnIndices Select(int x0, int x1, int x2, int x3, int x4) Parameters Type Name Description Int32 x0 Int32 x1 Int32 x2 Int32 x3 Int32 x4 Returns Type Description TxnIndices Select(Int32, Int32, Int32, Int32, Int32, Int32) Declaration public static TxnIndices Select(int x0, int x1, int x2, int x3, int x4, int x5) Parameters Type Name Description Int32 x0 Int32 x1 Int32 x2 Int32 x3 Int32 x4 Int32 x5 Returns Type Description TxnIndices Select(Int32, Int32, Int32, Int32, Int32, Int32, Int32) Declaration public static TxnIndices Select(int x0, int x1, int x2, int x3, int x4, int x5, int x6) Parameters Type Name Description Int32 x0 Int32 x1 Int32 x2 Int32 x3 Int32 x4 Int32 x5 Int32 x6 Returns Type Description TxnIndices Select(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32) Declaration public static TxnIndices Select(int x0, int x1, int x2, int x3, int x4, int x5, int x6, int x7) Parameters Type Name Description Int32 x0 Int32 x1 Int32 x2 Int32 x3 Int32 x4 Int32 x5 Int32 x6 Int32 x7 Returns Type Description TxnIndices Select(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32) Declaration public static TxnIndices Select(int x0, int x1, int x2, int x3, int x4, int x5, int x6, int x7, int x8) Parameters Type Name Description Int32 x0 Int32 x1 Int32 x2 Int32 x3 Int32 x4 Int32 x5 Int32 x6 Int32 x7 Int32 x8 Returns Type Description TxnIndices Select(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32) Declaration public static TxnIndices Select(int x0, int x1, int x2, int x3, int x4, int x5, int x6, int x7, int x8, int x9) Parameters Type Name Description Int32 x0 Int32 x1 Int32 x2 Int32 x3 Int32 x4 Int32 x5 Int32 x6 Int32 x7 Int32 x8 Int32 x9 Returns Type Description TxnIndices Select(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32) Declaration public static TxnIndices Select(int x0, int x1, int x2, int x3, int x4, int x5, int x6, int x7, int x8, int x9, int x10) Parameters Type Name Description Int32 x0 Int32 x1 Int32 x2 Int32 x3 Int32 x4 Int32 x5 Int32 x6 Int32 x7 Int32 x8 Int32 x9 Int32 x10 Returns Type Description TxnIndices Select(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32) Declaration public static TxnIndices Select(int x0, int x1, int x2, int x3, int x4, int x5, int x6, int x7, int x8, int x9, int x10, int x11) Parameters Type Name Description Int32 x0 Int32 x1 Int32 x2 Int32 x3 Int32 x4 Int32 x5 Int32 x6 Int32 x7 Int32 x8 Int32 x9 Int32 x10 Int32 x11 Returns Type Description TxnIndices Select(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32) Declaration public static TxnIndices Select(int x0, int x1, int x2, int x3, int x4, int x5, int x6, int x7, int x8, int x9, int x10, int x11, int x12) Parameters Type Name Description Int32 x0 Int32 x1 Int32 x2 Int32 x3 Int32 x4 Int32 x5 Int32 x6 Int32 x7 Int32 x8 Int32 x9 Int32 x10 Int32 x11 Int32 x12 Returns Type Description TxnIndices Select(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32) Declaration public static TxnIndices Select(int x0, int x1, int x2, int x3, int x4, int x5, int x6, int x7, int x8, int x9, int x10, int x11, int x12, int x13) Parameters Type Name Description Int32 x0 Int32 x1 Int32 x2 Int32 x3 Int32 x4 Int32 x5 Int32 x6 Int32 x7 Int32 x8 Int32 x9 Int32 x10 Int32 x11 Int32 x12 Int32 x13 Returns Type Description TxnIndices Select(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32) Declaration public static TxnIndices Select(int x0, int x1, int x2, int x3, int x4, int x5, int x6, int x7, int x8, int x9, int x10, int x11, int x12, int x13, int x14) Parameters Type Name Description Int32 x0 Int32 x1 Int32 x2 Int32 x3 Int32 x4 Int32 x5 Int32 x6 Int32 x7 Int32 x8 Int32 x9 Int32 x10 Int32 x11 Int32 x12 Int32 x13 Int32 x14 Returns Type Description TxnIndices Operators BitwiseAnd(TxnIndices, TxnIndices) Declaration public static TxnIndices operator &(TxnIndices x, TxnIndices y) Parameters Type Name Description TxnIndices x TxnIndices y Returns Type Description TxnIndices BitwiseOr(TxnIndices, TxnIndices) Declaration public static TxnIndices operator |(TxnIndices x, TxnIndices y) Parameters Type Name Description TxnIndices x TxnIndices y Returns Type Description TxnIndices ExclusiveOr(TxnIndices, TxnIndices) Declaration public static TxnIndices operator ^(TxnIndices x, TxnIndices y) Parameters Type Name Description TxnIndices x TxnIndices y Returns Type Description TxnIndices Explicit(TxnIndices to Int32) Declaration public static explicit operator int (TxnIndices txnIndices) Parameters Type Name Description TxnIndices txnIndices Returns Type Description Int32 Implicit(TxnFlags to TxnIndices) Declaration public static implicit operator TxnIndices(TxnFlags flags) Parameters Type Name Description TxnFlags flags Returns Type Description TxnIndices Implicit(TxnIndices to TxnFlags) Declaration public static implicit operator TxnFlags(TxnIndices txnIndices) Parameters Type Name Description TxnIndices txnIndices Returns Type Description TxnFlags"
  },
  "api/AlgoSdk.Utf8StringExtensions.html": {
    "href": "api/AlgoSdk.Utf8StringExtensions.html",
    "title": "Class Utf8StringExtensions | Unity Algorand SDK",
    "keywords": "Class Utf8StringExtensions Inheritance Object Utf8StringExtensions Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class Utf8StringExtensions Methods Append<T>(ref T, Boolean) Declaration public static FormatError Append<T>(this ref T fs, bool input) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Boolean input Returns Type Description FormatError Type Parameters Name Description T Append<T>(ref T, UInt64) Declaration public static FormatError Append<T>(this ref T fs, ulong input) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs UInt64 input Returns Type Description FormatError Type Parameters Name Description T ToByteArray<T>(T) Declaration public static byte[] ToByteArray<T>(this T text) where T : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description T text Returns Type Description Byte [] Type Parameters Name Description T"
  },
  "api/AlgoSdk.ValueDelta.html": {
    "href": "api/AlgoSdk.ValueDelta.html",
    "title": "Struct ValueDelta | Unity Algorand SDK",
    "keywords": "Struct ValueDelta Represents a TEAL value delta. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ValueDelta : IEquatable<ValueDelta> Fields Action Declaration public DeltaAction Action Field Value Type Description DeltaAction Bytes Declaration public TealBytes Bytes Field Value Type Description TealBytes UInt Declaration public ulong UInt Field Value Type Description UInt64 Methods Equals(ValueDelta) Declaration public bool Equals(ValueDelta other) Parameters Type Name Description ValueDelta other Returns Type Description Boolean"
  },
  "api/AlgoSdk.ValueDeltaKeyValue.html": {
    "href": "api/AlgoSdk.ValueDeltaKeyValue.html",
    "title": "Struct ValueDeltaKeyValue | Unity Algorand SDK",
    "keywords": "Struct ValueDeltaKeyValue Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ValueDeltaKeyValue : IEquatable<ValueDeltaKeyValue> Properties Key Declaration public FixedString64Bytes Key { get; set; } Property Value Type Description FixedString64Bytes Value Declaration public ValueDelta Value { get; set; } Property Value Type Description ValueDelta Methods Equals(ValueDeltaKeyValue) Declaration public bool Equals(ValueDeltaKeyValue other) Parameters Type Name Description ValueDeltaKeyValue other Returns Type Description Boolean"
  },
  "api/AlgoSdk.VrfPubKey.html": {
    "href": "api/AlgoSdk.VrfPubKey.html",
    "title": "Struct VrfPubKey | Unity Algorand SDK",
    "keywords": "Struct VrfPubKey 32 byte public key required for SelectionParticipationKey Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct VrfPubKey : IEquatable<VrfPubKey>, IByteArray Fields SizeBytes Declaration public const int SizeBytes = 32 Field Value Type Description Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public int Length { get; } Property Value Type Description Int32 Methods Equals(VrfPubKey) Declaration public bool Equals(VrfPubKey other) Parameters Type Name Description VrfPubKey other Returns Type Description Boolean GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void *"
  },
  "api/AlgoSdk.WalletConnect.AesCipher.html": {
    "href": "api/AlgoSdk.WalletConnect.AesCipher.html",
    "title": "Class AesCipher | Unity Algorand SDK",
    "keywords": "Class AesCipher Inheritance Object AesCipher Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public static class AesCipher Methods DecryptWithKey(Byte[], EncryptedPayload) Declaration public static byte[] DecryptWithKey(byte[] key, EncryptedPayload encryptedData) Parameters Type Name Description Byte [] key EncryptedPayload encryptedData Returns Type Description Byte [] EncryptWithKey(Byte[], Byte[]) Declaration public static EncryptedPayload EncryptWithKey(byte[] key, byte[] data) Parameters Type Name Description Byte [] key Byte [] data Returns Type Description EncryptedPayload"
  },
  "api/AlgoSdk.WalletConnect.AlgorandWalletConnectSession.html": {
    "href": "api/AlgoSdk.WalletConnect.AlgorandWalletConnectSession.html",
    "title": "Class AlgorandWalletConnectSession | Unity Algorand SDK",
    "keywords": "Class AlgorandWalletConnectSession Inheritance Object AlgorandWalletConnectSession Implements IActiveWalletConnectSession < AlgorandWalletConnectSession > IWalletConnectSessionData Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public class AlgorandWalletConnectSession : IActiveWalletConnectSession<AlgorandWalletConnectSession>, IWalletConnectSessionData, IDisposable Constructors AlgorandWalletConnectSession(ClientMeta, String) Create a new session. Declaration public AlgorandWalletConnectSession(ClientMeta clientMeta, string bridgeUrl = null) Parameters Type Name Description ClientMeta clientMeta The metadata of the Dapp. String bridgeUrl An optional WalletConnect bridgeurl. e.g. https://bridge.walletconnect.org AlgorandWalletConnectSession(SavedSession) Continue an existing session. Declaration public AlgorandWalletConnectSession(SavedSession savedSession) Parameters Type Name Description SavedSession savedSession A previously existing session. Properties Accounts The accounts that the Wallet manages. Declaration public Address[] Accounts { get; } Property Value Type Description Address [] BridgeUrl The bridge used to communicate with the session. Declaration public string BridgeUrl { get; } Property Value Type Description String ChainId The Identifier of the blockchain connected. Declaration public int ChainId { get; } Property Value Type Description Int32 ClientId The UUID of this client. Declaration public string ClientId { get; } Property Value Type Description String ConnectionStatus Declaration public AlgorandWalletConnectSession.Status ConnectionStatus { get; } Property Value Type Description AlgorandWalletConnectSession.Status DappMeta Meta information about the Dapp connected in this session. Declaration public ClientMeta DappMeta { get; } Property Value Type Description ClientMeta HandshakeId Declaration public ulong HandshakeId { get; } Property Value Type Description UInt64 HandshakeTopic The current handshake topic if this session is handshaking. Declaration public string HandshakeTopic { get; set; } Property Value Type Description String Key The key used to encrypt/decrypt the payloads. Declaration public Hex Key { get; } Property Value Type Description Hex NetworkId The ID of the network connected (test, beta, main, ...) Declaration public int NetworkId { get; } Property Value Type Description Int32 OnResponseReceived Occurs when this session received a JsonRpcResponse from a request that was made. Declaration public UnityEvent<JsonRpcResponse> OnResponseReceived { get; } Property Value Type Description UnityEvent < JsonRpcResponse > OnSessionConnect Occurs when handshake succeeds and wallet is connected. Declaration public UnityEvent<AlgorandWalletConnectSession> OnSessionConnect { get; } Property Value Type Description UnityEvent < AlgorandWalletConnectSession > OnSessionDisconnect Occurs when wallet no longer approves connection. Declaration public UnityEvent<string> OnSessionDisconnect { get; } Property Value Type Description UnityEvent < String > OnSessionUpdate Occurs when wallet updates addresses or metadata information. Declaration public UnityEvent<WalletConnectSessionData> OnSessionUpdate { get; } Property Value Type Description UnityEvent < WalletConnectSessionData > PeerId The UUID of the connecting peer. Declaration public string PeerId { get; } Property Value Type Description String Version Declaration public string Version { get; } Property Value Type Description String WalletMeta Meta information about the Wallet connected in this session. Declaration public ClientMeta WalletMeta { get; } Property Value Type Description ClientMeta Methods Disconnect(String) Disconnect from a Connected or RequestingConnection session. Declaration public void Disconnect(string reason = null) Parameters Type Name Description String reason An optional reason to inform the web socket client. Dispose() Declaration public void Dispose() Save() Save the current session's state. Declaration public SavedSession Save() Returns Type Description SavedSession A SavedSession that can be used for continuing an existing session later. SignTransactions(WalletTransaction[], SignTxnsOpts, CancellationToken) Sign a group of transactions. Declaration public UniTask<Either<SignTxnsError, byte[][]>> SignTransactions(WalletTransaction[] transactions, SignTxnsOpts options = default(SignTxnsOpts), CancellationToken cancellationToken = null) Parameters Type Name Description WalletTransaction [] transactions The atomic transaction group of [1,16] transactions. Contains information about how to sign each transaction, and which ones to sign. SignTxnsOpts options Optional sign transaction options. CancellationToken cancellationToken Optional cancellation token used for interrupting this request. It's recommended to use for UniTask. https://github.com/Cysharp/UniTask#timeout-handling Returns Type Description UniTask < Either < SignTxnsError , Byte [][]>> Either the result of the request or a IJsonRpcError if the request was invalid. The result is an array of the same length as the number of transactions provided in . For every index in this result, the value is StartConnection(CancellationToken) Begin the handshake process for a new WalletConnect session. Declaration public UniTask<HandshakeUrl> StartConnection(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken An optional for cancelling this request early. Returns Type Description UniTask < HandshakeUrl > A WalletConnect Standard URI format (EIP-1328) used for handshaking. WaitForConnectionApproval(CancellationToken) Wait for an approval response from the handshake. Declaration public UniTask WaitForConnectionApproval(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken An optional that can be used for things like timeouts. Returns Type Description UniTask Implements IActiveWalletConnectSession<TSession> IWalletConnectSessionData"
  },
  "api/AlgoSdk.WalletConnect.AlgorandWalletConnectSession.Status.html": {
    "href": "api/AlgoSdk.WalletConnect.AlgorandWalletConnectSession.Status.html",
    "title": "Enum AlgorandWalletConnectSession.Status | Unity Algorand SDK",
    "keywords": "Enum AlgorandWalletConnectSession.Status Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public enum Status Fields Name Description Connected NoConnection RequestingConnection Unknown"
  },
  "api/AlgoSdk.WalletConnect.AppEntry.AppLinkingScheme.html": {
    "href": "api/AlgoSdk.WalletConnect.AppEntry.AppLinkingScheme.html",
    "title": "Struct AppEntry.AppLinkingScheme | Unity Algorand SDK",
    "keywords": "Struct AppEntry.AppLinkingScheme Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct AppLinkingScheme Fields Native The prefix used when using a native link. Declaration public string Native Field Value Type Description String Universal The url used when using a universal link. Declaration public string Universal Field Value Type Description String"
  },
  "api/AlgoSdk.WalletConnect.AppEntry.AppMetadata.AppColors.html": {
    "href": "api/AlgoSdk.WalletConnect.AppEntry.AppMetadata.AppColors.html",
    "title": "Struct AppEntry.AppMetadata.AppColors | Unity Algorand SDK",
    "keywords": "Struct AppEntry.AppMetadata.AppColors Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct AppColors Fields Primary Declaration public Color Primary Field Value Type Description Color Secondary Declaration public Color Secondary Field Value Type Description Color"
  },
  "api/AlgoSdk.WalletConnect.AppEntry.AppMetadata.html": {
    "href": "api/AlgoSdk.WalletConnect.AppEntry.AppMetadata.html",
    "title": "Struct AppEntry.AppMetadata | Unity Algorand SDK",
    "keywords": "Struct AppEntry.AppMetadata Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct AppMetadata Fields Colors Primary and secondary colors of this App. Declaration public AppEntry.AppMetadata.AppColors Colors Field Value Type Description AppEntry.AppMetadata.AppColors ShortName A short name of this app if it has one -- useful on smaller screens. Declaration public string ShortName Field Value Type Description String"
  },
  "api/AlgoSdk.WalletConnect.AppEntry.AppUrls.html": {
    "href": "api/AlgoSdk.WalletConnect.AppEntry.AppUrls.html",
    "title": "Struct AppEntry.AppUrls | Unity Algorand SDK",
    "keywords": "Struct AppEntry.AppUrls Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct AppUrls Fields Android Declaration public string Android Field Value Type Description String Browser Declaration public string Browser Field Value Type Description String Ios Declaration public string Ios Field Value Type Description String Linux Declaration public string Linux Field Value Type Description String Mac Declaration public string Mac Field Value Type Description String Windows Declaration public string Windows Field Value Type Description String"
  },
  "api/AlgoSdk.WalletConnect.AppEntry.html": {
    "href": "api/AlgoSdk.WalletConnect.AppEntry.html",
    "title": "Class AppEntry | Unity Algorand SDK",
    "keywords": "Class AppEntry Contains information about an app that supports WalletConnect Inheritance Object AppEntry Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public class AppEntry Fields App The locations of this app on available platforms. Declaration public AppEntry.AppUrls App Field Value Type Description AppEntry.AppUrls Chains This App's supported blockchains Declaration public string[] Chains Field Value Type Description String [] Desktop Contains information about native and universal linking on desktop. Declaration public AppEntry.AppLinkingScheme Desktop Field Value Type Description AppEntry.AppLinkingScheme HomePage Homepage for this app. Declaration public string HomePage Field Value Type Description String Id Unique id of this app Declaration public string Id Field Value Type Description String ImageId A unique id for this App's image, useful for caching. Declaration public string ImageId Field Value Type Description String ImageUrl ImageUrls for downloading this App's image. Declaration public AppEntry.ImageUrls ImageUrl Field Value Type Description AppEntry.ImageUrls Metadata Additional Metadata that can be useful when showing the app. Declaration public AppEntry.AppMetadata Metadata Field Value Type Description AppEntry.AppMetadata Mobile Contains information about ios native and universal linking. Declaration public AppEntry.AppLinkingScheme Mobile Field Value Type Description AppEntry.AppLinkingScheme Name Name of this app. Declaration public string Name Field Value Type Description String Methods LaunchForConnect(HandshakeUrl) Launch this app natively to approve a WalletConnect session. Declaration public void LaunchForConnect(HandshakeUrl handshake) Parameters Type Name Description HandshakeUrl handshake The handshake used for the session. LaunchForSigning(String) Launch this app natively to allow users to approve a signing request from a WalletConnect session. Declaration public void LaunchForSigning(string walletConnectVersion = \"1\") Parameters Type Name Description String walletConnectVersion The WalletConnect version of your session."
  },
  "api/AlgoSdk.WalletConnect.AppEntry.ImageUrls.html": {
    "href": "api/AlgoSdk.WalletConnect.AppEntry.ImageUrls.html",
    "title": "Struct AppEntry.ImageUrls | Unity Algorand SDK",
    "keywords": "Struct AppEntry.ImageUrls Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct ImageUrls Fields Large Declaration public string Large Field Value Type Description String Medium Declaration public string Medium Field Value Type Description String Small Declaration public string Small Field Value Type Description String"
  },
  "api/AlgoSdk.WalletConnect.ClientMeta.html": {
    "href": "api/AlgoSdk.WalletConnect.ClientMeta.html",
    "title": "Struct ClientMeta | Unity Algorand SDK",
    "keywords": "Struct ClientMeta Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct ClientMeta : IEquatable<ClientMeta> Fields Description Declaration public string Description Field Value Type Description String IconUrls Declaration public string[] IconUrls Field Value Type Description String [] Name Declaration public string Name Field Value Type Description String Url Declaration public string Url Field Value Type Description String Methods Equals(ClientMeta) Declaration public bool Equals(ClientMeta other) Parameters Type Name Description ClientMeta other Returns Type Description Boolean"
  },
  "api/AlgoSdk.WalletConnect.DefaultBridge.html": {
    "href": "api/AlgoSdk.WalletConnect.DefaultBridge.html",
    "title": "Class DefaultBridge | Unity Algorand SDK",
    "keywords": "Class DefaultBridge Inheritance Object DefaultBridge Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public static class DefaultBridge Fields BridgeUrls Declaration public static readonly string[] BridgeUrls Field Value Type Description String [] Domain Declaration public const string Domain = \"walletconnect.org\" Field Value Type Description String MainBridge Declaration public static string MainBridge Field Value Type Description String Methods GetRandomBridgeUrl() Declaration public static string GetRandomBridgeUrl() Returns Type Description String"
  },
  "api/AlgoSdk.WalletConnect.EncryptedPayload.html": {
    "href": "api/AlgoSdk.WalletConnect.EncryptedPayload.html",
    "title": "Struct EncryptedPayload | Unity Algorand SDK",
    "keywords": "Struct EncryptedPayload Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct EncryptedPayload Fields Data Declaration public Hex Data Field Value Type Description Hex Iv Declaration public Hex Iv Field Value Type Description Hex Signature Declaration public Hex Signature Field Value Type Description Hex Methods Sign(Byte[]) Declaration public byte[] Sign(byte[] key) Parameters Type Name Description Byte [] key Returns Type Description Byte [] ValidateHmac(Byte[]) Declaration public void ValidateHmac(byte[] key) Parameters Type Name Description Byte [] key Operators Implicit((Byte[] iv, Byte[] encryptedData) to EncryptedPayload) Declaration public static implicit operator EncryptedPayload((byte[] iv, byte[] encryptedData) encryptResult) Parameters Type Name Description ValueTuple < Byte [], Byte []> encryptResult Returns Type Description EncryptedPayload"
  },
  "api/AlgoSdk.WalletConnect.HandshakeUrl.html": {
    "href": "api/AlgoSdk.WalletConnect.HandshakeUrl.html",
    "title": "Struct HandshakeUrl | Unity Algorand SDK",
    "keywords": "Struct HandshakeUrl An HTTP-escaped Url for initiating the walletconnect connection. Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct HandshakeUrl Remarks Can be converted into a QrCode or used to deeplink on mobile to supported wallets. Constructors HandshakeUrl(String, String, String, Hex) Declaration public HandshakeUrl(string topic, string version, string bridgeUrl, Hex key) Parameters Type Name Description String topic String version String bridgeUrl Hex key Properties Url Declaration public string Url { get; } Property Value Type Description String Methods ToQrCodeTexture() Declaration public Texture2D ToQrCodeTexture() Returns Type Description Texture2D"
  },
  "api/AlgoSdk.WalletConnect.html": {
    "href": "api/AlgoSdk.WalletConnect.html",
    "title": "Namespace AlgoSdk.WalletConnect | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.WalletConnect Classes AesCipher AlgorandWalletConnectSession AppEntry Contains information about an app that supports WalletConnect DefaultBridge JsonRpc RpcPayload WalletConnectRpc WalletConnectRpc.Algorand WalletRegistry WebSocketExtensions Structs AppEntry.AppLinkingScheme AppEntry.AppMetadata AppEntry.AppMetadata.AppColors AppEntry.AppUrls AppEntry.ImageUrls ClientMeta EncryptedPayload HandshakeUrl An HTTP-escaped Url for initiating the walletconnect connection. JsonRpcError JsonRpcRequest JsonRpcResponse MultisigMetadata This struct represents metadata required for signing transactions sent by multisig accounts via WalletConnect. See MultisigSig for more information. NetworkMessage SavedSession SignTxnsError Error obtained from a SignTxnsOpts Options for an . WalletConnectSessionData WalletConnectSessionRequest WalletTransaction A struct representing the serialized data for a WalletConnect Transaction see https://developer.algorand.org/docs/get-details/walletconnect/walletconnect-schema/ Interfaces IActiveWalletConnectSession<TSession> IJsonRpcError IJsonRpcRequest IJsonRpcRequest<T> IJsonRpcResponse IJsonRpcResponse<T> IWalletConnectSessionData Enums AlgorandWalletConnectSession.Status SignTxnsErrorCode"
  },
  "api/AlgoSdk.WalletConnect.IActiveWalletConnectSession-1.html": {
    "href": "api/AlgoSdk.WalletConnect.IActiveWalletConnectSession-1.html",
    "title": "Interface IActiveWalletConnectSession<TSession> | Unity Algorand SDK",
    "keywords": "Interface IActiveWalletConnectSession<TSession> Inherited Members IWalletConnectSessionData.ClientId IWalletConnectSessionData.BridgeUrl IWalletConnectSessionData.Key IWalletConnectSessionData.PeerId IWalletConnectSessionData.HandshakeId IWalletConnectSessionData.NetworkId IWalletConnectSessionData.Accounts IWalletConnectSessionData.ChainId IWalletConnectSessionData.DappMeta IWalletConnectSessionData.WalletMeta Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public interface IActiveWalletConnectSession<TSession> : IWalletConnectSessionData, IDisposable where TSession : IActiveWalletConnectSession<TSession> Type Parameters Name Description TSession Properties OnSessionConnect Occurs when handshake succeeds and wallet is connected. Declaration UnityEvent<TSession> OnSessionConnect { get; } Property Value Type Description UnityEvent <TSession> OnSessionDisconnect Occurs when wallet no longer approves connection. Declaration UnityEvent<string> OnSessionDisconnect { get; } Property Value Type Description UnityEvent < String > OnSessionUpdate Occurs when wallet updates addresses or metadata information. Declaration UnityEvent<WalletConnectSessionData> OnSessionUpdate { get; } Property Value Type Description UnityEvent < WalletConnectSessionData >"
  },
  "api/AlgoSdk.WalletConnect.IJsonRpcError.html": {
    "href": "api/AlgoSdk.WalletConnect.IJsonRpcError.html",
    "title": "Interface IJsonRpcError | Unity Algorand SDK",
    "keywords": "Interface IJsonRpcError Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public interface IJsonRpcError Properties Code A Number that indicates the error type that occurred. Declaration int Code { get; set; } Property Value Type Description Int32 Data A Primitive or Structured value that contains additional information about the error. Declaration AlgoApiObject Data { get; set; } Property Value Type Description AlgoApiObject Message A String providing a short description of the error. Declaration string Message { get; set; } Property Value Type Description String"
  },
  "api/AlgoSdk.WalletConnect.IJsonRpcRequest.html": {
    "href": "api/AlgoSdk.WalletConnect.IJsonRpcRequest.html",
    "title": "Interface IJsonRpcRequest | Unity Algorand SDK",
    "keywords": "Interface IJsonRpcRequest Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public interface IJsonRpcRequest Properties Id The id of this request. Used to keep track of the correct response. Declaration ulong Id { get; set; } Property Value Type Description UInt64 JsonRpc The JsonRpc version of this request. Declaration string JsonRpc { get; set; } Property Value Type Description String Method The method name to call in this request. Declaration string Method { get; set; } Property Value Type Description String"
  },
  "api/AlgoSdk.WalletConnect.IJsonRpcRequest-1.html": {
    "href": "api/AlgoSdk.WalletConnect.IJsonRpcRequest-1.html",
    "title": "Interface IJsonRpcRequest<T> | Unity Algorand SDK",
    "keywords": "Interface IJsonRpcRequest<T> Inherited Members IJsonRpcRequest.Id IJsonRpcRequest.JsonRpc IJsonRpcRequest.Method Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public interface IJsonRpcRequest<T> : IJsonRpcRequest Type Parameters Name Description T Properties Params Parameters for this request. Declaration T Params { get; set; } Property Value Type Description T"
  },
  "api/AlgoSdk.WalletConnect.IJsonRpcResponse.html": {
    "href": "api/AlgoSdk.WalletConnect.IJsonRpcResponse.html",
    "title": "Interface IJsonRpcResponse | Unity Algorand SDK",
    "keywords": "Interface IJsonRpcResponse Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public interface IJsonRpcResponse Properties Error An error object if an error occurred. Declaration JsonRpcError Error { get; set; } Property Value Type Description JsonRpcError Id The Id of the response. It should be the same as the ID of the corresponding IJsonRpcRequest . Declaration Optional<ulong> Id { get; set; } Property Value Type Description Optional < UInt64 > IsError Returns true if this is an error response. Declaration bool IsError { get; } Property Value Type Description Boolean JsonRpc The JsonRpc version. Declaration string JsonRpc { get; set; } Property Value Type Description String"
  },
  "api/AlgoSdk.WalletConnect.IJsonRpcResponse-1.html": {
    "href": "api/AlgoSdk.WalletConnect.IJsonRpcResponse-1.html",
    "title": "Interface IJsonRpcResponse<T> | Unity Algorand SDK",
    "keywords": "Interface IJsonRpcResponse<T> Inherited Members IJsonRpcResponse.Id IJsonRpcResponse.JsonRpc IJsonRpcResponse.Error IJsonRpcResponse.IsError Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public interface IJsonRpcResponse<T> : IJsonRpcResponse Type Parameters Name Description T Properties Result The result of the corresponding IJsonRpcRequest . Declaration T Result { get; set; } Property Value Type Description T"
  },
  "api/AlgoSdk.WalletConnect.IWalletConnectSessionData.html": {
    "href": "api/AlgoSdk.WalletConnect.IWalletConnectSessionData.html",
    "title": "Interface IWalletConnectSessionData | Unity Algorand SDK",
    "keywords": "Interface IWalletConnectSessionData Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public interface IWalletConnectSessionData Properties Accounts The accounts that the Wallet manages. Declaration Address[] Accounts { get; } Property Value Type Description Address [] BridgeUrl The bridge used to communicate with the session. Declaration string BridgeUrl { get; } Property Value Type Description String ChainId The Identifier of the blockchain connected. Declaration int ChainId { get; } Property Value Type Description Int32 ClientId The UUID of this client. Declaration string ClientId { get; } Property Value Type Description String DappMeta Meta information about the Dapp connected in this session. Declaration ClientMeta DappMeta { get; } Property Value Type Description ClientMeta HandshakeId Declaration ulong HandshakeId { get; } Property Value Type Description UInt64 Key The key used to encrypt/decrypt the payloads. Declaration Hex Key { get; } Property Value Type Description Hex NetworkId The ID of the network connected (test, beta, main, ...) Declaration int NetworkId { get; } Property Value Type Description Int32 PeerId The UUID of the connecting peer. Declaration string PeerId { get; } Property Value Type Description String WalletMeta Meta information about the Wallet connected in this session. Declaration ClientMeta WalletMeta { get; } Property Value Type Description ClientMeta"
  },
  "api/AlgoSdk.WalletConnect.JsonRpc.html": {
    "href": "api/AlgoSdk.WalletConnect.JsonRpc.html",
    "title": "Class JsonRpc | Unity Algorand SDK",
    "keywords": "Class JsonRpc Inheritance Object JsonRpc Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public static class JsonRpc Methods ReadJsonRpcPayload(WebSocketEvent, Hex) Declaration public static Either<JsonRpcResponse, JsonRpcRequest> ReadJsonRpcPayload(this WebSocketEvent response, Hex encryptionKey) Parameters Type Name Description WebSocketEvent response Hex encryptionKey Returns Type Description Either < JsonRpcResponse , JsonRpcRequest > ToNetworkMessage<T>(T, Hex, String) Declaration public static NetworkMessage ToNetworkMessage<T>(this T request, Hex encryptionKey, string topic) where T : IJsonRpcRequest Parameters Type Name Description T request Hex encryptionKey String topic Returns Type Description NetworkMessage Type Parameters Name Description T"
  },
  "api/AlgoSdk.WalletConnect.JsonRpcError.html": {
    "href": "api/AlgoSdk.WalletConnect.JsonRpcError.html",
    "title": "Struct JsonRpcError | Unity Algorand SDK",
    "keywords": "Struct JsonRpcError Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct JsonRpcError : IEquatable<JsonRpcError> Properties Code Declaration public int Code { get; set; } Property Value Type Description Int32 Data Declaration public AlgoApiObject Data { get; set; } Property Value Type Description AlgoApiObject Message Declaration public string Message { get; set; } Property Value Type Description String Methods Equals(JsonRpcError) Declaration public bool Equals(JsonRpcError other) Parameters Type Name Description JsonRpcError other Returns Type Description Boolean"
  },
  "api/AlgoSdk.WalletConnect.JsonRpcRequest.html": {
    "href": "api/AlgoSdk.WalletConnect.JsonRpcRequest.html",
    "title": "Struct JsonRpcRequest | Unity Algorand SDK",
    "keywords": "Struct JsonRpcRequest Implements IJsonRpcRequest < AlgoApiObject []> IJsonRpcRequest Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct JsonRpcRequest : IJsonRpcRequest<AlgoApiObject[]>, IJsonRpcRequest, IEquatable<JsonRpcRequest> Properties Id The id of this request. Used to keep track of the correct response. Declaration public ulong Id { get; set; } Property Value Type Description UInt64 JsonRpc The JsonRpc version of this request. Declaration public string JsonRpc { get; set; } Property Value Type Description String Method The method name to call in this request. Declaration public string Method { get; set; } Property Value Type Description String Params Parameters for this request. Declaration public AlgoApiObject[] Params { get; set; } Property Value Type Description AlgoApiObject [] Methods Equals(JsonRpcRequest) Declaration public bool Equals(JsonRpcRequest other) Parameters Type Name Description JsonRpcRequest other Returns Type Description Boolean Implements IJsonRpcRequest<T> IJsonRpcRequest"
  },
  "api/AlgoSdk.WalletConnect.JsonRpcResponse.html": {
    "href": "api/AlgoSdk.WalletConnect.JsonRpcResponse.html",
    "title": "Struct JsonRpcResponse | Unity Algorand SDK",
    "keywords": "Struct JsonRpcResponse Implements IJsonRpcResponse < AlgoApiObject > IJsonRpcResponse Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct JsonRpcResponse : IJsonRpcResponse<AlgoApiObject>, IJsonRpcResponse, IEquatable<JsonRpcResponse> Properties Error An error object if an error occurred. Declaration public JsonRpcError Error { get; set; } Property Value Type Description JsonRpcError Id The Id of the response. It should be the same as the ID of the corresponding IJsonRpcRequest . Declaration public Optional<ulong> Id { get; set; } Property Value Type Description Optional < UInt64 > IsError Returns true if this is an error response. Declaration public bool IsError { get; } Property Value Type Description Boolean JsonRpc The JsonRpc version. Declaration public string JsonRpc { get; set; } Property Value Type Description String Result The result of the corresponding IJsonRpcRequest . Declaration public AlgoApiObject Result { get; set; } Property Value Type Description AlgoApiObject Methods Equals(JsonRpcResponse) Declaration public bool Equals(JsonRpcResponse other) Parameters Type Name Description JsonRpcResponse other Returns Type Description Boolean Implements IJsonRpcResponse<T> IJsonRpcResponse"
  },
  "api/AlgoSdk.WalletConnect.MultisigMetadata.html": {
    "href": "api/AlgoSdk.WalletConnect.MultisigMetadata.html",
    "title": "Struct MultisigMetadata | Unity Algorand SDK",
    "keywords": "Struct MultisigMetadata This struct represents metadata required for signing transactions sent by multisig accounts via WalletConnect. See MultisigSig for more information. Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct MultisigMetadata : IEquatable<MultisigMetadata> Fields Addresses The signers of this multisig. Declaration public Address[] Addresses Field Value Type Description Address [] Threshold Number of signatures required for valid transaction. Declaration public byte Threshold Field Value Type Description Byte Version Version of the multisig. Declaration public byte Version Field Value Type Description Byte Methods Equals(MultisigMetadata) Declaration public bool Equals(MultisigMetadata other) Parameters Type Name Description MultisigMetadata other Returns Type Description Boolean Operators Implicit(MultisigSig to MultisigMetadata) Declaration public static implicit operator MultisigMetadata(MultisigSig msig) Parameters Type Name Description MultisigSig msig Returns Type Description MultisigMetadata Implicit(MultisigMetadata to MultisigSig) Declaration public static implicit operator MultisigSig(MultisigMetadata msigMeta) Parameters Type Name Description MultisigMetadata msigMeta Returns Type Description MultisigSig"
  },
  "api/AlgoSdk.WalletConnect.NetworkMessage.html": {
    "href": "api/AlgoSdk.WalletConnect.NetworkMessage.html",
    "title": "Struct NetworkMessage | Unity Algorand SDK",
    "keywords": "Struct NetworkMessage Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct NetworkMessage : IEquatable<NetworkMessage> Fields IsSilent Declaration public Optional<bool> IsSilent Field Value Type Description Optional < Boolean > Payload Declaration public string Payload Field Value Type Description String Topic Declaration public string Topic Field Value Type Description String Type Declaration public string Type Field Value Type Description String Methods Equals(NetworkMessage) Declaration public bool Equals(NetworkMessage other) Parameters Type Name Description NetworkMessage other Returns Type Description Boolean PublishToTopic<T>(T, String) Declaration public static NetworkMessage PublishToTopic<T>(T payload, string topic) Parameters Type Name Description T payload String topic Returns Type Description NetworkMessage Type Parameters Name Description T PublishToTopicEncrypted<T>(T, Hex, String) Declaration public static NetworkMessage PublishToTopicEncrypted<T>(T payload, Hex encryptionKey, string topic) Parameters Type Name Description T payload Hex encryptionKey String topic Returns Type Description NetworkMessage Type Parameters Name Description T SubscribeToTopic(String) Declaration public static NetworkMessage SubscribeToTopic(string topic) Parameters Type Name Description String topic Returns Type Description NetworkMessage"
  },
  "api/AlgoSdk.WalletConnect.RpcPayload.html": {
    "href": "api/AlgoSdk.WalletConnect.RpcPayload.html",
    "title": "Class RpcPayload | Unity Algorand SDK",
    "keywords": "Class RpcPayload Inheritance Object RpcPayload Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public static class RpcPayload Fields IdRandomPartSize Declaration public const int IdRandomPartSize = 1000 Field Value Type Description Int32 Methods GenerateId() Declaration public static long GenerateId() Returns Type Description Int64"
  },
  "api/AlgoSdk.WalletConnect.SavedSession.html": {
    "href": "api/AlgoSdk.WalletConnect.SavedSession.html",
    "title": "Struct SavedSession | Unity Algorand SDK",
    "keywords": "Struct SavedSession Implements IWalletConnectSessionData Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct SavedSession : IWalletConnectSessionData Properties Accounts Declaration public Address[] Accounts { get; set; } Property Value Type Description Address [] BridgeUrl Declaration public string BridgeUrl { get; set; } Property Value Type Description String ChainId Declaration public int ChainId { get; set; } Property Value Type Description Int32 ClientId Declaration public string ClientId { get; set; } Property Value Type Description String DappMeta Declaration public ClientMeta DappMeta { get; set; } Property Value Type Description ClientMeta HandshakeId Declaration public ulong HandshakeId { get; set; } Property Value Type Description UInt64 Key Declaration public Hex Key { get; set; } Property Value Type Description Hex NetworkId Declaration public int NetworkId { get; set; } Property Value Type Description Int32 PeerId Declaration public string PeerId { get; set; } Property Value Type Description String WalletMeta Declaration public ClientMeta WalletMeta { get; set; } Property Value Type Description ClientMeta Implements IWalletConnectSessionData"
  },
  "api/AlgoSdk.WalletConnect.SignTxnsError.html": {
    "href": "api/AlgoSdk.WalletConnect.SignTxnsError.html",
    "title": "Struct SignTxnsError | Unity Algorand SDK",
    "keywords": "Struct SignTxnsError Error obtained from a Implements IJsonRpcError Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct SignTxnsError : IJsonRpcError, IEquatable<SignTxnsError> Properties Code The integer error code of the error. Declaration public int Code { get; set; } Property Value Type Description Int32 Data Any other useful information about the error. Declaration public AlgoApiObject Data { get; set; } Property Value Type Description AlgoApiObject ErrorCode The standard error code parsed from Code . Declaration public SignTxnsErrorCode ErrorCode { get; } Property Value Type Description SignTxnsErrorCode Code cast to SignTxnsErrorCode if known, else Unknown . Message Declaration public string Message { get; set; } Property Value Type Description String Methods Equals(SignTxnsError) Declaration public bool Equals(SignTxnsError other) Parameters Type Name Description SignTxnsError other Returns Type Description Boolean ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators Implicit(JsonRpcError to SignTxnsError) Declaration public static implicit operator SignTxnsError(JsonRpcError err) Parameters Type Name Description JsonRpcError err Returns Type Description SignTxnsError Implicit(SignTxnsError to Boolean) Declaration public static implicit operator bool (SignTxnsError err) Parameters Type Name Description SignTxnsError err Returns Type Description Boolean Implicit(SignTxnsError to String) Declaration public static implicit operator string (SignTxnsError err) Parameters Type Name Description SignTxnsError err Returns Type Description String Implements IJsonRpcError"
  },
  "api/AlgoSdk.WalletConnect.SignTxnsErrorCode.html": {
    "href": "api/AlgoSdk.WalletConnect.SignTxnsErrorCode.html",
    "title": "Enum SignTxnsErrorCode | Unity Algorand SDK",
    "keywords": "Enum SignTxnsErrorCode Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public enum SignTxnsErrorCode Fields Name Description InvalidInput The input provided is invalid. TooManyTransactions The wallet does not support signing that many transactions at a time. Unauthorized The requested operation and/or account has not been authorized by the user. UninitializedWallet The wallet was not initialized properly beforehand. Unknown Represents an unknown error code. UnsupportedOperation The wallet does not support the requested operation. UserRejectedRequest The user rejected the request."
  },
  "api/AlgoSdk.WalletConnect.SignTxnsOpts.html": {
    "href": "api/AlgoSdk.WalletConnect.SignTxnsOpts.html",
    "title": "Struct SignTxnsOpts | Unity Algorand SDK",
    "keywords": "Struct SignTxnsOpts Options for an . Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct SignTxnsOpts : IEquatable<SignTxnsOpts> Fields Message An optional message describing the group of transactions in the . Declaration public string Message Field Value Type Description String Methods Equals(SignTxnsOpts) Declaration public bool Equals(SignTxnsOpts other) Parameters Type Name Description SignTxnsOpts other Returns Type Description Boolean"
  },
  "api/AlgoSdk.WalletConnect.WalletConnectRpc.Algorand.html": {
    "href": "api/AlgoSdk.WalletConnect.WalletConnectRpc.Algorand.html",
    "title": "Class WalletConnectRpc.Algorand | Unity Algorand SDK",
    "keywords": "Class WalletConnectRpc.Algorand Inheritance Object WalletConnectRpc.Algorand Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public static class Algorand Fields ChainId Declaration public const int ChainId = 4160 Field Value Type Description Int32 Methods SignTransactions(WalletTransaction[], SignTxnsOpts) Builds a JsonRpcRequest used for signing transactions. Declaration public static JsonRpcRequest SignTransactions(WalletTransaction[] transactions, SignTxnsOpts options = default(SignTxnsOpts)) Parameters Type Name Description WalletTransaction [] transactions The atomic transaction group of [1,16] transactions. Contains information about how to sign each transaction, and which ones to sign. SignTxnsOpts options Optional options for signing the transactions, e.g. adding a message to the transaction group. Returns Type Description JsonRpcRequest A JsonRpcRequest used for signing Algorand transactions."
  },
  "api/AlgoSdk.WalletConnect.WalletConnectRpc.html": {
    "href": "api/AlgoSdk.WalletConnect.WalletConnectRpc.html",
    "title": "Class WalletConnectRpc | Unity Algorand SDK",
    "keywords": "Class WalletConnectRpc Inheritance Object WalletConnectRpc Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public static class WalletConnectRpc Methods GetRandomId() Gets a random, valid JsonRpcRequest id. Declaration public static ulong GetRandomId() Returns Type Description UInt64 a UInt64 in the range [1, MaxValue ] SessionRequest(WalletConnectSessionRequest, UInt64) Utility function for building a JsonRpcRequest used to start a new WalletConnect session. Declaration public static JsonRpcRequest SessionRequest(WalletConnectSessionRequest sessionRequest, ulong id = 0UL) Parameters Type Name Description WalletConnectSessionRequest sessionRequest Parameters required to create the request. UInt64 id Returns Type Description JsonRpcRequest A JsonRpcRequest that can be used to start a new WalletConnect session. SessionRequest(String, ClientMeta, Optional<Int32>, UInt64) Utility function for building a JsonRpcRequest used to start a new WalletConnect session. Declaration public static JsonRpcRequest SessionRequest(string peerId, ClientMeta peerMeta, Optional<int> chainId = default(Optional<int>), ulong id = 0UL) Parameters Type Name Description String peerId The UUID of the client. ClientMeta peerMeta The metadata of the client. Optional < Int32 > chainId The id of the blockchain this request is for. UInt64 id Returns Type Description JsonRpcRequest A JsonRpcRequest that can be used to start a new WalletConnect session."
  },
  "api/AlgoSdk.WalletConnect.WalletConnectSessionData.html": {
    "href": "api/AlgoSdk.WalletConnect.WalletConnectSessionData.html",
    "title": "Struct WalletConnectSessionData | Unity Algorand SDK",
    "keywords": "Struct WalletConnectSessionData Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct WalletConnectSessionData : IEquatable<WalletConnectSessionData> Fields Accounts Declaration public Address[] Accounts Field Value Type Description Address [] ChainId Declaration public int ChainId Field Value Type Description Int32 IsApproved Declaration public bool IsApproved Field Value Type Description Boolean PeerId Declaration public string PeerId Field Value Type Description String PeerMeta Declaration public ClientMeta PeerMeta Field Value Type Description ClientMeta Methods Equals(WalletConnectSessionData) Declaration public bool Equals(WalletConnectSessionData other) Parameters Type Name Description WalletConnectSessionData other Returns Type Description Boolean"
  },
  "api/AlgoSdk.WalletConnect.WalletConnectSessionRequest.html": {
    "href": "api/AlgoSdk.WalletConnect.WalletConnectSessionRequest.html",
    "title": "Struct WalletConnectSessionRequest | Unity Algorand SDK",
    "keywords": "Struct WalletConnectSessionRequest Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct WalletConnectSessionRequest : IEquatable<WalletConnectSessionRequest> Fields ChainId Declaration public Optional<int> ChainId Field Value Type Description Optional < Int32 > PeerId Declaration public string PeerId Field Value Type Description String PeerMeta Declaration public ClientMeta PeerMeta Field Value Type Description ClientMeta Methods Equals(WalletConnectSessionRequest) Declaration public bool Equals(WalletConnectSessionRequest other) Parameters Type Name Description WalletConnectSessionRequest other Returns Type Description Boolean"
  },
  "api/AlgoSdk.WalletConnect.WalletRegistry.html": {
    "href": "api/AlgoSdk.WalletConnect.WalletRegistry.html",
    "title": "Class WalletRegistry | Unity Algorand SDK",
    "keywords": "Class WalletRegistry Inheritance Object WalletRegistry Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public static class WalletRegistry Fields PeraWallet The official wallet from the Algorand Foundation. Declaration public static readonly AppEntry PeraWallet Field Value Type Description AppEntry SupportedWallets All supported Algorand Wallet apps. See SupportedWalletsForCurrentPlatform if you'd like to get apps for current platform only. Declaration public static readonly AppEntry[] SupportedWallets Field Value Type Description AppEntry [] AppEntry that can be used to launch apps on native device. SupportedWalletsForCurrentPlatform Supported Algorand Wallet apps for the current unity platform. Declaration public static readonly AppEntry[] SupportedWalletsForCurrentPlatform Field Value Type Description AppEntry [] AppEntry that can be used to launch apps on native device."
  },
  "api/AlgoSdk.WalletConnect.WalletTransaction.html": {
    "href": "api/AlgoSdk.WalletConnect.WalletTransaction.html",
    "title": "Struct WalletTransaction | Unity Algorand SDK",
    "keywords": "Struct WalletTransaction A struct representing the serialized data for a WalletConnect Transaction see https://developer.algorand.org/docs/get-details/walletconnect/walletconnect-schema/ Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct WalletTransaction : IEquatable<WalletTransaction> Fields AuthAddr Optional Address used to sign the transaction when the account is rekeyed. Also called the signor/sgnr. Declaration public Address AuthAddr Field Value Type Description Address Message Optional message explaining the reason of the transaction. Declaration public string Message Field Value Type Description String Msig Optional multisig metadata used to sign the transaction. Declaration public MultisigMetadata Msig Field Value Type Description MultisigMetadata Signers Optional list of addresses that must sign the transactions. Declaration public Address[] Signers Field Value Type Description Address [] Txn A transaction in canonical messagepack format. Declaration public byte[] Txn Field Value Type Description Byte [] Remarks Does not contain the txn prefix that is used when signing a transaction. See SerializeMessagePack<T>(T, Allocator) for serializing the transaction. Methods Equals(WalletTransaction) Declaration public bool Equals(WalletTransaction other) Parameters Type Name Description WalletTransaction other Returns Type Description Boolean New<T>(T, String, Address, MultisigMetadata, Address[]) Serialize a transaction and prepare it for WalletConnect. Declaration public static WalletTransaction New<T>(T txn, string message = null, Address authAddr = default(Address), MultisigMetadata msig = default(MultisigMetadata), Address[] signers = null) where T : ITransaction Parameters Type Name Description T txn The transaction to prepare. String message Optional message explaining the reason of the transaction. Address authAddr Optional Address used to sign the transaction when the account is rekeyed. Also called the signor/sgnr. MultisigMetadata msig Optional multisig metadata used to sign the transaction. Address [] signers Optional list of addresses that must sign the transactions. Returns Type Description WalletTransaction A transaction struct usable with WalletConnect. See SignTransactions(WalletTransaction[], SignTxnsOpts, CancellationToken) Type Parameters Name Description T The transaction type."
  },
  "api/AlgoSdk.WalletConnect.WebSocketExtensions.html": {
    "href": "api/AlgoSdk.WalletConnect.WebSocketExtensions.html",
    "title": "Class WebSocketExtensions | Unity Algorand SDK",
    "keywords": "Class WebSocketExtensions Inheritance Object WebSocketExtensions Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public static class WebSocketExtensions Methods PollUntilOpen(IWebSocketClient, CancellationToken) Declaration public static UniTask<WebSocketEvent> PollUntilOpen(this IWebSocketClient client, CancellationToken cancellationToken = null) Parameters Type Name Description IWebSocketClient client CancellationToken cancellationToken Returns Type Description UniTask < WebSocketEvent > PollUntilPayload(IWebSocketClient, CancellationToken) Declaration public static UniTask<WebSocketEvent> PollUntilPayload(this IWebSocketClient client, CancellationToken cancellationToken = null) Parameters Type Name Description IWebSocketClient client CancellationToken cancellationToken Returns Type Description UniTask < WebSocketEvent > Send(IWebSocketClient, NetworkMessage) Declaration public static void Send(this IWebSocketClient client, NetworkMessage networkMessage) Parameters Type Name Description IWebSocketClient client NetworkMessage networkMessage"
  },
  "api/AlgoSdk.WebSocket.html": {
    "href": "api/AlgoSdk.WebSocket.html",
    "title": "Namespace AlgoSdk.WebSocket | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.WebSocket Classes NativeWebSocketClient WebSocketClientFactory WebSocketEvent Interfaces IWebSocketClient Enums WebSocketEvent.WebSocketEventType"
  },
  "api/AlgoSdk.WebSocket.IWebSocketClient.html": {
    "href": "api/AlgoSdk.WebSocket.IWebSocketClient.html",
    "title": "Interface IWebSocketClient | Unity Algorand SDK",
    "keywords": "Interface IWebSocketClient Namespace : AlgoSdk.WebSocket Assembly : cs.temp.dll.dll Syntax public interface IWebSocketClient Properties EventQueue Declaration Queue<WebSocketEvent> EventQueue { get; } Property Value Type Description Queue < WebSocketEvent > ReadyState Declaration WebSocketState ReadyState { get; } Property Value Type Description WebSocketState WaitTime Declaration ulong WaitTime { get; } Property Value Type Description UInt64 Methods Close(CloseStatusCode, String) Declaration void Close(CloseStatusCode code = null, string reason = null) Parameters Type Name Description CloseStatusCode code String reason Connect() Declaration void Connect() Poll() Declaration WebSocketEvent Poll() Returns Type Description WebSocketEvent Send(ArraySegment<Byte>) Declaration void Send(ArraySegment<byte> data) Parameters Type Name Description ArraySegment < Byte > data"
  },
  "api/AlgoSdk.WebSocket.NativeWebSocketClient.html": {
    "href": "api/AlgoSdk.WebSocket.NativeWebSocketClient.html",
    "title": "Class NativeWebSocketClient | Unity Algorand SDK",
    "keywords": "Class NativeWebSocketClient Inheritance Object NativeWebSocketClient Implements IWebSocketClient Namespace : AlgoSdk.WebSocket Assembly : cs.temp.dll.dll Syntax public class NativeWebSocketClient : IWebSocketClient Constructors NativeWebSocketClient(String) Declaration public NativeWebSocketClient(string url) Parameters Type Name Description String url Properties EventQueue Declaration public Queue<WebSocketEvent> EventQueue { get; } Property Value Type Description Queue < WebSocketEvent > ReadyState Declaration public WebSocketState ReadyState { get; } Property Value Type Description WebSocketState WaitTime Declaration public ulong WaitTime { get; } Property Value Type Description UInt64 Methods Close(CloseStatusCode, String) Declaration public void Close(CloseStatusCode code = null, string reason = null) Parameters Type Name Description CloseStatusCode code String reason Connect() Declaration public void Connect() OnClose(Object, CloseEventArgs) Declaration public void OnClose(object sender, CloseEventArgs e) Parameters Type Name Description Object sender CloseEventArgs e OnError(Object, ErrorEventArgs) Declaration public void OnError(object sender, ErrorEventArgs e) Parameters Type Name Description Object sender ErrorEventArgs e OnMessage(Object, MessageEventArgs) Declaration public void OnMessage(object sender, MessageEventArgs e) Parameters Type Name Description Object sender MessageEventArgs e OnOpen(Object, EventArgs) Declaration public void OnOpen(object sender, EventArgs e) Parameters Type Name Description Object sender EventArgs e Poll() Declaration public WebSocketEvent Poll() Returns Type Description WebSocketEvent Send(ArraySegment<Byte>) Declaration public void Send(ArraySegment<byte> data) Parameters Type Name Description ArraySegment < Byte > data Implements IWebSocketClient"
  },
  "api/AlgoSdk.WebSocket.WebSocketClientFactory.html": {
    "href": "api/AlgoSdk.WebSocket.WebSocketClientFactory.html",
    "title": "Class WebSocketClientFactory | Unity Algorand SDK",
    "keywords": "Class WebSocketClientFactory Inheritance Object WebSocketClientFactory Namespace : AlgoSdk.WebSocket Assembly : cs.temp.dll.dll Syntax public class WebSocketClientFactory Methods Create(String) Declaration public static IWebSocketClient Create(string url) Parameters Type Name Description String url Returns Type Description IWebSocketClient"
  },
  "api/AlgoSdk.WebSocket.WebSocketEvent.html": {
    "href": "api/AlgoSdk.WebSocket.WebSocketEvent.html",
    "title": "Class WebSocketEvent | Unity Algorand SDK",
    "keywords": "Class WebSocketEvent Inheritance Object WebSocketEvent Namespace : AlgoSdk.WebSocket Assembly : cs.temp.dll.dll Syntax public class WebSocketEvent Fields ClientId Declaration public ulong ClientId Field Value Type Description UInt64 Error Declaration public string Error Field Value Type Description String Payload Declaration public byte[] Payload Field Value Type Description Byte [] Reason Declaration public string Reason Field Value Type Description String Type Declaration public WebSocketEvent.WebSocketEventType Type Field Value Type Description WebSocketEvent.WebSocketEventType"
  },
  "api/AlgoSdk.WebSocket.WebSocketEvent.WebSocketEventType.html": {
    "href": "api/AlgoSdk.WebSocket.WebSocketEvent.WebSocketEventType.html",
    "title": "Enum WebSocketEvent.WebSocketEventType | Unity Algorand SDK",
    "keywords": "Enum WebSocketEvent.WebSocketEventType Namespace : AlgoSdk.WebSocket Assembly : cs.temp.dll.dll Syntax public enum WebSocketEventType Fields Name Description Close Error Nothing Open Payload"
  },
  "api/AlgoSdk.WrappedValueFormatter-2.html": {
    "href": "api/AlgoSdk.WrappedValueFormatter-2.html",
    "title": "Class WrappedValueFormatter<T, U> | Unity Algorand SDK",
    "keywords": "Class WrappedValueFormatter<T, U> Inheritance Object WrappedValueFormatter<T, U> Implements IAlgoApiFormatter <T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public sealed class WrappedValueFormatter<T, U> : IAlgoApiFormatter<T> where T : struct, IWrappedValue<U> Type Parameters Name Description T U Methods Deserialize(ref JsonReader) Declaration public T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration public T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Serialize(ref JsonWriter, T) Declaration public void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref MessagePackWriter, T) Declaration public void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value Implements IAlgoApiFormatter<T>"
  },
  "changelog/CHANGELOG.html": {
    "href": "changelog/CHANGELOG.html",
    "title": "Changelog | Unity Algorand SDK",
    "keywords": "Changelog All notable changes to this package will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . 3.0.0-pre.3 (2022-05-28) Features abi: add ABI support ( d43eed7 ), closes #132 3.0.0-pre.2 (2022-04-12) Features atomic-txn: add APIs for building, signing, and serializing Atomic Txns ( 858ff9e ), closes #131 signer: update ISigner interface to be closer to signer interface in other SDKs ( a8fbe0b ), closes /github.com/algorand/py-algorand-sdk/blob/aba9f4ccf87d4e7f7d5d6d4826e38463b76da9b8/algosdk/atomic_transaction_composer.py#L558 #131 BREAKING CHANGES signer: Remove ISigner interfaces from AlgoSdk.Account and completely change the signer API. 3.0.0-pre.1 (2022-04-03) Features algoapi: create separate types for REST APIs and SDK ( #129 ) ( 0a97a11 ), closes #120 BREAKING CHANGES algoapi: All APIs and return types from AlgodClient , IndexerClient , and KmdClient have changed. Additional breaking changes: MinBalance(AccountInfo) constructor has changed to take an AlgoSdk.Algod.Account value instead. Remove PrivateKey.SignTransaction Rename AppEvalDelta -> EvalDelta Rename AppStateDelta -> StateDelta Rename EvalDelta -> ValueDelta Rename EvalDeltaKeyValue -> ValueDeltaKeyValue Remove readonly fields from all Transaction types. Rename Multisig -> MultisigSig 2.3.0-pre.4 (2022-03-25) Features account: add fields for total assets/accounts opted-in/created ( 3ea7882 ) 2.3.0-pre.3 (2022-03-25) Features errors: serializer read errors now print the full message they're deserializing ( b67db2a ) formatter: add isStrict to AlgoApiObjectFormatter ( d8467c6 ) 2.3.0-pre.2 (2022-03-25) Features transactiongroup: add generic methods for constructing TransactionGroup ( 5e4b6aa ), closes #126 2.3.0-pre.1 (2022-03-24) Features indexer: add new IIndexerResponse<T> and IPaginatedIndexerResponse<T> interfaces ( 3b3abda ) transaction: add Indexer TransactionApplication model ( 99f63fa ) 2.2.0 (2022-03-23) Bug Fixes editor: fix Tooltip compilation issue in unity 2020.3 ( 6b71300 ) Features account: add IAccount , ISigner , and IAsyncSigner interfaces ( 19f139d ), closes #82 account: add MicroAlgos wrapper class ( 57a89e6 ) accounts: add MinBalance to allow developers to estimate min balances ( 856c11a ), closes #104 application: add AppIndex type ( 458392b ) asset: add AssetIndex type ( 2c44d55 ) teal: add conversion for supported types to CompiledTeal ( #112 ) ( 5a279d2 ), closes #105 transaction: add ability to fully deserialize BlockTransaction ( f32da2f ), closes #108 transaction: refactor signed transaction to use [AlgoApiObject] ( 8ff034d ), closes #113 #114 2.2.0-pre.4 (2022-03-22) Features account: add IAccount , ISigner , and IAsyncSigner interfaces ( 19f139d ), closes #82 2.2.0-pre.3 (2022-03-21) Bug Fixes editor: fix Tooltip compilation issue in unity 2020.3 ( 6b71300 ) Features account: add MicroAlgos wrapper class ( 57a89e6 ) application: add AppIndex type ( 458392b ) asset: add AssetIndex type ( 2c44d55 ) transaction: add ability to fully deserialize BlockTransaction ( f32da2f ), closes #108 transaction: refactor signed transaction to use [AlgoApiObject] ( 8ff034d ), closes #113 #114 2.2.0-pre.2 (2022-03-20) Features teal: add conversion for supported types to CompiledTeal ( #112 ) ( 5a279d2 ), closes #105 2.2.0-pre.1 (2022-03-20) Features accounts: add MinBalance to allow developers to estimate min balances ( 856c11a ), closes #104 2.1.1 (2022-03-20) Bug Fixes appcalltxn: fix AppArguments not in correct format ( 7845c79 ), closes #96 block: fix BlockTransaction field names ( ead4f5d ) formatters: fix EvalDelta not deserializing from msgpack properly ( 827e6d1 ), closes #107 walletconnect: fix issue where WalletTransaction.New requires unnecessary type constraints ( 09ce3f4 ) 2.1.1-pre.2 (2022-03-20) Bug Fixes block: fix BlockTransaction field names ( ead4f5d ) formatters: fix EvalDelta not deserializing from msgpack properly ( 827e6d1 ), closes #107 2.1.1-pre.1 (2022-03-19) Bug Fixes appcalltxn: fix AppArguments not in correct format ( 7845c79 ), closes #96 walletconnect: fix issue where WalletTransaction.New requires unnecessary type constraints ( 09ce3f4 ) 2.1.0-pre.12 (2022-03-19) Bug Fixes appcalltxn: fix AppArguments not in correct format ( 7845c79 ), closes #96 walletconnect: fix issue where WalletTransaction.New requires unnecessary type constraints ( 09ce3f4 ) 2.1.0 (2022-03-17) Bug Fixes algod: fix PendingTransaction fields from messagepack ( 6dbf0b3 ), closes #97 build: fix build not using the latest version of the release ( e8ee758 ) docs: update readme with png image ( a84c298 ) fix missing meta files from package ( a4037c9 ) formatter: make sure to skip unknown keys ( a9115af ) formatters: add explicit formatters for enums ( 58c4475 ), closes #99 formatters: update AlgoApiFormatter to warn instead of error if key cannot be found ( f727135 ), closes #98 kmd: fix multisig serialization ( a48e109 ) readme: fix missing image in readme ( a2fb33c ) readme: remove unnecessary xml tag ( 2f87b1a ) samples: fix compile error with samples ( c7c9a0d ) samples: update YourFirstTransaction sample ( 20cabf7 ) serialization: fix initialization of AlgoApiFormatterLookup ( 675b1d9 ) serialization: set formatters to automatically add array formatter if it doesn't exist ( 5692372 ) websocket: fix TLS failure in websocket-sharp for Unity 2020.3 ( bdaa92e ), closes #101 Features api: add min-balance field ( 7f0873b ) transaction: add PrivateKey.SignTransaction method ( 3d74336 ) walletconnect: add LaunchApp[...] to AppEntry ( f822855 ) walletconnect: add supported wallets list ( 50c6575 ) 2.1.0-pre.11 (2022-03-17) Features walletconnect: add LaunchApp[...] to AppEntry ( f822855 ) 2.1.0-pre.10 (2022-03-17) Bug Fixes formatter: make sure to skip unknown keys ( a9115af ) kmd: fix multisig serialization ( a48e109 ) 2.1.0-pre.9 (2022-03-17) Bug Fixes fix missing meta files from package ( a4037c9 ) websocket: fix TLS failure in websocket-sharp for Unity 2020.3 ( bdaa92e ), closes #101 2.1.0-pre.8 (2022-03-16) Bug Fixes build: fix build not using the latest version of the release ( e8ee758 ) 2.1.0-pre.7 (2022-03-16) Bug Fixes algod: fix PendingTransaction fields from messagepack ( 6dbf0b3 ), closes #97 formatters: add explicit formatters for enums ( 58c4475 ), closes #99 formatters: update AlgoApiFormatter to warn instead of error if key cannot be found ( f727135 ), closes #98 samples: fix compile error with samples ( c7c9a0d ) 2.1.0-pre.6 (2022-03-12) Bug Fixes docs: update readme with png image ( a84c298 ) 2.1.0-pre.5 (2022-03-12) Bug Fixes readme: remove unnecessary xml tag ( 2f87b1a ) 2.1.0-pre.4 (2022-03-12) Bug Fixes samples: update YourFirstTransaction sample ( 20cabf7 ) 2.1.0-pre.3 (2022-03-11) Bug Fixes serialization: fix initialization of AlgoApiFormatterLookup ( 675b1d9 ) serialization: set formatters to automatically add array formatter if it doesn't exist ( 5692372 ) Features api: add min-balance field ( 7f0873b ) walletconnect: add supported wallets list ( 50c6575 ) 2.1.0-pre.2 (2022-03-06) Bug Fixes readme: fix missing image in readme ( a2fb33c ) 2.1.0-pre.1 (2022-03-06) Features transaction: add PrivateKey.SignTransaction method ( 3d74336 ) 2.0.0 (2022-03-05) Bug Fixes qrcode: replace zxing dll with its source code ( 766c83e ), closes #84 walletconnect: fix compile issue for unity 2020 ( e26836a ) walletconnect: fix issue where new WalletConnect assembly was not compiling in Unity 2020.3 ( 0a1ec26 ) websocket: regenerate guids in CareBoo.AlgoSdk.WebSocket assembly ( 3cb3180 ), closes #83 Code Refactoring assemblies: move libraries to their own assemblies to simplify things ( 0b17ea1 ) collections: move Unity.Collections extensions into their own assembly ( 8d217fc ) move json, messagepack, and encoding logic into their own assemblies ( 3d76a4b ) walletconnect: move WalletConnect code to its own assembly ( e6668cd ) walletconnect: remove unused enum WalletConnectError ( 6df5079 ) websocket: change namespace Netcode.Transports.WebSocket -> AlgoSdk.WebSocket ( ddb1357 ) websocket: move websocket code to its own assembly definition ( 8ff6738 ) Features accounts: add AccountInfo.EstimateMinBalance ( 51d471b ) algod: add overloads for IAlgodClient.SendTransactions that allow sending raw msgpack ( 4befeeb ) api: add statusCode deserialization field to ErrorResponseFormatter ( 3f69600 ) api: add support for CancellationToken and IProgress<float> ( 6ca2f39 ) dependencies: upgrade unity collections to 1.1.0 ( 88308be ) lowlevel: add NativeArrayUtil.ConcatAll ( 10644db ) models: add implicit operators for either value type in an either ( 84cfbcf ) transaction: reduce generic constraints related to ITransaction ( 42dfe82 ) unitask: upgrade UniTask to version 2.3.1 ( 537d297 ) walletconnect: add HandshakeUrl struct ( 4238348 ) walletconnect: add Algorand WalletConnect client ( #67 ) ( 3028858 ), closes #65 walletconnect: add QR Code Generator support ( #68 ) ( 1f84dcf ), closes #51 walletconnect: add WalletConnect support ( #69 ) ( c650b15 ), closes #11 walletconnect: add WebSocket support ( e0d2e6d ), closes #59 BREAKING CHANGES Json, MessagePack, and Encoding logic has been moved. If you were referencing them before you will have to target them in new assemblies now. collections: All of the extensions to Unity.Collections can now be found in AlgoSdk.Collections and the CareBoo.AlgoSdk.Collections assembly. websocket: Namespace Netcode.Transports.WebSocket has been renamed to AlgoSdk.WebSocket . assemblies: zxing.net and websocket-sharp are now in their own assemblies. You will need to update them if you were using the ZXing or WebSocket namespaces. walletconnect: Renamed QrCode -> QrCodeUtility . Set autoReference = false in CareBoo.AlgoSdk.QrCode assembly. AlgorandWalletConnectSession.StartConnection now returns a HandshakeUrl instead of a System.String . walletconnect: WalletConnectError has been removed since it's not being used by the API. qrcode: QrCode logic has been moved from the CareBoo.AlgoSdk.WalletConnect assembly and into the CareBoo.AlgoSdk.QrCode assembly. websocket: The GUID to the CareBoo.AlgoSdk.WebSocket assembly has changed. You may need to re-reference it. lowlevel: Remove unused struct NativeReferenceOfDisposable from AlgoSdk.LowLevel walletconnect: Code in the AlgoSdk.WalletConnect namespace are now in the CareBoo.AlgoSdk.WalletConnect assembly. Additionally, Hex has been moved to the AlgoSdk namespace and remains in the CareBoo.AlgoSdk assembly. websocket: To reference Netcode.Transports.WebSocket classes, you need to now reference the CareBoo.WebSocket assembly api: API is no longer returning UniTask , and is now returning AlgoApiRequest.Sent . 2.0.0-pre.11 (2022-03-05) Code Refactoring move json, messagepack, and encoding logic into their own assemblies ( 3d76a4b ) BREAKING CHANGES Json, MessagePack, and Encoding logic has been moved. If you were referencing them before you will have to target them in new assemblies now. 2.0.0-pre.10 (2022-03-04) Code Refactoring collections: move Unity.Collections extensions into their own assembly ( 8d217fc ) BREAKING CHANGES collections: All of the extensions to Unity.Collections can now be found in AlgoSdk.Collections and the CareBoo.AlgoSdk.Collections assembly. 2.0.0-pre.9 (2022-03-04) Code Refactoring assemblies: move libraries to their own assemblies to simplify things ( 0b17ea1 ) walletconnect: remove unused enum WalletConnectError ( 6df5079 ) websocket: change namespace Netcode.Transports.WebSocket -> AlgoSdk.WebSocket ( ddb1357 ) Features walletconnect: add HandshakeUrl struct ( 4238348 ) BREAKING CHANGES websocket: Namespace Netcode.Transports.WebSocket has been renamed to AlgoSdk.WebSocket . assemblies: zxing.net and websocket-sharp are now in their own assemblies. You will need to update them if you were using the ZXing or WebSocket namespaces. walletconnect: Renamed QrCode -> QrCodeUtility . Set autoReference = false in CareBoo.AlgoSdk.QrCode assembly. AlgorandWalletConnectSession.StartConnection now returns a HandshakeUrl instead of a System.String . walletconnect: WalletConnectError has been removed since it's not being used by the API. 2.0.0-pre.8 (2022-03-04) Bug Fixes qrcode: replace zxing dll with its source code ( 766c83e ), closes #84 websocket: regenerate guids in CareBoo.AlgoSdk.WebSocket assembly ( 3cb3180 ), closes #83 Features unitask: upgrade UniTask to version 2.3.1 ( 537d297 ) BREAKING CHANGES qrcode: QrCode logic has been moved from the CareBoo.AlgoSdk.WalletConnect assembly and into the CareBoo.AlgoSdk.QrCode assembly. websocket: The GUID to the CareBoo.AlgoSdk.WebSocket assembly has changed. You may need to re-reference it. 2.0.0-pre.7 (2022-03-01) Features dependencies: upgrade unity collections to 1.1.0 ( 88308be ) 2.0.0-pre.6 (2022-03-01) Bug Fixes walletconnect: fix compile issue for unity 2020 ( e26836a ) Features algod: add overloads for IAlgodClient.SendTransactions that allow sending raw msgpack ( 4befeeb ) lowlevel: add NativeArrayUtil.ConcatAll ( 10644db ) models: add implicit operators for either value type in an either ( 84cfbcf ) BREAKING CHANGES lowlevel: Remove unused struct NativeReferenceOfDisposable from AlgoSdk.LowLevel 2.0.0-pre.5 (2022-02-28) Features accounts: add AccountInfo.EstimateMinBalance ( 51d471b ) transaction: reduce generic constraints related to ITransaction ( 42dfe82 ) 2.0.0-pre.4 (2022-02-28) Features api: add statusCode deserialization field to ErrorResponseFormatter ( 3f69600 ) 2.0.0-pre.3 (2022-02-27) Bug Fixes walletconnect: fix issue where new WalletConnect assembly was not compiling in Unity 2020.3 ( 0a1ec26 ) Code Refactoring walletconnect: move WalletConnect code to its own assembly ( e6668cd ) BREAKING CHANGES walletconnect: Code in the AlgoSdk.WalletConnect namespace are now in the CareBoo.AlgoSdk.WalletConnect assembly. Additionally, Hex has been moved to the AlgoSdk namespace and remains in the CareBoo.AlgoSdk assembly. 2.0.0-pre.2 (2022-02-25) Code Refactoring websocket: move websocket code to its own assembly definition ( 8ff6738 ) BREAKING CHANGES websocket: To reference Netcode.Transports.WebSocket classes, you need to now reference the CareBoo.WebSocket assembly 2.0.0-pre.1 (2022-02-25) Features api: add support for CancellationToken and IProgress<float> ( 6ca2f39 ) BREAKING CHANGES api: API is no longer returning UniTask , and is now returning AlgoApiRequest.Sent . 1.4.0-pre.1 (2022-02-24) Features walletconnect: add Algorand WalletConnect client ( #67 ) ( 3028858 ), closes #65 walletconnect: add QR Code Generator support ( #68 ) ( 1f84dcf ), closes #51 walletconnect: add WalletConnect support ( #69 ) ( c650b15 ), closes #11 walletconnect: add WebSocket support ( e0d2e6d ), closes #59 1.4.0-exp.4 (2022-02-24) Features walletconnect: add WalletConnect support ( #69 ) ( c650b15 ), closes #11 1.4.0-exp.3 (2022-02-22) Features walletconnect: add QR Code Generator support ( #68 ) ( 1f84dcf ), closes #51 1.4.0-exp.2 (2022-02-21) Features walletconnect: add Algorand WalletConnect client ( #67 ) ( 3028858 ), closes #65 1.4.0-exp.1 (2022-02-18) Features walletconnect: add WebSocket support ( e0d2e6d ), closes #59 1.3.0 (2021-11-19) Features logic: add Logic.Sign for signing programs with private keys ( 131ef28 ) logic: add LogicSig.GetAddress ( 9628a9a ) multisig: add Multisig.GetAddress ( e490459 ) 1.2.2 (2021-11-15) Bug Fixes algoapiobject: fix compile err ( 12ca53c ) assetparams: change size of URL FixedString to 128 bytes ( 792d207 ) 1.2.2-pre.2 (2021-11-15) Bug Fixes algoapiobject: fix compile err ( 13692b8 ) 1.2.2-pre.1 (2021-11-13) Bug Fixes assetparams: change size of URL FixedString to 128 bytes ( c964899 ) 1.2.1 (2021-11-09) Bug Fixes error response: fix some responses with response code 0 incorrectly treated as errors ( e605e75 ) 1.2.0 (2021-11-08) Bug Fixes json: fix MultiSig JSON format using incorrect field names ( 83d0950 ) logging: remove unnecessary debug logs ( 7550061 ) msgpack: fix enum serialization when using IL2CPP ( 0c1a4d0 ) plugins: remove \"lib\" prefix from certain plugins ( 0ecf98f ), closes #55 plugins: remove unnecessary android static library plugin ( fc09b66 ) teal: fix TealValue deserialization failing when both uint and bytes values included ( 22cfcd0 ) web response: fix ErrorResponse.IsError not returning true when responseCode == 0 ( 3e1c8d6 ), closes #58 Features api clients: add constructor to api clients that makes the token parameter optional ( 0bcd681 ) api: add custom Request HTTP header support ( a6f51f8 ), closes #58 Performance Improvements plugins: replace debug mode libsodium libraries with release mode ( d7638c8 ), closes #55 1.2.0-pre.3 (2021-11-08) Bug Fixes web response: fix ErrorResponse.IsError not returning true when responseCode == 0 ( 3e1c8d6 ), closes #58 1.2.0-pre.2 (2021-11-07) Features api clients: add constructor to api clients that makes the token parameter optional ( 0bcd681 ) 1.2.0-pre.1 (2021-11-07) Bug Fixes json: fix MultiSig JSON format using incorrect field names ( 83d0950 ) teal: fix TealValue deserialization failing when both uint and bytes values included ( 22cfcd0 ) Features api: add custom Request HTTP header support ( a6f51f8 ), closes #58 Performance Improvements plugins: replace debug mode libsodium libraries with release mode ( d7638c8 ), closes #55 1.1.1-pre.1 (2021-11-05) Bug Fixes logging: remove unnecessary debug logs ( 7550061 ) msgpack: fix enum serialization when using IL2CPP ( 0c1a4d0 ) plugins: remove \"lib\" prefix from certain plugins ( 0ecf98f ), closes #55 plugins: remove unnecessary android static library plugin ( fc09b66 ) 1.1.0 (2021-11-03) Bug Fixes add missing meta files ( 2407941 ) osx: fix multiple sodium.bundle plugins ( b3b9389 ) Features editor: Make many models serializable and add property drawers to render them in editor ( 09185fc ), closes #41 support WebGL ( 1890694 ), closes #52 1.1.0-pre.3 (2021-11-03) Features editor: Make many models serializable and add property drawers to render them in editor ( 09185fc ), closes #41 1.1.0-pre.2 (2021-11-01) Bug Fixes osx: fix multiple sodium.bundle plugins ( b3b9389 ) 1.1.0-pre.1 (2021-10-31) Features support WebGL ( 1890694 ), closes #52 1.0.1-pre.1 (2021-10-29) Bug Fixes add missing meta files ( 2407941 ) 1.0.0 (2021-10-29) Bug Fixes 🐛 fix RawTransaction.Equals ( b0769da ) 🐛 fix compile errs ( 9e59233 ) 🐛 fix crash on ArrayComparer.Equals ( e2931e0 ) 🐛 fix issues with codegen and AOT compilation ( 4d4b583 ) 🐛 fix keyworded enum types formatting as numbers ( ee6f363 ) 🐛 Fix npm release ( e3fed38 ) 🐛 Fix repository ( b4efa6e ) 🐛 fix signatures ( 1e3a9cc ) 🚩 Update package registry ( 64987f8 ) ✅ Fix CI tests on Github Actions can't find libsodium ( db8718a ), closes #12 algod: 🐛 fix AlgodClient.TealCompile ( bd05ed3 ), closes #20 algod: 🐛 fix AssetParams serialization ( 6f2b830 ) algod: 🐛 fix pending transactions not returning messagepack ( 3b881a3 ) algod: 🐛 fix vrfpubkey formatter lookup ( 08a09ae ) algod: 🐛 fix vrfpubkey formatting ( f3c1a56 ) algod: 🐛 replace VrfPubKey with FixedString128Bytes ( e6ce383 ), closes #42 crypto: fix libsodium not working on OSX ( cb0b2c4 ) fix empty dirs finding their way into the project ( 5a00890 ) indexer: 🐛 add missing fields to Account model ( 86122de ) indexer: 🐛 add token back to indexer ( c704eb2 ) indexer: 🐛 fix HealthCheck missing serialization logic ( f11aa38 ) indexer: 🐛 fix indexer requires token ( ef2d461 ) indexer: 🐛 fix transaction formatters missing valid msgpack fields ( e18f84a ) indexer: 🔥 fix huge issue with indexer where query parameters were in body ( 92cb794 ) indexer: ✨ fix TealValue msgpack fieldnames ( 2da8001 ) indexer: fix missing Version field in HealthCheck ( f70c73d ) json: 🐛 fix PrivateKey JSON deserialization err ( 63baf88 ) json: 🐛 fix empty json objects missing begin object '{' char ( d2b0539 ) kmd: 🎨 fix KmdClient API incorrectly using optional args ( 29374e1 ), closes #36 kmd: 🐛 fix GenerateKeyRequest to use wallet_handle_token not password ( 19c3215 ) kmd: 🐛 fix ImportKeyRequest to use wallet_handle_token not password ( 4a60a6c ) kmd: 🐛 fix KmdClient.SignTransaction returning a signed transaction message ( 6df57ec ) kmd: 🐛 fix WalletHandle not added to formatter cache ( be0495d ) kmd: 🐛 fix multisig ( 78559d0 ) serialization: 🐛 fix Block not having a formatter ( d840dfe ) serialization: 🐛 fix BlockResponse Serialization ( 6925142 ) serialization: 🐛 fix JsonWriter not writing to NativeText ( 9a21502 ) serialization: 🐛 fix SignedTransaction serialization ( 2f7bc6b ) serialization: 🐛 fix TransactionId serialization ( f4fcb74 ) serialization: 🐛 fix discrepancy between TransactionId and TransactinIdResponse ( 4bef93f ) serialization: 🐛 fix issue where fixed strings were incorrectly being added to the queryparams ( 338790b ) serialization: 🐛 fix missing AlgoApiObject on all Transaction Params ( d8f5b27 ) transaction: 🐛 fix OnCompletion having incorrect byte values ( 9786105 ) transaction: 🐛 fix incorrect constructor in Transaction.ApplicationCall ( 521fb98 ) transaction: remove unused assetCloseTo param in AssetClawback ( ce4d004 ) Code Refactoring 🔥 remove NativeSliceExtensions ( 325bfa9 ) 🔥 remove some verify methods in the transaction ( 2432bdd ) 🔥 remove unnecessary SendTransactionRaw ( 552dac8 ) ♻️ convert all SignedTransaction<> to a single SignedTransaction ( 4909d60 ) ♻️ rename RawSignedTransaction -> SignedTransaction ( 787b160 ) ♻️ rename RawTransaction -> Transaction ( b3c4129 ) ♻️ rename AlgoApiKeyAttribute -> AlgoApiFieldAttribute ( 607dab2 ) algod: ♻️ rename Block -> BlockResponse ( de1999c ) algod: ♻️ replace AccountParticipation with Transaction.KeyRegistration.Params ( b7e9ba7 ) kmd: ♻️ replace Request with explicit method params ( 1b63b9b ) remove .NET 4.8 requirement ( 077ea1e ), closes #19 #9 Features 👷 Add npmjs support ( 42c57c3 ) ➕ Add libsodium ios, android, and windows ( 066a8ad ) ✨ Add Account.Generate ( 8cfea18 ) ✨ Add Address struct ( 9c63147 ) ✨ Add basic signed transaction support ( 64bfae2 ) ✨ Add basic transaction support for message pack serialization and deserialization ( 13dc164 ) ✨ Add checksums ( 1427b4c ) ✨ add FixedBytesFormatter ( e686c0d ) ✨ Add IEquatable, GetHashCode for RawTransaction ( fea1031 ) ✨ add LogicSig implementation ( bfcea16 ) ✨ Add Mnemonic.FromString and Mnemonic.ToString ( 5f2e0ef ) ✨ add readOnly support ( 4f94ee4 ) ✨ Add Sha512 interop ( 72412b8 ) ✨ Add start of Native Integration with Libsodium ( 04dadfb ) ✨ Added Transaction Header, Payment ( f4f5004 ) ✨ implement asset configuration transaction ( 15201f2 ), closes #27 ✨ implement AssetFreezeTransaction ( aeb6bf7 ), closes #26 ✨ implement AssetTransfer Transaction ( 2d74093 ), closes #23 ✨ update AlgoApiFormatterLookup ( 509f021 ) Add Mnemonic and Key datastructs ( 0338af0 ) Add signed transaction support for payment transactions ( 4cb4b4c ) algod: add support for sending a group of transactions ( c2337e0 ) algod: implement Algod Client ( ba2920e ), closes #10 #16 #18 indexer: ♻️ rename ApplicationStateSchema -> StateSchema ( c2c1752 ) indexer: ✨ add IIndexerClient ( c383659 ) indexer: ✨ implement AccountQuery ( 3bc4c45 ) indexer: ✨ implement AccountResponse ( df7875c ) indexer: ✨ implement AccountsQuery ( eb4f138 ) indexer: ✨ implement AccountsResponse ( 15b95a0 ) indexer: ✨ implement AddressRole ( 819fee1 ) indexer: ✨ implement Application ( 6efc045 ) indexer: ✨ implement ApplicationLocalState ( b9f5e19 ) indexer: ✨ implement ApplicationQuery ( 90529fe ) indexer: ✨ implement ApplicationResponse ( 2968a38 ) indexer: ✨ implement ApplicationsQuery ( 1b2a010 ) indexer: ✨ implement ApplicationsResponse ( f3120b3 ) indexer: ✨ implement Asset ( 3e2b9e6 ) indexer: ✨ implement AssetHolding ( b7e6714 ) indexer: ✨ implement AssetParams ( 3e25148 ) indexer: ✨ implement AssetQuery ( 2c8f30d ) indexer: ✨ implement AssetResponse ( f44da47 ) indexer: ✨ implement AssetsResponse ( abf6ccd ) indexer: ✨ implement BalancesQuery ( 37c652e ) indexer: ✨ implement BalancesResponse ( bef374a ) indexer: ✨ implement Block ( 8168949 ) indexer: ✨ implement BlockRewards ( 43a2e0d ) indexer: ✨ implement BlockUpgradeStatus ( 34ee633 ) indexer: ✨ implement BlockUpgradeVote ( 46bfbdf ) indexer: ✨ implement ErrorResponse msgpack fields ( 7bb31e4 ) indexer: ✨ implement EvalDelta msgpack fields ( e7ce847 ) indexer: ✨ implement EvalDeltaKeyValue msgpack fields ( f564579 ) indexer: ✨ implement HealthCheck ( 57e38ee ) indexer: ✨ implement IndexerClient.GetAccount ( e088877 ) indexer: ✨ implement IndexerClient.GetAccounts ( 1fa9f5b ) indexer: ✨ implement IndexerClient.GetHealth ( ee98909 ) indexer: ✨ implement IndexerClient ( b39c115 ) indexer: ✨ implement LogicSig json fields ( a547772 ) indexer: ✨ implement MiniAssetHolding ( 6df0bd0 ) indexer: ✨ implement MultiSig.SubSignature ( d995b21 ) indexer: ✨ implement MultiSig ( 2b33c02 ) indexer: ✨ implement OnCompletion ( b7181f3 ) indexer: ✨ implement TealKeyValue msgPack fields ( bfcb1ad ) indexer: ✨ implement Transaction.ApplicationCall ( 4e800be ) indexer: ✨ implement Transaction.ApplicationCall model fields ( e05a1b3 ) indexer: ✨ implement Transaction.AssetConfiguration model fields ( b021ac9 ) indexer: ✨ implement Transaction.AssetFreeze model fields ( 655aee9 ) indexer: ✨ implement Transaction.AssetTransfer model fields ( 5322ad7 ) indexer: ✨ implement Transaction.KeyRegistration ( da15081 ) indexer: ✨ implement Transaction.KeyRegistration model fields ( ab75259 ) indexer: ✨ implement TransactionResponse ( 0cdcdde ) indexer: ✨ implement TransactionsQuery ( a9e353a ) indexer: ✨ implement AssetsQuery ( ebfb08c ) indexer: ✨ implement TransactionsResponse ( 27345f5 ) json: ✨ implement JsonReader.Skip ( cba58d6 ) json: ✨ implement JsonWriter.WriteRaw ( f780932 ) json: ✨ implement ReadRaw ( c2ec519 ) kmd: ✨ add Error to ErrorMessage which is used for kmd ( b64aac6 ) kmd: ✨ implement APIV1DELETEKeyResponse ( d273c12 ) kmd: ✨ implement APIV1DELETEMultisigResponse ( b323213 ) kmd: ✨ implement APIV1GETWalletsResponse ( cd7180d ) kmd: ✨ implement APIV1Wallet ( 4b74869 ) kmd: ✨ implement APIV1WalletHandle ( da73b67 ) kmd: ✨ implement CreateWalletRequest ( 02cac0a ) kmd: ✨ implement CreateWalletRequest api fields ( 9f1b667 ) kmd: ✨ implement CreateWalletResponse ( d0c3965 ) kmd: ✨ implement DeleteKeyRequest ( 9de69d0 ) kmd: ✨ implement DeleteMultiSigRequest ( 4d0b859 ) kmd: ✨ implement ExportKeyRequest ( 2dfed57 ) kmd: ✨ implement ExportKeyResponse.Equals ( a5769c7 ) kmd: ✨ implement ExportKeyResponse ( f5dc29a ) kmd: ✨ implement ExportMasterKeyRequest ( b668ac9 ) kmd: ✨ implement ExportMasterKeyResponse ( eaf3066 ) kmd: ✨ implement ExportMultiSigRequest ( eab6771 ) kmd: ✨ implement ExportMultiSigResponse ( 41677c2 ) kmd: ✨ implement GenerateKeyResponse ( 82f0749 ) kmd: ✨ implement GenerateMasterKeyRequest ( 41f2b64 ) kmd: ✨ implement ImportKeyRequest ( 09c8308 ) kmd: ✨ implement ImportKeyResponse ( 338e9e7 ) kmd: ✨ implement ImportMultiSigRequest ( b8eb046 ) kmd: ✨ implement ImportMultiSigResponse ( 6a92419 ) kmd: ✨ implement InitWalletHandleTokenRequest ( 5c2bde4 ) kmd: ✨ implement InitWalletHandleTokenResponse ( 4eacfe2 ) kmd: ✨ implement KmdClient ( b37cef3 ), closes #13 kmd: ✨ implement ListKeysRequest ( 70ce0ff ) kmd: ✨ implement ListKeysResponse ( 6fb2a6d ) kmd: ✨ implement ListMultiSigRequest ( 3da753e ) kmd: ✨ implement ListMultiSigResponse ( d0a6782 ) kmd: ✨ implement ListWalletsRequest ( 91de444 ) kmd: ✨ implement ReleaseWalletHandleTokenRequest ( c6a836d ) kmd: ✨ implement ReleaseWalletHandleTokenResponse ( 3f2d081 ) kmd: ✨ implement RenameWalletRequest ( ccf7d3e ) kmd: ✨ implement RenameWalletResponse ( 1d35264 ) kmd: ✨ implement RenewWalletHandleTokenRequest ( 76269cc ) kmd: ✨ implement RenewWalletHandleTokenResponse ( d4f6a9a ) kmd: ✨ implement SignMultiSigRequest ( d535391 ) kmd: ✨ implement SignMultiSigResponse ( 0b16ac4 ) kmd: ✨ implement SignProgramMultiSigRequest ( 9460af9 ) kmd: ✨ implement SignProgramMultiSigResponse ( ee5ea0e ) kmd: ✨ implement SignProgramRequest ( c8826fa ) kmd: ✨ implement SignTransactionRequest ( 38ec667 ) kmd: ✨ implement SignTransactionResponse ( e88c293 ) kmd: ✨ implement VersionsRequest ( 90f9cb6 ) kmd: ✨ implement VersionsResponse ( 15ab570 ) kmd: ✨ implement WalletInfoResponse ( cb073e9 ) kmd: implement SignProgramResponse ( f529e2a ) msgpack: ✨ implement MessagePackReader.ReadRaw ( 0f6e28a ) msgpack: ✨ implement MessagePackWriter.WriteRaw ( 703544c ) networking: ✨ add ApiResponse API to ApiResponse<> ( b9728f9 ) serialization: ✨ add formatters for PrivateKey , PublicKey , and Signature ( 11d345b ) serialization: ✨ add support for deserializing byte[] ( 6764157 ) serialization: ✨ add support for generically serializing byte enums to strings ( bae5d83 ) serialization: ✨ finish implementing MessagePackReader.Integers and MessagePackWriter.Integers ( d669359 ) serialization: ✨ finish implementing serializer/deserializer methods in EnumFormatter ( 414991f ) serialization: ✨ implement AlgoApiObject ( 9ef3335 ) serialization: ✨ implement Timestamp ( e520962 ) serialization: 🎉 update formatter cache ( ae346d6 ) transaction: ✨ add GetSignature and ToRaw extensions to ITransaction ( 426dea6 ) transaction: ✨ add RegisterAccountOnline and RegisterAccountOffline APIs ( d52e953 ) transaction: ✨ add Transaction.AppCreate and Transaction.AppConfigure APIs ( 0dd2e75 ) transaction: ✨ add Transaction.AssetCreate Transaction.AssetConfigure and Transaction.AssetDelete API ( 4192aba ) transaction: ✨ add Transaction.AssetFreeze API ( d8b5721 ) transaction: ✨ add Transaction.Payment API ( 241ec4c ) transaction: ✨ implement address from application id ( a7df476 ) transaction: ✨ implement AssetClawback and AssetAccept ( ccb2dc6 ), closes #24 #25 transaction: ✨ implement atomic transfers ( c97fdc1 ), closes #45 transaction: ✨ use TransactionParams in Transaction constructors ( c99bd3f ) unity: make AlgoApiClient's Serializable ( a6ef8a4 ) Reverts demo: 🔥 remove bossroom assets... too big to be a sample ( d768029 ) BREAKING CHANGES Removing NativeSliceExtensions algod: AccountParticipation no longer exists transaction: All transaction constructors have been changed to use TransactionParams indexer: Removed token from IndexerClient constructor kmd: changes IKmdClient API to use parameters instead of Request objs indexer: indexer queries are now given as optional arguments remove Transaction.VerifySignature , SignedTransaction.Verify signed transactions are now represented by SignedTransaction (non-generic) renamed RawSignedTransaction -> SignedTransaction RawTransaction renamed to Transaction AlgoApiKeyAttribute -> AlgoApiFieldAttribute algod: Block renamed to BlockResponse Replace Buffer with GetUnsafePtr Algo Serializer API has completely changed... Removes the SendTransactionRaw method from AlgodClient 1.0.0-pre.7 (2021-10-29) Bug Fixes transaction: remove unused assetCloseTo param in AssetClawback ( f45dac1 ) 1.0.0-pre.6 (2021-10-28) Bug Fixes indexer: fix missing Version field in HealthCheck ( 39c3444 ) Features algod: add support for sending a group of transactions ( a7a7695 ) 1.0.0-pre.5 (2021-10-27) Bug Fixes crypto: fix libsodium not working on OSX ( 1154450 ) 1.0.0-pre.4 (2021-10-27) Features unity: make AlgoApiClient's Serializable ( 4a3aa11 ) 1.0.0-pre.3 (2021-10-25) Code Refactoring 🔥 remove NativeSliceExtensions ( c5c7715 ) BREAKING CHANGES Removing NativeSliceExtensions 1.0.0-pre.2 (2021-10-25) Bug Fixes fix empty dirs finding their way into the project ( 82afc9d ) 1.0.0-pre.1 (2021-10-24) Bug Fixes 🐛 fix RawTransaction.Equals ( f6bd889 ) 🐛 fix compile errs ( 7a03ed9 ) 🐛 fix crash on ArrayComparer.Equals ( 8ca1b06 ) 🐛 fix issues with codegen and AOT compilation ( d2f9bdc ) 🐛 fix keyworded enum types formatting as numbers ( d686c13 ) 🐛 Fix npm release ( 9e68078 ) 🐛 Fix repository ( e765589 ) 🐛 fix signatures ( 2fb4614 ) 🚩 Update package registry ( a0800bc ) ✅ Fix CI tests on Github Actions can't find libsodium ( 20c4ad5 ), closes #12 algod: 🐛 fix AlgodClient.TealCompile ( 8f5a67a ), closes #20 algod: 🐛 fix AssetParams serialization ( cbf9a69 ) algod: 🐛 fix pending transactions not returning messagepack ( dca09f8 ) algod: 🐛 fix vrfpubkey formatter lookup ( 0bb0014 ) algod: 🐛 fix vrfpubkey formatting ( 7d02443 ) algod: 🐛 replace VrfPubKey with FixedString128Bytes ( 94b02b0 ), closes #42 indexer: 🐛 add missing fields to Account model ( 5732a1d ) indexer: 🐛 add token back to indexer ( 023cb05 ) indexer: 🐛 fix HealthCheck missing serialization logic ( f5165c6 ) indexer: 🐛 fix indexer requires token ( 57f6114 ) indexer: 🐛 fix transaction formatters missing valid msgpack fields ( bf917ac ) indexer: 🔥 fix huge issue with indexer where query parameters were in body ( 7bcca20 ) indexer: ✨ fix TealValue msgpack fieldnames ( 2a6ef27 ) json: 🐛 fix PrivateKey JSON deserialization err ( cb327e0 ) json: 🐛 fix empty json objects missing begin object '{' char ( af9a2f1 ) kmd: 🎨 fix KmdClient API incorrectly using optional args ( a53998b ), closes #36 kmd: 🐛 fix GenerateKeyRequest to use wallet_handle_token not password ( a86c25e ) kmd: 🐛 fix ImportKeyRequest to use wallet_handle_token not password ( f020a03 ) kmd: 🐛 fix KmdClient.SignTransaction returning a signed transaction message ( f0a354c ) kmd: 🐛 fix WalletHandle not added to formatter cache ( 4c30939 ) kmd: 🐛 fix multisig ( fc7bcd6 ) serialization: 🐛 fix Block not having a formatter ( dec6176 ) serialization: 🐛 fix BlockResponse Serialization ( 1252a16 ) serialization: 🐛 fix JsonWriter not writing to NativeText ( 2b61659 ) serialization: 🐛 fix SignedTransaction serialization ( f4bde8d ) serialization: 🐛 fix TransactionId serialization ( b7e07ca ) serialization: 🐛 fix discrepancy between TransactionId and TransactinIdResponse ( d0c0370 ) serialization: 🐛 fix issue where fixed strings were incorrectly being added to the queryparams ( a3e6fd9 ) serialization: 🐛 fix missing AlgoApiObject on all Transaction Params ( a11015f ) transaction: 🐛 fix OnCompletion having incorrect byte values ( 514a378 ) transaction: 🐛 fix incorrect constructor in Transaction.ApplicationCall ( 98b5829 ) Code Refactoring 🔥 remove some verify methods in the transaction ( 70a8308 ) 🔥 remove unnecessary SendTransactionRaw ( 09b3bdc ) ♻️ convert all SignedTransaction<> to a single SignedTransaction ( 26fa65a ) ♻️ rename RawSignedTransaction -> SignedTransaction ( 059c6a3 ) ♻️ rename RawTransaction -> Transaction ( bade09e ) ♻️ rename AlgoApiKeyAttribute -> AlgoApiFieldAttribute ( 1b37028 ) algod: ♻️ rename Block -> BlockResponse ( eca9fb6 ) algod: ♻️ replace AccountParticipation with Transaction.KeyRegistration.Params ( 3b624ee ) kmd: ♻️ replace Request with explicit method params ( 030a0a9 ) remove .NET 4.8 requirement ( 9f55707 ), closes #19 #9 Features 👷 Add npmjs support ( 56f60f0 ) ➕ Add libsodium ios, android, and windows ( 00c9511 ) ✨ Add Account.Generate ( 95233bf ) ✨ Add Address struct ( d92b903 ) ✨ Add basic signed transaction support ( bb5900f ) ✨ Add basic transaction support for message pack serialization and deserialization ( 63243ed ) ✨ Add checksums ( 2bc2189 ) ✨ add FixedBytesFormatter ( 941eb3f ) ✨ Add IEquatable, GetHashCode for RawTransaction ( 885928e ) ✨ add LogicSig implementation ( 51a21e0 ) ✨ Add Mnemonic.FromString and Mnemonic.ToString ( d3a88c6 ) ✨ add readOnly support ( 6070565 ) ✨ Add Sha512 interop ( 86aabf5 ) ✨ Add start of Native Integration with Libsodium ( 55e325f ) ✨ Added Transaction Header, Payment ( d3ebced ) ✨ implement asset configuration transaction ( 4f9ec58 ), closes #27 ✨ implement AssetFreezeTransaction ( e3233bf ), closes #26 ✨ implement AssetTransfer Transaction ( 62a1841 ), closes #23 ✨ update AlgoApiFormatterLookup ( cc112e5 ) Add Mnemonic and Key datastructs ( 4370f74 ) Add signed transaction support for payment transactions ( c07d370 ) algod: implement Algod Client ( a7c9e90 ), closes #10 #16 #18 indexer: ♻️ rename ApplicationStateSchema -> StateSchema ( 7b02f70 ) indexer: ✨ add IIndexerClient ( 093153e ) indexer: ✨ implement AccountQuery ( bda5301 ) indexer: ✨ implement AccountResponse ( 09d7fb9 ) indexer: ✨ implement AccountsQuery ( e7d56e2 ) indexer: ✨ implement AccountsResponse ( ea01260 ) indexer: ✨ implement AddressRole ( 3325b60 ) indexer: ✨ implement Application ( 144d04d ) indexer: ✨ implement ApplicationLocalState ( 9ad284f ) indexer: ✨ implement ApplicationQuery ( de02370 ) indexer: ✨ implement ApplicationResponse ( fa34b20 ) indexer: ✨ implement ApplicationsQuery ( 914ca8b ) indexer: ✨ implement ApplicationsResponse ( e342cdc ) indexer: ✨ implement Asset ( 161f361 ) indexer: ✨ implement AssetHolding ( 203785a ) indexer: ✨ implement AssetParams ( ac78bfe ) indexer: ✨ implement AssetQuery ( c8eda94 ) indexer: ✨ implement AssetResponse ( cd8e48f ) indexer: ✨ implement AssetsResponse ( ade022d ) indexer: ✨ implement BalancesQuery ( b8f167e ) indexer: ✨ implement BalancesResponse ( c7ae299 ) indexer: ✨ implement Block ( 2533f24 ) indexer: ✨ implement BlockRewards ( bb49cb0 ) indexer: ✨ implement BlockUpgradeStatus ( e9a0423 ) indexer: ✨ implement BlockUpgradeVote ( de5e72e ) indexer: ✨ implement ErrorResponse msgpack fields ( 358e6a6 ) indexer: ✨ implement EvalDelta msgpack fields ( 45b2df2 ) indexer: ✨ implement EvalDeltaKeyValue msgpack fields ( bd3c230 ) indexer: ✨ implement HealthCheck ( a164577 ) indexer: ✨ implement IndexerClient.GetAccount ( 88ba11a ) indexer: ✨ implement IndexerClient.GetAccounts ( 2e427f1 ) indexer: ✨ implement IndexerClient.GetHealth ( 0883ff0 ) indexer: ✨ implement IndexerClient ( d7fd35a ) indexer: ✨ implement LogicSig json fields ( b22297c ) indexer: ✨ implement MiniAssetHolding ( 59941b8 ) indexer: ✨ implement MultiSig.SubSignature ( ef526ec ) indexer: ✨ implement MultiSig ( df959a7 ) indexer: ✨ implement OnCompletion ( 04227b9 ) indexer: ✨ implement TealKeyValue msgPack fields ( e521553 ) indexer: ✨ implement Transaction.ApplicationCall ( 5a5e819 ) indexer: ✨ implement Transaction.ApplicationCall model fields ( 69d64e8 ) indexer: ✨ implement Transaction.AssetConfiguration model fields ( baf7c2e ) indexer: ✨ implement Transaction.AssetFreeze model fields ( be45b90 ) indexer: ✨ implement Transaction.AssetTransfer model fields ( 84aa15e ) indexer: ✨ implement Transaction.KeyRegistration ( 69e004e ) indexer: ✨ implement Transaction.KeyRegistration model fields ( 44029ca ) indexer: ✨ implement TransactionResponse ( 430a1fa ) indexer: ✨ implement TransactionsQuery ( 9ec7f4f ) indexer: ✨ implement AssetsQuery ( e8d6e55 ) indexer: ✨ implement TransactionsResponse ( e1a46f8 ) json: ✨ implement JsonReader.Skip ( 0d6e6ab ) json: ✨ implement JsonWriter.WriteRaw ( 1643bad ) json: ✨ implement ReadRaw ( 384abf8 ) kmd: ✨ add Error to ErrorMessage which is used for kmd ( 3c37a94 ) kmd: ✨ implement APIV1DELETEKeyResponse ( 81f6c1e ) kmd: ✨ implement APIV1DELETEMultisigResponse ( 4c1d6db ) kmd: ✨ implement APIV1GETWalletsResponse ( 9025e9a ) kmd: ✨ implement APIV1Wallet ( e514183 ) kmd: ✨ implement APIV1WalletHandle ( 8bae4b4 ) kmd: ✨ implement CreateWalletRequest ( 63882eb ) kmd: ✨ implement CreateWalletRequest api fields ( f32094f ) kmd: ✨ implement CreateWalletResponse ( 2579231 ) kmd: ✨ implement DeleteKeyRequest ( 5c89319 ) kmd: ✨ implement DeleteMultiSigRequest ( 15afda0 ) kmd: ✨ implement ExportKeyRequest ( a8b1131 ) kmd: ✨ implement ExportKeyResponse.Equals ( 010e656 ) kmd: ✨ implement ExportKeyResponse ( db01766 ) kmd: ✨ implement ExportMasterKeyRequest ( 2a8ed81 ) kmd: ✨ implement ExportMasterKeyResponse ( 2843847 ) kmd: ✨ implement ExportMultiSigRequest ( e67c925 ) kmd: ✨ implement ExportMultiSigResponse ( bac0edb ) kmd: ✨ implement GenerateKeyResponse ( 1d6795f ) kmd: ✨ implement GenerateMasterKeyRequest ( 6503dd8 ) kmd: ✨ implement ImportKeyRequest ( 521f7c1 ) kmd: ✨ implement ImportKeyResponse ( 83798a6 ) kmd: ✨ implement ImportMultiSigRequest ( 5eb5d42 ) kmd: ✨ implement ImportMultiSigResponse ( 001f3ea ) kmd: ✨ implement InitWalletHandleTokenRequest ( 36dd459 ) kmd: ✨ implement InitWalletHandleTokenResponse ( 26db31b ) kmd: ✨ implement KmdClient ( 7433060 ), closes #13 kmd: ✨ implement ListKeysRequest ( b55fe67 ) kmd: ✨ implement ListKeysResponse ( 0096bd5 ) kmd: ✨ implement ListMultiSigRequest ( ce667d1 ) kmd: ✨ implement ListMultiSigResponse ( 550a0ed ) kmd: ✨ implement ListWalletsRequest ( b3b5023 ) kmd: ✨ implement ReleaseWalletHandleTokenRequest ( ff024de ) kmd: ✨ implement ReleaseWalletHandleTokenResponse ( 719c393 ) kmd: ✨ implement RenameWalletRequest ( c5a9f3b ) kmd: ✨ implement RenameWalletResponse ( 6e5b55e ) kmd: ✨ implement RenewWalletHandleTokenRequest ( 0a0d589 ) kmd: ✨ implement RenewWalletHandleTokenResponse ( d85e5f5 ) kmd: ✨ implement SignMultiSigRequest ( e1dfee9 ) kmd: ✨ implement SignMultiSigResponse ( 83ea09f ) kmd: ✨ implement SignProgramMultiSigRequest ( 063ed1d ) kmd: ✨ implement SignProgramMultiSigResponse ( b5e5b5e ) kmd: ✨ implement SignProgramRequest ( 52ccb07 ) kmd: ✨ implement SignTransactionRequest ( c542582 ) kmd: ✨ implement SignTransactionResponse ( d7080ab ) kmd: ✨ implement VersionsRequest ( f70f0fd ) kmd: ✨ implement VersionsResponse ( 7c85ec2 ) kmd: ✨ implement WalletInfoResponse ( 6b3edc7 ) kmd: implement SignProgramResponse ( 978a31d ) msgpack: ✨ implement MessagePackReader.ReadRaw ( c2dec22 ) msgpack: ✨ implement MessagePackWriter.WriteRaw ( d5ae90e ) networking: ✨ add ApiResponse API to ApiResponse<> ( 8556c53 ) serialization: ✨ add formatters for PrivateKey , PublicKey , and Signature ( 2dedd67 ) serialization: ✨ add support for deserializing byte[] ( 3ef497f ) serialization: ✨ add support for generically serializing byte enums to strings ( 424c8b4 ) serialization: ✨ finish implementing MessagePackReader.Integers and MessagePackWriter.Integers ( 37d8f20 ) serialization: ✨ finish implementing serializer/deserializer methods in EnumFormatter ( 3af569f ) serialization: ✨ implement AlgoApiObject ( 74456b6 ) serialization: ✨ implement Timestamp ( cc1159b ) serialization: 🎉 update formatter cache ( 029f841 ) transaction: ✨ add GetSignature and ToRaw extensions to ITransaction ( e4a3ad5 ) transaction: ✨ add RegisterAccountOnline and RegisterAccountOffline APIs ( 71d42c1 ) transaction: ✨ add Transaction.AppCreate and Transaction.AppConfigure APIs ( c64469a ) transaction: ✨ add Transaction.AssetCreate Transaction.AssetConfigure and Transaction.AssetDelete API ( 259b37b ) transaction: ✨ add Transaction.AssetFreeze API ( 160f837 ) transaction: ✨ add Transaction.Payment API ( 88e918d ) transaction: ✨ implement address from application id ( 9e3c883 ) transaction: ✨ implement AssetClawback and AssetAccept ( c3578ec ), closes #24 #25 transaction: ✨ implement atomic transfers ( 21f7ee3 ), closes #45 transaction: ✨ use TransactionParams in Transaction constructors ( a966320 ) Reverts demo: 🔥 remove bossroom assets... too big to be a sample ( e53192d ) BREAKING CHANGES algod: AccountParticipation no longer exists transaction: All transaction constructors have been changed to use TransactionParams indexer: Removed token from IndexerClient constructor kmd: changes IKmdClient API to use parameters instead of Request objs indexer: indexer queries are now given as optional arguments remove Transaction.VerifySignature , SignedTransaction.Verify signed transactions are now represented by SignedTransaction (non-generic) renamed RawSignedTransaction -> SignedTransaction RawTransaction renamed to Transaction AlgoApiKeyAttribute -> AlgoApiFieldAttribute algod: Block renamed to BlockResponse Replace Buffer with GetUnsafePtr Algo Serializer API has completely changed... Removes the SendTransactionRaw method from AlgodClient 1.0.0-exp.27 (2021-10-24) Bug Fixes algod: 🐛 fix AlgodClient.TealCompile ( 8f5a67a ), closes #20 algod: 🐛 fix AssetParams serialization ( cbf9a69 ) algod: 🐛 fix vrfpubkey formatter lookup ( 0bb0014 ) algod: 🐛 fix vrfpubkey formatting ( 7d02443 ) algod: 🐛 replace VrfPubKey with FixedString128Bytes ( 94b02b0 ), closes #42 kmd: 🎨 fix KmdClient API incorrectly using optional args ( a53998b ), closes #36 serialization: 🐛 fix TransactionId serialization ( b7e07ca ) transaction: 🐛 fix OnCompletion having incorrect byte values ( 514a378 ) transaction: 🐛 fix incorrect constructor in Transaction.ApplicationCall ( 98b5829 ) Code Refactoring algod: ♻️ replace AccountParticipation with Transaction.KeyRegistration.Params ( 3b624ee ) Features transaction: ✨ add RegisterAccountOnline and RegisterAccountOffline APIs ( 71d42c1 ) transaction: ✨ add Transaction.AppCreate and Transaction.AppConfigure APIs ( c64469a ) transaction: ✨ add Transaction.AssetCreate Transaction.AssetConfigure and Transaction.AssetDelete API ( 259b37b ) transaction: ✨ add Transaction.AssetFreeze API ( 160f837 ) transaction: ✨ add Transaction.Payment API ( 88e918d ) transaction: ✨ implement address from application id ( 9e3c883 ) transaction: ✨ implement AssetClawback and AssetAccept ( c3578ec ), closes #24 #25 transaction: ✨ implement atomic transfers ( 21f7ee3 ), closes #45 transaction: ✨ use TransactionParams in Transaction constructors ( a966320 ) BREAKING CHANGES algod: AccountParticipation no longer exists transaction: All transaction constructors have been changed to use TransactionParams 1.0.0-exp.27 (2021-10-23) Bug Fixes algod: 🐛 fix AlgodClient.TealCompile ( 8f5a67a ), closes #20 algod: 🐛 fix AssetParams serialization ( cbf9a69 ) algod: 🐛 fix vrfpubkey formatter lookup ( 0bb0014 ) algod: 🐛 fix vrfpubkey formatting ( 7d02443 ) algod: 🐛 replace VrfPubKey with FixedString128Bytes ( 94b02b0 ), closes #42 kmd: 🎨 fix KmdClient API incorrectly using optional args ( a53998b ), closes #36 serialization: 🐛 fix TransactionId serialization ( b7e07ca ) transaction: 🐛 fix OnCompletion having incorrect byte values ( 514a378 ) transaction: 🐛 fix incorrect constructor in Transaction.ApplicationCall ( 98b5829 ) Code Refactoring algod: ♻️ replace AccountParticipation with Transaction.KeyRegistration.Params ( 3b624ee ) Features transaction: ✨ add RegisterAccountOnline and RegisterAccountOffline APIs ( 71d42c1 ) transaction: ✨ add Transaction.AppCreate and Transaction.AppConfigure APIs ( c64469a ) transaction: ✨ add Transaction.AssetCreate Transaction.AssetConfigure and Transaction.AssetDelete API ( 259b37b ) transaction: ✨ add Transaction.AssetFreeze API ( 160f837 ) transaction: ✨ add Transaction.Payment API ( 88e918d ) transaction: ✨ implement address from application id ( 9e3c883 ) transaction: ✨ implement AssetClawback and AssetAccept ( c3578ec ), closes #24 #25 transaction: ✨ implement atomic transfers ( 21f7ee3 ), closes #45 transaction: ✨ use TransactionParams in Transaction constructors ( a966320 ) BREAKING CHANGES algod: AccountParticipation no longer exists transaction: All transaction constructors have been changed to use TransactionParams 1.0.0-exp.26 (2021-10-13) Bug Fixes indexer: 🐛 add token back to indexer ( 023cb05 ) indexer: 🐛 fix indexer requires token ( 57f6114 ) json: 🐛 fix PrivateKey JSON deserialization err ( cb327e0 ) json: 🐛 fix empty json objects missing begin object '{' char ( af9a2f1 ) kmd: 🐛 fix GenerateKeyRequest to use wallet_handle_token not password ( a86c25e ) kmd: 🐛 fix ImportKeyRequest to use wallet_handle_token not password ( f020a03 ) kmd: 🐛 fix KmdClient.SignTransaction returning a signed transaction message ( f0a354c ) kmd: 🐛 fix WalletHandle not added to formatter cache ( 4c30939 ) kmd: 🐛 fix multisig ( fc7bcd6 ) Code Refactoring kmd: ♻️ replace Request with explicit method params ( 030a0a9 ) Features json: ✨ implement JsonReader.Skip ( 0d6e6ab ) serialization: ✨ add support for deserializing byte[] ( 3ef497f ) transaction: ✨ add GetSignature and ToRaw extensions to ITransaction ( e4a3ad5 ) BREAKING CHANGES indexer: Removed token from IndexerClient constructor kmd: changes IKmdClient API to use parameters instead of Request objs 1.0.0-exp.25 (2021-10-08) Bug Fixes 🐛 fix keyworded enum types formatting as numbers ( d686c13 ) algod: 🐛 fix pending transactions not returning messagepack ( dca09f8 ) indexer: 🐛 add missing fields to Account model ( 5732a1d ) indexer: 🐛 fix HealthCheck missing serialization logic ( f5165c6 ) indexer: 🔥 fix huge issue with indexer where query parameters were in body ( 7bcca20 ) serialization: 🐛 fix Block not having a formatter ( dec6176 ) serialization: 🐛 fix BlockResponse Serialization ( 1252a16 ) serialization: 🐛 fix JsonWriter not writing to NativeText ( 2b61659 ) serialization: 🐛 fix discrepancy between TransactionId and TransactinIdResponse ( d0c0370 ) serialization: 🐛 fix issue where fixed strings were incorrectly being added to the queryparams ( a3e6fd9 ) serialization: 🐛 fix missing AlgoApiObject on all Transaction Params ( a11015f ) Features networking: ✨ add ApiResponse API to ApiResponse<> ( 8556c53 ) serialization: ✨ add support for generically serializing byte enums to strings ( 424c8b4 ) serialization: ✨ finish implementing MessagePackReader.Integers and MessagePackWriter.Integers ( 37d8f20 ) serialization: ✨ finish implementing serializer/deserializer methods in EnumFormatter ( 3af569f ) Reverts demo: 🔥 remove bossroom assets... too big to be a sample ( e53192d ) BREAKING CHANGES indexer: indexer queries are now given as optional arguments 1.0.0-exp.24 (2021-10-05) Bug Fixes 🐛 fix signatures ( 2fb4614 ) Features kmd: ✨ add Error to ErrorMessage which is used for kmd ( 3c37a94 ) kmd: ✨ implement APIV1DELETEKeyResponse ( 81f6c1e ) kmd: ✨ implement APIV1DELETEMultisigResponse ( 4c1d6db ) kmd: ✨ implement APIV1GETWalletsResponse ( 9025e9a ) kmd: ✨ implement APIV1Wallet ( e514183 ) kmd: ✨ implement APIV1WalletHandle ( 8bae4b4 ) kmd: ✨ implement CreateWalletRequest ( 63882eb ) kmd: ✨ implement CreateWalletRequest api fields ( f32094f ) kmd: ✨ implement CreateWalletResponse ( 2579231 ) kmd: ✨ implement DeleteKeyRequest ( 5c89319 ) kmd: ✨ implement DeleteMultiSigRequest ( 15afda0 ) kmd: ✨ implement ExportKeyRequest ( a8b1131 ) kmd: ✨ implement ExportKeyResponse.Equals ( 010e656 ) kmd: ✨ implement ExportKeyResponse ( db01766 ) kmd: ✨ implement ExportMasterKeyRequest ( 2a8ed81 ) kmd: ✨ implement ExportMasterKeyResponse ( 2843847 ) kmd: ✨ implement ExportMultiSigRequest ( e67c925 ) kmd: ✨ implement ExportMultiSigResponse ( bac0edb ) kmd: ✨ implement GenerateKeyResponse ( 1d6795f ) kmd: ✨ implement GenerateMasterKeyRequest ( 6503dd8 ) kmd: ✨ implement ImportKeyRequest ( 521f7c1 ) kmd: ✨ implement ImportKeyResponse ( 83798a6 ) kmd: ✨ implement ImportMultiSigRequest ( 5eb5d42 ) kmd: ✨ implement ImportMultiSigResponse ( 001f3ea ) kmd: ✨ implement InitWalletHandleTokenRequest ( 36dd459 ) kmd: ✨ implement InitWalletHandleTokenResponse ( 26db31b ) kmd: ✨ implement KmdClient ( 7433060 ), closes #13 kmd: ✨ implement ListKeysRequest ( b55fe67 ) kmd: ✨ implement ListKeysResponse ( 0096bd5 ) kmd: ✨ implement ListMultiSigRequest ( ce667d1 ) kmd: ✨ implement ListMultiSigResponse ( 550a0ed ) kmd: ✨ implement ListWalletsRequest ( b3b5023 ) kmd: ✨ implement ReleaseWalletHandleTokenRequest ( ff024de ) kmd: ✨ implement ReleaseWalletHandleTokenResponse ( 719c393 ) kmd: ✨ implement RenameWalletRequest ( c5a9f3b ) kmd: ✨ implement RenameWalletResponse ( 6e5b55e ) kmd: ✨ implement RenewWalletHandleTokenRequest ( 0a0d589 ) kmd: ✨ implement RenewWalletHandleTokenResponse ( d85e5f5 ) kmd: ✨ implement SignMultiSigRequest ( e1dfee9 ) kmd: ✨ implement SignMultiSigResponse ( 83ea09f ) kmd: ✨ implement SignProgramMultiSigRequest ( 063ed1d ) kmd: ✨ implement SignProgramMultiSigResponse ( b5e5b5e ) kmd: ✨ implement SignProgramRequest ( 52ccb07 ) kmd: ✨ implement SignTransactionRequest ( c542582 ) kmd: ✨ implement SignTransactionResponse ( d7080ab ) kmd: ✨ implement VersionsRequest ( f70f0fd ) kmd: ✨ implement VersionsResponse ( 7c85ec2 ) kmd: ✨ implement WalletInfoResponse ( 6b3edc7 ) kmd: implement SignProgramResponse ( 978a31d ) serialization: ✨ add formatters for PrivateKey , PublicKey , and Signature ( 2dedd67 ) serialization: 🎉 update formatter cache ( 029f841 ) 1.0.0-exp.23 (2021-10-03) Bug Fixes 🐛 fix RawTransaction.Equals ( f6bd889 ) indexer: 🐛 fix transaction formatters missing valid msgpack fields ( bf917ac ) indexer: ✨ fix TealValue msgpack fieldnames ( 2a6ef27 ) serialization: 🐛 fix SignedTransaction serialization ( f4bde8d ) Code Refactoring 🔥 remove some verify methods in the transaction ( 70a8308 ) ♻️ convert all SignedTransaction<> to a single SignedTransaction ( 26fa65a ) ♻️ rename RawSignedTransaction -> SignedTransaction ( 059c6a3 ) ♻️ rename RawTransaction -> Transaction ( bade09e ) ♻️ rename AlgoApiKeyAttribute -> AlgoApiFieldAttribute ( 1b37028 ) algod: ♻️ rename Block -> BlockResponse ( eca9fb6 ) Features ✨ add readOnly support ( 6070565 ) indexer: ♻️ rename ApplicationStateSchema -> StateSchema ( 7b02f70 ) indexer: ✨ add IIndexerClient ( 093153e ) indexer: ✨ implement AccountQuery ( bda5301 ) indexer: ✨ implement AccountResponse ( 09d7fb9 ) indexer: ✨ implement AccountsQuery ( e7d56e2 ) indexer: ✨ implement AccountsResponse ( ea01260 ) indexer: ✨ implement AddressRole ( 3325b60 ) indexer: ✨ implement Application ( 144d04d ) indexer: ✨ implement ApplicationLocalState ( 9ad284f ) indexer: ✨ implement ApplicationQuery ( de02370 ) indexer: ✨ implement ApplicationResponse ( fa34b20 ) indexer: ✨ implement ApplicationsQuery ( 914ca8b ) indexer: ✨ implement ApplicationsResponse ( e342cdc ) indexer: ✨ implement Asset ( 161f361 ) indexer: ✨ implement AssetHolding ( 203785a ) indexer: ✨ implement AssetParams ( ac78bfe ) indexer: ✨ implement AssetQuery ( c8eda94 ) indexer: ✨ implement AssetResponse ( cd8e48f ) indexer: ✨ implement AssetsResponse ( ade022d ) indexer: ✨ implement BalancesQuery ( b8f167e ) indexer: ✨ implement BalancesResponse ( c7ae299 ) indexer: ✨ implement Block ( 2533f24 ) indexer: ✨ implement BlockRewards ( bb49cb0 ) indexer: ✨ implement BlockUpgradeStatus ( e9a0423 ) indexer: ✨ implement BlockUpgradeVote ( de5e72e ) indexer: ✨ implement ErrorResponse msgpack fields ( 358e6a6 ) indexer: ✨ implement EvalDelta msgpack fields ( 45b2df2 ) indexer: ✨ implement EvalDeltaKeyValue msgpack fields ( bd3c230 ) indexer: ✨ implement HealthCheck ( a164577 ) indexer: ✨ implement IndexerClient.GetAccount ( 88ba11a ) indexer: ✨ implement IndexerClient.GetAccounts ( 2e427f1 ) indexer: ✨ implement IndexerClient.GetHealth ( 0883ff0 ) indexer: ✨ implement IndexerClient ( d7fd35a ) indexer: ✨ implement LogicSig json fields ( b22297c ) indexer: ✨ implement MiniAssetHolding ( 59941b8 ) indexer: ✨ implement MultiSig.SubSignature ( ef526ec ) indexer: ✨ implement MultiSig ( df959a7 ) indexer: ✨ implement OnCompletion ( 04227b9 ) indexer: ✨ implement TealKeyValue msgPack fields ( e521553 ) indexer: ✨ implement Transaction.ApplicationCall ( 5a5e819 ) indexer: ✨ implement Transaction.ApplicationCall model fields ( 69d64e8 ) indexer: ✨ implement Transaction.AssetConfiguration model fields ( baf7c2e ) indexer: ✨ implement Transaction.AssetFreeze model fields ( be45b90 ) indexer: ✨ implement Transaction.AssetTransfer model fields ( 84aa15e ) indexer: ✨ implement Transaction.KeyRegistration ( 69e004e ) indexer: ✨ implement Transaction.KeyRegistration model fields ( 44029ca ) indexer: ✨ implement TransactionResponse ( 430a1fa ) indexer: ✨ implement TransactionsQuery ( 9ec7f4f ) indexer: ✨ implement AssetsQuery ( e8d6e55 ) indexer: ✨ implement TransactionsResponse ( e1a46f8 ) json: ✨ implement JsonWriter.WriteRaw ( 1643bad ) json: ✨ implement ReadRaw ( 384abf8 ) msgpack: ✨ implement MessagePackReader.ReadRaw ( c2dec22 ) msgpack: ✨ implement MessagePackWriter.WriteRaw ( d5ae90e ) serialization: ✨ implement AlgoApiObject ( 74456b6 ) serialization: ✨ implement Timestamp ( cc1159b ) BREAKING CHANGES remove Transaction.VerifySignature , SignedTransaction.Verify signed transactions are now represented by SignedTransaction (non-generic) renamed RawSignedTransaction -> SignedTransaction RawTransaction renamed to Transaction AlgoApiKeyAttribute -> AlgoApiFieldAttribute algod: Block renamed to BlockResponse 1.0.0-exp.22 (2021-09-28) Bug Fixes 🐛 fix crash on ArrayComparer.Equals ( 8ca1b06 ) 🐛 fix issues with codegen and AOT compilation ( d2f9bdc ) 1.0.0-exp.21 (2021-09-28) Features ✨ update AlgoApiFormatterLookup ( cc112e5 ) 1.0.0-exp.20 (2021-09-28) Features ✨ add FixedBytesFormatter ( 941eb3f ) BREAKING CHANGES Replace Buffer with GetUnsafePtr 1.0.0-exp.19 (2021-09-25) Bug Fixes 🐛 fix compile errs ( 7a03ed9 ) 1.0.0-exp.18 (2021-09-25) Features ✨ add LogicSig implementation ( 51a21e0 ) 1.0.0-exp.17 (2021-09-20) Features ✨ implement asset configuration transaction ( 4f9ec58 ), closes #27 ✨ implement AssetFreezeTransaction ( e3233bf ), closes #26 ✨ implement AssetTransfer Transaction ( 62a1841 ), closes #23 1.0.0-exp.16 (2021-09-19) Code Refactoring remove .NET 4.8 requirement ( 9f55707 ), closes #19 #9 BREAKING CHANGES Algo Serializer API has completely changed... 1.0.0-exp.15 (2021-09-03) Code Refactoring 🔥 remove unnecessary SendTransactionRaw ( 09b3bdc ) BREAKING CHANGES Removes the SendTransactionRaw method from AlgodClient 1.0.0-exp.14 (2021-08-30) Features algod: implement Algod Client ( a7c9e90 ), closes #10 #16 #18 1.0.0-exp.13 (2021-08-07) Bug Fixes ✅ Fix CI tests on Github Actions can't find libsodium ( 20c4ad5 ), closes #12 1.0.0-exp.12 (2021-08-04) Features Add signed transaction support for payment transactions ( c07d370 ) 1.0.0-exp.11 (2021-08-03) Features ✨ Add basic signed transaction support ( bb5900f ) 1.0.0-exp.10 (2021-08-03) Features ✨ Add IEquatable, GetHashCode for RawTransaction ( 885928e ) 1.0.0-exp.9 (2021-08-02) Features ✨ Add basic transaction support for message pack serialization and deserialization ( 63243ed ) 1.0.0-exp.8 (2021-07-25) Features ✨ Added Transaction Header, Payment ( d3ebced ) 1.0.0-exp.7 (2021-07-24) Features ✨ Add Account.Generate ( 95233bf ) 1.0.0-exp.6 (2021-07-24) Features 👷 Add npmjs support ( 56f60f0 ) ➕ Add libsodium ios, android, and windows ( 00c9511 ) ✨ Add Address struct ( d92b903 ) ✨ Add checksums ( 2bc2189 ) ✨ Add Sha512 interop ( 86aabf5 ) ✨ Add start of Native Integration with Libsodium ( 55e325f ) 1.0.0-exp.6 (2021-07-23) Features 👷 Add npmjs support ( 56f60f0 ) ➕ Add libsodium ios, android, and windows ( 00c9511 ) ✨ Add checksums ( 2bc2189 ) ✨ Add Sha512 interop ( 86aabf5 ) ✨ Add start of Native Integration with Libsodium ( 55e325f ) 1.0.0-exp.6 (2021-07-21) Features 👷 Add npmjs support ( 56f60f0 ) ➕ Add libsodium ios, android, and windows ( 00c9511 ) ✨ Add Sha512 interop ( 86aabf5 ) ✨ Add start of Native Integration with Libsodium ( 55e325f ) 1.0.0-exp.6 (2021-07-20) Features 👷 Add npmjs support ( 56f60f0 ) ➕ Add libsodium ios, android, and windows ( 00c9511 ) ✨ Add start of Native Integration with Libsodium ( 55e325f ) 1.0.0-exp.6 (2021-07-20) Features 👷 Add npmjs support ( 56f60f0 ) ➕ Add libsodium ios, android, and windows ( 00c9511 ) ✨ Add start of Native Integration with Libsodium ( 55e325f ) 1.0.0-exp.5 (2021-07-12) Bug Fixes 🐛 Fix repository ( e765589 ) 1.0.0-exp.4 (2021-07-12) Bug Fixes 🐛 Fix npm release ( 9e68078 ) 1.0.0-exp.3 (2021-07-12) Bug Fixes 🚩 Update package registry ( a0800bc ) 1.0.0-exp.2 (2021-07-12) Features ✨ Add Mnemonic.FromString and Mnemonic.ToString ( d3a88c6 ) 1.0.0-exp.1 (2021-05-18) Features Add Mnemonic and Key datastructs ( 4370f74 )"
  },
  "index.html": {
    "href": "index.html",
    "title": "Unity Algorand SDK | Unity Algorand SDK",
    "keywords": "Unity Algorand SDK Caution This package has not been audited and isn't suitable for production use. Integrate your game with Algorand , a Pure Proof-of-Stake blockchain overseen by the Algorand Foundation. Create and sign Algorand transactions, use Algorand's REST APIs , and connect to any Algorand wallet supporting WalletConnect . Requirements This package supports the following build targets and Unity versions: Unity Version Windows Mac OS Linux Android iOS WebGL 2020.3 ✅ ✅ ✅ ✅ ✅ ✅ 2021.2 ✅ ✅ ✅ ✅ ✅ ✅ Common Usages Make a payment transaction: using AlgoSdk; var sender = \"<your sender address>\"; var receiver = \"<your receiver address>\"; var algod = new AlgodClient(\"https://node.testnet.algoexplorerapi.io\"); var suggestedTxnParams = await algod.GetSuggestedParams(); var microAlgosToSend = 1_000_000L; var paymentTxn = Transaction.Payment(sender, suggestedTxnParams, receiver, microAlgosToSend); Sign the transaction with an account: var account = Account.GenerateAccount(); var signedTxn = account.SignTxn(paymentTxn); Sign the transaction with kmd : var kmd = new KmdClient(\"<host of kmd>\"); var walletToken = await kmd.InitWalletHandleToken(\"<your wallet id>\", \"<your wallet password>\"); var signedTxn = await kmd.SignTransaction(paymentTxn.Sender, paymentTxn.ToSignatureMessage(), walletToken, \"<your kmd wallet password>\"); Sign the transaction with WalletConnect: using AlgoSdk.WalletConnect; SavedSession savedSession = [...]; var session = new AlgorandWalletConnectSession(savedSession); var walletTransaction = WalletTransaction.New(paymentTxn); var signedTxns = await session.SignTransactions(new[] { walletTransaction }); var signedTxn = signedTxns[0]; Send the signed transaction: await algod.SendTransaction(signedTxn); Initiate a WalletConnect session and generate a QR Code: using AlgoSdk; using AlgoSdk.WalletConnect; using UnityEngine; var dappMeta = new ClientMeta { Name = \"<name of your dapp>\", Description = \"<description of your dapp>\", Url = \"<url of your dapp>\", IconUrls = new[] { \"<icon1 of your dapp>\", \"<icon2 of your dapp>\" } }; var session = new AlgorandWalletConnectSession(dappMeta); var handshake = await session.StartConnection(); Texture2D qrCode = handshake.ToQrCodeTexture(); Installation Open UPM The easiest way to install is to use Open UPM as it manages your scopes automatically. You can install Open UPM here . Then use the Open UPM CLI at the root of your Unity project to install. > cd <your unity project> > openupm add com.careboo.unity-algorand-sdk Manually Adding UPM Scopes If you don't want to use Open UPM, it's straightforward to manually add the UPM registry scopes required for this package. See Unity's official documentation on Scoped Registries . Unity Asset Store This SDK will soon be available in the Unity Asset Store . Getting Started Documentation The documentation built for a specific version is hosted at: https://careboo.github.io/unity-algorand-sdk/{version}/ Read Your First Transaction to learn the basics on creating, signing, and sending transactions. The WalletConnect guide teaches about how to implement WalletConnect in your application."
  },
  "license/LICENSE.html": {
    "href": "license/LICENSE.html",
    "title": "| Unity Algorand SDK",
    "keywords": "MIT License Copyright (c) 2020-2022 CareBoo Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "license/Third Party Notices.html": {
    "href": "license/Third Party Notices.html",
    "title": "| Unity Algorand SDK",
    "keywords": "This package contains third-party software components governed by the license(s) indicated below: Component Name: libsodium License Type: ISC License Copyright (c) 2013-2022 Frank Denis Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. Component Name: tweetnacl-js License Type: The Unlicense This is free and unencumbered software released into the public domain. Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means. In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. For more information, please refer to http://unlicense.org Component Name: js-sha512 License Type: MIT Copyright 2014-2018 Chen, Yi-Cyuan Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Component Name: WebSocket transport for Netcode for GameObjects. License Type: MIT Copyright (c) 2021 Unity Technologies Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Component Name: websocket-sharp License Type: MIT Copyright (c) 2010-2022 sta.blockhead Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Component Name: ZXing.Net License Type: Apache License 2.0 Copyright 2013-2022 micjahn Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."
  },
  "manual/troubleshooting.html": {
    "href": "manual/troubleshooting.html",
    "title": "Troubleshooting | Unity Algorand SDK",
    "keywords": "Troubleshooting Debugging Web Requests Setting the UNITY_ALGO_SDK_DEBUG #define directives will turn on additional HTTP request logging: completed request url: https://testnet-algorand.api.purestake.io/idx2/health uploadedData: downloadedData: {\"data\":{\"migration-required\":false,\"read-only-mode\":true},\"db-available\":true,\"is-migrating\":false,\"message\":\"17756385\",\"round\":17756385} error: method: GET downloadHandler.error: <...snip...> If the data is in JSON or plaintext format, then it will show in the logs as the raw JSON text. If the data is in Message Pack format, it will show as base-64 encoded byte string. Tip When debugging Message Pack, it can be useful to use a visualizer like the one at https://msgpack.dbrgn.ch/ ."
  },
  "manual/walletconnect.html": {
    "href": "manual/walletconnect.html",
    "title": "WalletConnect | Unity Algorand SDK",
    "keywords": "WalletConnect WalletConnect is the web3 standard to connect blockchain wallets to dapps. The Algorand Foundation's Pera Wallet supports this standard, and it's the easiest way to handle signing transactions for the end user. Initiating a WalletConnect session The general process for creating a WalletConnect session is: The Dapp shows the user a QR Code to initiate the handshake between Dapp and Wallet. OR on mobile, the Dapp provides the user a list of wallets to open via Mobile Linking . The user reads the QR Code with their Wallet OR selects a wallet from a list, and chooses an address to connect with Dapp. The Dapp receives the confirmation and can begin requesting the Wallet to sign transactions. In code, this process is: using AlgoSdk; using AlgoSdk.WalletConnect; using UnityEngine; // 1. Create the session and show the user the QR Code var dappMeta = new ClientMeta { Name = \"<name of your dapp>\", Description = \"<description of your dapp>\", Url = \"<url of your dapp>\", IconUrls = new[] { \"<icon1 of your dapp>\", \"<icon2 of your dapp>\" } }; var session = new AlgorandWalletConnectSession(dappMeta); // session is in no connection status Debug.Assert(session.ConnectionStatus == AlgorandWalletConnectSession.Status.NoConnection); var handshake = await session.StartConnection(); // session should now be in connecting status Debug.Assert(session.ConnectionStatus == AlgorandWalletConnectSession.Status.RequestingConnection); // show the user a QR Code Texture2D qrCode = handshake.ToQrCodeTexture(); // OR launch a supported wallet app WalletRegistry.PeraWallet.LaunchForConnect(handshake); // 2. Wait for user to approve the connection await session.WaitForConnectionApproval(); // session is now connected Debug.Assert(session.ConnectionStatus == AlgorandWalletConnectSession.Status.Connected); // 3. Send transactions to sign var someTxnToSign = Transaction.Payment(...); someTxnToSign.Sender = session.Accounts[0]; var walletTransaction = WalletTransaction.New(someTxnToSign); // In the case you used a QR Code, you can await immediately. var signingTransactions = session.SignTransactions(new[] { walletTransaction }); // If you are using Mobile Linking, you need to launch the app WalletRegistry.PeraWallet.LaunchForSigning(); var (signErr, signedTxns) = await signingTransactions; After sending every transaction to sign, the user will be requested to approve the transaction in their Wallet application. Keep in mind that when using Mobile Linking , you will need to launch the app. Handling Session Updates At any point during the session, the wallet may No longer authorize the Dapp to send transactions. Disconnect from the session. Update information about the accounts or Wallet metadata. AlgorandWalletConnectSession provides events to handle these scenarios: Events Event Type Description OnSessionConnect UnityEvent<AlgorandWalletConnectSession> Called when the Wallet approves the connection OnSessionUpdate UnityEvent<WalletConnectSessionData> Called when the Wallet updates accounts or Wallet metadata OnSessionDisconnect UnityEvent<string> Called when the Wallet disconnects from the session Persisting Sessions WalletConnect sessions are designed to persist across dapp sessions. To do this, a session can be saved as a SavedSession : var session = new AlgorandWalletConnectSession(...); var savedSession = session.Save(); You can continue a SavedSession by starting the AlgorandWalletConnectSession: var continuedSession = new AlgorandWalletConnectSession(savedSession); Note The handshake URL and QR Code generated from StartConnection are not persisted. Despite this, the session will still be able listen for the wallet's approval. This is because the handshake and session ids are persisted in the SavedSession . SavedSession can be serialized by Unity software, so it's trivial to store it in PlayerPrefs for example: // storing a SavedSession var savedSessionJson = JsonUtility.ToJson(savedSession); PlayerPrefs.SetString(\"users_wallet_connect_session\", savedSessionJson); PlayerPrefs.Save(); Mobile Linking When users are using your Dapp from a mobile application, they may want to open a native wallet on their device. WalletConnect provides a protocol to do this . To begin linking on mobile, you'll need to use the WalletRegistry static class to find supported wallets for the current platform. Each time you need the user to approve a request from the wallet, you'll need to launch the wallet app. using AlgoSdk; using AlgoSdk.WalletConnect; var supportedWallets = WalletRegistry.SupportedWalletsForCurrentPlatform; var session = new AlgorandWalletConnectSession(...); var handshakeUrl = await session.StartConnection(); var chosenWallet = AskUserToChooseWallet(supportedWallets); chosenWallet.LaunchForConnect(handshakeUrl); await session.WaitForConnectionApproval(); AppEntry AskUserToChooseWallet(AppEntry[] supportedWallets) { // implement UI to allow user to choose wallet } Additionally, anytime you need to sign a transaction, you'll need to launch the wallet app again. var signing = await session.SignTransactions(...); chosenWallet.LaunchForSigning(session.Version); var (signErr, signedTxns) = await signing; Additional Resources Take a look at the official Algorand documentation on WalletConnect to learn more. The official WalletConnect documentation is useful as well."
  },
  "manual/your_first_transaction.html": {
    "href": "manual/your_first_transaction.html",
    "title": "Your First Transaction | Unity Algorand SDK",
    "keywords": "Your First Transaction Create an Account The following code will generate a new account: // using AlgoSdk; // using UnityEngine; var (privateKey, address) = Account.GenerateAccount(); Debug.Log($\"My address: {address}\"); Debug.Log($\"My private key: {privateKey}\"); Debug.Log($\"My passphrase (mnemonic): {privateKey.ToMnemonic()}\"); Save your address and passphrase in a separate place. Warning Never share your private key or mnemonic. Production environments require stringent private key management. For more information on key management in community Wallets, click here . See WalletConnect for instructions on how to connect to a mobile Wallet. Fund the Account Before sending transactions to the Algorand network, the account must be funded to cover the minimal transaction fees that exist on Algorand. To fund the account use the Algorand faucet . Connect to a Node Note Prerequisites: Install Docker Compose Install Git The easiest way to access a node in development is via the Algorand Sandbox. Alternatively, AlgoExplorer provides algod and indexer nodes with limited features. > git clone https://github.com/algorand/sandbox.git > cd sandbox > ./sandbox up testnet The testnet option will configure the network to use the testnet. Warning The sandbox installation may take a few minutes to startup in order to catch up to the current block round. To learn more about fast catchup, see Sync Node Network using Fast Catchup Once the network is up and running, you should be able to connect to the algod service. Verify that the node is healthy and you can connect to it. Create a new AlgodCheck component that creates an AlgodClient on Start() and makes a GetHealth() request. using AlgoSdk; using Cysharp.Threading.Tasks; using UnityEngine; public class AlgodCheck : MonoBehaviour { AlgodClient algod; public void Start() { algod = new AlgodClient( address: \"http://localhost:4001\", token: \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\" ); CheckAlgodStatus().Forget(); } public async UniTaskVoid CheckAlgodStatus() { var response = await algod.GetHealth(); if (response.Error.IsError) { Debug.LogError(response.Error.Message); } else { Debug.Log(\"Connected to algod!\"); } } } Add the AlgodCheck component to a GameObject in a new scene, and press Play . You should see the Connected to algod! message in the editor console. If you cannot connect, or the node is not healthy, then you should see an error message in the console. Note It's possible the node you're connecting to may require different HTTP request headers for authentication. In that case you can specify the explicit HTTP headers using key-value string tuples: algod = new AlgodClient( \"https://testnet-algorand.api.purestake.io/ps2\", (\"X-API-Key\", \"my-super-secret-api-key\") ); Check Your Balance To verify your funds were added to your account, add the following method to your AlgodCheck script. Replace the address with the address of the account you generated earlier. public async UniTaskVoid CheckBalance() { var accountAddress = \"FLWI6UNTQ6CXTKSHOC7QPHYD2L3JVLIPWKNR5FECHX46VOE3DMY24BJASY\"; var (error, accountInfo) = await algod.GetAccountInformation(accountAddress); if (error) { Debug.LogError(error); } else { Debug.Log($\"My account has {accountInfo.Amount / 1_000_000} algos\"); } } Then call it in your Start() method. public void Start() { CheckBalance().Forget(); } Your balance should appear in the editor console when you press Play again. Note AlgoExplorer's algod node does not support the GetAccountInformation endpoint. Instead, you'll need to use IndexerClient.GetAccount to get the balance of algo from an account. Send a Transaction The process for sending a transaction will look like Get the suggested TransactionParams from AlgodClient.GetSuggestedParams() . This contains information like the fee, the hash of the genesis block, and the latest round number. Create a transaction using the static creation methods found in the Transaction class. For a payment transaction, we're going to use Transaction.Payment(Address sender, TransactionParams txnParams, Address receiver, ulong amount) . Sign the transaction using either a secret key or a wallet. Send the signed transaction with AlgodClient.SendTransaction<T>(Signed<T> txn) and save its TransactionId . Wait for the transaction to be confirmed by polling AlgodClient.GetPendingTransaction(TransactionId txid) until it returns PendingTransaction.ConfirmedRound > 0 marking that it was confirmed. Add a new method, MakePayment(PrivateKey senderKey, Address receiver, ulong amount) that will send a PaymentTxn . public async UniTaskVoid MakePayment(PrivateKey senderKey, Address receiver, ulong amount) { var senderAccount = new Account(senderKey); // Get the suggested transaction params var (txnParamsError, txnParams) = await algod.GetSuggestedParams(); if (txnParamsError) { Debug.LogError(txnParamsError); return; } // Construct and sign the payment transaction var paymentTxn = Transaction.Payment( sender: senderAccount.Address, txnParams: txnParams, receiver: receiver, amount: amount ); var signedTxn = senderAccount.SignTxn(paymentTxn); // Send the transaction var (sendTxnError, txid) = await algod.SendTransaction(signedTxn); if (sendTxnError) { Debug.LogError(sendTxnError); return; } // Wait for the transaction to be confirmed PendingTransaction pending = default; ErrorResponse error = default; while (pending.ConfirmedRound == 0) { (error, pending) = await algod.GetPendingTransaction(txid); if (error) { Debug.LogError(error); return; } await UniTask.Delay(1000); } Debug.Log($\"Successfully made payment! Confirmed on round {pending.ConfirmedRound}\"); } To keep things simple, add a new Update() method that will invoke MakePayment whenever the player presses their spacebar. Replace the passphrase with the passphrase you generated earlier. public void Update() { if (Input.GetKeyDown(KeyCode.Space)) { var privateKey = Mnemonic .FromString(\"find paddle girl crumble hammer usual obvious toy actual obscure decorate lock bag inmate author valve course ship burger denial sibling tissue nominee above remove\") .ToPrivateKey(); ulong amount = 100_000; Address receiver = \"HZ57J3K46JIJXILONBBZOHX6BKPXEM2VVXNRFSUED6DKFD5ZD24PMJ3MVA\"; MakePayment(privateKey, receiver, amount).Forget(); } } Now press Play again, then press the spacebar. After a couple seconds, your transaction should be confirmed and you should see a \"Successfully made payment!\" message in the editor console. Complete Example Here is the final code for AlgodCheck component. using AlgoSdk; using Cysharp.Threading.Tasks; using UnityEngine; public class AlgodCheck : MonoBehaviour { AlgodClient algod; public void Start() { algod = new AlgodClient(\"testnet-algorand.api.purestake.io/ps2\", (\"X-API-Key\", \"my-secret-key\")); CheckAlgodStatus().Forget(); CheckBalance().Forget(); } public void Update() { if (Input.GetKeyDown(KeyCode.Space)) { var privateKey = Mnemonic .FromString(\"find paddle girl crumble hammer usual obvious toy actual obscure decorate lock bag inmate author valve course ship burger denial sibling tissue nominee above remove\") .ToPrivateKey(); ulong amount = 100_000; Address receiver = \"HZ57J3K46JIJXILONBBZOHX6BKPXEM2VVXNRFSUED6DKFD5ZD24PMJ3MVA\"; MakePayment(privateKey, receiver, amount).Forget(); } } public async UniTaskVoid CheckAlgodStatus() { var response = await algod.GetHealth(); if (response.Error) { Debug.LogError(response.Error); } else { Debug.Log(\"Connected to algod!\"); } } public async UniTaskVoid CheckBalance() { var accountAddress = \"FLWI6UNTQ6CXTKSHOC7QPHYD2L3JVLIPWKNR5FECHX46VOE3DMY24BJASY\"; var (error, accountInfo) = await algod.GetAccountInformation(accountAddress); if (error) { Debug.LogError(error); } else { Debug.Log($\"My account has {accountInfo.Amount / 1_000_000} algos\"); } } public async UniTaskVoid MakePayment(PrivateKey senderKey, Address receiver, ulong amount) { var senderAccount = new Account(senderKey); // Get the suggested transaction params var (txnParamsError, txnParams) = await algod.GetSuggestedParams(); if (txnParamsError) { Debug.LogError(txnParamsError); return; } // Construct and sign the payment transaction var paymentTxn = Transaction.Payment( sender: senderAccount.Address, txnParams: txnParams, receiver: receiver, amount: amount ); var signedTxn = senderAccount.SignTxn(paymentTxn); // Send the transaction var (sendTxnError, txid) = await algod.SendTransaction(signedTxn); if (sendTxnError) { Debug.LogError(sendTxnError); return; } // Wait for the transaction to be confirmed PendingTransaction pending = default; ErrorResponse error = default; while (pending.ConfirmedRound == 0) { (error, pending) = await algod.GetPendingTransaction(txid); if (error) { Debug.LogError(error); return; } await UniTask.Delay(1000); } Debug.Log($\"Successfully made payment! Confirmed on round {pending.ConfirmedRound}\"); } }"
  }
}