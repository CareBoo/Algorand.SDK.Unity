{
  "api/AlgoSdk.Account.html": {
    "href": "api/AlgoSdk.Account.html",
    "title": "Class Account | Unity Algorand SDK",
    "keywords": "Class Account Contains utility functions for generating new accounts (private keys). Inheritance Object Account Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class Account Methods GenerateAccount() Generate a fresh account Declaration public static (PrivateKey, Address) GenerateAccount() Returns Type Description (T1, T2) < PrivateKey , Address > A private key, address tuple."
  },
  "api/AlgoSdk.AccountInfo.html": {
    "href": "api/AlgoSdk.AccountInfo.html",
    "title": "Struct AccountInfo | Unity Algorand SDK",
    "keywords": "Struct AccountInfo Information regarding an Algorand account at a given round. Implements IEquatable < AccountInfo > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AccountInfo Fields Address The public key of the account. Declaration public Address Address Field Value Type Description Address Amount The amount of microalgos belonging to this account including pending rewards. Declaration public ulong Amount Field Value Type Description UInt64 AmountWithoutPendingRewards The amount of microalgos belonging to this account not including pending rewards. Declaration public ulong AmountWithoutPendingRewards Field Value Type Description UInt64 ApplicationsLocalState Local application data stored in this account. Declaration public ApplicationLocalState[] ApplicationsLocalState Field Value Type Description ApplicationLocalState [] ApplicationsTotalExtraPages The total number of extra program pages for this account. Declaration public ulong ApplicationsTotalExtraPages Field Value Type Description UInt64 ApplicationsTotalSchema The sum of all local and global schemas in this account. Declaration public StateSchema ApplicationsTotalSchema Field Value Type Description StateSchema Assets Assets held by this account. Declaration public AssetHolding[] Assets Field Value Type Description AssetHolding [] AuthAddress The address against which signing should be checked. If empty, the address of the current account is used. This field can be updated in any transaction by setting the RekeyTo field. Declaration public Address AuthAddress Field Value Type Description Address ClosedAtRound Round during which this account was most recently closed. Declaration public ulong ClosedAtRound Field Value Type Description UInt64 CreatedApplications Parameters of applications created by this account including app global data. Declaration public Application[] CreatedApplications Field Value Type Description Application [] CreatedAssets Parameters of assets created by this account. Declaration public Asset[] CreatedAssets Field Value Type Description Asset [] CreatedAtRound Round during which this account first appeared in a transaction. Declaration public ulong CreatedAtRound Field Value Type Description UInt64 Deleted Whether or not this account is currently closed. Declaration public Optional<bool> Deleted Field Value Type Description Optional < Boolean > Participation See AccountParticipation Declaration public AccountParticipation Participation Field Value Type Description AccountParticipation PendingRewards Amount of MicroAlgos of pending rewards in this account. Declaration public ulong PendingRewards Field Value Type Description UInt64 RewardBase Used as part of the rewards computation. Only applicable to accounts which are participating. Declaration public ulong RewardBase Field Value Type Description UInt64 Rewards Total rewards of MicroAlgos the account has received, including pending rewards. Declaration public ulong Rewards Field Value Type Description UInt64 Round The round for which this information is relevant. Declaration public ulong Round Field Value Type Description UInt64 SignatureType Indicates what type of signature is used by this account, must be one of: Declaration public SignatureType SignatureType Field Value Type Description SignatureType Status Delegation status of the account's MicroAlgos Offline indicates that the associated account is delegated. Online indicates that the associated account used as part of the delegation pool. NotParticipating indicates that the associated account is neither a delegator nor a delegate. Declaration public FixedString32Bytes Status Field Value Type Description FixedString32Bytes Methods Equals(AccountInfo) Declaration public bool Equals(AccountInfo other) Parameters Type Name Description AccountInfo other Returns Type Description Boolean EstimateMinBalance() Estimate the minimum balance of the account in MicroAlgos. Declaration public ulong EstimateMinBalance() Returns Type Description UInt64 The sum of all the costs per data item in the account. Remarks Account Data Type Cost Per Item (MicroAlgos) Assets Opted In or Created 100,000 Applications Opted In or Created 100,000 Applications Extra Program Pages 100,000 Applications Stored Uints 28,500 Applications Stored Byteslices 50,000 Implements IEquatable<>"
  },
  "api/AlgoSdk.AccountParticipation.html": {
    "href": "api/AlgoSdk.AccountParticipation.html",
    "title": "Struct AccountParticipation | Unity Algorand SDK",
    "keywords": "Struct AccountParticipation Describes the parameters used by this account in consensus protocol. Implements IEquatable < AccountParticipation > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AccountParticipation Fields SelectionParticipationKey Selection public key (if any) currently registered for this round. Declaration public VrfPubKey SelectionParticipationKey Field Value Type Description VrfPubKey VoteFirst First round for which this participation is valid. Declaration public ulong VoteFirst Field Value Type Description UInt64 VoteKeyDilution Number of subkeys in each batch of participation keys. Declaration public ulong VoteKeyDilution Field Value Type Description UInt64 VoteLast Last round for which this participation is valid. Declaration public ulong VoteLast Field Value Type Description UInt64 VoteParticipationKey Root participation public key (if any) currently registered for this round. Declaration public Ed25519.PublicKey VoteParticipationKey Field Value Type Description Ed25519.PublicKey Methods Equals(AccountParticipation) Declaration public bool Equals(AccountParticipation other) Parameters Type Name Description AccountParticipation other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.AccountResponse.html": {
    "href": "api/AlgoSdk.AccountResponse.html",
    "title": "Struct AccountResponse | Unity Algorand SDK",
    "keywords": "Struct AccountResponse Implements IEquatable < AccountResponse > IIndexerResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AccountResponse : IIndexerResponse Properties Account Declaration public AccountInfo Account { readonly get; set; } Property Value Type Description AccountInfo CurrentRound Declaration public ulong CurrentRound { readonly get; set; } Property Value Type Description UInt64 Methods Equals(AccountResponse) Declaration public bool Equals(AccountResponse other) Parameters Type Name Description AccountResponse other Returns Type Description Boolean Implements IEquatable<> IIndexerResponse"
  },
  "api/AlgoSdk.AccountsResponse.html": {
    "href": "api/AlgoSdk.AccountsResponse.html",
    "title": "Struct AccountsResponse | Unity Algorand SDK",
    "keywords": "Struct AccountsResponse Implements IEquatable < AccountsResponse > IPaginatedResponse IIndexerResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AccountsResponse : IPaginatedResponse, IIndexerResponse Properties Accounts Declaration public AccountInfo[] Accounts { readonly get; set; } Property Value Type Description AccountInfo [] CurrentRound Declaration public ulong CurrentRound { readonly get; set; } Property Value Type Description UInt64 NextToken Declaration public FixedString128Bytes NextToken { readonly get; set; } Property Value Type Description FixedString128Bytes Methods Equals(AccountsResponse) Declaration public bool Equals(AccountsResponse other) Parameters Type Name Description AccountsResponse other Returns Type Description Boolean Implements IEquatable<> IPaginatedResponse IIndexerResponse"
  },
  "api/AlgoSdk.AccountStateDelta.html": {
    "href": "api/AlgoSdk.AccountStateDelta.html",
    "title": "Struct AccountStateDelta | Unity Algorand SDK",
    "keywords": "Struct AccountStateDelta Application state delta for an account Address . Implements IEquatable < AccountStateDelta > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AccountStateDelta Fields Address Declaration public Address Address Field Value Type Description Address Delta Declaration public EvalDeltaKeyValue[] Delta Field Value Type Description EvalDeltaKeyValue [] Methods Equals(AccountStateDelta) Declaration public bool Equals(AccountStateDelta other) Parameters Type Name Description AccountStateDelta other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.Address.CheckSum.html": {
    "href": "api/AlgoSdk.Address.CheckSum.html",
    "title": "Struct Address.CheckSum | Unity Algorand SDK",
    "keywords": "Struct Address.CheckSum Implements IByteArray IEquatable < Address.CheckSum > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct CheckSum Fields SizeBytes Declaration public const int SizeBytes = 4 Field Value Type Description Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public readonly int Length { get; } Property Value Type Description Int32 Methods Equals(Address.CheckSum) Declaration public bool Equals(Address.CheckSum other) Parameters Type Name Description Address.CheckSum other Returns Type Description Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void * ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators Equality(in Address.CheckSum, in Address.CheckSum) Declaration public static bool operator ==(in Address.CheckSum x, in Address.CheckSum y) Parameters Type Name Description Address.CheckSum x Address.CheckSum y Returns Type Description Boolean Implicit(Sha512_256_Hash to Address.CheckSum) Declaration public static implicit operator Address.CheckSum(Sha512_256_Hash hash) Parameters Type Name Description Sha512_256_Hash hash Returns Type Description Address.CheckSum Inequality(in Address.CheckSum, in Address.CheckSum) Declaration public static bool operator !=(in Address.CheckSum x, in Address.CheckSum y) Parameters Type Name Description Address.CheckSum x Address.CheckSum y Returns Type Description Boolean Implements IByteArray IEquatable<>"
  },
  "api/AlgoSdk.Address.html": {
    "href": "api/AlgoSdk.Address.html",
    "title": "Struct Address | Unity Algorand SDK",
    "keywords": "Struct Address A public key for an Algorand account. Implements IByteArray IEquatable < Address > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Address Fields Empty Declaration public static readonly Address Empty Field Value Type Description Address SizeBytes Declaration public const int SizeBytes = default(int) Field Value Type Description Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public readonly int Length { get; } Property Value Type Description Int32 Methods Equals(Address) Declaration public bool Equals(Address other) Parameters Type Name Description Address other Returns Type Description Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) FromPublicKey(Ed25519.PublicKey) Declaration public static Address FromPublicKey(Ed25519.PublicKey publicKey) Parameters Type Name Description Ed25519.PublicKey publicKey Returns Type Description Address FromString(String) Declaration public static Address FromString(string addressString) Parameters Type Name Description String addressString Returns Type Description Address FromString<TString>(TString) Declaration public static Address FromString<TString>(TString s) where TString : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description TString s Returns Type Description Address Type Parameters Name Description TString GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void * ToFixedString() Declaration public FixedString128Bytes ToFixedString() Returns Type Description FixedString128Bytes ToPublicKey() Declaration public Ed25519.PublicKey ToPublicKey() Returns Type Description Ed25519.PublicKey ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators Equality(in Address, in Address) Declaration public static bool operator ==(in Address a1, in Address a2) Parameters Type Name Description Address a1 Address a2 Returns Type Description Boolean Implicit(Address to Ed25519.PublicKey) Declaration public static implicit operator Ed25519.PublicKey(Address address) Parameters Type Name Description Address address Returns Type Description Ed25519.PublicKey Implicit(Ed25519.PublicKey to Address) Declaration public static implicit operator Address(Ed25519.PublicKey publicKey) Parameters Type Name Description Ed25519.PublicKey publicKey Returns Type Description Address Implicit(Sha512_256_Hash to Address) Declaration public static implicit operator Address(Sha512_256_Hash checksum) Parameters Type Name Description Sha512_256_Hash checksum Returns Type Description Address Implicit(String to Address) Declaration public static implicit operator Address(string s) Parameters Type Name Description String s Returns Type Description Address Inequality(in Address, in Address) Declaration public static bool operator !=(in Address a1, in Address a2) Parameters Type Name Description Address a1 Address a2 Returns Type Description Boolean Implements IByteArray IEquatable<>"
  },
  "api/AlgoSdk.AddressRole.html": {
    "href": "api/AlgoSdk.AddressRole.html",
    "title": "Enum AddressRole | Unity Algorand SDK",
    "keywords": "Enum AddressRole Role of an address for a transaction. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum AddressRole : byte Fields Name Description FreezeTarget None Receiver Sender"
  },
  "api/AlgoSdk.AddressRoleExtensions.html": {
    "href": "api/AlgoSdk.AddressRoleExtensions.html",
    "title": "Class AddressRoleExtensions | Unity Algorand SDK",
    "keywords": "Class AddressRoleExtensions Inheritance Object AddressRoleExtensions Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class AddressRoleExtensions Fields TypeToString Declaration public static readonly string[] TypeToString Field Value Type Description String [] Methods ToFixedString(AddressRole) Declaration public static FixedString32Bytes ToFixedString(this AddressRole addrRole) Parameters Type Name Description AddressRole addrRole Returns Type Description FixedString32Bytes ToOptionalFixedString(AddressRole) Declaration public static Optional<FixedString32Bytes> ToOptionalFixedString(this AddressRole addressRole) Parameters Type Name Description AddressRole addressRole Returns Type Description Optional < FixedString32Bytes >"
  },
  "api/AlgoSdk.AlgoApiField.html": {
    "href": "api/AlgoSdk.AlgoApiField.html",
    "title": "Class AlgoApiField | Unity Algorand SDK",
    "keywords": "Class AlgoApiField Inheritance Object AlgoApiField Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public sealed class AlgoApiField : Attribute Constructors AlgoApiField(String, String, Boolean) Declaration public AlgoApiField(string jsonKeyName, string msgPackKeyName, bool readOnly = false) Parameters Type Name Description String jsonKeyName String msgPackKeyName Boolean readOnly Properties JsonKeyName Declaration public string JsonKeyName { get; } Property Value Type Description String MessagePackKeyName Declaration public string MessagePackKeyName { get; } Property Value Type Description String ReadOnly Declaration public bool ReadOnly { get; } Property Value Type Description Boolean"
  },
  "api/AlgoSdk.AlgoApiField-1.EqualityComparer.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.EqualityComparer.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.EqualityComparer | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.EqualityComparer Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate bool EqualityComparer(TAlgoApiObject messagePackObject, TAlgoApiObject other); Parameters Type Name Description TAlgoApiObject messagePackObject TAlgoApiObject other Returns Type Description Boolean"
  },
  "api/AlgoSdk.AlgoApiField-1.FieldGetter-1.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.FieldGetter-1.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.FieldGetter<T> | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.FieldGetter<T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate T FieldGetter<T>(TAlgoApiObject messagePackObject); Parameters Type Name Description TAlgoApiObject messagePackObject Returns Type Description T Type Parameters Name Description T"
  },
  "api/AlgoSdk.AlgoApiField-1.FieldSetter-1.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.FieldSetter-1.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.FieldSetter<T> | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.FieldSetter<T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate void FieldSetter<T>(ref TAlgoApiObject messagePackObject, T value); Parameters Type Name Description TAlgoApiObject messagePackObject T value Type Parameters Name Description T"
  },
  "api/AlgoSdk.AlgoApiField-1.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.html",
    "title": "Class AlgoApiField<TAlgoApiObject> | Unity Algorand SDK",
    "keywords": "Class AlgoApiField<TAlgoApiObject> Inheritance Object AlgoApiField<TAlgoApiObject> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public class AlgoApiField<TAlgoApiObject> where TAlgoApiObject : struct Type Parameters Name Description TAlgoApiObject Constructors AlgoApiField(AlgoApiField<TAlgoApiObject>.MessagePackDeserializer, AlgoApiField<TAlgoApiObject>.MessagePackSerializer, AlgoApiField<TAlgoApiObject>.JsonDeserializer, AlgoApiField<TAlgoApiObject>.JsonSerializer, AlgoApiField<TAlgoApiObject>.SerializePredicate, AlgoApiField<TAlgoApiObject>.EqualityComparer) Declaration public AlgoApiField(AlgoApiField<TAlgoApiObject>.MessagePackDeserializer deserializeMessagePack, AlgoApiField<TAlgoApiObject>.MessagePackSerializer serializeMessagePack, AlgoApiField<TAlgoApiObject>.JsonDeserializer deserializeJson, AlgoApiField<TAlgoApiObject>.JsonSerializer serializeJson, AlgoApiField<TAlgoApiObject>.SerializePredicate shouldSerialize, AlgoApiField<TAlgoApiObject>.EqualityComparer fieldsEqual) Parameters Type Name Description AlgoApiField.MessagePackDeserializer <> deserializeMessagePack AlgoApiField.MessagePackSerializer <> serializeMessagePack AlgoApiField.JsonDeserializer <> deserializeJson AlgoApiField.JsonSerializer <> serializeJson AlgoApiField.SerializePredicate <> shouldSerialize AlgoApiField.EqualityComparer <> fieldsEqual Fields DeserializeJson Declaration public readonly AlgoApiField<TAlgoApiObject>.JsonDeserializer DeserializeJson Field Value Type Description AlgoApiField.JsonDeserializer <> DeserializeMessagePack Declaration public readonly AlgoApiField<TAlgoApiObject>.MessagePackDeserializer DeserializeMessagePack Field Value Type Description AlgoApiField.MessagePackDeserializer <> FieldsEqual Declaration public readonly AlgoApiField<TAlgoApiObject>.EqualityComparer FieldsEqual Field Value Type Description AlgoApiField.EqualityComparer <> SerializeJson Declaration public readonly AlgoApiField<TAlgoApiObject>.JsonSerializer SerializeJson Field Value Type Description AlgoApiField.JsonSerializer <> SerializeMessagePack Declaration public readonly AlgoApiField<TAlgoApiObject>.MessagePackSerializer SerializeMessagePack Field Value Type Description AlgoApiField.MessagePackSerializer <> ShouldSerialize Declaration public readonly AlgoApiField<TAlgoApiObject>.SerializePredicate ShouldSerialize Field Value Type Description AlgoApiField.SerializePredicate <> Methods Assign<T>(AlgoApiField<TAlgoApiObject>.FieldGetter<T>, AlgoApiField<TAlgoApiObject>.FieldSetter<T>, AlgoApiField<TAlgoApiObject>.EqualityComparer, AlgoApiField<TAlgoApiObject>.SerializePredicate) Declaration public static AlgoApiField<TAlgoApiObject> Assign<T>(AlgoApiField<TAlgoApiObject>.FieldGetter<T> getter, AlgoApiField<TAlgoApiObject>.FieldSetter<T> setter, AlgoApiField<TAlgoApiObject>.EqualityComparer fieldsEqual, AlgoApiField<TAlgoApiObject>.SerializePredicate shouldSerialize) Parameters Type Name Description AlgoApiField.FieldGetter <T> getter AlgoApiField.FieldSetter <T> setter AlgoApiField.EqualityComparer <> fieldsEqual AlgoApiField.SerializePredicate <> shouldSerialize Returns Type Description AlgoApiField <TAlgoApiObject> Type Parameters Name Description T Assign<T>(AlgoApiField<TAlgoApiObject>.FieldGetter<T>, AlgoApiField<TAlgoApiObject>.FieldSetter<T>, IEqualityComparer<T>, Boolean) Declaration public static AlgoApiField<TAlgoApiObject> Assign<T>(AlgoApiField<TAlgoApiObject>.FieldGetter<T> getter, AlgoApiField<TAlgoApiObject>.FieldSetter<T> setter, IEqualityComparer<T> comparer, bool readOnly) Parameters Type Name Description AlgoApiField.FieldGetter <T> getter AlgoApiField.FieldSetter <T> setter IEqualityComparer <T> comparer Boolean readOnly Returns Type Description AlgoApiField <TAlgoApiObject> Type Parameters Name Description T Assign<T>(AlgoApiField<TAlgoApiObject>.FieldGetter<T>, AlgoApiField<TAlgoApiObject>.FieldSetter<T>, Boolean) Declaration public static AlgoApiField<TAlgoApiObject> Assign<T>(AlgoApiField<TAlgoApiObject>.FieldGetter<T> getter, AlgoApiField<TAlgoApiObject>.FieldSetter<T> setter, bool readOnly) where T : IEquatable<T> Parameters Type Name Description AlgoApiField.FieldGetter <T> getter AlgoApiField.FieldSetter <T> setter Boolean readOnly Returns Type Description AlgoApiField <TAlgoApiObject> Type Parameters Name Description T"
  },
  "api/AlgoSdk.AlgoApiField-1.JsonDeserializer.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.JsonDeserializer.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.JsonDeserializer | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.JsonDeserializer Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate void JsonDeserializer(ref TAlgoApiObject obj, ref JsonReader reader); Parameters Type Name Description TAlgoApiObject obj JsonReader reader"
  },
  "api/AlgoSdk.AlgoApiField-1.JsonSerializer.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.JsonSerializer.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.JsonSerializer | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.JsonSerializer Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate void JsonSerializer(TAlgoApiObject obj, ref JsonWriter writer); Parameters Type Name Description TAlgoApiObject obj JsonWriter writer"
  },
  "api/AlgoSdk.AlgoApiField-1.Map-1.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.Map-1.html",
    "title": "Class AlgoApiField<TAlgoApiObject>.Map<TKey> | Unity Algorand SDK",
    "keywords": "Class AlgoApiField<TAlgoApiObject>.Map<TKey> Inheritance Object AlgoApiField<TAlgoApiObject>.Map<TKey> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public class Map<TKey> : SortedDictionary<TKey, AlgoApiField<TAlgoApiObject>> where TKey : struct, INativeList<byte>, IUTF8Bytes Type Parameters Name Description TKey Methods Assign<T>(TKey, AlgoApiField<TAlgoApiObject>.FieldGetter<T>, AlgoApiField<TAlgoApiObject>.FieldSetter<T>, IEqualityComparer<T>, Boolean) Declaration public AlgoApiField<TAlgoApiObject>.Map<TKey> Assign<T>(TKey key, AlgoApiField<TAlgoApiObject>.FieldGetter<T> getter, AlgoApiField<TAlgoApiObject>.FieldSetter<T> setter, IEqualityComparer<T> comparer, bool readOnly) Parameters Type Name Description TKey key AlgoApiField.FieldGetter <T> getter AlgoApiField.FieldSetter <T> setter IEqualityComparer <T> comparer Boolean readOnly Returns Type Description AlgoApiField.Map <TKey> Type Parameters Name Description T Assign<T>(TKey, AlgoApiField<TAlgoApiObject>.FieldGetter<T>, AlgoApiField<TAlgoApiObject>.FieldSetter<T>, Boolean) Declaration public AlgoApiField<TAlgoApiObject>.Map<TKey> Assign<T>(TKey key, AlgoApiField<TAlgoApiObject>.FieldGetter<T> getter, AlgoApiField<TAlgoApiObject>.FieldSetter<T> setter, bool readOnly) where T : IEquatable<T> Parameters Type Name Description TKey key AlgoApiField.FieldGetter <T> getter AlgoApiField.FieldSetter <T> setter Boolean readOnly Returns Type Description AlgoApiField.Map <TKey> Type Parameters Name Description T GetField(TKey) Declaration public AlgoApiField<TAlgoApiObject> GetField(TKey key) Parameters Type Name Description TKey key Returns Type Description AlgoApiField <TAlgoApiObject> GetFieldsToSerialize(TAlgoApiObject, Allocator) Declaration public NativeList<TKey> GetFieldsToSerialize(TAlgoApiObject obj, Allocator allocator) Parameters Type Name Description TAlgoApiObject obj Allocator allocator Returns Type Description NativeList <TKey>"
  },
  "api/AlgoSdk.AlgoApiField-1.MessagePackDeserializer.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.MessagePackDeserializer.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.MessagePackDeserializer | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.MessagePackDeserializer Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate void MessagePackDeserializer(ref TAlgoApiObject obj, ref MessagePackReader reader); Parameters Type Name Description TAlgoApiObject obj MessagePackReader reader"
  },
  "api/AlgoSdk.AlgoApiField-1.MessagePackSerializer.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.MessagePackSerializer.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.MessagePackSerializer | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.MessagePackSerializer Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate void MessagePackSerializer(TAlgoApiObject obj, ref MessagePackWriter writer); Parameters Type Name Description TAlgoApiObject obj MessagePackWriter writer"
  },
  "api/AlgoSdk.AlgoApiField-1.SerializePredicate.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.SerializePredicate.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.SerializePredicate | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.SerializePredicate Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate bool SerializePredicate(TAlgoApiObject messagePackObject); Parameters Type Name Description TAlgoApiObject messagePackObject Returns Type Description Boolean"
  },
  "api/AlgoSdk.AlgoApiFormatterAttribute.html": {
    "href": "api/AlgoSdk.AlgoApiFormatterAttribute.html",
    "title": "Class AlgoApiFormatterAttribute | Unity Algorand SDK",
    "keywords": "Class AlgoApiFormatterAttribute Inheritance Object ProvideSourceInfoAttribute AlgoApiFormatterAttribute Inherited Members ProvideSourceInfoAttribute.Member ProvideSourceInfoAttribute.LineNumber ProvideSourceInfoAttribute.AssetPath ProvideSourceInfoAttribute.AbsoluteFilePath Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public sealed class AlgoApiFormatterAttribute : ProvideSourceInfoAttribute Constructors AlgoApiFormatterAttribute(Type, String, String, Int32) Declaration public AlgoApiFormatterAttribute(Type formatterType, string member = \"\", string filePath = \"\", int lineNumber = 0) Parameters Type Name Description Type formatterType String member String filePath Int32 lineNumber Properties FormatterType Declaration public Type FormatterType { get; } Property Value Type Description Type"
  },
  "api/AlgoSdk.AlgoApiFormatterCache-1.html": {
    "href": "api/AlgoSdk.AlgoApiFormatterCache-1.html",
    "title": "Class AlgoApiFormatterCache<T> | Unity Algorand SDK",
    "keywords": "Class AlgoApiFormatterCache<T> Inheritance Object AlgoApiFormatterCache<T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class AlgoApiFormatterCache<T> Type Parameters Name Description T Fields Formatter Declaration public static readonly IAlgoApiFormatter<T> Formatter Field Value Type Description IAlgoApiFormatter <T>"
  },
  "api/AlgoSdk.AlgoApiFormatterLookup.html": {
    "href": "api/AlgoSdk.AlgoApiFormatterLookup.html",
    "title": "Class AlgoApiFormatterLookup | Unity Algorand SDK",
    "keywords": "Class AlgoApiFormatterLookup Inheritance Object AlgoApiFormatterLookup Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public class AlgoApiFormatterLookup : Dictionary<Type, object> Fields AddFormatterMethodName Declaration public const string AddFormatterMethodName = \"Add\" Field Value Type Description String Methods Add<T>(IAlgoApiFormatter<T>) Declaration public static void Add<T>(IAlgoApiFormatter<T> formatter) Parameters Type Name Description IAlgoApiFormatter <T> formatter Type Parameters Name Description T Get<T>() Declaration public static IAlgoApiFormatter<T> Get<T>() Returns Type Description IAlgoApiFormatter <T> Type Parameters Name Description T"
  },
  "api/AlgoSdk.AlgoApiObject.html": {
    "href": "api/AlgoSdk.AlgoApiObject.html",
    "title": "Struct AlgoApiObject | Unity Algorand SDK",
    "keywords": "Struct AlgoApiObject A non-deserialized object from an algorand service. Implements IEquatable < AlgoApiObject > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AlgoApiObject Constructors AlgoApiObject(Byte[], ContentType) Declaration public AlgoApiObject(byte[] data, ContentType contentType) Parameters Type Name Description Byte [] data ContentType contentType Properties IsJson if this is a json object. Declaration public readonly bool IsJson { get; } Property Value Type Description Boolean IsMessagePack if this is a messagepack object. Declaration public readonly bool IsMessagePack { get; } Property Value Type Description Boolean Json Raw json if the response had Json encoded as UTF8. Declaration public readonly byte[] Json { get; } Property Value Type Description Byte [] MessagePack Raw message pack if the response had MessagePack Declaration public readonly byte[] MessagePack { get; } Property Value Type Description Byte [] Methods Equals(AlgoApiObject) Declaration public bool Equals(AlgoApiObject other) Parameters Type Name Description AlgoApiObject other Returns Type Description Boolean Operators Implicit(NativeArray<Byte> to AlgoApiObject) Declaration public static implicit operator AlgoApiObject(NativeArray<byte> msgpack) Parameters Type Name Description NativeArray < Byte > msgpack Returns Type Description AlgoApiObject Implicit(NativeList<Byte> to AlgoApiObject) Declaration public static implicit operator AlgoApiObject(NativeList<byte> msgpack) Parameters Type Name Description NativeList < Byte > msgpack Returns Type Description AlgoApiObject Implicit(NativeText to AlgoApiObject) Declaration public static implicit operator AlgoApiObject(NativeText json) Parameters Type Name Description NativeText json Returns Type Description AlgoApiObject Implicit(Byte[] to AlgoApiObject) Declaration public static implicit operator AlgoApiObject(byte[] msgpack) Parameters Type Name Description Byte [] msgpack Returns Type Description AlgoApiObject Implicit(String to AlgoApiObject) Declaration public static implicit operator AlgoApiObject(string json) Parameters Type Name Description String json Returns Type Description AlgoApiObject Implements IEquatable<>"
  },
  "api/AlgoSdk.AlgoApiObjectAttribute.html": {
    "href": "api/AlgoSdk.AlgoApiObjectAttribute.html",
    "title": "Class AlgoApiObjectAttribute | Unity Algorand SDK",
    "keywords": "Class AlgoApiObjectAttribute Inheritance Object ProvideSourceInfoAttribute AlgoApiObjectAttribute Inherited Members ProvideSourceInfoAttribute.Member ProvideSourceInfoAttribute.LineNumber ProvideSourceInfoAttribute.AssetPath ProvideSourceInfoAttribute.AbsoluteFilePath Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public sealed class AlgoApiObjectAttribute : ProvideSourceInfoAttribute Constructors AlgoApiObjectAttribute(String, String, Int32) Declaration public AlgoApiObjectAttribute(string member = \"\", string filePath = \"\", int lineNumber = 0) Parameters Type Name Description String member String filePath Int32 lineNumber"
  },
  "api/AlgoSdk.AlgoApiObjectFormatter.html": {
    "href": "api/AlgoSdk.AlgoApiObjectFormatter.html",
    "title": "Class AlgoApiObjectFormatter | Unity Algorand SDK",
    "keywords": "Class AlgoApiObjectFormatter Inheritance Object AlgoApiObjectFormatter Implements IAlgoApiFormatter < AlgoApiObject > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public class AlgoApiObjectFormatter : IAlgoApiFormatter<AlgoApiObject> Methods Deserialize(ref JsonReader) Declaration public AlgoApiObject Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description AlgoApiObject Deserialize(ref MessagePackReader) Declaration public AlgoApiObject Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description AlgoApiObject Serialize(ref JsonWriter, AlgoApiObject) Declaration public void Serialize(ref JsonWriter writer, AlgoApiObject value) Parameters Type Name Description JsonWriter writer AlgoApiObject value Serialize(ref MessagePackWriter, AlgoApiObject) Declaration public void Serialize(ref MessagePackWriter writer, AlgoApiObject value) Parameters Type Name Description MessagePackWriter writer AlgoApiObject value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.AlgoApiObjectFormatter-1.html": {
    "href": "api/AlgoSdk.AlgoApiObjectFormatter-1.html",
    "title": "Class AlgoApiObjectFormatter<T> | Unity Algorand SDK",
    "keywords": "Class AlgoApiObjectFormatter<T> Inheritance Object AlgoApiObjectFormatter<T> Implements IAlgoApiFormatter <T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public class AlgoApiObjectFormatter<T> : IAlgoApiFormatter<T> where T : struct Type Parameters Name Description T Methods Assign<TField>(String, String, AlgoApiField<T>.FieldGetter<TField>, AlgoApiField<T>.FieldSetter<TField>, IEqualityComparer<TField>, Boolean) Declaration public AlgoApiObjectFormatter<T> Assign<TField>(string jsonKey, string messagePackKey, AlgoApiField<T>.FieldGetter<TField> getter, AlgoApiField<T>.FieldSetter<TField> setter, IEqualityComparer<TField> comparer, bool readOnly) Parameters Type Name Description String jsonKey String messagePackKey AlgoApiField.FieldGetter <TField> getter AlgoApiField.FieldSetter <TField> setter IEqualityComparer <TField> comparer Boolean readOnly Returns Type Description AlgoApiObjectFormatter <T> Type Parameters Name Description TField Assign<TField>(String, String, AlgoApiField<T>.FieldGetter<TField>, AlgoApiField<T>.FieldSetter<TField>, Boolean) Declaration public AlgoApiObjectFormatter<T> Assign<TField>(string jsonKey, string messagePackKey, AlgoApiField<T>.FieldGetter<TField> getter, AlgoApiField<T>.FieldSetter<TField> setter, bool readOnly) where TField : IEquatable<TField> Parameters Type Name Description String jsonKey String messagePackKey AlgoApiField.FieldGetter <TField> getter AlgoApiField.FieldSetter <TField> setter Boolean readOnly Returns Type Description AlgoApiObjectFormatter <T> Type Parameters Name Description TField Deserialize(ref JsonReader) Declaration public T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration public T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Serialize(ref JsonWriter, T) Declaration public void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref MessagePackWriter, T) Declaration public void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.AlgoApiRequest.Awaiter.html": {
    "href": "api/AlgoSdk.AlgoApiRequest.Awaiter.html",
    "title": "Struct AlgoApiRequest.Awaiter | Unity Algorand SDK",
    "keywords": "Struct AlgoApiRequest.Awaiter A Task Awaiter for Implements ICriticalNotifyCompletion Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public readonly struct Awaiter Constructors Awaiter(UniTask<UnityWebRequest>.Awaiter) Declaration public Awaiter(UniTask<UnityWebRequest>.Awaiter uniTaskAwaiter) Parameters Type Name Description UniTask.Awaiter <> uniTaskAwaiter Properties IsCompleted Declaration public readonly bool IsCompleted { get; } Property Value Type Description Boolean Methods GetResult() Declaration public readonly AlgoApiResponse GetResult() Returns Type Description AlgoApiResponse OnCompleted(Action) Declaration public readonly void OnCompleted(Action continuation) Parameters Type Name Description Action continuation UnsafeOnCompleted(Action) Declaration public readonly void UnsafeOnCompleted(Action continuation) Parameters Type Name Description Action continuation Implements ICriticalNotifyCompletion"
  },
  "api/AlgoSdk.AlgoApiRequest.Awaiter-1.html": {
    "href": "api/AlgoSdk.AlgoApiRequest.Awaiter-1.html",
    "title": "Struct AlgoApiRequest.Awaiter<TResponse> | Unity Algorand SDK",
    "keywords": "Struct AlgoApiRequest.Awaiter<TResponse> A Task Awaiter for Implements ICriticalNotifyCompletion Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public readonly struct Awaiter<TResponse> Type Parameters Name Description TResponse Constructors Awaiter(UniTask<UnityWebRequest>.Awaiter) Declaration public Awaiter(UniTask<UnityWebRequest>.Awaiter uniTaskAwaiter) Parameters Type Name Description UniTask.Awaiter <> uniTaskAwaiter Properties IsCompleted Declaration public readonly bool IsCompleted { get; } Property Value Type Description Boolean Methods GetResult() Declaration public readonly AlgoApiResponse<TResponse> GetResult() Returns Type Description AlgoApiResponse <TResponse> OnCompleted(Action) Declaration public readonly void OnCompleted(Action continuation) Parameters Type Name Description Action continuation UnsafeOnCompleted(Action) Declaration public readonly void UnsafeOnCompleted(Action continuation) Parameters Type Name Description Action continuation Implements ICriticalNotifyCompletion"
  },
  "api/AlgoSdk.AlgoApiRequest.html": {
    "href": "api/AlgoSdk.AlgoApiRequest.html",
    "title": "Struct AlgoApiRequest | Unity Algorand SDK",
    "keywords": "Struct AlgoApiRequest A wrapper around for handling requests to Algorand REST services. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public ref readonly struct AlgoApiRequest Methods Delete(String) Create a DELETE request Declaration public static AlgoApiRequest Delete(string url) Parameters Type Name Description String url The url for this request Returns Type Description AlgoApiRequest A new DELETE request Get(String) Create a GET request Declaration public static AlgoApiRequest Get(string url) Parameters Type Name Description String url The url for this request Returns Type Description AlgoApiRequest A new GET request Post(String) Create a POST request Declaration public static AlgoApiRequest Post(string url) Parameters Type Name Description String url The url for this request Returns Type Description AlgoApiRequest A new POST request Send(CancellationToken) Send the request. Declaration public readonly AlgoApiRequest.Sent Send(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken An optional cancellation token Returns Type Description AlgoApiRequest.Sent A AlgoApiRequest.Sent request Send<TProgress>(TProgress, CancellationToken) Send the request and check progress callbacks using Declaration public readonly AlgoApiRequest.SentWithProgress<TProgress> Send<TProgress>(TProgress progress, CancellationToken cancellationToken = null) where TProgress : IProgress<float> Parameters Type Name Description TProgress progress The progress callback CancellationToken cancellationToken An optional cancellation token Returns Type Description AlgoApiRequest.SentWithProgress <TProgress> A AlgoApiRequest.SentWithProgress<TProgress> request Type Parameters Name Description TProgress A progress callback implementing SetHeaders(Header[]) Set additional headers on this request Declaration public readonly AlgoApiRequest SetHeaders(params Header[] headers) Parameters Type Name Description Header [] headers The headers in format \"key:value\" Returns Type Description AlgoApiRequest this request with headers set SetJsonBody(NativeText) Set body of the request, and set its content type header to \"application/json\" Declaration public readonly AlgoApiRequest SetJsonBody(NativeText json) Parameters Type Name Description NativeText json The utf8 json to set the body of the request Returns Type Description AlgoApiRequest this request with body and header set SetJsonBody(String) Set body of the request, and set its content type header to \"application/json\" Declaration public readonly AlgoApiRequest SetJsonBody(string json) Parameters Type Name Description String json The utf8 json to set the body of the request Returns Type Description AlgoApiRequest this request with body and header set SetJsonBody<TBody>(TBody) Set body of the request, and set its content type header to \"application/json\" Declaration public readonly AlgoApiRequest SetJsonBody<TBody>(TBody value) Parameters Type Name Description TBody value An object to serialize into json, then to set in the body of the request Returns Type Description AlgoApiRequest this request with body and header set Type Parameters Name Description TBody Type of the object to serialize SetMessagePackBody(NativeArray<Byte>.ReadOnly) Set body of the request and set its content type header to \"application/msgpack\" Declaration public readonly AlgoApiRequest SetMessagePackBody(NativeArray<byte>.ReadOnly bytes) Parameters Type Name Description NativeArray.ReadOnly <> bytes The msgpack bytes to set for the body Returns Type Description AlgoApiRequest this request with body and header set SetPlainTextBody(String) Set body of the request, and set its content type header to \"application/text\" Declaration public readonly AlgoApiRequest SetPlainTextBody(string plainText) Parameters Type Name Description String plainText The utf8 plaintext to use for the body Returns Type Description AlgoApiRequest this request with body and header set SetRawBody(Byte[], ContentType) Set the body and content type header of the request Declaration public readonly AlgoApiRequest SetRawBody(byte[] data, ContentType contentType) Parameters Type Name Description Byte [] data The raw bytes to set for the body ContentType contentType The content type to set the header of the request Returns Type Description AlgoApiRequest this request with body and header set SetToken(String, String) Set the token used for authenticating to the service. Declaration public readonly AlgoApiRequest SetToken(string tokenHeader, string token) Parameters Type Name Description String tokenHeader The name of the request header used for the token. String token The token used for authenticating to the service. Returns Type Description AlgoApiRequest with token set"
  },
  "api/AlgoSdk.AlgoApiRequest.Sent.html": {
    "href": "api/AlgoSdk.AlgoApiRequest.Sent.html",
    "title": "Struct AlgoApiRequest.Sent | Unity Algorand SDK",
    "keywords": "Struct AlgoApiRequest.Sent A wrapper around the handling the sent request. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public ref readonly struct Sent Constructors Sent(UnityWebRequestAsyncOperation, CancellationToken) Declaration public Sent(UnityWebRequestAsyncOperation asyncOperation, CancellationToken cancellationToken = null) Parameters Type Name Description UnityWebRequestAsyncOperation asyncOperation CancellationToken cancellationToken Properties AsyncOperation Declaration public readonly UnityWebRequestAsyncOperation AsyncOperation { get; } Property Value Type Description UnityWebRequestAsyncOperation Methods CastResponse<TResponse>() Declaration public readonly AlgoApiRequest.Sent<TResponse> CastResponse<TResponse>() Returns Type Description AlgoApiRequest.Sent <TResponse> Type Parameters Name Description TResponse GetAwaiter() Declaration public readonly AlgoApiRequest.Awaiter GetAwaiter() Returns Type Description AlgoApiRequest.Awaiter WithCancellation(CancellationToken) Declaration public readonly AlgoApiRequest.Sent WithCancellation(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description AlgoApiRequest.Sent WithProgress<TProgress>(TProgress) Declaration public readonly AlgoApiRequest.SentWithProgress<TProgress> WithProgress<TProgress>(TProgress progress) where TProgress : IProgress<float> Parameters Type Name Description TProgress progress Returns Type Description AlgoApiRequest.SentWithProgress <TProgress> Type Parameters Name Description TProgress"
  },
  "api/AlgoSdk.AlgoApiRequest.Sent-1.html": {
    "href": "api/AlgoSdk.AlgoApiRequest.Sent-1.html",
    "title": "Struct AlgoApiRequest.Sent<TResponse> | Unity Algorand SDK",
    "keywords": "Struct AlgoApiRequest.Sent<TResponse> A wrapper around the handling the sent request. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public ref readonly struct Sent<TResponse> Type Parameters Name Description TResponse Constructors Sent(UnityWebRequestAsyncOperation, CancellationToken) Declaration public Sent(UnityWebRequestAsyncOperation asyncOperation, CancellationToken cancellationToken = null) Parameters Type Name Description UnityWebRequestAsyncOperation asyncOperation CancellationToken cancellationToken Properties AsyncOperation Declaration public readonly UnityWebRequestAsyncOperation AsyncOperation { get; } Property Value Type Description UnityWebRequestAsyncOperation Methods GetAwaiter() Declaration public readonly AlgoApiRequest.Awaiter<TResponse> GetAwaiter() Returns Type Description AlgoApiRequest.Awaiter <TResponse> WithCancellation(CancellationToken) Declaration public readonly AlgoApiRequest.Sent<TResponse> WithCancellation(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description AlgoApiRequest.Sent <TResponse> WithProgress<TProgress>(TProgress) Declaration public readonly AlgoApiRequest.SentWithProgress<TResponse, TProgress> WithProgress<TProgress>(TProgress progress) where TProgress : IProgress<float> Parameters Type Name Description TProgress progress Returns Type Description AlgoApiRequest.SentWithProgress <TResponse, TProgress> Type Parameters Name Description TProgress Operators Implicit(AlgoApiRequest.Sent to AlgoApiRequest.Sent<TResponse>) Declaration public static implicit operator AlgoApiRequest.Sent<TResponse>(AlgoApiRequest.Sent sent) Parameters Type Name Description AlgoApiRequest.Sent sent Returns Type Description AlgoApiRequest.Sent <TResponse>"
  },
  "api/AlgoSdk.AlgoApiRequest.SentWithProgress-1.html": {
    "href": "api/AlgoSdk.AlgoApiRequest.SentWithProgress-1.html",
    "title": "Struct AlgoApiRequest.SentWithProgress<TProgress> | Unity Algorand SDK",
    "keywords": "Struct AlgoApiRequest.SentWithProgress<TProgress> A wrapper around the handling the sent request. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public ref readonly struct SentWithProgress<TProgress> where TProgress : IProgress<float> Type Parameters Name Description TProgress Constructors SentWithProgress(UnityWebRequestAsyncOperation, TProgress, CancellationToken) Declaration public SentWithProgress(UnityWebRequestAsyncOperation asyncOperation, TProgress progress, CancellationToken cancellationToken = null) Parameters Type Name Description UnityWebRequestAsyncOperation asyncOperation TProgress progress CancellationToken cancellationToken Properties AsyncOperation Declaration public readonly UnityWebRequestAsyncOperation AsyncOperation { get; } Property Value Type Description UnityWebRequestAsyncOperation Methods CastResponse<TResponse>() Declaration public readonly AlgoApiRequest.SentWithProgress<TResponse, TProgress> CastResponse<TResponse>() Returns Type Description AlgoApiRequest.SentWithProgress <TResponse, TProgress> Type Parameters Name Description TResponse GetAwaiter() Declaration public readonly AlgoApiRequest.Awaiter GetAwaiter() Returns Type Description AlgoApiRequest.Awaiter WithCancellation(CancellationToken) Declaration public readonly AlgoApiRequest.SentWithProgress<TProgress> WithCancellation(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description AlgoApiRequest.SentWithProgress <TProgress>"
  },
  "api/AlgoSdk.AlgoApiRequest.SentWithProgress-2.html": {
    "href": "api/AlgoSdk.AlgoApiRequest.SentWithProgress-2.html",
    "title": "Struct AlgoApiRequest.SentWithProgress<TResponse, TProgress> | Unity Algorand SDK",
    "keywords": "Struct AlgoApiRequest.SentWithProgress<TResponse, TProgress> A wrapper around the handling the sent request. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public ref readonly struct SentWithProgress<TResponse, TProgress> where TProgress : IProgress<float> Type Parameters Name Description TResponse TProgress Constructors SentWithProgress(UnityWebRequestAsyncOperation, TProgress, CancellationToken) Declaration public SentWithProgress(UnityWebRequestAsyncOperation asyncOperation, TProgress progress, CancellationToken cancellationToken = null) Parameters Type Name Description UnityWebRequestAsyncOperation asyncOperation TProgress progress CancellationToken cancellationToken Properties AsyncOperation Declaration public readonly UnityWebRequestAsyncOperation AsyncOperation { get; } Property Value Type Description UnityWebRequestAsyncOperation Methods GetAwaiter() Declaration public readonly AlgoApiRequest.Awaiter<TResponse> GetAwaiter() Returns Type Description AlgoApiRequest.Awaiter <TResponse> WithCancellation(CancellationToken) Declaration public readonly AlgoApiRequest.SentWithProgress<TResponse, TProgress> WithCancellation(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description AlgoApiRequest.SentWithProgress <TResponse, TProgress> Operators Implicit(AlgoApiRequest.SentWithProgress<TProgress> to AlgoApiRequest.SentWithProgress<TResponse, TProgress>) Declaration public static implicit operator AlgoApiRequest.SentWithProgress<TResponse, TProgress>(AlgoApiRequest.SentWithProgress<TProgress> sent) Parameters Type Name Description AlgoApiRequest.SentWithProgress <TProgress> sent Returns Type Description AlgoApiRequest.SentWithProgress <TResponse, TProgress>"
  },
  "api/AlgoSdk.AlgoApiResponse.html": {
    "href": "api/AlgoSdk.AlgoApiResponse.html",
    "title": "Struct AlgoApiResponse | Unity Algorand SDK",
    "keywords": "Struct AlgoApiResponse Wrapper class around a completed Implements IAlgoApiResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AlgoApiResponse : IAlgoApiResponse Constructors AlgoApiResponse(UnityWebRequest) Declaration public AlgoApiResponse(UnityWebRequest completedRequest) Parameters Type Name Description UnityWebRequest completedRequest Properties ContentType Declaration public readonly ContentType ContentType { get; } Property Value Type Description ContentType Data Declaration public readonly byte[] Data { get; } Property Value Type Description Byte [] Error Declaration public readonly ErrorResponse Error { get; } Property Value Type Description ErrorResponse ResponseCode Declaration public readonly long ResponseCode { get; } Property Value Type Description Int64 Status Declaration public readonly Result Status { get; } Property Value Type Description Result Methods GetText() Declaration public string GetText() Returns Type Description String Implements IAlgoApiResponse"
  },
  "api/AlgoSdk.AlgoApiResponse-1.html": {
    "href": "api/AlgoSdk.AlgoApiResponse-1.html",
    "title": "Struct AlgoApiResponse<T> | Unity Algorand SDK",
    "keywords": "Struct AlgoApiResponse<T> Wrapper class around a completed . This can be deconstructed into a tuple of (ErrorResponse, Payload) Implements IAlgoApiResponse <T> IAlgoApiResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public readonly struct AlgoApiResponse<T> : IAlgoApiResponse<T>, IAlgoApiResponse Type Parameters Name Description T The type of the object deserialized from the response Constructors AlgoApiResponse(AlgoApiResponse) Declaration public AlgoApiResponse(AlgoApiResponse response) Parameters Type Name Description AlgoApiResponse response AlgoApiResponse(AlgoApiResponse, T) Declaration public AlgoApiResponse(AlgoApiResponse response, T payload) Parameters Type Name Description AlgoApiResponse response T payload AlgoApiResponse(AlgoApiResponse, ErrorResponse) Declaration public AlgoApiResponse(AlgoApiResponse response, ErrorResponse error) Parameters Type Name Description AlgoApiResponse response ErrorResponse error Properties ContentType Declaration public readonly ContentType ContentType { get; } Property Value Type Description ContentType Data Declaration public readonly byte[] Data { get; } Property Value Type Description Byte [] Error Declaration public readonly ErrorResponse Error { get; } Property Value Type Description ErrorResponse Payload Declaration public readonly T Payload { get; } Property Value Type Description T ResponseCode Declaration public readonly long ResponseCode { get; } Property Value Type Description Int64 Status Declaration public readonly Result Status { get; } Property Value Type Description Result Methods Deconstruct(out ErrorResponse, out T) Declaration public readonly void Deconstruct(out ErrorResponse error, out T payload) Parameters Type Name Description ErrorResponse error T payload GetText() Declaration public readonly string GetText() Returns Type Description String Operators Implicit(AlgoApiResponse to AlgoApiResponse<T>) Declaration public static implicit operator AlgoApiResponse<T>(AlgoApiResponse response) Parameters Type Name Description AlgoApiResponse response Returns Type Description AlgoApiResponse <T> Implicit(AlgoApiResponse<T> to AlgoApiResponse) Declaration public static implicit operator AlgoApiResponse(AlgoApiResponse<T> response) Parameters Type Name Description AlgoApiResponse <T> response Returns Type Description AlgoApiResponse Implements IAlgoApiResponse<T> IAlgoApiResponse"
  },
  "api/AlgoSdk.AlgoApiSerializer.html": {
    "href": "api/AlgoSdk.AlgoApiSerializer.html",
    "title": "Class AlgoApiSerializer | Unity Algorand SDK",
    "keywords": "Class AlgoApiSerializer Contains functions for serializing and deserializing AlgoSdk types Inheritance Object AlgoApiSerializer Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class AlgoApiSerializer Methods Deserialize<T>(NativeArray<Byte>, ContentType) Deserializes raw data based on its ContentType Declaration public static T Deserialize<T>(NativeArray<byte> bytes, ContentType contentType) Parameters Type Name Description NativeArray < Byte > bytes The raw data to deserialize ContentType contentType The content type of the raw data (Json | MessagePack) Returns Type Description T The data deserialized as T Type Parameters Name Description T The type to deserialize to Deserialize<T>(Byte[], ContentType) Deserializes raw data based on its ContentType Declaration public static T Deserialize<T>(byte[] bytes, ContentType contentType) Parameters Type Name Description Byte [] bytes The raw data to deserialize ContentType contentType The content type of the raw data (Json | MessagePack) Returns Type Description T The data deserialized as T Type Parameters Name Description T The type to deserialize to DeserializeJson<T>(NativeArray<Byte>) Deserialize JSON encoded as UTF8 bytes Declaration public static T DeserializeJson<T>(NativeArray<byte> bytes) Parameters Type Name Description NativeArray < Byte > bytes UTF8 Bytes that can be decoded into JSON Returns Type Description T The data deserialized as T Type Parameters Name Description T The type to deserialize the data into DeserializeJson<T>(NativeText) Deserialize JSON text into an object Declaration public static T DeserializeJson<T>(NativeText text) Parameters Type Name Description NativeText text The JSON text Returns Type Description T The data deserialized as T Type Parameters Name Description T The type of the object that will be deserialized into DeserializeJson<T>(Byte[]) Deserialize JSON encoded as UTF8 bytes Declaration public static T DeserializeJson<T>(byte[] bytes) Parameters Type Name Description Byte [] bytes UTF8 Bytes that can be decoded into JSON Returns Type Description T The data deserialized as T Type Parameters Name Description T The type to deserialize the data into DeserializeJson<T>(String) Deserialize JSON text into an object Declaration public static T DeserializeJson<T>(string text) Parameters Type Name Description String text The JSON text Returns Type Description T The data deserialized as T Type Parameters Name Description T The type of the object that will be deserialized into DeserializeMessagePack<T>(NativeArray<Byte>) Deserialize messagepack bytes into an object Declaration public static T DeserializeMessagePack<T>(NativeArray<byte> bytes) Parameters Type Name Description NativeArray < Byte > bytes The messagepack bytes Returns Type Description T The data deserialized as T Type Parameters Name Description T The type of the object that will be deserialized into SerializeJson<T>(T) Serialize an object into json text Declaration public static string SerializeJson<T>(T obj) Parameters Type Name Description T obj The object to serialize Returns Type Description String json text as a string Type Parameters Name Description T The type of the object that is serialized SerializeJson<T>(T, Allocator) Serialize an object into json text Declaration public static NativeText SerializeJson<T>(T obj, Allocator allocator) Parameters Type Name Description T obj The object to serialize Allocator allocator The allocator to use for the created text of json Returns Type Description NativeText A allocated from the given allocator Type Parameters Name Description T The type of the object that is serialized SerializeMessagePack<T>(T) Serialize an object into messagepack bytes Declaration public static byte[] SerializeMessagePack<T>(T obj) Parameters Type Name Description T obj The object to serialize Returns Type Description Byte [] The message pack message as an array of bytes Type Parameters Name Description T The type of the object that is serialized SerializeMessagePack<T>(T, Allocator) Serialize an object into messagepack bytes Declaration public static NativeList<byte> SerializeMessagePack<T>(T obj, Allocator allocator) Parameters Type Name Description T obj The object to serialize Allocator allocator The allocator to use for the created list of message pack bytes Returns Type Description NativeList < Byte > A allocated using the given allocator Type Parameters Name Description T The type of the object that is serialized"
  },
  "api/AlgoSdk.AlgodClient.html": {
    "href": "api/AlgoSdk.AlgodClient.html",
    "title": "Struct AlgodClient | Unity Algorand SDK",
    "keywords": "Struct AlgodClient A client for accessing the algod service Implements IAlgodClient IAlgoApiClient Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AlgodClient : IAlgodClient, IAlgoApiClient Remarks The algod service is responsible for handling information required to create and send transactions. Constructors AlgodClient(String, Header[]) Create a new algod client Declaration public AlgodClient(string address, params Header[] headers) Parameters Type Name Description String address url of the algod service, including the port, e.g. \"http://localhost:4001\" Header [] headers extra headers to add to the requests. e.g. (\"x-api-key, my-api-key\") AlgodClient(String, String, Header[]) Create a new algod client Declaration public AlgodClient(string address, string token, params Header[] headers) Parameters Type Name Description String address url of the algod service, including the port, e.g. \"http://localhost:4001\" String token token used in authenticating to the algod service Header [] headers extra headers to add to the requests. e.g. (\"x-api-key, my-api-key\") Properties Address Declaration public readonly string Address { get; } Property Value Type Description String Headers Declaration public readonly Header[] Headers { get; } Property Value Type Description Header [] Token Declaration public readonly string Token { get; } Property Value Type Description String TokenHeader Declaration public readonly string TokenHeader { get; } Property Value Type Description String Methods AbortCatchup(String) Declaration public AlgoApiRequest.Sent<CatchupMessage> AbortCatchup(string catchpoint) Parameters Type Name Description String catchpoint Returns Type Description AlgoApiRequest.Sent < CatchupMessage > GetAccountInformation(Address) Declaration public AlgoApiRequest.Sent<AccountInfo> GetAccountInformation(Address accountAddress) Parameters Type Name Description Address accountAddress Returns Type Description AlgoApiRequest.Sent < AccountInfo > GetApplication(UInt64) Declaration public AlgoApiRequest.Sent<Application> GetApplication(ulong applicationId) Parameters Type Name Description UInt64 applicationId Returns Type Description AlgoApiRequest.Sent < Application > GetAsset(UInt64) Declaration public AlgoApiRequest.Sent<Asset> GetAsset(ulong assetId) Parameters Type Name Description UInt64 assetId Returns Type Description AlgoApiRequest.Sent < Asset > GetBlock(UInt64) Declaration public AlgoApiRequest.Sent<BlockResponse> GetBlock(ulong round) Parameters Type Name Description UInt64 round Returns Type Description AlgoApiRequest.Sent < BlockResponse > GetCurrentStatus() Declaration public AlgoApiRequest.Sent<Status> GetCurrentStatus() Returns Type Description AlgoApiRequest.Sent < Status > GetGenesisInformation() Declaration public AlgoApiRequest.Sent<AlgoApiObject> GetGenesisInformation() Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > GetHealth() Declaration public AlgoApiRequest.Sent GetHealth() Returns Type Description AlgoApiRequest.Sent GetLedgerSupply() Declaration public AlgoApiRequest.Sent<LedgerSupply> GetLedgerSupply() Returns Type Description AlgoApiRequest.Sent < LedgerSupply > GetMerkleProof(UInt64, TransactionId) Declaration public AlgoApiRequest.Sent<MerkleProof> GetMerkleProof(ulong round, TransactionId txid) Parameters Type Name Description UInt64 round TransactionId txid Returns Type Description AlgoApiRequest.Sent < MerkleProof > GetMetrics() Declaration public AlgoApiRequest.Sent GetMetrics() Returns Type Description AlgoApiRequest.Sent GetPendingTransaction(TransactionId) Declaration public AlgoApiRequest.Sent<PendingTransaction> GetPendingTransaction(TransactionId txid) Parameters Type Name Description TransactionId txid Returns Type Description AlgoApiRequest.Sent < PendingTransaction > GetPendingTransactions(UInt64) Declaration public AlgoApiRequest.Sent<PendingTransactions> GetPendingTransactions(ulong max = 0UL) Parameters Type Name Description UInt64 max Returns Type Description AlgoApiRequest.Sent < PendingTransactions > GetPendingTransactionsByAccount(Address, UInt64) Declaration public AlgoApiRequest.Sent<PendingTransactions> GetPendingTransactionsByAccount(Address accountAddress, ulong max = 0UL) Parameters Type Name Description Address accountAddress UInt64 max Returns Type Description AlgoApiRequest.Sent < PendingTransactions > GetStatusAfterWaitingForRound(UInt64) Declaration public AlgoApiRequest.Sent<Status> GetStatusAfterWaitingForRound(ulong round) Parameters Type Name Description UInt64 round Returns Type Description AlgoApiRequest.Sent < Status > GetSuggestedParams() Declaration public AlgoApiRequest.Sent<TransactionParams> GetSuggestedParams() Returns Type Description AlgoApiRequest.Sent < TransactionParams > GetSwaggerSpec() Declaration public AlgoApiRequest.Sent<AlgoApiObject> GetSwaggerSpec() Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > GetVersions() Declaration public AlgoApiRequest.Sent<Version> GetVersions() Returns Type Description AlgoApiRequest.Sent < Version > RegisterParticipationKeys(String, UInt64, Optional<UInt64>, Optional<Boolean>, Optional<Boolean>) Declaration public AlgoApiRequest.Sent<TransactionIdResponse> RegisterParticipationKeys(string accountAddress, ulong fee = 1000UL, Optional<ulong> keyDilution = default(Optional<ulong>), Optional<bool> noWait = default(Optional<bool>), Optional<bool> roundLastValid = default(Optional<bool>)) Parameters Type Name Description String accountAddress UInt64 fee Optional < UInt64 > keyDilution Optional < Boolean > noWait Optional < Boolean > roundLastValid Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > SendTransaction(Byte[]) Declaration public AlgoApiRequest.Sent<TransactionIdResponse> SendTransaction(byte[] txn) Parameters Type Name Description Byte [] txn Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > SendTransaction<T>(Signed<T>) Declaration public AlgoApiRequest.Sent<TransactionIdResponse> SendTransaction<T>(Signed<T> txn) where T : struct, ITransaction, IEquatable<T> Parameters Type Name Description Signed <T> txn Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > Type Parameters Name Description T SendTransactions(SignedTransaction[]) Declaration public AlgoApiRequest.Sent<TransactionIdResponse> SendTransactions(params SignedTransaction[] txns) Parameters Type Name Description SignedTransaction [] txns Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > SendTransactions(Byte[][]) Declaration public AlgoApiRequest.Sent<TransactionIdResponse> SendTransactions(params byte[][] signedTxns) Parameters Type Name Description Byte [][] signedTxns Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > ShutDown(Optional<UInt64>) Declaration public AlgoApiRequest.Sent ShutDown(Optional<ulong> timeout = default(Optional<ulong>)) Parameters Type Name Description Optional < UInt64 > timeout Returns Type Description AlgoApiRequest.Sent StartCatchup(String) Declaration public AlgoApiRequest.Sent<CatchupMessage> StartCatchup(string catchpoint) Parameters Type Name Description String catchpoint Returns Type Description AlgoApiRequest.Sent < CatchupMessage > TealCompile(String) Declaration public AlgoApiRequest.Sent<TealCompilationResult> TealCompile(string source) Parameters Type Name Description String source Returns Type Description AlgoApiRequest.Sent < TealCompilationResult > TealDryrun(Optional<DryrunRequest>) Declaration public AlgoApiRequest.Sent<DryrunResults> TealDryrun(Optional<DryrunRequest> dryrunRequest = default(Optional<DryrunRequest>)) Parameters Type Name Description Optional < DryrunRequest > dryrunRequest Returns Type Description AlgoApiRequest.Sent < DryrunResults > Implements IAlgodClient IAlgoApiClient"
  },
  "api/AlgoSdk.AppCallTxn.html": {
    "href": "api/AlgoSdk.AppCallTxn.html",
    "title": "Struct AppCallTxn | Unity Algorand SDK",
    "keywords": "Struct AppCallTxn Implements IAppCallTxn ITransaction IEquatable < AppCallTxn > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AppCallTxn : IAppCallTxn, ITransaction Properties Accounts Declaration public Address[] Accounts { get; set; } Property Value Type Description Address [] AppArguments Declaration public CompiledTeal AppArguments { get; set; } Property Value Type Description CompiledTeal ApplicationId Declaration public ulong ApplicationId { get; set; } Property Value Type Description UInt64 ApprovalProgram Declaration public CompiledTeal ApprovalProgram { get; set; } Property Value Type Description CompiledTeal ClearStateProgram Declaration public CompiledTeal ClearStateProgram { get; set; } Property Value Type Description CompiledTeal ExtraProgramPages Declaration public ulong ExtraProgramPages { get; set; } Property Value Type Description UInt64 Fee Declaration public ulong Fee { get; set; } Property Value Type Description UInt64 FirstValidRound Declaration public ulong FirstValidRound { get; set; } Property Value Type Description UInt64 ForeignApps Declaration public ulong[] ForeignApps { get; set; } Property Value Type Description UInt64 [] ForeignAssets Declaration public ulong[] ForeignAssets { get; set; } Property Value Type Description UInt64 [] GenesisHash Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisId Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes GlobalStateSchema Declaration public StateSchema GlobalStateSchema { get; set; } Property Value Type Description StateSchema Group Declaration public Sha512_256_Hash Group { get; set; } Property Value Type Description Sha512_256_Hash LastValidRound Declaration public ulong LastValidRound { get; set; } Property Value Type Description UInt64 Lease Declaration public Sha512_256_Hash Lease { get; set; } Property Value Type Description Sha512_256_Hash LocalStateSchema Declaration public StateSchema LocalStateSchema { get; set; } Property Value Type Description StateSchema Note Declaration public byte[] Note { get; set; } Property Value Type Description Byte [] OnComplete Declaration public OnCompletion OnComplete { get; set; } Property Value Type Description OnCompletion RekeyTo Declaration public Address RekeyTo { get; set; } Property Value Type Description Address Sender Declaration public Address Sender { get; set; } Property Value Type Description Address TransactionType Declaration public TransactionType TransactionType { get; } Property Value Type Description TransactionType Methods CopyFrom(Transaction) Declaration public void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction CopyTo(ref Transaction) Declaration public void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction Equals(AppCallTxn) Declaration public bool Equals(AppCallTxn other) Parameters Type Name Description AppCallTxn other Returns Type Description Boolean Implements IAppCallTxn ITransaction IEquatable<>"
  },
  "api/AlgoSdk.AppCallTxn.Params.html": {
    "href": "api/AlgoSdk.AppCallTxn.Params.html",
    "title": "Struct AppCallTxn.Params | Unity Algorand SDK",
    "keywords": "Struct AppCallTxn.Params Implements IEquatable < AppCallTxn.Params > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Params Fields Accounts Declaration public Address[] Accounts Field Value Type Description Address [] AppArguments Declaration public CompiledTeal AppArguments Field Value Type Description CompiledTeal ApplicationId Declaration public ulong ApplicationId Field Value Type Description UInt64 ApprovalProgram Declaration public CompiledTeal ApprovalProgram Field Value Type Description CompiledTeal ClearStateProgram Declaration public CompiledTeal ClearStateProgram Field Value Type Description CompiledTeal ExtraProgramPages Declaration public ulong ExtraProgramPages Field Value Type Description UInt64 ForeignApps Declaration public ulong[] ForeignApps Field Value Type Description UInt64 [] ForeignAssets Declaration public ulong[] ForeignAssets Field Value Type Description UInt64 [] GlobalStateSchema Declaration public StateSchema GlobalStateSchema Field Value Type Description StateSchema LocalStateSchema Declaration public StateSchema LocalStateSchema Field Value Type Description StateSchema OnComplete Declaration public OnCompletion OnComplete Field Value Type Description OnCompletion Methods Equals(AppCallTxn.Params) Declaration public bool Equals(AppCallTxn.Params other) Parameters Type Name Description AppCallTxn.Params other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.Application.html": {
    "href": "api/AlgoSdk.Application.html",
    "title": "Struct Application | Unity Algorand SDK",
    "keywords": "Struct Application Application index and its parameters Implements IEquatable < Application > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Application Fields CreatedAtRound Round when this application was created. Declaration public ulong CreatedAtRound Field Value Type Description UInt64 Deleted Whether or not this application is currently deleted. Declaration public Optional<bool> Deleted Field Value Type Description Optional < Boolean > DeletedAtRound Round when this application was deleted. Declaration public ulong DeletedAtRound Field Value Type Description UInt64 HashPrefix Bytes prefix when hashing this struct Declaration public static readonly byte[] HashPrefix Field Value Type Description Byte [] Id [appidx] application index. Declaration public ulong Id Field Value Type Description UInt64 Params [appparams] application parameters. Declaration public ApplicationParams Params Field Value Type Description ApplicationParams Methods ComputeAddressFromId(UInt64) Computes the Address from an Id . Declaration public static Address ComputeAddressFromId(ulong appIndex) Parameters Type Name Description UInt64 appIndex An application id. Returns Type Description Address An Address . Equals(Application) Declaration public bool Equals(Application other) Parameters Type Name Description Application other Returns Type Description Boolean GetAddress() Computes the Address from the Id for this application. Declaration public Optional<Address> GetAddress() Returns Type Description Optional < Address > Empty if the Id is empty, otherwise an Address . Implements IEquatable<>"
  },
  "api/AlgoSdk.ApplicationLocalState.html": {
    "href": "api/AlgoSdk.ApplicationLocalState.html",
    "title": "Struct ApplicationLocalState | Unity Algorand SDK",
    "keywords": "Struct ApplicationLocalState Stores local state associated with an application. Implements IEquatable < ApplicationLocalState > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ApplicationLocalState Fields ClosedOutAtRound Round when account closed out of the application. Declaration public ulong ClosedOutAtRound Field Value Type Description UInt64 Deleted Whether or not the application local state is currently deleted from its account. Declaration public Optional<bool> Deleted Field Value Type Description Optional < Boolean > Id The application which this local state is for. Declaration public ulong Id Field Value Type Description UInt64 KeyValues [tkv] storage. Declaration public TealKeyValue[] KeyValues Field Value Type Description TealKeyValue [] OptedInAtRound Round when the account opted into the application. Declaration public ulong OptedInAtRound Field Value Type Description UInt64 Schema [hsch] schema. Declaration public StateSchema Schema Field Value Type Description StateSchema Methods Equals(ApplicationLocalState) Declaration public bool Equals(ApplicationLocalState other) Parameters Type Name Description ApplicationLocalState other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.ApplicationParams.html": {
    "href": "api/AlgoSdk.ApplicationParams.html",
    "title": "Struct ApplicationParams | Unity Algorand SDK",
    "keywords": "Struct ApplicationParams Stores the global information associated with an application. Implements IEquatable < ApplicationParams > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ApplicationParams Fields ApprovalProgram Logic executed for every application transaction, except when on-completion is set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Approval programs may reject the transaction. Declaration public CompiledTeal ApprovalProgram Field Value Type Description CompiledTeal ClearStateProgram Logic executed for application transactions with on-completion set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Clear state programs cannot reject the transaction. Declaration public CompiledTeal ClearStateProgram Field Value Type Description CompiledTeal Creator The address that created this application. This is the address where the parameters and global state for this application can be found. Declaration public Address Creator Field Value Type Description Address ExtraProgramPages [epp] the amount of extra program pages available to this app. Declaration public ulong ExtraProgramPages Field Value Type Description UInt64 GlobalState global state Declaration public TealKeyValue[] GlobalState Field Value Type Description TealKeyValue [] GlobalStateSchema global schema Declaration public StateSchema GlobalStateSchema Field Value Type Description StateSchema LocalStateSchema local schema Declaration public StateSchema LocalStateSchema Field Value Type Description StateSchema Methods Equals(ApplicationParams) Declaration public bool Equals(ApplicationParams other) Parameters Type Name Description ApplicationParams other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.ApplicationResponse.html": {
    "href": "api/AlgoSdk.ApplicationResponse.html",
    "title": "Struct ApplicationResponse | Unity Algorand SDK",
    "keywords": "Struct ApplicationResponse Implements IEquatable < ApplicationResponse > IIndexerResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ApplicationResponse : IIndexerResponse Properties Application Declaration public Application Application { readonly get; set; } Property Value Type Description Application CurrentRound Declaration public ulong CurrentRound { readonly get; set; } Property Value Type Description UInt64 Methods Equals(ApplicationResponse) Declaration public bool Equals(ApplicationResponse other) Parameters Type Name Description ApplicationResponse other Returns Type Description Boolean Implements IEquatable<> IIndexerResponse"
  },
  "api/AlgoSdk.ApplicationsResponse.html": {
    "href": "api/AlgoSdk.ApplicationsResponse.html",
    "title": "Struct ApplicationsResponse | Unity Algorand SDK",
    "keywords": "Struct ApplicationsResponse Implements IEquatable < ApplicationsResponse > IPaginatedResponse IIndexerResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ApplicationsResponse : IPaginatedResponse, IIndexerResponse Properties Applications Declaration public Application[] Applications { readonly get; set; } Property Value Type Description Application [] CurrentRound Declaration public ulong CurrentRound { readonly get; set; } Property Value Type Description UInt64 NextToken Declaration public FixedString128Bytes NextToken { readonly get; set; } Property Value Type Description FixedString128Bytes Methods Equals(ApplicationsResponse) Declaration public bool Equals(ApplicationsResponse other) Parameters Type Name Description ApplicationsResponse other Returns Type Description Boolean Implements IEquatable<> IPaginatedResponse IIndexerResponse"
  },
  "api/AlgoSdk.ArrayComparer.html": {
    "href": "api/AlgoSdk.ArrayComparer.html",
    "title": "Class ArrayComparer | Unity Algorand SDK",
    "keywords": "Class ArrayComparer Inheritance Object ArrayComparer Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class ArrayComparer Methods Equals(String[], String[]) Declaration public static bool Equals(string[] x, string[] y) Parameters Type Name Description String [] x String [] y Returns Type Description Boolean Equals<T>(T[], T[]) Declaration public static bool Equals<T>(T[] x, T[] y) where T : IEquatable<T> Parameters Type Name Description T[] x T[] y Returns Type Description Boolean Type Parameters Name Description T"
  },
  "api/AlgoSdk.ArrayComparer-1.html": {
    "href": "api/AlgoSdk.ArrayComparer-1.html",
    "title": "Struct ArrayComparer<T> | Unity Algorand SDK",
    "keywords": "Struct ArrayComparer<T> Implements IEqualityComparer <T[]> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ArrayComparer<T> where T : IEquatable<T> Type Parameters Name Description T Fields Instance Declaration public static readonly ArrayComparer<T> Instance Field Value Type Description ArrayComparer <T> Methods Equals(T[], T[]) Declaration public static bool Equals(T[] x, T[] y) Parameters Type Name Description T[] x T[] y Returns Type Description Boolean GetHashCode(T[]) Declaration public static int GetHashCode(T[] obj) Parameters Type Name Description T[] obj Returns Type Description Int32 Implements IEqualityComparer<>"
  },
  "api/AlgoSdk.ArrayComparer-2.html": {
    "href": "api/AlgoSdk.ArrayComparer-2.html",
    "title": "Struct ArrayComparer<T, TComparer> | Unity Algorand SDK",
    "keywords": "Struct ArrayComparer<T, TComparer> Implements IEqualityComparer <T[]> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ArrayComparer<T, TComparer> where TComparer : struct, IEqualityComparer<T> Type Parameters Name Description T TComparer Fields Instance Declaration public static readonly ArrayComparer<T, TComparer> Instance Field Value Type Description ArrayComparer <T, TComparer> Methods Equals(T[], T[]) Declaration public static bool Equals(T[] x, T[] y) Parameters Type Name Description T[] x T[] y Returns Type Description Boolean GetHashCode(T[]) Declaration public static int GetHashCode(T[] obj) Parameters Type Name Description T[] obj Returns Type Description Int32 Implements IEqualityComparer<>"
  },
  "api/AlgoSdk.Asset.html": {
    "href": "api/AlgoSdk.Asset.html",
    "title": "Struct Asset | Unity Algorand SDK",
    "keywords": "Struct Asset Specifies both the unique identifier and the parameters for an asset. Implements IEquatable < Asset > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Asset Fields CreatedAtRound Round during which this asset was created. Declaration public ulong CreatedAtRound Field Value Type Description UInt64 Deleted Whether or not this asset is currently deleted. Declaration public Optional<bool> Deleted Field Value Type Description Optional < Boolean > DestroyedAtRound Round during which this asset was destroyed. Declaration public ulong DestroyedAtRound Field Value Type Description UInt64 Index unique asset identifier Declaration public ulong Index Field Value Type Description UInt64 Params Declaration public AssetParams Params Field Value Type Description AssetParams Methods Equals(Asset) Declaration public bool Equals(Asset other) Parameters Type Name Description Asset other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.AssetConfigTxn.html": {
    "href": "api/AlgoSdk.AssetConfigTxn.html",
    "title": "Struct AssetConfigTxn | Unity Algorand SDK",
    "keywords": "Struct AssetConfigTxn Implements IAssetConfigTxn ITransaction IEquatable < AssetConfigTxn > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AssetConfigTxn : IAssetConfigTxn, ITransaction Properties AssetParams Declaration public AssetParams AssetParams { get; set; } Property Value Type Description AssetParams ConfigAsset Declaration public ulong ConfigAsset { get; set; } Property Value Type Description UInt64 Fee Declaration public ulong Fee { get; set; } Property Value Type Description UInt64 FirstValidRound Declaration public ulong FirstValidRound { get; set; } Property Value Type Description UInt64 GenesisHash Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisId Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes Group Declaration public Sha512_256_Hash Group { get; set; } Property Value Type Description Sha512_256_Hash LastValidRound Declaration public ulong LastValidRound { get; set; } Property Value Type Description UInt64 Lease Declaration public Sha512_256_Hash Lease { get; set; } Property Value Type Description Sha512_256_Hash Note Declaration public byte[] Note { get; set; } Property Value Type Description Byte [] RekeyTo Declaration public Address RekeyTo { get; set; } Property Value Type Description Address Sender Declaration public Address Sender { get; set; } Property Value Type Description Address TransactionType Declaration public TransactionType TransactionType { get; } Property Value Type Description TransactionType Methods CopyFrom(Transaction) Declaration public void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction CopyTo(ref Transaction) Declaration public void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction Equals(AssetConfigTxn) Declaration public bool Equals(AssetConfigTxn other) Parameters Type Name Description AssetConfigTxn other Returns Type Description Boolean Implements IAssetConfigTxn ITransaction IEquatable<>"
  },
  "api/AlgoSdk.AssetConfigTxn.Params.html": {
    "href": "api/AlgoSdk.AssetConfigTxn.Params.html",
    "title": "Struct AssetConfigTxn.Params | Unity Algorand SDK",
    "keywords": "Struct AssetConfigTxn.Params Implements IEquatable < AssetConfigTxn.Params > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Params Fields AssetParams Declaration public AssetParams AssetParams Field Value Type Description AssetParams ConfigAsset Declaration public ulong ConfigAsset Field Value Type Description UInt64 Methods Equals(AssetConfigTxn.Params) Declaration public bool Equals(AssetConfigTxn.Params other) Parameters Type Name Description AssetConfigTxn.Params other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.AssetFreezeTxn.html": {
    "href": "api/AlgoSdk.AssetFreezeTxn.html",
    "title": "Struct AssetFreezeTxn | Unity Algorand SDK",
    "keywords": "Struct AssetFreezeTxn Implements IAssetFreezeTxn ITransaction IEquatable < AssetFreezeTxn > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AssetFreezeTxn : IAssetFreezeTxn, ITransaction Properties AssetFrozen Declaration public Optional<bool> AssetFrozen { get; set; } Property Value Type Description Optional < Boolean > Fee Declaration public ulong Fee { get; set; } Property Value Type Description UInt64 FirstValidRound Declaration public ulong FirstValidRound { get; set; } Property Value Type Description UInt64 FreezeAccount Declaration public Address FreezeAccount { get; set; } Property Value Type Description Address FreezeAsset Declaration public ulong FreezeAsset { get; set; } Property Value Type Description UInt64 GenesisHash Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisId Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes Group Declaration public Sha512_256_Hash Group { get; set; } Property Value Type Description Sha512_256_Hash LastValidRound Declaration public ulong LastValidRound { get; set; } Property Value Type Description UInt64 Lease Declaration public Sha512_256_Hash Lease { get; set; } Property Value Type Description Sha512_256_Hash Note Declaration public byte[] Note { get; set; } Property Value Type Description Byte [] RekeyTo Declaration public Address RekeyTo { get; set; } Property Value Type Description Address Sender Declaration public Address Sender { get; set; } Property Value Type Description Address TransactionType Declaration public TransactionType TransactionType { get; } Property Value Type Description TransactionType Methods CopyFrom(Transaction) Declaration public void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction CopyTo(ref Transaction) Declaration public void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction Equals(AssetFreezeTxn) Declaration public bool Equals(AssetFreezeTxn other) Parameters Type Name Description AssetFreezeTxn other Returns Type Description Boolean Implements IAssetFreezeTxn ITransaction IEquatable<>"
  },
  "api/AlgoSdk.AssetFreezeTxn.Params.html": {
    "href": "api/AlgoSdk.AssetFreezeTxn.Params.html",
    "title": "Struct AssetFreezeTxn.Params | Unity Algorand SDK",
    "keywords": "Struct AssetFreezeTxn.Params Implements IEquatable < AssetFreezeTxn.Params > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Params Fields AssetFrozen Declaration public Optional<bool> AssetFrozen Field Value Type Description Optional < Boolean > FreezeAccount Declaration public Address FreezeAccount Field Value Type Description Address FreezeAsset Declaration public ulong FreezeAsset Field Value Type Description UInt64 Methods Equals(AssetFreezeTxn.Params) Declaration public bool Equals(AssetFreezeTxn.Params other) Parameters Type Name Description AssetFreezeTxn.Params other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.AssetHolding.html": {
    "href": "api/AlgoSdk.AssetHolding.html",
    "title": "Struct AssetHolding | Unity Algorand SDK",
    "keywords": "Struct AssetHolding Describes an asset held by an account. Implements IEquatable < AssetHolding > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AssetHolding Fields Amount number of units held. Declaration public ulong Amount Field Value Type Description UInt64 AssetId Asset ID of the holding. Declaration public ulong AssetId Field Value Type Description UInt64 Creator Address that created this asset. This is the address where the parameters for this asset can be found, and also the address where unwanted asset units can be sent in the worst case. Declaration public Address Creator Field Value Type Description Address Deleted Whether or not the asset holding is currently deleted from its account. Declaration public Optional<bool> Deleted Field Value Type Description Optional < Boolean > IsFrozen whether or not the holding is frozen. Declaration public bool IsFrozen Field Value Type Description Boolean OptedInAtRound Round during which the account opted into this asset holding. Declaration public ulong OptedInAtRound Field Value Type Description UInt64 OptedOutAtRound Round during which the account opted out of this asset holding. Declaration public ulong OptedOutAtRound Field Value Type Description UInt64 Methods Equals(AssetHolding) Declaration public bool Equals(AssetHolding other) Parameters Type Name Description AssetHolding other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.AssetParams.html": {
    "href": "api/AlgoSdk.AssetParams.html",
    "title": "Struct AssetParams | Unity Algorand SDK",
    "keywords": "Struct AssetParams AssetParams specifies the parameters for an asset. [apar] when part of an AssetConfig transaction. Implements IEquatable < AssetParams > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AssetParams Fields Clawback Address of account used to clawback holdings of this asset. If empty, clawback is not permitted. Declaration public Address Clawback Field Value Type Description Address Creator The address that created this asset. This is the address where the parameters for this asset can be found, and also the address where unwanted asset units can be sent in the worst case. Declaration public Address Creator Field Value Type Description Address Decimals The number of digits to use after the decimal point when displaying this asset. If 0, the asset is not divisible. If 1, the base unit of the asset is in tenths. If 2, the base unit of the asset is in hundredths, and so on. This value must be between 0 and 19 (inclusive). Minimum value: 0. Maximum value: 19. Declaration public uint Decimals Field Value Type Description UInt32 DefaultFrozen Whether holdings of this asset are frozen by default. Declaration public bool DefaultFrozen Field Value Type Description Boolean Freeze Address of account used to freeze holdings of this asset. If empty, freezing is not permitted. Declaration public Address Freeze Field Value Type Description Address Manager Address of account used to manage the keys of this asset and to destroy it. Declaration public Address Manager Field Value Type Description Address MetadataHash A commitment to some unspecified asset metadata. The format of this metadata is up to the application. Declaration public Sha512_256_Hash MetadataHash Field Value Type Description Sha512_256_Hash Name Name of this asset, as supplied by the creator. Included only when the asset name is composed of printable utf-8 characters. Declaration public FixedString64Bytes Name Field Value Type Description FixedString64Bytes Reserve Address of account holding reserve (non-minted) units of this asset. Declaration public Address Reserve Field Value Type Description Address Total The total number of units of this asset. Declaration public ulong Total Field Value Type Description UInt64 UnitName Name of a unit of this asset, as supplied by the creator. Included only when the name of a unit of this asset is composed of printable utf-8 characters. Declaration public FixedString32Bytes UnitName Field Value Type Description FixedString32Bytes Url URL where more information about the asset can be retrieved. Included only when the URL is composed of printable utf-8 characters. Declaration public FixedString128Bytes Url Field Value Type Description FixedString128Bytes Properties NameBase64 Base64 encoded name of this asset, as supplied by the creator. Declaration public FixedString64Bytes NameBase64 { get; set; } Property Value Type Description FixedString64Bytes UnitNameBase64 Base64 encoded name of a unit of this asset, as supplied by the creator. Declaration public FixedString32Bytes UnitNameBase64 { get; set; } Property Value Type Description FixedString32Bytes UrlBase64 Base64 encoded URL where more information about the asset can be retrieved. Declaration public FixedString128Bytes UrlBase64 { get; set; } Property Value Type Description FixedString128Bytes Methods Equals(AssetParams) Declaration public bool Equals(AssetParams other) Parameters Type Name Description AssetParams other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.AssetResponse.html": {
    "href": "api/AlgoSdk.AssetResponse.html",
    "title": "Struct AssetResponse | Unity Algorand SDK",
    "keywords": "Struct AssetResponse Implements IEquatable < AssetResponse > IIndexerResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AssetResponse : IIndexerResponse Properties Asset Declaration public Asset Asset { readonly get; set; } Property Value Type Description Asset CurrentRound Declaration public ulong CurrentRound { readonly get; set; } Property Value Type Description UInt64 Methods Equals(AssetResponse) Declaration public bool Equals(AssetResponse other) Parameters Type Name Description AssetResponse other Returns Type Description Boolean Implements IEquatable<> IIndexerResponse"
  },
  "api/AlgoSdk.AssetsResponse.html": {
    "href": "api/AlgoSdk.AssetsResponse.html",
    "title": "Struct AssetsResponse | Unity Algorand SDK",
    "keywords": "Struct AssetsResponse Implements IEquatable < AssetsResponse > IPaginatedResponse IIndexerResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AssetsResponse : IPaginatedResponse, IIndexerResponse Properties Assets Declaration public Asset[] Assets { readonly get; set; } Property Value Type Description Asset [] CurrentRound Declaration public ulong CurrentRound { readonly get; set; } Property Value Type Description UInt64 NextToken Declaration public FixedString128Bytes NextToken { readonly get; set; } Property Value Type Description FixedString128Bytes Methods Equals(AssetsResponse) Declaration public bool Equals(AssetsResponse other) Parameters Type Name Description AssetsResponse other Returns Type Description Boolean Implements IEquatable<> IPaginatedResponse IIndexerResponse"
  },
  "api/AlgoSdk.AssetTransferTxn.html": {
    "href": "api/AlgoSdk.AssetTransferTxn.html",
    "title": "Struct AssetTransferTxn | Unity Algorand SDK",
    "keywords": "Struct AssetTransferTxn Implements IAssetTransferTxn ITransaction IEquatable < AssetTransferTxn > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AssetTransferTxn : IAssetTransferTxn, ITransaction Properties AssetAmount Declaration public ulong AssetAmount { get; set; } Property Value Type Description UInt64 AssetCloseTo Declaration public Address AssetCloseTo { get; set; } Property Value Type Description Address AssetReceiver Declaration public Address AssetReceiver { get; set; } Property Value Type Description Address AssetSender Declaration public Address AssetSender { get; set; } Property Value Type Description Address CloseAmount Declaration public ulong CloseAmount { get; set; } Property Value Type Description UInt64 Fee Declaration public ulong Fee { get; set; } Property Value Type Description UInt64 FirstValidRound Declaration public ulong FirstValidRound { get; set; } Property Value Type Description UInt64 GenesisHash Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisId Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes Group Declaration public Sha512_256_Hash Group { get; set; } Property Value Type Description Sha512_256_Hash LastValidRound Declaration public ulong LastValidRound { get; set; } Property Value Type Description UInt64 Lease Declaration public Sha512_256_Hash Lease { get; set; } Property Value Type Description Sha512_256_Hash Note Declaration public byte[] Note { get; set; } Property Value Type Description Byte [] RekeyTo Declaration public Address RekeyTo { get; set; } Property Value Type Description Address Sender Declaration public Address Sender { get; set; } Property Value Type Description Address TransactionType Declaration public TransactionType TransactionType { get; } Property Value Type Description TransactionType XferAsset Declaration public ulong XferAsset { get; set; } Property Value Type Description UInt64 Methods CopyFrom(Transaction) Declaration public void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction CopyTo(ref Transaction) Declaration public void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction Equals(AssetTransferTxn) Declaration public bool Equals(AssetTransferTxn other) Parameters Type Name Description AssetTransferTxn other Returns Type Description Boolean Implements IAssetTransferTxn ITransaction IEquatable<>"
  },
  "api/AlgoSdk.AssetTransferTxn.Params.html": {
    "href": "api/AlgoSdk.AssetTransferTxn.Params.html",
    "title": "Struct AssetTransferTxn.Params | Unity Algorand SDK",
    "keywords": "Struct AssetTransferTxn.Params Implements IEquatable < AssetTransferTxn.Params > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Params Fields AssetAmount Declaration public ulong AssetAmount Field Value Type Description UInt64 AssetCloseTo Declaration public Address AssetCloseTo Field Value Type Description Address AssetReceiver Declaration public Address AssetReceiver Field Value Type Description Address AssetSender Declaration public Address AssetSender Field Value Type Description Address CloseAmount Declaration public ulong CloseAmount Field Value Type Description UInt64 XferAsset Declaration public ulong XferAsset Field Value Type Description UInt64 Methods Equals(AssetTransferTxn.Params) Declaration public bool Equals(AssetTransferTxn.Params other) Parameters Type Name Description AssetTransferTxn.Params other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.BalancesResponse.html": {
    "href": "api/AlgoSdk.BalancesResponse.html",
    "title": "Struct BalancesResponse | Unity Algorand SDK",
    "keywords": "Struct BalancesResponse Implements IEquatable < BalancesResponse > IPaginatedResponse IIndexerResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct BalancesResponse : IPaginatedResponse, IIndexerResponse Properties Balances Declaration public MiniAssetHolding[] Balances { readonly get; set; } Property Value Type Description MiniAssetHolding [] CurrentRound Declaration public ulong CurrentRound { readonly get; set; } Property Value Type Description UInt64 NextToken Declaration public FixedString128Bytes NextToken { readonly get; set; } Property Value Type Description FixedString128Bytes Methods Equals(BalancesResponse) Declaration public bool Equals(BalancesResponse other) Parameters Type Name Description BalancesResponse other Returns Type Description Boolean Implements IEquatable<> IPaginatedResponse IIndexerResponse"
  },
  "api/AlgoSdk.Base32Encoding.html": {
    "href": "api/AlgoSdk.Base32Encoding.html",
    "title": "Class Base32Encoding | Unity Algorand SDK",
    "keywords": "Class Base32Encoding Inheritance Object Base32Encoding Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class Base32Encoding Fields PaddingCharValue Declaration public static readonly byte PaddingCharValue Field Value Type Description Byte Methods ToBytes(String) Declaration public static byte[] ToBytes(string input) Parameters Type Name Description String input Returns Type Description Byte [] ToBytes<TByteArray, TString>(TString, ref TByteArray) Declaration public static void ToBytes<TByteArray, TString>(TString s, ref TByteArray bytes) where TByteArray : struct, IByteArray where TString : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description TString s TByteArray bytes Type Parameters Name Description TByteArray TString ToString(Byte[]) Declaration public static string ToString(byte[] input) Parameters Type Name Description Byte [] input Returns Type Description String ToString<TByteArray, TString>(TByteArray, ref TString) Declaration public static void ToString<TByteArray, TString>(TByteArray bytes, ref TString s) where TByteArray : struct, IByteArray where TString : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description TByteArray bytes TString s Type Parameters Name Description TByteArray TString TrimPadding<T>(ref T) Declaration public static void TrimPadding<T>(ref T fs) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Type Parameters Name Description T"
  },
  "api/AlgoSdk.Base64Encoding.html": {
    "href": "api/AlgoSdk.Base64Encoding.html",
    "title": "Class Base64Encoding | Unity Algorand SDK",
    "keywords": "Class Base64Encoding Inheritance Object Base64Encoding Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class Base64Encoding Methods Base64ToUtf8<T, U>(ref T, ref U) Declaration public static void Base64ToUtf8<T, U>(this ref T src, ref U tar) where T : struct, IUTF8Bytes, INativeList<byte> where U : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description T src U tar Type Parameters Name Description T U CopyFromBase64<TByteArray, T>(ref TByteArray, T, Int32) Declaration public static void CopyFromBase64<TByteArray, T>(this ref TByteArray bytes, T s, int maxLength = 2147483647) where TByteArray : struct, IArray<byte> where T : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description TByteArray bytes T s Int32 maxLength Type Parameters Name Description TByteArray T CopyToBase64<TBytes, T>(TBytes, ref T) Declaration public static void CopyToBase64<TBytes, T>(this TBytes bytes, ref T s) where TBytes : struct, IArray<byte> where T : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description TBytes bytes T s Type Parameters Name Description TBytes T Utf8ToBase64<T, U>(ref T, ref U) Declaration public static void Utf8ToBase64<T, U>(this ref T src, ref U tar) where T : struct, IUTF8Bytes, INativeList<byte> where U : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description T src U tar Type Parameters Name Description T U"
  },
  "api/AlgoSdk.Block.html": {
    "href": "api/AlgoSdk.Block.html",
    "title": "Struct Block | Unity Algorand SDK",
    "keywords": "Struct Block Block information. Implements IEquatable < Block > IBlockRewards IBlockUpgradeState IBlockUpgradeVote Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Block : IBlockRewards, IBlockUpgradeState, IBlockUpgradeVote Fields Cc Declaration public AlgoApiObject Cc Field Value Type Description AlgoApiObject GenesisHash [gh] hash to which this block belongs. Declaration public GenesisHash GenesisHash Field Value Type Description GenesisHash GenesisId [gen] ID to which this block belongs. Declaration public FixedString64Bytes GenesisId Field Value Type Description FixedString64Bytes PreviousBlockHash [prev] Previous block hash. Declaration public Sha512_256_Hash PreviousBlockHash Field Value Type Description Sha512_256_Hash Rewards See BlockRewards Declaration public BlockRewards Rewards Field Value Type Description BlockRewards RootTransaction [txn] TransactionsRoot authenticates the set of transactions appearing in the block. More specifically, it's the root of a merkle tree whose leaves are the block's Txids, in lexicographic order. For the empty block, it's 0. Note that the TxnRoot does not authenticate the signatures on the transactions, only the transactions themselves. Two blocks with the same transactions but in a different order and with different signatures will have the same TxnRoot. Declaration public Sha512_256_Hash RootTransaction Field Value Type Description Sha512_256_Hash Round [rnd] Current round on which this block was appended to the chain. Declaration public ulong Round Field Value Type Description UInt64 Seed [seed] Sortition seed. Declaration public Sha512_256_Hash Seed Field Value Type Description Sha512_256_Hash Timestamp [ts] Block creation timestamp in seconds since epoch Declaration public ulong Timestamp Field Value Type Description UInt64 TransactionCounter [tc] TxnCounter counts the number of transactions committed in the ledger, from the time at which support for this feature was introduced. Declaration public ulong TransactionCounter Field Value Type Description UInt64 Remarks Specifically, TxnCounter is the number of the next transaction that will be committed after this block. It is 0 when no transactions have ever been committed (since TxnCounter started being supported). Transactions [txns] list of transactions corresponding to a given round. Declaration public BlockTransaction[] Transactions Field Value Type Description BlockTransaction [] UpgradeState See BlockUpgradeState Declaration public BlockUpgradeState UpgradeState Field Value Type Description BlockUpgradeState UpgradeVote See BlockUpgradeVote Declaration public BlockUpgradeVote UpgradeVote Field Value Type Description BlockUpgradeVote Properties CurrentProtocol Declaration public FixedString128Bytes CurrentProtocol { get; set; } Property Value Type Description FixedString128Bytes FeeSink Declaration public Address FeeSink { get; set; } Property Value Type Description Address NextProtocol Declaration public FixedString128Bytes NextProtocol { get; set; } Property Value Type Description FixedString128Bytes NextProtocolApprovals Declaration public ulong NextProtocolApprovals { get; set; } Property Value Type Description UInt64 NextProtocolSwitchOn Declaration public ulong NextProtocolSwitchOn { get; set; } Property Value Type Description UInt64 NextProtocolVoteBefore Declaration public ulong NextProtocolVoteBefore { get; set; } Property Value Type Description UInt64 RewardsCalculationRound Declaration public ulong RewardsCalculationRound { get; set; } Property Value Type Description UInt64 RewardsLevel Declaration public ulong RewardsLevel { get; set; } Property Value Type Description UInt64 RewardsPool Declaration public Address RewardsPool { get; set; } Property Value Type Description Address RewardsRate Declaration public ulong RewardsRate { get; set; } Property Value Type Description UInt64 RewardsResidue Declaration public ulong RewardsResidue { get; set; } Property Value Type Description UInt64 UpgradeApprove Declaration public Optional<bool> UpgradeApprove { get; set; } Property Value Type Description Optional < Boolean > UpgradeDelay Declaration public ulong UpgradeDelay { get; set; } Property Value Type Description UInt64 UpgradePropose Declaration public Address UpgradePropose { get; set; } Property Value Type Description Address Methods Equals(Block) Declaration public bool Equals(Block other) Parameters Type Name Description Block other Returns Type Description Boolean Implements IEquatable<> IBlockRewards IBlockUpgradeState IBlockUpgradeVote"
  },
  "api/AlgoSdk.BlockResponse.html": {
    "href": "api/AlgoSdk.BlockResponse.html",
    "title": "Struct BlockResponse | Unity Algorand SDK",
    "keywords": "Struct BlockResponse A wrapped Block from the GetBlock(UInt64) Implements IEquatable < BlockResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct BlockResponse Fields BlockHeader Block data. Declaration public Block BlockHeader Field Value Type Description Block Cert Block certificate object. Declaration public AlgoApiObject Cert Field Value Type Description AlgoApiObject Methods Equals(BlockResponse) Declaration public bool Equals(BlockResponse other) Parameters Type Name Description BlockResponse other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.BlockRewards.html": {
    "href": "api/AlgoSdk.BlockRewards.html",
    "title": "Struct BlockRewards | Unity Algorand SDK",
    "keywords": "Struct BlockRewards Implements IEquatable < BlockRewards > IBlockRewards Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct BlockRewards : IBlockRewards Properties FeeSink Declaration public Address FeeSink { get; set; } Property Value Type Description Address RewardsCalculationRound Declaration public ulong RewardsCalculationRound { get; set; } Property Value Type Description UInt64 RewardsLevel Declaration public ulong RewardsLevel { get; set; } Property Value Type Description UInt64 RewardsPool Declaration public Address RewardsPool { get; set; } Property Value Type Description Address RewardsRate Declaration public ulong RewardsRate { get; set; } Property Value Type Description UInt64 RewardsResidue Declaration public ulong RewardsResidue { get; set; } Property Value Type Description UInt64 Methods Equals(BlockRewards) Declaration public bool Equals(BlockRewards other) Parameters Type Name Description BlockRewards other Returns Type Description Boolean Implements IEquatable<> IBlockRewards"
  },
  "api/AlgoSdk.BlockTransaction.html": {
    "href": "api/AlgoSdk.BlockTransaction.html",
    "title": "Struct BlockTransaction | Unity Algorand SDK",
    "keywords": "Struct BlockTransaction A transaction found in a BlockResponse from GetBlock(UInt64) . Implements IEquatable < BlockTransaction > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct BlockTransaction Fields Hgi Declaration public Optional<bool> Hgi Field Value Type Description Optional < Boolean > Rr Declaration public ulong Rr Field Value Type Description UInt64 Rs Declaration public ulong Rs Field Value Type Description UInt64 Transaction The transaction. Declaration public Transaction Transaction Field Value Type Description Transaction Properties LogicSig A logic sig if the transaction was signed by one. Declaration public LogicSig LogicSig { get; set; } Property Value Type Description LogicSig Multisig A multisig if the transaction was signed by one. Declaration public Multisig Multisig { get; set; } Property Value Type Description Multisig Sig A crypto sig if the transaction was signed by one. Declaration public Sig Sig { get; set; } Property Value Type Description Sig Methods Equals(BlockTransaction) Declaration public bool Equals(BlockTransaction other) Parameters Type Name Description BlockTransaction other Returns Type Description Boolean Operators Implicit(BlockTransaction to Transaction) Declaration public static implicit operator Transaction(BlockTransaction blockTxn) Parameters Type Name Description BlockTransaction blockTxn Returns Type Description Transaction Implements IEquatable<>"
  },
  "api/AlgoSdk.BlockUpgradeState.html": {
    "href": "api/AlgoSdk.BlockUpgradeState.html",
    "title": "Struct BlockUpgradeState | Unity Algorand SDK",
    "keywords": "Struct BlockUpgradeState Implements IEquatable < BlockUpgradeState > IBlockUpgradeState Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct BlockUpgradeState : IBlockUpgradeState Properties CurrentProtocol Declaration public FixedString128Bytes CurrentProtocol { get; set; } Property Value Type Description FixedString128Bytes NextProtocol Declaration public FixedString128Bytes NextProtocol { get; set; } Property Value Type Description FixedString128Bytes NextProtocolApprovals Declaration public ulong NextProtocolApprovals { get; set; } Property Value Type Description UInt64 NextProtocolSwitchOn Declaration public ulong NextProtocolSwitchOn { get; set; } Property Value Type Description UInt64 NextProtocolVoteBefore Declaration public ulong NextProtocolVoteBefore { get; set; } Property Value Type Description UInt64 Methods Equals(BlockUpgradeState) Declaration public bool Equals(BlockUpgradeState other) Parameters Type Name Description BlockUpgradeState other Returns Type Description Boolean Implements IEquatable<> IBlockUpgradeState"
  },
  "api/AlgoSdk.BlockUpgradeVote.html": {
    "href": "api/AlgoSdk.BlockUpgradeVote.html",
    "title": "Struct BlockUpgradeVote | Unity Algorand SDK",
    "keywords": "Struct BlockUpgradeVote Implements IEquatable < BlockUpgradeVote > IBlockUpgradeVote Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct BlockUpgradeVote : IBlockUpgradeVote Properties UpgradeApprove Declaration public Optional<bool> UpgradeApprove { get; set; } Property Value Type Description Optional < Boolean > UpgradeDelay Declaration public ulong UpgradeDelay { get; set; } Property Value Type Description UInt64 UpgradePropose Declaration public Address UpgradePropose { get; set; } Property Value Type Description Address Methods Equals(BlockUpgradeVote) Declaration public bool Equals(BlockUpgradeVote other) Parameters Type Name Description BlockUpgradeVote other Returns Type Description Boolean Implements IEquatable<> IBlockUpgradeVote"
  },
  "api/AlgoSdk.BuildVersion.html": {
    "href": "api/AlgoSdk.BuildVersion.html",
    "title": "Struct BuildVersion | Unity Algorand SDK",
    "keywords": "Struct BuildVersion Information regarding the algod service's build version. Implements IEquatable < BuildVersion > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct BuildVersion Fields Branch Declaration public FixedString64Bytes Branch Field Value Type Description FixedString64Bytes BuildNumber Declaration public ulong BuildNumber Field Value Type Description UInt64 Channel Declaration public FixedString64Bytes Channel Field Value Type Description FixedString64Bytes CommitHash Declaration public FixedString128Bytes CommitHash Field Value Type Description FixedString128Bytes Major Declaration public ulong Major Field Value Type Description UInt64 Minor Declaration public ulong Minor Field Value Type Description UInt64 Methods Equals(BuildVersion) Declaration public bool Equals(BuildVersion other) Parameters Type Name Description BuildVersion other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.ByteEnumComparer-1.html": {
    "href": "api/AlgoSdk.ByteEnumComparer-1.html",
    "title": "Struct ByteEnumComparer<T> | Unity Algorand SDK",
    "keywords": "Struct ByteEnumComparer<T> Implements IEqualityComparer <T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ByteEnumComparer<T> where T : Enum Type Parameters Name Description T Fields Instance Declaration public static readonly ByteEnumComparer<T> Instance Field Value Type Description ByteEnumComparer <T> Methods Equals(T, T) Declaration public static bool Equals(T x, T y) Parameters Type Name Description T x T y Returns Type Description Boolean GetHashCode(T) Declaration public static int GetHashCode(T obj) Parameters Type Name Description T obj Returns Type Description Int32 Implements IEqualityComparer<>"
  },
  "api/AlgoSdk.CatchupMessage.html": {
    "href": "api/AlgoSdk.CatchupMessage.html",
    "title": "Struct CatchupMessage | Unity Algorand SDK",
    "keywords": "Struct CatchupMessage A response from StartCatchup(String) Implements IEquatable < CatchupMessage > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct CatchupMessage Fields Message Catchup start response string Declaration public FixedString512Bytes Message Field Value Type Description FixedString512Bytes Methods Equals(CatchupMessage) Declaration public bool Equals(CatchupMessage other) Parameters Type Name Description CatchupMessage other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.CompiledTeal.html": {
    "href": "api/AlgoSdk.CompiledTeal.html",
    "title": "Struct CompiledTeal | Unity Algorand SDK",
    "keywords": "Struct CompiledTeal A wrapper class around compiled teal bytes. Implements IEquatable < CompiledTeal > IEquatable < Byte []> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct CompiledTeal Fields Bytes Declaration public byte[] Bytes Field Value Type Description Byte [] Methods Equals(CompiledTeal) Declaration public bool Equals(CompiledTeal other) Parameters Type Name Description CompiledTeal other Returns Type Description Boolean Equals(Byte[]) Declaration public bool Equals(byte[] other) Parameters Type Name Description Byte [] other Returns Type Description Boolean Operators Implicit(CompiledTeal to Byte[]) Declaration public static implicit operator byte[](CompiledTeal compiledTeal) Parameters Type Name Description CompiledTeal compiledTeal Returns Type Description Byte [] Implicit(Byte[] to CompiledTeal) Declaration public static implicit operator CompiledTeal(byte[] bytes) Parameters Type Name Description Byte [] bytes Returns Type Description CompiledTeal Implements IEquatable<> IEquatable<>"
  },
  "api/AlgoSdk.CompiledTealFormatter.html": {
    "href": "api/AlgoSdk.CompiledTealFormatter.html",
    "title": "Class CompiledTealFormatter | Unity Algorand SDK",
    "keywords": "Class CompiledTealFormatter Inheritance Object CompiledTealFormatter Implements IAlgoApiFormatter < CompiledTeal > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public class CompiledTealFormatter : IAlgoApiFormatter<CompiledTeal> Methods Deserialize(ref JsonReader) Declaration public CompiledTeal Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description CompiledTeal Deserialize(ref MessagePackReader) Declaration public CompiledTeal Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description CompiledTeal Serialize(ref JsonWriter, CompiledTeal) Declaration public void Serialize(ref JsonWriter writer, CompiledTeal value) Parameters Type Name Description JsonWriter writer CompiledTeal value Serialize(ref MessagePackWriter, CompiledTeal) Declaration public void Serialize(ref MessagePackWriter writer, CompiledTeal value) Parameters Type Name Description MessagePackWriter writer CompiledTeal value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.ContentType.html": {
    "href": "api/AlgoSdk.ContentType.html",
    "title": "Enum ContentType | Unity Algorand SDK",
    "keywords": "Enum ContentType Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum ContentType : byte Fields Name Description Json MessagePack None PlainText"
  },
  "api/AlgoSdk.ContentTypeExtensions.html": {
    "href": "api/AlgoSdk.ContentTypeExtensions.html",
    "title": "Class ContentTypeExtensions | Unity Algorand SDK",
    "keywords": "Class ContentTypeExtensions Inheritance Object ContentTypeExtensions Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class ContentTypeExtensions Methods ParseRequestContentType(UnityWebRequest) Declaration public static ContentType ParseRequestContentType(this UnityWebRequest uwr) Parameters Type Name Description UnityWebRequest uwr Returns Type Description ContentType ParseResponseContentType(UnityWebRequest) Declaration public static ContentType ParseResponseContentType(this UnityWebRequest uwr) Parameters Type Name Description UnityWebRequest uwr Returns Type Description ContentType ToHeaderValue(ContentType) Declaration public static string ToHeaderValue(this ContentType contentType) Parameters Type Name Description ContentType contentType Returns Type Description String"
  },
  "api/AlgoSdk.CreateWalletRequest.html": {
    "href": "api/AlgoSdk.CreateWalletRequest.html",
    "title": "Struct CreateWalletRequest | Unity Algorand SDK",
    "keywords": "Struct CreateWalletRequest Implements IEquatable < CreateWalletRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct CreateWalletRequest Fields MasterDerivationKey Declaration public PrivateKey MasterDerivationKey Field Value Type Description PrivateKey WalletDriverName Declaration public FixedString128Bytes WalletDriverName Field Value Type Description FixedString128Bytes WalletName Declaration public FixedString128Bytes WalletName Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(CreateWalletRequest) Declaration public bool Equals(CreateWalletRequest other) Parameters Type Name Description CreateWalletRequest other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.CreateWalletResponse.html": {
    "href": "api/AlgoSdk.CreateWalletResponse.html",
    "title": "Struct CreateWalletResponse | Unity Algorand SDK",
    "keywords": "Struct CreateWalletResponse Implements IEquatable < CreateWalletResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct CreateWalletResponse Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String Wallet Declaration public Wallet Wallet Field Value Type Description Wallet Methods Equals(CreateWalletResponse) Declaration public bool Equals(CreateWalletResponse other) Parameters Type Name Description CreateWalletResponse other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.Crypto.Ed25519.html": {
    "href": "api/AlgoSdk.Crypto.Ed25519.html",
    "title": "Class Ed25519 | Unity Algorand SDK",
    "keywords": "Class Ed25519 Inheritance Object Ed25519 Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public static class Ed25519"
  },
  "api/AlgoSdk.Crypto.Ed25519.KeyPair.html": {
    "href": "api/AlgoSdk.Crypto.Ed25519.KeyPair.html",
    "title": "Struct Ed25519.KeyPair | Unity Algorand SDK",
    "keywords": "Struct Ed25519.KeyPair Implements INativeDisposable Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public struct KeyPair Constructors KeyPair(Ed25519.SecretKeyHandle, Ed25519.PublicKey) Declaration public KeyPair(Ed25519.SecretKeyHandle secretKey, Ed25519.PublicKey publicKey) Parameters Type Name Description Ed25519.SecretKeyHandle secretKey Ed25519.PublicKey publicKey Fields PublicKey Declaration public readonly Ed25519.PublicKey PublicKey Field Value Type Description Ed25519.PublicKey SecretKey Declaration public readonly Ed25519.SecretKeyHandle SecretKey Field Value Type Description Ed25519.SecretKeyHandle Methods Deconstruct(out Ed25519.SecretKeyHandle, out Ed25519.PublicKey) Declaration public void Deconstruct(out Ed25519.SecretKeyHandle secretKey, out Ed25519.PublicKey publicKey) Parameters Type Name Description Ed25519.SecretKeyHandle secretKey Ed25519.PublicKey publicKey Dispose() Declaration public void Dispose() Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle Implements INativeDisposable"
  },
  "api/AlgoSdk.Crypto.Ed25519.PublicKey.html": {
    "href": "api/AlgoSdk.Crypto.Ed25519.PublicKey.html",
    "title": "Struct Ed25519.PublicKey | Unity Algorand SDK",
    "keywords": "Struct Ed25519.PublicKey Implements IByteArray IEquatable < Ed25519.PublicKey > Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public struct PublicKey Fields SizeBytes Declaration public const int SizeBytes = 32 Field Value Type Description Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public readonly int Length { get; } Property Value Type Description Int32 Methods Equals(Ed25519.PublicKey) Declaration public bool Equals(Ed25519.PublicKey other) Parameters Type Name Description Ed25519.PublicKey other Returns Type Description Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void * Operators Equality(in Ed25519.PublicKey, in Ed25519.PublicKey) Declaration public static bool operator ==(in Ed25519.PublicKey x, in Ed25519.PublicKey y) Parameters Type Name Description Ed25519.PublicKey x Ed25519.PublicKey y Returns Type Description Boolean Inequality(in Ed25519.PublicKey, in Ed25519.PublicKey) Declaration public static bool operator !=(in Ed25519.PublicKey x, in Ed25519.PublicKey y) Parameters Type Name Description Ed25519.PublicKey x Ed25519.PublicKey y Returns Type Description Boolean Implements IByteArray IEquatable<>"
  },
  "api/AlgoSdk.Crypto.Ed25519.SecretKeyHandle.html": {
    "href": "api/AlgoSdk.Crypto.Ed25519.SecretKeyHandle.html",
    "title": "Struct Ed25519.SecretKeyHandle | Unity Algorand SDK",
    "keywords": "Struct Ed25519.SecretKeyHandle Implements INativeDisposable Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public struct SecretKeyHandle Fields KeySize Declaration public const int KeySize = 64 Field Value Type Description Int32 Properties Ptr Declaration public readonly IntPtr Ptr { get; } Property Value Type Description IntPtr Methods Create() Declaration public static Ed25519.SecretKeyHandle Create() Returns Type Description Ed25519.SecretKeyHandle Dispose() Declaration public void Dispose() Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle Sign<TMessage>(TMessage) Declaration public Ed25519.Signature Sign<TMessage>(TMessage message) where TMessage : IByteArray Parameters Type Name Description TMessage message Returns Type Description Ed25519.Signature Type Parameters Name Description TMessage Operators Implicit(Ed25519.SecretKeyHandle to SecureMemoryHandle) Declaration public static implicit operator SecureMemoryHandle(Ed25519.SecretKeyHandle secretKeyHandle) Parameters Type Name Description Ed25519.SecretKeyHandle secretKeyHandle Returns Type Description SecureMemoryHandle Implicit(SecureMemoryHandle to Ed25519.SecretKeyHandle) Declaration public static implicit operator Ed25519.SecretKeyHandle(SecureMemoryHandle secureMemoryHandle) Parameters Type Name Description SecureMemoryHandle secureMemoryHandle Returns Type Description Ed25519.SecretKeyHandle Implements INativeDisposable"
  },
  "api/AlgoSdk.Crypto.Ed25519.Seed.html": {
    "href": "api/AlgoSdk.Crypto.Ed25519.Seed.html",
    "title": "Struct Ed25519.Seed | Unity Algorand SDK",
    "keywords": "Struct Ed25519.Seed Implements IByteArray IEquatable < Ed25519.Seed > Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public struct Seed Fields Size Declaration public const int Size = 32 Field Value Type Description Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public readonly int Length { get; } Property Value Type Description Int32 Methods Equals(Ed25519.Seed) Declaration public bool Equals(Ed25519.Seed other) Parameters Type Name Description Ed25519.Seed other Returns Type Description Boolean GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void * ToKeyPair() Declaration public Ed25519.KeyPair ToKeyPair() Returns Type Description Ed25519.KeyPair ToPublicKey() Declaration public Ed25519.PublicKey ToPublicKey() Returns Type Description Ed25519.PublicKey Implements IByteArray IEquatable<>"
  },
  "api/AlgoSdk.Crypto.Ed25519.Signature.html": {
    "href": "api/AlgoSdk.Crypto.Ed25519.Signature.html",
    "title": "Struct Ed25519.Signature | Unity Algorand SDK",
    "keywords": "Struct Ed25519.Signature Implements IByteArray IEquatable < Ed25519.Signature > Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public struct Signature Fields SizeBytes Declaration public const int SizeBytes = 64 Field Value Type Description Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public readonly int Length { get; } Property Value Type Description Int32 Methods Equals(Ed25519.Signature) Declaration public bool Equals(Ed25519.Signature other) Parameters Type Name Description Ed25519.Signature other Returns Type Description Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void * Verify<TMessage>(TMessage, Ed25519.PublicKey) Declaration public bool Verify<TMessage>(TMessage message, Ed25519.PublicKey pk) where TMessage : IByteArray Parameters Type Name Description TMessage message Ed25519.PublicKey pk Returns Type Description Boolean Type Parameters Name Description TMessage Operators Equality(in Ed25519.Signature, in Ed25519.Signature) Declaration public static bool operator ==(in Ed25519.Signature x, in Ed25519.Signature y) Parameters Type Name Description Ed25519.Signature x Ed25519.Signature y Returns Type Description Boolean Inequality(in Ed25519.Signature, in Ed25519.Signature) Declaration public static bool operator !=(in Ed25519.Signature x, in Ed25519.Signature y) Parameters Type Name Description Ed25519.Signature x Ed25519.Signature y Returns Type Description Boolean Implements IByteArray IEquatable<>"
  },
  "api/AlgoSdk.Crypto.html": {
    "href": "api/AlgoSdk.Crypto.html",
    "title": "Namespace AlgoSdk.Crypto | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.Crypto Classes Ed25519 Random Sha512 Structs Ed25519.KeyPair Ed25519.PublicKey Ed25519.SecretKeyHandle Ed25519.Seed Ed25519.Signature SecureMemoryHandle Sha512_256_Hash Sha512_Hash"
  },
  "api/AlgoSdk.Crypto.Random.html": {
    "href": "api/AlgoSdk.Crypto.Random.html",
    "title": "Class Random | Unity Algorand SDK",
    "keywords": "Class Random Inheritance Object Random Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public static class Random Methods Bytes<T>() Declaration public static T Bytes<T>() where T : struct Returns Type Description T Type Parameters Name Description T Randomize<T>(T) Declaration public static void Randomize<T>(T bytes) where T : struct, IByteArray Parameters Type Name Description T bytes Type Parameters Name Description T"
  },
  "api/AlgoSdk.Crypto.SecureMemoryHandle.html": {
    "href": "api/AlgoSdk.Crypto.SecureMemoryHandle.html",
    "title": "Struct SecureMemoryHandle | Unity Algorand SDK",
    "keywords": "Struct SecureMemoryHandle Implements INativeDisposable Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public struct SecureMemoryHandle Fields Ptr Declaration public IntPtr Ptr Field Value Type Description IntPtr Properties IsCreated Declaration public readonly bool IsCreated { get; } Property Value Type Description Boolean Methods Create(UIntPtr) Declaration public static SecureMemoryHandle Create(UIntPtr sizeBytes) Parameters Type Name Description UIntPtr sizeBytes Returns Type Description SecureMemoryHandle Dispose() Declaration public void Dispose() Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle Implements INativeDisposable"
  },
  "api/AlgoSdk.Crypto.Sha512.html": {
    "href": "api/AlgoSdk.Crypto.Sha512.html",
    "title": "Class Sha512 | Unity Algorand SDK",
    "keywords": "Class Sha512 Inheritance Object Sha512 Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public static class Sha512 Methods Hash256Truncated(Void*, Int32) Declaration public static Sha512_256_Hash Hash256Truncated(void *ptr, int length) Parameters Type Name Description Void * ptr Int32 length Returns Type Description Sha512_256_Hash Hash256Truncated<TByteArray>(TByteArray) Declaration public static Sha512_256_Hash Hash256Truncated<TByteArray>(TByteArray bytes) where TByteArray : struct, IByteArray Parameters Type Name Description TByteArray bytes Returns Type Description Sha512_256_Hash Type Parameters Name Description TByteArray"
  },
  "api/AlgoSdk.Crypto.Sha512_256_Hash.html": {
    "href": "api/AlgoSdk.Crypto.Sha512_256_Hash.html",
    "title": "Struct Sha512_256_Hash | Unity Algorand SDK",
    "keywords": "Struct Sha512_256_Hash Implements IByteArray IEquatable < Sha512_256_Hash > Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public struct Sha512_256_Hash Fields SizeBytes Declaration public const int SizeBytes = 32 Field Value Type Description Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public readonly int Length { get; } Property Value Type Description Int32 Methods Equals(Sha512_256_Hash) Declaration public bool Equals(Sha512_256_Hash other) Parameters Type Name Description Sha512_256_Hash other Returns Type Description Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void * Operators Equality(in Sha512_256_Hash, in Sha512_256_Hash) Declaration public static bool operator ==(in Sha512_256_Hash x, in Sha512_256_Hash y) Parameters Type Name Description Sha512_256_Hash x Sha512_256_Hash y Returns Type Description Boolean Inequality(in Sha512_256_Hash, in Sha512_256_Hash) Declaration public static bool operator !=(in Sha512_256_Hash x, in Sha512_256_Hash y) Parameters Type Name Description Sha512_256_Hash x Sha512_256_Hash y Returns Type Description Boolean Implements IByteArray IEquatable<>"
  },
  "api/AlgoSdk.Crypto.Sha512_Hash.html": {
    "href": "api/AlgoSdk.Crypto.Sha512_Hash.html",
    "title": "Struct Sha512_Hash | Unity Algorand SDK",
    "keywords": "Struct Sha512_Hash Implements IByteArray IEquatable < Sha512_Hash > Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public struct Sha512_Hash Fields SizeBytes Declaration public const int SizeBytes = 64 Field Value Type Description Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public readonly int Length { get; } Property Value Type Description Int32 Methods Equals(Sha512_Hash) Declaration public bool Equals(Sha512_Hash other) Parameters Type Name Description Sha512_Hash other Returns Type Description Boolean GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void * Implements IByteArray IEquatable<>"
  },
  "api/AlgoSdk.DeleteKeyRequest.html": {
    "href": "api/AlgoSdk.DeleteKeyRequest.html",
    "title": "Struct DeleteKeyRequest | Unity Algorand SDK",
    "keywords": "Struct DeleteKeyRequest Implements IEquatable < DeleteKeyRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct DeleteKeyRequest Fields Address Declaration public Address Address Field Value Type Description Address WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(DeleteKeyRequest) Declaration public bool Equals(DeleteKeyRequest other) Parameters Type Name Description DeleteKeyRequest other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.DeleteMultisigRequest.html": {
    "href": "api/AlgoSdk.DeleteMultisigRequest.html",
    "title": "Struct DeleteMultisigRequest | Unity Algorand SDK",
    "keywords": "Struct DeleteMultisigRequest Implements IEquatable < DeleteMultisigRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct DeleteMultisigRequest Fields Address Declaration public Address Address Field Value Type Description Address WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(DeleteMultisigRequest) Declaration public bool Equals(DeleteMultisigRequest other) Parameters Type Name Description DeleteMultisigRequest other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.DryrunRequest.html": {
    "href": "api/AlgoSdk.DryrunRequest.html",
    "title": "Struct DryrunRequest | Unity Algorand SDK",
    "keywords": "Struct DryrunRequest Request data type for dryrun endpoint. Given the Transactions and simulated ledger state upload, run TEAL scripts and return debugging information. Implements IEquatable < DryrunRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct DryrunRequest Fields Accounts Declaration public AccountInfo[] Accounts Field Value Type Description AccountInfo [] Applications Declaration public Application[] Applications Field Value Type Description Application [] LatestTimestamp LatestTimestamp is available to some TEAL scripts. Defaults to the latest confirmed timestamp this algod is attached to. Declaration public ulong LatestTimestamp Field Value Type Description UInt64 ProtocolVersion ProtocolVersion specifies a specific version string to operate under, otherwise whatever the current protocol of the network this algod is running in. Declaration public FixedString64Bytes ProtocolVersion Field Value Type Description FixedString64Bytes Round Round is available to some TEAL scripts. Defaults to the current round on the network this algod is attached to. Declaration public ulong Round Field Value Type Description UInt64 Sources Declaration public DryrunSource[] Sources Field Value Type Description DryrunSource [] Transactions Declaration public Transaction[] Transactions Field Value Type Description Transaction [] Methods Equals(DryrunRequest) Declaration public bool Equals(DryrunRequest other) Parameters Type Name Description DryrunRequest other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.DryrunResults.html": {
    "href": "api/AlgoSdk.DryrunResults.html",
    "title": "Struct DryrunResults | Unity Algorand SDK",
    "keywords": "Struct DryrunResults Response from TealDryrun(Optional<DryrunRequest>) Implements IEquatable < DryrunResults > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct DryrunResults Fields Error Declaration public string Error Field Value Type Description String ProtocolVersion Protocol version is the protocol version Dryrun was operated under. Declaration public FixedString128Bytes ProtocolVersion Field Value Type Description FixedString128Bytes Txns Declaration public DryrunTxnResult[] Txns Field Value Type Description DryrunTxnResult [] Methods Equals(DryrunResults) Declaration public bool Equals(DryrunResults other) Parameters Type Name Description DryrunResults other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.DryrunSource.html": {
    "href": "api/AlgoSdk.DryrunSource.html",
    "title": "Struct DryrunSource | Unity Algorand SDK",
    "keywords": "Struct DryrunSource DryrunSource is TEAL source text that gets uploaded, compiled, and inserted into transactions or application state. Implements IEquatable < DryrunSource > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct DryrunSource Fields AppIndex Declaration public ulong AppIndex Field Value Type Description UInt64 FieldName FieldName is what kind of sources this is. If lsig then it goes into the LogicSig of the Transaction at TransactionIndex in Transactions . If approv or clearp it goes into the Approval Program or Clear State Program of Application at AppIndex in Applications . Declaration public FixedString32Bytes FieldName Field Value Type Description FixedString32Bytes Source Declaration public string Source Field Value Type Description String TransactionIndex Declaration public ulong TransactionIndex Field Value Type Description UInt64 Methods Equals(DryrunSource) Declaration public bool Equals(DryrunSource other) Parameters Type Name Description DryrunSource other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.DryrunState.html": {
    "href": "api/AlgoSdk.DryrunState.html",
    "title": "Struct DryrunState | Unity Algorand SDK",
    "keywords": "Struct DryrunState Stores the TEAL eval step data Implements IEquatable < DryrunState > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct DryrunState Fields Error Evaluation error if any Declaration public FixedString128Bytes Error Field Value Type Description FixedString128Bytes Line Line number Declaration public ulong Line Field Value Type Description UInt64 ProgramCounter Program counter Declaration public ulong ProgramCounter Field Value Type Description UInt64 Scratch Declaration public TealValue[] Scratch Field Value Type Description TealValue [] Stack Declaration public TealValue[] Stack Field Value Type Description TealValue [] Methods Equals(DryrunState) Declaration public bool Equals(DryrunState other) Parameters Type Name Description DryrunState other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.DryrunTxnResult.html": {
    "href": "api/AlgoSdk.DryrunTxnResult.html",
    "title": "Struct DryrunTxnResult | Unity Algorand SDK",
    "keywords": "Struct DryrunTxnResult DryrunTxnResult contains any LogicSig or ApplicationCall program debug information and state updates from a dryrun. Implements IEquatable < DryrunTxnResult > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct DryrunTxnResult Fields AppCallMessages Declaration public FixedString128Bytes[] AppCallMessages Field Value Type Description FixedString128Bytes [] AppCallTrace Declaration public DryrunState[] AppCallTrace Field Value Type Description DryrunState [] Cost Execution cost of app call transaction Declaration public ulong Cost Field Value Type Description UInt64 Disassembly Disassembled program line by line. Declaration public FixedString128Bytes[] Disassembly Field Value Type Description FixedString128Bytes [] GlobalDelta Declaration public EvalDeltaKeyValue[] GlobalDelta Field Value Type Description EvalDeltaKeyValue [] LocalDeltas Declaration public AccountStateDelta[] LocalDeltas Field Value Type Description AccountStateDelta [] LogicSigMessages Declaration public FixedString128Bytes[] LogicSigMessages Field Value Type Description FixedString128Bytes [] LogicSigTrace Declaration public DryrunState[] LogicSigTrace Field Value Type Description DryrunState [] Methods Equals(DryrunTxnResult) Declaration public bool Equals(DryrunTxnResult other) Parameters Type Name Description DryrunTxnResult other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.Editor.AddressDrawer.html": {
    "href": "api/AlgoSdk.Editor.AddressDrawer.html",
    "title": "Class AddressDrawer | Unity Algorand SDK",
    "keywords": "Class AddressDrawer Inheritance Object BytesTextDrawer BytesTextDrawer < Address > AddressDrawer Inherited Members BytesTextDrawer<Address>.GetString(List<Byte>) BytesTextDrawer<Address>.GetBytes(String) BytesTextDrawer.OnGUI(Rect, SerializedProperty, GUIContent) Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public class AddressDrawer : BytesTextDrawer<Address> Methods GetByteArray(String) Declaration protected override Address GetByteArray(string s) Parameters Type Name Description String s Returns Type Description Address Overrides AlgoSdk.Editor.BytesTextDrawer<AlgoSdk.Address>.GetByteArray(System.String) GetString(Address) Declaration protected override string GetString(Address bytes) Parameters Type Name Description Address bytes Returns Type Description String Overrides AlgoSdk.Editor.BytesTextDrawer<AlgoSdk.Address>.GetString(AlgoSdk.Address)"
  },
  "api/AlgoSdk.Editor.Base32Drawer.html": {
    "href": "api/AlgoSdk.Editor.Base32Drawer.html",
    "title": "Class Base32Drawer | Unity Algorand SDK",
    "keywords": "Class Base32Drawer Inheritance Object BytesTextDrawer Base32Drawer Inherited Members BytesTextDrawer.OnGUI(Rect, SerializedProperty, GUIContent) Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public class Base32Drawer : BytesTextDrawer Methods GetBytes(String) Declaration protected override List<byte> GetBytes(string s) Parameters Type Name Description String s Returns Type Description List < Byte > Overrides BytesTextDrawer.GetBytes(String) GetString(List<Byte>) Declaration protected override string GetString(List<byte> bytes) Parameters Type Name Description List < Byte > bytes Returns Type Description String Overrides BytesTextDrawer.GetString(List<Byte>)"
  },
  "api/AlgoSdk.Editor.Base64Drawer.html": {
    "href": "api/AlgoSdk.Editor.Base64Drawer.html",
    "title": "Class Base64Drawer | Unity Algorand SDK",
    "keywords": "Class Base64Drawer Inheritance Object BytesTextDrawer Base64Drawer Inherited Members BytesTextDrawer.OnGUI(Rect, SerializedProperty, GUIContent) Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public class Base64Drawer : BytesTextDrawer Methods GetBytes(String) Declaration protected override List<byte> GetBytes(string s) Parameters Type Name Description String s Returns Type Description List < Byte > Overrides BytesTextDrawer.GetBytes(String) GetString(List<Byte>) Declaration protected override string GetString(List<byte> bytes) Parameters Type Name Description List < Byte > bytes Returns Type Description String Overrides BytesTextDrawer.GetString(List<Byte>)"
  },
  "api/AlgoSdk.Editor.BytesTextDrawer.html": {
    "href": "api/AlgoSdk.Editor.BytesTextDrawer.html",
    "title": "Class BytesTextDrawer | Unity Algorand SDK",
    "keywords": "Class BytesTextDrawer Inheritance Object BytesTextDrawer Base32Drawer Base64Drawer BytesTextDrawer<T> MnemonicDrawer Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public abstract class BytesTextDrawer : PropertyDrawer Methods GetBytes(String) Declaration protected abstract List<byte> GetBytes(string s) Parameters Type Name Description String s Returns Type Description List < Byte > GetString(List<Byte>) Declaration protected abstract string GetString(List<byte> bytes) Parameters Type Name Description List < Byte > bytes Returns Type Description String OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/AlgoSdk.Editor.BytesTextDrawer-1.html": {
    "href": "api/AlgoSdk.Editor.BytesTextDrawer-1.html",
    "title": "Class BytesTextDrawer<T> | Unity Algorand SDK",
    "keywords": "Class BytesTextDrawer<T> Inheritance Object BytesTextDrawer BytesTextDrawer<T> AddressDrawer PrivateKeyDrawer Inherited Members BytesTextDrawer.OnGUI(Rect, SerializedProperty, GUIContent) Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public abstract class BytesTextDrawer<T> : BytesTextDrawer where T : struct, IByteArray Type Parameters Name Description T Methods GetByteArray(String) Declaration protected abstract T GetByteArray(string s) Parameters Type Name Description String s Returns Type Description T GetBytes(String) Declaration protected override List<byte> GetBytes(string s) Parameters Type Name Description String s Returns Type Description List < Byte > Overrides BytesTextDrawer.GetBytes(String) GetString(T) Declaration protected abstract string GetString(T bytes) Parameters Type Name Description T bytes Returns Type Description String GetString(List<Byte>) Declaration protected override string GetString(List<byte> bytes) Parameters Type Name Description List < Byte > bytes Returns Type Description String Overrides BytesTextDrawer.GetString(List<Byte>)"
  },
  "api/AlgoSdk.Editor.CompiledTealDrawer.html": {
    "href": "api/AlgoSdk.Editor.CompiledTealDrawer.html",
    "title": "Class CompiledTealDrawer | Unity Algorand SDK",
    "keywords": "Class CompiledTealDrawer Inheritance Object CompiledTealDrawer Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public class CompiledTealDrawer : PropertyDrawer Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/AlgoSdk.Editor.FixedStringDrawer.html": {
    "href": "api/AlgoSdk.Editor.FixedStringDrawer.html",
    "title": "Class FixedStringDrawer | Unity Algorand SDK",
    "keywords": "Class FixedStringDrawer Inheritance Object FixedStringDrawer Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public class FixedStringDrawer : PropertyDrawer Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/AlgoSdk.Editor.html": {
    "href": "api/AlgoSdk.Editor.html",
    "title": "Namespace AlgoSdk.Editor | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.Editor Classes AddressDrawer Base32Drawer Base64Drawer BytesTextDrawer BytesTextDrawer<T> CompiledTealDrawer FixedStringDrawer MnemonicDrawer PrivateKeyDrawer SerializedBytes"
  },
  "api/AlgoSdk.Editor.MnemonicDrawer.html": {
    "href": "api/AlgoSdk.Editor.MnemonicDrawer.html",
    "title": "Class MnemonicDrawer | Unity Algorand SDK",
    "keywords": "Class MnemonicDrawer Inheritance Object BytesTextDrawer MnemonicDrawer Inherited Members BytesTextDrawer.OnGUI(Rect, SerializedProperty, GUIContent) Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public class MnemonicDrawer : BytesTextDrawer Methods GetBytes(String) Declaration protected override List<byte> GetBytes(string s) Parameters Type Name Description String s Returns Type Description List < Byte > Overrides BytesTextDrawer.GetBytes(String) GetString(List<Byte>) Declaration protected override string GetString(List<byte> bytes) Parameters Type Name Description List < Byte > bytes Returns Type Description String Overrides BytesTextDrawer.GetString(List<Byte>)"
  },
  "api/AlgoSdk.Editor.PrivateKeyDrawer.html": {
    "href": "api/AlgoSdk.Editor.PrivateKeyDrawer.html",
    "title": "Class PrivateKeyDrawer | Unity Algorand SDK",
    "keywords": "Class PrivateKeyDrawer Inheritance Object BytesTextDrawer BytesTextDrawer < PrivateKey > PrivateKeyDrawer Inherited Members BytesTextDrawer<PrivateKey>.GetString(List<Byte>) BytesTextDrawer<PrivateKey>.GetBytes(String) BytesTextDrawer.OnGUI(Rect, SerializedProperty, GUIContent) Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public class PrivateKeyDrawer : BytesTextDrawer<PrivateKey> Methods GetByteArray(String) Declaration protected override PrivateKey GetByteArray(string s) Parameters Type Name Description String s Returns Type Description PrivateKey Overrides AlgoSdk.Editor.BytesTextDrawer<AlgoSdk.PrivateKey>.GetByteArray(System.String) GetString(PrivateKey) Declaration protected override string GetString(PrivateKey bytes) Parameters Type Name Description PrivateKey bytes Returns Type Description String Overrides AlgoSdk.Editor.BytesTextDrawer<AlgoSdk.PrivateKey>.GetString(AlgoSdk.PrivateKey)"
  },
  "api/AlgoSdk.Editor.SerializedBytes.html": {
    "href": "api/AlgoSdk.Editor.SerializedBytes.html",
    "title": "Class SerializedBytes | Unity Algorand SDK",
    "keywords": "Class SerializedBytes Inheritance Object SerializedBytes Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public class SerializedBytes Constructors SerializedBytes(SerializedProperty) Declaration public SerializedBytes(SerializedProperty root) Parameters Type Name Description SerializedProperty root Methods GetBytes() Declaration public List<byte> GetBytes() Returns Type Description List < Byte > SetBytes(List<Byte>) Declaration public void SetBytes(List<byte> bytes) Parameters Type Name Description List < Byte > bytes"
  },
  "api/AlgoSdk.Either-2.html": {
    "href": "api/AlgoSdk.Either-2.html",
    "title": "Struct Either<T, U> | Unity Algorand SDK",
    "keywords": "Struct Either<T, U> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Either<T, U> Type Parameters Name Description T U Constructors Either(T) Declaration public Either(T value) Parameters Type Name Description T value Either(U) Declaration public Either(U value) Parameters Type Name Description U value Properties IsValue1 Declaration public bool IsValue1 { readonly get; } Property Value Type Description Boolean IsValue2 Declaration public bool IsValue2 { readonly get; } Property Value Type Description Boolean Value1 Declaration public T Value1 { readonly get; } Property Value Type Description T Value2 Declaration public U Value2 { readonly get; } Property Value Type Description U Methods Deconstruct(out T, out U) Declaration public void Deconstruct(out T value1, out U value2) Parameters Type Name Description T value1 U value2 TryGetValue1(out T) Declaration public bool TryGetValue1(out T value) Parameters Type Name Description T value Returns Type Description Boolean TryGetValue2(out U) Declaration public bool TryGetValue2(out U value) Parameters Type Name Description U value Returns Type Description Boolean Operators Implicit(T to Either<T, U>) Declaration public static implicit operator Either<T, U>(T value1) Parameters Type Name Description T value1 Returns Type Description Either <T, U> Implicit(U to Either<T, U>) Declaration public static implicit operator Either<T, U>(U value2) Parameters Type Name Description U value2 Returns Type Description Either <T, U> Implicit(Either<T, U> to Either<U, T>) Declaration public static implicit operator Either<U, T>(Either<T, U> either) Parameters Type Name Description Either <T, U> either Returns Type Description Either <U, T>"
  },
  "api/AlgoSdk.EitherFormatter-2.html": {
    "href": "api/AlgoSdk.EitherFormatter-2.html",
    "title": "Class EitherFormatter<T, U> | Unity Algorand SDK",
    "keywords": "Class EitherFormatter<T, U> Inheritance Object EitherFormatter<T, U> Implements IAlgoApiFormatter < Either <T, U>> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public sealed class EitherFormatter<T, U> : IAlgoApiFormatter<Either<T, U>> Type Parameters Name Description T U Methods Deserialize(ref JsonReader) Declaration public Either<T, U> Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Either <T, U> Deserialize(ref MessagePackReader) Declaration public Either<T, U> Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Either <T, U> Serialize(ref JsonWriter, Either<T, U>) Declaration public void Serialize(ref JsonWriter writer, Either<T, U> value) Parameters Type Name Description JsonWriter writer Either <T, U> value Serialize(ref MessagePackWriter, Either<T, U>) Declaration public void Serialize(ref MessagePackWriter writer, Either<T, U> value) Parameters Type Name Description MessagePackWriter writer Either <T, U> value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Endianness.html": {
    "href": "api/AlgoSdk.Endianness.html",
    "title": "Class Endianness | Unity Algorand SDK",
    "keywords": "Class Endianness Inheritance Object Endianness Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class Endianness Methods ToBytesBigEndian(UInt64, Allocator) Declaration public static NativeArray<byte> ToBytesBigEndian(this ulong value, Allocator allocator) Parameters Type Name Description UInt64 value Allocator allocator Returns Type Description NativeArray < Byte >"
  },
  "api/AlgoSdk.ErrorResponse.html": {
    "href": "api/AlgoSdk.ErrorResponse.html",
    "title": "Struct ErrorResponse | Unity Algorand SDK",
    "keywords": "Struct ErrorResponse An error response from algorand APIs with optional data field. Implements IEquatable < ErrorResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ErrorResponse Fields Code HTTP response code Declaration public long Code Field Value Type Description Int64 Data Declaration public string Data Field Value Type Description String Message Declaration public string Message Field Value Type Description String Properties IsError Declaration public readonly bool IsError { get; } Property Value Type Description Boolean Methods Equals(ErrorResponse) Declaration public bool Equals(ErrorResponse other) Parameters Type Name Description ErrorResponse other Returns Type Description Boolean ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() WithCode(Int64) Declaration public ErrorResponse WithCode(long code) Parameters Type Name Description Int64 code Returns Type Description ErrorResponse Operators Implicit(ErrorResponse to Boolean) Declaration public static implicit operator bool (ErrorResponse error) Parameters Type Name Description ErrorResponse error Returns Type Description Boolean Implicit(ErrorResponse to String) Declaration public static implicit operator string (ErrorResponse error) Parameters Type Name Description ErrorResponse error Returns Type Description String Implements IEquatable<>"
  },
  "api/AlgoSdk.EvalDelta.html": {
    "href": "api/AlgoSdk.EvalDelta.html",
    "title": "Struct EvalDelta | Unity Algorand SDK",
    "keywords": "Struct EvalDelta Represents a TEAL value delta. Implements IEquatable < EvalDelta > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct EvalDelta Fields Action Declaration public EvalDeltaAction Action Field Value Type Description EvalDeltaAction Bytes Declaration public TealBytes Bytes Field Value Type Description TealBytes UInt Declaration public ulong UInt Field Value Type Description UInt64 Methods Equals(EvalDelta) Declaration public bool Equals(EvalDelta other) Parameters Type Name Description EvalDelta other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.EvalDeltaAction.html": {
    "href": "api/AlgoSdk.EvalDeltaAction.html",
    "title": "Enum EvalDeltaAction | Unity Algorand SDK",
    "keywords": "Enum EvalDeltaAction Represents the action on the value Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum EvalDeltaAction : byte Fields Name Description Delete None SetBytes SetUInt"
  },
  "api/AlgoSdk.EvalDeltaKeyValue.html": {
    "href": "api/AlgoSdk.EvalDeltaKeyValue.html",
    "title": "Struct EvalDeltaKeyValue | Unity Algorand SDK",
    "keywords": "Struct EvalDeltaKeyValue EvalDeltaKeyValue Implements IEquatable < EvalDeltaKeyValue > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct EvalDeltaKeyValue Fields Key Declaration public FixedString64Bytes Key Field Value Type Description FixedString64Bytes Value Declaration public EvalDelta Value Field Value Type Description EvalDelta Methods Equals(EvalDeltaKeyValue) Declaration public bool Equals(EvalDeltaKeyValue other) Parameters Type Name Description EvalDeltaKeyValue other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.ExportKeyRequest.html": {
    "href": "api/AlgoSdk.ExportKeyRequest.html",
    "title": "Struct ExportKeyRequest | Unity Algorand SDK",
    "keywords": "Struct ExportKeyRequest Implements IEquatable < ExportKeyRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ExportKeyRequest Fields Address Declaration public Address Address Field Value Type Description Address WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(ExportKeyRequest) Declaration public bool Equals(ExportKeyRequest other) Parameters Type Name Description ExportKeyRequest other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.ExportKeyResponse.html": {
    "href": "api/AlgoSdk.ExportKeyResponse.html",
    "title": "Struct ExportKeyResponse | Unity Algorand SDK",
    "keywords": "Struct ExportKeyResponse Implements IEquatable < ExportKeyResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ExportKeyResponse Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String PrivateKey Declaration public PrivateKey PrivateKey Field Value Type Description PrivateKey Methods Equals(ExportKeyResponse) Declaration public bool Equals(ExportKeyResponse other) Parameters Type Name Description ExportKeyResponse other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.ExportMasterKeyRequest.html": {
    "href": "api/AlgoSdk.ExportMasterKeyRequest.html",
    "title": "Struct ExportMasterKeyRequest | Unity Algorand SDK",
    "keywords": "Struct ExportMasterKeyRequest Implements IEquatable < ExportMasterKeyRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ExportMasterKeyRequest Fields WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(ExportMasterKeyRequest) Declaration public bool Equals(ExportMasterKeyRequest other) Parameters Type Name Description ExportMasterKeyRequest other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.ExportMasterKeyResponse.html": {
    "href": "api/AlgoSdk.ExportMasterKeyResponse.html",
    "title": "Struct ExportMasterKeyResponse | Unity Algorand SDK",
    "keywords": "Struct ExportMasterKeyResponse Implements IEquatable < ExportMasterKeyResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ExportMasterKeyResponse Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > MasterDerivationKey Declaration public PrivateKey MasterDerivationKey Field Value Type Description PrivateKey Message Declaration public string Message Field Value Type Description String Methods Equals(ExportMasterKeyResponse) Declaration public bool Equals(ExportMasterKeyResponse other) Parameters Type Name Description ExportMasterKeyResponse other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.ExportMultisigRequest.html": {
    "href": "api/AlgoSdk.ExportMultisigRequest.html",
    "title": "Struct ExportMultisigRequest | Unity Algorand SDK",
    "keywords": "Struct ExportMultisigRequest Implements IEquatable < ExportMultisigRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ExportMultisigRequest Fields Address Declaration public Address Address Field Value Type Description Address WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(ExportMultisigRequest) Declaration public bool Equals(ExportMultisigRequest other) Parameters Type Name Description ExportMultisigRequest other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.ExportMultisigResponse.html": {
    "href": "api/AlgoSdk.ExportMultisigResponse.html",
    "title": "Struct ExportMultisigResponse | Unity Algorand SDK",
    "keywords": "Struct ExportMultisigResponse Implements IEquatable < ExportMultisigResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ExportMultisigResponse Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String MultisigVersion Declaration public byte MultisigVersion Field Value Type Description Byte Pks Declaration public Ed25519.PublicKey[] Pks Field Value Type Description Ed25519.PublicKey [] Threshold Declaration public byte Threshold Field Value Type Description Byte Methods Equals(ExportMultisigResponse) Declaration public bool Equals(ExportMultisigResponse other) Parameters Type Name Description ExportMultisigResponse other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.Formatters.AddressFormatter.html": {
    "href": "api/AlgoSdk.Formatters.AddressFormatter.html",
    "title": "Class AddressFormatter | Unity Algorand SDK",
    "keywords": "Class AddressFormatter Inheritance Object AddressFormatter Implements IAlgoApiFormatter < Address > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class AddressFormatter : IAlgoApiFormatter<Address> Methods Deserialize(ref JsonReader) Declaration public Address Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Address Deserialize(ref MessagePackReader) Declaration public Address Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Address Serialize(ref JsonWriter, Address) Declaration public void Serialize(ref JsonWriter writer, Address value) Parameters Type Name Description JsonWriter writer Address value Serialize(ref MessagePackWriter, Address) Declaration public void Serialize(ref MessagePackWriter writer, Address value) Parameters Type Name Description MessagePackWriter writer Address value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.AddressRoleFormatter.html": {
    "href": "api/AlgoSdk.Formatters.AddressRoleFormatter.html",
    "title": "Class AddressRoleFormatter | Unity Algorand SDK",
    "keywords": "Class AddressRoleFormatter Inheritance Object KeywordByteEnumFormatter < AddressRole > AddressRoleFormatter Implements IAlgoApiFormatter < AddressRole > Inherited Members KeywordByteEnumFormatter<AddressRole>.Deserialize(JsonReader) KeywordByteEnumFormatter<AddressRole>.Deserialize(MessagePackReader) KeywordByteEnumFormatter<AddressRole>.Serialize(JsonWriter, AddressRole) KeywordByteEnumFormatter<AddressRole>.Serialize(MessagePackWriter, AddressRole) Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class AddressRoleFormatter : KeywordByteEnumFormatter<AddressRole>, IAlgoApiFormatter<AddressRole> Constructors AddressRoleFormatter() Declaration public AddressRoleFormatter() Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.ArrayFormatter-1.html": {
    "href": "api/AlgoSdk.Formatters.ArrayFormatter-1.html",
    "title": "Class ArrayFormatter<T> | Unity Algorand SDK",
    "keywords": "Class ArrayFormatter<T> Inheritance Object ArrayFormatter<T> Implements IAlgoApiFormatter <T[]> Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class ArrayFormatter<T> : IAlgoApiFormatter<T[]> Type Parameters Name Description T Fields Instance Declaration public static ArrayFormatter<T> Instance Field Value Type Description ArrayFormatter <T> Methods Deserialize(ref JsonReader) Declaration public T[] Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T[] Deserialize(ref MessagePackReader) Declaration public T[] Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T[] Serialize(ref JsonWriter, T[]) Declaration public void Serialize(ref JsonWriter writer, T[] value) Parameters Type Name Description JsonWriter writer T[] value Serialize(ref MessagePackWriter, T[]) Declaration public void Serialize(ref MessagePackWriter writer, T[] value) Parameters Type Name Description MessagePackWriter writer T[] value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.BoolFormatter.html": {
    "href": "api/AlgoSdk.Formatters.BoolFormatter.html",
    "title": "Class BoolFormatter | Unity Algorand SDK",
    "keywords": "Class BoolFormatter Inheritance Object BoolFormatter Implements IAlgoApiFormatter < Boolean > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class BoolFormatter : IAlgoApiFormatter<bool> Methods Deserialize(ref JsonReader) Declaration public bool Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Boolean Deserialize(ref MessagePackReader) Declaration public bool Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Boolean Serialize(ref JsonWriter, Boolean) Declaration public void Serialize(ref JsonWriter writer, bool value) Parameters Type Name Description JsonWriter writer Boolean value Serialize(ref MessagePackWriter, Boolean) Declaration public void Serialize(ref MessagePackWriter writer, bool value) Parameters Type Name Description MessagePackWriter writer Boolean value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.ByteArrayFormatter.html": {
    "href": "api/AlgoSdk.Formatters.ByteArrayFormatter.html",
    "title": "Class ByteArrayFormatter | Unity Algorand SDK",
    "keywords": "Class ByteArrayFormatter Inheritance Object ByteArrayFormatter Implements IAlgoApiFormatter < Byte []> Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class ByteArrayFormatter : IAlgoApiFormatter<byte[]> Methods Deserialize(ref JsonReader) Declaration public byte[] Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Byte [] Deserialize(ref MessagePackReader) Declaration public byte[] Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Byte [] Serialize(ref JsonWriter, Byte[]) Declaration public void Serialize(ref JsonWriter writer, byte[] value) Parameters Type Name Description JsonWriter writer Byte [] value Serialize(ref MessagePackWriter, Byte[]) Declaration public void Serialize(ref MessagePackWriter writer, byte[] value) Parameters Type Name Description MessagePackWriter writer Byte [] value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.ByteArrayFormatter-1.html": {
    "href": "api/AlgoSdk.Formatters.ByteArrayFormatter-1.html",
    "title": "Class ByteArrayFormatter<TByteArray> | Unity Algorand SDK",
    "keywords": "Class ByteArrayFormatter<TByteArray> Inheritance Object ByteArrayFormatter<TByteArray> Implements IAlgoApiFormatter <TByteArray> Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class ByteArrayFormatter<TByteArray> : IAlgoApiFormatter<TByteArray> where TByteArray : struct, IByteArray Type Parameters Name Description TByteArray Fields Instance Declaration public static ByteArrayFormatter<TByteArray> Instance Field Value Type Description ByteArrayFormatter <TByteArray> Methods Deserialize(ref JsonReader) Declaration public TByteArray Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description TByteArray Deserialize(ref MessagePackReader) Declaration public TByteArray Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description TByteArray Serialize(ref JsonWriter, TByteArray) Declaration public void Serialize(ref JsonWriter writer, TByteArray value) Parameters Type Name Description JsonWriter writer TByteArray value Serialize(ref MessagePackWriter, TByteArray) Declaration public void Serialize(ref MessagePackWriter writer, TByteArray value) Parameters Type Name Description MessagePackWriter writer TByteArray value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.ByteEnumFormatter-1.html": {
    "href": "api/AlgoSdk.Formatters.ByteEnumFormatter-1.html",
    "title": "Class ByteEnumFormatter<T> | Unity Algorand SDK",
    "keywords": "Class ByteEnumFormatter<T> Inheritance Object ByteEnumFormatter<T> Implements IAlgoApiFormatter <T> Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public sealed class ByteEnumFormatter<T> : IAlgoApiFormatter<T> where T : Enum Type Parameters Name Description T Methods Deserialize(ref JsonReader) Declaration public T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration public T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Serialize(ref JsonWriter, T) Declaration public void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref MessagePackWriter, T) Declaration public void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.ErrorResponseFormatter.html": {
    "href": "api/AlgoSdk.Formatters.ErrorResponseFormatter.html",
    "title": "Class ErrorResponseFormatter | Unity Algorand SDK",
    "keywords": "Class ErrorResponseFormatter Inheritance Object ErrorResponseFormatter Implements IAlgoApiFormatter < ErrorResponse > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class ErrorResponseFormatter : IAlgoApiFormatter<ErrorResponse> Methods Deserialize(ref JsonReader) Declaration public ErrorResponse Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description ErrorResponse Deserialize(ref MessagePackReader) Declaration public ErrorResponse Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description ErrorResponse Serialize(ref JsonWriter, ErrorResponse) Declaration public void Serialize(ref JsonWriter writer, ErrorResponse value) Parameters Type Name Description JsonWriter writer ErrorResponse value Serialize(ref MessagePackWriter, ErrorResponse) Declaration public void Serialize(ref MessagePackWriter writer, ErrorResponse value) Parameters Type Name Description MessagePackWriter writer ErrorResponse value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.FixedBytesArray-1.html": {
    "href": "api/AlgoSdk.Formatters.FixedBytesArray-1.html",
    "title": "Struct FixedBytesArray<T> | Unity Algorand SDK",
    "keywords": "Struct FixedBytesArray<T> Implements IArray < Byte > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public struct FixedBytesArray<T> where T : struct, INativeList<byte> Type Parameters Name Description T Constructors FixedBytesArray(T) Declaration public FixedBytesArray(T bytes) Parameters Type Name Description T bytes Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public int Length { get; set; } Property Value Type Description Int32 Operators Implicit(T to FixedBytesArray<T>) Declaration public static implicit operator FixedBytesArray<T>(T bytes) Parameters Type Name Description T bytes Returns Type Description FixedBytesArray <T> Implicit(FixedBytesArray<T> to T) Declaration public static implicit operator T(FixedBytesArray<T> fixedBytesArray) Parameters Type Name Description FixedBytesArray <T> fixedBytesArray Returns Type Description T Implements IArray<>"
  },
  "api/AlgoSdk.Formatters.FixedBytesFormatter-1.html": {
    "href": "api/AlgoSdk.Formatters.FixedBytesFormatter-1.html",
    "title": "Class FixedBytesFormatter<T> | Unity Algorand SDK",
    "keywords": "Class FixedBytesFormatter<T> Inheritance Object FixedBytesFormatter<T> Implements IAlgoApiFormatter <T> Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class FixedBytesFormatter<T> : IAlgoApiFormatter<T> where T : struct, INativeList<byte> Type Parameters Name Description T Methods Deserialize(ref JsonReader) Declaration public T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration public T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Serialize(ref JsonWriter, T) Declaration public void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref MessagePackWriter, T) Declaration public void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.FixedStringFormatter-1.html": {
    "href": "api/AlgoSdk.Formatters.FixedStringFormatter-1.html",
    "title": "Class FixedStringFormatter<T> | Unity Algorand SDK",
    "keywords": "Class FixedStringFormatter<T> Inheritance Object FixedStringFormatter<T> Implements IAlgoApiFormatter <T> Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public sealed class FixedStringFormatter<T> : IAlgoApiFormatter<T> where T : struct, IUTF8Bytes, INativeList<byte> Type Parameters Name Description T Methods Deserialize(ref JsonReader) Declaration public T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration public T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Serialize(ref JsonWriter, T) Declaration public void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref MessagePackWriter, T) Declaration public void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.GenesisHashFormatter.html": {
    "href": "api/AlgoSdk.Formatters.GenesisHashFormatter.html",
    "title": "Class GenesisHashFormatter | Unity Algorand SDK",
    "keywords": "Class GenesisHashFormatter Inheritance Object GenesisHashFormatter Implements IAlgoApiFormatter < GenesisHash > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public sealed class GenesisHashFormatter : IAlgoApiFormatter<GenesisHash> Methods Deserialize(ref JsonReader) Declaration public GenesisHash Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description GenesisHash Deserialize(ref MessagePackReader) Declaration public GenesisHash Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description GenesisHash Serialize(ref JsonWriter, GenesisHash) Declaration public void Serialize(ref JsonWriter writer, GenesisHash value) Parameters Type Name Description JsonWriter writer GenesisHash value Serialize(ref MessagePackWriter, GenesisHash) Declaration public void Serialize(ref MessagePackWriter writer, GenesisHash value) Parameters Type Name Description MessagePackWriter writer GenesisHash value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.HexFormatter.html": {
    "href": "api/AlgoSdk.Formatters.HexFormatter.html",
    "title": "Class HexFormatter | Unity Algorand SDK",
    "keywords": "Class HexFormatter Inheritance Object HexFormatter Implements IAlgoApiFormatter < Hex > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public sealed class HexFormatter : IAlgoApiFormatter<Hex> Methods Deserialize(ref JsonReader) Declaration public Hex Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Hex Deserialize(ref MessagePackReader) Declaration public Hex Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Hex Serialize(ref JsonWriter, Hex) Declaration public void Serialize(ref JsonWriter writer, Hex value) Parameters Type Name Description JsonWriter writer Hex value Serialize(ref MessagePackWriter, Hex) Declaration public void Serialize(ref MessagePackWriter writer, Hex value) Parameters Type Name Description MessagePackWriter writer Hex value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.html": {
    "href": "api/AlgoSdk.Formatters.html",
    "title": "Namespace AlgoSdk.Formatters | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.Formatters Classes AddressFormatter AddressRoleFormatter ArrayFormatter<T> BoolFormatter ByteArrayFormatter ByteArrayFormatter<TByteArray> ByteEnumFormatter<T> ErrorResponseFormatter FixedBytesFormatter<T> FixedStringFormatter<T> GenesisHashFormatter HexFormatter Int16Formatter Int32Formatter Int64Formatter Int8Formatter KeywordByteEnumFormatter<T> OnCompletionFormatter OptionalFormatter<T> PrivateKeyFormatter SignatureTypeFormatter SignedTransactionFormatter SignedTransactionFormatter<TTransaction> StringFormatter TransactionIdFormatter TransactionTypeFormatter UInt16Formatter UInt32Formatter UInt64Formatter UInt8Formatter Structs FixedBytesArray<T>"
  },
  "api/AlgoSdk.Formatters.Int16Formatter.html": {
    "href": "api/AlgoSdk.Formatters.Int16Formatter.html",
    "title": "Class Int16Formatter | Unity Algorand SDK",
    "keywords": "Class Int16Formatter Inheritance Object Int16Formatter Implements IAlgoApiFormatter < Int16 > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class Int16Formatter : IAlgoApiFormatter<short> Methods Deserialize(ref JsonReader) Declaration public short Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Int16 Deserialize(ref MessagePackReader) Declaration public short Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Int16 Serialize(ref JsonWriter, Int16) Declaration public void Serialize(ref JsonWriter writer, short value) Parameters Type Name Description JsonWriter writer Int16 value Serialize(ref MessagePackWriter, Int16) Declaration public void Serialize(ref MessagePackWriter writer, short value) Parameters Type Name Description MessagePackWriter writer Int16 value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.Int32Formatter.html": {
    "href": "api/AlgoSdk.Formatters.Int32Formatter.html",
    "title": "Class Int32Formatter | Unity Algorand SDK",
    "keywords": "Class Int32Formatter Inheritance Object Int32Formatter Implements IAlgoApiFormatter < Int32 > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class Int32Formatter : IAlgoApiFormatter<int> Methods Deserialize(ref JsonReader) Declaration public int Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Int32 Deserialize(ref MessagePackReader) Declaration public int Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Int32 Serialize(ref JsonWriter, Int32) Declaration public void Serialize(ref JsonWriter writer, int value) Parameters Type Name Description JsonWriter writer Int32 value Serialize(ref MessagePackWriter, Int32) Declaration public void Serialize(ref MessagePackWriter writer, int value) Parameters Type Name Description MessagePackWriter writer Int32 value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.Int64Formatter.html": {
    "href": "api/AlgoSdk.Formatters.Int64Formatter.html",
    "title": "Class Int64Formatter | Unity Algorand SDK",
    "keywords": "Class Int64Formatter Inheritance Object Int64Formatter Implements IAlgoApiFormatter < Int64 > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class Int64Formatter : IAlgoApiFormatter<long> Methods Deserialize(ref JsonReader) Declaration public long Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Int64 Deserialize(ref MessagePackReader) Declaration public long Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Int64 Serialize(ref JsonWriter, Int64) Declaration public void Serialize(ref JsonWriter writer, long value) Parameters Type Name Description JsonWriter writer Int64 value Serialize(ref MessagePackWriter, Int64) Declaration public void Serialize(ref MessagePackWriter writer, long value) Parameters Type Name Description MessagePackWriter writer Int64 value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.Int8Formatter.html": {
    "href": "api/AlgoSdk.Formatters.Int8Formatter.html",
    "title": "Class Int8Formatter | Unity Algorand SDK",
    "keywords": "Class Int8Formatter Inheritance Object Int8Formatter Implements IAlgoApiFormatter < SByte > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class Int8Formatter : IAlgoApiFormatter<sbyte> Methods Deserialize(ref JsonReader) Declaration public sbyte Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description SByte Deserialize(ref MessagePackReader) Declaration public sbyte Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description SByte Serialize(ref JsonWriter, SByte) Declaration public void Serialize(ref JsonWriter writer, sbyte value) Parameters Type Name Description JsonWriter writer SByte value Serialize(ref MessagePackWriter, SByte) Declaration public void Serialize(ref MessagePackWriter writer, sbyte value) Parameters Type Name Description MessagePackWriter writer SByte value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.KeywordByteEnumFormatter-1.html": {
    "href": "api/AlgoSdk.Formatters.KeywordByteEnumFormatter-1.html",
    "title": "Class KeywordByteEnumFormatter<T> | Unity Algorand SDK",
    "keywords": "Class KeywordByteEnumFormatter<T> Inheritance Object KeywordByteEnumFormatter<T> AddressRoleFormatter OnCompletionFormatter SignatureTypeFormatter TransactionTypeFormatter Implements IAlgoApiFormatter <T> Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public abstract class KeywordByteEnumFormatter<T> : IAlgoApiFormatter<T> where T : Enum Type Parameters Name Description T Constructors KeywordByteEnumFormatter(String[]) Declaration public KeywordByteEnumFormatter(string[] typeToString) Parameters Type Name Description String [] typeToString Methods Deserialize(ref JsonReader) Declaration public virtual T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration public virtual T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Serialize(ref JsonWriter, T) Declaration public virtual void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref MessagePackWriter, T) Declaration public virtual void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.OnCompletionFormatter.html": {
    "href": "api/AlgoSdk.Formatters.OnCompletionFormatter.html",
    "title": "Class OnCompletionFormatter | Unity Algorand SDK",
    "keywords": "Class OnCompletionFormatter Inheritance Object KeywordByteEnumFormatter < OnCompletion > OnCompletionFormatter Implements IAlgoApiFormatter < OnCompletion > Inherited Members KeywordByteEnumFormatter<OnCompletion>.Deserialize(JsonReader) KeywordByteEnumFormatter<OnCompletion>.Serialize(JsonWriter, OnCompletion) Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public sealed class OnCompletionFormatter : KeywordByteEnumFormatter<OnCompletion>, IAlgoApiFormatter<OnCompletion> Constructors OnCompletionFormatter() Declaration public OnCompletionFormatter() Methods Deserialize(ref MessagePackReader) Declaration public override OnCompletion Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description OnCompletion Overrides AlgoSdk.Formatters.KeywordByteEnumFormatter<AlgoSdk.OnCompletion>.Deserialize(MessagePackReader) Serialize(ref MessagePackWriter, OnCompletion) Declaration public override void Serialize(ref MessagePackWriter writer, OnCompletion value) Parameters Type Name Description MessagePackWriter writer OnCompletion value Overrides AlgoSdk.Formatters.KeywordByteEnumFormatter<AlgoSdk.OnCompletion>.Serialize(MessagePackWriter, AlgoSdk.OnCompletion) Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.OptionalFormatter-1.html": {
    "href": "api/AlgoSdk.Formatters.OptionalFormatter-1.html",
    "title": "Class OptionalFormatter<T> | Unity Algorand SDK",
    "keywords": "Class OptionalFormatter<T> Inheritance Object OptionalFormatter<T> Implements IAlgoApiFormatter < Optional <T>> Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public sealed class OptionalFormatter<T> : IAlgoApiFormatter<Optional<T>> where T : struct, IEquatable<T> Type Parameters Name Description T Methods Deserialize(ref JsonReader) Declaration public Optional<T> Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Optional <T> Deserialize(ref MessagePackReader) Declaration public Optional<T> Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Optional <T> Serialize(ref JsonWriter, Optional<T>) Declaration public void Serialize(ref JsonWriter writer, Optional<T> value) Parameters Type Name Description JsonWriter writer Optional <T> value Serialize(ref MessagePackWriter, Optional<T>) Declaration public void Serialize(ref MessagePackWriter writer, Optional<T> value) Parameters Type Name Description MessagePackWriter writer Optional <T> value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.PrivateKeyFormatter.html": {
    "href": "api/AlgoSdk.Formatters.PrivateKeyFormatter.html",
    "title": "Class PrivateKeyFormatter | Unity Algorand SDK",
    "keywords": "Class PrivateKeyFormatter Inheritance Object PrivateKeyFormatter Implements IAlgoApiFormatter < PrivateKey > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class PrivateKeyFormatter : IAlgoApiFormatter<PrivateKey> Methods Deserialize(ref JsonReader) Declaration public PrivateKey Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description PrivateKey Deserialize(ref MessagePackReader) Declaration public PrivateKey Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description PrivateKey Serialize(ref JsonWriter, PrivateKey) Declaration public void Serialize(ref JsonWriter writer, PrivateKey value) Parameters Type Name Description JsonWriter writer PrivateKey value Serialize(ref MessagePackWriter, PrivateKey) Declaration public void Serialize(ref MessagePackWriter writer, PrivateKey value) Parameters Type Name Description MessagePackWriter writer PrivateKey value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.SignatureTypeFormatter.html": {
    "href": "api/AlgoSdk.Formatters.SignatureTypeFormatter.html",
    "title": "Class SignatureTypeFormatter | Unity Algorand SDK",
    "keywords": "Class SignatureTypeFormatter Inheritance Object KeywordByteEnumFormatter < SignatureType > SignatureTypeFormatter Implements IAlgoApiFormatter < SignatureType > Inherited Members KeywordByteEnumFormatter<SignatureType>.Deserialize(JsonReader) KeywordByteEnumFormatter<SignatureType>.Deserialize(MessagePackReader) KeywordByteEnumFormatter<SignatureType>.Serialize(JsonWriter, SignatureType) KeywordByteEnumFormatter<SignatureType>.Serialize(MessagePackWriter, SignatureType) Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public sealed class SignatureTypeFormatter : KeywordByteEnumFormatter<SignatureType>, IAlgoApiFormatter<SignatureType> Constructors SignatureTypeFormatter() Declaration public SignatureTypeFormatter() Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.SignedTransactionFormatter.html": {
    "href": "api/AlgoSdk.Formatters.SignedTransactionFormatter.html",
    "title": "Class SignedTransactionFormatter | Unity Algorand SDK",
    "keywords": "Class SignedTransactionFormatter Inheritance Object SignedTransactionFormatter Implements IAlgoApiFormatter < SignedTransaction > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class SignedTransactionFormatter : IAlgoApiFormatter<SignedTransaction> Methods Deserialize(ref JsonReader) Declaration public SignedTransaction Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description SignedTransaction Deserialize(ref MessagePackReader) Declaration public SignedTransaction Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description SignedTransaction Serialize(ref JsonWriter, SignedTransaction) Declaration public void Serialize(ref JsonWriter writer, SignedTransaction value) Parameters Type Name Description JsonWriter writer SignedTransaction value Serialize(ref MessagePackWriter, SignedTransaction) Declaration public void Serialize(ref MessagePackWriter writer, SignedTransaction value) Parameters Type Name Description MessagePackWriter writer SignedTransaction value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.SignedTransactionFormatter-1.html": {
    "href": "api/AlgoSdk.Formatters.SignedTransactionFormatter-1.html",
    "title": "Class SignedTransactionFormatter<TTransaction> | Unity Algorand SDK",
    "keywords": "Class SignedTransactionFormatter<TTransaction> Inheritance Object SignedTransactionFormatter<TTransaction> Implements IAlgoApiFormatter < Signed <TTransaction>> Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class SignedTransactionFormatter<TTransaction> : IAlgoApiFormatter<Signed<TTransaction>> where TTransaction : ITransaction Type Parameters Name Description TTransaction Methods Deserialize(ref JsonReader) Declaration public Signed<TTransaction> Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Signed <TTransaction> Deserialize(ref MessagePackReader) Declaration public Signed<TTransaction> Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Signed <TTransaction> Serialize(ref JsonWriter, Signed<TTransaction>) Declaration public void Serialize(ref JsonWriter writer, Signed<TTransaction> value) Parameters Type Name Description JsonWriter writer Signed <TTransaction> value Serialize(ref MessagePackWriter, Signed<TTransaction>) Declaration public void Serialize(ref MessagePackWriter writer, Signed<TTransaction> value) Parameters Type Name Description MessagePackWriter writer Signed <TTransaction> value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.StringFormatter.html": {
    "href": "api/AlgoSdk.Formatters.StringFormatter.html",
    "title": "Class StringFormatter | Unity Algorand SDK",
    "keywords": "Class StringFormatter Inheritance Object StringFormatter Implements IAlgoApiFormatter < String > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class StringFormatter : IAlgoApiFormatter<string> Methods Deserialize(ref JsonReader) Declaration public string Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description String Deserialize(ref MessagePackReader) Declaration public string Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description String Serialize(ref JsonWriter, String) Declaration public void Serialize(ref JsonWriter writer, string value) Parameters Type Name Description JsonWriter writer String value Serialize(ref MessagePackWriter, String) Declaration public void Serialize(ref MessagePackWriter writer, string value) Parameters Type Name Description MessagePackWriter writer String value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.TransactionIdFormatter.html": {
    "href": "api/AlgoSdk.Formatters.TransactionIdFormatter.html",
    "title": "Class TransactionIdFormatter | Unity Algorand SDK",
    "keywords": "Class TransactionIdFormatter Inheritance Object TransactionIdFormatter Implements IAlgoApiFormatter < TransactionId > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class TransactionIdFormatter : IAlgoApiFormatter<TransactionId> Methods Deserialize(ref JsonReader) Declaration public TransactionId Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description TransactionId Deserialize(ref MessagePackReader) Declaration public TransactionId Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description TransactionId Serialize(ref JsonWriter, TransactionId) Declaration public void Serialize(ref JsonWriter writer, TransactionId value) Parameters Type Name Description JsonWriter writer TransactionId value Serialize(ref MessagePackWriter, TransactionId) Declaration public void Serialize(ref MessagePackWriter writer, TransactionId value) Parameters Type Name Description MessagePackWriter writer TransactionId value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.TransactionTypeFormatter.html": {
    "href": "api/AlgoSdk.Formatters.TransactionTypeFormatter.html",
    "title": "Class TransactionTypeFormatter | Unity Algorand SDK",
    "keywords": "Class TransactionTypeFormatter Inheritance Object KeywordByteEnumFormatter < TransactionType > TransactionTypeFormatter Implements IAlgoApiFormatter < TransactionType > Inherited Members KeywordByteEnumFormatter<TransactionType>.Deserialize(JsonReader) KeywordByteEnumFormatter<TransactionType>.Deserialize(MessagePackReader) KeywordByteEnumFormatter<TransactionType>.Serialize(JsonWriter, TransactionType) KeywordByteEnumFormatter<TransactionType>.Serialize(MessagePackWriter, TransactionType) Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class TransactionTypeFormatter : KeywordByteEnumFormatter<TransactionType>, IAlgoApiFormatter<TransactionType> Constructors TransactionTypeFormatter() Declaration public TransactionTypeFormatter() Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.UInt16Formatter.html": {
    "href": "api/AlgoSdk.Formatters.UInt16Formatter.html",
    "title": "Class UInt16Formatter | Unity Algorand SDK",
    "keywords": "Class UInt16Formatter Inheritance Object UInt16Formatter Implements IAlgoApiFormatter < UInt16 > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class UInt16Formatter : IAlgoApiFormatter<ushort> Methods Deserialize(ref JsonReader) Declaration public ushort Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description UInt16 Deserialize(ref MessagePackReader) Declaration public ushort Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description UInt16 Serialize(ref JsonWriter, UInt16) Declaration public void Serialize(ref JsonWriter writer, ushort value) Parameters Type Name Description JsonWriter writer UInt16 value Serialize(ref MessagePackWriter, UInt16) Declaration public void Serialize(ref MessagePackWriter writer, ushort value) Parameters Type Name Description MessagePackWriter writer UInt16 value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.UInt32Formatter.html": {
    "href": "api/AlgoSdk.Formatters.UInt32Formatter.html",
    "title": "Class UInt32Formatter | Unity Algorand SDK",
    "keywords": "Class UInt32Formatter Inheritance Object UInt32Formatter Implements IAlgoApiFormatter < UInt32 > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class UInt32Formatter : IAlgoApiFormatter<uint> Methods Deserialize(ref JsonReader) Declaration public uint Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description UInt32 Deserialize(ref MessagePackReader) Declaration public uint Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description UInt32 Serialize(ref JsonWriter, UInt32) Declaration public void Serialize(ref JsonWriter writer, uint value) Parameters Type Name Description JsonWriter writer UInt32 value Serialize(ref MessagePackWriter, UInt32) Declaration public void Serialize(ref MessagePackWriter writer, uint value) Parameters Type Name Description MessagePackWriter writer UInt32 value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.UInt64Formatter.html": {
    "href": "api/AlgoSdk.Formatters.UInt64Formatter.html",
    "title": "Class UInt64Formatter | Unity Algorand SDK",
    "keywords": "Class UInt64Formatter Inheritance Object UInt64Formatter Implements IAlgoApiFormatter < UInt64 > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class UInt64Formatter : IAlgoApiFormatter<ulong> Methods Deserialize(ref JsonReader) Declaration public ulong Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description UInt64 Deserialize(ref MessagePackReader) Declaration public ulong Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description UInt64 Serialize(ref JsonWriter, UInt64) Declaration public void Serialize(ref JsonWriter writer, ulong value) Parameters Type Name Description JsonWriter writer UInt64 value Serialize(ref MessagePackWriter, UInt64) Declaration public void Serialize(ref MessagePackWriter writer, ulong value) Parameters Type Name Description MessagePackWriter writer UInt64 value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.UInt8Formatter.html": {
    "href": "api/AlgoSdk.Formatters.UInt8Formatter.html",
    "title": "Class UInt8Formatter | Unity Algorand SDK",
    "keywords": "Class UInt8Formatter Inheritance Object UInt8Formatter Implements IAlgoApiFormatter < Byte > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class UInt8Formatter : IAlgoApiFormatter<byte> Methods Deserialize(ref JsonReader) Declaration public byte Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Byte Deserialize(ref MessagePackReader) Declaration public byte Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Byte Serialize(ref JsonWriter, Byte) Declaration public void Serialize(ref JsonWriter writer, byte value) Parameters Type Name Description JsonWriter writer Byte value Serialize(ref MessagePackWriter, Byte) Declaration public void Serialize(ref MessagePackWriter writer, byte value) Parameters Type Name Description MessagePackWriter writer Byte value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.GenerateKeyRequest.html": {
    "href": "api/AlgoSdk.GenerateKeyRequest.html",
    "title": "Struct GenerateKeyRequest | Unity Algorand SDK",
    "keywords": "Struct GenerateKeyRequest Implements IEquatable < GenerateKeyRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct GenerateKeyRequest Fields DisplayMnemonic Declaration public Optional<bool> DisplayMnemonic Field Value Type Description Optional < Boolean > WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(GenerateKeyRequest) Declaration public bool Equals(GenerateKeyRequest other) Parameters Type Name Description GenerateKeyRequest other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.GenerateKeyResponse.html": {
    "href": "api/AlgoSdk.GenerateKeyResponse.html",
    "title": "Struct GenerateKeyResponse | Unity Algorand SDK",
    "keywords": "Struct GenerateKeyResponse Implements IEquatable < GenerateKeyResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct GenerateKeyResponse Fields Address Declaration public Address Address Field Value Type Description Address Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String Methods Equals(GenerateKeyResponse) Declaration public bool Equals(GenerateKeyResponse other) Parameters Type Name Description GenerateKeyResponse other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.GenesisAccountAlloc.html": {
    "href": "api/AlgoSdk.GenesisAccountAlloc.html",
    "title": "Struct GenesisAccountAlloc | Unity Algorand SDK",
    "keywords": "Struct GenesisAccountAlloc Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct GenesisAccountAlloc Fields addr Declaration public string addr Field Value Type Description String comment Declaration public string comment Field Value Type Description String state Declaration public GenesisAccountAlloc.State state Field Value Type Description GenesisAccountAlloc.State"
  },
  "api/AlgoSdk.GenesisAccountAlloc.State.html": {
    "href": "api/AlgoSdk.GenesisAccountAlloc.State.html",
    "title": "Struct GenesisAccountAlloc.State | Unity Algorand SDK",
    "keywords": "Struct GenesisAccountAlloc.State Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct State Fields algo Declaration public ulong algo Field Value Type Description UInt64 onl Declaration public ulong onl Field Value Type Description UInt64 sel Declaration public string sel Field Value Type Description String vote Declaration public string vote Field Value Type Description String voteKD Declaration public ulong voteKD Field Value Type Description UInt64 voteLst Declaration public ulong voteLst Field Value Type Description UInt64"
  },
  "api/AlgoSdk.GenesisHash.html": {
    "href": "api/AlgoSdk.GenesisHash.html",
    "title": "Struct GenesisHash | Unity Algorand SDK",
    "keywords": "Struct GenesisHash Genesis hash found of the genesis block. Implements IByteArray IEquatable < GenesisHash > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct GenesisHash Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public readonly int Length { get; } Property Value Type Description Int32 Methods Equals(GenesisHash) Declaration public bool Equals(GenesisHash other) Parameters Type Name Description GenesisHash other Returns Type Description Boolean GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void * Operators Implicit(GenesisHash to Sha512_256_Hash) Declaration public static implicit operator Sha512_256_Hash(GenesisHash genesisHash) Parameters Type Name Description GenesisHash genesisHash Returns Type Description Sha512_256_Hash Implicit(Sha512_256_Hash to GenesisHash) Declaration public static implicit operator GenesisHash(Sha512_256_Hash hash) Parameters Type Name Description Sha512_256_Hash hash Returns Type Description GenesisHash Implicit(String to GenesisHash) Declaration public static implicit operator GenesisHash(string s) Parameters Type Name Description String s Returns Type Description GenesisHash Implements IByteArray IEquatable<>"
  },
  "api/AlgoSdk.GenesisInformation.html": {
    "href": "api/AlgoSdk.GenesisInformation.html",
    "title": "Struct GenesisInformation | Unity Algorand SDK",
    "keywords": "Struct GenesisInformation JSON information from GetGenesisInformation() Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct GenesisInformation Fields alloc Genesis account allocations Declaration public GenesisAccountAlloc[] alloc Field Value Type Description GenesisAccountAlloc [] fees Declaration public string fees Field Value Type Description String id Declaration public string id Field Value Type Description String network Declaration public string network Field Value Type Description String proto Declaration public string proto Field Value Type Description String rwd Declaration public string rwd Field Value Type Description String"
  },
  "api/AlgoSdk.Header.html": {
    "href": "api/AlgoSdk.Header.html",
    "title": "Struct Header | Unity Algorand SDK",
    "keywords": "Struct Header A serializable key-value pair that's used in http request headers. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Header Constructors Header(String, String) Declaration public Header(string key, string value) Parameters Type Name Description String key String value Fields Key Declaration public string Key Field Value Type Description String Value Declaration public string Value Field Value Type Description String Methods Deconstruct(out String, out String) Declaration public void Deconstruct(out string key, out string value) Parameters Type Name Description String key String value ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators Implicit(Header to (String, String)) Declaration public static implicit operator (string, string)(Header header) Parameters Type Name Description Header header Returns Type Description (T1, T2) < String , String > Implicit((String, String) to Header) Declaration public static implicit operator Header((string, string) tuple) Parameters Type Name Description (T1, T2) < String , String > tuple Returns Type Description Header"
  },
  "api/AlgoSdk.HealthCheck.html": {
    "href": "api/AlgoSdk.HealthCheck.html",
    "title": "Struct HealthCheck | Unity Algorand SDK",
    "keywords": "Struct HealthCheck A health check response from GetHealth() Implements IEquatable < HealthCheck > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct HealthCheck Fields Data Declaration public AlgoApiObject Data Field Value Type Description AlgoApiObject DatabaseAvailable Declaration public bool DatabaseAvailable Field Value Type Description Boolean Errors Declaration public string[] Errors Field Value Type Description String [] IsMigrating Declaration public bool IsMigrating Field Value Type Description Boolean Message Declaration public string Message Field Value Type Description String Round Declaration public ulong Round Field Value Type Description UInt64 Version Declaration public string Version Field Value Type Description String Methods Equals(HealthCheck) Declaration public bool Equals(HealthCheck other) Parameters Type Name Description HealthCheck other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.Hex.html": {
    "href": "api/AlgoSdk.Hex.html",
    "title": "Struct Hex | Unity Algorand SDK",
    "keywords": "Struct Hex Implements IEquatable < Hex > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Hex Properties Data Declaration public readonly byte[] Data { get; } Property Value Type Description Byte [] Methods Equals(Hex) Declaration public bool Equals(Hex other) Parameters Type Name Description Hex other Returns Type Description Boolean FromString(String) Declaration public static Hex FromString(string s) Parameters Type Name Description String s Returns Type Description Hex ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators Implicit(Hex to Byte[]) Declaration public static implicit operator byte[](Hex hex) Parameters Type Name Description Hex hex Returns Type Description Byte [] Implicit(Byte[] to Hex) Declaration public static implicit operator Hex(byte[] data) Parameters Type Name Description Byte [] data Returns Type Description Hex Implements IEquatable<>"
  },
  "api/AlgoSdk.html": {
    "href": "api/AlgoSdk.html",
    "title": "Namespace AlgoSdk | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk Classes Account Contains utility functions for generating new accounts (private keys). AddressRoleExtensions AlgoApiField AlgoApiField<TAlgoApiObject> AlgoApiField<TAlgoApiObject>.Map<TKey> AlgoApiFormatterAttribute AlgoApiFormatterCache<T> AlgoApiFormatterLookup AlgoApiObjectAttribute AlgoApiObjectFormatter AlgoApiObjectFormatter<T> AlgoApiSerializer Contains functions for serializing and deserializing AlgoSdk types ArrayComparer Base32Encoding Base64Encoding CompiledTealFormatter ContentTypeExtensions EitherFormatter<T, U> Endianness IntEnumFormatter<T> Logic ProvideSourceInfoAttribute SerializationException SignatureTypeExtensions TokenizedClientExtensions TransactionExtensions TransactionTypeExtensions Utf8StringExtensions Structs AccountInfo Information regarding an Algorand account at a given round. AccountParticipation Describes the parameters used by this account in consensus protocol. AccountResponse AccountsResponse AccountStateDelta Application state delta for an account Address . Address A public key for an Algorand account. Address.CheckSum AlgoApiObject A non-deserialized object from an algorand service. AlgoApiRequest A wrapper around for handling requests to Algorand REST services. AlgoApiRequest.Awaiter A Task Awaiter for AlgoApiRequest.Awaiter<TResponse> A Task Awaiter for AlgoApiRequest.Sent A wrapper around the handling the sent request. AlgoApiRequest.Sent<TResponse> A wrapper around the handling the sent request. AlgoApiRequest.SentWithProgress<TProgress> A wrapper around the handling the sent request. AlgoApiRequest.SentWithProgress<TResponse, TProgress> A wrapper around the handling the sent request. AlgoApiResponse Wrapper class around a completed AlgoApiResponse<T> Wrapper class around a completed . This can be deconstructed into a tuple of (ErrorResponse, Payload) AlgodClient A client for accessing the algod service AppCallTxn AppCallTxn.Params Application Application index and its parameters ApplicationLocalState Stores local state associated with an application. ApplicationParams Stores the global information associated with an application. ApplicationResponse ApplicationsResponse ArrayComparer<T> ArrayComparer<T, TComparer> Asset Specifies both the unique identifier and the parameters for an asset. AssetConfigTxn AssetConfigTxn.Params AssetFreezeTxn AssetFreezeTxn.Params AssetHolding Describes an asset held by an account. AssetParams AssetParams specifies the parameters for an asset. [apar] when part of an AssetConfig transaction. AssetResponse AssetsResponse AssetTransferTxn AssetTransferTxn.Params BalancesResponse Block Block information. BlockResponse A wrapped Block from the GetBlock(UInt64) BlockRewards BlockTransaction A transaction found in a BlockResponse from GetBlock(UInt64) . BlockUpgradeState BlockUpgradeVote BuildVersion Information regarding the algod service's build version. ByteEnumComparer<T> CatchupMessage A response from StartCatchup(String) CompiledTeal A wrapper class around compiled teal bytes. CreateWalletRequest CreateWalletResponse DeleteKeyRequest DeleteMultisigRequest DryrunRequest Request data type for dryrun endpoint. Given the Transactions and simulated ledger state upload, run TEAL scripts and return debugging information. DryrunResults Response from TealDryrun(Optional<DryrunRequest>) DryrunSource DryrunSource is TEAL source text that gets uploaded, compiled, and inserted into transactions or application state. DryrunState Stores the TEAL eval step data DryrunTxnResult DryrunTxnResult contains any LogicSig or ApplicationCall program debug information and state updates from a dryrun. Either<T, U> ErrorResponse An error response from algorand APIs with optional data field. EvalDelta Represents a TEAL value delta. EvalDeltaKeyValue EvalDeltaKeyValue ExportKeyRequest ExportKeyResponse ExportMasterKeyRequest ExportMasterKeyResponse ExportMultisigRequest ExportMultisigResponse GenerateKeyRequest GenerateKeyResponse GenesisAccountAlloc GenesisAccountAlloc.State GenesisHash Genesis hash found of the genesis block. GenesisInformation JSON information from GetGenesisInformation() Header A serializable key-value pair that's used in http request headers. HealthCheck A health check response from GetHealth() Hex ImportKeyRequest ImportKeyResponse ImportMultisigRequest ImportMultisigResponse IndexerClient A client for accessing the indexer service InitWalletHandleTokenRequest InitWalletHandleTokenResponse IntEnumComparer<T> KeyRegTxn KeyRegTxn.Params KmdClient A client for accessing the kmd service LedgerSupply Supply represents the current supply of MicroAlgos in the system. ListKeysRequest ListKeysResponse ListMultisigRequest ListMultisigResponse ListWalletsResponse LogicSig MerkleProof Proof of transaction in a block. MiniAssetHolding A simplified version of AssetHolding Mnemonic Byte struct representing a private key encoded with Length words. Multisig Multisig.Subsig Optional<T> PaymentTxn PaymentTxn.Params PendingTransaction Details about a pending transaction. If the transaction was recently confirmed, includes confirmation details like the round and reward details. PendingTransactions A potentially truncated list of transactions currently in the node's transaction pool. You can compute whether or not the list is truncated if the number of elements in the TopTransactions array is fewer than TotalTransactions . PrivateKey The private key for an Algorand account. ReleaseWalletHandleTokenRequest RenameWalletRequest RenameWalletResponse RenewWalletHandleTokenRequest RenewWalletHandleTokenResponse Sig Signed<TTransaction> A typed signed transaction. SignedTransaction An untyped signed transaction. See Signed<TTransaction> for a typed version. This is used as a wrapper around Transaction for the Algorand API. SignMultisigRequest SignMultisigResponse SignProgramMultisigRequest SignProgramMultisigResponse SignProgramRequest SignProgramResponse SignTransactionRequest SignTransactionResponse StateSchema The StateSchema object is only required for the create application call transaction. The StateSchema object must be fully populated for both the GlobalStateSchema and LocalStateSchema objects. Status The node status from GetCurrentStatus() and GetStatusAfterWaitingForRound(UInt64) StringComparer TealBytes TealCompilationResult Result from TealCompile(String) TealKeyValue Represents a key-value pair in an application store. TealValue Represents a TEAL value. Transaction TransactionGroup A group of transactions used to generate a group id for atomic transactions. TransactionHeader Contains parameters used in all transaction types. TransactionId A SHA512 256-truncated hash of a transaction's bytes. This is usually Base32 encoded with the padding chars trimmed. TransactionIdResponse Response from SendTransaction(Byte[]) . Wraps a TransactionId . TransactionParams Params used for setting all transactions. Contains fee, genesis info, and round constraints. Usually this is retrieved from GetSuggestedParams() then modified. TransactionResponse TransactionSignature An untyped wrapper around different transaction signatures. TransactionsResponse Version algod version information VersionsResponse VrfPubKey 32 byte public key required for SelectionParticipationKey Wallet WalletHandle WalletInfoRequest WalletInfoResponse Interfaces IAlgoApiClient IAlgoApiFormattable<T> IAlgoApiFormatter<T> IAlgoApiResponse IAlgoApiResponse<T> IAlgodClient IAppCallTxn IAssetConfigTxn IAssetFreezeTxn IAssetTransferTxn IBlockRewards IBlockUpgradeState IBlockUpgradeVote IIndexerClient IIndexerResponse IKeyRegTxn IKmdClient IPaginatedResponse IPaymentTxn ISignature ITransaction Enums AddressRole Role of an address for a transaction. ContentType EvalDeltaAction Represents the action on the value Mnemonic.Word A list of possible words that occur in a Mnemonic OnCompletion [apan] defines the what additional actions occur with the transaction. SignatureType TealValueType TEAL Value Type. Value 1 refers to bytes, value 2 refers to uint. TransactionType An enum representing the type of transaction. Delegates AlgoApiField<TAlgoApiObject>.EqualityComparer AlgoApiField<TAlgoApiObject>.FieldGetter<T> AlgoApiField<TAlgoApiObject>.FieldSetter<T> AlgoApiField<TAlgoApiObject>.JsonDeserializer AlgoApiField<TAlgoApiObject>.JsonSerializer AlgoApiField<TAlgoApiObject>.MessagePackDeserializer AlgoApiField<TAlgoApiObject>.MessagePackSerializer AlgoApiField<TAlgoApiObject>.SerializePredicate"
  },
  "api/AlgoSdk.IAlgoApiClient.html": {
    "href": "api/AlgoSdk.IAlgoApiClient.html",
    "title": "Interface IAlgoApiClient | Unity Algorand SDK",
    "keywords": "Interface IAlgoApiClient Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAlgoApiClient Properties Address Address of the service, including the port Declaration string Address { get; } Property Value Type Description String Remarks e.g. \"http://localhost:4001\" Headers Additional headers to add to requests Declaration Header[] Headers { get; } Property Value Type Description Header [] Token Token used in authenticating to the service Declaration string Token { get; } Property Value Type Description String TokenHeader Request header to use for the authenticating Token Declaration string TokenHeader { get; } Property Value Type Description String"
  },
  "api/AlgoSdk.IAlgoApiFormattable-1.html": {
    "href": "api/AlgoSdk.IAlgoApiFormattable-1.html",
    "title": "Interface IAlgoApiFormattable<T> | Unity Algorand SDK",
    "keywords": "Interface IAlgoApiFormattable<T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAlgoApiFormattable<T> Type Parameters Name Description T Methods GetAlgoApiFormatter() Declaration IAlgoApiFormatter<T> GetAlgoApiFormatter() Returns Type Description IAlgoApiFormatter <T>"
  },
  "api/AlgoSdk.IAlgoApiFormatter-1.html": {
    "href": "api/AlgoSdk.IAlgoApiFormatter-1.html",
    "title": "Interface IAlgoApiFormatter<T> | Unity Algorand SDK",
    "keywords": "Interface IAlgoApiFormatter<T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAlgoApiFormatter<T> Type Parameters Name Description T Methods Deserialize(ref JsonReader) Declaration T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Serialize(ref JsonWriter, T) Declaration void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref MessagePackWriter, T) Declaration void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value"
  },
  "api/AlgoSdk.IAlgoApiResponse.html": {
    "href": "api/AlgoSdk.IAlgoApiResponse.html",
    "title": "Interface IAlgoApiResponse | Unity Algorand SDK",
    "keywords": "Interface IAlgoApiResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAlgoApiResponse Properties ContentType The ContentType found in the Response header Declaration ContentType ContentType { get; } Property Value Type Description ContentType Data Raw downloaded data Declaration byte[] Data { get; } Property Value Type Description Byte [] Error An ErrorResponse that is populated if there is an error. Check IsError to see if there was an error. Declaration ErrorResponse Error { get; } Property Value Type Description ErrorResponse ResponseCode HTTP status code Declaration long ResponseCode { get; } Property Value Type Description Int64 Status A status for the request Declaration Result Status { get; } Property Value Type Description Result Methods GetText() Parses the Data into a string based on ContentType Declaration string GetText() Returns Type Description String A string encoded from Data"
  },
  "api/AlgoSdk.IAlgoApiResponse-1.html": {
    "href": "api/AlgoSdk.IAlgoApiResponse-1.html",
    "title": "Interface IAlgoApiResponse<T> | Unity Algorand SDK",
    "keywords": "Interface IAlgoApiResponse<T> Inherited Members IAlgoApiResponse.Data IAlgoApiResponse.ResponseCode IAlgoApiResponse.Status IAlgoApiResponse.ContentType IAlgoApiResponse.Error IAlgoApiResponse.GetText() Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAlgoApiResponse<T> : IAlgoApiResponse Type Parameters Name Description T Properties Payload The object deserialized from the response Declaration T Payload { get; } Property Value Type Description T"
  },
  "api/AlgoSdk.IAlgodClient.html": {
    "href": "api/AlgoSdk.IAlgodClient.html",
    "title": "Interface IAlgodClient | Unity Algorand SDK",
    "keywords": "Interface IAlgodClient Inherited Members IAlgoApiClient.Address IAlgoApiClient.Token IAlgoApiClient.TokenHeader IAlgoApiClient.Headers Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAlgodClient : IAlgoApiClient Methods AbortCatchup(String) Aborts a catchpoint catchup. Declaration AlgoApiRequest.Sent<CatchupMessage> AbortCatchup(string catchpoint) Parameters Type Name Description String catchpoint A catch point Returns Type Description AlgoApiRequest.Sent < CatchupMessage > Catchup abort response string GetAccountInformation(Address) Get account information. Declaration AlgoApiRequest.Sent<AccountInfo> GetAccountInformation(Address accountAddress) Parameters Type Name Description Address accountAddress An account public key (address) Returns Type Description AlgoApiRequest.Sent < AccountInfo > an AccountInfo if everything is okay Remarks Given a specific account public key, this call returns the accounts status, balance and spendable amounts. GetApplication(UInt64) Get application information. Declaration AlgoApiRequest.Sent<Application> GetApplication(ulong applicationId) Parameters Type Name Description UInt64 applicationId An application identifier (app index) Returns Type Description AlgoApiRequest.Sent < Application > Application information Remarks Given a application id, it returns application information including creator, approval and clear programs, global and local schemas, and global state. GetAsset(UInt64) Get asset information. Declaration AlgoApiRequest.Sent<Asset> GetAsset(ulong assetId) Parameters Type Name Description UInt64 assetId An asset identifier (asset index) Returns Type Description AlgoApiRequest.Sent < Asset > Asset information Remarks Given an asset id, it returns asset information including creator, name, total supply and special addresses. GetBlock(UInt64) Get the block for the given round. Declaration AlgoApiRequest.Sent<BlockResponse> GetBlock(ulong round) Parameters Type Name Description UInt64 round The round from which to fetch block information. Returns Type Description AlgoApiRequest.Sent < BlockResponse > Encoded block object BlockResponse GetCurrentStatus() Gets the current node status. Declaration AlgoApiRequest.Sent<Status> GetCurrentStatus() Returns Type Description AlgoApiRequest.Sent < Status > Status GetGenesisInformation() Get information about the genesis block. Declaration AlgoApiRequest.Sent<AlgoApiObject> GetGenesisInformation() Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > The entire genesis file in JSON GetHealth() Check the health of the algod service. Declaration AlgoApiRequest.Sent GetHealth() Returns Type Description AlgoApiRequest.Sent if healthy GetLedgerSupply() Get the current supply reported by the ledger. Declaration AlgoApiRequest.Sent<LedgerSupply> GetLedgerSupply() Returns Type Description AlgoApiRequest.Sent < LedgerSupply > Supply represents the current supply of MicroAlgos in the system. GetMerkleProof(UInt64, TransactionId) Get a Merkle proof for a transaction in a block. Declaration AlgoApiRequest.Sent<MerkleProof> GetMerkleProof(ulong round, TransactionId txid) Parameters Type Name Description UInt64 round The round in which the transaction appears. TransactionId txid The transaction ID for which to generate a proof. Returns Type Description AlgoApiRequest.Sent < MerkleProof > Proof of transaction in a block MerkleProof . GetMetrics() Return metrics about algod functioning. Declaration AlgoApiRequest.Sent GetMetrics() Returns Type Description AlgoApiRequest.Sent text with #-comments and key:value lines. GetPendingTransaction(TransactionId) Get a specific pending transaction. Declaration AlgoApiRequest.Sent<PendingTransaction> GetPendingTransaction(TransactionId txId) Parameters Type Name Description TransactionId txId A transaction id Returns Type Description AlgoApiRequest.Sent < PendingTransaction > Given a transaction id of a recently submitted transaction, it returns information about it. There are several cases when this might succeed: transaction committed (committed round > 0) transaction still in the pool (committed round = 0, pool error = \"\") transaction removed from pool due to error (committed round = 0, pool error != \"\") Or the transaction may have happened sufficiently long ago that the node no longer remembers it, and this will return an error. GetPendingTransactions(UInt64) Get a list of unconfirmed transactions currently in the transaction pool. Declaration AlgoApiRequest.Sent<PendingTransactions> GetPendingTransactions(ulong max = 0UL) Parameters Type Name Description UInt64 max Truncated number of transactions to display. If max=0, returns all pending txns. Returns Type Description AlgoApiRequest.Sent < PendingTransactions > A potentially truncated list of transactions currently in the node's transaction pool. You can compute whether or not the list is truncated if the number of elements in the top-transactions array is fewer than total-transactions. Remarks Get the list of pending transactions, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. GetPendingTransactionsByAccount(Address, UInt64) Get a list of unconfirmed transactions currently in the transaction pool by address. Declaration AlgoApiRequest.Sent<PendingTransactions> GetPendingTransactionsByAccount(Address accountAddress, ulong max = 0UL) Parameters Type Name Description Address accountAddress An account public key (address) UInt64 max Truncated number of transactions to display. If max=0, returns all pending txns. Returns Type Description AlgoApiRequest.Sent < PendingTransactions > A potentially truncated list of transactions currently in the node's transaction pool. You can compute whether or not the list is truncated if the number of elements in the top-transactions array is fewer than total-transactions. Remarks Get the list of pending transactions by address, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. GetStatusAfterWaitingForRound(UInt64) Gets the node status after waiting for the given round. Declaration AlgoApiRequest.Sent<Status> GetStatusAfterWaitingForRound(ulong round) Parameters Type Name Description UInt64 round The round to wait until returning status Returns Type Description AlgoApiRequest.Sent < Status > Status Remarks Waits for a block to appear after round {round} and returns the node's status at the time. GetSuggestedParams() Get parameters for constructing a new transaction Declaration AlgoApiRequest.Sent<TransactionParams> GetSuggestedParams() Returns Type Description AlgoApiRequest.Sent < TransactionParams > TransactionParams contains the parameters that help a client construct a new transaction. GetSwaggerSpec() Gets the current swagger spec. Declaration AlgoApiRequest.Sent<AlgoApiObject> GetSwaggerSpec() Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > The entire swagger spec in JSON. GetVersions() Retrieves the supported API versions, binary build versions, and genesis information. Declaration AlgoApiRequest.Sent<Version> GetVersions() Returns Type Description AlgoApiRequest.Sent < Version > Version is the response to 'GET /versions' RegisterParticipationKeys(String, UInt64, Optional<UInt64>, Optional<Boolean>, Optional<Boolean>) Generate (or renew) and register participation keys on the node for a given account address. Declaration AlgoApiRequest.Sent<TransactionIdResponse> RegisterParticipationKeys(string accountAddress, ulong fee = 1000UL, Optional<ulong> keyDilution = default(Optional<ulong>), Optional<bool> noWait = default(Optional<bool>), Optional<bool> roundLastValid = default(Optional<bool>)) Parameters Type Name Description String accountAddress The account-id to update, or \"all\" to update all accounts. UInt64 fee The fee to use when submitting key registration transactions. Defaults to the suggested fee. Optional < UInt64 > keyDilution value to use for two-level participation key. Optional < Boolean > noWait Don't wait for transaction to commit before returning response. Optional < Boolean > roundLastValid The last round for which the generated participation keys will be valid. Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > Transaction ID of the submission. SendTransaction(Byte[]) Broadcasts a msgpack-encoded, signed transaction to the network. Declaration AlgoApiRequest.Sent<TransactionIdResponse> SendTransaction(byte[] txn) Parameters Type Name Description Byte [] txn The byte encoded signed transaction to broadcast to network Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > Transaction ID of the submission. SendTransaction<T>(Signed<T>) Broadcasts a signed transaction to the network. Declaration AlgoApiRequest.Sent<TransactionIdResponse> SendTransaction<T>(Signed<T> txn) where T : struct, ITransaction, IEquatable<T> Parameters Type Name Description Signed <T> txn The byte encoded signed transaction to broadcast to network Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > Transaction ID of the submission. Type Parameters Name Description T The type of the transaction; must implement ITransaction SendTransactions(SignedTransaction[]) Broadcasts a group of transactions to the network. Declaration AlgoApiRequest.Sent<TransactionIdResponse> SendTransactions(params SignedTransaction[] signedTxns) Parameters Type Name Description SignedTransaction [] signedTxns The signed transactions in the same order as they were when using GetGroupId(TransactionId[]) Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > Transaction ID of the submission. SendTransactions(Byte[][]) Broadcasts a group of msgpack-encoded, signed transactions to the network. Declaration AlgoApiRequest.Sent<TransactionIdResponse> SendTransactions(params byte[][] signedTxns) Parameters Type Name Description Byte [][] signedTxns The signed transactions in the same order as they were when using GetGroupId(TransactionId[]) Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > Transaction ID of the submission. ShutDown(Optional<UInt64>) Special management endpoint to shutdown the node. Declaration AlgoApiRequest.Sent ShutDown(Optional<ulong> timeout = default(Optional<ulong>)) Parameters Type Name Description Optional < UInt64 > timeout shutdown timeout Returns Type Description AlgoApiRequest.Sent Success if request was successful Remarks Optionally provide a timeout parameter to indicate that the node should begin shutting down after a number of seconds. StartCatchup(String) Starts a catchpoint catchup. Declaration AlgoApiRequest.Sent<CatchupMessage> StartCatchup(string catchpoint) Parameters Type Name Description String catchpoint A catch point Returns Type Description AlgoApiRequest.Sent < CatchupMessage > Catchup start response string TealCompile(String) Compile TEAL source code to binary, produce its hash Declaration AlgoApiRequest.Sent<TealCompilationResult> TealCompile(string source) Parameters Type Name Description String source TEAL source code to be compiled Returns Type Description AlgoApiRequest.Sent < TealCompilationResult > Teal compile Result Remarks Given TEAL source code in plain text, return base64 encoded program bytes and base32 SHA512_256 hash of program bytes (Address style). This endpoint is only enabled when a node's configureation file sets EnableDeveloperAPI to true. TealDryrun(Optional<DryrunRequest>) Provide debugging information for a transaction (or group). Declaration AlgoApiRequest.Sent<DryrunResults> TealDryrun(Optional<DryrunRequest> request = default(Optional<DryrunRequest>)) Parameters Type Name Description Optional < DryrunRequest > request Transaction (or group) and any accompanying state-simulation data. Returns Type Description AlgoApiRequest.Sent < DryrunResults > DryrunResponse contains per-txn debug information from a dryrun. Remarks Executes TEAL program(s) in context and returns debugging information about the execution. This endpoint is only enabled when a node's configureation file sets EnableDeveloperAPI to true."
  },
  "api/AlgoSdk.IAppCallTxn.html": {
    "href": "api/AlgoSdk.IAppCallTxn.html",
    "title": "Interface IAppCallTxn | Unity Algorand SDK",
    "keywords": "Interface IAppCallTxn Inherited Members ITransaction.Fee ITransaction.FirstValidRound ITransaction.GenesisHash ITransaction.LastValidRound ITransaction.Sender ITransaction.TransactionType ITransaction.GenesisId ITransaction.Group ITransaction.Lease ITransaction.Note ITransaction.RekeyTo ITransaction.CopyTo(Transaction) ITransaction.CopyFrom(Transaction) Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAppCallTxn : ITransaction Properties Accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. Declaration Address[] Accounts { get; set; } Property Value Type Description Address [] AppArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Declaration CompiledTeal AppArguments { get; set; } Property Value Type Description CompiledTeal ApplicationId ID of the application being configured or empty if creating. Declaration ulong ApplicationId { get; set; } Property Value Type Description UInt64 ApprovalProgram Logic executed for every application transaction, except when on-completion is set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Approval programs may reject the transaction. Declaration CompiledTeal ApprovalProgram { get; set; } Property Value Type Description CompiledTeal ClearStateProgram Logic executed for application transactions with on-completion set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Clear state programs cannot reject the transaction. Declaration CompiledTeal ClearStateProgram { get; set; } Property Value Type Description CompiledTeal ExtraProgramPages Number of additional pages allocated to the application's approval and clear state programs. Each ExtraProgramPages is 2048 bytes. The sum of ApprovalProgram and ClearStateProgram may not exceed 2048*(1+ExtraProgramPages) bytes. Declaration ulong ExtraProgramPages { get; set; } Property Value Type Description UInt64 ForeignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. Declaration ulong[] ForeignApps { get; set; } Property Value Type Description UInt64 [] ForeignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Declaration ulong[] ForeignAssets { get; set; } Property Value Type Description UInt64 [] GlobalStateSchema Holds the maximum number of global state values defined within a StateSchema object. Declaration StateSchema GlobalStateSchema { get; set; } Property Value Type Description StateSchema LocalStateSchema Holds the maximum number of local state values defined within a StateSchema object. Declaration StateSchema LocalStateSchema { get; set; } Property Value Type Description StateSchema OnComplete Defines what additional actions occur with the transaction. Declaration OnCompletion OnComplete { get; set; } Property Value Type Description OnCompletion"
  },
  "api/AlgoSdk.IAssetConfigTxn.html": {
    "href": "api/AlgoSdk.IAssetConfigTxn.html",
    "title": "Interface IAssetConfigTxn | Unity Algorand SDK",
    "keywords": "Interface IAssetConfigTxn Inherited Members ITransaction.Fee ITransaction.FirstValidRound ITransaction.GenesisHash ITransaction.LastValidRound ITransaction.Sender ITransaction.TransactionType ITransaction.GenesisId ITransaction.Group ITransaction.Lease ITransaction.Note ITransaction.RekeyTo ITransaction.CopyTo(Transaction) ITransaction.CopyFrom(Transaction) Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAssetConfigTxn : ITransaction Properties AssetParams See AssetParams for all available fields. Declaration AssetParams AssetParams { get; set; } Property Value Type Description AssetParams ConfigAsset For re-configure or destroy transactions, this is the unique asset ID. On asset creation, the ID is set to zero. Declaration ulong ConfigAsset { get; set; } Property Value Type Description UInt64"
  },
  "api/AlgoSdk.IAssetFreezeTxn.html": {
    "href": "api/AlgoSdk.IAssetFreezeTxn.html",
    "title": "Interface IAssetFreezeTxn | Unity Algorand SDK",
    "keywords": "Interface IAssetFreezeTxn Inherited Members ITransaction.Fee ITransaction.FirstValidRound ITransaction.GenesisHash ITransaction.LastValidRound ITransaction.Sender ITransaction.TransactionType ITransaction.GenesisId ITransaction.Group ITransaction.Lease ITransaction.Note ITransaction.RekeyTo ITransaction.CopyTo(Transaction) ITransaction.CopyFrom(Transaction) Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAssetFreezeTxn : ITransaction Properties AssetFrozen True to freeze the asset. Declaration Optional<bool> AssetFrozen { get; set; } Property Value Type Description Optional < Boolean > FreezeAccount The address of the account whose asset is being frozen or unfrozen. Declaration Address FreezeAccount { get; set; } Property Value Type Description Address FreezeAsset The asset ID being frozen or unfrozen. Declaration ulong FreezeAsset { get; set; } Property Value Type Description UInt64"
  },
  "api/AlgoSdk.IAssetTransferTxn.html": {
    "href": "api/AlgoSdk.IAssetTransferTxn.html",
    "title": "Interface IAssetTransferTxn | Unity Algorand SDK",
    "keywords": "Interface IAssetTransferTxn Inherited Members ITransaction.Fee ITransaction.FirstValidRound ITransaction.GenesisHash ITransaction.LastValidRound ITransaction.Sender ITransaction.TransactionType ITransaction.GenesisId ITransaction.Group ITransaction.Lease ITransaction.Note ITransaction.RekeyTo ITransaction.CopyTo(Transaction) ITransaction.CopyFrom(Transaction) Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAssetTransferTxn : ITransaction Properties AssetAmount The amount of the asset to be transferred. A zero amount transferred to self allocates that asset in the account's Asset map. Declaration ulong AssetAmount { get; set; } Property Value Type Description UInt64 AssetCloseTo Specify this field to remove the asset holding from the sender account and reduce the account's minimum balance (i.e. opt-out of the asset). Declaration Address AssetCloseTo { get; set; } Property Value Type Description Address AssetReceiver The recipient of the asset transfer. Declaration Address AssetReceiver { get; set; } Property Value Type Description Address AssetSender The sender of the transfer. The regular Sender field should be used and this one set to the zero value for regular transfers between accounts. If this value is nonzero, it indicates a clawback transaction where the sender is the asset's clawback address and the asset sender is the address from which the funds will be withdrawn. Declaration Address AssetSender { get; set; } Property Value Type Description Address CloseAmount The amount returned from the close out. Declaration ulong CloseAmount { get; set; } Property Value Type Description UInt64 XferAsset The unique ID of the asset to be transferred. Declaration ulong XferAsset { get; set; } Property Value Type Description UInt64"
  },
  "api/AlgoSdk.IBlockRewards.html": {
    "href": "api/AlgoSdk.IBlockRewards.html",
    "title": "Interface IBlockRewards | Unity Algorand SDK",
    "keywords": "Interface IBlockRewards Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IBlockRewards Properties FeeSink [fees] accepts transaction fees, it can only spend to the incentive pool. Declaration Address FeeSink { get; set; } Property Value Type Description Address RewardsCalculationRound [rwcalr] number of leftover MicroAlgos after the distribution of rewards-rate MicroAlgos for every reward unit in the next round. Declaration ulong RewardsCalculationRound { get; set; } Property Value Type Description UInt64 RewardsLevel [earn] How many rewards, in MicroAlgos, have been distributed to each RewardUnit of MicroAlgos since genesis. Declaration ulong RewardsLevel { get; set; } Property Value Type Description UInt64 RewardsPool [rwd] accepts periodic injections from the fee-sink and continually redistributes them as rewards. Declaration Address RewardsPool { get; set; } Property Value Type Description Address RewardsRate [rate] Number of new MicroAlgos added to the participation stake from rewards at the next round. Declaration ulong RewardsRate { get; set; } Property Value Type Description UInt64 RewardsResidue [frac] Number of leftover MicroAlgos after the distribution of RewardsRate/rewardUnits MicroAlgos for every reward unit in the next round. Declaration ulong RewardsResidue { get; set; } Property Value Type Description UInt64"
  },
  "api/AlgoSdk.IBlockUpgradeState.html": {
    "href": "api/AlgoSdk.IBlockUpgradeState.html",
    "title": "Interface IBlockUpgradeState | Unity Algorand SDK",
    "keywords": "Interface IBlockUpgradeState Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IBlockUpgradeState Properties CurrentProtocol [proto] The current protocol version. Declaration FixedString128Bytes CurrentProtocol { get; set; } Property Value Type Description FixedString128Bytes NextProtocol [nextproto] The next proposed protocol version. Declaration FixedString128Bytes NextProtocol { get; set; } Property Value Type Description FixedString128Bytes NextProtocolApprovals [nextyes] Number of blocks which approved the protocol upgrade. Declaration ulong NextProtocolApprovals { get; set; } Property Value Type Description UInt64 NextProtocolSwitchOn [nextswitch] Round on which the protocol upgrade will take effect. Declaration ulong NextProtocolSwitchOn { get; set; } Property Value Type Description UInt64 NextProtocolVoteBefore [nextbefore] Deadline round for this protocol upgrade (No votes will be consider after this round). Declaration ulong NextProtocolVoteBefore { get; set; } Property Value Type Description UInt64"
  },
  "api/AlgoSdk.IBlockUpgradeVote.html": {
    "href": "api/AlgoSdk.IBlockUpgradeVote.html",
    "title": "Interface IBlockUpgradeVote | Unity Algorand SDK",
    "keywords": "Interface IBlockUpgradeVote Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IBlockUpgradeVote Properties UpgradeApprove [upgradeyes] Indicates a yes vote for the current proposal. Declaration Optional<bool> UpgradeApprove { get; set; } Property Value Type Description Optional < Boolean > UpgradeDelay [upgradedelay] Indicates the time between acceptance and execution. Declaration ulong UpgradeDelay { get; set; } Property Value Type Description UInt64 UpgradePropose [upgradeprop] Indicates a proposed upgrade. Declaration Address UpgradePropose { get; set; } Property Value Type Description Address"
  },
  "api/AlgoSdk.IIndexerClient.html": {
    "href": "api/AlgoSdk.IIndexerClient.html",
    "title": "Interface IIndexerClient | Unity Algorand SDK",
    "keywords": "Interface IIndexerClient Inherited Members IAlgoApiClient.Address IAlgoApiClient.Token IAlgoApiClient.TokenHeader IAlgoApiClient.Headers Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IIndexerClient : IAlgoApiClient Methods GetAccount(Address, Optional<Boolean>, Optional<UInt64>) Lookup account information. Declaration AlgoApiRequest.Sent<AccountResponse> GetAccount(Address accountAddress, Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>)) Parameters Type Name Description Address accountAddress account address Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < UInt64 > round Include results for the specified round. Returns Type Description AlgoApiRequest.Sent < AccountResponse > GetAccounts(Optional<UInt64>, Optional<UInt64>, Address, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>, Optional<UInt64>) Search for accounts. Declaration AlgoApiRequest.Sent<AccountsResponse> GetAccounts(Optional<ulong> applicationId = default(Optional<ulong>), Optional<ulong> assetId = default(Optional<ulong>), Address authAddr = default(Address), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), Optional<ulong> round = default(Optional<ulong>)) Parameters Type Name Description Optional < UInt64 > applicationId Application ID Optional < UInt64 > assetId Asset ID Address authAddr Include accounts configured to use this spending key. Optional < UInt64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < UInt64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < UInt64 > limit Maximum number of results to return. Optional < FixedString128Bytes > next The next page of results. Use the next token provided by the previous results. Optional < UInt64 > round Include results for the specified round. For performance reasons, this parameter may be disabled on some configurations. Returns Type Description AlgoApiRequest.Sent < AccountsResponse > GetAccountTransactions(Address, DateTime, Optional<UInt64>, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId) Lookup account transactions. Declaration AlgoApiRequest.Sent<TransactionsResponse> GetAccountTransactions(Address accountAddress, DateTime afterTime = null, Optional<ulong> assetId = default(Optional<ulong>), DateTime beforeTime = null, Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<ulong> limit = default(Optional<ulong>), Optional<ulong> maxRound = default(Optional<ulong>), Optional<ulong> minRound = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>), SignatureType sigType = SignatureType.None, TransactionType txType = TransactionType.None, TransactionId txid = default(TransactionId)) Parameters Type Name Description Address accountAddress account address DateTime afterTime Include results after the given time. Optional < UInt64 > assetId Asset ID DateTime beforeTime Include results before the given time. Optional < UInt64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < UInt64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < UInt64 > limit Maximum number of results to return. Optional < UInt64 > maxRound Include results at or before the specified max-round. Optional < UInt64 > minRound Include results at or after the specified min-round. Optional < FixedString128Bytes > next The next page of results. Use the next token provided by the previous results. String notePrefix Specifies a prefix which must be contained in the note field. Optional < Boolean > rekeyTo Include results which include the rekey-to field. Optional < UInt64 > round Include results for the specified round. SignatureType sigType Filter transactions using the given SignatureType TransactionType txType TransactionId txid Lookup the specific transaction by ID. Returns Type Description AlgoApiRequest.Sent < TransactionsResponse > GetApplication(UInt64, Optional<Boolean>) Lookup application. Declaration AlgoApiRequest.Sent<ApplicationResponse> GetApplication(ulong applicationId, Optional<bool> includeAll = default(Optional<bool>)) Parameters Type Name Description UInt64 applicationId Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Returns Type Description AlgoApiRequest.Sent < ApplicationResponse > GetApplications(Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>) Search for applications Declaration AlgoApiRequest.Sent<ApplicationsResponse> GetApplications(Optional<ulong> applicationId = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>)) Parameters Type Name Description Optional < UInt64 > applicationId Application ID Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < UInt64 > limit Maximum number of results to return. Optional < FixedString128Bytes > next The next page of results. Use the next token provided by the previous results. Returns Type Description AlgoApiRequest.Sent < ApplicationsResponse > GetAsset(UInt64, Optional<Boolean>) Lookup asset information. Declaration AlgoApiRequest.Sent<AssetResponse> GetAsset(ulong assetId, Optional<bool> includeAll = default(Optional<bool>)) Parameters Type Name Description UInt64 assetId Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Returns Type Description AlgoApiRequest.Sent < AssetResponse > GetAssetBalances(UInt64, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>, Optional<UInt64>) Lookup the list of accounts who hold this asset Declaration AlgoApiRequest.Sent<BalancesResponse> GetAssetBalances(ulong assetId, Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), Optional<ulong> round = default(Optional<ulong>)) Parameters Type Name Description UInt64 assetId Optional < UInt64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < UInt64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < UInt64 > limit Maximum number of results to return. Optional < FixedString128Bytes > next The next page of results. Use the next token provided by the previous results. Optional < UInt64 > round Include results for the specified round. Returns Type Description AlgoApiRequest.Sent < BalancesResponse > GetAssets(Optional<UInt64>, Address, Optional<Boolean>, Optional<UInt64>, String, Optional<FixedString128Bytes>, String) Search for assets. Declaration AlgoApiRequest.Sent<AssetsResponse> GetAssets(Optional<ulong> assetId = default(Optional<ulong>), Address creator = default(Address), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), string name = null, Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string unit = null) Parameters Type Name Description Optional < UInt64 > assetId Asset ID Address creator Filter just assets with the given creator address. Optional < Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < UInt64 > limit Maximum number of results to return. String name Filter just assets with the given name. Optional < FixedString128Bytes > next The next page of results. Use the next token provided by the previous results. String unit Filter just assets with the given unit. Returns Type Description AlgoApiRequest.Sent < AssetsResponse > GetAssetTransactions(UInt64, Address, AddressRole, DateTime, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId) Lookup transactions for an asset. Declaration AlgoApiRequest.Sent<TransactionsResponse> GetAssetTransactions(ulong assetId, Address address = default(Address), AddressRole addressRole = AddressRole.None, DateTime afterTime = null, DateTime beforeTime = null, Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> excludeCloseTo = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<ulong> maxRound = default(Optional<ulong>), Optional<ulong> minRound = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>), SignatureType sigType = SignatureType.None, TransactionType txType = TransactionType.None, TransactionId txid = default(TransactionId)) Parameters Type Name Description UInt64 assetId Address address Only include transactions with this address in one of the transaction fields. AddressRole addressRole Combine with the address parameter to define what type of address to search for. DateTime afterTime Include results after the given time. DateTime beforeTime Include results before the given time. Optional < UInt64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < UInt64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < Boolean > excludeCloseTo Combine with address and address-role parameters to define what type of address to search for. The close to fields are normally treated as a receiver, if you would like to exclude them set this parameter to true. Optional < UInt64 > limit Maximum number of results to return. Optional < UInt64 > maxRound Include results at or before the specified max-round. Optional < UInt64 > minRound Include results at or after the specified min-round. Optional < FixedString128Bytes > next The next page of results. Use the next token provided by the previous results. String notePrefix Specifies a prefix which must be contained in the note field. Optional < Boolean > rekeyTo Include results which include the rekey-to field. Optional < UInt64 > round Include results for the specified round. SignatureType sigType SigType filters just results using the specified type of signature. TransactionType txType TransactionId txid Lookup the specific transaction by ID. Returns Type Description AlgoApiRequest.Sent < TransactionsResponse > GetBlock(UInt64) Lookup block. Declaration AlgoApiRequest.Sent<Block> GetBlock(ulong round) Parameters Type Name Description UInt64 round Round number Returns Type Description AlgoApiRequest.Sent < Block > GetHealth() Get a health status of the indexer service. Declaration AlgoApiRequest.Sent<HealthCheck> GetHealth() Returns Type Description AlgoApiRequest.Sent < HealthCheck > a HealthCheck response detailing the status of the health GetTransaction(TransactionId) Lookup a single transaction. Declaration AlgoApiRequest.Sent<TransactionResponse> GetTransaction(TransactionId txid) Parameters Type Name Description TransactionId txid Returns Type Description AlgoApiRequest.Sent < TransactionResponse > GetTransactions(Address, AddressRole, DateTime, Optional<UInt64>, Optional<UInt64>, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId) Search for transactions. Declaration AlgoApiRequest.Sent<TransactionsResponse> GetTransactions(Address address = default(Address), AddressRole addressRole = AddressRole.None, DateTime afterTime = null, Optional<ulong> applicationId = default(Optional<ulong>), Optional<ulong> assetId = default(Optional<ulong>), DateTime beforeTime = null, Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> excludeCloseTo = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<ulong> maxRound = default(Optional<ulong>), Optional<ulong> minRound = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>), SignatureType sigType = SignatureType.None, TransactionType txType = TransactionType.None, TransactionId txid = default(TransactionId)) Parameters Type Name Description Address address Only include transactions with this address in one of the transaction fields. AddressRole addressRole Combine with the address parameter to define what type of address to search for. DateTime afterTime Include results after the given time. Optional < UInt64 > applicationId Application Id Optional < UInt64 > assetId Asset Id DateTime beforeTime Include results before the given time. Optional < UInt64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < UInt64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < Boolean > excludeCloseTo Combine with address and address-role parameters to define what type of address to search for. The close to fields are normally treated as a receiver, if you would like to exclude them set this parameter to true. Optional < UInt64 > limit Maximum number of results to return. Optional < UInt64 > maxRound Include results at or before the specified max-round. Optional < UInt64 > minRound Include results at or after the specified min-round. Optional < FixedString128Bytes > next The next page of results. Use the next token provided by the previous results. String notePrefix Specifies a prefix which must be contained in the note field. Optional < Boolean > rekeyTo Include results which include the rekey-to field. Optional < UInt64 > round Include results for the specified round. SignatureType sigType SigType filters just results using the specified type of signature. TransactionType txType TransactionId txid Lookup the specific transaction by ID. Returns Type Description AlgoApiRequest.Sent < TransactionsResponse >"
  },
  "api/AlgoSdk.IIndexerResponse.html": {
    "href": "api/AlgoSdk.IIndexerResponse.html",
    "title": "Interface IIndexerResponse | Unity Algorand SDK",
    "keywords": "Interface IIndexerResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IIndexerResponse Properties CurrentRound Round at which the results were computed. Declaration ulong CurrentRound { get; } Property Value Type Description UInt64"
  },
  "api/AlgoSdk.IKeyRegTxn.html": {
    "href": "api/AlgoSdk.IKeyRegTxn.html",
    "title": "Interface IKeyRegTxn | Unity Algorand SDK",
    "keywords": "Interface IKeyRegTxn Inherited Members ITransaction.Fee ITransaction.FirstValidRound ITransaction.GenesisHash ITransaction.LastValidRound ITransaction.Sender ITransaction.TransactionType ITransaction.GenesisId ITransaction.Group ITransaction.Lease ITransaction.Note ITransaction.RekeyTo ITransaction.CopyTo(Transaction) ITransaction.CopyFrom(Transaction) Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IKeyRegTxn : ITransaction Properties NonParticipation All new Algorand accounts are participating by default. This means that they earn rewards. Mark an account nonparticipating by setting this value to true and this account will no longer earn rewards. It is unlikely that you will ever need to do this and exists mainly for economic-related functions on the network. Declaration Optional<bool> NonParticipation { get; set; } Property Value Type Description Optional < Boolean > SelectionParticipationKey The VRF public key. Declaration VrfPubKey SelectionParticipationKey { get; set; } Property Value Type Description VrfPubKey VoteFirst The first round that the participation key is valid. Not to be confused with the FirstValidRound of the keyreg transaction. Declaration ulong VoteFirst { get; set; } Property Value Type Description UInt64 VoteKeyDilution This is the dilution for the 2-level participation key. Declaration ulong VoteKeyDilution { get; set; } Property Value Type Description UInt64 VoteLast The last round that the participation key is valid. Not to be confused with the LastValidRound of the keyreg transaction. Declaration ulong VoteLast { get; set; } Property Value Type Description UInt64 VoteParticipationKey The root participation public key. Declaration Ed25519.PublicKey VoteParticipationKey { get; set; } Property Value Type Description Ed25519.PublicKey"
  },
  "api/AlgoSdk.IKmdClient.html": {
    "href": "api/AlgoSdk.IKmdClient.html",
    "title": "Interface IKmdClient | Unity Algorand SDK",
    "keywords": "Interface IKmdClient Inherited Members IAlgoApiClient.Address IAlgoApiClient.Token IAlgoApiClient.TokenHeader IAlgoApiClient.Headers Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IKmdClient : IAlgoApiClient Methods CreateWallet(PrivateKey, FixedString128Bytes, FixedString128Bytes, FixedString128Bytes) Create a wallet Declaration AlgoApiRequest.Sent<CreateWalletResponse> CreateWallet(PrivateKey masterDerivationKey, FixedString128Bytes walletDriverName, FixedString128Bytes walletName, FixedString128Bytes walletPassword) Parameters Type Name Description PrivateKey masterDerivationKey FixedString128Bytes walletDriverName FixedString128Bytes walletName FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < CreateWalletResponse > Remarks Create a new wallet (collection of keys) with the given parameters. DeleteKey(Address, FixedString128Bytes, FixedString128Bytes) Deletes the key with the passed public key from the wallet. Declaration AlgoApiRequest.Sent DeleteKey(Address address, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address address public key of the key to delete FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent DeleteMultisig(Address, FixedString128Bytes, FixedString128Bytes) Deletes multisig preimage information for the passed address from the wallet. Declaration AlgoApiRequest.Sent DeleteMultisig(Address address, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address address public key for the key to delete multisig preimage information FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent ExportKey(Address, FixedString128Bytes, FixedString128Bytes) Export the secret key associated with the passed public key. Declaration AlgoApiRequest.Sent<ExportKeyResponse> ExportKey(Address address, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address address public key of the key to export FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < ExportKeyResponse > ExportMasterKey(FixedString128Bytes, FixedString128Bytes) Export the master derivation key from the wallet. This key is a master \"backup\" key for the underlying wallet. With it, you can regenerate all of the wallets that have been generated with this wallet's POST /v1/key endpoint. This key will not allow you to recover keys imported from other wallets, however. Declaration AlgoApiRequest.Sent<ExportMasterKeyResponse> ExportMasterKey(FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < ExportMasterKeyResponse > ExportMultisig(Address, FixedString128Bytes) Given a multisig address whose preimage this wallet stores, returns the information used to generate the address, including public keys, threshold, and multisig version. Declaration AlgoApiRequest.Sent<ExportMultisigResponse> ExportMultisig(Address address, FixedString128Bytes walletHandleToken) Parameters Type Name Description Address address public key for the key to export multisig preimage information FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < ExportMultisigResponse > GenerateKey(FixedString128Bytes, Optional<Boolean>) Generates the next key in the deterministic key sequence (as determined by the master derivation key) and adds it to the wallet, returning the public key. Declaration AlgoApiRequest.Sent<GenerateKeyResponse> GenerateKey(FixedString128Bytes walletHandleToken, Optional<bool> displayMnemonic = default(Optional<bool>)) Parameters Type Name Description FixedString128Bytes walletHandleToken Optional < Boolean > displayMnemonic whether or not to display the mnemonic Returns Type Description AlgoApiRequest.Sent < GenerateKeyResponse > GetSwaggerSpec() Gets the current swagger spec. Declaration AlgoApiRequest.Sent<AlgoApiObject> GetSwaggerSpec() Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > The entire swagger spec in json. ImportKey(PrivateKey, FixedString128Bytes) Import an externally generated key into the wallet. Note that if you wish to back up the imported key, you must do so by backing up the entire wallet database, because imported keys were not derived from the wallet's master derivation key. Declaration AlgoApiRequest.Sent<ImportKeyResponse> ImportKey(PrivateKey privateKey, FixedString128Bytes walletPassword) Parameters Type Name Description PrivateKey privateKey key to import FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < ImportKeyResponse > ImportMultisig(Ed25519.PublicKey[], Byte, FixedString128Bytes, Byte) Generates a multisig account from the passed public keys array and multisig metadata, and stores all of this in the wallet. Declaration AlgoApiRequest.Sent<ImportMultisigResponse> ImportMultisig(Ed25519.PublicKey[] publicKeys, byte threshold, FixedString128Bytes walletHandleToken, byte version = 1) Parameters Type Name Description Ed25519.PublicKey [] publicKeys Public keys for the accounts used to sign Byte threshold Number of valid signatures required FixedString128Bytes walletHandleToken Byte version Multisig version. This should always be set to 1. Returns Type Description AlgoApiRequest.Sent < ImportMultisigResponse > InitWalletHandleToken(FixedString128Bytes, FixedString128Bytes) Initialize a wallet handle token Declaration AlgoApiRequest.Sent<InitWalletHandleTokenResponse> InitWalletHandleToken(FixedString128Bytes walletId, FixedString128Bytes walletPassword) Parameters Type Name Description FixedString128Bytes walletId FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < InitWalletHandleTokenResponse > Remarks Unlock the wallet and return a wallet handle token that can be used for subsequent operations. These tokens expire periodically and must be renewed. You can use WalletInfo(FixedString128Bytes) to see how much time remains until expiration, and renew it with RenewWalletHandleToken(FixedString128Bytes) . When you're done, you can invalidate the token with ReleaseWalletHandleToken(FixedString128Bytes) . ListKeys(FixedString128Bytes) Lists all of the public keys in this wallet. All of them have a stored private key. Declaration AlgoApiRequest.Sent<ListKeysResponse> ListKeys(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < ListKeysResponse > ListMultisig(FixedString128Bytes) Lists all of the multisig accounts whose preimages this wallet stores Declaration AlgoApiRequest.Sent<ListMultisigResponse> ListMultisig(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < ListMultisigResponse > ListWallets() List Wallets Declaration AlgoApiRequest.Sent<ListWalletsResponse> ListWallets() Returns Type Description AlgoApiRequest.Sent < ListWalletsResponse > Remarks Lists all of the wallets that kmd is aware of. ReleaseWalletHandleToken(FixedString128Bytes) Release a wallet handle token Declaration AlgoApiRequest.Sent ReleaseWalletHandleToken(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent Remarks Invalidate the passed wallet handle token, making it invalid for use in subsequent requests. RenameWallet(FixedString128Bytes, FixedString128Bytes, FixedString128Bytes) Rename a wallet Declaration AlgoApiRequest.Sent<RenameWalletResponse> RenameWallet(FixedString128Bytes walletId, FixedString128Bytes walletName, FixedString128Bytes walletPassword) Parameters Type Name Description FixedString128Bytes walletId FixedString128Bytes walletName FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < RenameWalletResponse > Remarks Rename the underlying wallet to something else RenewWalletHandleToken(FixedString128Bytes) Renew a wallet handle token Declaration AlgoApiRequest.Sent<RenewWalletHandleTokenResponse> RenewWalletHandleToken(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < RenewWalletHandleTokenResponse > Remarks Renew a wallet handle token, increasing its expiration duration to its initial value SignMultisig(Multisig, Ed25519.PublicKey, Byte[], FixedString128Bytes, FixedString128Bytes) Sign a multisig transaction Declaration AlgoApiRequest.Sent<SignMultisigResponse> SignMultisig(Multisig msig, Ed25519.PublicKey publicKey, byte[] transactionData, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Multisig msig Current multisig signature object Ed25519.PublicKey publicKey public key of the key to use to add a signature to the multisig Byte [] transactionData transaction serialized as msgpack FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignMultisigResponse > Remarks Start a multisig signature, or add a signature to a partially completed multisig signature object. SignProgram(Address, Byte[], FixedString128Bytes, FixedString128Bytes) Sign program Declaration AlgoApiRequest.Sent<SignProgramResponse> SignProgram(Address account, byte[] programData, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address account Account to sign the program with Byte [] programData compiled program bytes FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignProgramResponse > Remarks Signs the passed program with a key from the wallet, determined by the account named in the request. SignProgramMultisig(Address, Byte[], Multisig, Ed25519.PublicKey, FixedString128Bytes, FixedString128Bytes) Sign a program for a multisig account Declaration AlgoApiRequest.Sent<SignProgramMultisigResponse> SignProgramMultisig(Address msigAccount, byte[] programData, Multisig msig, Ed25519.PublicKey publicKey, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address msigAccount The address of the multisig account. See https://developer.algorand.org/docs/get-details/accounts/create/#multisignature Byte [] programData compiled program bytes Multisig msig current multisig signature object Ed25519.PublicKey publicKey public key of the key to use to add a signature to the multisig FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignProgramMultisigResponse > Remarks Start a multisig signature, or add a signature to a partially completed multisig signature object. SignTransaction(Address, Byte[], FixedString128Bytes, FixedString128Bytes) Sign a transaction Declaration AlgoApiRequest.Sent<SignTransactionResponse> SignTransaction(Address account, byte[] transactionData, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address account public key of the key to sign the transaction Byte [] transactionData transaction serialized as msgpack FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignTransactionResponse > Versions() Retrieves the current version of the kmd service Declaration AlgoApiRequest.Sent<VersionsResponse> Versions() Returns Type Description AlgoApiRequest.Sent < VersionsResponse > WalletInfo(FixedString128Bytes) Get wallet info Declaration AlgoApiRequest.Sent<WalletInfoResponse> WalletInfo(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < WalletInfoResponse > Remarks Returns information about the wallet associated with the passed wallet handle token. Additionally returns expiration information about the token itself."
  },
  "api/AlgoSdk.ImportKeyRequest.html": {
    "href": "api/AlgoSdk.ImportKeyRequest.html",
    "title": "Struct ImportKeyRequest | Unity Algorand SDK",
    "keywords": "Struct ImportKeyRequest Implements IEquatable < ImportKeyRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ImportKeyRequest Fields PrivateKey Declaration public PrivateKey PrivateKey Field Value Type Description PrivateKey WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(ImportKeyRequest) Declaration public bool Equals(ImportKeyRequest other) Parameters Type Name Description ImportKeyRequest other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.ImportKeyResponse.html": {
    "href": "api/AlgoSdk.ImportKeyResponse.html",
    "title": "Struct ImportKeyResponse | Unity Algorand SDK",
    "keywords": "Struct ImportKeyResponse Implements IEquatable < ImportKeyResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ImportKeyResponse Fields Address Declaration public Address Address Field Value Type Description Address Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String Methods Equals(ImportKeyResponse) Declaration public bool Equals(ImportKeyResponse other) Parameters Type Name Description ImportKeyResponse other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.ImportMultisigRequest.html": {
    "href": "api/AlgoSdk.ImportMultisigRequest.html",
    "title": "Struct ImportMultisigRequest | Unity Algorand SDK",
    "keywords": "Struct ImportMultisigRequest Implements IEquatable < ImportMultisigRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ImportMultisigRequest Fields PublicKeys Declaration public Ed25519.PublicKey[] PublicKeys Field Value Type Description Ed25519.PublicKey [] Threshold Declaration public byte Threshold Field Value Type Description Byte Version Declaration public byte Version Field Value Type Description Byte WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(ImportMultisigRequest) Declaration public bool Equals(ImportMultisigRequest other) Parameters Type Name Description ImportMultisigRequest other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.ImportMultisigResponse.html": {
    "href": "api/AlgoSdk.ImportMultisigResponse.html",
    "title": "Struct ImportMultisigResponse | Unity Algorand SDK",
    "keywords": "Struct ImportMultisigResponse Implements IEquatable < ImportMultisigResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ImportMultisigResponse Fields Address Declaration public Address Address Field Value Type Description Address Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String Methods Equals(ImportMultisigResponse) Declaration public bool Equals(ImportMultisigResponse other) Parameters Type Name Description ImportMultisigResponse other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.IndexerClient.html": {
    "href": "api/AlgoSdk.IndexerClient.html",
    "title": "Struct IndexerClient | Unity Algorand SDK",
    "keywords": "Struct IndexerClient A client for accessing the indexer service Implements IIndexerClient IAlgoApiClient Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct IndexerClient : IIndexerClient, IAlgoApiClient Remarks The indexer service is responsible for querying the blockchain Constructors IndexerClient(String, Header[]) Create a new indexer client Declaration public IndexerClient(string address, params Header[] headers) Parameters Type Name Description String address url of the service, including the port, e.g. \"http://localhost:4001\" Header [] headers extra headers to add to the requests. e.g. (\"x-api-key\", \"my-private-key\") IndexerClient(String, String, Header[]) Create a new indexer client Declaration public IndexerClient(string address, string token = null, params Header[] headers) Parameters Type Name Description String address url of the service, including the port, e.g. \"http://localhost:4001\" String token token used in authenticating to the service Header [] headers extra headers to add to the requests. e.g. (\"x-api-key\", \"my-private-key\") Properties Address Declaration public readonly string Address { get; } Property Value Type Description String Headers Declaration public readonly Header[] Headers { get; } Property Value Type Description Header [] Token Declaration public readonly string Token { get; } Property Value Type Description String TokenHeader Declaration public readonly string TokenHeader { get; } Property Value Type Description String Methods GetAccount(Address, Optional<Boolean>, Optional<UInt64>) Declaration public AlgoApiRequest.Sent<AccountResponse> GetAccount(Address accountAddress, Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>)) Parameters Type Name Description Address accountAddress Optional < Boolean > includeAll Optional < UInt64 > round Returns Type Description AlgoApiRequest.Sent < AccountResponse > GetAccounts(Optional<UInt64>, Optional<UInt64>, Address, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>, Optional<UInt64>) Declaration public AlgoApiRequest.Sent<AccountsResponse> GetAccounts(Optional<ulong> applicationId = default(Optional<ulong>), Optional<ulong> assetId = default(Optional<ulong>), Address authAddr = default(Address), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), Optional<ulong> round = default(Optional<ulong>)) Parameters Type Name Description Optional < UInt64 > applicationId Optional < UInt64 > assetId Address authAddr Optional < UInt64 > currencyGreaterThan Optional < UInt64 > currencyLessThan Optional < Boolean > includeAll Optional < UInt64 > limit Optional < FixedString128Bytes > next Optional < UInt64 > round Returns Type Description AlgoApiRequest.Sent < AccountsResponse > GetAccountTransactions(Address, DateTime, Optional<UInt64>, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId) Declaration public AlgoApiRequest.Sent<TransactionsResponse> GetAccountTransactions(Address accountAddress, DateTime afterTime = null, Optional<ulong> assetId = default(Optional<ulong>), DateTime beforeTime = null, Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<ulong> limit = default(Optional<ulong>), Optional<ulong> maxRound = default(Optional<ulong>), Optional<ulong> minRound = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>), SignatureType sigType = SignatureType.None, TransactionType txType = TransactionType.None, TransactionId txid = default(TransactionId)) Parameters Type Name Description Address accountAddress DateTime afterTime Optional < UInt64 > assetId DateTime beforeTime Optional < UInt64 > currencyGreaterThan Optional < UInt64 > currencyLessThan Optional < UInt64 > limit Optional < UInt64 > maxRound Optional < UInt64 > minRound Optional < FixedString128Bytes > next String notePrefix Optional < Boolean > rekeyTo Optional < UInt64 > round SignatureType sigType TransactionType txType TransactionId txid Returns Type Description AlgoApiRequest.Sent < TransactionsResponse > GetApplication(UInt64, Optional<Boolean>) Declaration public AlgoApiRequest.Sent<ApplicationResponse> GetApplication(ulong applicationId, Optional<bool> includeAll = default(Optional<bool>)) Parameters Type Name Description UInt64 applicationId Optional < Boolean > includeAll Returns Type Description AlgoApiRequest.Sent < ApplicationResponse > GetApplications(Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>) Declaration public AlgoApiRequest.Sent<ApplicationsResponse> GetApplications(Optional<ulong> applicationId = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>)) Parameters Type Name Description Optional < UInt64 > applicationId Optional < Boolean > includeAll Optional < UInt64 > limit Optional < FixedString128Bytes > next Returns Type Description AlgoApiRequest.Sent < ApplicationsResponse > GetAsset(UInt64, Optional<Boolean>) Declaration public AlgoApiRequest.Sent<AssetResponse> GetAsset(ulong assetId, Optional<bool> includeAll = default(Optional<bool>)) Parameters Type Name Description UInt64 assetId Optional < Boolean > includeAll Returns Type Description AlgoApiRequest.Sent < AssetResponse > GetAssetBalances(UInt64, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>, Optional<UInt64>) Declaration public AlgoApiRequest.Sent<BalancesResponse> GetAssetBalances(ulong assetId, Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), Optional<ulong> round = default(Optional<ulong>)) Parameters Type Name Description UInt64 assetId Optional < UInt64 > currencyGreaterThan Optional < UInt64 > currencyLessThan Optional < Boolean > includeAll Optional < UInt64 > limit Optional < FixedString128Bytes > next Optional < UInt64 > round Returns Type Description AlgoApiRequest.Sent < BalancesResponse > GetAssets(Optional<UInt64>, Address, Optional<Boolean>, Optional<UInt64>, String, Optional<FixedString128Bytes>, String) Declaration public AlgoApiRequest.Sent<AssetsResponse> GetAssets(Optional<ulong> assetId = default(Optional<ulong>), Address creator = default(Address), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), string name = null, Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string unit = null) Parameters Type Name Description Optional < UInt64 > assetId Address creator Optional < Boolean > includeAll Optional < UInt64 > limit String name Optional < FixedString128Bytes > next String unit Returns Type Description AlgoApiRequest.Sent < AssetsResponse > GetAssetTransactions(UInt64, Address, AddressRole, DateTime, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId) Declaration public AlgoApiRequest.Sent<TransactionsResponse> GetAssetTransactions(ulong assetId, Address address = default(Address), AddressRole addressRole = AddressRole.None, DateTime afterTime = null, DateTime beforeTime = null, Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> excludeCloseTo = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<ulong> maxRound = default(Optional<ulong>), Optional<ulong> minRound = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>), SignatureType sigType = SignatureType.None, TransactionType txType = TransactionType.None, TransactionId txid = default(TransactionId)) Parameters Type Name Description UInt64 assetId Address address AddressRole addressRole DateTime afterTime DateTime beforeTime Optional < UInt64 > currencyGreaterThan Optional < UInt64 > currencyLessThan Optional < Boolean > excludeCloseTo Optional < UInt64 > limit Optional < UInt64 > maxRound Optional < UInt64 > minRound Optional < FixedString128Bytes > next String notePrefix Optional < Boolean > rekeyTo Optional < UInt64 > round SignatureType sigType TransactionType txType TransactionId txid Returns Type Description AlgoApiRequest.Sent < TransactionsResponse > GetBlock(UInt64) Declaration public AlgoApiRequest.Sent<Block> GetBlock(ulong round) Parameters Type Name Description UInt64 round Returns Type Description AlgoApiRequest.Sent < Block > GetHealth() Declaration public AlgoApiRequest.Sent<HealthCheck> GetHealth() Returns Type Description AlgoApiRequest.Sent < HealthCheck > GetTransaction(TransactionId) Declaration public AlgoApiRequest.Sent<TransactionResponse> GetTransaction(TransactionId txid) Parameters Type Name Description TransactionId txid Returns Type Description AlgoApiRequest.Sent < TransactionResponse > GetTransactions(Address, AddressRole, DateTime, Optional<UInt64>, Optional<UInt64>, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId) Declaration public AlgoApiRequest.Sent<TransactionsResponse> GetTransactions(Address address = default(Address), AddressRole addressRole = AddressRole.None, DateTime afterTime = null, Optional<ulong> applicationId = default(Optional<ulong>), Optional<ulong> assetId = default(Optional<ulong>), DateTime beforeTime = null, Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> excludeCloseTo = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<ulong> maxRound = default(Optional<ulong>), Optional<ulong> minRound = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>), SignatureType sigType = SignatureType.None, TransactionType txType = TransactionType.None, TransactionId txid = default(TransactionId)) Parameters Type Name Description Address address AddressRole addressRole DateTime afterTime Optional < UInt64 > applicationId Optional < UInt64 > assetId DateTime beforeTime Optional < UInt64 > currencyGreaterThan Optional < UInt64 > currencyLessThan Optional < Boolean > excludeCloseTo Optional < UInt64 > limit Optional < UInt64 > maxRound Optional < UInt64 > minRound Optional < FixedString128Bytes > next String notePrefix Optional < Boolean > rekeyTo Optional < UInt64 > round SignatureType sigType TransactionType txType TransactionId txid Returns Type Description AlgoApiRequest.Sent < TransactionsResponse > Implements IIndexerClient IAlgoApiClient"
  },
  "api/AlgoSdk.InitWalletHandleTokenRequest.html": {
    "href": "api/AlgoSdk.InitWalletHandleTokenRequest.html",
    "title": "Struct InitWalletHandleTokenRequest | Unity Algorand SDK",
    "keywords": "Struct InitWalletHandleTokenRequest Implements IEquatable < InitWalletHandleTokenRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct InitWalletHandleTokenRequest Fields WalletId Declaration public FixedString128Bytes WalletId Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(InitWalletHandleTokenRequest) Declaration public bool Equals(InitWalletHandleTokenRequest other) Parameters Type Name Description InitWalletHandleTokenRequest other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.InitWalletHandleTokenResponse.html": {
    "href": "api/AlgoSdk.InitWalletHandleTokenResponse.html",
    "title": "Struct InitWalletHandleTokenResponse | Unity Algorand SDK",
    "keywords": "Struct InitWalletHandleTokenResponse Implements IEquatable < InitWalletHandleTokenResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct InitWalletHandleTokenResponse Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(InitWalletHandleTokenResponse) Declaration public bool Equals(InitWalletHandleTokenResponse other) Parameters Type Name Description InitWalletHandleTokenResponse other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.IntEnumComparer-1.html": {
    "href": "api/AlgoSdk.IntEnumComparer-1.html",
    "title": "Struct IntEnumComparer<T> | Unity Algorand SDK",
    "keywords": "Struct IntEnumComparer<T> Implements IEqualityComparer <T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct IntEnumComparer<T> where T : Enum Type Parameters Name Description T Fields Instance Declaration public static readonly IntEnumComparer<T> Instance Field Value Type Description IntEnumComparer <T> Methods Equals(T, T) Declaration public static bool Equals(T x, T y) Parameters Type Name Description T x T y Returns Type Description Boolean GetHashCode(T) Declaration public static int GetHashCode(T obj) Parameters Type Name Description T obj Returns Type Description Int32 Implements IEqualityComparer<>"
  },
  "api/AlgoSdk.IntEnumFormatter-1.html": {
    "href": "api/AlgoSdk.IntEnumFormatter-1.html",
    "title": "Class IntEnumFormatter<T> | Unity Algorand SDK",
    "keywords": "Class IntEnumFormatter<T> Inheritance Object IntEnumFormatter<T> Implements IAlgoApiFormatter <T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public sealed class IntEnumFormatter<T> : IAlgoApiFormatter<T> where T : Enum Type Parameters Name Description T Methods Deserialize(ref JsonReader) Declaration public T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration public T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Serialize(ref JsonWriter, T) Declaration public void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref MessagePackWriter, T) Declaration public void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.IPaginatedResponse.html": {
    "href": "api/AlgoSdk.IPaginatedResponse.html",
    "title": "Interface IPaginatedResponse | Unity Algorand SDK",
    "keywords": "Interface IPaginatedResponse Inherited Members IIndexerResponse.CurrentRound Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IPaginatedResponse : IIndexerResponse Properties NextToken Used for pagination, when making another request provide this token with the next parameter. Declaration FixedString128Bytes NextToken { get; } Property Value Type Description FixedString128Bytes"
  },
  "api/AlgoSdk.IPaymentTxn.html": {
    "href": "api/AlgoSdk.IPaymentTxn.html",
    "title": "Interface IPaymentTxn | Unity Algorand SDK",
    "keywords": "Interface IPaymentTxn Inherited Members ITransaction.Fee ITransaction.FirstValidRound ITransaction.GenesisHash ITransaction.LastValidRound ITransaction.Sender ITransaction.TransactionType ITransaction.GenesisId ITransaction.Group ITransaction.Lease ITransaction.Note ITransaction.RekeyTo ITransaction.CopyTo(Transaction) ITransaction.CopyFrom(Transaction) Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IPaymentTxn : ITransaction Properties Amount The total amount to be sent in microAlgos. Declaration ulong Amount { get; set; } Property Value Type Description UInt64 CloseRemainderTo When set, it indicates that the transaction is requesting that the Sender account should be closed, and all remaining funds, after the Fee and Amount are paid, be transferred to this address. Declaration Address CloseRemainderTo { get; set; } Property Value Type Description Address Receiver The address of the account that receives the Amount . Declaration Address Receiver { get; set; } Property Value Type Description Address"
  },
  "api/AlgoSdk.ISignature.html": {
    "href": "api/AlgoSdk.ISignature.html",
    "title": "Interface ISignature | Unity Algorand SDK",
    "keywords": "Interface ISignature Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface ISignature"
  },
  "api/AlgoSdk.ITransaction.html": {
    "href": "api/AlgoSdk.ITransaction.html",
    "title": "Interface ITransaction | Unity Algorand SDK",
    "keywords": "Interface ITransaction Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface ITransaction Properties Fee Paid by the sender to the FeeSink to prevent denial-of-service. The minimum fee on Algorand is currently 1000 microAlgos. Declaration ulong Fee { get; } Property Value Type Description UInt64 FirstValidRound The first round for when the transaction is valid. If the transaction is sent prior to this round it will be rejected by the network. Declaration ulong FirstValidRound { get; } Property Value Type Description UInt64 GenesisHash The hash of the genesis block of the network for which the transaction is valid. Declaration GenesisHash GenesisHash { get; } Property Value Type Description GenesisHash GenesisId The human-readable string that identifies the network for the transaction. The genesis ID is found in the genesis block. Declaration FixedString32Bytes GenesisId { get; } Property Value Type Description FixedString32Bytes Group The group specifies that the transaction is part of a group and, if so, specifies the hash of the transaction group. See GetGroupId(Transaction[]) . Declaration Sha512_256_Hash Group { get; } Property Value Type Description Sha512_256_Hash LastValidRound The ending round for which the transaction is valid. After this round, the transaction will be rejected by the network. Declaration ulong LastValidRound { get; } Property Value Type Description UInt64 Lease A lease enforces mutual exclusion of transactions. If this field is nonzero, then once the transaction is confirmed, it acquires the lease identified by the (Sender, Lease) pair of the transaction until the LastValid round passes. While this transaction possesses the lease, no other transaction specifying this lease can be confirmed. A lease is often used in the context of Algorand Smart Contracts to prevent replay attacks. Declaration Sha512_256_Hash Lease { get; } Property Value Type Description Sha512_256_Hash Note Any data up to 1000 bytes. Declaration byte[] Note { get; } Property Value Type Description Byte [] RekeyTo Specifies the authorized address. This address will be used to authorize all future transactions. Declaration Address RekeyTo { get; } Property Value Type Description Address Sender The address of the account that pays the fee and amount. Declaration Address Sender { get; } Property Value Type Description Address TransactionType Specifies the type of transaction. This value is automatically generated using any of the developer tools. Declaration TransactionType TransactionType { get; } Property Value Type Description TransactionType Methods CopyFrom(Transaction) Copy relevant fields to this transaction. Declaration void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction A raw transaction with all possible transaction fields. CopyTo(ref Transaction) Copy this transactions fields to a Transaction which contains all possible transaction fields. Declaration void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction A raw transaction with all possible transaction fields."
  },
  "api/AlgoSdk.Json.html": {
    "href": "api/AlgoSdk.Json.html",
    "title": "Namespace AlgoSdk.Json | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.Json Classes JsonReadErrorExtensions JsonReadException JsonTokenExtensions UnicodeExtensions Structs JsonReader JsonWriter Enums JsonReadError JsonToken"
  },
  "api/AlgoSdk.Json.JsonReader.html": {
    "href": "api/AlgoSdk.Json.JsonReader.html",
    "title": "Struct JsonReader | Unity Algorand SDK",
    "keywords": "Struct JsonReader Namespace : AlgoSdk.Json Assembly : cs.temp.dll.dll Syntax public ref struct JsonReader Constructors JsonReader(NativeText) Declaration public JsonReader(NativeText text) Parameters Type Name Description NativeText text Properties Char Declaration public readonly char Char { get; } Property Value Type Description Char Position Declaration public int Position { get; set; } Property Value Type Description Int32 Methods Peek() Declaration public JsonToken Peek() Returns Type Description JsonToken Read() Declaration public JsonToken Read() Returns Type Description JsonToken ReadBool(out Boolean) Declaration public JsonReadError ReadBool(out bool value) Parameters Type Name Description Boolean value Returns Type Description JsonReadError ReadNull() Declaration public JsonReadError ReadNull() Returns Type Description JsonReadError ReadNumber(out Byte) Declaration public JsonReadError ReadNumber(out byte value) Parameters Type Name Description Byte value Returns Type Description JsonReadError ReadNumber(out Int16) Declaration public JsonReadError ReadNumber(out short value) Parameters Type Name Description Int16 value Returns Type Description JsonReadError ReadNumber(out Int32) Declaration public JsonReadError ReadNumber(out int value) Parameters Type Name Description Int32 value Returns Type Description JsonReadError ReadNumber(out Int64) Declaration public JsonReadError ReadNumber(out long value) Parameters Type Name Description Int64 value Returns Type Description JsonReadError ReadNumber(out SByte) Declaration public JsonReadError ReadNumber(out sbyte value) Parameters Type Name Description SByte value Returns Type Description JsonReadError ReadNumber(out Single) Declaration public JsonReadError ReadNumber(out float value) Parameters Type Name Description Single value Returns Type Description JsonReadError ReadNumber(out UInt16) Declaration public JsonReadError ReadNumber(out ushort value) Parameters Type Name Description UInt16 value Returns Type Description JsonReadError ReadNumber(out UInt32) Declaration public JsonReadError ReadNumber(out uint value) Parameters Type Name Description UInt32 value Returns Type Description JsonReadError ReadNumber(out UInt64) Declaration public JsonReadError ReadNumber(out ulong value) Parameters Type Name Description UInt64 value Returns Type Description JsonReadError ReadRaw<T>(ref T) Declaration public JsonReadError ReadRaw<T>(ref T value) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T value Returns Type Description JsonReadError Type Parameters Name Description T ReadString(out String) Declaration public JsonReadError ReadString(out string value) Parameters Type Name Description String value Returns Type Description JsonReadError ReadString<T>(ref T) Declaration public JsonReadError ReadString<T>(ref T value) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T value Returns Type Description JsonReadError Type Parameters Name Description T Skip() Declaration public JsonReadError Skip() Returns Type Description JsonReadError SkipBool() Declaration public JsonReadError SkipBool() Returns Type Description JsonReadError SkipNull() Declaration public JsonReadError SkipNull() Returns Type Description JsonReadError SkipString() Declaration public JsonReadError SkipString() Returns Type Description JsonReadError TryRead(JsonToken) Declaration public bool TryRead(JsonToken token) Parameters Type Name Description JsonToken token Returns Type Description Boolean TryReadNull() Declaration public bool TryReadNull() Returns Type Description Boolean"
  },
  "api/AlgoSdk.Json.JsonReadError.html": {
    "href": "api/AlgoSdk.Json.JsonReadError.html",
    "title": "Enum JsonReadError | Unity Algorand SDK",
    "keywords": "Enum JsonReadError Namespace : AlgoSdk.Json Assembly : cs.temp.dll.dll Syntax public enum JsonReadError Fields Name Description IncorrectFormat IncorrectType None Overflow ParseError UnknownError"
  },
  "api/AlgoSdk.Json.JsonReadErrorExtensions.html": {
    "href": "api/AlgoSdk.Json.JsonReadErrorExtensions.html",
    "title": "Class JsonReadErrorExtensions | Unity Algorand SDK",
    "keywords": "Class JsonReadErrorExtensions Inheritance Object JsonReadErrorExtensions Namespace : AlgoSdk.Json Assembly : cs.temp.dll.dll Syntax public static class JsonReadErrorExtensions Methods ThrowIfError(JsonReadError, Char, Int32) Declaration public static void ThrowIfError(this JsonReadError err, char c, int pos) Parameters Type Name Description JsonReadError err Char c Int32 pos"
  },
  "api/AlgoSdk.Json.JsonReadException.html": {
    "href": "api/AlgoSdk.Json.JsonReadException.html",
    "title": "Class JsonReadException | Unity Algorand SDK",
    "keywords": "Class JsonReadException Inheritance Object JsonReadException Namespace : AlgoSdk.Json Assembly : cs.temp.dll.dll Syntax public class JsonReadException : Exception Constructors JsonReadException(JsonReadError, Char, Int32) Declaration public JsonReadException(JsonReadError error, char c, int pos) Parameters Type Name Description JsonReadError error Char c Int32 pos"
  },
  "api/AlgoSdk.Json.JsonToken.html": {
    "href": "api/AlgoSdk.Json.JsonToken.html",
    "title": "Enum JsonToken | Unity Algorand SDK",
    "keywords": "Enum JsonToken Namespace : AlgoSdk.Json Assembly : cs.temp.dll.dll Syntax public enum JsonToken Fields Name Description ArrayBegin ArrayEnd Bool EscapeChar None Null Number ObjectBegin ObjectEnd String"
  },
  "api/AlgoSdk.Json.JsonTokenExtensions.html": {
    "href": "api/AlgoSdk.Json.JsonTokenExtensions.html",
    "title": "Class JsonTokenExtensions | Unity Algorand SDK",
    "keywords": "Class JsonTokenExtensions Inheritance Object JsonTokenExtensions Namespace : AlgoSdk.Json Assembly : cs.temp.dll.dll Syntax public static class JsonTokenExtensions Methods ToJsonToken(Char) Declaration public static JsonToken ToJsonToken(this char c) Parameters Type Name Description Char c Returns Type Description JsonToken ToJsonToken(Unicode.Rune) Declaration public static JsonToken ToJsonToken(this Unicode.Rune rune) Parameters Type Name Description Unicode.Rune rune Returns Type Description JsonToken"
  },
  "api/AlgoSdk.Json.JsonWriter.html": {
    "href": "api/AlgoSdk.Json.JsonWriter.html",
    "title": "Struct JsonWriter | Unity Algorand SDK",
    "keywords": "Struct JsonWriter Implements INativeDisposable Namespace : AlgoSdk.Json Assembly : cs.temp.dll.dll Syntax public struct JsonWriter Constructors JsonWriter(Allocator) Declaration public JsonWriter(Allocator allocator) Parameters Type Name Description Allocator allocator Properties Text Declaration public readonly NativeText Text { get; } Property Value Type Description NativeText Methods BeginArray() Declaration public JsonWriter BeginArray() Returns Type Description JsonWriter BeginNextItem() Declaration public JsonWriter BeginNextItem() Returns Type Description JsonWriter BeginObject() Declaration public JsonWriter BeginObject() Returns Type Description JsonWriter Dispose() Declaration public void Dispose() Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle EndArray() Declaration public JsonWriter EndArray() Returns Type Description JsonWriter EndObject() Declaration public JsonWriter EndObject() Returns Type Description JsonWriter WriteBool(Boolean) Declaration public JsonWriter WriteBool(bool value) Parameters Type Name Description Boolean value Returns Type Description JsonWriter WriteChar(Char) Declaration public JsonWriter WriteChar(char c) Parameters Type Name Description Char c Returns Type Description JsonWriter WriteNull() Declaration public JsonWriter WriteNull() Returns Type Description JsonWriter WriteNumber(Int64) Declaration public JsonWriter WriteNumber(long value) Parameters Type Name Description Int64 value Returns Type Description JsonWriter WriteNumber(Single) Declaration public JsonWriter WriteNumber(float value) Parameters Type Name Description Single value Returns Type Description JsonWriter WriteNumber(UInt64) Declaration public JsonWriter WriteNumber(ulong value) Parameters Type Name Description UInt64 value Returns Type Description JsonWriter WriteObjectKey(String) Declaration public JsonWriter WriteObjectKey(string s) Parameters Type Name Description String s Returns Type Description JsonWriter WriteObjectKey<T>(T) Declaration public JsonWriter WriteObjectKey<T>(T fs) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Returns Type Description JsonWriter Type Parameters Name Description T WriteRaw(NativeArray<Byte>) Declaration public JsonWriter WriteRaw(NativeArray<byte> raw) Parameters Type Name Description NativeArray < Byte > raw Returns Type Description JsonWriter WriteRaw(NativeText) Declaration public JsonWriter WriteRaw(NativeText raw) Parameters Type Name Description NativeText raw Returns Type Description JsonWriter WriteString(String) Declaration public JsonWriter WriteString(string s) Parameters Type Name Description String s Returns Type Description JsonWriter WriteString<T>(T) Declaration public JsonWriter WriteString<T>(T fs) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Returns Type Description JsonWriter Type Parameters Name Description T Implements INativeDisposable"
  },
  "api/AlgoSdk.Json.UnicodeExtensions.html": {
    "href": "api/AlgoSdk.Json.UnicodeExtensions.html",
    "title": "Class UnicodeExtensions | Unity Algorand SDK",
    "keywords": "Class UnicodeExtensions Inheritance Object UnicodeExtensions Namespace : AlgoSdk.Json Assembly : cs.temp.dll.dll Syntax public static class UnicodeExtensions Methods IsWhiteSpaceOrSeparator(Char) Declaration public static bool IsWhiteSpaceOrSeparator(this char c) Parameters Type Name Description Char c Returns Type Description Boolean IsWhiteSpaceOrSeparator(Unicode.Rune) Declaration public static bool IsWhiteSpaceOrSeparator(this Unicode.Rune rune) Parameters Type Name Description Unicode.Rune rune Returns Type Description Boolean ToChar(Unicode.Rune) Declaration public static char ToChar(this Unicode.Rune rune) Parameters Type Name Description Unicode.Rune rune Returns Type Description Char ToRune(Char) Declaration public static Unicode.Rune ToRune(this char c) Parameters Type Name Description Char c Returns Type Description Unicode.Rune"
  },
  "api/AlgoSdk.KeyRegTxn.html": {
    "href": "api/AlgoSdk.KeyRegTxn.html",
    "title": "Struct KeyRegTxn | Unity Algorand SDK",
    "keywords": "Struct KeyRegTxn Implements IKeyRegTxn ITransaction IEquatable < KeyRegTxn > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct KeyRegTxn : IKeyRegTxn, ITransaction Properties AccountParticipation Declaration public AccountParticipation AccountParticipation { get; set; } Property Value Type Description AccountParticipation Fee Declaration public ulong Fee { get; set; } Property Value Type Description UInt64 FirstValidRound Declaration public ulong FirstValidRound { get; set; } Property Value Type Description UInt64 GenesisHash Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisId Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes Group Declaration public Sha512_256_Hash Group { get; set; } Property Value Type Description Sha512_256_Hash LastValidRound Declaration public ulong LastValidRound { get; set; } Property Value Type Description UInt64 Lease Declaration public Sha512_256_Hash Lease { get; set; } Property Value Type Description Sha512_256_Hash NonParticipation Declaration public Optional<bool> NonParticipation { get; set; } Property Value Type Description Optional < Boolean > Note Declaration public byte[] Note { get; set; } Property Value Type Description Byte [] RekeyTo Declaration public Address RekeyTo { get; set; } Property Value Type Description Address SelectionParticipationKey Declaration public VrfPubKey SelectionParticipationKey { get; set; } Property Value Type Description VrfPubKey Sender Declaration public Address Sender { get; set; } Property Value Type Description Address TransactionType Declaration public TransactionType TransactionType { get; } Property Value Type Description TransactionType VoteFirst Declaration public ulong VoteFirst { get; set; } Property Value Type Description UInt64 VoteKeyDilution Declaration public ulong VoteKeyDilution { get; set; } Property Value Type Description UInt64 VoteLast Declaration public ulong VoteLast { get; set; } Property Value Type Description UInt64 VoteParticipationKey Declaration public Ed25519.PublicKey VoteParticipationKey { get; set; } Property Value Type Description Ed25519.PublicKey Methods CopyFrom(Transaction) Declaration public void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction CopyTo(ref Transaction) Declaration public void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction Equals(KeyRegTxn) Declaration public bool Equals(KeyRegTxn other) Parameters Type Name Description KeyRegTxn other Returns Type Description Boolean Implements IKeyRegTxn ITransaction IEquatable<>"
  },
  "api/AlgoSdk.KeyRegTxn.Params.html": {
    "href": "api/AlgoSdk.KeyRegTxn.Params.html",
    "title": "Struct KeyRegTxn.Params | Unity Algorand SDK",
    "keywords": "Struct KeyRegTxn.Params Implements IEquatable < KeyRegTxn.Params > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Params Fields AccountParticipation Declaration public AccountParticipation AccountParticipation Field Value Type Description AccountParticipation NonParticipation Declaration public Optional<bool> NonParticipation Field Value Type Description Optional < Boolean > Properties SelectionParticipationKey Declaration public VrfPubKey SelectionParticipationKey { get; set; } Property Value Type Description VrfPubKey VoteFirst Declaration public ulong VoteFirst { get; set; } Property Value Type Description UInt64 VoteKeyDilution Declaration public ulong VoteKeyDilution { get; set; } Property Value Type Description UInt64 VoteLast Declaration public ulong VoteLast { get; set; } Property Value Type Description UInt64 VoteParticipationKey Declaration public Ed25519.PublicKey VoteParticipationKey { get; set; } Property Value Type Description Ed25519.PublicKey Methods Equals(KeyRegTxn.Params) Declaration public bool Equals(KeyRegTxn.Params other) Parameters Type Name Description KeyRegTxn.Params other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.KmdClient.html": {
    "href": "api/AlgoSdk.KmdClient.html",
    "title": "Struct KmdClient | Unity Algorand SDK",
    "keywords": "Struct KmdClient A client for accessing the kmd service Implements IKmdClient IAlgoApiClient Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct KmdClient : IKmdClient, IAlgoApiClient Remarks The kmd service is responsible for managing keys and wallets Constructors KmdClient(String, Header[]) Create a new kmd client Declaration public KmdClient(string address, params Header[] headers) Parameters Type Name Description String address url of the service, including the port, e.g. \"http://localhost:4001\" Header [] headers extra headers to add to the requests. e.g. (\"x-api-key, my-api-key\") KmdClient(String, String, Header[]) Create a new kmd client Declaration public KmdClient(string address, string token = null, params Header[] headers) Parameters Type Name Description String address url of the service, including the port, e.g. \"http://localhost:4001\" String token token used in authenticating to the service Header [] headers extra headers to add to the requests. e.g. (\"x-api-key, my-api-key\") Properties Address Declaration public readonly string Address { get; } Property Value Type Description String Headers Declaration public readonly Header[] Headers { get; } Property Value Type Description Header [] Token Declaration public readonly string Token { get; } Property Value Type Description String TokenHeader Declaration public readonly string TokenHeader { get; } Property Value Type Description String Methods CreateWallet(PrivateKey, FixedString128Bytes, FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<CreateWalletResponse> CreateWallet(PrivateKey masterDerivationKey, FixedString128Bytes walletDriverName, FixedString128Bytes walletName, FixedString128Bytes walletPassword) Parameters Type Name Description PrivateKey masterDerivationKey FixedString128Bytes walletDriverName FixedString128Bytes walletName FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < CreateWalletResponse > DeleteKey(Address, FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent DeleteKey(Address address, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address address FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent DeleteMultisig(Address, FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent DeleteMultisig(Address address, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address address FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent ExportKey(Address, FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<ExportKeyResponse> ExportKey(Address address, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address address FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < ExportKeyResponse > ExportMasterKey(FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<ExportMasterKeyResponse> ExportMasterKey(FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < ExportMasterKeyResponse > ExportMultisig(Address, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<ExportMultisigResponse> ExportMultisig(Address address, FixedString128Bytes walletHandleToken) Parameters Type Name Description Address address FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < ExportMultisigResponse > GenerateKey(FixedString128Bytes, Optional<Boolean>) Declaration public AlgoApiRequest.Sent<GenerateKeyResponse> GenerateKey(FixedString128Bytes walletHandleToken, Optional<bool> displayMnemonic = default(Optional<bool>)) Parameters Type Name Description FixedString128Bytes walletHandleToken Optional < Boolean > displayMnemonic Returns Type Description AlgoApiRequest.Sent < GenerateKeyResponse > GetSwaggerSpec() Declaration public AlgoApiRequest.Sent<AlgoApiObject> GetSwaggerSpec() Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > ImportKey(PrivateKey, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<ImportKeyResponse> ImportKey(PrivateKey privateKey, FixedString128Bytes walletHandleToken) Parameters Type Name Description PrivateKey privateKey FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < ImportKeyResponse > ImportMultisig(Ed25519.PublicKey[], Byte, FixedString128Bytes, Byte) Declaration public AlgoApiRequest.Sent<ImportMultisigResponse> ImportMultisig(Ed25519.PublicKey[] publicKeys, byte threshold, FixedString128Bytes walletHandleToken, byte version = 1) Parameters Type Name Description Ed25519.PublicKey [] publicKeys Byte threshold FixedString128Bytes walletHandleToken Byte version Returns Type Description AlgoApiRequest.Sent < ImportMultisigResponse > InitWalletHandleToken(FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<InitWalletHandleTokenResponse> InitWalletHandleToken(FixedString128Bytes walletId, FixedString128Bytes walletPassword) Parameters Type Name Description FixedString128Bytes walletId FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < InitWalletHandleTokenResponse > ListKeys(FixedString128Bytes) Declaration public AlgoApiRequest.Sent<ListKeysResponse> ListKeys(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < ListKeysResponse > ListMultisig(FixedString128Bytes) Declaration public AlgoApiRequest.Sent<ListMultisigResponse> ListMultisig(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < ListMultisigResponse > ListWallets() Declaration public AlgoApiRequest.Sent<ListWalletsResponse> ListWallets() Returns Type Description AlgoApiRequest.Sent < ListWalletsResponse > ReleaseWalletHandleToken(FixedString128Bytes) Declaration public AlgoApiRequest.Sent ReleaseWalletHandleToken(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent RenameWallet(FixedString128Bytes, FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<RenameWalletResponse> RenameWallet(FixedString128Bytes walletId, FixedString128Bytes newName, FixedString128Bytes walletPassword) Parameters Type Name Description FixedString128Bytes walletId FixedString128Bytes newName FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < RenameWalletResponse > RenewWalletHandleToken(FixedString128Bytes) Declaration public AlgoApiRequest.Sent<RenewWalletHandleTokenResponse> RenewWalletHandleToken(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < RenewWalletHandleTokenResponse > SignMultisig(Multisig, Ed25519.PublicKey, Byte[], FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<SignMultisigResponse> SignMultisig(Multisig msig, Ed25519.PublicKey publicKey, byte[] transactionData, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Multisig msig Ed25519.PublicKey publicKey Byte [] transactionData FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignMultisigResponse > SignProgram(Address, Byte[], FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<SignProgramResponse> SignProgram(Address account, byte[] programData, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address account Byte [] programData FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignProgramResponse > SignProgramMultisig(Address, Byte[], Multisig, Ed25519.PublicKey, FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<SignProgramMultisigResponse> SignProgramMultisig(Address msigAccount, byte[] programData, Multisig msig, Ed25519.PublicKey publicKey, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address msigAccount Byte [] programData Multisig msig Ed25519.PublicKey publicKey FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignProgramMultisigResponse > SignTransaction(Address, Byte[], FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<SignTransactionResponse> SignTransaction(Address account, byte[] transactionData, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address account Byte [] transactionData FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignTransactionResponse > Versions() Declaration public AlgoApiRequest.Sent<VersionsResponse> Versions() Returns Type Description AlgoApiRequest.Sent < VersionsResponse > WalletInfo(FixedString128Bytes) Declaration public AlgoApiRequest.Sent<WalletInfoResponse> WalletInfo(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < WalletInfoResponse > Implements IKmdClient IAlgoApiClient"
  },
  "api/AlgoSdk.LedgerSupply.html": {
    "href": "api/AlgoSdk.LedgerSupply.html",
    "title": "Struct LedgerSupply | Unity Algorand SDK",
    "keywords": "Struct LedgerSupply Supply represents the current supply of MicroAlgos in the system. Implements IEquatable < LedgerSupply > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct LedgerSupply Fields OnlineMoney Declaration public ulong OnlineMoney Field Value Type Description UInt64 Round Declaration public ulong Round Field Value Type Description UInt64 TotalMoney Declaration public ulong TotalMoney Field Value Type Description UInt64 Methods Equals(LedgerSupply) Declaration public bool Equals(LedgerSupply other) Parameters Type Name Description LedgerSupply other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.ListKeysRequest.html": {
    "href": "api/AlgoSdk.ListKeysRequest.html",
    "title": "Struct ListKeysRequest | Unity Algorand SDK",
    "keywords": "Struct ListKeysRequest Implements IEquatable < ListKeysRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ListKeysRequest Fields WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(ListKeysRequest) Declaration public bool Equals(ListKeysRequest other) Parameters Type Name Description ListKeysRequest other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.ListKeysResponse.html": {
    "href": "api/AlgoSdk.ListKeysResponse.html",
    "title": "Struct ListKeysResponse | Unity Algorand SDK",
    "keywords": "Struct ListKeysResponse Implements IEquatable < ListKeysResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ListKeysResponse Fields Addresses Declaration public Address[] Addresses Field Value Type Description Address [] Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String Methods Equals(ListKeysResponse) Declaration public bool Equals(ListKeysResponse other) Parameters Type Name Description ListKeysResponse other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.ListMultisigRequest.html": {
    "href": "api/AlgoSdk.ListMultisigRequest.html",
    "title": "Struct ListMultisigRequest | Unity Algorand SDK",
    "keywords": "Struct ListMultisigRequest Implements IEquatable < ListMultisigRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ListMultisigRequest Fields WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(ListMultisigRequest) Declaration public bool Equals(ListMultisigRequest other) Parameters Type Name Description ListMultisigRequest other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.ListMultisigResponse.html": {
    "href": "api/AlgoSdk.ListMultisigResponse.html",
    "title": "Struct ListMultisigResponse | Unity Algorand SDK",
    "keywords": "Struct ListMultisigResponse Implements IEquatable < ListMultisigResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ListMultisigResponse Fields Addresses Declaration public Address[] Addresses Field Value Type Description Address [] Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String Methods Equals(ListMultisigResponse) Declaration public bool Equals(ListMultisigResponse other) Parameters Type Name Description ListMultisigResponse other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.ListWalletsResponse.html": {
    "href": "api/AlgoSdk.ListWalletsResponse.html",
    "title": "Struct ListWalletsResponse | Unity Algorand SDK",
    "keywords": "Struct ListWalletsResponse Implements IEquatable < ListWalletsResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ListWalletsResponse Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String Wallets Declaration public Wallet[] Wallets Field Value Type Description Wallet [] Methods Equals(ListWalletsResponse) Declaration public bool Equals(ListWalletsResponse other) Parameters Type Name Description ListWalletsResponse other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.Logic.html": {
    "href": "api/AlgoSdk.Logic.html",
    "title": "Class Logic | Unity Algorand SDK",
    "keywords": "Class Logic Inheritance Object Logic Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class Logic Fields SigningPrefix Declaration public static readonly byte[] SigningPrefix Field Value Type Description Byte [] Methods GetAddress(Byte[]) Return the Address of a program. Declaration public static Address GetAddress(byte[] program) Parameters Type Name Description Byte [] program The stateful or stateless program to get the address of. Returns Type Description Address An Address for a program. GetSignBytes(Byte[], Allocator) Get a message used for signing. Declaration public static NativeByteArray GetSignBytes(byte[] program, Allocator allocator) Parameters Type Name Description Byte [] program The program that will be signed. Allocator allocator Defines the memory lifetime used for , which must be disposed. Returns Type Description NativeByteArray A . The caller must manage its lifetime. Sign(Byte[], Multisig, PrivateKey) Signs the program with the msig and returns a signature and its index. Declaration public static (Sig, int) Sign(byte[] program, Multisig msig, PrivateKey privateKey) Parameters Type Name Description Byte [] program The program to sign. Multisig msig A Multisig that contains the matching privateKey . PrivateKey privateKey The private key to sign with. Its corresponding must be inside of msig . Returns Type Description (T1, T2) < Sig , Int32 > A tuple of the Sig from signing the program and its index in the msig Sign(Byte[], SecretKeyHandle) Signs the given program and returns the signature. Declaration public static Sig Sign(byte[] program, SecretKeyHandle secretKey) Parameters Type Name Description Byte [] program Program to sign SecretKeyHandle secretKey Key to sign this program with. Returns Type Description Sig Sig"
  },
  "api/AlgoSdk.LogicSig.html": {
    "href": "api/AlgoSdk.LogicSig.html",
    "title": "Struct LogicSig | Unity Algorand SDK",
    "keywords": "Struct LogicSig Implements ISignature IEquatable < LogicSig > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct LogicSig : ISignature Fields Args Declaration public FixedList128Bytes<byte>[] Args Field Value Type Description FixedList128Bytes < Byte >[] Multisig Declaration public Multisig Multisig Field Value Type Description Multisig Program Declaration public byte[] Program Field Value Type Description Byte [] Sig Declaration public Sig Sig Field Value Type Description Sig Methods Equals(LogicSig) Declaration public bool Equals(LogicSig other) Parameters Type Name Description LogicSig other Returns Type Description Boolean GetAddress() Get the Address of this logicsig. Declaration public Address GetAddress() Returns Type Description Address An Address from the checksum of the logic sig. IsValid(Address) Determines if transactions from the sender can by signed by this LogicSig . Declaration public bool IsValid(Address sender) Parameters Type Name Description Address sender The Sender Returns Type Description Boolean true if this LogicSig can sign for the sender. Implements ISignature IEquatable<>"
  },
  "api/AlgoSdk.LowLevel.ByteArray.html": {
    "href": "api/AlgoSdk.LowLevel.ByteArray.html",
    "title": "Class ByteArray | Unity Algorand SDK",
    "keywords": "Class ByteArray Inheritance Object ByteArray Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public static class ByteArray Methods CheckElementAccess(Int32, Int32) Declaration public static void CheckElementAccess(int index, int length) Parameters Type Name Description Int32 index Int32 length CopyFrom<T>(ref T, NativeArray<Byte>, Int32, Int32) Declaration public static void CopyFrom<T>(this ref T target, NativeArray<byte> source, int start, int length = 2147483647) where T : struct, IByteArray Parameters Type Name Description T target NativeArray < Byte > source Int32 start Int32 length Type Parameters Name Description T CopyFrom<T>(ref T, Byte[], Int32, Int32) Declaration public static void CopyFrom<T>(this ref T target, byte[] source, int start, int length = 2147483647) where T : struct, IByteArray Parameters Type Name Description T target Byte [] source Int32 start Int32 length Type Parameters Name Description T CopyFrom<T, U>(ref T, U, Int32, Int32) Declaration public static void CopyFrom<T, U>(this ref T target, U source, int start, int length = 2147483647) where T : struct, IByteArray where U : struct, IByteArray Parameters Type Name Description T target U source Int32 start Int32 length Type Parameters Name Description T U CopyTo<T, U>(T, ref U) Declaration public static void CopyTo<T, U>(this T from, ref U to) where T : struct, IByteArray where U : struct, IByteArray Parameters Type Name Description T from U to Type Parameters Name Description T U CopyTo<T, U>(T, ref U, Int32, Int32) Declaration public static void CopyTo<T, U>(this T source, ref U target, int start, int length = 2147483647) where T : struct, IByteArray where U : struct, IByteArray Parameters Type Name Description T source U target Int32 start Int32 length Type Parameters Name Description T U Equals<TByteArray>(TByteArray, TByteArray) Declaration public static bool Equals<TByteArray>(TByteArray x, TByteArray y) where TByteArray : struct, IByteArray Parameters Type Name Description TByteArray x TByteArray y Returns Type Description Boolean Type Parameters Name Description TByteArray Equals<TByteArray>(TByteArray, Object) Declaration public static bool Equals<TByteArray>(TByteArray x, object obj) where TByteArray : struct, IByteArray Parameters Type Name Description TByteArray x Object obj Returns Type Description Boolean Type Parameters Name Description TByteArray EqualsOther<T, U>(T, U) Declaration public static bool EqualsOther<T, U>(T x, U y) where T : struct, IByteArray where U : struct, IByteArray Parameters Type Name Description T x U y Returns Type Description Boolean Type Parameters Name Description T U FromBase64<TByteArray>(String) Declaration public static TByteArray FromBase64<TByteArray>(string b64) where TByteArray : struct, IByteArray Parameters Type Name Description String b64 Returns Type Description TByteArray Type Parameters Name Description TByteArray GetByteAt<TByteArray>(ref TByteArray, Int32) Declaration public static byte GetByteAt<TByteArray>(this ref TByteArray bytes, int index) where TByteArray : struct, IByteArray Parameters Type Name Description TByteArray bytes Int32 index Returns Type Description Byte Type Parameters Name Description TByteArray GetHashCode<TByteArray>(TByteArray) Declaration public static int GetHashCode<TByteArray>(TByteArray bytes) where TByteArray : struct, IByteArray Parameters Type Name Description TByteArray bytes Returns Type Description Int32 Type Parameters Name Description TByteArray ReadByteAt<TByteArray>(TByteArray, Int32) Declaration public static byte ReadByteAt<TByteArray>(TByteArray bytes, int index) where TByteArray : struct, IByteArray Parameters Type Name Description TByteArray bytes Int32 index Returns Type Description Byte Type Parameters Name Description TByteArray SetByteAt<TByteArray>(ref TByteArray, Int32, Byte) Declaration public static void SetByteAt<TByteArray>(this ref TByteArray bytes, int index, byte value) where TByteArray : struct, IByteArray Parameters Type Name Description TByteArray bytes Int32 index Byte value Type Parameters Name Description TByteArray ToArray<TByteArray>(TByteArray) Declaration public static byte[] ToArray<TByteArray>(this TByteArray bytes) where TByteArray : struct, IArray<byte> Parameters Type Name Description TByteArray bytes Returns Type Description Byte [] Type Parameters Name Description TByteArray ToBase64<TByteArray>(TByteArray) Declaration public static string ToBase64<TByteArray>(this TByteArray bytes) where TByteArray : struct, IArray<byte> Parameters Type Name Description TByteArray bytes Returns Type Description String Type Parameters Name Description TByteArray ToNativeArray<TByteArray>(TByteArray, Allocator) Declaration public static NativeArray<byte> ToNativeArray<TByteArray>(this TByteArray bytes, Allocator allocator) where TByteArray : struct, IArray<byte> Parameters Type Name Description TByteArray bytes Allocator allocator Returns Type Description NativeArray < Byte > Type Parameters Name Description TByteArray"
  },
  "api/AlgoSdk.LowLevel.ByteArrayComparer-1.html": {
    "href": "api/AlgoSdk.LowLevel.ByteArrayComparer-1.html",
    "title": "Struct ByteArrayComparer<T> | Unity Algorand SDK",
    "keywords": "Struct ByteArrayComparer<T> Implements IEqualityComparer <T> Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public struct ByteArrayComparer<T> where T : struct, IByteArray Type Parameters Name Description T Methods Equals(T, T) Declaration public static bool Equals(T x, T y) Parameters Type Name Description T x T y Returns Type Description Boolean GetHashCode(T) Declaration public static int GetHashCode(T obj) Parameters Type Name Description T obj Returns Type Description Int32 Implements IEqualityComparer<>"
  },
  "api/AlgoSdk.LowLevel.FixedBytes128.html": {
    "href": "api/AlgoSdk.LowLevel.FixedBytes128.html",
    "title": "Struct FixedBytes128 | Unity Algorand SDK",
    "keywords": "Struct FixedBytes128 Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public struct FixedBytes128 Fields byte00126 Declaration public byte byte00126 Field Value Type Description Byte byte00127 Declaration public byte byte00127 Field Value Type Description Byte offset0000 Declaration public FixedBytes126 offset0000 Field Value Type Description FixedBytes126"
  },
  "api/AlgoSdk.LowLevel.FixedBytes32.html": {
    "href": "api/AlgoSdk.LowLevel.FixedBytes32.html",
    "title": "Struct FixedBytes32 | Unity Algorand SDK",
    "keywords": "Struct FixedBytes32 Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public struct FixedBytes32 Fields byte0030 Declaration public byte byte0030 Field Value Type Description Byte byte0031 Declaration public byte byte0031 Field Value Type Description Byte offset0000 Declaration public FixedBytes30 offset0000 Field Value Type Description FixedBytes30"
  },
  "api/AlgoSdk.LowLevel.FixedBytes64.html": {
    "href": "api/AlgoSdk.LowLevel.FixedBytes64.html",
    "title": "Struct FixedBytes64 | Unity Algorand SDK",
    "keywords": "Struct FixedBytes64 Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public struct FixedBytes64 Fields byte0062 Declaration public byte byte0062 Field Value Type Description Byte byte0063 Declaration public byte byte0063 Field Value Type Description Byte offset0000 Declaration public FixedBytes62 offset0000 Field Value Type Description FixedBytes62"
  },
  "api/AlgoSdk.LowLevel.html": {
    "href": "api/AlgoSdk.LowLevel.html",
    "title": "Namespace AlgoSdk.LowLevel | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.LowLevel Classes ByteArray NativeArrayExtensions NativeArrayUtil Structs ByteArrayComparer<T> FixedBytes128 FixedBytes32 FixedBytes64 NativeByteArray A wrapper around that implements IByteArray . Interfaces IArray<T> IByteArray IContiguousArray<T>"
  },
  "api/AlgoSdk.LowLevel.IArray-1.html": {
    "href": "api/AlgoSdk.LowLevel.IArray-1.html",
    "title": "Interface IArray<T> | Unity Algorand SDK",
    "keywords": "Interface IArray<T> Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public interface IArray<T> Type Parameters Name Description T Properties Item[Int32] Declaration T this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description T Length Declaration int Length { get; } Property Value Type Description Int32"
  },
  "api/AlgoSdk.LowLevel.IByteArray.html": {
    "href": "api/AlgoSdk.LowLevel.IByteArray.html",
    "title": "Interface IByteArray | Unity Algorand SDK",
    "keywords": "Interface IByteArray Inherited Members IContiguousArray<Byte>.GetUnsafePtr() IArray<Byte>.Length IArray<Byte>.Item[Int32] Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public interface IByteArray : IContiguousArray<byte>, IArray<byte>"
  },
  "api/AlgoSdk.LowLevel.IContiguousArray-1.html": {
    "href": "api/AlgoSdk.LowLevel.IContiguousArray-1.html",
    "title": "Interface IContiguousArray<T> | Unity Algorand SDK",
    "keywords": "Interface IContiguousArray<T> Inherited Members IArray<T>.Length IArray<T>.Item[Int32] Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public interface IContiguousArray<T> : IArray<T> Type Parameters Name Description T Methods GetUnsafePtr() Declaration void *GetUnsafePtr() Returns Type Description Void *"
  },
  "api/AlgoSdk.LowLevel.NativeArrayExtensions.html": {
    "href": "api/AlgoSdk.LowLevel.NativeArrayExtensions.html",
    "title": "Class NativeArrayExtensions | Unity Algorand SDK",
    "keywords": "Class NativeArrayExtensions Inheritance Object NativeArrayExtensions Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public static class NativeArrayExtensions Methods AsUtf8Text(NativeArray<Byte>, Allocator) Declaration public static NativeText AsUtf8Text(this NativeArray<byte> rawBytes, Allocator allocator) Parameters Type Name Description NativeArray < Byte > rawBytes Allocator allocator Returns Type Description NativeText AsUtf8Text(NativeArray<Byte>.ReadOnly, Allocator) Declaration public static NativeText AsUtf8Text(this NativeArray<byte>.ReadOnly rawBytes, Allocator allocator) Parameters Type Name Description NativeArray.ReadOnly <> rawBytes Allocator allocator Returns Type Description NativeText"
  },
  "api/AlgoSdk.LowLevel.NativeArrayUtil.html": {
    "href": "api/AlgoSdk.LowLevel.NativeArrayUtil.html",
    "title": "Class NativeArrayUtil | Unity Algorand SDK",
    "keywords": "Class NativeArrayUtil Inheritance Object NativeArrayUtil Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public static class NativeArrayUtil Methods ConcatAll(Byte[][], Allocator) Declaration public static NativeArray<byte> ConcatAll(byte[][] byteArrays, Allocator allocator) Parameters Type Name Description Byte [][] byteArrays Allocator allocator Returns Type Description NativeArray < Byte >"
  },
  "api/AlgoSdk.LowLevel.NativeByteArray.html": {
    "href": "api/AlgoSdk.LowLevel.NativeByteArray.html",
    "title": "Struct NativeByteArray | Unity Algorand SDK",
    "keywords": "Struct NativeByteArray A wrapper around that implements IByteArray . Implements IByteArray IContiguousArray < Byte > IArray < Byte > IEquatable < NativeByteArray > INativeDisposable Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public struct NativeByteArray : IByteArray, IContiguousArray<byte>, IArray<byte> Constructors NativeByteArray(NativeArray<Byte>) Declaration public NativeByteArray(NativeArray<byte> data) Parameters Type Name Description NativeArray < Byte > data NativeByteArray(Byte[], Allocator) Declaration public NativeByteArray(byte[] arr, Allocator allocator) Parameters Type Name Description Byte [] arr Allocator allocator NativeByteArray(Int32, Allocator) Declaration public NativeByteArray(int capacity, Allocator allocator) Parameters Type Name Description Int32 capacity Allocator allocator Properties Data Declaration public readonly NativeArray<byte>.ReadOnly Data { get; } Property Value Type Description NativeArray.ReadOnly <> Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public readonly int Length { get; } Property Value Type Description Int32 Methods Dispose() Declaration public void Dispose() Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle Equals(NativeByteArray) Declaration public bool Equals(NativeByteArray other) Parameters Type Name Description NativeByteArray other Returns Type Description Boolean GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void * Implements IByteArray IContiguousArray<T> IArray<T> IEquatable<> INativeDisposable"
  },
  "api/AlgoSdk.MerkleProof.html": {
    "href": "api/AlgoSdk.MerkleProof.html",
    "title": "Struct MerkleProof | Unity Algorand SDK",
    "keywords": "Struct MerkleProof Proof of transaction in a block. Implements IEquatable < MerkleProof > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct MerkleProof Fields Proof Merkle proof of transaction membership. Declaration public string Proof Field Value Type Description String SignedTransactionHash Hash of SignedTxnInBlock for verifying proof. Declaration public string SignedTransactionHash Field Value Type Description String TransactionIndex Index of the transaction in the block's payset. Declaration public ulong TransactionIndex Field Value Type Description UInt64 Methods Equals(MerkleProof) Declaration public bool Equals(MerkleProof other) Parameters Type Name Description MerkleProof other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.MessagePack.BinaryUtils.html": {
    "href": "api/AlgoSdk.MessagePack.BinaryUtils.html",
    "title": "Class BinaryUtils | Unity Algorand SDK",
    "keywords": "Class BinaryUtils Inheritance Object BinaryUtils Namespace : AlgoSdk.MessagePack Assembly : cs.temp.dll.dll Syntax public static class BinaryUtils Methods ReverseEndianness(Byte) Declaration public static byte ReverseEndianness(byte value) Parameters Type Name Description Byte value Returns Type Description Byte ReverseEndianness(Int16) Declaration public static short ReverseEndianness(short value) Parameters Type Name Description Int16 value Returns Type Description Int16 ReverseEndianness(Int32) Declaration public static int ReverseEndianness(int value) Parameters Type Name Description Int32 value Returns Type Description Int32 ReverseEndianness(Int64) Declaration public static long ReverseEndianness(long value) Parameters Type Name Description Int64 value Returns Type Description Int64 ReverseEndianness(SByte) Declaration public static sbyte ReverseEndianness(sbyte value) Parameters Type Name Description SByte value Returns Type Description SByte ReverseEndianness(UInt16) Declaration public static ushort ReverseEndianness(ushort value) Parameters Type Name Description UInt16 value Returns Type Description UInt16 ReverseEndianness(UInt32) Declaration public static uint ReverseEndianness(uint value) Parameters Type Name Description UInt32 value Returns Type Description UInt32 ReverseEndianness(UInt64) Declaration public static ulong ReverseEndianness(ulong value) Parameters Type Name Description UInt64 value Returns Type Description UInt64"
  },
  "api/AlgoSdk.MessagePack.ExtensionHeader.html": {
    "href": "api/AlgoSdk.MessagePack.ExtensionHeader.html",
    "title": "Struct ExtensionHeader | Unity Algorand SDK",
    "keywords": "Struct ExtensionHeader Implements IEquatable < ExtensionHeader > Namespace : AlgoSdk.MessagePack Assembly : cs.temp.dll.dll Syntax public struct ExtensionHeader Constructors ExtensionHeader(SByte, Int32) Declaration public ExtensionHeader(sbyte typeCode, int length) Parameters Type Name Description SByte typeCode Int32 length ExtensionHeader(SByte, UInt32) Declaration public ExtensionHeader(sbyte typeCode, uint length) Parameters Type Name Description SByte typeCode UInt32 length Fields Length Declaration public readonly uint Length Field Value Type Description UInt32 TypeCode Declaration public readonly sbyte TypeCode Field Value Type Description SByte Methods Equals(ExtensionHeader) Declaration public bool Equals(ExtensionHeader other) Parameters Type Name Description ExtensionHeader other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.MessagePack.html": {
    "href": "api/AlgoSdk.MessagePack.html",
    "title": "Namespace AlgoSdk.MessagePack | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.MessagePack Classes BinaryUtils MessagePackCode MessagePackRange ReservedMessagePackExtensionTypeCode Structs ExtensionHeader MessagePackReader MessagePackWriter Enums MessagePackType"
  },
  "api/AlgoSdk.MessagePack.MessagePackCode.html": {
    "href": "api/AlgoSdk.MessagePack.MessagePackCode.html",
    "title": "Class MessagePackCode | Unity Algorand SDK",
    "keywords": "Class MessagePackCode Inheritance Object MessagePackCode Namespace : AlgoSdk.MessagePack Assembly : cs.temp.dll.dll Syntax public static class MessagePackCode Fields Array16 Declaration public const byte Array16 = 220 Field Value Type Description Byte Array32 Declaration public const byte Array32 = 221 Field Value Type Description Byte Bin16 Declaration public const byte Bin16 = 197 Field Value Type Description Byte Bin32 Declaration public const byte Bin32 = 198 Field Value Type Description Byte Bin8 Declaration public const byte Bin8 = 196 Field Value Type Description Byte Ext16 Declaration public const byte Ext16 = 200 Field Value Type Description Byte Ext32 Declaration public const byte Ext32 = 201 Field Value Type Description Byte Ext8 Declaration public const byte Ext8 = 199 Field Value Type Description Byte False Declaration public const byte False = 194 Field Value Type Description Byte FixExt1 Declaration public const byte FixExt1 = 212 Field Value Type Description Byte FixExt16 Declaration public const byte FixExt16 = 216 Field Value Type Description Byte FixExt2 Declaration public const byte FixExt2 = 213 Field Value Type Description Byte FixExt4 Declaration public const byte FixExt4 = 214 Field Value Type Description Byte FixExt8 Declaration public const byte FixExt8 = 215 Field Value Type Description Byte Float32 Declaration public const byte Float32 = 202 Field Value Type Description Byte Float64 Declaration public const byte Float64 = 203 Field Value Type Description Byte Int16 Declaration public const byte Int16 = 209 Field Value Type Description Byte Int32 Declaration public const byte Int32 = 210 Field Value Type Description Byte Int64 Declaration public const byte Int64 = 211 Field Value Type Description Byte Int8 Declaration public const byte Int8 = 208 Field Value Type Description Byte Map16 Declaration public const byte Map16 = 222 Field Value Type Description Byte Map32 Declaration public const byte Map32 = 223 Field Value Type Description Byte MaxFixArray Declaration public const byte MaxFixArray = 159 Field Value Type Description Byte MaxFixInt Declaration public const byte MaxFixInt = 127 Field Value Type Description Byte MaxFixMap Declaration public const byte MaxFixMap = 143 Field Value Type Description Byte MaxFixStr Declaration public const byte MaxFixStr = 191 Field Value Type Description Byte MaxNegativeFixInt Declaration public const byte MaxNegativeFixInt = 255 Field Value Type Description Byte MinFixArray Declaration public const byte MinFixArray = 144 Field Value Type Description Byte MinFixInt Declaration public const byte MinFixInt = 0 Field Value Type Description Byte MinFixMap Declaration public const byte MinFixMap = 128 Field Value Type Description Byte MinFixStr Declaration public const byte MinFixStr = 160 Field Value Type Description Byte MinNegativeFixInt Declaration public const byte MinNegativeFixInt = 224 Field Value Type Description Byte NeverUsed Declaration public const byte NeverUsed = 193 Field Value Type Description Byte Nil Declaration public const byte Nil = 192 Field Value Type Description Byte Str16 Declaration public const byte Str16 = 218 Field Value Type Description Byte Str32 Declaration public const byte Str32 = 219 Field Value Type Description Byte Str8 Declaration public const byte Str8 = 217 Field Value Type Description Byte True Declaration public const byte True = 195 Field Value Type Description Byte UInt16 Declaration public const byte UInt16 = 205 Field Value Type Description Byte UInt32 Declaration public const byte UInt32 = 206 Field Value Type Description Byte UInt64 Declaration public const byte UInt64 = 207 Field Value Type Description Byte UInt8 Declaration public const byte UInt8 = 204 Field Value Type Description Byte Methods ToFormatName(Byte) Declaration public static string ToFormatName(byte code) Parameters Type Name Description Byte code Returns Type Description String ToMessagePackType(Byte) Declaration public static MessagePackType ToMessagePackType(this byte code) Parameters Type Name Description Byte code Returns Type Description MessagePackType"
  },
  "api/AlgoSdk.MessagePack.MessagePackRange.html": {
    "href": "api/AlgoSdk.MessagePack.MessagePackRange.html",
    "title": "Class MessagePackRange | Unity Algorand SDK",
    "keywords": "Class MessagePackRange Inheritance Object MessagePackRange Namespace : AlgoSdk.MessagePack Assembly : cs.temp.dll.dll Syntax public static class MessagePackRange Fields MaxFixArrayCount Declaration public const int MaxFixArrayCount = 15 Field Value Type Description Int32 MaxFixMapCount Declaration public const int MaxFixMapCount = 15 Field Value Type Description Int32 MaxFixNegativeInt Declaration public const int MaxFixNegativeInt = -1 Field Value Type Description Int32 MaxFixPositiveInt Declaration public const int MaxFixPositiveInt = 127 Field Value Type Description Int32 MaxFixStringLength Declaration public const int MaxFixStringLength = 31 Field Value Type Description Int32 MinFixNegativeInt Declaration public const int MinFixNegativeInt = -32 Field Value Type Description Int32 MinFixStringLength Declaration public const int MinFixStringLength = 0 Field Value Type Description Int32"
  },
  "api/AlgoSdk.MessagePack.MessagePackReader.html": {
    "href": "api/AlgoSdk.MessagePack.MessagePackReader.html",
    "title": "Struct MessagePackReader | Unity Algorand SDK",
    "keywords": "Struct MessagePackReader Namespace : AlgoSdk.MessagePack Assembly : cs.temp.dll.dll Syntax public ref struct MessagePackReader Constructors MessagePackReader(NativeArray<Byte>) Declaration public MessagePackReader(NativeArray<byte> data) Parameters Type Name Description NativeArray < Byte > data Properties Position Declaration public int Position { get; set; } Property Value Type Description Int32 Methods Peek() Declaration public byte Peek() Returns Type Description Byte ReadArrayHeader() Declaration public int ReadArrayHeader() Returns Type Description Int32 ReadBool() Declaration public bool ReadBool() Returns Type Description Boolean ReadByte() Declaration public byte ReadByte() Returns Type Description Byte ReadBytes() Declaration public NativeSlice<byte> ReadBytes() Returns Type Description NativeSlice < Byte > ReadBytes<T>() Declaration public T ReadBytes<T>() where T : struct, IByteArray Returns Type Description T Type Parameters Name Description T ReadInt16() Declaration public short ReadInt16() Returns Type Description Int16 ReadInt32() Declaration public int ReadInt32() Returns Type Description Int32 ReadInt64() Declaration public long ReadInt64() Returns Type Description Int64 ReadInt8() Declaration public sbyte ReadInt8() Returns Type Description SByte ReadMapHeader() Declaration public int ReadMapHeader() Returns Type Description Int32 ReadRaw(NativeList<Byte>) Declaration public void ReadRaw(NativeList<byte> bytes) Parameters Type Name Description NativeList < Byte > bytes ReadSByte() Declaration public sbyte ReadSByte() Returns Type Description SByte ReadString(out String) Declaration public void ReadString(out string s) Parameters Type Name Description String s ReadString<T>(ref T) Declaration public void ReadString<T>(ref T fs) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Type Parameters Name Description T ReadUInt16() Declaration public ushort ReadUInt16() Returns Type Description UInt16 ReadUInt32() Declaration public uint ReadUInt32() Returns Type Description UInt32 ReadUInt64() Declaration public ulong ReadUInt64() Returns Type Description UInt64 ReadUInt8() Declaration public byte ReadUInt8() Returns Type Description Byte Skip() Declaration public void Skip() TryPeek(out Byte) Declaration public bool TryPeek(out byte code) Parameters Type Name Description Byte code Returns Type Description Boolean TryRead(out Byte) Declaration public bool TryRead(out byte code) Parameters Type Name Description Byte code Returns Type Description Boolean TryRead(out SByte) Declaration public bool TryRead(out sbyte value) Parameters Type Name Description SByte value Returns Type Description Boolean TryReadArrayHeader(out Int32) Declaration public bool TryReadArrayHeader(out int count) Parameters Type Name Description Int32 count Returns Type Description Boolean TryReadBigEndian(out Int16) Declaration public bool TryReadBigEndian(out short value) Parameters Type Name Description Int16 value Returns Type Description Boolean TryReadBigEndian(out Int32) Declaration public bool TryReadBigEndian(out int value) Parameters Type Name Description Int32 value Returns Type Description Boolean TryReadBigEndian(out Int64) Declaration public bool TryReadBigEndian(out long value) Parameters Type Name Description Int64 value Returns Type Description Boolean TryReadBigEndian(out UInt16) Declaration public bool TryReadBigEndian(out ushort value) Parameters Type Name Description UInt16 value Returns Type Description Boolean TryReadBigEndian(out UInt32) Declaration public bool TryReadBigEndian(out uint value) Parameters Type Name Description UInt32 value Returns Type Description Boolean TryReadBigEndian(out UInt64) Declaration public bool TryReadBigEndian(out ulong value) Parameters Type Name Description UInt64 value Returns Type Description Boolean TryReadBytes(out NativeSlice<Byte>) Declaration public bool TryReadBytes(out NativeSlice<byte> bytes) Parameters Type Name Description NativeSlice < Byte > bytes Returns Type Description Boolean TryReadExtensionFormatHeader(out ExtensionHeader) Declaration public bool TryReadExtensionFormatHeader(out ExtensionHeader header) Parameters Type Name Description ExtensionHeader header Returns Type Description Boolean TryReadMapHeader(out Int32) Declaration public bool TryReadMapHeader(out int count) Parameters Type Name Description Int32 count Returns Type Description Boolean TryReadNil() Declaration public bool TryReadNil() Returns Type Description Boolean TryReadRaw(NativeList<Byte>) Declaration public bool TryReadRaw(NativeList<byte> bytes) Parameters Type Name Description NativeList < Byte > bytes Returns Type Description Boolean TryReadString<T>(ref T) Declaration public bool TryReadString<T>(ref T fs) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Returns Type Description Boolean Type Parameters Name Description T TrySkip() Declaration public bool TrySkip() Returns Type Description Boolean UnsafeReadBytes(Void*, Int32) Declaration public void UnsafeReadBytes(void *ptr, int length) Parameters Type Name Description Void * ptr Int32 length"
  },
  "api/AlgoSdk.MessagePack.MessagePackType.html": {
    "href": "api/AlgoSdk.MessagePack.MessagePackType.html",
    "title": "Enum MessagePackType | Unity Algorand SDK",
    "keywords": "Enum MessagePackType Namespace : AlgoSdk.MessagePack Assembly : cs.temp.dll.dll Syntax public enum MessagePackType : byte Fields Name Description Array Binary Boolean Extension Float Integer Map Nil String Unknown"
  },
  "api/AlgoSdk.MessagePack.MessagePackWriter.html": {
    "href": "api/AlgoSdk.MessagePack.MessagePackWriter.html",
    "title": "Struct MessagePackWriter | Unity Algorand SDK",
    "keywords": "Struct MessagePackWriter Implements INativeDisposable Namespace : AlgoSdk.MessagePack Assembly : cs.temp.dll.dll Syntax public struct MessagePackWriter Constructors MessagePackWriter(Allocator) Declaration public MessagePackWriter(Allocator allocator) Parameters Type Name Description Allocator allocator Properties Data Declaration public readonly NativeList<byte> Data { get; } Property Value Type Description NativeList < Byte > Methods Dispose() Declaration public void Dispose() Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle Write(Boolean) Declaration public void Write(bool value) Parameters Type Name Description Boolean value Write(Byte) Declaration public void Write(byte value) Parameters Type Name Description Byte value Write(Int16) Declaration public void Write(short value) Parameters Type Name Description Int16 value Write(Int32) Declaration public void Write(int value) Parameters Type Name Description Int32 value Write(Int64) Declaration public void Write(long value) Parameters Type Name Description Int64 value Write(SByte) Declaration public void Write(sbyte value) Parameters Type Name Description SByte value Write(UInt16) Declaration public void Write(ushort value) Parameters Type Name Description UInt16 value Write(UInt32) Declaration public void Write(uint value) Parameters Type Name Description UInt32 value Write(UInt64) Declaration public void Write(ulong value) Parameters Type Name Description UInt64 value WriteArrayHeader(Int32) Declaration public void WriteArrayHeader(int count) Parameters Type Name Description Int32 count WriteArrayHeader(UInt32) Declaration public void WriteArrayHeader(uint count) Parameters Type Name Description UInt32 count WriteBigEndian(Int16) Declaration public void WriteBigEndian(short value) Parameters Type Name Description Int16 value WriteBigEndian(Int32) Declaration public void WriteBigEndian(int value) Parameters Type Name Description Int32 value WriteBigEndian(Int64) Declaration public void WriteBigEndian(long value) Parameters Type Name Description Int64 value WriteBigEndian(UInt16) Declaration public void WriteBigEndian(ushort value) Parameters Type Name Description UInt16 value WriteBigEndian(UInt32) Declaration public void WriteBigEndian(uint value) Parameters Type Name Description UInt32 value WriteBigEndian(UInt64) Declaration public void WriteBigEndian(ulong value) Parameters Type Name Description UInt64 value WriteBytes(Byte[]) Declaration public void WriteBytes(byte[] arr) Parameters Type Name Description Byte [] arr WriteBytes(Void*, Int32) Declaration public void WriteBytes(void *buffer, int length) Parameters Type Name Description Void * buffer Int32 length WriteBytesHeader(Int32) Declaration public void WriteBytesHeader(int length) Parameters Type Name Description Int32 length WriteMapHeader(Int32) Declaration public void WriteMapHeader(int length) Parameters Type Name Description Int32 length WriteMapHeader(UInt32) Declaration public void WriteMapHeader(uint length) Parameters Type Name Description UInt32 length WriteNil() Declaration public void WriteNil() WriteRaw(NativeArray<Byte>) Declaration public void WriteRaw(NativeArray<byte> bytes) Parameters Type Name Description NativeArray < Byte > bytes WriteString(String) Declaration public void WriteString(string s) Parameters Type Name Description String s WriteString<T>(T) Declaration public void WriteString<T>(T fs) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Type Parameters Name Description T WriteStringHeader(Int32) Declaration public void WriteStringHeader(int length) Parameters Type Name Description Int32 length Implements INativeDisposable"
  },
  "api/AlgoSdk.MessagePack.ReservedMessagePackExtensionTypeCode.html": {
    "href": "api/AlgoSdk.MessagePack.ReservedMessagePackExtensionTypeCode.html",
    "title": "Class ReservedMessagePackExtensionTypeCode | Unity Algorand SDK",
    "keywords": "Class ReservedMessagePackExtensionTypeCode Inheritance Object ReservedMessagePackExtensionTypeCode Namespace : AlgoSdk.MessagePack Assembly : cs.temp.dll.dll Syntax public static class ReservedMessagePackExtensionTypeCode Fields DateTime Declaration public const sbyte DateTime = -1 Field Value Type Description SByte"
  },
  "api/AlgoSdk.MiniAssetHolding.html": {
    "href": "api/AlgoSdk.MiniAssetHolding.html",
    "title": "Struct MiniAssetHolding | Unity Algorand SDK",
    "keywords": "Struct MiniAssetHolding A simplified version of AssetHolding Implements IEquatable < MiniAssetHolding > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct MiniAssetHolding Fields Address Declaration public Address Address Field Value Type Description Address Amount Declaration public ulong Amount Field Value Type Description UInt64 Deleted Whether or not this asset holding is currently deleted from its account. Declaration public Optional<bool> Deleted Field Value Type Description Optional < Boolean > IsFrozen Declaration public Optional<bool> IsFrozen Field Value Type Description Optional < Boolean > OptedInAtRound Round during which the account opted into the asset. Declaration public ulong OptedInAtRound Field Value Type Description UInt64 OptedOutAtRound Round during which the account opted out of the asset. Declaration public ulong OptedOutAtRound Field Value Type Description UInt64 Methods Equals(MiniAssetHolding) Declaration public bool Equals(MiniAssetHolding other) Parameters Type Name Description MiniAssetHolding other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.Mnemonic.html": {
    "href": "api/AlgoSdk.Mnemonic.html",
    "title": "Struct Mnemonic | Unity Algorand SDK",
    "keywords": "Struct Mnemonic Byte struct representing a private key encoded with Length words. Implements IEquatable < Mnemonic > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Mnemonic Fields BitsPerWord The number of bits encoded by each word. Declaration public const int BitsPerWord = 11 Field Value Type Description Int32 ChecksumIndex Index of the word used for the checksum. Declaration public const int ChecksumIndex = 24 Field Value Type Description Int32 Length Number of words contained in the mnemonic. Declaration public const int Length = 25 Field Value Type Description Int32 SizeBytes Size of Mnemonic in bytes. Declaration public const int SizeBytes = 50 Field Value Type Description Int32 Properties Item[Int32] The word at a given index. Declaration public Mnemonic.Word this[int index] { get; set; } Parameters Type Name Description Int32 index The index of the word. Property Value Type Description Mnemonic.Word A word in the set of possible mnemonic words. Methods Equals(Mnemonic) Declaration public bool Equals(Mnemonic other) Parameters Type Name Description Mnemonic other Returns Type Description Boolean FromKey(PrivateKey) Declaration public static Mnemonic FromKey(PrivateKey key) Parameters Type Name Description PrivateKey key Returns Type Description Mnemonic FromString(String) Declaration public static Mnemonic FromString(string mnemonicString) Parameters Type Name Description String mnemonicString Returns Type Description Mnemonic GetUnsafePtr() Get the byte pointer at the start of this struct. Declaration public byte *GetUnsafePtr() Returns Type Description Byte * An unsafe byte pointer. ToPrivateKey() Get the PrivateKey from this mnemonic encodes. Declaration public PrivateKey ToPrivateKey() Returns Type Description PrivateKey ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators Implicit(Mnemonic to String) Declaration public static implicit operator string (Mnemonic mnemonic) Parameters Type Name Description Mnemonic mnemonic Returns Type Description String Implicit(String to Mnemonic) Declaration public static implicit operator Mnemonic(string mnemonicString) Parameters Type Name Description String mnemonicString Returns Type Description Mnemonic Implements IEquatable<>"
  },
  "api/AlgoSdk.Mnemonic.Word.html": {
    "href": "api/AlgoSdk.Mnemonic.Word.html",
    "title": "Enum Mnemonic.Word | Unity Algorand SDK",
    "keywords": "Enum Mnemonic.Word A list of possible words that occur in a Mnemonic Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum Word : ushort Fields Name Description abandon ability able about above absent absorb abstract absurd abuse access accident account accuse achieve acid acoustic acquire across act action actor actress actual adapt add addict address adjust admit adult advance advice aerobic affair afford afraid again age agent agree ahead aim air airport aisle alarm album alcohol alert alien all alley allow almost alone alpha already also alter always amateur amazing among amount amused analyst anchor ancient anger angle angry animal ankle announce annual another answer antenna antique anxiety any apart apology appear apple approve april arch arctic area arena argue arm armed armor army around arrange arrest arrive arrow art artefact artist artwork ask aspect assault asset assist assume asthma athlete atom attack attend attitude attract auction audit august aunt author auto autumn average avocado avoid awake aware away awesome awful awkward axis baby bachelor bacon badge bag balance balcony ball bamboo banana banner bar barely bargain barrel base basic basket battle beach bean beauty because become beef before begin behave behind believe below belt bench benefit best betray better between beyond bicycle bid bike bind biology bird birth bitter black blade blame blanket blast bleak bless blind blood blossom blouse blue blur blush board boat body boil bomb bone bonus book boost border boring borrow boss bottom bounce box boy bracket brain brand brass brave bread breeze brick bridge brief bright bring brisk broccoli broken bronze broom brother brown brush bubble buddy budget buffalo build bulb bulk bullet bundle bunker burden burger burst bus business busy butter buyer buzz cabbage cabin cable cactus cage cake call calm camera camp can canal cancel candy cannon canoe canvas canyon capable capital captain car carbon card cargo carpet carry cart case cash casino castle casual cat catalog catch category cattle caught cause caution cave ceiling celery cement census century cereal certain chair chalk champion change chaos chapter charge chase chat cheap check cheese chef cherry chest chicken chief child chimney choice choose chronic chuckle chunk churn cigar cinnamon circle citizen city civil claim clap clarify claw clay clean clerk clever click client cliff climb clinic clip clock clog close cloth cloud clown club clump cluster clutch coach coast coconut code coffee coil coin collect color column combine come comfort comic common company concert conduct confirm congress connect consider control convince cook cool copper copy coral core corn correct cost cotton couch country couple course cousin cover coyote crack cradle craft cram crane crash crater crawl crazy cream credit creek crew cricket crime crisp critic crop cross crouch crowd crucial cruel cruise crumble crunch crush cry crystal cube culture cup cupboard curious current curtain curve cushion custom cute cycle dad damage damp dance danger daring dash daughter dawn day deal debate debris decade december decide decline decorate decrease deer defense define defy degree delay deliver demand demise denial dentist deny depart depend deposit depth deputy derive describe desert design desk despair destroy detail detect develop device devote diagram dial diamond diary dice diesel diet differ digital dignity dilemma dinner dinosaur direct dirt disagree discover disease dish dismiss disorder display distance divert divide divorce dizzy doctor document dog doll dolphin domain donate donkey donor door dose double dove draft dragon drama drastic draw dream dress drift drill drink drip drive drop drum dry duck dumb dune during dust dutch duty dwarf dynamic eager eagle early earn earth easily east easy echo ecology economy edge edit educate effort egg eight either elbow elder electric elegant element elephant elevator elite else embark embody embrace emerge emotion employ empower empty enable enact end endless endorse enemy energy enforce engage engine enhance enjoy enlist enough enrich enroll ensure enter entire entry envelope episode equal equip era erase erode erosion error erupt escape essay essence estate eternal ethics evidence evil evoke evolve exact example excess exchange excite exclude excuse execute exercise exhaust exhibit exile exist exit exotic expand expect expire explain expose express extend extra eye eyebrow fabric face faculty fade faint faith fall false fame family famous fan fancy fantasy farm fashion fat fatal father fatigue fault favorite feature february federal fee feed feel female fence festival fetch fever few fiber fiction field figure file film filter final find fine finger finish fire firm first fiscal fish fit fitness fix flag flame flash flat flavor flee flight flip float flock floor flower fluid flush fly foam focus fog foil fold follow food foot force forest forget fork fortune forum forward fossil foster found fox fragile frame frequent fresh friend fringe frog front frost frown frozen fruit fuel fun funny furnace fury future gadget gain galaxy gallery game gap garage garbage garden garlic garment gas gasp gate gather gauge gaze general genius genre gentle genuine gesture ghost giant gift giggle ginger giraffe girl give glad glance glare glass glide glimpse globe gloom glory glove glow glue goat goddess gold good goose gorilla gospel gossip govern gown grab grace grain grant grape grass gravity great green grid grief grit grocery group grow grunt guard guess guide guilt guitar gun gym habit hair half hammer hamster hand happy harbor hard harsh harvest hat have hawk hazard head health heart heavy hedgehog height hello helmet help hen hero hidden high hill hint hip hire history hobby hockey hold hole holiday hollow home honey hood hope horn horror horse hospital host hotel hour hover hub huge human humble humor hundred hungry hunt hurdle hurry hurt husband hybrid ice icon idea identify idle ignore ill illegal illness image imitate immense immune impact impose improve impulse inch include income increase index indicate indoor industry infant inflict inform inhale inherit initial inject injury inmate inner innocent input inquiry insane insect inside inspire install intact interest into invest invite involve iron island isolate issue item ivory jacket jaguar jar jazz jealous jeans jelly jewel job join joke journey joy judge juice jump jungle junior junk just kangaroo keen keep ketchup key kick kid kidney kind kingdom kiss kit kitchen kite kitten kiwi knee knife knock know lab label labor ladder lady lake lamp language laptop large later latin laugh laundry lava law lawn lawsuit layer lazy leader leaf learn leave lecture left leg legal legend leisure lemon lend length LENGTH lens leopard lesson letter level liar liberty library license life lift light like limb limit link lion liquid list little live lizard load loan lobster local lock logic lonely long loop lottery loud lounge love loyal lucky luggage lumber lunar lunch luxury lyrics machine mad magic magnet maid mail main major make mammal man manage mandate mango mansion manual maple marble march margin marine market marriage mask mass master match material math matrix matter maximum maze meadow mean measure meat mechanic medal media melody melt member memory mention menu mercy merge merit merry mesh message metal method middle midnight milk million mimic mind minimum minor minute miracle mirror misery miss mistake mix mixed mixture mobile model modify mom moment monitor monkey monster month moon moral more morning mosquito mother motion motor mountain mouse move movie much muffin mule multiply muscle museum mushroom music must mutual myself mystery myth naive name napkin narrow nasty nation nature near neck need negative neglect neither nephew nerve nest net network neutral never news next nice night noble noise nominee noodle normal north nose notable note nothing notice novel now nuclear number nurse nut oak obey object oblige obscure observe obtain obvious occur ocean october odor off offer office often oil okay old olive olympic omit once one onion online only open opera opinion oppose option orange orbit orchard order ordinary organ orient original orphan ostrich other outdoor outer output outside oval oven over own owner oxygen oyster ozone pact paddle page pair palace palm panda panel panic panther paper parade parent park parrot party pass patch path patient patrol pattern pause pave payment peace peanut pear peasant pelican pen penalty pencil people pepper perfect permit person pet phone photo phrase physical piano picnic picture piece pig pigeon pill pilot pink pioneer pipe pistol pitch pizza place planet plastic plate play please pledge pluck plug plunge poem poet point polar pole police pond pony pool popular portion position possible post potato pottery poverty powder power practice praise predict prefer prepare present pretty prevent price pride primary print priority prison private prize problem process produce profit program project promote proof property prosper protect proud provide public pudding pull pulp pulse pumpkin punch pupil puppy purchase purity purpose purse push put puzzle pyramid quality quantum quarter question quick quit quiz quote rabbit raccoon race rack radar radio rail rain raise rally ramp ranch random range rapid rare rate rather raven raw razor ready real reason rebel rebuild recall receive recipe record recycle reduce reflect reform refuse region regret regular reject relax release relief rely remain remember remind remove render renew rent reopen repair repeat replace report require rescue resemble resist resource response result retire retreat return reunion reveal review reward rhythm rib ribbon rice rich ride ridge rifle right rigid ring riot ripple risk ritual rival river road roast robot robust rocket romance roof rookie room rose rotate rough round route royal rubber rude rug rule run runway rural sad saddle sadness safe sail salad salmon salon salt salute same sample sand satisfy satoshi sauce sausage save say scale scan scare scatter scene scheme school science scissors scorpion scout scrap screen script scrub sea search season seat second secret section security seed seek segment select sell seminar senior sense sentence series service session settle setup seven shadow shaft shallow share shed shell sheriff shield shift shine ship shiver shock shoe shoot shop short shoulder shove shrimp shrug shuffle shy sibling sick side siege sight sign silent silk silly silver similar simple since sing siren sister situate six size skate sketch ski skill skin skirt skull slab slam sleep slender slice slide slight slim slogan slot slow slush small smart smile smoke smooth snack snake snap sniff snow soap soccer social sock soda soft solar soldier solid solution solve someone song soon sorry sort soul sound soup source south space spare spatial spawn speak special speed spell spend sphere spice spider spike spin spirit split spoil sponsor spoon sport spot spray spread spring spy square squeeze squirrel stable stadium staff stage stairs stamp stand start state stay steak steel stem step stereo stick still sting stock stomach stone stool story stove strategy street strike strong struggle student stuff stumble style subject submit subway success such sudden suffer sugar suggest suit summer sun sunny sunset super supply supreme sure surface surge surprise surround survey suspect sustain swallow swamp swap swarm swear sweet swift swim swing switch sword symbol symptom syrup system table tackle tag tail talent talk tank tape target task taste tattoo taxi teach team tell ten tenant tennis tent term test text thank that theme then theory there they thing this thought three thrive throw thumb thunder ticket tide tiger tilt timber time tiny tip tired tissue title toast tobacco today toddler toe together toilet token tomato tomorrow tone tongue tonight tool tooth top topic topple torch tornado tortoise toss total tourist toward tower town toy track trade traffic tragic train transfer trap trash travel tray treat tree trend trial tribe trick trigger trim trip trophy trouble truck true truly trumpet trust truth try tube tuition tumble tuna tunnel turkey turn turtle twelve twenty twice twin twist two type typical ugly umbrella unable unaware uncle uncover under undo unfair unfold unhappy uniform unique unit universe unknown unlock until unusual unveil update upgrade uphold upon upper upset urban urge usage use used useful useless usual utility vacant vacuum vague valid valley valve van vanish vapor various vast vault vehicle velvet vendor venture venue verb verify version very vessel veteran viable vibrant vicious victory video view village vintage violin virtual virus visa visit visual vital vivid vocal voice void volcano volume vote voyage wage wagon wait walk wall walnut want warfare warm warrior wash wasp waste water wave way wealth weapon wear weasel weather web wedding weekend weird welcome west wet whale what wheat wheel when where whip whisper wide width wife wild will win window wine wing wink winner winter wire wisdom wise wish witness wolf woman wonder wood wool word work world worry worth wrap wreck wrestle wrist write wrong yard year yellow you young youth zebra zero zone zoo"
  },
  "api/AlgoSdk.Multisig.html": {
    "href": "api/AlgoSdk.Multisig.html",
    "title": "Struct Multisig | Unity Algorand SDK",
    "keywords": "Struct Multisig Implements ISignature IEquatable < Multisig > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Multisig : ISignature Constructors Multisig(Byte, Byte, Address[]) Create a new multisig Declaration public Multisig(byte version, byte threshold, Address[] addresses) Parameters Type Name Description Byte version The version of the msig protocol. The latest version is version 1. Byte threshold The number of signatures required for this msig to be valid. Address [] addresses The addresses or public keys composing this msig. Order matters! Fields AddressPrefix Declaration public static readonly byte[] AddressPrefix Field Value Type Description Byte [] Subsigs Subsignatures representing this multisig. Declaration public Multisig.Subsig[] Subsigs Field Value Type Description Multisig.Subsig [] Threshold Number of signatures required for the multisig to be valid. Declaration public byte Threshold Field Value Type Description Byte Version Version of the multisig. Declaration public byte Version Field Value Type Description Byte Methods Equals(Multisig) Declaration public bool Equals(Multisig other) Parameters Type Name Description Multisig other Returns Type Description Boolean GetAddress() Generate the address for this Multisig . Declaration public Address GetAddress() Returns Type Description Address An Address made from hashing the addresses in this subsig. Verify<TMessage>(TMessage) Verify this msig against the message. Declaration public bool Verify<TMessage>(TMessage message) where TMessage : IByteArray Parameters Type Name Description TMessage message The message that was signed. Returns Type Description Boolean true if a threshold of signatures were valid, fals otherwise Type Parameters Name Description TMessage The type of the bytearray the message is contained in. Implements ISignature IEquatable<>"
  },
  "api/AlgoSdk.Multisig.Subsig.html": {
    "href": "api/AlgoSdk.Multisig.Subsig.html",
    "title": "Struct Multisig.Subsig | Unity Algorand SDK",
    "keywords": "Struct Multisig.Subsig Implements IEquatable < Multisig.Subsig > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Subsig Fields PublicKey The address for this subsig. Declaration public Ed25519.PublicKey PublicKey Field Value Type Description Ed25519.PublicKey Sig The signed message if it exists. Declaration public Sig Sig Field Value Type Description Sig Methods Equals(Multisig.Subsig) Declaration public bool Equals(Multisig.Subsig other) Parameters Type Name Description Multisig.Subsig other Returns Type Description Boolean Operators Implicit(Address to Multisig.Subsig) Declaration public static implicit operator Multisig.Subsig(Address address) Parameters Type Name Description Address address Returns Type Description Multisig.Subsig Implicit(Multisig.Subsig to Address) Declaration public static implicit operator Address(Multisig.Subsig subsig) Parameters Type Name Description Multisig.Subsig subsig Returns Type Description Address Implements IEquatable<>"
  },
  "api/AlgoSdk.OnCompletion.html": {
    "href": "api/AlgoSdk.OnCompletion.html",
    "title": "Enum OnCompletion | Unity Algorand SDK",
    "keywords": "Enum OnCompletion [apan] defines the what additional actions occur with the transaction. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum OnCompletion : byte Fields Name Description Clear Similar to CloseOut, but the transaction will always clear a contract from the account’s balance record whether the program succeeds or fails. CloseOut Accounts use this transaction to close out their participation in the contract. This call can fail based on the TEAL logic, preventing the account from removing the contract from its balance record. Delete Transaction to delete the application. NoOp Generic application calls to execute the ApprovalProgram OptIn Accounts use this transaction to opt into the smart contract to participate (local storage usage). Update Transaction to update TEAL Programs for a contract."
  },
  "api/AlgoSdk.Optional-1.html": {
    "href": "api/AlgoSdk.Optional-1.html",
    "title": "Struct Optional<T> | Unity Algorand SDK",
    "keywords": "Struct Optional<T> Implements IEquatable < Optional <T>> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Optional<T> where T : struct, IEquatable<T> Type Parameters Name Description T Constructors Optional(T) Declaration public Optional(T value) Parameters Type Name Description T value Fields HasValue Declaration public bool HasValue Field Value Type Description Boolean Value Declaration public T Value Field Value Type Description T Properties Empty Declaration public static readonly Optional<T> Empty { get; } Property Value Type Description Optional <T> Methods Equals(Optional<T>) Declaration public bool Equals(Optional<T> other) Parameters Type Name Description Optional <T> other Returns Type Description Boolean Operators Implicit(T to Optional<T>) Declaration public static implicit operator Optional<T>(T value) Parameters Type Name Description T value Returns Type Description Optional <T> Implicit(Optional<T> to T) Declaration public static implicit operator T(Optional<T> optional) Parameters Type Name Description Optional <T> optional Returns Type Description T Implements IEquatable<>"
  },
  "api/AlgoSdk.PaymentTxn.html": {
    "href": "api/AlgoSdk.PaymentTxn.html",
    "title": "Struct PaymentTxn | Unity Algorand SDK",
    "keywords": "Struct PaymentTxn Implements IPaymentTxn ITransaction IEquatable < PaymentTxn > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct PaymentTxn : IPaymentTxn, ITransaction Properties Amount Declaration public ulong Amount { get; set; } Property Value Type Description UInt64 CloseAmount Declaration public ulong CloseAmount { get; set; } Property Value Type Description UInt64 CloseRemainderTo Declaration public Address CloseRemainderTo { get; set; } Property Value Type Description Address Fee Declaration public ulong Fee { get; set; } Property Value Type Description UInt64 FirstValidRound Declaration public ulong FirstValidRound { get; set; } Property Value Type Description UInt64 GenesisHash Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisId Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes Group Declaration public Sha512_256_Hash Group { get; set; } Property Value Type Description Sha512_256_Hash LastValidRound Declaration public ulong LastValidRound { get; set; } Property Value Type Description UInt64 Lease Declaration public Sha512_256_Hash Lease { get; set; } Property Value Type Description Sha512_256_Hash Note Declaration public byte[] Note { get; set; } Property Value Type Description Byte [] Receiver Declaration public Address Receiver { get; set; } Property Value Type Description Address RekeyTo Declaration public Address RekeyTo { get; set; } Property Value Type Description Address Sender Declaration public Address Sender { get; set; } Property Value Type Description Address TransactionType Declaration public TransactionType TransactionType { get; } Property Value Type Description TransactionType Methods CopyFrom(Transaction) Declaration public void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction CopyTo(ref Transaction) Declaration public void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction Equals(PaymentTxn) Declaration public bool Equals(PaymentTxn other) Parameters Type Name Description PaymentTxn other Returns Type Description Boolean Implements IPaymentTxn ITransaction IEquatable<>"
  },
  "api/AlgoSdk.PaymentTxn.Params.html": {
    "href": "api/AlgoSdk.PaymentTxn.Params.html",
    "title": "Struct PaymentTxn.Params | Unity Algorand SDK",
    "keywords": "Struct PaymentTxn.Params Implements IEquatable < PaymentTxn.Params > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Params Fields Amount Declaration public ulong Amount Field Value Type Description UInt64 CloseAmount Declaration public ulong CloseAmount Field Value Type Description UInt64 CloseRemainderTo Declaration public Address CloseRemainderTo Field Value Type Description Address Receiver Declaration public Address Receiver Field Value Type Description Address Methods Equals(PaymentTxn.Params) Declaration public bool Equals(PaymentTxn.Params other) Parameters Type Name Description PaymentTxn.Params other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.PendingTransaction.html": {
    "href": "api/AlgoSdk.PendingTransaction.html",
    "title": "Struct PendingTransaction | Unity Algorand SDK",
    "keywords": "Struct PendingTransaction Details about a pending transaction. If the transaction was recently confirmed, includes confirmation details like the round and reward details. Implements IEquatable < PendingTransaction > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct PendingTransaction Fields ApplicationIndex The application index if the transaction was found and it created an application. Declaration public ulong ApplicationIndex Field Value Type Description UInt64 AssetClosingAmount The number of the asset's unit that were transferred to the close-to address. Declaration public ulong AssetClosingAmount Field Value Type Description UInt64 AssetIndex The asset index if the transaction was found and it created an asset. Declaration public ulong AssetIndex Field Value Type Description UInt64 CloseRewards Rewards in microalgos applied to the close remainder to account. Declaration public ulong CloseRewards Field Value Type Description UInt64 ClosingAmount Closing amount for the transaction. Declaration public ulong ClosingAmount Field Value Type Description UInt64 ConfirmedRound The round where this transaction was confirmed, if present. Declaration public ulong ConfirmedRound Field Value Type Description UInt64 GlobalStateDelta [gd] Global state key/value changes for the application being executed by this transaction. Declaration public EvalDeltaKeyValue[] GlobalStateDelta Field Value Type Description EvalDeltaKeyValue [] InnerTransactions Inner transactions produced by application execution. Declaration public PendingTransaction[] InnerTransactions Field Value Type Description PendingTransaction [] LocalStateDelta [ld] Local state key/value changes for the application being executed by this transaction. Declaration public AccountStateDelta[] LocalStateDelta Field Value Type Description AccountStateDelta [] Logs [lg] Logs for the application being executed by this transaction. Declaration public string[] Logs Field Value Type Description String [] PoolError Indicates that the transaction was kicked out of this node's transaction pool (and specifies why that happened). An empty string indicates the transaction wasn't kicked out of this node's txpool due to an error. Declaration public FixedString128Bytes PoolError Field Value Type Description FixedString128Bytes ReceiverRewards Rewards in microalgos applied to the receiver account. Declaration public ulong ReceiverRewards Field Value Type Description UInt64 SenderRewards Rewards in microalgos applied to the sender account. Declaration public ulong SenderRewards Field Value Type Description UInt64 Transaction The raw signed transaction. Declaration public SignedTransaction Transaction Field Value Type Description SignedTransaction Methods Equals(PendingTransaction) Declaration public bool Equals(PendingTransaction other) Parameters Type Name Description PendingTransaction other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.PendingTransactions.html": {
    "href": "api/AlgoSdk.PendingTransactions.html",
    "title": "Struct PendingTransactions | Unity Algorand SDK",
    "keywords": "Struct PendingTransactions A potentially truncated list of transactions currently in the node's transaction pool. You can compute whether or not the list is truncated if the number of elements in the TopTransactions array is fewer than TotalTransactions . Implements IEquatable < PendingTransactions > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct PendingTransactions Fields TopTransactions An array of signed transaction objects. Declaration public SignedTransaction[] TopTransactions Field Value Type Description SignedTransaction [] TotalTransactions Total number of transactions in the pool. Declaration public ulong TotalTransactions Field Value Type Description UInt64 Methods Equals(PendingTransactions) Declaration public bool Equals(PendingTransactions other) Parameters Type Name Description PendingTransactions other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.PrivateKey.html": {
    "href": "api/AlgoSdk.PrivateKey.html",
    "title": "Struct PrivateKey | Unity Algorand SDK",
    "keywords": "Struct PrivateKey The private key for an Algorand account. Implements IEquatable < PrivateKey > IByteArray Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct PrivateKey Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public readonly int Length { get; } Property Value Type Description Int32 Methods Equals(PrivateKey) Declaration public bool Equals(PrivateKey other) Parameters Type Name Description PrivateKey other Returns Type Description Boolean FromString(String) Declaration public static PrivateKey FromString(string keyString) Parameters Type Name Description String keyString Returns Type Description PrivateKey GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void * ToAddress() Declaration public Address ToAddress() Returns Type Description Address ToKeyPair() Declaration public Ed25519.KeyPair ToKeyPair() Returns Type Description Ed25519.KeyPair ToMnemonic() Declaration public Mnemonic ToMnemonic() Returns Type Description Mnemonic ToPublicKey() Declaration public Ed25519.PublicKey ToPublicKey() Returns Type Description Ed25519.PublicKey ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Implements IEquatable<> IByteArray"
  },
  "api/AlgoSdk.ProvideSourceInfoAttribute.html": {
    "href": "api/AlgoSdk.ProvideSourceInfoAttribute.html",
    "title": "Class ProvideSourceInfoAttribute | Unity Algorand SDK",
    "keywords": "Class ProvideSourceInfoAttribute Inheritance Object ProvideSourceInfoAttribute AlgoApiFormatterAttribute AlgoApiObjectAttribute Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public class ProvideSourceInfoAttribute : Attribute Constructors ProvideSourceInfoAttribute(String, String, Int32) Declaration public ProvideSourceInfoAttribute(string member = \"\", string filePath = \"\", int lineNumber = 0) Parameters Type Name Description String member String filePath Int32 lineNumber Properties AbsoluteFilePath Declaration public string AbsoluteFilePath { get; } Property Value Type Description String AssetPath Declaration public string AssetPath { get; } Property Value Type Description String LineNumber Declaration public int LineNumber { get; } Property Value Type Description Int32 Member Declaration public string Member { get; } Property Value Type Description String"
  },
  "api/AlgoSdk.QrCode.html": {
    "href": "api/AlgoSdk.QrCode.html",
    "title": "Namespace AlgoSdk.QrCode | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.QrCode Classes QrCodeUtility"
  },
  "api/AlgoSdk.QrCode.QrCodeUtility.html": {
    "href": "api/AlgoSdk.QrCode.QrCodeUtility.html",
    "title": "Class QrCodeUtility | Unity Algorand SDK",
    "keywords": "Class QrCodeUtility Inheritance Object QrCodeUtility Namespace : AlgoSdk.QrCode Assembly : cs.temp.dll.dll Syntax public static class QrCodeUtility Methods Encode(String, Int32, Int32) Generates a QR-Code with specified width/height. Declaration public static Color32[] Encode(string textForEncoding, int width, int height) Parameters Type Name Description String textForEncoding The text to encode Int32 width The width in pixels Int32 height The height in pixels Returns Type Description Color32 [] A flat array of the generated pixels. GenerateTexture(String) Generates a 256x256 QR-Code Declaration public static Texture2D GenerateTexture(string text) Parameters Type Name Description String text The text to use to generate the QR-Code Returns Type Description Texture2D A with width=256 and height=256."
  },
  "api/AlgoSdk.ReleaseWalletHandleTokenRequest.html": {
    "href": "api/AlgoSdk.ReleaseWalletHandleTokenRequest.html",
    "title": "Struct ReleaseWalletHandleTokenRequest | Unity Algorand SDK",
    "keywords": "Struct ReleaseWalletHandleTokenRequest Implements IEquatable < ReleaseWalletHandleTokenRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ReleaseWalletHandleTokenRequest Fields WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(ReleaseWalletHandleTokenRequest) Declaration public bool Equals(ReleaseWalletHandleTokenRequest other) Parameters Type Name Description ReleaseWalletHandleTokenRequest other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.RenameWalletRequest.html": {
    "href": "api/AlgoSdk.RenameWalletRequest.html",
    "title": "Struct RenameWalletRequest | Unity Algorand SDK",
    "keywords": "Struct RenameWalletRequest Implements IEquatable < RenameWalletRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct RenameWalletRequest Fields WalletId Declaration public FixedString128Bytes WalletId Field Value Type Description FixedString128Bytes WalletName Declaration public FixedString128Bytes WalletName Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(RenameWalletRequest) Declaration public bool Equals(RenameWalletRequest other) Parameters Type Name Description RenameWalletRequest other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.RenameWalletResponse.html": {
    "href": "api/AlgoSdk.RenameWalletResponse.html",
    "title": "Struct RenameWalletResponse | Unity Algorand SDK",
    "keywords": "Struct RenameWalletResponse Implements IEquatable < RenameWalletResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct RenameWalletResponse Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String Wallet Declaration public Wallet Wallet Field Value Type Description Wallet Methods Equals(RenameWalletResponse) Declaration public bool Equals(RenameWalletResponse other) Parameters Type Name Description RenameWalletResponse other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.RenewWalletHandleTokenRequest.html": {
    "href": "api/AlgoSdk.RenewWalletHandleTokenRequest.html",
    "title": "Struct RenewWalletHandleTokenRequest | Unity Algorand SDK",
    "keywords": "Struct RenewWalletHandleTokenRequest Implements IEquatable < RenewWalletHandleTokenRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct RenewWalletHandleTokenRequest Fields WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(RenewWalletHandleTokenRequest) Declaration public bool Equals(RenewWalletHandleTokenRequest other) Parameters Type Name Description RenewWalletHandleTokenRequest other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.RenewWalletHandleTokenResponse.html": {
    "href": "api/AlgoSdk.RenewWalletHandleTokenResponse.html",
    "title": "Struct RenewWalletHandleTokenResponse | Unity Algorand SDK",
    "keywords": "Struct RenewWalletHandleTokenResponse Implements IEquatable < RenewWalletHandleTokenResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct RenewWalletHandleTokenResponse Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String WalletHandle Declaration public WalletHandle WalletHandle Field Value Type Description WalletHandle Methods Equals(RenewWalletHandleTokenResponse) Declaration public bool Equals(RenewWalletHandleTokenResponse other) Parameters Type Name Description RenewWalletHandleTokenResponse other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.SerializationException.html": {
    "href": "api/AlgoSdk.SerializationException.html",
    "title": "Class SerializationException | Unity Algorand SDK",
    "keywords": "Class SerializationException Inheritance Object SerializationException Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public class SerializationException : Exception Constructors SerializationException(String) Declaration public SerializationException(string message) Parameters Type Name Description String message SerializationException(String, Exception) Declaration public SerializationException(string message, Exception cause) Parameters Type Name Description String message Exception cause"
  },
  "api/AlgoSdk.Sig.html": {
    "href": "api/AlgoSdk.Sig.html",
    "title": "Struct Sig | Unity Algorand SDK",
    "keywords": "Struct Sig Implements ISignature IEquatable < Sig > IByteArray Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Sig : ISignature Constructors Sig(in Ed25519.Signature) Declaration public Sig(in Ed25519.Signature sig) Parameters Type Name Description Ed25519.Signature sig Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public readonly int Length { get; } Property Value Type Description Int32 Methods Equals(Sig) Declaration public bool Equals(Sig other) Parameters Type Name Description Sig other Returns Type Description Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void * Verify<TMessage>(TMessage, Ed25519.PublicKey) Declaration public bool Verify<TMessage>(TMessage message, Ed25519.PublicKey pk) where TMessage : IByteArray Parameters Type Name Description TMessage message Ed25519.PublicKey pk Returns Type Description Boolean Type Parameters Name Description TMessage Operators Equality(in Sig, in Sig) Declaration public static bool operator ==(in Sig x, in Sig y) Parameters Type Name Description Sig x Sig y Returns Type Description Boolean Implicit(Sig to Ed25519.Signature) Declaration public static implicit operator Ed25519.Signature(Sig signature) Parameters Type Name Description Sig signature Returns Type Description Ed25519.Signature Implicit(Ed25519.Signature to Sig) Declaration public static implicit operator Sig(Ed25519.Signature sig) Parameters Type Name Description Ed25519.Signature sig Returns Type Description Sig Inequality(in Sig, in Sig) Declaration public static bool operator !=(in Sig x, in Sig y) Parameters Type Name Description Sig x Sig y Returns Type Description Boolean Implements ISignature IEquatable<> IByteArray"
  },
  "api/AlgoSdk.SignatureType.html": {
    "href": "api/AlgoSdk.SignatureType.html",
    "title": "Enum SignatureType | Unity Algorand SDK",
    "keywords": "Enum SignatureType Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum SignatureType : byte Fields Name Description LogicSig Multisig None Sig"
  },
  "api/AlgoSdk.SignatureTypeExtensions.html": {
    "href": "api/AlgoSdk.SignatureTypeExtensions.html",
    "title": "Class SignatureTypeExtensions | Unity Algorand SDK",
    "keywords": "Class SignatureTypeExtensions Inheritance Object SignatureTypeExtensions Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class SignatureTypeExtensions Fields TypeToString Declaration public static readonly string[] TypeToString Field Value Type Description String [] Methods ToFixedString(SignatureType) Declaration public static FixedString32Bytes ToFixedString(this SignatureType sigType) Parameters Type Name Description SignatureType sigType Returns Type Description FixedString32Bytes ToOptionalFixedString(SignatureType) Declaration public static Optional<FixedString32Bytes> ToOptionalFixedString(this SignatureType sigType) Parameters Type Name Description SignatureType sigType Returns Type Description Optional < FixedString32Bytes >"
  },
  "api/AlgoSdk.Signed-1.html": {
    "href": "api/AlgoSdk.Signed-1.html",
    "title": "Struct Signed<TTransaction> | Unity Algorand SDK",
    "keywords": "Struct Signed<TTransaction> A typed signed transaction. Implements IEquatable < Signed <TTransaction>> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Signed<TTransaction> where TTransaction : ITransaction Type Parameters Name Description TTransaction The type of the transaction backing this struct. Fields Signature The signature this transaction was signed with. Declaration public TransactionSignature Signature Field Value Type Description TransactionSignature Transaction The typed transaction that was signed. Declaration public TTransaction Transaction Field Value Type Description TTransaction Methods Equals(Signed<TTransaction>) Declaration public bool Equals(Signed<TTransaction> other) Parameters Type Name Description Signed <TTransaction> other Returns Type Description Boolean ToUntyped() Declaration public SignedTransaction ToUntyped() Returns Type Description SignedTransaction Operators Implicit(Signed<TTransaction> to SignedTransaction) Declaration public static implicit operator SignedTransaction(Signed<TTransaction> typedSignedTxn) Parameters Type Name Description Signed <TTransaction> typedSignedTxn Returns Type Description SignedTransaction Implements IEquatable<>"
  },
  "api/AlgoSdk.SignedTransaction.html": {
    "href": "api/AlgoSdk.SignedTransaction.html",
    "title": "Struct SignedTransaction | Unity Algorand SDK",
    "keywords": "Struct SignedTransaction An untyped signed transaction. See Signed<TTransaction> for a typed version. This is used as a wrapper around Transaction for the Algorand API. Implements IEquatable < SignedTransaction > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct SignedTransaction Fields Transaction The untyped Transaction backing this struct. Declaration public Transaction Transaction Field Value Type Description Transaction Properties Signature The signatured this transaction is signed with. Declaration public TransactionSignature Signature { get; set; } Property Value Type Description TransactionSignature Methods Equals(SignedTransaction) Declaration public bool Equals(SignedTransaction other) Parameters Type Name Description SignedTransaction other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.SignMultisigRequest.html": {
    "href": "api/AlgoSdk.SignMultisigRequest.html",
    "title": "Struct SignMultisigRequest | Unity Algorand SDK",
    "keywords": "Struct SignMultisigRequest Implements IEquatable < SignMultisigRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct SignMultisigRequest Fields Multisig Declaration public Multisig Multisig Field Value Type Description Multisig PublicKey Declaration public Ed25519.PublicKey PublicKey Field Value Type Description Ed25519.PublicKey Signer Declaration public Address Signer Field Value Type Description Address Transaction Declaration public byte[] Transaction Field Value Type Description Byte [] WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(SignMultisigRequest) Declaration public bool Equals(SignMultisigRequest other) Parameters Type Name Description SignMultisigRequest other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.SignMultisigResponse.html": {
    "href": "api/AlgoSdk.SignMultisigResponse.html",
    "title": "Struct SignMultisigResponse | Unity Algorand SDK",
    "keywords": "Struct SignMultisigResponse Implements IEquatable < SignMultisigResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct SignMultisigResponse Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String SignedTransaction Declaration public byte[] SignedTransaction Field Value Type Description Byte [] Methods Equals(SignMultisigResponse) Declaration public bool Equals(SignMultisigResponse other) Parameters Type Name Description SignMultisigResponse other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.SignProgramMultisigRequest.html": {
    "href": "api/AlgoSdk.SignProgramMultisigRequest.html",
    "title": "Struct SignProgramMultisigRequest | Unity Algorand SDK",
    "keywords": "Struct SignProgramMultisigRequest Implements IEquatable < SignProgramMultisigRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct SignProgramMultisigRequest Fields Address Declaration public Address Address Field Value Type Description Address Data Declaration public byte[] Data Field Value Type Description Byte [] Multisig Declaration public Multisig Multisig Field Value Type Description Multisig PublicKey Declaration public Ed25519.PublicKey PublicKey Field Value Type Description Ed25519.PublicKey WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(SignProgramMultisigRequest) Declaration public bool Equals(SignProgramMultisigRequest other) Parameters Type Name Description SignProgramMultisigRequest other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.SignProgramMultisigResponse.html": {
    "href": "api/AlgoSdk.SignProgramMultisigResponse.html",
    "title": "Struct SignProgramMultisigResponse | Unity Algorand SDK",
    "keywords": "Struct SignProgramMultisigResponse Implements IEquatable < SignProgramMultisigResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct SignProgramMultisigResponse Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String SignedProgram Declaration public byte[] SignedProgram Field Value Type Description Byte [] Methods Equals(SignProgramMultisigResponse) Declaration public bool Equals(SignProgramMultisigResponse other) Parameters Type Name Description SignProgramMultisigResponse other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.SignProgramRequest.html": {
    "href": "api/AlgoSdk.SignProgramRequest.html",
    "title": "Struct SignProgramRequest | Unity Algorand SDK",
    "keywords": "Struct SignProgramRequest Implements IEquatable < SignProgramRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct SignProgramRequest Fields Address Declaration public Address Address Field Value Type Description Address Data Declaration public byte[] Data Field Value Type Description Byte [] WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(SignProgramRequest) Declaration public bool Equals(SignProgramRequest other) Parameters Type Name Description SignProgramRequest other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.SignProgramResponse.html": {
    "href": "api/AlgoSdk.SignProgramResponse.html",
    "title": "Struct SignProgramResponse | Unity Algorand SDK",
    "keywords": "Struct SignProgramResponse Implements IEquatable < SignProgramResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct SignProgramResponse Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String SignedProgram Declaration public Sig SignedProgram Field Value Type Description Sig Methods Equals(SignProgramResponse) Declaration public bool Equals(SignProgramResponse other) Parameters Type Name Description SignProgramResponse other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.SignTransactionRequest.html": {
    "href": "api/AlgoSdk.SignTransactionRequest.html",
    "title": "Struct SignTransactionRequest | Unity Algorand SDK",
    "keywords": "Struct SignTransactionRequest Implements IEquatable < SignTransactionRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct SignTransactionRequest Fields PublicKey Declaration public Ed25519.PublicKey PublicKey Field Value Type Description Ed25519.PublicKey Transaction Declaration public byte[] Transaction Field Value Type Description Byte [] WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(SignTransactionRequest) Declaration public bool Equals(SignTransactionRequest other) Parameters Type Name Description SignTransactionRequest other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.SignTransactionResponse.html": {
    "href": "api/AlgoSdk.SignTransactionResponse.html",
    "title": "Struct SignTransactionResponse | Unity Algorand SDK",
    "keywords": "Struct SignTransactionResponse Implements IEquatable < SignTransactionResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct SignTransactionResponse Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String SignedTransaction Declaration public byte[] SignedTransaction Field Value Type Description Byte [] Methods Equals(SignTransactionResponse) Declaration public bool Equals(SignTransactionResponse other) Parameters Type Name Description SignTransactionResponse other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.StateSchema.html": {
    "href": "api/AlgoSdk.StateSchema.html",
    "title": "Struct StateSchema | Unity Algorand SDK",
    "keywords": "Struct StateSchema The StateSchema object is only required for the create application call transaction. The StateSchema object must be fully populated for both the GlobalStateSchema and LocalStateSchema objects. Implements IEquatable < StateSchema > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct StateSchema Fields NumByteSlices Maximum number of integer values that may be stored in the [global || local] application key/value store. Immutable. Declaration public ulong NumByteSlices Field Value Type Description UInt64 NumUints Maximum number of byte slices values that may be stored in the [global || local] application key/value store. Immutable. Declaration public ulong NumUints Field Value Type Description UInt64 Methods Equals(StateSchema) Declaration public bool Equals(StateSchema other) Parameters Type Name Description StateSchema other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.Status.html": {
    "href": "api/AlgoSdk.Status.html",
    "title": "Struct Status | Unity Algorand SDK",
    "keywords": "Struct Status The node status from GetCurrentStatus() and GetStatusAfterWaitingForRound(UInt64) Implements IEquatable < Status > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Status Fields Catchpoint The current catchpoint that is being caught up to Declaration public string Catchpoint Field Value Type Description String CatchpointAcquiredBlocks The number of blocks that have already been obtained by the node as part of the catchup Declaration public ulong CatchpointAcquiredBlocks Field Value Type Description UInt64 CatchpointProcessedAmounts The number of accounts from the current catchpoint that have been processed so far as part of the catchup Declaration public ulong CatchpointProcessedAmounts Field Value Type Description UInt64 CatchpointTotalAccounts The total number of accounts included in the current catchpoint Declaration public ulong CatchpointTotalAccounts Field Value Type Description UInt64 CatchpointTotalBlocks The total number of blocks that are required to complete the current catchpoint catchup Declaration public ulong CatchpointTotalBlocks Field Value Type Description UInt64 CatchpointVerifiedAccounts The number of accounts from the current catchpoint that have been verified so far as part of the catchup Declaration public ulong CatchpointVerifiedAccounts Field Value Type Description UInt64 CatchupTime CatchupTime in nanoseconds Declaration public ulong CatchupTime Field Value Type Description UInt64 LastCatchpoint The last catchpoint seen by the node Declaration public string LastCatchpoint Field Value Type Description String LastRound indicates the last round seen Declaration public ulong LastRound Field Value Type Description UInt64 LastVersion indicates the last consensus version supported Declaration public string LastVersion Field Value Type Description String NextVersion NextVersion of consensus protocol to use Declaration public string NextVersion Field Value Type Description String NextVersionRound NextVersionRound is the round at which the next consensus version will apply Declaration public ulong NextVersionRound Field Value Type Description UInt64 NextVersionSupported NextVersionSupported indicates whether the next consensus version is supported by this node Declaration public bool NextVersionSupported Field Value Type Description Boolean StoppedAtUnsupportedRound StoppedAtUnsupportedRound indicates that the node does not support the new rounds and has stopped making progress Declaration public bool StoppedAtUnsupportedRound Field Value Type Description Boolean TimeSinceLastRound TimeSinceLastRound in nanoseconds Declaration public ulong TimeSinceLastRound Field Value Type Description UInt64 Methods Equals(Status) Declaration public bool Equals(Status other) Parameters Type Name Description Status other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.StringComparer.html": {
    "href": "api/AlgoSdk.StringComparer.html",
    "title": "Struct StringComparer | Unity Algorand SDK",
    "keywords": "Struct StringComparer Implements IEqualityComparer < String > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct StringComparer Fields Instance Declaration public static readonly StringComparer Instance Field Value Type Description StringComparer Methods Equals(String, String) Declaration public static bool Equals(string x, string y) Parameters Type Name Description String x String y Returns Type Description Boolean Implements IEqualityComparer<>"
  },
  "api/AlgoSdk.TealBytes.html": {
    "href": "api/AlgoSdk.TealBytes.html",
    "title": "Struct TealBytes | Unity Algorand SDK",
    "keywords": "Struct TealBytes Implements IEquatable < TealBytes > IByteArray Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct TealBytes Fields Bytes Declaration public FixedBytes128 Bytes Field Value Type Description FixedBytes128 SizeBytes Declaration public const int SizeBytes = 128 Field Value Type Description Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public readonly int Length { get; } Property Value Type Description Int32 Methods Equals(TealBytes) Declaration public bool Equals(TealBytes other) Parameters Type Name Description TealBytes other Returns Type Description Boolean GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void * Implements IEquatable<> IByteArray"
  },
  "api/AlgoSdk.TealCompilationResult.html": {
    "href": "api/AlgoSdk.TealCompilationResult.html",
    "title": "Struct TealCompilationResult | Unity Algorand SDK",
    "keywords": "Struct TealCompilationResult Result from TealCompile(String) Implements IEquatable < TealCompilationResult > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct TealCompilationResult Fields CompiledBytesBase64 base64 encoded program bytes Declaration public string CompiledBytesBase64 Field Value Type Description String Hash base32 SHA512_256 of program bytes (Address style) Declaration public string Hash Field Value Type Description String Methods Equals(TealCompilationResult) Declaration public bool Equals(TealCompilationResult other) Parameters Type Name Description TealCompilationResult other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.TealKeyValue.html": {
    "href": "api/AlgoSdk.TealKeyValue.html",
    "title": "Struct TealKeyValue | Unity Algorand SDK",
    "keywords": "Struct TealKeyValue Represents a key-value pair in an application store. Implements IEquatable < TealKeyValue > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct TealKeyValue Fields Key Declaration public FixedString128Bytes Key Field Value Type Description FixedString128Bytes Value Declaration public TealValue Value Field Value Type Description TealValue Methods Equals(TealKeyValue) Declaration public bool Equals(TealKeyValue other) Parameters Type Name Description TealKeyValue other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.TealValue.html": {
    "href": "api/AlgoSdk.TealValue.html",
    "title": "Struct TealValue | Unity Algorand SDK",
    "keywords": "Struct TealValue Represents a TEAL value. Implements IEquatable < TealValue > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct TealValue Fields Bytes [tb] bytes value. Declaration public TealBytes Bytes Field Value Type Description TealBytes Type See TealValueType Declaration public TealValueType Type Field Value Type Description TealValueType UintValue [ui] uint value. Declaration public ulong UintValue Field Value Type Description UInt64 Methods Equals(TealValue) Declaration public bool Equals(TealValue other) Parameters Type Name Description TealValue other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.TealValueType.html": {
    "href": "api/AlgoSdk.TealValueType.html",
    "title": "Enum TealValueType | Unity Algorand SDK",
    "keywords": "Enum TealValueType TEAL Value Type. Value 1 refers to bytes, value 2 refers to uint. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum TealValueType : byte Fields Name Description Bytes None Uint"
  },
  "api/AlgoSdk.TokenizedClientExtensions.html": {
    "href": "api/AlgoSdk.TokenizedClientExtensions.html",
    "title": "Class TokenizedClientExtensions | Unity Algorand SDK",
    "keywords": "Class TokenizedClientExtensions Inheritance Object TokenizedClientExtensions Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class TokenizedClientExtensions Methods Delete<T>(T, String) Declaration public static AlgoApiRequest Delete<T>(this T client, string endpoint) where T : IAlgoApiClient Parameters Type Name Description T client String endpoint Returns Type Description AlgoApiRequest Type Parameters Name Description T Get<T>(T, String) Declaration public static AlgoApiRequest Get<T>(this T client, string endpoint) where T : IAlgoApiClient Parameters Type Name Description T client String endpoint Returns Type Description AlgoApiRequest Type Parameters Name Description T GetUrl<T>(T, String) Declaration public static string GetUrl<T>(this T client, string endpoint) where T : IAlgoApiClient Parameters Type Name Description T client String endpoint Returns Type Description String Type Parameters Name Description T Post<T>(T, String) Declaration public static AlgoApiRequest Post<T>(this T client, string endpoint) where T : IAlgoApiClient Parameters Type Name Description T client String endpoint Returns Type Description AlgoApiRequest Type Parameters Name Description T"
  },
  "api/AlgoSdk.Transaction.html": {
    "href": "api/AlgoSdk.Transaction.html",
    "title": "Struct Transaction | Unity Algorand SDK",
    "keywords": "Struct Transaction Implements IAppCallTxn IAssetConfigTxn IAssetFreezeTxn IEquatable < Transaction > ITransaction Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Transaction : IAppCallTxn, IAssetConfigTxn, IAssetFreezeTxn, ITransaction Fields ApplicationCallParams Params found in Application Call Transactions. Declaration public AppCallTxn.Params ApplicationCallParams Field Value Type Description AppCallTxn.Params AssetConfigurationParams Params found in Asset Configuration Transactions. Declaration public AssetConfigTxn.Params AssetConfigurationParams Field Value Type Description AssetConfigTxn.Params AssetFreezeParams Params found in Asset Freeze Transactions. Declaration public AssetFreezeTxn.Params AssetFreezeParams Field Value Type Description AssetFreezeTxn.Params AssetTransferParams Params found in Asset Transfer Transactions. Declaration public AssetTransferTxn.Params AssetTransferParams Field Value Type Description AssetTransferTxn.Params HeaderParams Params found in all transactions. Declaration public TransactionHeader HeaderParams Field Value Type Description TransactionHeader KeyRegistrationParams Params found in Key Registration Transactions. Declaration public KeyRegTxn.Params KeyRegistrationParams Field Value Type Description KeyRegTxn.Params PaymentParams Params found in Payment Transactions. Declaration public PaymentTxn.Params PaymentParams Field Value Type Description PaymentTxn.Params Signature The signature used for this Transaction. Declaration public TransactionSignature Signature Field Value Type Description TransactionSignature SignaturePrefix Prefix bytes for signing transaction bytes. Declaration public static readonly byte[] SignaturePrefix Field Value Type Description Byte [] Properties Accounts Declaration public Address[] Accounts { get; set; } Property Value Type Description Address [] Amount Declaration public ulong Amount { get; set; } Property Value Type Description UInt64 AppArguments Declaration public CompiledTeal AppArguments { get; set; } Property Value Type Description CompiledTeal ApplicationId Declaration public ulong ApplicationId { get; set; } Property Value Type Description UInt64 ApprovalProgram Declaration public CompiledTeal ApprovalProgram { get; set; } Property Value Type Description CompiledTeal AssetAmount Declaration public ulong AssetAmount { get; set; } Property Value Type Description UInt64 AssetCloseTo Declaration public Address AssetCloseTo { get; set; } Property Value Type Description Address AssetFrozen Declaration public Optional<bool> AssetFrozen { get; set; } Property Value Type Description Optional < Boolean > AssetParams Declaration public AssetParams AssetParams { get; set; } Property Value Type Description AssetParams AssetReceiver Declaration public Address AssetReceiver { get; set; } Property Value Type Description Address AssetSender Declaration public Address AssetSender { get; set; } Property Value Type Description Address AuthAddress Declaration public Address AuthAddress { get; set; } Property Value Type Description Address ClearStateProgram Declaration public CompiledTeal ClearStateProgram { get; set; } Property Value Type Description CompiledTeal CloseRemainderTo Declaration public Address CloseRemainderTo { get; set; } Property Value Type Description Address CloseRewards Declaration public ulong CloseRewards { get; set; } Property Value Type Description UInt64 ClosingAmount Declaration public ulong ClosingAmount { get; set; } Property Value Type Description UInt64 ConfigAsset Declaration public ulong ConfigAsset { get; set; } Property Value Type Description UInt64 ConfirmedRound Declaration public ulong ConfirmedRound { get; set; } Property Value Type Description UInt64 CreatedApplicationIndex Declaration public ulong CreatedApplicationIndex { get; set; } Property Value Type Description UInt64 CreatedAssetIndex Declaration public ulong CreatedAssetIndex { get; set; } Property Value Type Description UInt64 ExtraProgramPages Declaration public ulong ExtraProgramPages { get; set; } Property Value Type Description UInt64 Fee Declaration public ulong Fee { get; set; } Property Value Type Description UInt64 FirstValidRound Declaration public ulong FirstValidRound { get; set; } Property Value Type Description UInt64 ForeignApps Declaration public ulong[] ForeignApps { get; set; } Property Value Type Description UInt64 [] ForeignAssets Declaration public ulong[] ForeignAssets { get; set; } Property Value Type Description UInt64 [] FreezeAccount Declaration public Address FreezeAccount { get; set; } Property Value Type Description Address FreezeAsset Declaration public ulong FreezeAsset { get; set; } Property Value Type Description UInt64 GenesisHash Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisId Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes GlobalStateDelta Declaration public EvalDeltaKeyValue[] GlobalStateDelta { get; set; } Property Value Type Description EvalDeltaKeyValue [] GlobalStateSchema Declaration public StateSchema GlobalStateSchema { get; set; } Property Value Type Description StateSchema Group Declaration public Sha512_256_Hash Group { get; set; } Property Value Type Description Sha512_256_Hash Id Declaration public TransactionId Id { get; set; } Property Value Type Description TransactionId IntraRoundOffset Declaration public ulong IntraRoundOffset { get; set; } Property Value Type Description UInt64 LastValidRound Declaration public ulong LastValidRound { get; set; } Property Value Type Description UInt64 Lease Declaration public Sha512_256_Hash Lease { get; set; } Property Value Type Description Sha512_256_Hash LocalStateDelta Declaration public AccountStateDelta[] LocalStateDelta { get; set; } Property Value Type Description AccountStateDelta [] LocalStateSchema Declaration public StateSchema LocalStateSchema { get; set; } Property Value Type Description StateSchema NonParticipation Declaration public Optional<bool> NonParticipation { get; set; } Property Value Type Description Optional < Boolean > Note Declaration public byte[] Note { get; set; } Property Value Type Description Byte [] OnComplete Declaration public OnCompletion OnComplete { get; set; } Property Value Type Description OnCompletion Receiver Declaration public Address Receiver { get; set; } Property Value Type Description Address ReceiverRewards Declaration public ulong ReceiverRewards { get; set; } Property Value Type Description UInt64 RekeyTo Declaration public Address RekeyTo { get; set; } Property Value Type Description Address RoundTime Declaration public ulong RoundTime { get; set; } Property Value Type Description UInt64 SelectionParticipationKey Declaration public VrfPubKey SelectionParticipationKey { get; set; } Property Value Type Description VrfPubKey Sender Declaration public Address Sender { get; set; } Property Value Type Description Address SenderRewards Declaration public ulong SenderRewards { get; set; } Property Value Type Description UInt64 TransactionType Declaration public TransactionType TransactionType { get; set; } Property Value Type Description TransactionType VoteFirst Declaration public ulong VoteFirst { get; set; } Property Value Type Description UInt64 VoteKeyDilution Declaration public ulong VoteKeyDilution { get; set; } Property Value Type Description UInt64 VoteLast Declaration public ulong VoteLast { get; set; } Property Value Type Description UInt64 VoteParticipationKey Declaration public Ed25519.PublicKey VoteParticipationKey { get; set; } Property Value Type Description Ed25519.PublicKey XferAsset Declaration public ulong XferAsset { get; set; } Property Value Type Description UInt64 Methods AppCall(Address, TransactionParams, UInt64, OnCompletion, Byte[], Address[], UInt64[], UInt64[]) Create an AppCallTxn used to call an application. Declaration public static AppCallTxn AppCall(Address sender, TransactionParams txnParams, ulong applicationId, OnCompletion onComplete = OnCompletion.NoOp, byte[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams UInt64 applicationId ID of the application being configured. OnCompletion onComplete Defines what additional actions occur with the transaction. Byte [] appArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Address [] accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. UInt64 [] foreignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. UInt64 [] foreignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Returns Type Description AppCallTxn An AppCallTxn used to call an application. AppClearState(Address, TransactionParams, UInt64, Byte[], Address[], UInt64[], UInt64[]) Create an AppCallTxn with params to clear state with your account. Declaration public static AppCallTxn AppClearState(Address sender, TransactionParams txnParams, ulong applicationId, byte[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams UInt64 applicationId ID of the application being configured. Byte [] appArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Address [] accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. UInt64 [] foreignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. UInt64 [] foreignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Returns Type Description AppCallTxn An AppCallTxn with params to clear app state with your account. AppCloseOut(Address, TransactionParams, UInt64, Byte[], Address[], UInt64[], UInt64[]) Create an AppCallTxn with params to close out state with your account. Declaration public static AppCallTxn AppCloseOut(Address sender, TransactionParams txnParams, ulong applicationId, byte[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams UInt64 applicationId ID of the application being configured. Byte [] appArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Address [] accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. UInt64 [] foreignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. UInt64 [] foreignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Returns Type Description AppCallTxn An AppCallTxn with params set to close out state with your account. AppCreate(Address, TransactionParams, Byte[], Byte[], StateSchema, StateSchema, UInt64) Create an AppCallTxn with params to create apps. Declaration public static AppCallTxn AppCreate(Address sender, TransactionParams txnParams, byte[] approvalProgram, byte[] clearStateProgram, StateSchema globalStateSchema = default(StateSchema), StateSchema localStateSchema = default(StateSchema), ulong extraProgramPages = 0UL) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams Byte [] approvalProgram Logic executed for every application transaction, except when on-completion is set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Approval programs may reject the transaction. Byte [] clearStateProgram Logic executed for application transactions with on-completion set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Clear state programs cannot reject the transaction. StateSchema globalStateSchema Holds the maximum number of global state values defined within a StateSchema object. StateSchema localStateSchema Holds the maximum number of local state values defined within a StateSchema object. UInt64 extraProgramPages Number of additional pages allocated to the application's approval and clear state programs. Each ExtraProgramPages is 2048 bytes. The sum of ApprovalProgram and ClearStateProgram may not exceed 2048*(1+ExtraProgramPages) bytes. Returns Type Description AppCallTxn An AppCallTxn with params set to create apps AppDelete(Address, TransactionParams, UInt64, Byte[], Address[], UInt64[], UInt64[]) Create an AppCallTxn used to delete an application. Declaration public static AppCallTxn AppDelete(Address sender, TransactionParams txnParams, ulong applicationId, byte[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams UInt64 applicationId ID of the application being configured. Byte [] appArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Address [] accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. UInt64 [] foreignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. UInt64 [] foreignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Returns Type Description AppCallTxn An AppCallTxn with params to delete an application. AppOptIn(Address, TransactionParams, UInt64, Byte[], Address[], UInt64[], UInt64[]) Create an AppCallTxn used to opt in to an application. Declaration public static AppCallTxn AppOptIn(Address sender, TransactionParams txnParams, ulong applicationId, byte[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams UInt64 applicationId ID of the application being configured. Byte [] appArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Address [] accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. UInt64 [] foreignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. UInt64 [] foreignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Returns Type Description AppCallTxn An AppCallTxn with params to opt in to an application. AppUpdateTxn(Address, TransactionParams, UInt64, Byte[], Byte[], UInt64, Byte[], Address[], UInt64[], UInt64[]) Create an AppCallTxn used to update an application. Declaration public static AppCallTxn AppUpdateTxn(Address sender, TransactionParams txnParams, ulong applicationId, byte[] approvalProgram = null, byte[] clearStateProgram = null, ulong extraProgramPages = 0UL, byte[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams UInt64 applicationId ID of the application being configured. Byte [] approvalProgram Logic executed for every application transaction, except when on-completion is set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Approval programs may reject the transaction. Byte [] clearStateProgram Logic executed for application transactions with on-completion set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Clear state programs cannot reject the transaction. UInt64 extraProgramPages Number of additional pages allocated to the application's approval and clear state programs. Each ExtraProgramPages is 2048 bytes. The sum of ApprovalProgram and ClearStateProgram may not exceed 2048*(1+ExtraProgramPages) bytes. Byte [] appArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Address [] accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. UInt64 [] foreignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. UInt64 [] foreignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Returns Type Description AppCallTxn An AppCallTxn with params to update an application. AssetAccept(Address, TransactionParams, UInt64) Create an AssetTransferTxn for opting in to an asset. Declaration public static AssetTransferTxn AssetAccept(Address sender, TransactionParams txnParams, ulong xferAsset) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams UInt64 xferAsset The unique ID of the asset to opt-in to. Returns Type Description AssetTransferTxn An AssetTransferTxn for opting in to an asset. AssetClawback(Address, TransactionParams, UInt64, UInt64, Address, Address) Creates a form of AssetTransferTxn to clawback assets from an account. Declaration public static AssetTransferTxn AssetClawback(Address sender, TransactionParams txnParams, ulong xferAsset, ulong assetAmount, Address assetSender, Address assetReceiver) Parameters Type Name Description Address sender The sender of this transaction must be the clawback account specified in the asset configuration. TransactionParams txnParams See TransactionParams UInt64 xferAsset The unique ID of the asset to be transferred. UInt64 assetAmount The amount of the asset to be transferred. Address assetSender The address from which the funds will be withdrawn. Address assetReceiver The recipient of the asset transfer. Returns Type Description AssetTransferTxn A form of AssetTransferTxn to clawback assets from an account AssetConfigure(Address, TransactionParams, UInt64, AssetParams) Create an AssetConfigTxn that will configure an asset. Declaration public static AssetConfigTxn AssetConfigure(Address sender, TransactionParams txnParams, ulong assetId, AssetParams assetParams) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams UInt64 assetId The unique asset id. AssetParams assetParams See AssetParams for all available fields. Returns Type Description AssetConfigTxn An AssetConfigTxn that will configure an asset. AssetCreate(Address, TransactionParams, AssetParams) Create an AssetConfigTxn that will create an asset. Declaration public static AssetConfigTxn AssetCreate(Address sender, TransactionParams txnParams, AssetParams assetParams) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams AssetParams assetParams See AssetParams for all available fields. Returns Type Description AssetConfigTxn An AssetConfigTxn that will create an asset. AssetDelete(Address, TransactionParams, UInt64) Create an AssetConfigTxn that will delete an asset. Declaration public static AssetConfigTxn AssetDelete(Address sender, TransactionParams txnParams, ulong assetId) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams UInt64 assetId The unique asset id. Returns Type Description AssetConfigTxn An AssetConfigTxn that will delete an asset. AssetFreeze(Address, TransactionParams, Address, UInt64, Boolean) Create an AssetFreezeTxn which is used to freeze or unfreeze an asset from transfers. Declaration public static AssetFreezeTxn AssetFreeze(Address sender, TransactionParams txnParams, Address freezeAccount, ulong freezeAsset, bool assetFrozen) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams Address freezeAccount The address of the account whose asset is being frozen or unfrozen. UInt64 freezeAsset The asset ID being frozen or unfrozen. Boolean assetFrozen True to freeze the asset. Returns Type Description AssetFreezeTxn An AssetFreezeTxn . AssetTransfer(Address, TransactionParams, UInt64, UInt64, Address) Create an AssetTransferTxn for transferring an asset to another account. Declaration public static AssetTransferTxn AssetTransfer(Address sender, TransactionParams txnParams, ulong xferAsset, ulong assetAmount, Address assetReceiver) Parameters Type Name Description Address sender The address of the account that pays the fee and sends the asset amount. TransactionParams txnParams See TransactionParams UInt64 xferAsset The unique ID of the asset to be transferred. UInt64 assetAmount The amount of the asset to be transferred. A zero amount transferred to self allocates that asset in the account's Asset map. Address assetReceiver Returns Type Description AssetTransferTxn An AssetTransferTxn for transferring an asset to another account. CopyFrom(Transaction) Declaration public void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction CopyTo(ref Transaction) Declaration public void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction Equals(Transaction) Declaration public bool Equals(Transaction other) Parameters Type Name Description Transaction other Returns Type Description Boolean EstimateBlockSizeBytes() Estimate the size this transaction will take up in a block in bytes. Declaration public int EstimateBlockSizeBytes() Returns Type Description Int32 Size in bytes. GetGroupId(Transaction[]) Calculates the group id for atomic transfers. Declaration public static TransactionId GetGroupId(params Transaction[] txns) Parameters Type Name Description Transaction [] txns The transactions belonging to this group. Cannot be more than MaxSize transactions. Returns Type Description TransactionId A TransactionId GetGroupId(TransactionId[]) Calculates the group id for atomic transfers. Declaration public static TransactionId GetGroupId(params TransactionId[] txids) Parameters Type Name Description TransactionId [] txids The transaction ids belonging to this group. Cannot be more than MaxSize transactions. Returns Type Description TransactionId A TransactionId GetId() Calculate the ID for this transaction. Declaration public TransactionId GetId() Returns Type Description TransactionId A TransactionId calculated from its current parameters. GetSignature(Ed25519.SecretKeyHandle) Get the signature of this transaction using a private key. Declaration public Sig GetSignature(Ed25519.SecretKeyHandle secretKey) Parameters Type Name Description Ed25519.SecretKeyHandle secretKey The private key to use to sign this transaction. Returns Type Description Sig A Sig . KeyRegOffline(Address, TransactionParams) Register account offline for participation. Declaration public static KeyRegTxn KeyRegOffline(Address account, TransactionParams txnParams) Parameters Type Name Description Address account Account to register offline. This is the sender of the transaction. TransactionParams txnParams See TransactionParams Returns Type Description KeyRegTxn A KeyRegTxn . KeyRegOnline(Address, TransactionParams, AccountParticipation) Register account online for participation. Declaration public static KeyRegTxn KeyRegOnline(Address account, TransactionParams txnParams, AccountParticipation accountParticipation) Parameters Type Name Description Address account Account to register online. This is the sender of the transaction. TransactionParams txnParams See TransactionParams AccountParticipation accountParticipation See AccountParticipation Returns Type Description KeyRegTxn A KeyRegTxn . Payment(Address, TransactionParams, Address, UInt64, Address) Create a PaymentTxn Declaration public static PaymentTxn Payment(Address sender, TransactionParams txnParams, Address receiver, ulong amount, Address closeRemainderTo = default(Address)) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams Address receiver The address of the account that receives the amount. UInt64 amount The total amount to be sent in microAlgos. Address closeRemainderTo When set, it indicates that the transaction is requesting that the Sender account should be closed, and all remaining funds, after the fee and amount are paid, be transferred to this address. Returns Type Description PaymentTxn A PaymentTxn Sign(Ed25519.SecretKeyHandle) Sign this transaction with a private key. Declaration public SignedTransaction Sign(Ed25519.SecretKeyHandle secretKey) Parameters Type Name Description Ed25519.SecretKeyHandle secretKey The account private key to use to sign this transaction. Returns Type Description SignedTransaction A SignedTransaction . ToSignatureMessage(Allocator) Serializes this transaction to a message to use for signing. Declaration public NativeByteArray ToSignatureMessage(Allocator allocator) Parameters Type Name Description Allocator allocator How memory should be allocated for the returned byte array. Returns Type Description NativeByteArray A ToTypedTxn<T>() Converts this transaction to a specific transaction type implementing ITransaction . Declaration public T ToTypedTxn<T>() where T : struct, ITransaction Returns Type Description T A typed transaction implementing ITransaction . Type Parameters Name Description T The type of the transaction to convert to. Implements IAppCallTxn IAssetConfigTxn IAssetFreezeTxn IEquatable<> ITransaction"
  },
  "api/AlgoSdk.TransactionExtensions.html": {
    "href": "api/AlgoSdk.TransactionExtensions.html",
    "title": "Class TransactionExtensions | Unity Algorand SDK",
    "keywords": "Class TransactionExtensions Inheritance Object TransactionExtensions Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class TransactionExtensions Methods EstimateBlockSizeBytes<T>(T) Declaration public static int EstimateBlockSizeBytes<T>(this T txn) where T : ITransaction Parameters Type Name Description T txn Returns Type Description Int32 Type Parameters Name Description T GetId<T>(T) Declaration public static TransactionId GetId<T>(this T txn) where T : ITransaction Parameters Type Name Description T txn Returns Type Description TransactionId Type Parameters Name Description T GetSignature<T>(T, Ed25519.SecretKeyHandle) Declaration public static Sig GetSignature<T>(this T txn, Ed25519.SecretKeyHandle secretKey) where T : ITransaction Parameters Type Name Description T txn Ed25519.SecretKeyHandle secretKey Returns Type Description Sig Type Parameters Name Description T GetSuggestedFee<T>(T, TransactionParams) Declaration public static ulong GetSuggestedFee<T>(this T txn, TransactionParams txnParams) where T : ITransaction Parameters Type Name Description T txn TransactionParams txnParams Returns Type Description UInt64 Type Parameters Name Description T Sign<T>(T, Ed25519.SecretKeyHandle) Declaration public static Signed<T> Sign<T>(this T txn, Ed25519.SecretKeyHandle secretKey) where T : ITransaction Parameters Type Name Description T txn Ed25519.SecretKeyHandle secretKey Returns Type Description Signed <T> Type Parameters Name Description T ToSignatureMessage<T>(T, Allocator) Declaration public static NativeByteArray ToSignatureMessage<T>(this T txn, Allocator allocator) where T : ITransaction Parameters Type Name Description T txn Allocator allocator Returns Type Description NativeByteArray Type Parameters Name Description T"
  },
  "api/AlgoSdk.TransactionGroup.html": {
    "href": "api/AlgoSdk.TransactionGroup.html",
    "title": "Struct TransactionGroup | Unity Algorand SDK",
    "keywords": "Struct TransactionGroup A group of transactions used to generate a group id for atomic transactions. Implements IEquatable < TransactionGroup > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct TransactionGroup Fields IdPrefix The prefix to use when converting this group of transactions to bytes. Declaration public static readonly byte[] IdPrefix Field Value Type Description Byte [] MaxSize Max number of allowed transactions in an atomic transaction. Declaration public const int MaxSize = 16 Field Value Type Description Int32 Txns The list of transaction ids belonging to this group. Declaration public TransactionId[] Txns Field Value Type Description TransactionId [] Methods Equals(TransactionGroup) Declaration public bool Equals(TransactionGroup other) Parameters Type Name Description TransactionGroup other Returns Type Description Boolean GetId() Hash the transaction ids contained in this group. Declaration public TransactionId GetId() Returns Type Description TransactionId A TransactionId Implements IEquatable<>"
  },
  "api/AlgoSdk.TransactionHeader.html": {
    "href": "api/AlgoSdk.TransactionHeader.html",
    "title": "Struct TransactionHeader | Unity Algorand SDK",
    "keywords": "Struct TransactionHeader Contains parameters used in all transaction types. Implements IEquatable < TransactionHeader > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct TransactionHeader Remarks For the most part, this is used internally in the sdk and shouldn't be used directly. Constructors TransactionHeader(Address, TransactionType, TransactionParams) Declaration public TransactionHeader(Address sender, TransactionType transactionType, TransactionParams transactionParams) Parameters Type Name Description Address sender TransactionType transactionType TransactionParams transactionParams Fields AuthAddress Declaration public Address AuthAddress Field Value Type Description Address CloseRewards Declaration public ulong CloseRewards Field Value Type Description UInt64 ClosingAmount Declaration public ulong ClosingAmount Field Value Type Description UInt64 ConfirmedRound Declaration public ulong ConfirmedRound Field Value Type Description UInt64 CreatedApplicationIndex Declaration public ulong CreatedApplicationIndex Field Value Type Description UInt64 CreatedAssetIndex Declaration public ulong CreatedAssetIndex Field Value Type Description UInt64 Fee Declaration public ulong Fee Field Value Type Description UInt64 FirstValidRound Declaration public ulong FirstValidRound Field Value Type Description UInt64 GenesisHash Declaration public GenesisHash GenesisHash Field Value Type Description GenesisHash GenesisId Declaration public FixedString32Bytes GenesisId Field Value Type Description FixedString32Bytes GlobalStateDelta Declaration public EvalDeltaKeyValue[] GlobalStateDelta Field Value Type Description EvalDeltaKeyValue [] Group Declaration public Sha512_256_Hash Group Field Value Type Description Sha512_256_Hash Id Declaration public TransactionId Id Field Value Type Description TransactionId IntraRoundOffset Declaration public ulong IntraRoundOffset Field Value Type Description UInt64 LastValidRound Declaration public ulong LastValidRound Field Value Type Description UInt64 Lease Declaration public Sha512_256_Hash Lease Field Value Type Description Sha512_256_Hash LocalStateDelta Declaration public AccountStateDelta[] LocalStateDelta Field Value Type Description AccountStateDelta [] Note Declaration public byte[] Note Field Value Type Description Byte [] OnCompletion Declaration public OnCompletion OnCompletion Field Value Type Description OnCompletion ReceiverRewards Declaration public ulong ReceiverRewards Field Value Type Description UInt64 RekeyTo Declaration public Address RekeyTo Field Value Type Description Address RoundTime Declaration public ulong RoundTime Field Value Type Description UInt64 Sender Declaration public Address Sender Field Value Type Description Address SenderRewards Declaration public ulong SenderRewards Field Value Type Description UInt64 TransactionType Declaration public TransactionType TransactionType Field Value Type Description TransactionType Methods Equals(TransactionHeader) Declaration public bool Equals(TransactionHeader other) Parameters Type Name Description TransactionHeader other Returns Type Description Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() Implements IEquatable<>"
  },
  "api/AlgoSdk.TransactionId.html": {
    "href": "api/AlgoSdk.TransactionId.html",
    "title": "Struct TransactionId | Unity Algorand SDK",
    "keywords": "Struct TransactionId A SHA512 256-truncated hash of a transaction's bytes. This is usually Base32 encoded with the padding chars trimmed. Implements IByteArray IEquatable < TransactionId > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct TransactionId Fields SizeBytes Declaration public const int SizeBytes = default(int) Field Value Type Description Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public readonly int Length { get; } Property Value Type Description Int32 Methods Equals(TransactionId) Declaration public bool Equals(TransactionId other) Parameters Type Name Description TransactionId other Returns Type Description Boolean FromString(String) Declaration public static TransactionId FromString(string s) Parameters Type Name Description String s Returns Type Description TransactionId FromString<T>(T) Declaration public static TransactionId FromString<T>(T fs) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Returns Type Description TransactionId Type Parameters Name Description T GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void * ToFixedString() Declaration public FixedString64Bytes ToFixedString() Returns Type Description FixedString64Bytes ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators Implicit(TransactionId to Sha512_256_Hash) Declaration public static implicit operator Sha512_256_Hash(TransactionId txid) Parameters Type Name Description TransactionId txid Returns Type Description Sha512_256_Hash Implicit(Sha512_256_Hash to TransactionId) Declaration public static implicit operator TransactionId(Sha512_256_Hash hash) Parameters Type Name Description Sha512_256_Hash hash Returns Type Description TransactionId Implements IByteArray IEquatable<>"
  },
  "api/AlgoSdk.TransactionIdResponse.html": {
    "href": "api/AlgoSdk.TransactionIdResponse.html",
    "title": "Struct TransactionIdResponse | Unity Algorand SDK",
    "keywords": "Struct TransactionIdResponse Response from SendTransaction(Byte[]) . Wraps a TransactionId . Implements IEquatable < TransactionIdResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct TransactionIdResponse Fields TxId The returned TransactionId Declaration public TransactionId TxId Field Value Type Description TransactionId Methods Equals(TransactionIdResponse) Declaration public bool Equals(TransactionIdResponse other) Parameters Type Name Description TransactionIdResponse other Returns Type Description Boolean Operators Implicit(TransactionIdResponse to TransactionId) Declaration public static implicit operator TransactionId(TransactionIdResponse resp) Parameters Type Name Description TransactionIdResponse resp Returns Type Description TransactionId Implements IEquatable<>"
  },
  "api/AlgoSdk.TransactionParams.html": {
    "href": "api/AlgoSdk.TransactionParams.html",
    "title": "Struct TransactionParams | Unity Algorand SDK",
    "keywords": "Struct TransactionParams Params used for setting all transactions. Contains fee, genesis info, and round constraints. Usually this is retrieved from GetSuggestedParams() then modified. Implements IEquatable < TransactionParams > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct TransactionParams Fields ConsensusVersion Indicates the consensus protocol version as of LastRound . Declaration public string ConsensusVersion Field Value Type Description String Fee Fee is the suggested transaction fee in units of micro-Algos per byte. Fee may fall to zero but transactions must still have a fee of at least MinFee for the current network protocol. Declaration public ulong Fee Field Value Type Description UInt64 FirstValidRound The last valid round for a transaction. Declaration public ulong FirstValidRound Field Value Type Description UInt64 GenesisHash The hash of the genesis block. Declaration public GenesisHash GenesisHash Field Value Type Description GenesisHash GenesisId An ID listed in the genesis block. Declaration public FixedString32Bytes GenesisId Field Value Type Description FixedString32Bytes LastValidRound The first valid round for a transaction. Declaration public ulong LastValidRound Field Value Type Description UInt64 MinFee The minimum transaction fee (not per byte) required for the txn to validate for the current network protocol. Declaration public ulong MinFee Field Value Type Description UInt64 Properties FlatFee Whether to interpret Fee as microalgos per byte, or as a flat amount of microalgos. Declaration public bool FlatFee { get; set; } Property Value Type Description Boolean LastRound Indicates the last round seen by the node Declaration public ulong LastRound { get; set; } Property Value Type Description UInt64 Methods Equals(TransactionParams) Declaration public bool Equals(TransactionParams other) Parameters Type Name Description TransactionParams other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.TransactionResponse.html": {
    "href": "api/AlgoSdk.TransactionResponse.html",
    "title": "Struct TransactionResponse | Unity Algorand SDK",
    "keywords": "Struct TransactionResponse Implements IEquatable < TransactionResponse > IIndexerResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct TransactionResponse : IIndexerResponse Properties CurrentRound Declaration public ulong CurrentRound { readonly get; set; } Property Value Type Description UInt64 Transaction Declaration public Transaction Transaction { readonly get; set; } Property Value Type Description Transaction Methods Equals(TransactionResponse) Declaration public bool Equals(TransactionResponse other) Parameters Type Name Description TransactionResponse other Returns Type Description Boolean Implements IEquatable<> IIndexerResponse"
  },
  "api/AlgoSdk.TransactionSignature.html": {
    "href": "api/AlgoSdk.TransactionSignature.html",
    "title": "Struct TransactionSignature | Unity Algorand SDK",
    "keywords": "Struct TransactionSignature An untyped wrapper around different transaction signatures. Implements IEquatable < TransactionSignature > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct TransactionSignature Fields LogicSig Declaration public LogicSig LogicSig Field Value Type Description LogicSig Multisig Declaration public Multisig Multisig Field Value Type Description Multisig Sig Declaration public Sig Sig Field Value Type Description Sig Methods Equals(TransactionSignature) Declaration public bool Equals(TransactionSignature other) Parameters Type Name Description TransactionSignature other Returns Type Description Boolean Operators Implicit(LogicSig to TransactionSignature) Declaration public static implicit operator TransactionSignature(LogicSig lsig) Parameters Type Name Description LogicSig lsig Returns Type Description TransactionSignature Implicit(Multisig to TransactionSignature) Declaration public static implicit operator TransactionSignature(Multisig msig) Parameters Type Name Description Multisig msig Returns Type Description TransactionSignature Implicit(Sig to TransactionSignature) Declaration public static implicit operator TransactionSignature(Sig sig) Parameters Type Name Description Sig sig Returns Type Description TransactionSignature Implements IEquatable<>"
  },
  "api/AlgoSdk.TransactionsResponse.html": {
    "href": "api/AlgoSdk.TransactionsResponse.html",
    "title": "Struct TransactionsResponse | Unity Algorand SDK",
    "keywords": "Struct TransactionsResponse Implements IEquatable < TransactionsResponse > IPaginatedResponse IIndexerResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct TransactionsResponse : IPaginatedResponse, IIndexerResponse Properties CurrentRound Declaration public ulong CurrentRound { readonly get; set; } Property Value Type Description UInt64 NextToken Declaration public FixedString128Bytes NextToken { readonly get; set; } Property Value Type Description FixedString128Bytes Transactions Declaration public Transaction[] Transactions { readonly get; set; } Property Value Type Description Transaction [] Methods Equals(TransactionsResponse) Declaration public bool Equals(TransactionsResponse other) Parameters Type Name Description TransactionsResponse other Returns Type Description Boolean Implements IEquatable<> IPaginatedResponse IIndexerResponse"
  },
  "api/AlgoSdk.TransactionType.html": {
    "href": "api/AlgoSdk.TransactionType.html",
    "title": "Enum TransactionType | Unity Algorand SDK",
    "keywords": "Enum TransactionType An enum representing the type of transaction. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum TransactionType : byte Fields Name Description ApplicationCall AssetConfiguration AssetFreeze AssetTransfer Count KeyRegistration None Payment"
  },
  "api/AlgoSdk.TransactionTypeExtensions.html": {
    "href": "api/AlgoSdk.TransactionTypeExtensions.html",
    "title": "Class TransactionTypeExtensions | Unity Algorand SDK",
    "keywords": "Class TransactionTypeExtensions Inheritance Object TransactionTypeExtensions Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class TransactionTypeExtensions Fields TypeToString Declaration public static readonly string[] TypeToString Field Value Type Description String [] Methods ToFixedString(TransactionType) Declaration public static FixedString32Bytes ToFixedString(this TransactionType txType) Parameters Type Name Description TransactionType txType Returns Type Description FixedString32Bytes ToOptionalFixedString(TransactionType) Declaration public static Optional<FixedString32Bytes> ToOptionalFixedString(this TransactionType txType) Parameters Type Name Description TransactionType txType Returns Type Description Optional < FixedString32Bytes >"
  },
  "api/AlgoSdk.Utf8StringExtensions.html": {
    "href": "api/AlgoSdk.Utf8StringExtensions.html",
    "title": "Class Utf8StringExtensions | Unity Algorand SDK",
    "keywords": "Class Utf8StringExtensions Inheritance Object Utf8StringExtensions Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class Utf8StringExtensions Methods Append<T>(ref T, Boolean) Declaration public static FormatError Append<T>(this ref T fs, bool input) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Boolean input Returns Type Description FormatError Type Parameters Name Description T Append<T>(ref T, UInt64) Declaration public static FormatError Append<T>(this ref T fs, ulong input) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs UInt64 input Returns Type Description FormatError Type Parameters Name Description T"
  },
  "api/AlgoSdk.Version.html": {
    "href": "api/AlgoSdk.Version.html",
    "title": "Struct Version | Unity Algorand SDK",
    "keywords": "Struct Version algod version information Implements IEquatable < Version > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Version Fields Build See BuildVersion Declaration public BuildVersion Build Field Value Type Description BuildVersion GenesisHashBase64 Declaration public FixedString64Bytes GenesisHashBase64 Field Value Type Description FixedString64Bytes GenesisId Declaration public FixedString32Bytes GenesisId Field Value Type Description FixedString32Bytes Versions Declaration public FixedString32Bytes[] Versions Field Value Type Description FixedString32Bytes [] Methods Equals(Version) Declaration public bool Equals(Version other) Parameters Type Name Description Version other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.VersionsResponse.html": {
    "href": "api/AlgoSdk.VersionsResponse.html",
    "title": "Struct VersionsResponse | Unity Algorand SDK",
    "keywords": "Struct VersionsResponse Implements IEquatable < VersionsResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct VersionsResponse Fields Versions Declaration public FixedString64Bytes[] Versions Field Value Type Description FixedString64Bytes [] Methods Equals(VersionsResponse) Declaration public bool Equals(VersionsResponse other) Parameters Type Name Description VersionsResponse other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.VrfPubKey.html": {
    "href": "api/AlgoSdk.VrfPubKey.html",
    "title": "Struct VrfPubKey | Unity Algorand SDK",
    "keywords": "Struct VrfPubKey 32 byte public key required for SelectionParticipationKey Implements IEquatable < VrfPubKey > IByteArray Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct VrfPubKey Fields SizeBytes Declaration public const int SizeBytes = 32 Field Value Type Description Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Byte Length Declaration public readonly int Length { get; } Property Value Type Description Int32 Methods Equals(VrfPubKey) Declaration public bool Equals(VrfPubKey other) Parameters Type Name Description VrfPubKey other Returns Type Description Boolean GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description Void * Implements IEquatable<> IByteArray"
  },
  "api/AlgoSdk.Wallet.html": {
    "href": "api/AlgoSdk.Wallet.html",
    "title": "Struct Wallet | Unity Algorand SDK",
    "keywords": "Struct Wallet Implements IEquatable < Wallet > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Wallet Fields DriverName Declaration public FixedString64Bytes DriverName Field Value Type Description FixedString64Bytes DriverVersion Declaration public uint DriverVersion Field Value Type Description UInt32 Id Declaration public FixedString128Bytes Id Field Value Type Description FixedString128Bytes MnemonicUx Declaration public Optional<bool> MnemonicUx Field Value Type Description Optional < Boolean > Name Declaration public FixedString64Bytes Name Field Value Type Description FixedString64Bytes SupportedTransactions Declaration public TransactionType[] SupportedTransactions Field Value Type Description TransactionType [] Methods Equals(Wallet) Declaration public bool Equals(Wallet other) Parameters Type Name Description Wallet other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.WalletConnect.AesCipher.html": {
    "href": "api/AlgoSdk.WalletConnect.AesCipher.html",
    "title": "Class AesCipher | Unity Algorand SDK",
    "keywords": "Class AesCipher Inheritance Object AesCipher Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public static class AesCipher Methods DecryptWithKey(Byte[], EncryptedPayload) Declaration public static byte[] DecryptWithKey(byte[] key, EncryptedPayload encryptedData) Parameters Type Name Description Byte [] key EncryptedPayload encryptedData Returns Type Description Byte [] EncryptWithKey(Byte[], Byte[]) Declaration public static EncryptedPayload EncryptWithKey(byte[] key, byte[] data) Parameters Type Name Description Byte [] key Byte [] data Returns Type Description EncryptedPayload"
  },
  "api/AlgoSdk.WalletConnect.AlgorandWalletConnectSession.html": {
    "href": "api/AlgoSdk.WalletConnect.AlgorandWalletConnectSession.html",
    "title": "Class AlgorandWalletConnectSession | Unity Algorand SDK",
    "keywords": "Class AlgorandWalletConnectSession Inheritance Object AlgorandWalletConnectSession Implements IActiveWalletConnectSession < AlgorandWalletConnectSession > IWalletConnectSessionData IDisposable Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public class AlgorandWalletConnectSession : IActiveWalletConnectSession<AlgorandWalletConnectSession>, IWalletConnectSessionData Constructors AlgorandWalletConnectSession(ClientMeta, String) Create a new session. Declaration public AlgorandWalletConnectSession(ClientMeta clientMeta, string bridgeUrl = null) Parameters Type Name Description ClientMeta clientMeta The metadata of the Dapp. String bridgeUrl An optional wallet connect bridgeurl. e.g. https://bridge.walletconnect.org AlgorandWalletConnectSession(SavedSession) Continue an existing session. Declaration public AlgorandWalletConnectSession(SavedSession savedSession) Parameters Type Name Description SavedSession savedSession A previously existing session. Properties Accounts Declaration public Address[] Accounts { get; } Property Value Type Description Address [] BridgeUrl Declaration public string BridgeUrl { get; } Property Value Type Description String ChainId Declaration public int ChainId { get; } Property Value Type Description Int32 ClientId Declaration public string ClientId { get; } Property Value Type Description String ConnectionStatus Declaration public AlgorandWalletConnectSession.Status ConnectionStatus { get; } Property Value Type Description AlgorandWalletConnectSession.Status DappMeta Declaration public ClientMeta DappMeta { get; } Property Value Type Description ClientMeta HandshakeId Declaration public ulong HandshakeId { get; } Property Value Type Description UInt64 HandshakeTopic Declaration public string HandshakeTopic { get; set; } Property Value Type Description String Key Declaration public Hex Key { get; } Property Value Type Description Hex NetworkId Declaration public int NetworkId { get; } Property Value Type Description Int32 OnResponseReceived Declaration public UnityEvent<JsonRpcResponse> OnResponseReceived { get; } Property Value Type Description UnityEvent < JsonRpcResponse > OnSessionConnect Declaration public UnityEvent<AlgorandWalletConnectSession> OnSessionConnect { get; } Property Value Type Description UnityEvent < AlgorandWalletConnectSession > OnSessionDisconnect Declaration public UnityEvent<string> OnSessionDisconnect { get; } Property Value Type Description UnityEvent < String > OnSessionUpdate Declaration public UnityEvent<WalletConnectSessionData> OnSessionUpdate { get; } Property Value Type Description UnityEvent < WalletConnectSessionData > PeerId Declaration public string PeerId { get; } Property Value Type Description String Version Declaration public string Version { get; } Property Value Type Description String WalletMeta Declaration public ClientMeta WalletMeta { get; } Property Value Type Description ClientMeta Methods Disconnect(String) Disconnect from a Connected or RequestingConnection session. Declaration public void Disconnect(string reason = null) Parameters Type Name Description String reason An optional reason to inform the web socket client. Dispose() Declaration public void Dispose() Save() Save the current session's state. Declaration public SavedSession Save() Returns Type Description SavedSession A SavedSession that can be used for continuing an existing session later. SignTransactions(WalletTransaction[], SignTxnsOpts, CancellationToken) Sign a group of transactions. Declaration public async UniTask<Either<SignTxnsError, byte[][]>> SignTransactions(WalletTransaction[] transactions, SignTxnsOpts options = default(SignTxnsOpts), CancellationToken cancellationToken = null) Parameters Type Name Description WalletTransaction [] transactions The atomic transaction group of [1,16] transactions. Contains information about how to sign each transaction, and which ones to sign. SignTxnsOpts options Optional sign transaction options. CancellationToken cancellationToken Optional cancellation token used for interrupting this request. It's recommended to use for UniTask. https://github.com/Cysharp/UniTask#timeout-handling Returns Type Description UniTask < Either < SignTxnsError , Byte [][]>> Either the result of the request or a IJsonRpcError if the request was invalid. The result is an array of the same length as the number of transactions provided in . For every index in this result, the value is StartConnection(CancellationToken) Begin the handshake process for a new WalletConnect session. Declaration public async UniTask<HandshakeUrl> StartConnection(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken An optional for cancelling this request early. Returns Type Description UniTask < HandshakeUrl > A WalletConnect Standard URI format (EIP-1328) used for handshaking. WaitForConnectionApproval(CancellationToken) Wait for an approval response from the handshake. Declaration public async UniTask WaitForConnectionApproval(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken An optional that can be used for things like timeouts. Returns Type Description UniTask Implements IActiveWalletConnectSession<TSession> IWalletConnectSessionData IDisposable"
  },
  "api/AlgoSdk.WalletConnect.AlgorandWalletConnectSession.Status.html": {
    "href": "api/AlgoSdk.WalletConnect.AlgorandWalletConnectSession.Status.html",
    "title": "Enum AlgorandWalletConnectSession.Status | Unity Algorand SDK",
    "keywords": "Enum AlgorandWalletConnectSession.Status Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public enum Status Fields Name Description Connected NoConnection RequestingConnection Unknown"
  },
  "api/AlgoSdk.WalletConnect.ClientMeta.html": {
    "href": "api/AlgoSdk.WalletConnect.ClientMeta.html",
    "title": "Struct ClientMeta | Unity Algorand SDK",
    "keywords": "Struct ClientMeta Implements IEquatable < ClientMeta > Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct ClientMeta Fields Description Declaration public string Description Field Value Type Description String IconUrls Declaration public string[] IconUrls Field Value Type Description String [] Name Declaration public string Name Field Value Type Description String Url Declaration public string Url Field Value Type Description String Methods Equals(ClientMeta) Declaration public bool Equals(ClientMeta other) Parameters Type Name Description ClientMeta other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.WalletConnect.DefaultBridge.html": {
    "href": "api/AlgoSdk.WalletConnect.DefaultBridge.html",
    "title": "Class DefaultBridge | Unity Algorand SDK",
    "keywords": "Class DefaultBridge Inheritance Object DefaultBridge Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public static class DefaultBridge Fields BridgeUrls Declaration public static readonly string[] BridgeUrls Field Value Type Description String [] Domain Declaration public const string Domain = \"walletconnect.org\" Field Value Type Description String MainBridge Declaration public static string MainBridge Field Value Type Description String Methods GetRandomBridgeUrl() Declaration public static string GetRandomBridgeUrl() Returns Type Description String"
  },
  "api/AlgoSdk.WalletConnect.EncryptedPayload.html": {
    "href": "api/AlgoSdk.WalletConnect.EncryptedPayload.html",
    "title": "Struct EncryptedPayload | Unity Algorand SDK",
    "keywords": "Struct EncryptedPayload Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct EncryptedPayload Fields Data Declaration public Hex Data Field Value Type Description Hex Iv Declaration public Hex Iv Field Value Type Description Hex Signature Declaration public Hex Signature Field Value Type Description Hex Methods Sign(Byte[]) Declaration public byte[] Sign(byte[] key) Parameters Type Name Description Byte [] key Returns Type Description Byte [] ValidateHmac(Byte[]) Declaration public void ValidateHmac(byte[] key) Parameters Type Name Description Byte [] key Operators Implicit((Byte[] iv, Byte[] encryptedData) to EncryptedPayload) Declaration public static implicit operator EncryptedPayload((byte[] iv, byte[] encryptedData) encryptResult) Parameters Type Name Description (T1, T2) < Byte [], Byte []> encryptResult Returns Type Description EncryptedPayload"
  },
  "api/AlgoSdk.WalletConnect.HandshakeUrl.html": {
    "href": "api/AlgoSdk.WalletConnect.HandshakeUrl.html",
    "title": "Struct HandshakeUrl | Unity Algorand SDK",
    "keywords": "Struct HandshakeUrl An HTTP-escaped Url for initiating the walletconnect connection. Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public readonly struct HandshakeUrl Remarks Can be converted into a QrCode. Constructors HandshakeUrl(String, String, String, Hex) Declaration public HandshakeUrl(string topic, string version, string bridgeUrl, Hex key) Parameters Type Name Description String topic String version String bridgeUrl Hex key Properties Url Declaration public readonly string Url { get; } Property Value Type Description String Methods ToQrCodeTexture() Declaration public readonly Texture2D ToQrCodeTexture() Returns Type Description Texture2D Operators Implicit(HandshakeUrl to String) Declaration public static implicit operator string (HandshakeUrl handshakeUrl) Parameters Type Name Description HandshakeUrl handshakeUrl Returns Type Description String"
  },
  "api/AlgoSdk.WalletConnect.html": {
    "href": "api/AlgoSdk.WalletConnect.html",
    "title": "Namespace AlgoSdk.WalletConnect | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.WalletConnect Classes AesCipher AlgorandWalletConnectSession DefaultBridge JsonRpc RpcPayload WalletConnectRpc WalletConnectRpc.Algorand WebSocketExtensions Structs ClientMeta EncryptedPayload HandshakeUrl An HTTP-escaped Url for initiating the walletconnect connection. JsonRpcError JsonRpcRequest JsonRpcResponse MultisigMetadata This struct represents metadata required for signing transactions sent by multisig accounts via WalletConnect. See Multisig for more information. NetworkMessage SavedSession SignTxnsError Error obtained from a SignTxnsOpts Options for an . WalletConnectSessionData WalletConnectSessionRequest WalletTransaction A struct representing the serialized data for a WalletConnect Transaction see https://developer.algorand.org/docs/get-details/walletconnect/walletconnect-schema/ Interfaces IActiveWalletConnectSession<TSession> IJsonRpcError IJsonRpcRequest IJsonRpcRequest<T> IJsonRpcResponse IJsonRpcResponse<T> IWalletConnectSessionData Enums AlgorandWalletConnectSession.Status SignTxnsErrorCode"
  },
  "api/AlgoSdk.WalletConnect.IActiveWalletConnectSession-1.html": {
    "href": "api/AlgoSdk.WalletConnect.IActiveWalletConnectSession-1.html",
    "title": "Interface IActiveWalletConnectSession<TSession> | Unity Algorand SDK",
    "keywords": "Interface IActiveWalletConnectSession<TSession> Inherited Members IWalletConnectSessionData.ClientId IWalletConnectSessionData.BridgeUrl IWalletConnectSessionData.Key IWalletConnectSessionData.PeerId IWalletConnectSessionData.HandshakeId IWalletConnectSessionData.NetworkId IWalletConnectSessionData.Accounts IWalletConnectSessionData.ChainId IWalletConnectSessionData.DappMeta IWalletConnectSessionData.WalletMeta Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public interface IActiveWalletConnectSession<TSession> : IWalletConnectSessionData where TSession : IActiveWalletConnectSession<TSession> Type Parameters Name Description TSession Properties OnSessionConnect Declaration UnityEvent<TSession> OnSessionConnect { get; } Property Value Type Description UnityEvent <TSession> OnSessionDisconnect Declaration UnityEvent<string> OnSessionDisconnect { get; } Property Value Type Description UnityEvent < String > OnSessionUpdate Declaration UnityEvent<WalletConnectSessionData> OnSessionUpdate { get; } Property Value Type Description UnityEvent < WalletConnectSessionData >"
  },
  "api/AlgoSdk.WalletConnect.IJsonRpcError.html": {
    "href": "api/AlgoSdk.WalletConnect.IJsonRpcError.html",
    "title": "Interface IJsonRpcError | Unity Algorand SDK",
    "keywords": "Interface IJsonRpcError Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public interface IJsonRpcError Properties Code A Number that indicates the error type that occurred. Declaration int Code { get; set; } Property Value Type Description Int32 Data A Primitive or Structured value that contains additional information about the error. Declaration AlgoApiObject Data { get; set; } Property Value Type Description AlgoApiObject Message A String providing a short description of the error. Declaration string Message { get; set; } Property Value Type Description String"
  },
  "api/AlgoSdk.WalletConnect.IJsonRpcRequest.html": {
    "href": "api/AlgoSdk.WalletConnect.IJsonRpcRequest.html",
    "title": "Interface IJsonRpcRequest | Unity Algorand SDK",
    "keywords": "Interface IJsonRpcRequest Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public interface IJsonRpcRequest Properties Id The id of this request. Used to keep track of the correct response. Declaration ulong Id { get; set; } Property Value Type Description UInt64 JsonRpc The JsonRpc version of this request. Declaration string JsonRpc { get; set; } Property Value Type Description String Method The method name to call in this request. Declaration string Method { get; set; } Property Value Type Description String"
  },
  "api/AlgoSdk.WalletConnect.IJsonRpcRequest-1.html": {
    "href": "api/AlgoSdk.WalletConnect.IJsonRpcRequest-1.html",
    "title": "Interface IJsonRpcRequest<T> | Unity Algorand SDK",
    "keywords": "Interface IJsonRpcRequest<T> Inherited Members IJsonRpcRequest.Id IJsonRpcRequest.JsonRpc IJsonRpcRequest.Method Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public interface IJsonRpcRequest<T> : IJsonRpcRequest Type Parameters Name Description T Properties Params Parameters for this request. Declaration T Params { get; set; } Property Value Type Description T"
  },
  "api/AlgoSdk.WalletConnect.IJsonRpcResponse.html": {
    "href": "api/AlgoSdk.WalletConnect.IJsonRpcResponse.html",
    "title": "Interface IJsonRpcResponse | Unity Algorand SDK",
    "keywords": "Interface IJsonRpcResponse Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public interface IJsonRpcResponse Properties Error An error object if an error occurred. Declaration JsonRpcError Error { get; set; } Property Value Type Description JsonRpcError Id The Id of the response. It should be the same as the ID of the corresponding IJsonRpcRequest . Declaration ulong Id { get; set; } Property Value Type Description UInt64 IsError Returns true if this is an error response. Declaration bool IsError { get; } Property Value Type Description Boolean JsonRpc The JsonRpc version. Declaration string JsonRpc { get; set; } Property Value Type Description String"
  },
  "api/AlgoSdk.WalletConnect.IJsonRpcResponse-1.html": {
    "href": "api/AlgoSdk.WalletConnect.IJsonRpcResponse-1.html",
    "title": "Interface IJsonRpcResponse<T> | Unity Algorand SDK",
    "keywords": "Interface IJsonRpcResponse<T> Inherited Members IJsonRpcResponse.Id IJsonRpcResponse.JsonRpc IJsonRpcResponse.Error IJsonRpcResponse.IsError Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public interface IJsonRpcResponse<T> : IJsonRpcResponse Type Parameters Name Description T Properties Result The result of the corresponding IJsonRpcRequest . Declaration T Result { get; set; } Property Value Type Description T"
  },
  "api/AlgoSdk.WalletConnect.IWalletConnectSessionData.html": {
    "href": "api/AlgoSdk.WalletConnect.IWalletConnectSessionData.html",
    "title": "Interface IWalletConnectSessionData | Unity Algorand SDK",
    "keywords": "Interface IWalletConnectSessionData Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public interface IWalletConnectSessionData Properties Accounts The accounts that the Wallet manages. Declaration Address[] Accounts { get; } Property Value Type Description Address [] BridgeUrl The bridge used to communicate with the session. Declaration string BridgeUrl { get; } Property Value Type Description String ChainId The Identifier of the blockchain connected. Declaration int ChainId { get; } Property Value Type Description Int32 ClientId The UUID of this client. Declaration string ClientId { get; } Property Value Type Description String DappMeta Meta information about the Dapp connected in this session. Declaration ClientMeta DappMeta { get; } Property Value Type Description ClientMeta HandshakeId Declaration ulong HandshakeId { get; } Property Value Type Description UInt64 Key The key used to encrypt/decrypt the payloads. Declaration Hex Key { get; } Property Value Type Description Hex NetworkId The ID of the network connected (test, beta, main, ...) Declaration int NetworkId { get; } Property Value Type Description Int32 PeerId The UUID of the connecting peer. Declaration string PeerId { get; } Property Value Type Description String WalletMeta Meta information about the Wallet connected in this session. Declaration ClientMeta WalletMeta { get; } Property Value Type Description ClientMeta"
  },
  "api/AlgoSdk.WalletConnect.JsonRpc.html": {
    "href": "api/AlgoSdk.WalletConnect.JsonRpc.html",
    "title": "Class JsonRpc | Unity Algorand SDK",
    "keywords": "Class JsonRpc Inheritance Object JsonRpc Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public static class JsonRpc Methods ReadJsonRpcPayload(WebSocketEvent, Hex) Declaration public static Either<JsonRpcResponse, JsonRpcRequest> ReadJsonRpcPayload(this WebSocketEvent response, Hex encryptionKey) Parameters Type Name Description WebSocketEvent response Hex encryptionKey Returns Type Description Either < JsonRpcResponse , JsonRpcRequest > ToNetworkMessage<T>(T, Hex, String) Declaration public static NetworkMessage ToNetworkMessage<T>(this T request, Hex encryptionKey, string topic) where T : IJsonRpcRequest Parameters Type Name Description T request Hex encryptionKey String topic Returns Type Description NetworkMessage Type Parameters Name Description T"
  },
  "api/AlgoSdk.WalletConnect.JsonRpcError.html": {
    "href": "api/AlgoSdk.WalletConnect.JsonRpcError.html",
    "title": "Struct JsonRpcError | Unity Algorand SDK",
    "keywords": "Struct JsonRpcError Implements IEquatable < JsonRpcError > Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct JsonRpcError Properties Code Declaration public int Code { readonly get; set; } Property Value Type Description Int32 Data Declaration public AlgoApiObject Data { readonly get; set; } Property Value Type Description AlgoApiObject Message Declaration public string Message { readonly get; set; } Property Value Type Description String Methods Equals(JsonRpcError) Declaration public bool Equals(JsonRpcError other) Parameters Type Name Description JsonRpcError other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.WalletConnect.JsonRpcRequest.html": {
    "href": "api/AlgoSdk.WalletConnect.JsonRpcRequest.html",
    "title": "Struct JsonRpcRequest | Unity Algorand SDK",
    "keywords": "Struct JsonRpcRequest Implements IJsonRpcRequest < AlgoApiObject []> IJsonRpcRequest IEquatable < JsonRpcRequest > Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct JsonRpcRequest : IJsonRpcRequest<AlgoApiObject[]>, IJsonRpcRequest Properties Id Declaration public ulong Id { readonly get; set; } Property Value Type Description UInt64 JsonRpc Declaration public string JsonRpc { readonly get; set; } Property Value Type Description String Method Declaration public string Method { readonly get; set; } Property Value Type Description String Params Declaration public AlgoApiObject[] Params { readonly get; set; } Property Value Type Description AlgoApiObject [] Methods Equals(JsonRpcRequest) Declaration public bool Equals(JsonRpcRequest other) Parameters Type Name Description JsonRpcRequest other Returns Type Description Boolean Implements IJsonRpcRequest<T> IJsonRpcRequest IEquatable<>"
  },
  "api/AlgoSdk.WalletConnect.JsonRpcResponse.html": {
    "href": "api/AlgoSdk.WalletConnect.JsonRpcResponse.html",
    "title": "Struct JsonRpcResponse | Unity Algorand SDK",
    "keywords": "Struct JsonRpcResponse Implements IJsonRpcResponse < AlgoApiObject > IJsonRpcResponse IEquatable < JsonRpcResponse > Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct JsonRpcResponse : IJsonRpcResponse<AlgoApiObject>, IJsonRpcResponse Properties Error Declaration public JsonRpcError Error { readonly get; set; } Property Value Type Description JsonRpcError Id Declaration public ulong Id { readonly get; set; } Property Value Type Description UInt64 IsError Declaration public readonly bool IsError { get; } Property Value Type Description Boolean JsonRpc Declaration public string JsonRpc { readonly get; set; } Property Value Type Description String Result Declaration public AlgoApiObject Result { readonly get; set; } Property Value Type Description AlgoApiObject Methods Equals(JsonRpcResponse) Declaration public bool Equals(JsonRpcResponse other) Parameters Type Name Description JsonRpcResponse other Returns Type Description Boolean Implements IJsonRpcResponse<T> IJsonRpcResponse IEquatable<>"
  },
  "api/AlgoSdk.WalletConnect.MultisigMetadata.html": {
    "href": "api/AlgoSdk.WalletConnect.MultisigMetadata.html",
    "title": "Struct MultisigMetadata | Unity Algorand SDK",
    "keywords": "Struct MultisigMetadata This struct represents metadata required for signing transactions sent by multisig accounts via WalletConnect. See Multisig for more information. Implements IEquatable < MultisigMetadata > Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct MultisigMetadata Fields Addresses The signers of this multisig. Declaration public Address[] Addresses Field Value Type Description Address [] Threshold Number of signatures required for valid transaction. Declaration public byte Threshold Field Value Type Description Byte Version Version of the multisig. Declaration public byte Version Field Value Type Description Byte Methods Equals(MultisigMetadata) Declaration public bool Equals(MultisigMetadata other) Parameters Type Name Description MultisigMetadata other Returns Type Description Boolean Operators Implicit(Multisig to MultisigMetadata) Declaration public static implicit operator MultisigMetadata(Multisig msig) Parameters Type Name Description Multisig msig Returns Type Description MultisigMetadata Implicit(MultisigMetadata to Multisig) Declaration public static implicit operator Multisig(MultisigMetadata msigMeta) Parameters Type Name Description MultisigMetadata msigMeta Returns Type Description Multisig Implements IEquatable<>"
  },
  "api/AlgoSdk.WalletConnect.NetworkMessage.html": {
    "href": "api/AlgoSdk.WalletConnect.NetworkMessage.html",
    "title": "Struct NetworkMessage | Unity Algorand SDK",
    "keywords": "Struct NetworkMessage Implements IEquatable < NetworkMessage > Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct NetworkMessage Fields IsSilent Declaration public Optional<bool> IsSilent Field Value Type Description Optional < Boolean > Payload Declaration public string Payload Field Value Type Description String Topic Declaration public string Topic Field Value Type Description String Type Declaration public string Type Field Value Type Description String Methods Equals(NetworkMessage) Declaration public bool Equals(NetworkMessage other) Parameters Type Name Description NetworkMessage other Returns Type Description Boolean PublishToTopic<T>(T, String) Declaration public static NetworkMessage PublishToTopic<T>(T payload, string topic) Parameters Type Name Description T payload String topic Returns Type Description NetworkMessage Type Parameters Name Description T PublishToTopicEncrypted<T>(T, Hex, String) Declaration public static NetworkMessage PublishToTopicEncrypted<T>(T payload, Hex encryptionKey, string topic) Parameters Type Name Description T payload Hex encryptionKey String topic Returns Type Description NetworkMessage Type Parameters Name Description T SubscribeToTopic(String) Declaration public static NetworkMessage SubscribeToTopic(string topic) Parameters Type Name Description String topic Returns Type Description NetworkMessage Implements IEquatable<>"
  },
  "api/AlgoSdk.WalletConnect.RpcPayload.html": {
    "href": "api/AlgoSdk.WalletConnect.RpcPayload.html",
    "title": "Class RpcPayload | Unity Algorand SDK",
    "keywords": "Class RpcPayload Inheritance Object RpcPayload Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public static class RpcPayload Fields IdRandomPartSize Declaration public const int IdRandomPartSize = 1000 Field Value Type Description Int32 Methods GenerateId() Declaration public static long GenerateId() Returns Type Description Int64"
  },
  "api/AlgoSdk.WalletConnect.SavedSession.html": {
    "href": "api/AlgoSdk.WalletConnect.SavedSession.html",
    "title": "Struct SavedSession | Unity Algorand SDK",
    "keywords": "Struct SavedSession Implements IWalletConnectSessionData Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct SavedSession : IWalletConnectSessionData Properties Accounts Declaration public Address[] Accounts { get; set; } Property Value Type Description Address [] BridgeUrl Declaration public string BridgeUrl { get; set; } Property Value Type Description String ChainId Declaration public int ChainId { get; set; } Property Value Type Description Int32 ClientId Declaration public string ClientId { get; set; } Property Value Type Description String DappMeta Declaration public ClientMeta DappMeta { get; set; } Property Value Type Description ClientMeta HandshakeId Declaration public ulong HandshakeId { get; set; } Property Value Type Description UInt64 Key Declaration public Hex Key { get; set; } Property Value Type Description Hex NetworkId Declaration public int NetworkId { get; set; } Property Value Type Description Int32 PeerId Declaration public string PeerId { get; set; } Property Value Type Description String WalletMeta Declaration public ClientMeta WalletMeta { get; set; } Property Value Type Description ClientMeta Implements IWalletConnectSessionData"
  },
  "api/AlgoSdk.WalletConnect.SignTxnsError.html": {
    "href": "api/AlgoSdk.WalletConnect.SignTxnsError.html",
    "title": "Struct SignTxnsError | Unity Algorand SDK",
    "keywords": "Struct SignTxnsError Error obtained from a Implements IJsonRpcError IEquatable < SignTxnsError > Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct SignTxnsError : IJsonRpcError Properties Code The integer error code of the error. Declaration public int Code { readonly get; set; } Property Value Type Description Int32 Data Any other useful information about the error. Declaration public AlgoApiObject Data { readonly get; set; } Property Value Type Description AlgoApiObject ErrorCode The standard error code parsed from Code . Declaration public readonly SignTxnsErrorCode ErrorCode { get; } Property Value Type Description SignTxnsErrorCode Code cast to SignTxnsErrorCode if known, else Unknown . Message Declaration public string Message { readonly get; set; } Property Value Type Description String Methods Equals(SignTxnsError) Declaration public bool Equals(SignTxnsError other) Parameters Type Name Description SignTxnsError other Returns Type Description Boolean ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators Implicit(JsonRpcError to SignTxnsError) Declaration public static implicit operator SignTxnsError(JsonRpcError err) Parameters Type Name Description JsonRpcError err Returns Type Description SignTxnsError Implicit(SignTxnsError to Boolean) Declaration public static implicit operator bool (SignTxnsError err) Parameters Type Name Description SignTxnsError err Returns Type Description Boolean Implicit(SignTxnsError to String) Declaration public static implicit operator string (SignTxnsError err) Parameters Type Name Description SignTxnsError err Returns Type Description String Implements IJsonRpcError IEquatable<>"
  },
  "api/AlgoSdk.WalletConnect.SignTxnsErrorCode.html": {
    "href": "api/AlgoSdk.WalletConnect.SignTxnsErrorCode.html",
    "title": "Enum SignTxnsErrorCode | Unity Algorand SDK",
    "keywords": "Enum SignTxnsErrorCode Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public enum SignTxnsErrorCode Fields Name Description InvalidInput The input provided is invalid. TooManyTransactions The wallet does not support signing that many transactions at a time. Unauthorized The requested operation and/or account has not been authorized by the user. UninitializedWallet The wallet was not initialized properly beforehand. Unknown Represents an unknown error code. UnsupportedOperation The wallet does not support the requested operation. UserRejectedRequest The user rejected the request."
  },
  "api/AlgoSdk.WalletConnect.SignTxnsOpts.html": {
    "href": "api/AlgoSdk.WalletConnect.SignTxnsOpts.html",
    "title": "Struct SignTxnsOpts | Unity Algorand SDK",
    "keywords": "Struct SignTxnsOpts Options for an . Implements IEquatable < SignTxnsOpts > Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct SignTxnsOpts Fields Message An optional message describing the group of transactions in the . Declaration public string Message Field Value Type Description String Methods Equals(SignTxnsOpts) Declaration public bool Equals(SignTxnsOpts other) Parameters Type Name Description SignTxnsOpts other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.WalletConnect.WalletConnectRpc.Algorand.html": {
    "href": "api/AlgoSdk.WalletConnect.WalletConnectRpc.Algorand.html",
    "title": "Class WalletConnectRpc.Algorand | Unity Algorand SDK",
    "keywords": "Class WalletConnectRpc.Algorand Inheritance Object WalletConnectRpc.Algorand Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public static class Algorand Fields ChainId Declaration public const int ChainId = 4160 Field Value Type Description Int32 Methods SignTransactions(WalletTransaction[], SignTxnsOpts) Builds a JsonRpcRequest used for signing transactions. Declaration public static JsonRpcRequest SignTransactions(WalletTransaction[] transactions, SignTxnsOpts options = default(SignTxnsOpts)) Parameters Type Name Description WalletTransaction [] transactions The atomic transaction group of [1,16] transactions. Contains information about how to sign each transaction, and which ones to sign. SignTxnsOpts options Optional options for signing the transactions, e.g. adding a message to the transaction group. Returns Type Description JsonRpcRequest A JsonRpcRequest used for signing Algorand transactions."
  },
  "api/AlgoSdk.WalletConnect.WalletConnectRpc.html": {
    "href": "api/AlgoSdk.WalletConnect.WalletConnectRpc.html",
    "title": "Class WalletConnectRpc | Unity Algorand SDK",
    "keywords": "Class WalletConnectRpc Inheritance Object WalletConnectRpc Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public static class WalletConnectRpc Methods GetRandomId() Gets a random, valid JsonRpcRequest id. Declaration public static ulong GetRandomId() Returns Type Description UInt64 a UInt64 in the range [1, MaxValue ] SessionRequest(WalletConnectSessionRequest, UInt64) Utility function for building a JsonRpcRequest used to start a new WalletConnect session. Declaration public static JsonRpcRequest SessionRequest(WalletConnectSessionRequest sessionRequest, ulong id = 0UL) Parameters Type Name Description WalletConnectSessionRequest sessionRequest Parameters required to create the request. UInt64 id Returns Type Description JsonRpcRequest A JsonRpcRequest that can be used to start a new WalletConnect session. SessionRequest(String, ClientMeta, Optional<Int32>, UInt64) Utility function for building a JsonRpcRequest used to start a new WalletConnect session. Declaration public static JsonRpcRequest SessionRequest(string peerId, ClientMeta peerMeta, Optional<int> chainId = default(Optional<int>), ulong id = 0UL) Parameters Type Name Description String peerId The UUID of the client. ClientMeta peerMeta The metadata of the client. Optional < Int32 > chainId The id of the blockchain this request is for. UInt64 id Returns Type Description JsonRpcRequest A JsonRpcRequest that can be used to start a new WalletConnect session."
  },
  "api/AlgoSdk.WalletConnect.WalletConnectSessionData.html": {
    "href": "api/AlgoSdk.WalletConnect.WalletConnectSessionData.html",
    "title": "Struct WalletConnectSessionData | Unity Algorand SDK",
    "keywords": "Struct WalletConnectSessionData Implements IEquatable < WalletConnectSessionData > Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct WalletConnectSessionData Fields Accounts Declaration public Address[] Accounts Field Value Type Description Address [] ChainId Declaration public int ChainId Field Value Type Description Int32 IsApproved Declaration public bool IsApproved Field Value Type Description Boolean PeerId Declaration public string PeerId Field Value Type Description String PeerMeta Declaration public ClientMeta PeerMeta Field Value Type Description ClientMeta Methods Equals(WalletConnectSessionData) Declaration public bool Equals(WalletConnectSessionData other) Parameters Type Name Description WalletConnectSessionData other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.WalletConnect.WalletConnectSessionRequest.html": {
    "href": "api/AlgoSdk.WalletConnect.WalletConnectSessionRequest.html",
    "title": "Struct WalletConnectSessionRequest | Unity Algorand SDK",
    "keywords": "Struct WalletConnectSessionRequest Implements IEquatable < WalletConnectSessionRequest > Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct WalletConnectSessionRequest Fields ChainId Declaration public Optional<int> ChainId Field Value Type Description Optional < Int32 > PeerId Declaration public string PeerId Field Value Type Description String PeerMeta Declaration public ClientMeta PeerMeta Field Value Type Description ClientMeta Methods Equals(WalletConnectSessionRequest) Declaration public bool Equals(WalletConnectSessionRequest other) Parameters Type Name Description WalletConnectSessionRequest other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.WalletConnect.WalletTransaction.html": {
    "href": "api/AlgoSdk.WalletConnect.WalletTransaction.html",
    "title": "Struct WalletTransaction | Unity Algorand SDK",
    "keywords": "Struct WalletTransaction A struct representing the serialized data for a WalletConnect Transaction see https://developer.algorand.org/docs/get-details/walletconnect/walletconnect-schema/ Implements IEquatable < WalletTransaction > Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct WalletTransaction Fields AuthAddr Optional Address used to sign the transaction when the account is rekeyed. Also called the signor/sgnr. Declaration public Address AuthAddr Field Value Type Description Address Message Optional message explaining the reason of the transaction. Declaration public string Message Field Value Type Description String Msig Optional multisig metadata used to sign the transaction. Declaration public MultisigMetadata Msig Field Value Type Description MultisigMetadata Signers Optional list of addresses that must sign the transactions. Declaration public Address[] Signers Field Value Type Description Address [] Txn A transaction in canonical messagepack format. Declaration public byte[] Txn Field Value Type Description Byte [] Remarks Does not contain the txn prefix that is used when signing a transaction. See SerializeMessagePack<T>(T, Allocator) for serializing the transaction. Methods Equals(WalletTransaction) Declaration public bool Equals(WalletTransaction other) Parameters Type Name Description WalletTransaction other Returns Type Description Boolean New<T>(T, String, Address, MultisigMetadata, Address[]) Serialize a transaction and prepare it for WalletConnect. Declaration public static WalletTransaction New<T>(T txn, string message = null, Address authAddr = default(Address), MultisigMetadata msig = default(MultisigMetadata), Address[] signers = null) where T : struct, ITransaction, IEquatable<T> Parameters Type Name Description T txn The transaction to prepare. String message Optional message explaining the reason of the transaction. Address authAddr Optional Address used to sign the transaction when the account is rekeyed. Also called the signor/sgnr. MultisigMetadata msig Optional multisig metadata used to sign the transaction. Address [] signers Optional list of addresses that must sign the transactions. Returns Type Description WalletTransaction A transaction struct usable with WalletConnect. See SignTransactions(WalletTransaction[], SignTxnsOpts, CancellationToken) Type Parameters Name Description T The transaction type. Implements IEquatable<>"
  },
  "api/AlgoSdk.WalletConnect.WebSocketExtensions.html": {
    "href": "api/AlgoSdk.WalletConnect.WebSocketExtensions.html",
    "title": "Class WebSocketExtensions | Unity Algorand SDK",
    "keywords": "Class WebSocketExtensions Inheritance Object WebSocketExtensions Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public static class WebSocketExtensions Methods PollUntilOpen(IWebSocketClient, CancellationToken) Declaration public static UniTask<WebSocketEvent> PollUntilOpen(this IWebSocketClient client, CancellationToken cancellationToken = null) Parameters Type Name Description IWebSocketClient client CancellationToken cancellationToken Returns Type Description UniTask < WebSocketEvent > PollUntilPayload(IWebSocketClient, CancellationToken) Declaration public static UniTask<WebSocketEvent> PollUntilPayload(this IWebSocketClient client, CancellationToken cancellationToken = null) Parameters Type Name Description IWebSocketClient client CancellationToken cancellationToken Returns Type Description UniTask < WebSocketEvent > Send(IWebSocketClient, NetworkMessage) Declaration public static void Send(this IWebSocketClient client, NetworkMessage networkMessage) Parameters Type Name Description IWebSocketClient client NetworkMessage networkMessage"
  },
  "api/AlgoSdk.WalletHandle.html": {
    "href": "api/AlgoSdk.WalletHandle.html",
    "title": "Struct WalletHandle | Unity Algorand SDK",
    "keywords": "Struct WalletHandle Implements IEquatable < WalletHandle > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct WalletHandle Fields ExpiresSeconds Declaration public ulong ExpiresSeconds Field Value Type Description UInt64 Wallet Declaration public Wallet Wallet Field Value Type Description Wallet Methods Equals(WalletHandle) Declaration public bool Equals(WalletHandle other) Parameters Type Name Description WalletHandle other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.WalletInfoRequest.html": {
    "href": "api/AlgoSdk.WalletInfoRequest.html",
    "title": "Struct WalletInfoRequest | Unity Algorand SDK",
    "keywords": "Struct WalletInfoRequest Implements IEquatable < WalletInfoRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct WalletInfoRequest Fields WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(WalletInfoRequest) Declaration public bool Equals(WalletInfoRequest other) Parameters Type Name Description WalletInfoRequest other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.WalletInfoResponse.html": {
    "href": "api/AlgoSdk.WalletInfoResponse.html",
    "title": "Struct WalletInfoResponse | Unity Algorand SDK",
    "keywords": "Struct WalletInfoResponse Implements IEquatable < WalletInfoResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct WalletInfoResponse Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < Boolean > Message Declaration public string Message Field Value Type Description String WalletHandle Declaration public WalletHandle WalletHandle Field Value Type Description WalletHandle Methods Equals(WalletInfoResponse) Declaration public bool Equals(WalletInfoResponse other) Parameters Type Name Description WalletInfoResponse other Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/AlgoSdk.WebSocket.html": {
    "href": "api/AlgoSdk.WebSocket.html",
    "title": "Namespace AlgoSdk.WebSocket | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.WebSocket Classes NativeWebSocketClient WebSocketClientFactory WebSocketEvent Interfaces IWebSocketClient Enums WebSocketEvent.WebSocketEventType"
  },
  "api/AlgoSdk.WebSocket.IWebSocketClient.html": {
    "href": "api/AlgoSdk.WebSocket.IWebSocketClient.html",
    "title": "Interface IWebSocketClient | Unity Algorand SDK",
    "keywords": "Interface IWebSocketClient Namespace : AlgoSdk.WebSocket Assembly : cs.temp.dll.dll Syntax public interface IWebSocketClient Properties EventQueue Declaration Queue<WebSocketEvent> EventQueue { get; } Property Value Type Description Queue < WebSocketEvent > ReadyState Declaration WebSocketState ReadyState { get; } Property Value Type Description WebSocketState WaitTime Declaration ulong WaitTime { get; } Property Value Type Description UInt64 Methods Close(CloseStatusCode, String) Declaration void Close(CloseStatusCode code = null, string reason = null) Parameters Type Name Description CloseStatusCode code String reason Connect() Declaration void Connect() Poll() Declaration WebSocketEvent Poll() Returns Type Description WebSocketEvent Send(ArraySegment<Byte>) Declaration void Send(ArraySegment<byte> data) Parameters Type Name Description ArraySegment < Byte > data"
  },
  "api/AlgoSdk.WebSocket.NativeWebSocketClient.html": {
    "href": "api/AlgoSdk.WebSocket.NativeWebSocketClient.html",
    "title": "Class NativeWebSocketClient | Unity Algorand SDK",
    "keywords": "Class NativeWebSocketClient Inheritance Object NativeWebSocketClient Implements IWebSocketClient Namespace : AlgoSdk.WebSocket Assembly : cs.temp.dll.dll Syntax public class NativeWebSocketClient : IWebSocketClient Constructors NativeWebSocketClient(String) Declaration public NativeWebSocketClient(string url) Parameters Type Name Description String url Properties EventQueue Declaration public Queue<WebSocketEvent> EventQueue { get; } Property Value Type Description Queue < WebSocketEvent > ReadyState Declaration public WebSocketState ReadyState { get; } Property Value Type Description WebSocketState WaitTime Declaration public ulong WaitTime { get; } Property Value Type Description UInt64 Methods Close(CloseStatusCode, String) Declaration public void Close(CloseStatusCode code = null, string reason = null) Parameters Type Name Description CloseStatusCode code String reason Connect() Declaration public void Connect() OnClose(Object, CloseEventArgs) Declaration public void OnClose(object sender, CloseEventArgs e) Parameters Type Name Description Object sender CloseEventArgs e OnError(Object, ErrorEventArgs) Declaration public void OnError(object sender, ErrorEventArgs e) Parameters Type Name Description Object sender ErrorEventArgs e OnMessage(Object, MessageEventArgs) Declaration public void OnMessage(object sender, MessageEventArgs e) Parameters Type Name Description Object sender MessageEventArgs e OnOpen(Object, EventArgs) Declaration public void OnOpen(object sender, EventArgs e) Parameters Type Name Description Object sender EventArgs e Poll() Declaration public WebSocketEvent Poll() Returns Type Description WebSocketEvent Send(ArraySegment<Byte>) Declaration public void Send(ArraySegment<byte> data) Parameters Type Name Description ArraySegment < Byte > data Implements IWebSocketClient"
  },
  "api/AlgoSdk.WebSocket.WebSocketClientFactory.html": {
    "href": "api/AlgoSdk.WebSocket.WebSocketClientFactory.html",
    "title": "Class WebSocketClientFactory | Unity Algorand SDK",
    "keywords": "Class WebSocketClientFactory Inheritance Object WebSocketClientFactory Namespace : AlgoSdk.WebSocket Assembly : cs.temp.dll.dll Syntax public class WebSocketClientFactory Methods Create(String) Declaration public static IWebSocketClient Create(string url) Parameters Type Name Description String url Returns Type Description IWebSocketClient"
  },
  "api/AlgoSdk.WebSocket.WebSocketEvent.html": {
    "href": "api/AlgoSdk.WebSocket.WebSocketEvent.html",
    "title": "Class WebSocketEvent | Unity Algorand SDK",
    "keywords": "Class WebSocketEvent Inheritance Object WebSocketEvent Namespace : AlgoSdk.WebSocket Assembly : cs.temp.dll.dll Syntax public class WebSocketEvent Fields ClientId Declaration public ulong ClientId Field Value Type Description UInt64 Error Declaration public string Error Field Value Type Description String Payload Declaration public byte[] Payload Field Value Type Description Byte [] Reason Declaration public string Reason Field Value Type Description String Type Declaration public WebSocketEvent.WebSocketEventType Type Field Value Type Description WebSocketEvent.WebSocketEventType"
  },
  "api/AlgoSdk.WebSocket.WebSocketEvent.WebSocketEventType.html": {
    "href": "api/AlgoSdk.WebSocket.WebSocketEvent.WebSocketEventType.html",
    "title": "Enum WebSocketEvent.WebSocketEventType | Unity Algorand SDK",
    "keywords": "Enum WebSocketEvent.WebSocketEventType Namespace : AlgoSdk.WebSocket Assembly : cs.temp.dll.dll Syntax public enum WebSocketEventType Fields Name Description Close Error Nothing Open Payload"
  },
  "api/BigIntegerLibrary.BigIntegerException.html": {
    "href": "api/BigIntegerLibrary.BigIntegerException.html",
    "title": "Class BigIntegerException | Unity Algorand SDK",
    "keywords": "Class BigIntegerException BigInteger-related exception class. Inheritance Object BigIntegerException Namespace : BigIntegerLibrary Assembly : cs.temp.dll.dll Syntax public sealed class BigIntegerException : Exception Constructors BigIntegerException(String, Exception) BigIntegerException constructor. Declaration public BigIntegerException(string message, Exception innerException) Parameters Type Name Description String message The exception message Exception innerException The inner exception"
  },
  "api/BigIntegerLibrary.html": {
    "href": "api/BigIntegerLibrary.html",
    "title": "Namespace BigIntegerLibrary | Unity Algorand SDK",
    "keywords": "Namespace BigIntegerLibrary Classes BigIntegerException BigInteger-related exception class."
  },
  "api/Unity.Collections.FixedStringParseExtensions.html": {
    "href": "api/Unity.Collections.FixedStringParseExtensions.html",
    "title": "Class FixedStringParseExtensions | Unity Algorand SDK",
    "keywords": "Class FixedStringParseExtensions Inheritance Object FixedStringParseExtensions Namespace : Unity.Collections Assembly : cs.temp.dll.dll Syntax public static class FixedStringParseExtensions Methods Found<T>(ref T, ref Int32, Char, Char, Char, Char) Declaration public static bool Found<T>(this ref T fs, ref int offset, char a, char b, char c, char d) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Int32 offset Char a Char b Char c Char d Returns Type Description Boolean Type Parameters Name Description T Found<T>(ref T, ref Int32, Char, Char, Char, Char, Char) Declaration public static bool Found<T>(this ref T fs, ref int offset, char a, char b, char c, char d, char e) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Int32 offset Char a Char b Char c Char d Char e Returns Type Description Boolean Type Parameters Name Description T Parse<T>(ref T, ref Int32, ref Int64) Declaration public static ParseError Parse<T>(this ref T fs, ref int offset, ref long output) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Int32 offset Int64 output Returns Type Description ParseError Type Parameters Name Description T Parse<T>(ref T, ref Int32, ref UInt64) Declaration public static ParseError Parse<T>(this ref T fs, ref int offset, ref ulong output) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Int32 offset UInt64 output Returns Type Description ParseError Type Parameters Name Description T"
  },
  "api/Unity.Collections.html": {
    "href": "api/Unity.Collections.html",
    "title": "Namespace Unity.Collections | Unity Algorand SDK",
    "keywords": "Namespace Unity.Collections Classes FixedStringParseExtensions"
  },
  "api/WebSocketSharp.ByteOrder.html": {
    "href": "api/WebSocketSharp.ByteOrder.html",
    "title": "Enum ByteOrder | Unity Algorand SDK",
    "keywords": "Enum ByteOrder Specifies the byte order. Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public enum ByteOrder Fields Name Description Big Specifies Big-endian. Little Specifies Little-endian."
  },
  "api/WebSocketSharp.CloseEventArgs.html": {
    "href": "api/WebSocketSharp.CloseEventArgs.html",
    "title": "Class CloseEventArgs | Unity Algorand SDK",
    "keywords": "Class CloseEventArgs Represents the event data for the OnClose event. Inheritance Object CloseEventArgs Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public class CloseEventArgs : EventArgs Remarks That event occurs when the WebSocket connection has been closed. If you would like to get the reason for the connection close, you should access the Code or Reason property. Properties Code Gets the status code for the connection close. Declaration public ushort Code { get; } Property Value Type Description UInt16 A UInt16 that represents the status code for the connection close if present. Reason Gets the reason for the connection close. Declaration public string Reason { get; } Property Value Type Description String A String that represents the reason for the connection close if present. WasClean Gets a value indicating whether the connection has been closed cleanly. Declaration public bool WasClean { get; } Property Value Type Description Boolean true if the connection has been closed cleanly; otherwise, false ."
  },
  "api/WebSocketSharp.CloseStatusCode.html": {
    "href": "api/WebSocketSharp.CloseStatusCode.html",
    "title": "Enum CloseStatusCode | Unity Algorand SDK",
    "keywords": "Enum CloseStatusCode Indicates the status code for the WebSocket connection close. Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public enum CloseStatusCode : ushort Remarks The values of this enumeration are defined in Section 7.4 of RFC 6455. \"Reserved value\" cannot be sent as a status code in closing handshake by an endpoint. Fields Name Description Abnormal Equivalent to close status 1006. Indicates that the connection was closed abnormally. A Reserved value. Away Equivalent to close status 1001. Indicates that an endpoint is going away. InvalidData Equivalent to close status 1007. Indicates that an endpoint is terminating the connection because it has received a message that contains data that is not consistent with the type of the message. MandatoryExtension Equivalent to close status 1010. Indicates that a client is terminating the connection because it has expected the server to negotiate one or more extension, but the server did not return them in the handshake response. Normal Equivalent to close status 1000. Indicates normal close. NoStatus Equivalent to close status 1005. Indicates that no status code was actually present. A Reserved value. PolicyViolation Equivalent to close status 1008. Indicates that an endpoint is terminating the connection because it has received a message that violates its policy. ProtocolError Equivalent to close status 1002. Indicates that an endpoint is terminating the connection due to a protocol error. ServerError Equivalent to close status 1011. Indicates that a server is terminating the connection because it has encountered an unexpected condition that prevented it from fulfilling the request. TlsHandshakeFailure Equivalent to close status 1015. Indicates that the connection was closed due to a failure to perform a TLS handshake. A Reserved value. TooBig Equivalent to close status 1009. Indicates that an endpoint is terminating the connection because it has received a message that is too big to process. Undefined Equivalent to close status 1004. Still undefined. A Reserved value. UnsupportedData Equivalent to close status 1003. Indicates that an endpoint is terminating the connection because it has received a type of data that it cannot accept."
  },
  "api/WebSocketSharp.CompressionMethod.html": {
    "href": "api/WebSocketSharp.CompressionMethod.html",
    "title": "Enum CompressionMethod | Unity Algorand SDK",
    "keywords": "Enum CompressionMethod Specifies the method for compression. Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public enum CompressionMethod : byte Remarks The methods are defined in Compression Extensions for WebSocket . Fields Name Description Deflate Specifies DEFLATE. None Specifies no compression."
  },
  "api/WebSocketSharp.ErrorEventArgs.html": {
    "href": "api/WebSocketSharp.ErrorEventArgs.html",
    "title": "Class ErrorEventArgs | Unity Algorand SDK",
    "keywords": "Class ErrorEventArgs Represents the event data for the OnError event. Inheritance Object ErrorEventArgs Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public class ErrorEventArgs : EventArgs Remarks That event occurs when the WebSocket gets an error. If you would like to get the error message, you should access the Message property. And if the error is due to an exception, you can get it by accessing the Exception property. Properties Exception Gets the exception that caused the error. Declaration public Exception Exception { get; } Property Value Type Description Exception An Exception instance that represents the cause of the error if it is due to an exception; otherwise, null . Message Gets the error message. Declaration public string Message { get; } Property Value Type Description String A String that represents the error message."
  },
  "api/WebSocketSharp.Ext.html": {
    "href": "api/WebSocketSharp.Ext.html",
    "title": "Class Ext | Unity Algorand SDK",
    "keywords": "Class Ext Provides a set of static methods for websocket-sharp. Inheritance Object Ext Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public static class Ext Methods GetDescription(HttpStatusCode) Gets the description of the specified HTTP status code. Declaration public static string GetDescription(this HttpStatusCode code) Parameters Type Name Description HttpStatusCode code One of the enum values. It specifies the HTTP status code. Returns Type Description String A String that represents the description of the HTTP status code. GetStatusDescription(Int32) Gets the description of the specified HTTP status code. Declaration public static string GetStatusDescription(this int code) Parameters Type Name Description Int32 code An Int32 that specifies the HTTP status code. Returns Type Description String A String that represents the description of the HTTP status code. An empty string if the description is not present. IsCloseStatusCode(UInt16) Determines whether the specified ushort is in the range of the status code for the WebSocket connection close. Declaration public static bool IsCloseStatusCode(this ushort value) Parameters Type Name Description UInt16 value A UInt16 to test. Returns Type Description Boolean true if value is in the range of the status code for the close; otherwise, false . Remarks The ranges are the following: 1000-2999: These numbers are reserved for definition by the WebSocket protocol. 3000-3999: These numbers are reserved for use by libraries, frameworks, and applications. 4000-4999: These numbers are reserved for private use. IsEnclosedIn(String, Char) Determines whether the specified string is enclosed in the specified character. Declaration public static bool IsEnclosedIn(this string value, char c) Parameters Type Name Description String value A String to test. Char c A Char to find. Returns Type Description Boolean true if value is enclosed in c ; otherwise, false . IsHostOrder(ByteOrder) Determines whether the specified byte order is host (this computer architecture) byte order. Declaration public static bool IsHostOrder(this ByteOrder order) Parameters Type Name Description ByteOrder order One of the ByteOrder enum values to test. Returns Type Description Boolean true if order is host byte order; otherwise, false . IsLocal(IPAddress) Determines whether the specified IP address is a local IP address. Declaration public static bool IsLocal(this IPAddress address) Parameters Type Name Description IPAddress address A IPAddress to test. Returns Type Description Boolean true if address is a local IP address; otherwise, false . Remarks This local means NOT REMOTE for the current host. IsNullOrEmpty(String) Determines whether the specified string is null or an empty string. Declaration public static bool IsNullOrEmpty(this string value) Parameters Type Name Description String value A String to test. Returns Type Description Boolean true if value is null or an empty string; otherwise, false . IsPredefinedScheme(String) Determines whether the specified string is a predefined scheme. Declaration public static bool IsPredefinedScheme(this string value) Parameters Type Name Description String value A String to test. Returns Type Description Boolean true if value is a predefined scheme; otherwise, false . MaybeUri(String) Determines whether the specified string is a URI string. Declaration public static bool MaybeUri(this string value) Parameters Type Name Description String value A String to test. Returns Type Description Boolean true if value may be a URI string; otherwise, false . SubArray<T>(T[], Int32, Int32) Retrieves a sub-array from the specified array. A sub-array starts at the specified index in the array. Declaration public static T[] SubArray<T>(this T[] array, int startIndex, int length) Parameters Type Name Description T[] array An array of T from which to retrieve a sub-array. Int32 startIndex An Int32 that represents the zero-based index in the array at which retrieving starts. Int32 length An Int32 that represents the number of elements to retrieve. Returns Type Description T[] An array of T that receives a sub-array. Type Parameters Name Description T The type of elements in the array. SubArray<T>(T[], Int64, Int64) Retrieves a sub-array from the specified array. A sub-array starts at the specified index in the array. Declaration public static T[] SubArray<T>(this T[] array, long startIndex, long length) Parameters Type Name Description T[] array An array of T from which to retrieve a sub-array. Int64 startIndex A Int64 that represents the zero-based index in the array at which retrieving starts. Int64 length A Int64 that represents the number of elements to retrieve. Returns Type Description T[] An array of T that receives a sub-array. Type Parameters Name Description T The type of elements in the array. Times(Int32, Action) Executes the specified delegate n times. Declaration public static void Times(this int n, Action action) Parameters Type Name Description Int32 n An Int32 that specifies the number of times to execute. Action action An delegate to execute. Times(Int32, Action<Int32>) Executes the specified delegate n times. Declaration public static void Times(this int n, Action<int> action) Parameters Type Name Description Int32 n An Int32 that specifies the number of times to execute. Action < Int32 > action An Action<int> delegate to execute. The Int32 parameter is the zero-based count of iteration. Times(Int64, Action) Executes the specified delegate n times. Declaration public static void Times(this long n, Action action) Parameters Type Name Description Int64 n A Int64 that specifies the number of times to execute. Action action An delegate to execute. Times(Int64, Action<Int64>) Executes the specified delegate n times. Declaration public static void Times(this long n, Action<long> action) Parameters Type Name Description Int64 n A Int64 that specifies the number of times to execute. Action < Int64 > action An Action<long> delegate to execute. The Int64 parameter is the zero-based count of iteration. Times(UInt32, Action) Executes the specified delegate n times. Declaration public static void Times(this uint n, Action action) Parameters Type Name Description UInt32 n A UInt32 that specifies the number of times to execute. Action action An delegate to execute. Times(UInt32, Action<UInt32>) Executes the specified delegate n times. Declaration public static void Times(this uint n, Action<uint> action) Parameters Type Name Description UInt32 n A UInt32 that specifies the number of times to execute. Action < UInt32 > action An Action<uint> delegate to execute. The UInt32 parameter is the zero-based count of iteration. Times(UInt64, Action) Executes the specified delegate n times. Declaration public static void Times(this ulong n, Action action) Parameters Type Name Description UInt64 n A UInt64 that specifies the number of times to execute. Action action An delegate to execute. Times(UInt64, Action<UInt64>) Executes the specified delegate n times. Declaration public static void Times(this ulong n, Action<ulong> action) Parameters Type Name Description UInt64 n A UInt64 that specifies the number of times to execute. Action < UInt64 > action An Action<ulong> delegate to execute. The UInt64 parameter is the zero-based count of iteration. To<T>(Byte[], ByteOrder) Converts the specified byte array to the specified type value. Declaration public static T To<T>(this byte[] source, ByteOrder sourceOrder) where T : struct Parameters Type Name Description Byte [] source An array of Byte to convert. ByteOrder sourceOrder One of the ByteOrder enum values. It specifies the byte order of source . Returns Type Description T A T converted from source . The default value of T if not converted. Type Parameters Name Description T The type of the return. Boolean , Char , Double , Single , Int32 , Int64 , Int16 , UInt32 , UInt64 , or UInt16 . ToByteArray<T>(T, ByteOrder) Converts the specified value to a byte array. Declaration public static byte[] ToByteArray<T>(this T value, ByteOrder order) where T : struct Parameters Type Name Description T value A T to convert. ByteOrder order One of the ByteOrder enum values. It specifies the byte order of the return. Returns Type Description Byte [] An array of Byte converted from value . Type Parameters Name Description T The type of value . Boolean , Byte , Char , Double , Single , Int32 , Int64 , Int16 , UInt32 , UInt64 , or UInt16 . ToHostOrder(Byte[], ByteOrder) Converts the order of elements in the specified byte array to host (this computer architecture) byte order. Declaration public static byte[] ToHostOrder(this byte[] source, ByteOrder sourceOrder) Parameters Type Name Description Byte [] source An array of Byte to convert. ByteOrder sourceOrder One of the ByteOrder enum values. It specifies the order of elements in source . Returns Type Description Byte [] An array of Byte converted from source . source if the number of elements in it is less than 2 or sourceOrder is same as host byte order. ToString<T>(T[], String) Converts the specified array to a string. Declaration public static string ToString<T>(this T[] array, string separator) Parameters Type Name Description T[] array An array of T to convert. String separator A String used to separate each element of array . Returns Type Description String A String converted by concatenating each element of array across separator . An empty string if array is an empty array. Type Parameters Name Description T The type of elements in array . ToUri(String) Converts the specified string to a . Declaration public static Uri ToUri(this string value) Parameters Type Name Description String value A String to convert. Returns Type Description Uri A converted from value . null if the conversion has failed. WriteContent(HttpListenerResponse, Byte[]) Sends the specified content data with the HTTP response. Declaration public static void WriteContent(this HttpListenerResponse response, byte[] content) Parameters Type Name Description HttpListenerResponse response A that represents the HTTP response used to send the content data. Byte [] content An array of Byte that specifies the content data to send."
  },
  "api/WebSocketSharp.html": {
    "href": "api/WebSocketSharp.html",
    "title": "Namespace WebSocketSharp | Unity Algorand SDK",
    "keywords": "Namespace WebSocketSharp Classes CloseEventArgs Represents the event data for the OnClose event. ErrorEventArgs Represents the event data for the OnError event. Ext Provides a set of static methods for websocket-sharp. LogData Represents a log data used by the Logger class. Logger Provides a set of methods and properties for logging. MessageEventArgs Represents the event data for the OnMessage event. WebSocket Implements the WebSocket interface. WebSocketException The exception that is thrown when a fatal error occurs in the WebSocket communication. Enums ByteOrder Specifies the byte order. CloseStatusCode Indicates the status code for the WebSocket connection close. CompressionMethod Specifies the method for compression. LogLevel Specifies the logging level. WebSocketState Indicates the state of a WebSocket connection."
  },
  "api/WebSocketSharp.LogData.html": {
    "href": "api/WebSocketSharp.LogData.html",
    "title": "Class LogData | Unity Algorand SDK",
    "keywords": "Class LogData Represents a log data used by the Logger class. Inheritance Object LogData Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public class LogData Properties Caller Gets the information of the logging method caller. Declaration public StackFrame Caller { get; } Property Value Type Description StackFrame A that provides the information of the logging method caller. Date Gets the date and time when the log data was created. Declaration public DateTime Date { get; } Property Value Type Description DateTime A that represents the date and time when the log data was created. Level Gets the logging level of the log data. Declaration public LogLevel Level { get; } Property Value Type Description LogLevel One of the LogLevel enum values, indicates the logging level of the log data. Message Gets the message of the log data. Declaration public string Message { get; } Property Value Type Description String A String that represents the message of the log data. Methods ToString() Returns a String that represents the current LogData . Declaration public override string ToString() Returns Type Description String A String that represents the current LogData . Overrides Object.ToString()"
  },
  "api/WebSocketSharp.Logger.html": {
    "href": "api/WebSocketSharp.Logger.html",
    "title": "Class Logger | Unity Algorand SDK",
    "keywords": "Class Logger Provides a set of methods and properties for logging. Inheritance Object Logger Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public class Logger Remarks If you output a log with lower than the value of the Level property, it cannot be outputted. The default output action writes a log to the standard output stream and the log file if the File property has a valid path to it. If you would like to use the custom output action, you should set the Output property to any Action<LogData, string> delegate. Constructors Logger() Initializes a new instance of the Logger class. Declaration public Logger() Remarks This constructor initializes the current logging level with Error . Logger(LogLevel) Initializes a new instance of the Logger class with the specified logging level . Declaration public Logger(LogLevel level) Parameters Type Name Description LogLevel level One of the LogLevel enum values. Logger(LogLevel, String, Action<LogData, String>) Initializes a new instance of the Logger class with the specified logging level , path to the log file , and output action. Declaration public Logger(LogLevel level, string file, Action<LogData, string> output) Parameters Type Name Description LogLevel level One of the LogLevel enum values. String file A String that represents the path to the log file. Action < LogData , String > output An Action<LogData, string> delegate that references the method(s) used to output a log. A String parameter passed to this delegate is file . Properties File Gets or sets the current path to the log file. Declaration public string File { get; set; } Property Value Type Description String A String that represents the current path to the log file if any. Level Gets or sets the current logging level. Declaration public LogLevel Level { get; set; } Property Value Type Description LogLevel One of the LogLevel enum values, specifies the current logging level. Remarks A log with lower than the value of this property cannot be outputted. Output Gets or sets the current output action used to output a log. Declaration public Action<LogData, string> Output { get; set; } Property Value Type Description Action < LogData , String > An Action<LogData, string> delegate that references the method(s) used to output a log. A String parameter passed to this delegate is the value of the File property. If the value to set is null , the current output action is changed to the default output action. Methods Debug(String) Outputs message as a log with Debug . Declaration public void Debug(string message) Parameters Type Name Description String message A String that represents the message to output as a log. Remarks If the current logging level is higher than Debug , this method doesn't output message as a log. Error(String) Outputs message as a log with Error . Declaration public void Error(string message) Parameters Type Name Description String message A String that represents the message to output as a log. Remarks If the current logging level is higher than Error , this method doesn't output message as a log. Fatal(String) Outputs message as a log with Fatal . Declaration public void Fatal(string message) Parameters Type Name Description String message A String that represents the message to output as a log. Info(String) Outputs message as a log with Info . Declaration public void Info(string message) Parameters Type Name Description String message A String that represents the message to output as a log. Remarks If the current logging level is higher than Info , this method doesn't output message as a log. Trace(String) Outputs message as a log with Trace . Declaration public void Trace(string message) Parameters Type Name Description String message A String that represents the message to output as a log. Remarks If the current logging level is higher than Trace , this method doesn't output message as a log. Warn(String) Outputs message as a log with Warn . Declaration public void Warn(string message) Parameters Type Name Description String message A String that represents the message to output as a log. Remarks If the current logging level is higher than Warn , this method doesn't output message as a log."
  },
  "api/WebSocketSharp.LogLevel.html": {
    "href": "api/WebSocketSharp.LogLevel.html",
    "title": "Enum LogLevel | Unity Algorand SDK",
    "keywords": "Enum LogLevel Specifies the logging level. Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public enum LogLevel Fields Name Description Debug Specifies the 2nd logging level from the bottom. Error Specifies the 2nd logging level from the top. Fatal Specifies the top logging level. Info Specifies the 3rd logging level from the bottom. Trace Specifies the bottom logging level. Warn Specifies the 3rd logging level from the top."
  },
  "api/WebSocketSharp.MessageEventArgs.html": {
    "href": "api/WebSocketSharp.MessageEventArgs.html",
    "title": "Class MessageEventArgs | Unity Algorand SDK",
    "keywords": "Class MessageEventArgs Represents the event data for the OnMessage event. Inheritance Object MessageEventArgs Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public class MessageEventArgs : EventArgs Remarks That event occurs when the WebSocket receives a message or a ping if the EmitOnPing property is set to true . If you would like to get the message data, you should access the Data or RawData property. Properties Data Gets the message data as a String . Declaration public string Data { get; } Property Value Type Description String A String that represents the message data if its type is text or ping and if decoding it to a string has successfully done; otherwise, null . IsBinary Gets a value indicating whether the message type is binary. Declaration public bool IsBinary { get; } Property Value Type Description Boolean true if the message type is binary; otherwise, false . IsPing Gets a value indicating whether the message type is ping. Declaration public bool IsPing { get; } Property Value Type Description Boolean true if the message type is ping; otherwise, false . IsText Gets a value indicating whether the message type is text. Declaration public bool IsText { get; } Property Value Type Description Boolean true if the message type is text; otherwise, false . RawData Gets the message data as an array of Byte . Declaration public byte[] RawData { get; } Property Value Type Description Byte [] An array of Byte that represents the message data."
  },
  "api/WebSocketSharp.Net.AuthenticationSchemes.html": {
    "href": "api/WebSocketSharp.Net.AuthenticationSchemes.html",
    "title": "Enum AuthenticationSchemes | Unity Algorand SDK",
    "keywords": "Enum AuthenticationSchemes Specifies the scheme for authentication. Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public enum AuthenticationSchemes Fields Name Description Anonymous Specifies anonymous authentication. Basic Specifies basic authentication. Digest Specifies digest authentication. None No authentication is allowed."
  },
  "api/WebSocketSharp.Net.ClientSslConfiguration.html": {
    "href": "api/WebSocketSharp.Net.ClientSslConfiguration.html",
    "title": "Class ClientSslConfiguration | Unity Algorand SDK",
    "keywords": "Class ClientSslConfiguration Stores the parameters for the used by clients. Inheritance Object ClientSslConfiguration Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public class ClientSslConfiguration Constructors ClientSslConfiguration(String) Initializes a new instance of the ClientSslConfiguration class with the specified target host server name. Declaration public ClientSslConfiguration(string targetHost) Parameters Type Name Description String targetHost A String that specifies the target host server name. ClientSslConfiguration(ClientSslConfiguration) Initializes a new instance of the ClientSslConfiguration class that stores the parameters copied from the specified configuration. Declaration public ClientSslConfiguration(ClientSslConfiguration configuration) Parameters Type Name Description ClientSslConfiguration configuration A ClientSslConfiguration from which to copy. Properties CheckCertificateRevocation Gets or sets a value indicating whether the certificate revocation list is checked during authentication. Declaration public bool CheckCertificateRevocation { get; set; } Property Value Type Description Boolean true if the certificate revocation list is checked during authentication; otherwise, false . The default value is false . ClientCertificates Gets or sets the collection of client certificates from which to select one to supply to the server. Declaration public X509CertificateCollection ClientCertificates { get; set; } Property Value Type Description X509CertificateCollection A or null . The collection contains client certificates from which to select. The default value is null . ClientCertificateSelectionCallback Gets or sets the callback used to select the certificate to supply to the server. Declaration public LocalCertificateSelectionCallback ClientCertificateSelectionCallback { get; set; } Property Value Type Description LocalCertificateSelectionCallback A delegate that invokes the method called for selecting the certificate. The default value is a delegate that invokes a method that only returns null . Remarks No certificate is supplied if the callback returns null . EnabledSslProtocols Gets or sets the protocols used for authentication. Declaration public SslProtocols EnabledSslProtocols { get; set; } Property Value Type Description SslProtocols Any of the enum values. It represents the protocols used for authentication. The default value is . ServerCertificateValidationCallback Gets or sets the callback used to validate the certificate supplied by the server. Declaration public RemoteCertificateValidationCallback ServerCertificateValidationCallback { get; set; } Property Value Type Description RemoteCertificateValidationCallback A delegate that invokes the method called for validating the certificate. The default value is a delegate that invokes a method that only returns true . Remarks The certificate is valid if the callback returns true . TargetHost Gets or sets the target host server name. Declaration public string TargetHost { get; set; } Property Value Type Description String A String that represents the name of the server that will share a secure connection with a client."
  },
  "api/WebSocketSharp.Net.Cookie.html": {
    "href": "api/WebSocketSharp.Net.Cookie.html",
    "title": "Class Cookie | Unity Algorand SDK",
    "keywords": "Class Cookie Provides a set of methods and properties used to manage an HTTP cookie. Inheritance Object Cookie Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public sealed class Cookie Remarks This class refers to the following specifications: Netscape specification RFC 2109 RFC 2965 RFC 6265 This class cannot be inherited. Constructors Cookie(String, String) Initializes a new instance of the Cookie class with the specified name and value. Declaration public Cookie(string name, string value) Parameters Type Name Description String name A String that specifies the name of the cookie. The name must be a token defined in RFC 2616 . String value A String that specifies the value of the cookie. Cookie(String, String, String) Initializes a new instance of the Cookie class with the specified name, value, and path. Declaration public Cookie(string name, string value, string path) Parameters Type Name Description String name A String that specifies the name of the cookie. The name must be a token defined in RFC 2616 . String value A String that specifies the value of the cookie. String path A String that specifies the value of the Path attribute of the cookie. Cookie(String, String, String, String) Initializes a new instance of the Cookie class with the specified name, value, path, and domain. Declaration public Cookie(string name, string value, string path, string domain) Parameters Type Name Description String name A String that specifies the name of the cookie. The name must be a token defined in RFC 2616 . String value A String that specifies the value of the cookie. String path A String that specifies the value of the Path attribute of the cookie. String domain A String that specifies the value of the Domain attribute of the cookie. Properties Comment Gets the value of the Comment attribute of the cookie. Declaration public string Comment { get; } Property Value Type Description String A String that represents the comment to document intended use of the cookie. null if not present. The default value is null . CommentUri Gets the value of the CommentURL attribute of the cookie. Declaration public Uri CommentUri { get; } Property Value Type Description Uri A that represents the URI that provides the comment to document intended use of the cookie. null if not present. The default value is null . Discard Gets a value indicating whether the client discards the cookie unconditionally when the client terminates. Declaration public bool Discard { get; } Property Value Type Description Boolean true if the client discards the cookie unconditionally when the client terminates; otherwise, false . The default value is false . Domain Gets or sets the value of the Domain attribute of the cookie. Declaration public string Domain { get; set; } Property Value Type Description String A String that represents the domain name that the cookie is valid for. An empty string if this attribute is not needed. Expired Gets or sets a value indicating whether the cookie has expired. Declaration public bool Expired { get; set; } Property Value Type Description Boolean true if the cookie has expired; otherwise, false . The default value is false . Expires Gets or sets the value of the Expires attribute of the cookie. Declaration public DateTime Expires { get; set; } Property Value Type Description DateTime A that represents the date and time that the cookie expires on. if this attribute is not needed. The default value is . HttpOnly Gets or sets a value indicating whether non-HTTP APIs can access the cookie. Declaration public bool HttpOnly { get; set; } Property Value Type Description Boolean true if non-HTTP APIs cannot access the cookie; otherwise, false . The default value is false . Name Gets or sets the name of the cookie. Declaration public string Name { get; set; } Property Value Type Description String A String that represents the name of the cookie. The name must be a token defined in RFC 2616 . Path Gets or sets the value of the Path attribute of the cookie. Declaration public string Path { get; set; } Property Value Type Description String A String that represents the subset of URI on the origin server that the cookie applies to. Port Gets the value of the Port attribute of the cookie. Declaration public string Port { get; } Property Value Type Description String A String that represents the list of TCP ports that the cookie applies to. null if not present. The default value is null . Secure Gets or sets a value indicating whether the security level of the cookie is secure. Declaration public bool Secure { get; set; } Property Value Type Description Boolean true if the security level of the cookie is secure; otherwise, false . The default value is false . Remarks When this property is true , the cookie may be included in the request only if the request is transmitted over HTTPS. TimeStamp Gets the time when the cookie was issued. Declaration public DateTime TimeStamp { get; } Property Value Type Description DateTime A that represents the time when the cookie was issued. Value Gets or sets the value of the cookie. Declaration public string Value { get; set; } Property Value Type Description String A String that represents the value of the cookie. Version Gets the value of the Version attribute of the cookie. Declaration public int Version { get; } Property Value Type Description Int32 An Int32 that represents the version of HTTP state management that the cookie conforms to. 0 or 1. 0 if not present. The default value is 0. Methods Equals(Object) Determines whether the current cookie instance is equal to the specified Object instance. Declaration public override bool Equals(object comparand) Parameters Type Name Description Object comparand An Object instance to compare with the current cookie instance. An reference to a Cookie instance. Returns Type Description Boolean true if the current cookie instance is equal to comparand ; otherwise, false . Overrides Object.Equals(Object) GetHashCode() Gets a hash code for the current cookie instance. Declaration public override int GetHashCode() Returns Type Description Int32 An Int32 that represents the hash code. Overrides Object.GetHashCode() ToString() Returns a string that represents the current cookie instance. Declaration public override string ToString() Returns Type Description String A String that is suitable for the Cookie request header. Overrides Object.ToString()"
  },
  "api/WebSocketSharp.Net.CookieCollection.html": {
    "href": "api/WebSocketSharp.Net.CookieCollection.html",
    "title": "Class CookieCollection | Unity Algorand SDK",
    "keywords": "Class CookieCollection Provides a collection of instances of the Cookie class. Inheritance Object CookieCollection Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public class CookieCollection : ICollection<Cookie> Constructors CookieCollection() Initializes a new instance of the CookieCollection class. Declaration public CookieCollection() Properties Count Gets the number of cookies in the collection. Declaration public int Count { get; } Property Value Type Description Int32 An Int32 that represents the number of cookies in the collection. IsReadOnly Gets a value indicating whether the collection is read-only. Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean true if the collection is read-only; otherwise, false . The default value is false . IsSynchronized Gets a value indicating whether the access to the collection is thread safe. Declaration public bool IsSynchronized { get; } Property Value Type Description Boolean true if the access to the collection is thread safe; otherwise, false . The default value is false . Item[Int32] Gets the cookie at the specified index from the collection. Declaration public Cookie this[int index] { get; } Parameters Type Name Description Int32 index An Int32 that specifies the zero-based index of the cookie to find. Property Value Type Description Cookie A Cookie at the specified index in the collection. Item[String] Gets the cookie with the specified name from the collection. Declaration public Cookie this[string name] { get; } Parameters Type Name Description String name A String that specifies the name of the cookie to find. Property Value Type Description Cookie A Cookie with the specified name in the collection. null if not found. SyncRoot Gets an object used to synchronize access to the collection. Declaration public object SyncRoot { get; } Property Value Type Description Object An Object used to synchronize access to the collection. Methods Add(Cookie) Adds the specified cookie to the collection. Declaration public void Add(Cookie cookie) Parameters Type Name Description Cookie cookie A Cookie to add. Add(CookieCollection) Adds the specified cookies to the collection. Declaration public void Add(CookieCollection cookies) Parameters Type Name Description CookieCollection cookies A CookieCollection that contains the cookies to add. Clear() Removes all cookies from the collection. Declaration public void Clear() Contains(Cookie) Determines whether the collection contains the specified cookie. Declaration public bool Contains(Cookie cookie) Parameters Type Name Description Cookie cookie A Cookie to find. Returns Type Description Boolean true if the cookie is found in the collection; otherwise, false . CopyTo(Cookie[], Int32) Copies the elements of the collection to the specified array, starting at the specified index. Declaration public void CopyTo(Cookie[] array, int index) Parameters Type Name Description Cookie [] array An array of Cookie that specifies the destination of the elements copied from the collection. Int32 index An Int32 that specifies the zero-based index in the array at which copying starts. GetEnumerator() Gets the enumerator that iterates through the collection. Declaration public IEnumerator<Cookie> GetEnumerator() Returns Type Description IEnumerator < Cookie > An System.Collections.Generic.IEnumerator{Cookie} instance that can be used to iterate through the collection. Remove(Cookie) Removes the specified cookie from the collection. Declaration public bool Remove(Cookie cookie) Parameters Type Name Description Cookie cookie A Cookie to remove. Returns Type Description Boolean true if the cookie is successfully removed; otherwise, false . false if the cookie is not found in the collection."
  },
  "api/WebSocketSharp.Net.CookieException.html": {
    "href": "api/WebSocketSharp.Net.CookieException.html",
    "title": "Class CookieException | Unity Algorand SDK",
    "keywords": "Class CookieException The exception that is thrown when a Cookie gets an error. Inheritance Object CookieException Implements ISerializable Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public class CookieException : FormatException Constructors CookieException() Initializes a new instance of the CookieException class. Declaration public CookieException() CookieException(SerializationInfo, StreamingContext) Initializes a new instance of the CookieException class with the serialized data. Declaration protected CookieException(SerializationInfo serializationInfo, StreamingContext streamingContext) Parameters Type Name Description SerializationInfo serializationInfo A that holds the serialized object data. StreamingContext streamingContext A that specifies the source for the deserialization. Methods GetObjectData(SerializationInfo, StreamingContext) Populates the specified instance with the data needed to serialize the current instance. Declaration public override void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext) Parameters Type Name Description SerializationInfo serializationInfo A that holds the serialized object data. StreamingContext streamingContext A that specifies the destination for the serialization. Implements ISerializable"
  },
  "api/WebSocketSharp.Net.html": {
    "href": "api/WebSocketSharp.Net.html",
    "title": "Namespace WebSocketSharp.Net | Unity Algorand SDK",
    "keywords": "Namespace WebSocketSharp.Net Classes ClientSslConfiguration Stores the parameters for the used by clients. Cookie Provides a set of methods and properties used to manage an HTTP cookie. CookieCollection Provides a collection of instances of the Cookie class. CookieException The exception that is thrown when a Cookie gets an error. HttpBasicIdentity Holds the username and password from an HTTP Basic authentication attempt. HttpDigestIdentity Holds the username and other parameters from an HTTP Digest authentication attempt. HttpListener Provides a simple, programmatically controlled HTTP listener. HttpListenerContext Provides the access to the HTTP request and response objects used by the HttpListener class. HttpListenerException The exception that is thrown when an error occurs processing an HTTP request. HttpListenerPrefixCollection Provides a collection used to store the URI prefixes for a instance of the HttpListener class. HttpListenerRequest Represents an incoming HTTP request to a HttpListener instance. HttpListenerResponse Represents an HTTP response to an HTTP request received by a HttpListener instance. HttpVersion Provides the HTTP version numbers. NetworkCredential Provides the credentials for the password-based authentication. ServerSslConfiguration Stores the parameters for the used by servers. WebHeaderCollection Provides a collection of the HTTP headers associated with a request or response. Enums AuthenticationSchemes Specifies the scheme for authentication. HttpRequestHeader Indicates the HTTP header that may be specified in a client request. HttpResponseHeader Indicates the HTTP header that can be specified in a server response. HttpStatusCode Indicates the HTTP status code that can be specified in a server response."
  },
  "api/WebSocketSharp.Net.HttpBasicIdentity.html": {
    "href": "api/WebSocketSharp.Net.HttpBasicIdentity.html",
    "title": "Class HttpBasicIdentity | Unity Algorand SDK",
    "keywords": "Class HttpBasicIdentity Holds the username and password from an HTTP Basic authentication attempt. Inheritance Object HttpBasicIdentity Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public class HttpBasicIdentity : GenericIdentity Properties Password Gets the password from a basic authentication attempt. Declaration public virtual string Password { get; } Property Value Type Description String A String that represents the password."
  },
  "api/WebSocketSharp.Net.HttpDigestIdentity.html": {
    "href": "api/WebSocketSharp.Net.HttpDigestIdentity.html",
    "title": "Class HttpDigestIdentity | Unity Algorand SDK",
    "keywords": "Class HttpDigestIdentity Holds the username and other parameters from an HTTP Digest authentication attempt. Inheritance Object HttpDigestIdentity Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public class HttpDigestIdentity : GenericIdentity Properties Algorithm Gets the algorithm parameter from a digest authentication attempt. Declaration public string Algorithm { get; } Property Value Type Description String A String that represents the algorithm parameter. Cnonce Gets the cnonce parameter from a digest authentication attempt. Declaration public string Cnonce { get; } Property Value Type Description String A String that represents the cnonce parameter. Nc Gets the nc parameter from a digest authentication attempt. Declaration public string Nc { get; } Property Value Type Description String A String that represents the nc parameter. Nonce Gets the nonce parameter from a digest authentication attempt. Declaration public string Nonce { get; } Property Value Type Description String A String that represents the nonce parameter. Opaque Gets the opaque parameter from a digest authentication attempt. Declaration public string Opaque { get; } Property Value Type Description String A String that represents the opaque parameter. Qop Gets the qop parameter from a digest authentication attempt. Declaration public string Qop { get; } Property Value Type Description String A String that represents the qop parameter. Realm Gets the realm parameter from a digest authentication attempt. Declaration public string Realm { get; } Property Value Type Description String A String that represents the realm parameter. Response Gets the response parameter from a digest authentication attempt. Declaration public string Response { get; } Property Value Type Description String A String that represents the response parameter. Uri Gets the uri parameter from a digest authentication attempt. Declaration public string Uri { get; } Property Value Type Description String A String that represents the uri parameter."
  },
  "api/WebSocketSharp.Net.HttpListener.html": {
    "href": "api/WebSocketSharp.Net.HttpListener.html",
    "title": "Class HttpListener | Unity Algorand SDK",
    "keywords": "Class HttpListener Provides a simple, programmatically controlled HTTP listener. Inheritance Object HttpListener Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public sealed class HttpListener : IDisposable Constructors HttpListener() Initializes a new instance of the HttpListener class. Declaration public HttpListener() Properties AuthenticationSchemes Gets or sets the scheme used to authenticate the clients. Declaration public AuthenticationSchemes AuthenticationSchemes { get; set; } Property Value Type Description AuthenticationSchemes One of the AuthenticationSchemes enum values. It represents the scheme used to authenticate the clients. The default value is Anonymous . AuthenticationSchemeSelector Gets or sets the delegate called to select the scheme used to authenticate the clients. Declaration public Func<HttpListenerRequest, AuthenticationSchemes> AuthenticationSchemeSelector { get; set; } Property Value Type Description Func < HttpListenerRequest , AuthenticationSchemes > A Func< HttpListenerRequest , AuthenticationSchemes > delegate or null if not needed. The delegate references the method used to select an authentication scheme. The default value is null . Remarks If this property is set, the listener uses the authentication scheme selected by the delegate for each request. Or if this property is not set, the listener uses the value of the AuthenticationSchemes property as the authentication scheme for all requests. CertificateFolderPath Gets or sets the path to the folder in which stores the certificate files used to authenticate the server on the secure connection. Declaration public string CertificateFolderPath { get; set; } Property Value Type Description String A String that represents the path to the folder in which stores the certificate files. The default value is null . Remarks This property represents the path to the folder in which stores the certificate files associated with each port number of added URI prefixes. A set of the certificate files is a pair of <port number>.cer (DER) and <port number>.key (DER, RSA Private Key). If this property is null or an empty string, the result of System.Environment.GetFolderPath ( ) is used as the default path. IgnoreWriteExceptions Gets or sets a value indicating whether the listener returns exceptions that occur when sending the response to the client. Declaration public bool IgnoreWriteExceptions { get; set; } Property Value Type Description Boolean true if the listener should not return those exceptions; otherwise, false . The default value is false . IsListening Gets a value indicating whether the listener has been started. Declaration public bool IsListening { get; } Property Value Type Description Boolean true if the listener has been started; otherwise, false . IsSupported Gets a value indicating whether the listener can be used with the current operating system. Declaration public static bool IsSupported { get; } Property Value Type Description Boolean true . Log Gets the logging functions. Declaration public Logger Log { get; } Property Value Type Description Logger A Logger that provides the logging functions. Remarks The default logging level is Error . If you would like to change it, you should set the Log.Level property to any of the LogLevel enum values. Prefixes Gets the URI prefixes handled by the listener. Declaration public HttpListenerPrefixCollection Prefixes { get; } Property Value Type Description HttpListenerPrefixCollection A HttpListenerPrefixCollection that contains the URI prefixes. Realm Gets or sets the name of the realm associated with the listener. Declaration public string Realm { get; set; } Property Value Type Description String A String that represents the name of the realm. The default value is null . Remarks If this property is null or an empty string, \"SECRET AREA\" will be used as the name of the realm. SslConfiguration Gets the SSL configuration used to authenticate the server and optionally the client for secure connection. Declaration public ServerSslConfiguration SslConfiguration { get; } Property Value Type Description ServerSslConfiguration A ServerSslConfiguration that represents the SSL configuration for secure connection. UnsafeConnectionNtlmAuthentication Gets or sets a value indicating whether, when NTLM authentication is used, the authentication information of first request is used to authenticate additional requests on the same connection. Declaration public bool UnsafeConnectionNtlmAuthentication { get; set; } Property Value Type Description Boolean true if the authentication information of first request is used; otherwise, false . Remarks This property is not currently supported and always throws a . UserCredentialsFinder Gets or sets the delegate called to find the credentials for an identity used to authenticate a client. Declaration public Func<IIdentity, NetworkCredential> UserCredentialsFinder { get; set; } Property Value Type Description Func < IIdentity , NetworkCredential > A Func< , NetworkCredential > delegate or null if not needed. It references the method used to find the credentials. The default value is null . Methods Abort() Shuts down the listener immediately. Declaration public void Abort() BeginGetContext(AsyncCallback, Object) Begins getting an incoming request asynchronously. Declaration public IAsyncResult BeginGetContext(AsyncCallback callback, object state) Parameters Type Name Description AsyncCallback callback An delegate that references the method to invoke when the asynchronous operation completes. Object state An Object that represents a user defined object to pass to callback . Returns Type Description IAsyncResult An that represents the status of the asynchronous operation. Remarks This asynchronous operation must be completed by calling the EndGetContext method. Typically, the EndGetContext method is called by callback . Exceptions Type Condition HttpListenerException This method is canceled. Close() Shuts down the listener. Declaration public void Close() EndGetContext(IAsyncResult) Ends an asynchronous operation to get an incoming request. Declaration public HttpListenerContext EndGetContext(IAsyncResult asyncResult) Parameters Type Name Description IAsyncResult asyncResult An instance obtained by calling the BeginGetContext method. Returns Type Description HttpListenerContext A HttpListenerContext that represents a request. Remarks This method completes an asynchronous operation started by calling the BeginGetContext method. Exceptions Type Condition HttpListenerException This method is canceled. GetContext() Gets an incoming request. Declaration public HttpListenerContext GetContext() Returns Type Description HttpListenerContext A HttpListenerContext that represents a request. Remarks This method waits for an incoming request and returns when a request is received. Exceptions Type Condition HttpListenerException This method is canceled. Start() Starts receiving incoming requests. Declaration public void Start() Stop() Stops receiving incoming requests. Declaration public void Stop()"
  },
  "api/WebSocketSharp.Net.HttpListenerContext.html": {
    "href": "api/WebSocketSharp.Net.HttpListenerContext.html",
    "title": "Class HttpListenerContext | Unity Algorand SDK",
    "keywords": "Class HttpListenerContext Provides the access to the HTTP request and response objects used by the HttpListener class. Inheritance Object HttpListenerContext Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public sealed class HttpListenerContext Remarks This class cannot be inherited. Properties Request Gets the HTTP request object that represents a client request. Declaration public HttpListenerRequest Request { get; } Property Value Type Description HttpListenerRequest A HttpListenerRequest that represents the client request. Response Gets the HTTP response object used to send a response to the client. Declaration public HttpListenerResponse Response { get; } Property Value Type Description HttpListenerResponse A HttpListenerResponse that represents a response to the client request. User Gets the client information (identity, authentication, and security roles). Declaration public IPrincipal User { get; } Property Value Type Description IPrincipal A instance or null if not authenticated. The instance describes the client. Methods AcceptWebSocket(String) Accepts a WebSocket handshake request. Declaration public HttpListenerWebSocketContext AcceptWebSocket(string protocol) Parameters Type Name Description String protocol A String that specifies the subprotocol supported on the WebSocket connection. Returns Type Description HttpListenerWebSocketContext A that represents the WebSocket handshake request."
  },
  "api/WebSocketSharp.Net.HttpListenerException.html": {
    "href": "api/WebSocketSharp.Net.HttpListenerException.html",
    "title": "Class HttpListenerException | Unity Algorand SDK",
    "keywords": "Class HttpListenerException The exception that is thrown when an error occurs processing an HTTP request. Inheritance Object HttpListenerException Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public class HttpListenerException : Win32Exception Constructors HttpListenerException() Initializes a new instance of the HttpListenerException class. Declaration public HttpListenerException() HttpListenerException(SerializationInfo, StreamingContext) Initializes a new instance of the HttpListenerException class from the specified instances of the and classes. Declaration protected HttpListenerException(SerializationInfo serializationInfo, StreamingContext streamingContext) Parameters Type Name Description SerializationInfo serializationInfo A that contains the serialized object data. StreamingContext streamingContext A that specifies the source for the deserialization. HttpListenerException(Int32) Initializes a new instance of the HttpListenerException class with the specified error code. Declaration public HttpListenerException(int errorCode) Parameters Type Name Description Int32 errorCode An Int32 that specifies the error code. HttpListenerException(Int32, String) Initializes a new instance of the HttpListenerException class with the specified error code and message. Declaration public HttpListenerException(int errorCode, string message) Parameters Type Name Description Int32 errorCode An Int32 that specifies the error code. String message A String that specifies the message. Properties ErrorCode Gets the error code that identifies the error that occurred. Declaration public override int ErrorCode { get; } Property Value Type Description Int32 An Int32 that represents the error code. It is any of the Win32 error codes."
  },
  "api/WebSocketSharp.Net.HttpListenerPrefixCollection.html": {
    "href": "api/WebSocketSharp.Net.HttpListenerPrefixCollection.html",
    "title": "Class HttpListenerPrefixCollection | Unity Algorand SDK",
    "keywords": "Class HttpListenerPrefixCollection Provides a collection used to store the URI prefixes for a instance of the HttpListener class. Inheritance Object HttpListenerPrefixCollection Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public class HttpListenerPrefixCollection : ICollection<string> Remarks The HttpListener instance responds to the request which has a requested URI that the prefixes most closely match. Properties Count Gets the number of prefixes in the collection. Declaration public int Count { get; } Property Value Type Description Int32 An Int32 that represents the number of prefixes. IsReadOnly Gets a value indicating whether the access to the collection is read-only. Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean Always returns false . IsSynchronized Gets a value indicating whether the access to the collection is synchronized. Declaration public bool IsSynchronized { get; } Property Value Type Description Boolean Always returns false . Methods Add(String) Adds the specified URI prefix to the collection. Declaration public void Add(string uriPrefix) Parameters Type Name Description String uriPrefix A String that specifies the URI prefix to add. It must be a well-formed URI prefix with http or https scheme, and must end with a '/'. Clear() Removes all URI prefixes from the collection. Declaration public void Clear() Contains(String) Returns a value indicating whether the collection contains the specified URI prefix. Declaration public bool Contains(string uriPrefix) Parameters Type Name Description String uriPrefix A String that specifies the URI prefix to test. Returns Type Description Boolean true if the collection contains the URI prefix; otherwise, false . CopyTo(String[], Int32) Copies the contents of the collection to the specified array of string. Declaration public void CopyTo(string[] array, int offset) Parameters Type Name Description String [] array An array of String that specifies the destination of the URI prefix strings copied from the collection. Int32 offset An Int32 that specifies the zero-based index in the array at which copying begins. GetEnumerator() Gets the enumerator that iterates through the collection. Declaration public IEnumerator<string> GetEnumerator() Returns Type Description IEnumerator < String > An System.Collections.Generic.IEnumerator{string} instance that can be used to iterate through the collection. Remove(String) Removes the specified URI prefix from the collection. Declaration public bool Remove(string uriPrefix) Parameters Type Name Description String uriPrefix A String that specifies the URI prefix to remove. Returns Type Description Boolean true if the URI prefix is successfully removed; otherwise, false ."
  },
  "api/WebSocketSharp.Net.HttpListenerRequest.html": {
    "href": "api/WebSocketSharp.Net.HttpListenerRequest.html",
    "title": "Class HttpListenerRequest | Unity Algorand SDK",
    "keywords": "Class HttpListenerRequest Represents an incoming HTTP request to a HttpListener instance. Inheritance Object HttpListenerRequest Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public sealed class HttpListenerRequest Remarks This class cannot be inherited. Properties AcceptTypes Gets the media types that are acceptable for the client. Declaration public string[] AcceptTypes { get; } Property Value Type Description String [] An array of String that contains the names of the media types specified in the value of the Accept header. null if the header is not present. ClientCertificateError Gets an error code that identifies a problem with the certificate provided by the client. Declaration public int ClientCertificateError { get; } Property Value Type Description Int32 An Int32 that represents an error code. ContentEncoding Gets the encoding for the entity body data included in the request. Declaration public Encoding ContentEncoding { get; } Property Value Type Description Encoding A converted from the charset value of the Content-Type header. if the charset value is not available. ContentLength64 Gets the length in bytes of the entity body data included in the request. Declaration public long ContentLength64 { get; } Property Value Type Description Int64 A Int64 converted from the value of the Content-Length header. -1 if the header is not present. ContentType Gets the media type of the entity body data included in the request. Declaration public string ContentType { get; } Property Value Type Description String A String that represents the value of the Content-Type header. null if the header is not present. Cookies Gets the cookies included in the request. Declaration public CookieCollection Cookies { get; } Property Value Type Description CookieCollection A CookieCollection that contains the cookies. An empty collection if not included. HasEntityBody Gets a value indicating whether the request has the entity body data. Declaration public bool HasEntityBody { get; } Property Value Type Description Boolean true if the request has the entity body data; otherwise, false . Headers Gets the headers included in the request. Declaration public NameValueCollection Headers { get; } Property Value Type Description NameValueCollection A that contains the headers. HttpMethod Gets the HTTP method specified by the client. Declaration public string HttpMethod { get; } Property Value Type Description String A String that represents the HTTP method specified in the request line. InputStream Gets a stream that contains the entity body data included in the request. Declaration public Stream InputStream { get; } Property Value Type Description Stream A that contains the entity body data. if the entity body data is not available. IsAuthenticated Gets a value indicating whether the client is authenticated. Declaration public bool IsAuthenticated { get; } Property Value Type Description Boolean true if the client is authenticated; otherwise, false . IsLocal Gets a value indicating whether the request is sent from the local computer. Declaration public bool IsLocal { get; } Property Value Type Description Boolean true if the request is sent from the same computer as the server; otherwise, false . IsSecureConnection Gets a value indicating whether a secure connection is used to send the request. Declaration public bool IsSecureConnection { get; } Property Value Type Description Boolean true if the connection is secure; otherwise, false . IsWebSocketRequest Gets a value indicating whether the request is a WebSocket handshake request. Declaration public bool IsWebSocketRequest { get; } Property Value Type Description Boolean true if the request is a WebSocket handshake request; otherwise, false . KeepAlive Gets a value indicating whether a persistent connection is requested. Declaration public bool KeepAlive { get; } Property Value Type Description Boolean true if the request specifies that the connection is kept open; otherwise, false . LocalEndPoint Gets the endpoint to which the request is sent. Declaration public IPEndPoint LocalEndPoint { get; } Property Value Type Description IPEndPoint A IPEndPoint that represents the server IP address and port number. ProtocolVersion Gets the HTTP version specified by the client. Declaration public Version ProtocolVersion { get; } Property Value Type Description Version A Version that represents the HTTP version specified in the request line. QueryString Gets the query string included in the request. Declaration public NameValueCollection QueryString { get; } Property Value Type Description NameValueCollection A that contains the query parameters. An empty collection if not included. RawUrl Gets the raw URL specified by the client. Declaration public string RawUrl { get; } Property Value Type Description String A String that represents the request target specified in the request line. RemoteEndPoint Gets the endpoint from which the request is sent. Declaration public IPEndPoint RemoteEndPoint { get; } Property Value Type Description IPEndPoint A IPEndPoint that represents the client IP address and port number. RequestTraceIdentifier Gets the trace identifier of the request. Declaration public Guid RequestTraceIdentifier { get; } Property Value Type Description Guid A that represents the trace identifier. Url Gets the URL requested by the client. Declaration public Uri Url { get; } Property Value Type Description Uri A that represents the URL parsed from the request. null if the URL cannot be parsed. UrlReferrer Gets the URI of the resource from which the requested URL was obtained. Declaration public Uri UrlReferrer { get; } Property Value Type Description Uri A converted from the value of the Referer header. null if the header value is not available. UserAgent Gets the user agent from which the request is originated. Declaration public string UserAgent { get; } Property Value Type Description String A String that represents the value of the User-Agent header. null if the header is not present. UserHostAddress Gets the IP address and port number to which the request is sent. Declaration public string UserHostAddress { get; } Property Value Type Description String A String that represents the server IP address and port number. UserHostName Gets the server host name requested by the client. Declaration public string UserHostName { get; } Property Value Type Description String A String that represents the value of the Host header. It includes the port number if provided. null if the header is not present. UserLanguages Gets the natural languages that are acceptable for the client. Declaration public string[] UserLanguages { get; } Property Value Type Description String [] An array of String that contains the names of the natural languages specified in the value of the Accept-Language header. null if the header is not present. Methods BeginGetClientCertificate(AsyncCallback, Object) Begins getting the certificate provided by the client asynchronously. Declaration public IAsyncResult BeginGetClientCertificate(AsyncCallback requestCallback, object state) Parameters Type Name Description AsyncCallback requestCallback An delegate that invokes the method called when the operation is complete. Object state An Object that represents a user defined object to pass to the callback delegate. Returns Type Description IAsyncResult An instance that indicates the status of the operation. EndGetClientCertificate(IAsyncResult) Ends an asynchronous operation to get the certificate provided by the client. Declaration public X509Certificate2 EndGetClientCertificate(IAsyncResult asyncResult) Parameters Type Name Description IAsyncResult asyncResult An instance returned when the operation started. Returns Type Description X509Certificate2 A that represents an X.509 certificate provided by the client. GetClientCertificate() Gets the certificate provided by the client. Declaration public X509Certificate2 GetClientCertificate() Returns Type Description X509Certificate2 A that represents an X.509 certificate provided by the client. ToString() Returns a string that represents the current instance. Declaration public override string ToString() Returns Type Description String A String that contains the request line and headers included in the request. Overrides Object.ToString()"
  },
  "api/WebSocketSharp.Net.HttpListenerResponse.html": {
    "href": "api/WebSocketSharp.Net.HttpListenerResponse.html",
    "title": "Class HttpListenerResponse | Unity Algorand SDK",
    "keywords": "Class HttpListenerResponse Represents an HTTP response to an HTTP request received by a HttpListener instance. Inheritance Object HttpListenerResponse Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public sealed class HttpListenerResponse : IDisposable Remarks This class cannot be inherited. Properties ContentEncoding Gets or sets the encoding for the entity body data included in the response. Declaration public Encoding ContentEncoding { get; set; } Property Value Type Description Encoding A that represents the encoding for the entity body data. null if no encoding is specified. The default value is null . ContentLength64 Gets or sets the number of bytes in the entity body data included in the response. Declaration public long ContentLength64 { get; set; } Property Value Type Description Int64 A Int64 that represents the number of bytes in the entity body data. It is used for the value of the Content-Length header. The default value is zero. ContentType Gets or sets the media type of the entity body included in the response. Declaration public string ContentType { get; set; } Property Value Type Description String A String that represents the media type of the entity body. It is used for the value of the Content-Type header. null if no media type is specified. The default value is null . Cookies Gets or sets the collection of cookies sent with the response. Declaration public CookieCollection Cookies { get; set; } Property Value Type Description CookieCollection A CookieCollection that contains the cookies sent with the response. Headers Gets or sets the collection of the HTTP headers sent to the client. Declaration public WebHeaderCollection Headers { get; set; } Property Value Type Description WebHeaderCollection A WebHeaderCollection that contains the headers sent to the client. KeepAlive Gets or sets a value indicating whether the server requests a persistent connection. Declaration public bool KeepAlive { get; set; } Property Value Type Description Boolean true if the server requests a persistent connection; otherwise, false . The default value is true . OutputStream Gets a stream instance to which the entity body data can be written. Declaration public Stream OutputStream { get; } Property Value Type Description Stream A instance to which the entity body data can be written. ProtocolVersion Gets the HTTP version used for the response. Declaration public Version ProtocolVersion { get; } Property Value Type Description Version A Version that represents the HTTP version used for the response. Always returns same as 1.1. RedirectLocation Gets or sets the URL to which the client is redirected to locate a requested resource. Declaration public string RedirectLocation { get; set; } Property Value Type Description String A String that represents the absolute URL for the redirect location. It is used for the value of the Location header. null if no redirect location is specified. The default value is null . SendChunked Gets or sets a value indicating whether the response uses the chunked transfer encoding. Declaration public bool SendChunked { get; set; } Property Value Type Description Boolean true if the response uses the chunked transfer encoding; otherwise, false . The default value is false . StatusCode Gets or sets the HTTP status code returned to the client. Declaration public int StatusCode { get; set; } Property Value Type Description Int32 An Int32 that represents the HTTP status code for the response to the request. The default value is 200. It indicates that the request has succeeded. Exceptions Type Condition ProtocolViolationException The value specified for a set operation is invalid. Valid values are between 100 and 999 inclusive. StatusDescription Gets or sets the description of the HTTP status code returned to the client. Declaration public string StatusDescription { get; set; } Property Value Type Description String A String that represents the description of the HTTP status code for the response to the request. The default value is the RFC 2616 description for the StatusCode property value. An empty string if an RFC 2616 description does not exist. Methods Abort() Closes the connection to the client without sending a response. Declaration public void Abort() AppendCookie(Cookie) Appends the specified cookie to the cookies sent with the response. Declaration public void AppendCookie(Cookie cookie) Parameters Type Name Description Cookie cookie A Cookie to append. AppendHeader(String, String) Appends an HTTP header with the specified name and value to the headers for the response. Declaration public void AppendHeader(string name, string value) Parameters Type Name Description String name A String that specifies the name of the header to append. String value A String that specifies the value of the header to append. Close() Sends the response to the client and releases the resources used by this instance. Declaration public void Close() Close(Byte[], Boolean) Sends the response with the specified entity body data to the client and releases the resources used by this instance. Declaration public void Close(byte[] responseEntity, bool willBlock) Parameters Type Name Description Byte [] responseEntity An array of Byte that contains the entity body data. Boolean willBlock A Boolean : true if this method blocks execution while flushing the stream to the client; otherwise, false . CopyFrom(HttpListenerResponse) Copies some properties from the specified response instance to this instance. Declaration public void CopyFrom(HttpListenerResponse templateResponse) Parameters Type Name Description HttpListenerResponse templateResponse A HttpListenerResponse to copy. Redirect(String) Configures the response to redirect the client's request to the specified URL. Declaration public void Redirect(string url) Parameters Type Name Description String url A String that specifies the absolute URL to which the client is redirected to locate a requested resource. Remarks This method sets the RedirectLocation property to url , the StatusCode property to 302, and the StatusDescription property to \"Found\". SetCookie(Cookie) Adds or updates a cookie in the cookies sent with the response. Declaration public void SetCookie(Cookie cookie) Parameters Type Name Description Cookie cookie A Cookie to set. SetHeader(String, String) Adds or updates an HTTP header with the specified name and value in the headers for the response. Declaration public void SetHeader(string name, string value) Parameters Type Name Description String name A String that specifies the name of the header to set. String value A String that specifies the value of the header to set."
  },
  "api/WebSocketSharp.Net.HttpRequestHeader.html": {
    "href": "api/WebSocketSharp.Net.HttpRequestHeader.html",
    "title": "Enum HttpRequestHeader | Unity Algorand SDK",
    "keywords": "Enum HttpRequestHeader Indicates the HTTP header that may be specified in a client request. Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public enum HttpRequestHeader Remarks The headers of this enumeration are defined in RFC 2616 or RFC 6455 . Fields Name Description Accept Indicates the Accept header. AcceptCharset Indicates the Accept-Charset header. AcceptEncoding Indicates the Accept-Encoding header. AcceptLanguage Indicates the Accept-Language header. Allow Indicates the Allow header. Authorization Indicates the Authorization header. CacheControl Indicates the Cache-Control header. Connection Indicates the Connection header. ContentEncoding Indicates the Content-Encoding header. ContentLanguage Indicates the Content-Language header. ContentLength Indicates the Content-Length header. ContentLocation Indicates the Content-Location header. ContentMd5 Indicates the Content-MD5 header. ContentRange Indicates the Content-Range header. ContentType Indicates the Content-Type header. Cookie Indicates the Cookie header. Date Indicates the Date header. Expect Indicates the Expect header. Expires Indicates the Expires header. From Indicates the From header. Host Indicates the Host header. IfMatch Indicates the If-Match header. IfModifiedSince Indicates the If-Modified-Since header. IfNoneMatch Indicates the If-None-Match header. IfRange Indicates the If-Range header. IfUnmodifiedSince Indicates the If-Unmodified-Since header. KeepAlive Indicates the Keep-Alive header. LastModified Indicates the Last-Modified header. MaxForwards Indicates the Max-Forwards header. Pragma Indicates the Pragma header. ProxyAuthorization Indicates the Proxy-Authorization header. Range Indicates the Range header. Referer Indicates the Referer header. SecWebSocketExtensions Indicates the Sec-WebSocket-Extensions header. SecWebSocketKey Indicates the Sec-WebSocket-Key header. SecWebSocketProtocol Indicates the Sec-WebSocket-Protocol header. SecWebSocketVersion Indicates the Sec-WebSocket-Version header. Te Indicates the TE header. Trailer Indicates the Trailer header. TransferEncoding Indicates the Transfer-Encoding header. Translate Indicates the Translate header. Upgrade Indicates the Upgrade header. UserAgent Indicates the User-Agent header. Via Indicates the Via header. Warning Indicates the Warning header."
  },
  "api/WebSocketSharp.Net.HttpResponseHeader.html": {
    "href": "api/WebSocketSharp.Net.HttpResponseHeader.html",
    "title": "Enum HttpResponseHeader | Unity Algorand SDK",
    "keywords": "Enum HttpResponseHeader Indicates the HTTP header that can be specified in a server response. Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public enum HttpResponseHeader Remarks The headers of this enumeration are defined in RFC 2616 or RFC 6455 . Fields Name Description AcceptRanges Indicates the Accept-Ranges header. Age Indicates the Age header. Allow Indicates the Allow header. CacheControl Indicates the Cache-Control header. Connection Indicates the Connection header. ContentEncoding Indicates the Content-Encoding header. ContentLanguage Indicates the Content-Language header. ContentLength Indicates the Content-Length header. ContentLocation Indicates the Content-Location header. ContentMd5 Indicates the Content-MD5 header. ContentRange Indicates the Content-Range header. ContentType Indicates the Content-Type header. Date Indicates the Date header. ETag Indicates the ETag header. Expires Indicates the Expires header. KeepAlive Indicates the Keep-Alive header. LastModified Indicates the Last-Modified header. Location Indicates the Location header. Pragma Indicates the Pragma header. ProxyAuthenticate Indicates the Proxy-Authenticate header. RetryAfter Indicates the Retry-After header. SecWebSocketAccept Indicates the Sec-WebSocket-Accept header. SecWebSocketExtensions Indicates the Sec-WebSocket-Extensions header. SecWebSocketProtocol Indicates the Sec-WebSocket-Protocol header. SecWebSocketVersion Indicates the Sec-WebSocket-Version header. Server Indicates the Server header. SetCookie Indicates the Set-Cookie header. Trailer Indicates the Trailer header. TransferEncoding Indicates the Transfer-Encoding header. Upgrade Indicates the Upgrade header. Vary Indicates the Vary header. Via Indicates the Via header. Warning Indicates the Warning header. WwwAuthenticate Indicates the WWW-Authenticate header."
  },
  "api/WebSocketSharp.Net.HttpStatusCode.html": {
    "href": "api/WebSocketSharp.Net.HttpStatusCode.html",
    "title": "Enum HttpStatusCode | Unity Algorand SDK",
    "keywords": "Enum HttpStatusCode Indicates the HTTP status code that can be specified in a server response. Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public enum HttpStatusCode Remarks The values of this enumeration are defined in RFC 2616 . Fields Name Description Accepted Equivalent to status code 202. Indicates that the client's request has been accepted for processing, but the processing has not been completed. Ambiguous Equivalent to status code 300. Indicates that the requested resource corresponds to any of multiple representations. Ambiguous is a synonym for MultipleChoices. BadGateway Equivalent to status code 502. Indicates that a gateway or proxy server received an invalid response from the upstream server. BadRequest Equivalent to status code 400. Indicates that the client's request could not be understood by the server due to malformed syntax. Conflict Equivalent to status code 409. Indicates that the client's request could not be completed due to a conflict on the server. Continue Equivalent to status code 100. Indicates that the client should continue with its request. Created Equivalent to status code 201. Indicates that the client's request has been fulfilled and resulted in a new resource being created. ExpectationFailed Equivalent to status code 417. Indicates that the expectation given in an Expect request header could not be met by the server. Forbidden Equivalent to status code 403. Indicates that the server understood the client's request but is refusing to fulfill it. Found Equivalent to status code 302. Indicates that the requested resource is located temporarily under a different URI. Found is a synonym for Redirect. GatewayTimeout Equivalent to status code 504. Indicates that a gateway or proxy server did not receive a timely response from the upstream server or some other auxiliary server. Gone Equivalent to status code 410. Indicates that the requested resource is no longer available at the server and no forwarding address is known. HttpVersionNotSupported Equivalent to status code 505. Indicates that the server does not support the HTTP version used in the client's request. InternalServerError Equivalent to status code 500. Indicates that the server encountered an unexpected condition which prevented it from fulfilling the client's request. LengthRequired Equivalent to status code 411. Indicates that the server refuses to accept the client's request without a defined Content-Length. MethodNotAllowed Equivalent to status code 405. Indicates that the method specified in the request line is not allowed for the resource identified by the request URI. Moved Equivalent to status code 301. Indicates that the requested resource has been assigned a new permanent URI and any future references to this resource should use one of the returned URIs. Moved is a synonym for MovedPermanently. MovedPermanently Equivalent to status code 301. Indicates that the requested resource has been assigned a new permanent URI and any future references to this resource should use one of the returned URIs. MovedPermanently is a synonym for Moved. MultipleChoices Equivalent to status code 300. Indicates that the requested resource corresponds to any of multiple representations. MultipleChoices is a synonym for Ambiguous. NoContent Equivalent to status code 204. Indicates that the server has fulfilled the client's request but does not need to return an entity-body. NonAuthoritativeInformation Equivalent to status code 203. Indicates that the returned metainformation is from a local or a third-party copy instead of the origin server. NotAcceptable Equivalent to status code 406. Indicates that the server does not have the appropriate resource to respond to the Accept headers in the client's request. NotFound Equivalent to status code 404. Indicates that the server has not found anything matching the request URI. NotImplemented Equivalent to status code 501. Indicates that the server does not support the functionality required to fulfill the client's request. NotModified Equivalent to status code 304. Indicates that the client has performed a conditional GET request and access is allowed, but the document has not been modified. OK Equivalent to status code 200. Indicates that the client's request has succeeded. PartialContent Equivalent to status code 206. Indicates that the server has fulfilled the partial GET request for the resource. PaymentRequired Equivalent to status code 402. This status code is reserved for future use. PreconditionFailed Equivalent to status code 412. Indicates that the precondition given in one or more of the request headers evaluated to false when it was tested on the server. ProxyAuthenticationRequired Equivalent to status code 407. Indicates that the client must first authenticate itself with the proxy. Redirect Equivalent to status code 302. Indicates that the requested resource is located temporarily under a different URI. Redirect is a synonym for Found. RedirectKeepVerb Equivalent to status code 307. Indicates that the requested resource is located temporarily under a different URI. RedirectKeepVerb is a synonym for TemporaryRedirect. RedirectMethod Equivalent to status code 303. Indicates that the response to the request can be found under a different URI and should be retrieved using a GET method on that resource. RedirectMethod is a synonym for SeeOther. RequestedRangeNotSatisfiable Equivalent to status code 416. Indicates that none of the range specifier values in a Range request header overlap the current extent of the selected resource. RequestEntityTooLarge Equivalent to status code 413. Indicates that the entity of the client's request is larger than the server is willing or able to process. RequestTimeout Equivalent to status code 408. Indicates that the client did not produce a request within the time that the server was prepared to wait. RequestUriTooLong Equivalent to status code 414. Indicates that the request URI is longer than the server is willing to interpret. ResetContent Equivalent to status code 205. Indicates that the server has fulfilled the client's request, and the user agent should reset the document view which caused the request to be sent. SeeOther Equivalent to status code 303. Indicates that the response to the request can be found under a different URI and should be retrieved using a GET method on that resource. SeeOther is a synonym for RedirectMethod. ServiceUnavailable Equivalent to status code 503. Indicates that the server is currently unable to handle the client's request due to a temporary overloading or maintenance of the server. SwitchingProtocols Equivalent to status code 101. Indicates that the server is switching the HTTP version or protocol on the connection. TemporaryRedirect Equivalent to status code 307. Indicates that the requested resource is located temporarily under a different URI. TemporaryRedirect is a synonym for RedirectKeepVerb. Unauthorized Equivalent to status code 401. Indicates that the client's request requires user authentication. UnsupportedMediaType Equivalent to status code 415. Indicates that the entity of the client's request is in a format not supported by the requested resource for the requested method. Unused Equivalent to status code 306. This status code was used in a previous version of the specification, is no longer used, and is reserved for future use. UseProxy Equivalent to status code 305. Indicates that the requested resource must be accessed through the proxy given by the Location field."
  },
  "api/WebSocketSharp.Net.HttpVersion.html": {
    "href": "api/WebSocketSharp.Net.HttpVersion.html",
    "title": "Class HttpVersion | Unity Algorand SDK",
    "keywords": "Class HttpVersion Provides the HTTP version numbers. Inheritance Object HttpVersion Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public class HttpVersion Constructors HttpVersion() Initializes a new instance of the HttpVersion class. Declaration public HttpVersion() Fields Version10 Provides a Version instance for the HTTP/1.0. Declaration public static readonly Version Version10 Field Value Type Description Version Version11 Provides a Version instance for the HTTP/1.1. Declaration public static readonly Version Version11 Field Value Type Description Version"
  },
  "api/WebSocketSharp.Net.NetworkCredential.html": {
    "href": "api/WebSocketSharp.Net.NetworkCredential.html",
    "title": "Class NetworkCredential | Unity Algorand SDK",
    "keywords": "Class NetworkCredential Provides the credentials for the password-based authentication. Inheritance Object NetworkCredential Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public class NetworkCredential Constructors NetworkCredential(String, String) Initializes a new instance of the NetworkCredential class with the specified username and password . Declaration public NetworkCredential(string username, string password) Parameters Type Name Description String username A String that represents the username associated with the credentials. String password A String that represents the password for the username associated with the credentials. NetworkCredential(String, String, String, String[]) Initializes a new instance of the NetworkCredential class with the specified username , password , domain and roles . Declaration public NetworkCredential(string username, string password, string domain, params string[] roles) Parameters Type Name Description String username A String that represents the username associated with the credentials. String password A String that represents the password for the username associated with the credentials. String domain A String that represents the domain associated with the credentials. String [] roles An array of String that represents the roles associated with the credentials if any. Properties Domain Gets the domain associated with the credentials. Declaration public string Domain { get; } Property Value Type Description String A String that represents the domain name to which the username belongs. Remarks This property returns an empty string if the domain was initialized with null . Password Gets the password for the username associated with the credentials. Declaration public string Password { get; } Property Value Type Description String A String that represents the password. Remarks This property returns an empty string if the password was initialized with null . Roles Gets the roles associated with the credentials. Declaration public string[] Roles { get; } Property Value Type Description String [] An array of String that represents the role names to which the username belongs. Remarks This property returns an empty array if the roles were initialized with null . Username Gets the username associated with the credentials. Declaration public string Username { get; } Property Value Type Description String A String that represents the username."
  },
  "api/WebSocketSharp.Net.ServerSslConfiguration.html": {
    "href": "api/WebSocketSharp.Net.ServerSslConfiguration.html",
    "title": "Class ServerSslConfiguration | Unity Algorand SDK",
    "keywords": "Class ServerSslConfiguration Stores the parameters for the used by servers. Inheritance Object ServerSslConfiguration Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public class ServerSslConfiguration Constructors ServerSslConfiguration() Initializes a new instance of the ServerSslConfiguration class. Declaration public ServerSslConfiguration() ServerSslConfiguration(ServerSslConfiguration) Initializes a new instance of the ServerSslConfiguration class that stores the parameters copied from the specified configuration. Declaration public ServerSslConfiguration(ServerSslConfiguration configuration) Parameters Type Name Description ServerSslConfiguration configuration A ServerSslConfiguration from which to copy. Properties CheckCertificateRevocation Gets or sets a value indicating whether the certificate revocation list is checked during authentication. Declaration public bool CheckCertificateRevocation { get; set; } Property Value Type Description Boolean true if the certificate revocation list is checked during authentication; otherwise, false . The default value is false . ClientCertificateRequired Gets or sets a value indicating whether the client is asked for a certificate for authentication. Declaration public bool ClientCertificateRequired { get; set; } Property Value Type Description Boolean true if the client is asked for a certificate for authentication; otherwise, false . The default value is false . ClientCertificateValidationCallback Gets or sets the callback used to validate the certificate supplied by the client. Declaration public RemoteCertificateValidationCallback ClientCertificateValidationCallback { get; set; } Property Value Type Description RemoteCertificateValidationCallback A delegate that invokes the method called for validating the certificate. The default value is a delegate that invokes a method that only returns true . Remarks The certificate is valid if the callback returns true . EnabledSslProtocols Gets or sets the protocols used for authentication. Declaration public SslProtocols EnabledSslProtocols { get; set; } Property Value Type Description SslProtocols Any of the enum values. It represents the protocols used for authentication. The default value is . ServerCertificate Gets or sets the certificate used to authenticate the server. Declaration public X509Certificate2 ServerCertificate { get; set; } Property Value Type Description X509Certificate2 A or null . The certificate represents an X.509 certificate. The default value is null ."
  },
  "api/WebSocketSharp.Net.WebHeaderCollection.html": {
    "href": "api/WebSocketSharp.Net.WebHeaderCollection.html",
    "title": "Class WebHeaderCollection | Unity Algorand SDK",
    "keywords": "Class WebHeaderCollection Provides a collection of the HTTP headers associated with a request or response. Inheritance Object WebHeaderCollection Implements ISerializable Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public class WebHeaderCollection : NameValueCollection Constructors WebHeaderCollection() Initializes a new instance of the WebHeaderCollection class. Declaration public WebHeaderCollection() WebHeaderCollection(SerializationInfo, StreamingContext) Initializes a new instance of the WebHeaderCollection class from the specified instances of the and classes. Declaration protected WebHeaderCollection(SerializationInfo serializationInfo, StreamingContext streamingContext) Parameters Type Name Description SerializationInfo serializationInfo A that contains the serialized object data. StreamingContext streamingContext A that specifies the source for the deserialization. Properties AllKeys Gets all header names in the collection. Declaration public override string[] AllKeys { get; } Property Value Type Description String [] An array of String that contains all header names in the collection. Count Gets the number of headers in the collection. Declaration public override int Count { get; } Property Value Type Description Int32 An Int32 that represents the number of headers in the collection. Item[HttpRequestHeader] Gets or sets the specified request header. Declaration public string this[HttpRequestHeader header] { get; set; } Parameters Type Name Description HttpRequestHeader header One of the HttpRequestHeader enum values. It specifies the request header to get or set. Property Value Type Description String A String that represents the value of the request header. Item[HttpResponseHeader] Gets or sets the specified response header. Declaration public string this[HttpResponseHeader header] { get; set; } Parameters Type Name Description HttpResponseHeader header One of the HttpResponseHeader enum values. It specifies the response header to get or set. Property Value Type Description String A String that represents the value of the response header. Keys Gets a collection of header names in the collection. Declaration public override NameObjectCollectionBase.KeysCollection Keys { get; } Property Value Type Description NameObjectCollectionBase.KeysCollection A that contains all header names in the collection. Methods Add(String) Adds the specified header to the collection. Declaration public void Add(string header) Parameters Type Name Description String header A String that specifies the header to add, with the name and value separated by a colon character (':'). Add(String, String) Adds a header with the specified name and value to the collection. Declaration public override void Add(string name, string value) Parameters Type Name Description String name A String that specifies the name of the header to add. String value A String that specifies the value of the header to add. Add(HttpRequestHeader, String) Adds the specified request header with the specified value to the collection. Declaration public void Add(HttpRequestHeader header, string value) Parameters Type Name Description HttpRequestHeader header One of the HttpRequestHeader enum values. It specifies the request header to add. String value A String that specifies the value of the header to add. Add(HttpResponseHeader, String) Adds the specified response header with the specified value to the collection. Declaration public void Add(HttpResponseHeader header, string value) Parameters Type Name Description HttpResponseHeader header One of the HttpResponseHeader enum values. It specifies the response header to add. String value A String that specifies the value of the header to add. AddWithoutValidate(String, String) Adds a header to the collection without checking if the header is on the restricted header list. Declaration protected void AddWithoutValidate(string headerName, string headerValue) Parameters Type Name Description String headerName A String that specifies the name of the header to add. String headerValue A String that specifies the value of the header to add. Clear() Removes all headers from the collection. Declaration public override void Clear() Get(Int32) Get the value of the header at the specified index in the collection. Declaration public override string Get(int index) Parameters Type Name Description Int32 index An Int32 that specifies the zero-based index of the header to find. Returns Type Description String A String that receives the value of the header. Get(String) Get the value of the header with the specified name in the collection. Declaration public override string Get(string name) Parameters Type Name Description String name A String that specifies the name of the header to find. Returns Type Description String A String that receives the value of the header. null if not found. GetEnumerator() Gets the enumerator used to iterate through the collection. Declaration public override IEnumerator GetEnumerator() Returns Type Description IEnumerator An instance used to iterate through the collection. GetKey(Int32) Get the name of the header at the specified index in the collection. Declaration public override string GetKey(int index) Parameters Type Name Description Int32 index An Int32 that specifies the zero-based index of the header to find. Returns Type Description String A String that receives the name of the header. GetObjectData(SerializationInfo, StreamingContext) Populates a instance with the data needed to serialize this instance. Declaration public override void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext) Parameters Type Name Description SerializationInfo serializationInfo A to populate with the data. StreamingContext streamingContext A that specifies the destination for the serialization. GetValues(Int32) Get the values of the header at the specified index in the collection. Declaration public override string[] GetValues(int index) Parameters Type Name Description Int32 index An Int32 that specifies the zero-based index of the header to find. Returns Type Description String [] An array of String that receives the values of the header. null if not present. GetValues(String) Get the values of the header with the specified name in the collection. Declaration public override string[] GetValues(string name) Parameters Type Name Description String name A String that specifies the name of the header to find. Returns Type Description String [] An array of String that receives the values of the header. null if not present. IsRestricted(String) Determines whether the specified HTTP header can be set for the request. Declaration public static bool IsRestricted(string headerName) Parameters Type Name Description String headerName A String that specifies the name of the header to test. Returns Type Description Boolean true if the header cannot be set; otherwise, false . IsRestricted(String, Boolean) Determines whether the specified HTTP header can be set for the request or the response. Declaration public static bool IsRestricted(string headerName, bool response) Parameters Type Name Description String headerName A String that specifies the name of the header to test. Boolean response A Boolean : true if the test is for the response; otherwise, false . Returns Type Description Boolean true if the header cannot be set; otherwise, false . OnDeserialization(Object) Implements the interface and raises the deserialization event when the deserialization is complete. Declaration public override void OnDeserialization(object sender) Parameters Type Name Description Object sender An Object instance that represents the source of the deserialization event. Remove(String) Removes the specified header from the collection. Declaration public override void Remove(string name) Parameters Type Name Description String name A String that specifies the name of the header to remove. Remove(HttpRequestHeader) Removes the specified request header from the collection. Declaration public void Remove(HttpRequestHeader header) Parameters Type Name Description HttpRequestHeader header One of the HttpRequestHeader enum values. It specifies the request header to remove. Remove(HttpResponseHeader) Removes the specified response header from the collection. Declaration public void Remove(HttpResponseHeader header) Parameters Type Name Description HttpResponseHeader header One of the HttpResponseHeader enum values. It specifies the response header to remove. Set(String, String) Sets the specified header to the specified value. Declaration public override void Set(string name, string value) Parameters Type Name Description String name A String that specifies the name of the header to set. String value A String that specifies the value of the header to set. Set(HttpRequestHeader, String) Sets the specified request header to the specified value. Declaration public void Set(HttpRequestHeader header, string value) Parameters Type Name Description HttpRequestHeader header One of the HttpRequestHeader enum values. It specifies the request header to set. String value A String that specifies the value of the request header to set. Set(HttpResponseHeader, String) Sets the specified response header to the specified value. Declaration public void Set(HttpResponseHeader header, string value) Parameters Type Name Description HttpResponseHeader header One of the HttpResponseHeader enum values. It specifies the response header to set. String value A String that specifies the value of the response header to set. ToByteArray() Converts the current instance to an array of byte. Declaration public byte[] ToByteArray() Returns Type Description Byte [] An array of Byte converted from a string that represents the current instance. ToString() Returns a string that represents the current instance. Declaration public override string ToString() Returns Type Description String A String that represents all headers in the collection. Implements ISerializable"
  },
  "api/WebSocketSharp.Net.WebSockets.html": {
    "href": "api/WebSocketSharp.Net.WebSockets.html",
    "title": "Namespace WebSocketSharp.Net.WebSockets | Unity Algorand SDK",
    "keywords": "Namespace WebSocketSharp.Net.WebSockets Classes HttpListenerWebSocketContext Provides the access to the information in a WebSocket handshake request to a HttpListener instance. WebSocketContext Exposes the access to the information in a WebSocket handshake request."
  },
  "api/WebSocketSharp.Net.WebSockets.HttpListenerWebSocketContext.html": {
    "href": "api/WebSocketSharp.Net.WebSockets.HttpListenerWebSocketContext.html",
    "title": "Class HttpListenerWebSocketContext | Unity Algorand SDK",
    "keywords": "Class HttpListenerWebSocketContext Provides the access to the information in a WebSocket handshake request to a HttpListener instance. Inheritance Object WebSocketContext HttpListenerWebSocketContext Namespace : WebSocketSharp.Net.WebSockets Assembly : cs.temp.dll.dll Syntax public class HttpListenerWebSocketContext : WebSocketContext Properties CookieCollection Gets the HTTP cookies included in the handshake request. Declaration public override CookieCollection CookieCollection { get; } Property Value Type Description CookieCollection A CookieCollection that contains the cookies. An empty collection if not included. Overrides WebSocketContext.CookieCollection Headers Gets the HTTP headers included in the handshake request. Declaration public override NameValueCollection Headers { get; } Property Value Type Description NameValueCollection A that contains the headers. Overrides WebSocketContext.Headers Host Gets the value of the Host header included in the handshake request. Declaration public override string Host { get; } Property Value Type Description String A String that represents the server host name requested by the client. It includes the port number if provided. Overrides WebSocketContext.Host IsAuthenticated Gets a value indicating whether the client is authenticated. Declaration public override bool IsAuthenticated { get; } Property Value Type Description Boolean true if the client is authenticated; otherwise, false . Overrides WebSocketContext.IsAuthenticated IsLocal Gets a value indicating whether the handshake request is sent from the local computer. Declaration public override bool IsLocal { get; } Property Value Type Description Boolean true if the handshake request is sent from the same computer as the server; otherwise, false . Overrides WebSocketContext.IsLocal IsSecureConnection Gets a value indicating whether a secure connection is used to send the handshake request. Declaration public override bool IsSecureConnection { get; } Property Value Type Description Boolean true if the connection is secure; otherwise, false . Overrides WebSocketContext.IsSecureConnection IsWebSocketRequest Gets a value indicating whether the request is a WebSocket handshake request. Declaration public override bool IsWebSocketRequest { get; } Property Value Type Description Boolean true if the request is a WebSocket handshake request; otherwise, false . Overrides WebSocketContext.IsWebSocketRequest Origin Gets the value of the Origin header included in the handshake request. Declaration public override string Origin { get; } Property Value Type Description String A String that represents the value of the Origin header. null if the header is not present. Overrides WebSocketContext.Origin QueryString Gets the query string included in the handshake request. Declaration public override NameValueCollection QueryString { get; } Property Value Type Description NameValueCollection A that contains the query parameters. An empty collection if not included. Overrides WebSocketContext.QueryString RequestUri Gets the URI requested by the client. Declaration public override Uri RequestUri { get; } Property Value Type Description Uri A that represents the URI parsed from the request. null if the URI cannot be parsed. Overrides WebSocketContext.RequestUri SecWebSocketKey Gets the value of the Sec-WebSocket-Key header included in the handshake request. Declaration public override string SecWebSocketKey { get; } Property Value Type Description String A String that represents the value of the Sec-WebSocket-Key header. The value is used to prove that the server received a valid WebSocket handshake request. null if the header is not present. Overrides WebSocketContext.SecWebSocketKey SecWebSocketProtocols Gets the names of the subprotocols from the Sec-WebSocket-Protocol header included in the handshake request. Declaration public override IEnumerable<string> SecWebSocketProtocols { get; } Property Value Type Description IEnumerable < String > An System.Collections.Generic.IEnumerable{string} instance. It provides an enumerator which supports the iteration over the collection of the names of the subprotocols. Overrides WebSocketContext.SecWebSocketProtocols SecWebSocketVersion Gets the value of the Sec-WebSocket-Version header included in the handshake request. Declaration public override string SecWebSocketVersion { get; } Property Value Type Description String A String that represents the WebSocket protocol version specified by the client. null if the header is not present. Overrides WebSocketContext.SecWebSocketVersion ServerEndPoint Gets the endpoint to which the handshake request is sent. Declaration public override IPEndPoint ServerEndPoint { get; } Property Value Type Description IPEndPoint A IPEndPoint that represents the server IP address and port number. Overrides WebSocketContext.ServerEndPoint User Gets the client information. Declaration public override IPrincipal User { get; } Property Value Type Description IPrincipal A instance that represents identity, authentication, and security roles for the client. null if the client is not authenticated. Overrides WebSocketContext.User UserEndPoint Gets the endpoint from which the handshake request is sent. Declaration public override IPEndPoint UserEndPoint { get; } Property Value Type Description IPEndPoint A IPEndPoint that represents the client IP address and port number. Overrides WebSocketContext.UserEndPoint WebSocket Gets the WebSocket instance used for two-way communication between the client and server. Declaration public override WebSocket WebSocket { get; } Property Value Type Description WebSocket A WebSocket . Overrides WebSocketContext.WebSocket Methods ToString() Returns a string that represents the current instance. Declaration public override string ToString() Returns Type Description String A String that contains the request line and headers included in the handshake request. Overrides Object.ToString()"
  },
  "api/WebSocketSharp.Net.WebSockets.WebSocketContext.html": {
    "href": "api/WebSocketSharp.Net.WebSockets.WebSocketContext.html",
    "title": "Class WebSocketContext | Unity Algorand SDK",
    "keywords": "Class WebSocketContext Exposes the access to the information in a WebSocket handshake request. Inheritance Object WebSocketContext HttpListenerWebSocketContext Namespace : WebSocketSharp.Net.WebSockets Assembly : cs.temp.dll.dll Syntax public abstract class WebSocketContext Remarks This class is an abstract class. Constructors WebSocketContext() Initializes a new instance of the WebSocketContext class. Declaration protected WebSocketContext() Properties CookieCollection Gets the HTTP cookies included in the handshake request. Declaration public abstract CookieCollection CookieCollection { get; } Property Value Type Description CookieCollection A CookieCollection that contains the cookies. Headers Gets the HTTP headers included in the handshake request. Declaration public abstract NameValueCollection Headers { get; } Property Value Type Description NameValueCollection A that contains the headers. Host Gets the value of the Host header included in the handshake request. Declaration public abstract string Host { get; } Property Value Type Description String A String that represents the server host name requested by the client. IsAuthenticated Gets a value indicating whether the client is authenticated. Declaration public abstract bool IsAuthenticated { get; } Property Value Type Description Boolean true if the client is authenticated; otherwise, false . IsLocal Gets a value indicating whether the handshake request is sent from the local computer. Declaration public abstract bool IsLocal { get; } Property Value Type Description Boolean true if the handshake request is sent from the same computer as the server; otherwise, false . IsSecureConnection Gets a value indicating whether a secure connection is used to send the handshake request. Declaration public abstract bool IsSecureConnection { get; } Property Value Type Description Boolean true if the connection is secure; otherwise, false . IsWebSocketRequest Gets a value indicating whether the request is a WebSocket handshake request. Declaration public abstract bool IsWebSocketRequest { get; } Property Value Type Description Boolean true if the request is a WebSocket handshake request; otherwise, false . Origin Gets the value of the Origin header included in the handshake request. Declaration public abstract string Origin { get; } Property Value Type Description String A String that represents the value of the Origin header. QueryString Gets the query string included in the handshake request. Declaration public abstract NameValueCollection QueryString { get; } Property Value Type Description NameValueCollection A that contains the query parameters. RequestUri Gets the URI requested by the client. Declaration public abstract Uri RequestUri { get; } Property Value Type Description Uri A that represents the URI parsed from the request. SecWebSocketKey Gets the value of the Sec-WebSocket-Key header included in the handshake request. Declaration public abstract string SecWebSocketKey { get; } Property Value Type Description String A String that represents the value of the Sec-WebSocket-Key header. The value is used to prove that the server received a valid WebSocket handshake request. SecWebSocketProtocols Gets the names of the subprotocols from the Sec-WebSocket-Protocol header included in the handshake request. Declaration public abstract IEnumerable<string> SecWebSocketProtocols { get; } Property Value Type Description IEnumerable < String > An System.Collections.Generic.IEnumerable{string} instance. It provides an enumerator which supports the iteration over the collection of the names of the subprotocols. SecWebSocketVersion Gets the value of the Sec-WebSocket-Version header included in the handshake request. Declaration public abstract string SecWebSocketVersion { get; } Property Value Type Description String A String that represents the WebSocket protocol version specified by the client. ServerEndPoint Gets the endpoint to which the handshake request is sent. Declaration public abstract IPEndPoint ServerEndPoint { get; } Property Value Type Description IPEndPoint A IPEndPoint that represents the server IP address and port number. User Gets the client information. Declaration public abstract IPrincipal User { get; } Property Value Type Description IPrincipal A instance that represents identity, authentication, and security roles for the client. UserEndPoint Gets the endpoint from which the handshake request is sent. Declaration public abstract IPEndPoint UserEndPoint { get; } Property Value Type Description IPEndPoint A IPEndPoint that represents the client IP address and port number. WebSocket Gets the WebSocket instance used for two-way communication between the client and server. Declaration public abstract WebSocket WebSocket { get; } Property Value Type Description WebSocket A WebSocket ."
  },
  "api/WebSocketSharp.Server.html": {
    "href": "api/WebSocketSharp.Server.html",
    "title": "Namespace WebSocketSharp.Server | Unity Algorand SDK",
    "keywords": "Namespace WebSocketSharp.Server Classes HttpRequestEventArgs Represents the event data for the HTTP request events of the HttpServer class. HttpServer Provides a simple HTTP server. WebSocketBehavior Exposes a set of methods and properties used to define the behavior of a WebSocket service provided by the WebSocketServer or HttpServer . WebSocketServer Provides a WebSocket protocol server. WebSocketServiceHost Exposes the methods and properties used to access the information in a WebSocket service provided by the WebSocketServer or HttpServer . WebSocketServiceManager Provides the management function for the WebSocket services. WebSocketSessionManager Provides the management function for the sessions in a WebSocket service. Interfaces IWebSocketSession Exposes the access to the information in a WebSocket session."
  },
  "api/WebSocketSharp.Server.HttpRequestEventArgs.html": {
    "href": "api/WebSocketSharp.Server.HttpRequestEventArgs.html",
    "title": "Class HttpRequestEventArgs | Unity Algorand SDK",
    "keywords": "Class HttpRequestEventArgs Represents the event data for the HTTP request events of the HttpServer class. Inheritance Object HttpRequestEventArgs Namespace : WebSocketSharp.Server Assembly : cs.temp.dll.dll Syntax public class HttpRequestEventArgs : EventArgs Remarks An HTTP request event occurs when the HttpServer instance receives an HTTP request. You should access the Request property if you would like to get the request data sent from a client. And you should access the Response property if you would like to get the response data to return to the client. Properties Request Gets the request data sent from a client. Declaration public HttpListenerRequest Request { get; } Property Value Type Description HttpListenerRequest A that provides the methods and properties for the request data. Response Gets the response data to return to the client. Declaration public HttpListenerResponse Response { get; } Property Value Type Description HttpListenerResponse A that provides the methods and properties for the response data. User Gets the information for the client. Declaration public IPrincipal User { get; } Property Value Type Description IPrincipal A instance or null if not authenticated. That instance describes the identity, authentication scheme, and security roles for the client. Methods ReadFile(String) Reads the specified file from the document folder of the HttpServer class. Declaration public byte[] ReadFile(string path) Parameters Type Name Description String path A String that specifies a virtual path to find the file from the document folder. Returns Type Description Byte [] An array of Byte or null if it fails. That array receives the contents of the file. TryReadFile(String, out Byte[]) Tries to read the specified file from the document folder of the HttpServer class. Declaration public bool TryReadFile(string path, out byte[] contents) Parameters Type Name Description String path A String that specifies a virtual path to find the file from the document folder. Byte [] contents When this method returns, an array of Byte or null if it fails. That array receives the contents of the file. Returns Type Description Boolean true if it succeeds to read; otherwise, false ."
  },
  "api/WebSocketSharp.Server.HttpServer.html": {
    "href": "api/WebSocketSharp.Server.HttpServer.html",
    "title": "Class HttpServer | Unity Algorand SDK",
    "keywords": "Class HttpServer Provides a simple HTTP server. Inheritance Object HttpServer Namespace : WebSocketSharp.Server Assembly : cs.temp.dll.dll Syntax public class HttpServer Remarks The server supports HTTP/1.1 version request and response. And the server allows to accept WebSocket handshake requests. This class can provide multiple WebSocket services. Constructors HttpServer() Initializes a new instance of the HttpServer class. Declaration public HttpServer() Remarks The new instance listens for incoming requests on Any and port 80. HttpServer(Int32) Initializes a new instance of the HttpServer class with the specified port. Declaration public HttpServer(int port) Parameters Type Name Description Int32 port An Int32 that specifies the number of the port on which to listen. Remarks The new instance listens for incoming requests on Any and port . It provides secure connections if port is 443. HttpServer(Int32, Boolean) Initializes a new instance of the HttpServer class with the specified port and boolean if secure or not. Declaration public HttpServer(int port, bool secure) Parameters Type Name Description Int32 port An Int32 that specifies the number of the port on which to listen. Boolean secure A Boolean : true if the new instance provides secure connections; otherwise, false . Remarks The new instance listens for incoming requests on Any and port . HttpServer(IPAddress, Int32) Initializes a new instance of the HttpServer class with the specified IP address and port. Declaration public HttpServer(IPAddress address, int port) Parameters Type Name Description IPAddress address A IPAddress that specifies the local IP address on which to listen. Int32 port An Int32 that specifies the number of the port on which to listen. Remarks The new instance listens for incoming requests on address and port . It provides secure connections if port is 443. HttpServer(IPAddress, Int32, Boolean) Initializes a new instance of the HttpServer class with the specified IP address, port, and boolean if secure or not. Declaration public HttpServer(IPAddress address, int port, bool secure) Parameters Type Name Description IPAddress address A IPAddress that specifies the local IP address on which to listen. Int32 port An Int32 that specifies the number of the port on which to listen. Boolean secure A Boolean : true if the new instance provides secure connections; otherwise, false . Remarks The new instance listens for incoming requests on address and port . HttpServer(String) Initializes a new instance of the HttpServer class with the specified URL. Declaration public HttpServer(string url) Parameters Type Name Description String url A String that specifies the HTTP URL of the server. Remarks The new instance listens for incoming requests on the IP address and port of url . Either port 80 or 443 is used if url includes no port. Port 443 is used if the scheme of url is https; otherwise, port 80 is used. The new instance provides secure connections if the scheme of url is https. Properties Address Gets the IP address of the server. Declaration public IPAddress Address { get; } Property Value Type Description IPAddress A IPAddress that represents the local IP address on which to listen for incoming requests. AuthenticationSchemes Gets or sets the scheme used to authenticate the clients. Declaration public AuthenticationSchemes AuthenticationSchemes { get; set; } Property Value Type Description AuthenticationSchemes One of the AuthenticationSchemes enum values. It represents the scheme used to authenticate the clients. The default value is Anonymous . Remarks The set operation does nothing if the server has already started or it is shutting down. DocumentRootPath Gets or sets the path to the document folder of the server. Declaration public string DocumentRootPath { get; set; } Property Value Type Description String A String that represents a path to the folder from which to find the requested file. The default value is \"./Public\". Remarks '/' or '&apos; is trimmed from the end of the value if any. The set operation does nothing if the server has already started or it is shutting down. IsListening Gets a value indicating whether the server has started. Declaration public bool IsListening { get; } Property Value Type Description Boolean true if the server has started; otherwise, false . IsSecure Gets a value indicating whether secure connections are provided. Declaration public bool IsSecure { get; } Property Value Type Description Boolean true if this instance provides secure connections; otherwise, false . KeepClean Gets or sets a value indicating whether the server cleans up the inactive sessions periodically. Declaration public bool KeepClean { get; set; } Property Value Type Description Boolean true if the server cleans up the inactive sessions every 60 seconds; otherwise, false . The default value is true . Remarks The set operation does nothing if the server has already started or it is shutting down. Log Gets the logging function for the server. Declaration public Logger Log { get; } Property Value Type Description Logger A Logger that provides the logging function. Remarks The default logging level is Error . Port Gets the port of the server. Declaration public int Port { get; } Property Value Type Description Int32 An Int32 that represents the number of the port on which to listen for incoming requests. Realm Gets or sets the realm used for authentication. Declaration public string Realm { get; set; } Property Value Type Description String A String that represents the name of the realm or null . The default value is null . Remarks \"SECRET AREA\" is used as the realm if the value is null or an empty string. The set operation does nothing if the server has already started or it is shutting down. ReuseAddress Gets or sets a value indicating whether the server is allowed to be bound to an address that is already in use. Declaration public bool ReuseAddress { get; set; } Property Value Type Description Boolean true if the server is allowed to be bound to an address that is already in use; otherwise, false . The default value is false . Remarks You should set this property to true if you would like to resolve to wait for socket in TIME_WAIT state. The set operation does nothing if the server has already started or it is shutting down. SslConfiguration Gets the configuration for secure connection. Declaration public ServerSslConfiguration SslConfiguration { get; } Property Value Type Description ServerSslConfiguration A that represents the configuration used to provide secure connections. Remarks The configuration will be referenced when attempts to start, so it must be configured before the start method is called. UserCredentialsFinder Gets or sets the delegate used to find the credentials for an identity. Declaration public Func<IIdentity, NetworkCredential> UserCredentialsFinder { get; set; } Property Value Type Description Func < IIdentity , NetworkCredential > A Func< , > delegate or null if not needed. The delegate invokes the method called for finding the credentials used to authenticate a client. The default value is null . Remarks No credentials are found if the method invoked by the delegate returns null or the value is null . The set operation does nothing if the server has already started or it is shutting down. WaitTime Gets or sets the time to wait for the response to the WebSocket Ping or Close. Declaration public TimeSpan WaitTime { get; set; } Property Value Type Description TimeSpan A to wait for the response. The default value is the same as 1 second. Remarks The set operation does nothing if the server has already started or it is shutting down. WebSocketServices Gets the management function for the WebSocket services provided by the server. Declaration public WebSocketServiceManager WebSocketServices { get; } Property Value Type Description WebSocketServiceManager A WebSocketServiceManager that manages the WebSocket services provided by the server. Methods AddWebSocketService<TBehaviorWithNew>(String) Adds a WebSocket service with the specified behavior and path. Declaration public void AddWebSocketService<TBehaviorWithNew>(string path) where TBehaviorWithNew : WebSocketBehavior, new() Parameters Type Name Description String path A String that represents an absolute path to the service to add. / is trimmed from the end of the string if present. Type Parameters Name Description TBehaviorWithNew The type of the behavior for the service. It must inherit the WebSocketBehavior class. And also, it must have a public parameterless constructor. AddWebSocketService<TBehaviorWithNew>(String, Action<TBehaviorWithNew>) Adds a WebSocket service with the specified behavior, path, and delegate. Declaration public void AddWebSocketService<TBehaviorWithNew>(string path, Action<TBehaviorWithNew> initializer) where TBehaviorWithNew : WebSocketBehavior, new() Parameters Type Name Description String path A String that represents an absolute path to the service to add. / is trimmed from the end of the string if present. Action <TBehaviorWithNew> initializer An Action<TBehaviorWithNew> delegate or null if not needed. The delegate invokes the method called when initializing a new session instance for the service. Type Parameters Name Description TBehaviorWithNew The type of the behavior for the service. It must inherit the WebSocketBehavior class. And also, it must have a public parameterless constructor. AddWebSocketService<TBehavior>(String, Func<TBehavior>) Adds a WebSocket service with the specified behavior, path, and delegate. Declaration public void AddWebSocketService<TBehavior>(string path, Func<TBehavior> creator) where TBehavior : WebSocketBehavior Parameters Type Name Description String path A String that represents an absolute path to the service to add. / is trimmed from the end of the string if present. Func <TBehavior> creator A Func<TBehavior> delegate. It invokes the method called when creating a new session instance for the service. The method must create a new instance of the specified behavior class and return it. Type Parameters Name Description TBehavior The type of the behavior for the service. It must inherit the WebSocketBehavior class. RemoveWebSocketService(String) Removes a WebSocket service with the specified path. Declaration public bool RemoveWebSocketService(string path) Parameters Type Name Description String path A String that represents an absolute path to the service to remove. / is trimmed from the end of the string if present. Returns Type Description Boolean true if the service is successfully found and removed; otherwise, false . Remarks The service is stopped with close status 1001 (going away) if it has already started. Start() Starts receiving incoming requests. Declaration public void Start() Remarks This method does nothing if the server has already started or it is shutting down. Stop() Stops receiving incoming requests. Declaration public void Stop() Events OnConnect Occurs when the server receives an HTTP CONNECT request. Declaration public event EventHandler<HttpRequestEventArgs> OnConnect Event Type Type Description EventHandler < HttpRequestEventArgs > OnDelete Occurs when the server receives an HTTP DELETE request. Declaration public event EventHandler<HttpRequestEventArgs> OnDelete Event Type Type Description EventHandler < HttpRequestEventArgs > OnGet Occurs when the server receives an HTTP GET request. Declaration public event EventHandler<HttpRequestEventArgs> OnGet Event Type Type Description EventHandler < HttpRequestEventArgs > OnHead Occurs when the server receives an HTTP HEAD request. Declaration public event EventHandler<HttpRequestEventArgs> OnHead Event Type Type Description EventHandler < HttpRequestEventArgs > OnOptions Occurs when the server receives an HTTP OPTIONS request. Declaration public event EventHandler<HttpRequestEventArgs> OnOptions Event Type Type Description EventHandler < HttpRequestEventArgs > OnPost Occurs when the server receives an HTTP POST request. Declaration public event EventHandler<HttpRequestEventArgs> OnPost Event Type Type Description EventHandler < HttpRequestEventArgs > OnPut Occurs when the server receives an HTTP PUT request. Declaration public event EventHandler<HttpRequestEventArgs> OnPut Event Type Type Description EventHandler < HttpRequestEventArgs > OnTrace Occurs when the server receives an HTTP TRACE request. Declaration public event EventHandler<HttpRequestEventArgs> OnTrace Event Type Type Description EventHandler < HttpRequestEventArgs >"
  },
  "api/WebSocketSharp.Server.IWebSocketSession.html": {
    "href": "api/WebSocketSharp.Server.IWebSocketSession.html",
    "title": "Interface IWebSocketSession | Unity Algorand SDK",
    "keywords": "Interface IWebSocketSession Exposes the access to the information in a WebSocket session. Namespace : WebSocketSharp.Server Assembly : cs.temp.dll.dll Syntax public interface IWebSocketSession Properties ConnectionState Gets the current state of the WebSocket connection for the session. Declaration WebSocketState ConnectionState { get; } Property Value Type Description WebSocketState One of the WebSocketState enum values. It indicates the current state of the connection. Context Gets the information in the WebSocket handshake request. Declaration WebSocketContext Context { get; } Property Value Type Description WebSocketContext A instance that provides the access to the information in the handshake request. ID Gets the unique ID of the session. Declaration string ID { get; } Property Value Type Description String A String that represents the unique ID of the session. Protocol Gets the name of the WebSocket subprotocol for the session. Declaration string Protocol { get; } Property Value Type Description String A String that represents the name of the subprotocol if present. StartTime Gets the time that the session has started. Declaration DateTime StartTime { get; } Property Value Type Description DateTime A that represents the time that the session has started."
  },
  "api/WebSocketSharp.Server.WebSocketBehavior.html": {
    "href": "api/WebSocketSharp.Server.WebSocketBehavior.html",
    "title": "Class WebSocketBehavior | Unity Algorand SDK",
    "keywords": "Class WebSocketBehavior Exposes a set of methods and properties used to define the behavior of a WebSocket service provided by the WebSocketServer or HttpServer . Inheritance Object WebSocketBehavior Implements IWebSocketSession Namespace : WebSocketSharp.Server Assembly : cs.temp.dll.dll Syntax public abstract class WebSocketBehavior : IWebSocketSession Remarks This class is an abstract class. Constructors WebSocketBehavior() Initializes a new instance of the WebSocketBehavior class. Declaration protected WebSocketBehavior() Properties ConnectionState Gets the current state of the WebSocket connection for a session. Declaration public WebSocketState ConnectionState { get; } Property Value Type Description WebSocketState One of the WebSocketState enum values. It indicates the current state of the connection. Connecting if the session has not started yet. Context Gets the information in a WebSocket handshake request to the service. Declaration public WebSocketContext Context { get; } Property Value Type Description WebSocketContext A instance that provides the access to the information in the handshake request. null if the session has not started yet. CookiesValidator Gets or sets the delegate used to validate the HTTP cookies included in a WebSocket handshake request to the service. Declaration public Func<CookieCollection, CookieCollection, bool> CookiesValidator { get; set; } Property Value Type Description Func < CookieCollection , CookieCollection , Boolean > A Func<CookieCollection, CookieCollection, bool> delegate or null if not needed. The delegate invokes the method called when the WebSocket instance for a session validates the handshake request. 1st parameter passed to the method contains the cookies to validate if present. 2nd parameter passed to the method receives the cookies to send to the client. The method must return true if the cookies are valid. The default value is null . EmitOnPing Gets or sets a value indicating whether the WebSocket instance for a session emits the message event when receives a ping. Declaration public bool EmitOnPing { get; set; } Property Value Type Description Boolean true if the WebSocket instance emits the message event when receives a ping; otherwise, false . The default value is false . Headers Gets the HTTP headers included in a WebSocket handshake request. Declaration protected NameValueCollection Headers { get; } Property Value Type Description NameValueCollection A that contains the headers. null if the session has not started yet. ID Gets the unique ID of a session. Declaration public string ID { get; } Property Value Type Description String A String that represents the unique ID of the session. null if the session has not started yet. IgnoreExtensions Gets or sets a value indicating whether the service ignores the Sec-WebSocket-Extensions header included in a WebSocket handshake request. Declaration public bool IgnoreExtensions { get; set; } Property Value Type Description Boolean true if the service ignores the extensions requested from a client; otherwise, false . The default value is false . Log Gets the logging function. Declaration protected Logger Log { get; } Property Value Type Description Logger A Logger that provides the logging function. null if the session has not started yet. OriginValidator Gets or sets the delegate used to validate the Origin header included in a WebSocket handshake request to the service. Declaration public Func<string, bool> OriginValidator { get; set; } Property Value Type Description Func < String , Boolean > A Func<string, bool> delegate or null if not needed. The delegate invokes the method called when the WebSocket instance for a session validates the handshake request. The String parameter passed to the method is the value of the Origin header or null if the header is not present. The method must return true if the header value is valid. The default value is null . Protocol Gets or sets the name of the WebSocket subprotocol for the service. Declaration public string Protocol { get; set; } Property Value Type Description String A String that represents the name of the subprotocol. The value specified for a set must be a token defined in RFC 2616 . The default value is an empty string. QueryString Gets the query string included in a WebSocket handshake request. Declaration protected NameValueCollection QueryString { get; } Property Value Type Description NameValueCollection A that contains the query parameters. An empty collection if not included. null if the session has not started yet. Sessions Gets the management function for the sessions in the service. Declaration protected WebSocketSessionManager Sessions { get; } Property Value Type Description WebSocketSessionManager A WebSocketSessionManager that manages the sessions in the service. null if the session has not started yet. StartTime Gets the time that a session has started. Declaration public DateTime StartTime { get; } Property Value Type Description DateTime A that represents the time that the session has started. if the session has not started yet. Methods Close() Closes the WebSocket connection for a session. Declaration protected void Close() Remarks This method does nothing if the current state of the connection is Closing or Closed. Close(UInt16, String) Closes the WebSocket connection for a session with the specified code and reason. Declaration protected void Close(ushort code, string reason) Parameters Type Name Description UInt16 code A UInt16 that represents the status code indicating the reason for the close. The status codes are defined in Section 7.4 of RFC 6455. String reason A String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Remarks This method does nothing if the current state of the connection is Closing or Closed. Close(CloseStatusCode, String) Closes the WebSocket connection for a session with the specified code and reason. Declaration protected void Close(CloseStatusCode code, string reason) Parameters Type Name Description CloseStatusCode code One of the CloseStatusCode enum values. It represents the status code indicating the reason for the close. String reason A String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Remarks This method does nothing if the current state of the connection is Closing or Closed. CloseAsync() Closes the WebSocket connection for a session asynchronously. Declaration protected void CloseAsync() Remarks This method does not wait for the close to be complete. This method does nothing if the current state of the connection is Closing or Closed. CloseAsync(UInt16, String) Closes the WebSocket connection for a session asynchronously with the specified code and reason. Declaration protected void CloseAsync(ushort code, string reason) Parameters Type Name Description UInt16 code A UInt16 that represents the status code indicating the reason for the close. The status codes are defined in Section 7.4 of RFC 6455. String reason A String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Remarks This method does not wait for the close to be complete. This method does nothing if the current state of the connection is Closing or Closed. CloseAsync(CloseStatusCode, String) Closes the WebSocket connection for a session asynchronously with the specified code and reason. Declaration protected void CloseAsync(CloseStatusCode code, string reason) Parameters Type Name Description CloseStatusCode code One of the CloseStatusCode enum values. It represents the status code indicating the reason for the close. String reason A String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Remarks This method does not wait for the close to be complete. This method does nothing if the current state of the connection is Closing or Closed. Error(String, Exception) Calls the OnError(ErrorEventArgs) method with the specified message. Declaration protected void Error(string message, Exception exception) Parameters Type Name Description String message A String that represents the error message. Exception exception An instance that represents the cause of the error if present. OnClose(CloseEventArgs) Called when the WebSocket connection for a session has been closed. Declaration protected virtual void OnClose(CloseEventArgs e) Parameters Type Name Description CloseEventArgs e A CloseEventArgs that represents the event data passed from a OnClose event. OnError(ErrorEventArgs) Called when the WebSocket instance for a session gets an error. Declaration protected virtual void OnError(ErrorEventArgs e) Parameters Type Name Description ErrorEventArgs e A ErrorEventArgs that represents the event data passed from a OnError event. OnMessage(MessageEventArgs) Called when the WebSocket instance for a session receives a message. Declaration protected virtual void OnMessage(MessageEventArgs e) Parameters Type Name Description MessageEventArgs e A MessageEventArgs that represents the event data passed from a OnMessage event. OnOpen() Called when the WebSocket connection for a session has been established. Declaration protected virtual void OnOpen() Send(FileInfo) Sends the specified file to a client using the WebSocket connection. Declaration protected void Send(FileInfo fileInfo) Parameters Type Name Description FileInfo fileInfo A that specifies the file to send. The file is sent as the binary data. Send(Stream, Int32) Sends the data from the specified stream to a client using the WebSocket connection. Declaration protected void Send(Stream stream, int length) Parameters Type Name Description Stream stream A instance from which to read the data to send. The data is sent as the binary data. Int32 length An Int32 that specifies the number of bytes to send. Send(Byte[]) Sends the specified data to a client using the WebSocket connection. Declaration protected void Send(byte[] data) Parameters Type Name Description Byte [] data An array of Byte that represents the binary data to send. Send(String) Sends the specified data to a client using the WebSocket connection. Declaration protected void Send(string data) Parameters Type Name Description String data A String that represents the text data to send. SendAsync(FileInfo, Action<Boolean>) Sends the specified file to a client asynchronously using the WebSocket connection. Declaration protected void SendAsync(FileInfo fileInfo, Action<bool> completed) Parameters Type Name Description FileInfo fileInfo A that specifies the file to send. The file is sent as the binary data. Action < Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. SendAsync(Stream, Int32, Action<Boolean>) Sends the data from the specified stream to a client asynchronously using the WebSocket connection. Declaration protected void SendAsync(Stream stream, int length, Action<bool> completed) Parameters Type Name Description Stream stream A instance from which to read the data to send. The data is sent as the binary data. Int32 length An Int32 that specifies the number of bytes to send. Action < Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. SendAsync(Byte[], Action<Boolean>) Sends the specified data to a client asynchronously using the WebSocket connection. Declaration protected void SendAsync(byte[] data, Action<bool> completed) Parameters Type Name Description Byte [] data An array of Byte that represents the binary data to send. Action < Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. SendAsync(String, Action<Boolean>) Sends the specified data to a client asynchronously using the WebSocket connection. Declaration protected void SendAsync(string data, Action<bool> completed) Parameters Type Name Description String data A String that represents the text data to send. Action < Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. Implements IWebSocketSession"
  },
  "api/WebSocketSharp.Server.WebSocketServer.html": {
    "href": "api/WebSocketSharp.Server.WebSocketServer.html",
    "title": "Class WebSocketServer | Unity Algorand SDK",
    "keywords": "Class WebSocketServer Provides a WebSocket protocol server. Inheritance Object WebSocketServer Namespace : WebSocketSharp.Server Assembly : cs.temp.dll.dll Syntax public class WebSocketServer Remarks This class can provide multiple WebSocket services. Constructors WebSocketServer() Initializes a new instance of the WebSocketServer class. Declaration public WebSocketServer() Remarks The new instance listens for incoming handshake requests on Any and port 80. WebSocketServer(Int32) Initializes a new instance of the WebSocketServer class with the specified port . Declaration public WebSocketServer(int port) Parameters Type Name Description Int32 port An Int32 that represents the number of the port on which to listen. Remarks The new instance listens for incoming handshake requests on Any and port . It provides secure connections if port is 443. WebSocketServer(Int32, Boolean) Initializes a new instance of the WebSocketServer class with the specified port and secure . Declaration public WebSocketServer(int port, bool secure) Parameters Type Name Description Int32 port An Int32 that represents the number of the port on which to listen. Boolean secure A Boolean : true if the new instance provides secure connections; otherwise, false . Remarks The new instance listens for incoming handshake requests on Any and port . WebSocketServer(IPAddress, Int32) Initializes a new instance of the WebSocketServer class with the specified address and port . Declaration public WebSocketServer(IPAddress address, int port) Parameters Type Name Description IPAddress address A IPAddress that represents the local IP address on which to listen. Int32 port An Int32 that represents the number of the port on which to listen. Remarks The new instance listens for incoming handshake requests on address and port . It provides secure connections if port is 443. WebSocketServer(IPAddress, Int32, Boolean) Initializes a new instance of the WebSocketServer class with the specified address , port , and secure . Declaration public WebSocketServer(IPAddress address, int port, bool secure) Parameters Type Name Description IPAddress address A IPAddress that represents the local IP address on which to listen. Int32 port An Int32 that represents the number of the port on which to listen. Boolean secure A Boolean : true if the new instance provides secure connections; otherwise, false . Remarks The new instance listens for incoming handshake requests on address and port . WebSocketServer(String) Initializes a new instance of the WebSocketServer class with the specified url . Declaration public WebSocketServer(string url) Parameters Type Name Description String url A String that represents the WebSocket URL of the server. Remarks The new instance listens for incoming handshake requests on the IP address of the host of url and the port of url . Either port 80 or 443 is used if url includes no port. Port 443 is used if the scheme of url is wss; otherwise, port 80 is used. The new instance provides secure connections if the scheme of url is wss. Properties Address Gets the IP address of the server. Declaration public IPAddress Address { get; } Property Value Type Description IPAddress A IPAddress that represents the local IP address on which to listen for incoming handshake requests. AllowForwardedRequest Gets or sets a value indicating whether the server accepts every handshake request without checking the request URI. Declaration public bool AllowForwardedRequest { get; set; } Property Value Type Description Boolean true if the server accepts every handshake request without checking the request URI; otherwise, false . The default value is false . Remarks The set operation does nothing if the server has already started or it is shutting down. AuthenticationSchemes Gets or sets the scheme used to authenticate the clients. Declaration public AuthenticationSchemes AuthenticationSchemes { get; set; } Property Value Type Description AuthenticationSchemes One of the AuthenticationSchemes enum values. It represents the scheme used to authenticate the clients. The default value is Anonymous . Remarks The set operation does nothing if the server has already started or it is shutting down. IsListening Gets a value indicating whether the server has started. Declaration public bool IsListening { get; } Property Value Type Description Boolean true if the server has started; otherwise, false . IsSecure Gets a value indicating whether secure connections are provided. Declaration public bool IsSecure { get; } Property Value Type Description Boolean true if this instance provides secure connections; otherwise, false . KeepClean Gets or sets a value indicating whether the server cleans up the inactive sessions periodically. Declaration public bool KeepClean { get; set; } Property Value Type Description Boolean true if the server cleans up the inactive sessions every 60 seconds; otherwise, false . The default value is true . Remarks The set operation does nothing if the server has already started or it is shutting down. Log Gets the logging function for the server. Declaration public Logger Log { get; } Property Value Type Description Logger A Logger that provides the logging function. Remarks The default logging level is Error . Port Gets the port of the server. Declaration public int Port { get; } Property Value Type Description Int32 An Int32 that represents the number of the port on which to listen for incoming handshake requests. Realm Gets or sets the realm used for authentication. Declaration public string Realm { get; set; } Property Value Type Description String A String or null by default. That string represents the name of the realm. Remarks \"SECRET AREA\" is used as the realm if the value is null or an empty string. The set operation does nothing if the server has already started or it is shutting down. ReuseAddress Gets or sets a value indicating whether the server is allowed to be bound to an address that is already in use. Declaration public bool ReuseAddress { get; set; } Property Value Type Description Boolean true if the server is allowed to be bound to an address that is already in use; otherwise, false . The default value is false . Remarks You should set this property to true if you would like to resolve to wait for socket in TIME_WAIT state. The set operation does nothing if the server has already started or it is shutting down. SslConfiguration Gets the configuration for secure connection. Declaration public ServerSslConfiguration SslConfiguration { get; } Property Value Type Description ServerSslConfiguration A that represents the configuration used to provide secure connections. Remarks This configuration will be referenced when attempts to start, so it must be configured before the start method is called. UserCredentialsFinder Gets or sets the delegate used to find the credentials for an identity. Declaration public Func<IIdentity, NetworkCredential> UserCredentialsFinder { get; set; } Property Value Type Description Func < IIdentity , NetworkCredential > A Func< , > delegate or null if not needed. That delegate invokes the method called for finding the credentials used to authenticate a client. The default value is null . Remarks No credentials are found if the method invoked by the delegate returns null or the value is null . The set operation does nothing if the server has already started or it is shutting down. WaitTime Gets or sets the time to wait for the response to the WebSocket Ping or Close. Declaration public TimeSpan WaitTime { get; set; } Property Value Type Description TimeSpan A to wait for the response. The default value is the same as 1 second. Remarks The set operation does nothing if the server has already started or it is shutting down. WebSocketServices Gets the management function for the WebSocket services provided by the server. Declaration public WebSocketServiceManager WebSocketServices { get; } Property Value Type Description WebSocketServiceManager A WebSocketServiceManager that manages the WebSocket services provided by the server. Methods AddWebSocketService<TBehaviorWithNew>(String) Adds a WebSocket service with the specified behavior and path. Declaration public void AddWebSocketService<TBehaviorWithNew>(string path) where TBehaviorWithNew : WebSocketBehavior, new() Parameters Type Name Description String path A String that represents an absolute path to the service to add. / is trimmed from the end of the string if present. Type Parameters Name Description TBehaviorWithNew The type of the behavior for the service. It must inherit the WebSocketBehavior class. And also, it must have a public parameterless constructor. AddWebSocketService<TBehaviorWithNew>(String, Action<TBehaviorWithNew>) Adds a WebSocket service with the specified behavior, path, and delegate. Declaration public void AddWebSocketService<TBehaviorWithNew>(string path, Action<TBehaviorWithNew> initializer) where TBehaviorWithNew : WebSocketBehavior, new() Parameters Type Name Description String path A String that represents an absolute path to the service to add. / is trimmed from the end of the string if present. Action <TBehaviorWithNew> initializer An Action<TBehaviorWithNew> delegate or null if not needed. The delegate invokes the method called when initializing a new session instance for the service. Type Parameters Name Description TBehaviorWithNew The type of the behavior for the service. It must inherit the WebSocketBehavior class. And also, it must have a public parameterless constructor. AddWebSocketService<TBehavior>(String, Func<TBehavior>) Adds a WebSocket service with the specified behavior, path, and delegate. Declaration public void AddWebSocketService<TBehavior>(string path, Func<TBehavior> creator) where TBehavior : WebSocketBehavior Parameters Type Name Description String path A String that represents an absolute path to the service to add. / is trimmed from the end of the string if present. Func <TBehavior> creator A Func<TBehavior> delegate. It invokes the method called when creating a new session instance for the service. The method must create a new instance of the specified behavior class and return it. Type Parameters Name Description TBehavior The type of the behavior for the service. It must inherit the WebSocketBehavior class. RemoveWebSocketService(String) Removes a WebSocket service with the specified path. Declaration public bool RemoveWebSocketService(string path) Parameters Type Name Description String path A String that represents an absolute path to the service to remove. / is trimmed from the end of the string if present. Returns Type Description Boolean true if the service is successfully found and removed; otherwise, false . Remarks The service is stopped with close status 1001 (going away) if it has already started. Start() Starts receiving incoming handshake requests. Declaration public void Start() Remarks This method does nothing if the server has already started or it is shutting down. Stop() Stops receiving incoming handshake requests. Declaration public void Stop() Stop(UInt16, String) Stops receiving incoming handshake requests and closes each connection with the specified code and reason. Declaration public void Stop(ushort code, string reason) Parameters Type Name Description UInt16 code A UInt16 that represents the status code indicating the reason for the close. The status codes are defined in Section 7.4 of RFC 6455. String reason A String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Stop(CloseStatusCode, String) Stops receiving incoming handshake requests and closes each connection with the specified code and reason. Declaration public void Stop(CloseStatusCode code, string reason) Parameters Type Name Description CloseStatusCode code One of the CloseStatusCode enum values. It represents the status code indicating the reason for the close. String reason A String that represents the reason for the close. The size must be 123 bytes or less in UTF-8."
  },
  "api/WebSocketSharp.Server.WebSocketServiceHost.html": {
    "href": "api/WebSocketSharp.Server.WebSocketServiceHost.html",
    "title": "Class WebSocketServiceHost | Unity Algorand SDK",
    "keywords": "Class WebSocketServiceHost Exposes the methods and properties used to access the information in a WebSocket service provided by the WebSocketServer or HttpServer . Inheritance Object WebSocketServiceHost Namespace : WebSocketSharp.Server Assembly : cs.temp.dll.dll Syntax public abstract class WebSocketServiceHost Remarks This class is an abstract class. Constructors WebSocketServiceHost(String, Logger) Initializes a new instance of the WebSocketServiceHost class with the specified path and log . Declaration protected WebSocketServiceHost(string path, Logger log) Parameters Type Name Description String path A String that represents the absolute path to the service. Logger log A Logger that represents the logging function for the service. Properties BehaviorType Gets the of the behavior of the service. Declaration public abstract Type BehaviorType { get; } Property Value Type Description Type A that represents the type of the behavior of the service. KeepClean Gets or sets a value indicating whether the service cleans up the inactive sessions periodically. Declaration public bool KeepClean { get; set; } Property Value Type Description Boolean true if the service cleans up the inactive sessions every 60 seconds; otherwise, false . Remarks The set operation does nothing if the service has already started or it is shutting down. Log Gets the logging function for the service. Declaration protected Logger Log { get; } Property Value Type Description Logger A Logger that provides the logging function. Path Gets the path to the service. Declaration public string Path { get; } Property Value Type Description String A String that represents the absolute path to the service. Sessions Gets the management function for the sessions in the service. Declaration public WebSocketSessionManager Sessions { get; } Property Value Type Description WebSocketSessionManager A WebSocketSessionManager that manages the sessions in the service. WaitTime Gets or sets the time to wait for the response to the WebSocket Ping or Close. Declaration public TimeSpan WaitTime { get; set; } Property Value Type Description TimeSpan A to wait for the response. Remarks The set operation does nothing if the service has already started or it is shutting down. Methods CreateSession() Creates a new session for the service. Declaration protected abstract WebSocketBehavior CreateSession() Returns Type Description WebSocketBehavior A WebSocketBehavior instance that represents the new session."
  },
  "api/WebSocketSharp.Server.WebSocketServiceManager.html": {
    "href": "api/WebSocketSharp.Server.WebSocketServiceManager.html",
    "title": "Class WebSocketServiceManager | Unity Algorand SDK",
    "keywords": "Class WebSocketServiceManager Provides the management function for the WebSocket services. Inheritance Object WebSocketServiceManager Namespace : WebSocketSharp.Server Assembly : cs.temp.dll.dll Syntax public class WebSocketServiceManager Remarks This class manages the WebSocket services provided by the WebSocketServer or HttpServer . Properties Count Gets the number of the WebSocket services. Declaration public int Count { get; } Property Value Type Description Int32 An Int32 that represents the number of the services. Hosts Gets the host instances for the WebSocket services. Declaration public IEnumerable<WebSocketServiceHost> Hosts { get; } Property Value Type Description IEnumerable < WebSocketServiceHost > An IEnumerable<WebSocketServiceHost> instance. It provides an enumerator which supports the iteration over the collection of the host instances. Item[String] Gets the host instance for a WebSocket service with the specified path. Declaration public WebSocketServiceHost this[string path] { get; } Parameters Type Name Description String path A String that represents an absolute path to the service to find. / is trimmed from the end of the string if present. Property Value Type Description WebSocketServiceHost A WebSocketServiceHost instance or null if not found. The host instance provides the function to access the information in the service. KeepClean Gets or sets a value indicating whether the inactive sessions in the WebSocket services are cleaned up periodically. Declaration public bool KeepClean { get; set; } Property Value Type Description Boolean true if the inactive sessions are cleaned up every 60 seconds; otherwise, false . Remarks The set operation does nothing if the server has already started or it is shutting down. Paths Gets the paths for the WebSocket services. Declaration public IEnumerable<string> Paths { get; } Property Value Type Description IEnumerable < String > An IEnumerable<string> instance. It provides an enumerator which supports the iteration over the collection of the paths. SessionCount Gets the total number of the sessions in the WebSocket services. Declaration public int SessionCount { get; } Property Value Type Description Int32 An Int32 that represents the total number of the sessions in the services. WaitTime Gets or sets the time to wait for the response to the WebSocket Ping or Close. Declaration public TimeSpan WaitTime { get; set; } Property Value Type Description TimeSpan A to wait for the response. Remarks The set operation does nothing if the server has already started or it is shutting down. Methods AddService<TBehavior>(String, Action<TBehavior>) Adds a WebSocket service with the specified behavior, path, and delegate. Declaration public void AddService<TBehavior>(string path, Action<TBehavior> initializer) where TBehavior : WebSocketBehavior, new() Parameters Type Name Description String path A String that represents an absolute path to the service to add. / is trimmed from the end of the string if present. Action <TBehavior> initializer An Action<TBehavior> delegate or null if not needed. The delegate invokes the method called when initializing a new session instance for the service. Type Parameters Name Description TBehavior The type of the behavior for the service. It must inherit the WebSocketBehavior class. And also, it must have a public parameterless constructor. Broadcast(Byte[]) Sends data to every client in the WebSocket services. Declaration public void Broadcast(byte[] data) Parameters Type Name Description Byte [] data An array of Byte that represents the binary data to send. Broadcast(String) Sends data to every client in the WebSocket services. Declaration public void Broadcast(string data) Parameters Type Name Description String data A String that represents the text data to send. BroadcastAsync(Stream, Int32, Action) Sends the data from stream asynchronously to every client in the WebSocket services. Declaration public void BroadcastAsync(Stream stream, int length, Action completed) Parameters Type Name Description Stream stream A instance from which to read the data to send. Int32 length An Int32 that specifies the number of bytes to send. Action completed An delegate or null if not needed. The delegate invokes the method called when the send is complete. Remarks The data is sent as the binary data. This method does not wait for the send to be complete. BroadcastAsync(Byte[], Action) Sends data asynchronously to every client in the WebSocket services. Declaration public void BroadcastAsync(byte[] data, Action completed) Parameters Type Name Description Byte [] data An array of Byte that represents the binary data to send. Action completed An delegate or null if not needed. The delegate invokes the method called when the send is complete. Remarks This method does not wait for the send to be complete. BroadcastAsync(String, Action) Sends data asynchronously to every client in the WebSocket services. Declaration public void BroadcastAsync(string data, Action completed) Parameters Type Name Description String data A String that represents the text data to send. Action completed An delegate or null if not needed. The delegate invokes the method called when the send is complete. Remarks This method does not wait for the send to be complete. Broadping() Sends a ping to every client in the WebSocket services. Declaration public Dictionary<string, Dictionary<string, bool>> Broadping() Returns Type Description Dictionary < String , Dictionary < String , Boolean >> A Dictionary<string, Dictionary<string, bool>> . It represents a collection of pairs of a service path and another collection of pairs of a session ID and a value indicating whether a pong has been received from the client within a time. Broadping(String) Sends a ping with message to every client in the WebSocket services. Declaration public Dictionary<string, Dictionary<string, bool>> Broadping(string message) Parameters Type Name Description String message A String that represents the message to send. The size must be 125 bytes or less in UTF-8. Returns Type Description Dictionary < String , Dictionary < String , Boolean >> A Dictionary<string, Dictionary<string, bool>> . It represents a collection of pairs of a service path and another collection of pairs of a session ID and a value indicating whether a pong has been received from the client within a time. Clear() Removes all WebSocket services managed by the manager. Declaration public void Clear() Remarks A service is stopped with close status 1001 (going away) if it has already started. RemoveService(String) Removes a WebSocket service with the specified path. Declaration public bool RemoveService(string path) Parameters Type Name Description String path A String that represents an absolute path to the service to remove. / is trimmed from the end of the string if present. Returns Type Description Boolean true if the service is successfully found and removed; otherwise, false . Remarks The service is stopped with close status 1001 (going away) if it has already started. TryGetServiceHost(String, out WebSocketServiceHost) Tries to get the host instance for a WebSocket service with the specified path. Declaration public bool TryGetServiceHost(string path, out WebSocketServiceHost host) Parameters Type Name Description String path A String that represents an absolute path to the service to find. / is trimmed from the end of the string if present. WebSocketServiceHost host When this method returns, a WebSocketServiceHost instance or null if not found. The host instance provides the function to access the information in the service. Returns Type Description Boolean true if the service is successfully found; otherwise, false ."
  },
  "api/WebSocketSharp.Server.WebSocketSessionManager.html": {
    "href": "api/WebSocketSharp.Server.WebSocketSessionManager.html",
    "title": "Class WebSocketSessionManager | Unity Algorand SDK",
    "keywords": "Class WebSocketSessionManager Provides the management function for the sessions in a WebSocket service. Inheritance Object WebSocketSessionManager Namespace : WebSocketSharp.Server Assembly : cs.temp.dll.dll Syntax public class WebSocketSessionManager Remarks This class manages the sessions in a WebSocket service provided by the WebSocketServer or HttpServer . Properties ActiveIDs Gets the IDs for the active sessions in the WebSocket service. Declaration public IEnumerable<string> ActiveIDs { get; } Property Value Type Description IEnumerable < String > An IEnumerable<string> instance. It provides an enumerator which supports the iteration over the collection of the IDs for the active sessions. Count Gets the number of the sessions in the WebSocket service. Declaration public int Count { get; } Property Value Type Description Int32 An Int32 that represents the number of the sessions. IDs Gets the IDs for the sessions in the WebSocket service. Declaration public IEnumerable<string> IDs { get; } Property Value Type Description IEnumerable < String > An IEnumerable<string> instance. It provides an enumerator which supports the iteration over the collection of the IDs for the sessions. InactiveIDs Gets the IDs for the inactive sessions in the WebSocket service. Declaration public IEnumerable<string> InactiveIDs { get; } Property Value Type Description IEnumerable < String > An IEnumerable<string> instance. It provides an enumerator which supports the iteration over the collection of the IDs for the inactive sessions. Item[String] Gets the session instance with id . Declaration public IWebSocketSession this[string id] { get; } Parameters Type Name Description String id A String that represents the ID of the session to find. Property Value Type Description IWebSocketSession A IWebSocketSession instance or null if not found. The session instance provides the function to access the information in the session. KeepClean Gets or sets a value indicating whether the inactive sessions in the WebSocket service are cleaned up periodically. Declaration public bool KeepClean { get; set; } Property Value Type Description Boolean true if the inactive sessions are cleaned up every 60 seconds; otherwise, false . Remarks The set operation does nothing if the service has already started or it is shutting down. Sessions Gets the session instances in the WebSocket service. Declaration public IEnumerable<IWebSocketSession> Sessions { get; } Property Value Type Description IEnumerable < IWebSocketSession > An IEnumerable<IWebSocketSession> instance. It provides an enumerator which supports the iteration over the collection of the session instances. WaitTime Gets or sets the time to wait for the response to the WebSocket Ping or Close. Declaration public TimeSpan WaitTime { get; set; } Property Value Type Description TimeSpan A to wait for the response. Remarks The set operation does nothing if the service has already started or it is shutting down. Methods Broadcast(Stream, Int32) Sends the data from stream to every client in the WebSocket service. Declaration public void Broadcast(Stream stream, int length) Parameters Type Name Description Stream stream A instance from which to read the data to send. Int32 length An Int32 that specifies the number of bytes to send. Remarks The data is sent as the binary data. Broadcast(Byte[]) Sends data to every client in the WebSocket service. Declaration public void Broadcast(byte[] data) Parameters Type Name Description Byte [] data An array of Byte that represents the binary data to send. Broadcast(String) Sends data to every client in the WebSocket service. Declaration public void Broadcast(string data) Parameters Type Name Description String data A String that represents the text data to send. BroadcastAsync(Stream, Int32, Action) Sends the data from stream asynchronously to every client in the WebSocket service. Declaration public void BroadcastAsync(Stream stream, int length, Action completed) Parameters Type Name Description Stream stream A instance from which to read the data to send. Int32 length An Int32 that specifies the number of bytes to send. Action completed An delegate or null if not needed. The delegate invokes the method called when the send is complete. Remarks The data is sent as the binary data. This method does not wait for the send to be complete. BroadcastAsync(Byte[], Action) Sends data asynchronously to every client in the WebSocket service. Declaration public void BroadcastAsync(byte[] data, Action completed) Parameters Type Name Description Byte [] data An array of Byte that represents the binary data to send. Action completed An delegate or null if not needed. The delegate invokes the method called when the send is complete. Remarks This method does not wait for the send to be complete. BroadcastAsync(String, Action) Sends data asynchronously to every client in the WebSocket service. Declaration public void BroadcastAsync(string data, Action completed) Parameters Type Name Description String data A String that represents the text data to send. Action completed An delegate or null if not needed. The delegate invokes the method called when the send is complete. Remarks This method does not wait for the send to be complete. Broadping() Sends a ping to every client in the WebSocket service. Declaration public Dictionary<string, bool> Broadping() Returns Type Description Dictionary < String , Boolean > A Dictionary<string, bool> . It represents a collection of pairs of a session ID and a value indicating whether a pong has been received from the client within a time. Broadping(String) Sends a ping with message to every client in the WebSocket service. Declaration public Dictionary<string, bool> Broadping(string message) Parameters Type Name Description String message A String that represents the message to send. The size must be 125 bytes or less in UTF-8. Returns Type Description Dictionary < String , Boolean > A Dictionary<string, bool> . It represents a collection of pairs of a session ID and a value indicating whether a pong has been received from the client within a time. CloseSession(String) Closes the specified session. Declaration public void CloseSession(string id) Parameters Type Name Description String id A String that represents the ID of the session to close. CloseSession(String, UInt16, String) Closes the specified session with code and reason . Declaration public void CloseSession(string id, ushort code, string reason) Parameters Type Name Description String id A String that represents the ID of the session to close. UInt16 code A UInt16 that represents the status code indicating the reason for the close. The status codes are defined in Section 7.4 of RFC 6455. String reason A String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. CloseSession(String, CloseStatusCode, String) Closes the specified session with code and reason . Declaration public void CloseSession(string id, CloseStatusCode code, string reason) Parameters Type Name Description String id A String that represents the ID of the session to close. CloseStatusCode code One of the CloseStatusCode enum values. It represents the status code indicating the reason for the close. String reason A String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. PingTo(String) Sends a ping to the client using the specified session. Declaration public bool PingTo(string id) Parameters Type Name Description String id A String that represents the ID of the session. Returns Type Description Boolean true if the send has done with no error and a pong has been received from the client within a time; otherwise, false . PingTo(String, String) Sends a ping with message to the client using the specified session. Declaration public bool PingTo(string message, string id) Parameters Type Name Description String message A String that represents the message to send. The size must be 125 bytes or less in UTF-8. String id A String that represents the ID of the session. Returns Type Description Boolean true if the send has done with no error and a pong has been received from the client within a time; otherwise, false . SendTo(Stream, Int32, String) Sends the data from stream to the client using the specified session. Declaration public void SendTo(Stream stream, int length, string id) Parameters Type Name Description Stream stream A instance from which to read the data to send. Int32 length An Int32 that specifies the number of bytes to send. String id A String that represents the ID of the session. Remarks The data is sent as the binary data. SendTo(Byte[], String) Sends data to the client using the specified session. Declaration public void SendTo(byte[] data, string id) Parameters Type Name Description Byte [] data An array of Byte that represents the binary data to send. String id A String that represents the ID of the session. SendTo(String, String) Sends data to the client using the specified session. Declaration public void SendTo(string data, string id) Parameters Type Name Description String data A String that represents the text data to send. String id A String that represents the ID of the session. SendToAsync(Stream, Int32, String, Action<Boolean>) Sends the data from stream asynchronously to the client using the specified session. Declaration public void SendToAsync(Stream stream, int length, string id, Action<bool> completed) Parameters Type Name Description Stream stream A instance from which to read the data to send. Int32 length An Int32 that specifies the number of bytes to send. String id A String that represents the ID of the session. Action < Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks The data is sent as the binary data. This method does not wait for the send to be complete. SendToAsync(Byte[], String, Action<Boolean>) Sends data asynchronously to the client using the specified session. Declaration public void SendToAsync(byte[] data, string id, Action<bool> completed) Parameters Type Name Description Byte [] data An array of Byte that represents the binary data to send. String id A String that represents the ID of the session. Action < Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. SendToAsync(String, String, Action<Boolean>) Sends data asynchronously to the client using the specified session. Declaration public void SendToAsync(string data, string id, Action<bool> completed) Parameters Type Name Description String data A String that represents the text data to send. String id A String that represents the ID of the session. Action < Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. Sweep() Cleans up the inactive sessions in the WebSocket service. Declaration public void Sweep() TryGetSession(String, out IWebSocketSession) Tries to get the session instance with id . Declaration public bool TryGetSession(string id, out IWebSocketSession session) Parameters Type Name Description String id A String that represents the ID of the session to find. IWebSocketSession session When this method returns, a IWebSocketSession instance or null if not found. The session instance provides the function to access the information in the session. Returns Type Description Boolean true if the session is successfully found; otherwise, false ."
  },
  "api/WebSocketSharp.WebSocket.html": {
    "href": "api/WebSocketSharp.WebSocket.html",
    "title": "Class WebSocket | Unity Algorand SDK",
    "keywords": "Class WebSocket Implements the WebSocket interface. Inheritance Object WebSocket Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public class WebSocket : IDisposable Remarks This class provides a set of methods and properties for two-way communication using the WebSocket protocol. The WebSocket protocol is defined in RFC 6455 . Constructors WebSocket(String, String[]) Initializes a new instance of the WebSocket class with url and optionally protocols . Declaration public WebSocket(string url, params string[] protocols) Parameters Type Name Description String url A String that specifies the URL to which to connect. The scheme of the URL must be ws or wss. The new instance uses a secure connection if the scheme is wss. String [] protocols An array of String that specifies the names of the subprotocols if necessary. Each value of the array must be a token defined in RFC 2616 . Properties Compression Gets or sets the compression method used to compress a message. Declaration public CompressionMethod Compression { get; set; } Property Value Type Description CompressionMethod One of the CompressionMethod enum values. It specifies the compression method used to compress a message. The default value is None . Remarks The set operation does nothing if the connection has already been established or it is closing. Cookies Gets the HTTP cookies included in the handshake request/response. Declaration public IEnumerable<Cookie> Cookies { get; } Property Value Type Description IEnumerable < Cookie > An System.Collections.Generic.IEnumerable{WebSocketSharp.Net.Cookie} instance. It provides an enumerator which supports the iteration over the collection of the cookies. Credentials Gets the credentials for the HTTP authentication (Basic/Digest). Declaration public NetworkCredential Credentials { get; } Property Value Type Description NetworkCredential A that represents the credentials used to authenticate the client. The default value is null . EmitOnPing Gets or sets a value indicating whether a OnMessage event is emitted when a ping is received. Declaration public bool EmitOnPing { get; set; } Property Value Type Description Boolean true if this instance emits a OnMessage event when receives a ping; otherwise, false . The default value is false . EnableRedirection Gets or sets a value indicating whether the URL redirection for the handshake request is allowed. Declaration public bool EnableRedirection { get; set; } Property Value Type Description Boolean true if this instance allows the URL redirection for the handshake request; otherwise, false . The default value is false . Remarks The set operation does nothing if the connection has already been established or it is closing. Extensions Gets the extensions selected by server. Declaration public string Extensions { get; } Property Value Type Description String A String that will be a list of the extensions negotiated between client and server, or an empty string if not specified or selected. IsAlive Gets a value indicating whether the connection is alive. Declaration public bool IsAlive { get; } Property Value Type Description Boolean true if the connection is alive; otherwise, false . Remarks The get operation returns the value by using a ping/pong if the current state of the connection is Open. IsSecure Gets a value indicating whether a secure connection is used. Declaration public bool IsSecure { get; } Property Value Type Description Boolean true if this instance uses a secure connection; otherwise, false . Log Gets the logging function. Declaration public Logger Log { get; } Property Value Type Description Logger A Logger that provides the logging function. Remarks The default logging level is Error . Origin Gets or sets the value of the HTTP Origin header to send with the handshake request. Declaration public string Origin { get; set; } Property Value Type Description String A String that represents the value of the Origin header to send. The syntax is <scheme>://<host>[:<port>]. The default value is null . Remarks The HTTP Origin header is defined in Section 7 of RFC 6454 . This instance sends the Origin header if this property has any. The set operation does nothing if the connection has already been established or it is closing. Protocol Gets the name of subprotocol selected by the server. Declaration public string Protocol { get; } Property Value Type Description String A String that will be one of the names of subprotocols specified by client. An empty string if not specified or selected. ReadyState Gets the current state of the connection. Declaration public WebSocketState ReadyState { get; } Property Value Type Description WebSocketState One of the WebSocketState enum values. It indicates the current state of the connection. The default value is Connecting . SslConfiguration Gets the configuration for secure connection. Declaration public ClientSslConfiguration SslConfiguration { get; } Property Value Type Description ClientSslConfiguration A that represents the configuration used to establish a secure connection. Remarks This configuration will be referenced when attempts to connect, so it must be configured before any connect method is called. Url Gets the URL to which to connect. Declaration public Uri Url { get; } Property Value Type Description Uri A that represents the URL to which to connect. WaitTime Gets or sets the time to wait for the response to the ping or close. Declaration public TimeSpan WaitTime { get; set; } Property Value Type Description TimeSpan A to wait for the response. The default value is the same as 5 seconds if this instance is a client. Remarks The set operation does nothing if the connection has already been established or it is closing. Methods Accept() Accepts the handshake request. Declaration public void Accept() Remarks This method does nothing if the handshake request has already been accepted. AcceptAsync() Accepts the handshake request asynchronously. Declaration public void AcceptAsync() Remarks This method does not wait for the accept process to be complete. This method does nothing if the handshake request has already been accepted. Close() Closes the connection. Declaration public void Close() Remarks This method does nothing if the current state of the connection is Closing or Closed. Close(UInt16) Closes the connection with the specified code. Declaration public void Close(ushort code) Parameters Type Name Description UInt16 code A UInt16 that represents the status code indicating the reason for the close. The status codes are defined in Section 7.4 of RFC 6455. Remarks This method does nothing if the current state of the connection is Closing or Closed. Close(UInt16, String) Closes the connection with the specified code and reason. Declaration public void Close(ushort code, string reason) Parameters Type Name Description UInt16 code A UInt16 that represents the status code indicating the reason for the close. The status codes are defined in Section 7.4 of RFC 6455. String reason A String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Remarks This method does nothing if the current state of the connection is Closing or Closed. Close(CloseStatusCode) Closes the connection with the specified code. Declaration public void Close(CloseStatusCode code) Parameters Type Name Description CloseStatusCode code One of the CloseStatusCode enum values. It represents the status code indicating the reason for the close. Remarks This method does nothing if the current state of the connection is Closing or Closed. Close(CloseStatusCode, String) Closes the connection with the specified code and reason. Declaration public void Close(CloseStatusCode code, string reason) Parameters Type Name Description CloseStatusCode code One of the CloseStatusCode enum values. It represents the status code indicating the reason for the close. String reason A String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Remarks This method does nothing if the current state of the connection is Closing or Closed. CloseAsync() Closes the connection asynchronously. Declaration public void CloseAsync() Remarks This method does not wait for the close to be complete. This method does nothing if the current state of the connection is Closing or Closed. CloseAsync(UInt16) Closes the connection asynchronously with the specified code. Declaration public void CloseAsync(ushort code) Parameters Type Name Description UInt16 code A UInt16 that represents the status code indicating the reason for the close. The status codes are defined in Section 7.4 of RFC 6455. Remarks This method does not wait for the close to be complete. This method does nothing if the current state of the connection is Closing or Closed. CloseAsync(UInt16, String) Closes the connection asynchronously with the specified code and reason. Declaration public void CloseAsync(ushort code, string reason) Parameters Type Name Description UInt16 code A UInt16 that represents the status code indicating the reason for the close. The status codes are defined in Section 7.4 of RFC 6455. String reason A String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Remarks This method does not wait for the close to be complete. This method does nothing if the current state of the connection is Closing or Closed. CloseAsync(CloseStatusCode) Closes the connection asynchronously with the specified code. Declaration public void CloseAsync(CloseStatusCode code) Parameters Type Name Description CloseStatusCode code One of the CloseStatusCode enum values. It represents the status code indicating the reason for the close. Remarks This method does not wait for the close to be complete. This method does nothing if the current state of the connection is Closing or Closed. CloseAsync(CloseStatusCode, String) Closes the connection asynchronously with the specified code and reason. Declaration public void CloseAsync(CloseStatusCode code, string reason) Parameters Type Name Description CloseStatusCode code One of the CloseStatusCode enum values. It represents the status code indicating the reason for the close. String reason A String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Remarks This method does not wait for the close to be complete. This method does nothing if the current state of the connection is Closing or Closed. Connect() Establishes a connection. Declaration public void Connect() Remarks This method does nothing if the connection has already been established. ConnectAsync() Establishes a connection asynchronously. Declaration public void ConnectAsync() Remarks This method does not wait for the connect process to be complete. This method does nothing if the connection has already been established. Ping() Sends a ping using the WebSocket connection. Declaration public bool Ping() Returns Type Description Boolean true if the send has done with no error and a pong has been received within a time; otherwise, false . Ping(String) Sends a ping with message using the WebSocket connection. Declaration public bool Ping(string message) Parameters Type Name Description String message A String that represents the message to send. The size must be 125 bytes or less in UTF-8. Returns Type Description Boolean true if the send has done with no error and a pong has been received within a time; otherwise, false . Send(FileInfo) Sends the specified file using the WebSocket connection. Declaration public void Send(FileInfo fileInfo) Parameters Type Name Description FileInfo fileInfo A that specifies the file to send. The file is sent as the binary data. Send(Stream, Int32) Sends the data from the specified stream using the WebSocket connection. Declaration public void Send(Stream stream, int length) Parameters Type Name Description Stream stream A instance from which to read the data to send. The data is sent as the binary data. Int32 length An Int32 that specifies the number of bytes to send. Send(Byte[]) Sends the specified data using the WebSocket connection. Declaration public void Send(byte[] data) Parameters Type Name Description Byte [] data An array of Byte that represents the binary data to send. Send(String) Sends the specified data using the WebSocket connection. Declaration public void Send(string data) Parameters Type Name Description String data A String that represents the text data to send. SendAsync(FileInfo, Action<Boolean>) Sends the specified file asynchronously using the WebSocket connection. Declaration public void SendAsync(FileInfo fileInfo, Action<bool> completed) Parameters Type Name Description FileInfo fileInfo A that specifies the file to send. The file is sent as the binary data. Action < Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. SendAsync(Stream, Int32, Action<Boolean>) Sends the data from the specified stream asynchronously using the WebSocket connection. Declaration public void SendAsync(Stream stream, int length, Action<bool> completed) Parameters Type Name Description Stream stream A instance from which to read the data to send. The data is sent as the binary data. Int32 length An Int32 that specifies the number of bytes to send. Action < Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. SendAsync(Byte[], Action<Boolean>) Sends the specified data asynchronously using the WebSocket connection. Declaration public void SendAsync(byte[] data, Action<bool> completed) Parameters Type Name Description Byte [] data An array of Byte that represents the binary data to send. Action < Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. SendAsync(String, Action<Boolean>) Sends the specified data asynchronously using the WebSocket connection. Declaration public void SendAsync(string data, Action<bool> completed) Parameters Type Name Description String data A String that represents the text data to send. Action < Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. SetCookie(Cookie) Sets an HTTP cookie to send with the handshake request. Declaration public void SetCookie(Cookie cookie) Parameters Type Name Description Cookie cookie A that represents the cookie to send. Remarks This method does nothing if the connection has already been established or it is closing. SetCredentials(String, String, Boolean) Sets the credentials for the HTTP authentication (Basic/Digest). Declaration public void SetCredentials(string username, string password, bool preAuth) Parameters Type Name Description String username A String that represents the username associated with the credentials. null or an empty string if initializes the credentials. String password A String that represents the password for the username associated with the credentials. null or an empty string if not necessary. Boolean preAuth true if sends the credentials for the Basic authentication in advance with the first handshake request; otherwise, false . Remarks This method does nothing if the connection has already been established or it is closing. SetProxy(String, String, String) Sets the URL of the HTTP proxy server through which to connect and the credentials for the HTTP proxy authentication (Basic/Digest). Declaration public void SetProxy(string url, string username, string password) Parameters Type Name Description String url A String that represents the URL of the proxy server through which to connect. The syntax is http://<host>[:<port>]. null or an empty string if initializes the URL and the credentials. String username A String that represents the username associated with the credentials. null or an empty string if the credentials are not necessary. String password A String that represents the password for the username associated with the credentials. null or an empty string if not necessary. Remarks This method does nothing if the connection has already been established or it is closing. Events OnClose Occurs when the WebSocket connection has been closed. Declaration public event EventHandler<CloseEventArgs> OnClose Event Type Type Description EventHandler < CloseEventArgs > OnError Occurs when the WebSocket gets an error. Declaration public event EventHandler<ErrorEventArgs> OnError Event Type Type Description EventHandler < ErrorEventArgs > OnMessage Occurs when the WebSocket receives a message. Declaration public event EventHandler<MessageEventArgs> OnMessage Event Type Type Description EventHandler < MessageEventArgs > OnOpen Occurs when the WebSocket connection has been established. Declaration public event EventHandler OnOpen Event Type Type Description EventHandler"
  },
  "api/WebSocketSharp.WebSocketException.html": {
    "href": "api/WebSocketSharp.WebSocketException.html",
    "title": "Class WebSocketException | Unity Algorand SDK",
    "keywords": "Class WebSocketException The exception that is thrown when a fatal error occurs in the WebSocket communication. Inheritance Object WebSocketException Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public class WebSocketException : Exception Constructors WebSocketException() Declaration public WebSocketException() WebSocketException(Exception) Declaration public WebSocketException(Exception innerException) Parameters Type Name Description Exception innerException WebSocketException(String) Declaration public WebSocketException(string message) Parameters Type Name Description String message WebSocketException(String, Exception) Declaration public WebSocketException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException WebSocketException(CloseStatusCode) Declaration public WebSocketException(CloseStatusCode code) Parameters Type Name Description CloseStatusCode code WebSocketException(CloseStatusCode, Exception) Declaration public WebSocketException(CloseStatusCode code, Exception innerException) Parameters Type Name Description CloseStatusCode code Exception innerException WebSocketException(CloseStatusCode, String) Declaration public WebSocketException(CloseStatusCode code, string message) Parameters Type Name Description CloseStatusCode code String message WebSocketException(CloseStatusCode, String, Exception) Declaration public WebSocketException(CloseStatusCode code, string message, Exception innerException) Parameters Type Name Description CloseStatusCode code String message Exception innerException Properties Code Gets the status code indicating the cause of the exception. Declaration public CloseStatusCode Code { get; } Property Value Type Description CloseStatusCode One of the CloseStatusCode enum values that represents the status code indicating the cause of the exception."
  },
  "api/WebSocketSharp.WebSocketState.html": {
    "href": "api/WebSocketSharp.WebSocketState.html",
    "title": "Enum WebSocketState | Unity Algorand SDK",
    "keywords": "Enum WebSocketState Indicates the state of a WebSocket connection. Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public enum WebSocketState : ushort Remarks The values of this enumeration are defined in The WebSocket API . Fields Name Description Closed Equivalent to numeric value 3. Indicates that the connection has been closed or could not be established. Closing Equivalent to numeric value 2. Indicates that the connection is going through the closing handshake, or the close method has been invoked. Connecting Equivalent to numeric value 0. Indicates that the connection has not yet been established. Open Equivalent to numeric value 1. Indicates that the connection has been established, and the communication is possible."
  },
  "api/ZXing.Aztec.AztecEncodingOptions.html": {
    "href": "api/ZXing.Aztec.AztecEncodingOptions.html",
    "title": "Class AztecEncodingOptions | Unity Algorand SDK",
    "keywords": "Class AztecEncodingOptions The class holds the available options for the AztecWriter Inheritance Object AztecEncodingOptions Namespace : ZXing.Aztec Assembly : cs.temp.dll.dll Syntax public class AztecEncodingOptions : EncodingOptions Properties CharacterSet Specifies what character encoding to use where applicable (type ) Declaration public string CharacterSet { get; set; } Property Value Type Description String ErrorCorrection Representing the minimal percentage of error correction words. Note: an Aztec symbol should have a minimum of 25% EC words. Declaration public int? ErrorCorrection { get; set; } Property Value Type Description Nullable < Int32 > Layers Specifies the required number of layers for an Aztec code: a negative number (-1, -2, -3, -4) specifies a compact Aztec code 0 indicates to use the minimum number of layers (the default) a positive number (1, 2, .. 32) specifies a normal (non-compact) Aztec code Declaration public int? Layers { get; set; } Property Value Type Description Nullable < Int32 >"
  },
  "api/ZXing.Aztec.AztecReader.html": {
    "href": "api/ZXing.Aztec.AztecReader.html",
    "title": "Class AztecReader | Unity Algorand SDK",
    "keywords": "Class AztecReader This implementation can detect and decode Aztec codes in an image. Inheritance Object AztecReader Implements Reader Namespace : ZXing.Aztec Assembly : cs.temp.dll.dll Syntax public class AztecReader : Reader Methods decode(BinaryBitmap) Locates and decodes a barcode in some format within an image. Declaration public Result decode(BinaryBitmap image) Parameters Type Name Description BinaryBitmap image image of barcode to decode Returns Type Description Result a String representing the content encoded by the Data Matrix code decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) Locates and decodes a Data Matrix code in an image. Declaration public Result decode(BinaryBitmap image, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description BinaryBitmap image image of barcode to decode IDictionary < DecodeHintType , Object > hints passed as a {@link java.util.Hashtable} from {@link com.google.zxing.DecodeHintType} to arbitrary data. The meaning of the data depends upon the hint type. The implementation may or may not do anything with these hints. Returns Type Description Result String which the barcode encodes reset() Resets any internal state the implementation has after a decode, to prepare it for reuse. Declaration public void reset() Implements Reader"
  },
  "api/ZXing.Aztec.AztecResultMetadata.html": {
    "href": "api/ZXing.Aztec.AztecResultMetadata.html",
    "title": "Class AztecResultMetadata | Unity Algorand SDK",
    "keywords": "Class AztecResultMetadata Aztec result meta data. Inheritance Object AztecResultMetadata Namespace : ZXing.Aztec Assembly : cs.temp.dll.dll Syntax public sealed class AztecResultMetadata Constructors AztecResultMetadata(Boolean, Int32, Int32) Declaration public AztecResultMetadata(bool compact, int datablocks, int layers) Parameters Type Name Description Boolean compact Int32 datablocks Int32 layers Properties Compact Gets a value indicating whether this Aztec code is compact. Declaration public bool Compact { get; } Property Value Type Description Boolean true if compact; otherwise, false . Datablocks Gets the nb datablocks. Declaration public int Datablocks { get; } Property Value Type Description Int32 Layers Gets the nb layers. Declaration public int Layers { get; } Property Value Type Description Int32 Methods ToString() string represenation of that instance Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/ZXing.Aztec.AztecWriter.html": {
    "href": "api/ZXing.Aztec.AztecWriter.html",
    "title": "Class AztecWriter | Unity Algorand SDK",
    "keywords": "Class AztecWriter Renders an Aztec code as a Inheritance Object AztecWriter Implements Writer Namespace : ZXing.Aztec Assembly : cs.temp.dll.dll Syntax public sealed class AztecWriter : Writer Fields DEFAULT_CHARSET default character set Declaration public static readonly Encoding DEFAULT_CHARSET Field Value Type Description Encoding Methods encode(String, BarcodeFormat, Int32, Int32) Encode a barcode using the default settings. Declaration public BitMatrix encode(String contents, BarcodeFormat format, int width, int height) Parameters Type Name Description String contents The contents to encode in the barcode BarcodeFormat format The barcode format to generate Int32 width The preferred width in pixels Int32 height The preferred height in pixels Returns Type Description BitMatrix The generated barcode as a Matrix of unsigned bytes (0 == black, 255 == white) encode(String, BarcodeFormat, Int32, Int32, IDictionary<EncodeHintType, Object>) Declaration public BitMatrix encode(String contents, BarcodeFormat format, int width, int height, IDictionary<EncodeHintType, object> hints) Parameters Type Name Description String contents The contents to encode in the barcode BarcodeFormat format The barcode format to generate Int32 width The preferred width in pixels Int32 height The preferred height in pixels IDictionary < EncodeHintType , Object > hints Additional parameters to supply to the encoder Returns Type Description BitMatrix The generated barcode as a Matrix of unsigned bytes (0 == black, 255 == white) encode(Byte[], BarcodeFormat, Int32, Int32, IDictionary<EncodeHintType, Object>) Declaration public BitMatrix encode(byte[] contents, BarcodeFormat format, int width, int height, IDictionary<EncodeHintType, object> hints) Parameters Type Name Description Byte [] contents The contents to encode in the barcode BarcodeFormat format The barcode format to generate Int32 width The preferred width in pixels Int32 height The preferred height in pixels IDictionary < EncodeHintType , Object > hints Additional parameters to supply to the encoder Returns Type Description BitMatrix The generated barcode as a Matrix of unsigned bytes (0 == black, 255 == white) Implements Writer"
  },
  "api/ZXing.Aztec.html": {
    "href": "api/ZXing.Aztec.html",
    "title": "Namespace ZXing.Aztec | Unity Algorand SDK",
    "keywords": "Namespace ZXing.Aztec Classes AztecEncodingOptions The class holds the available options for the AztecWriter AztecReader This implementation can detect and decode Aztec codes in an image. AztecResultMetadata Aztec result meta data. AztecWriter Renders an Aztec code as a"
  },
  "api/ZXing.Aztec.Internal.AztecCode.html": {
    "href": "api/ZXing.Aztec.Internal.AztecCode.html",
    "title": "Class AztecCode | Unity Algorand SDK",
    "keywords": "Class AztecCode Aztec 2D code representation Inheritance Object AztecCode Namespace : ZXing.Aztec.Internal Assembly : cs.temp.dll.dll Syntax public sealed class AztecCode Properties CodeWords Number of data codewords Declaration public int CodeWords { get; set; } Property Value Type Description Int32 isCompact Compact or full symbol indicator Declaration public bool isCompact { get; set; } Property Value Type Description Boolean Layers Number of levels Declaration public int Layers { get; set; } Property Value Type Description Int32 Matrix The symbol image Declaration public BitMatrix Matrix { get; set; } Property Value Type Description BitMatrix Size Size in pixels (width and height) Declaration public int Size { get; set; } Property Value Type Description Int32"
  },
  "api/ZXing.Aztec.Internal.AztecDetectorResult.html": {
    "href": "api/ZXing.Aztec.Internal.AztecDetectorResult.html",
    "title": "Class AztecDetectorResult | Unity Algorand SDK",
    "keywords": "Class AztecDetectorResult Extends with more information specific to the Aztec format, like the number of layers and whether it's compact. Inheritance Object AztecDetectorResult Namespace : ZXing.Aztec.Internal Assembly : cs.temp.dll.dll Syntax public class AztecDetectorResult : DetectorResult Constructors AztecDetectorResult(BitMatrix, ResultPoint[], Boolean, Int32, Int32) Initializes a new instance of the AztecDetectorResult class. Declaration public AztecDetectorResult(BitMatrix bits, ResultPoint[] points, bool compact, int nbDatablocks, int nbLayers) Parameters Type Name Description BitMatrix bits The bits. ResultPoint [] points The points. Boolean compact if set to true [compact]. Int32 nbDatablocks The nb datablocks. Int32 nbLayers The nb layers. Properties Compact Gets a value indicating whether this Aztec code is compact. Declaration public bool Compact { get; } Property Value Type Description Boolean true if compact; otherwise, false . NbDatablocks Gets the nb datablocks. Declaration public int NbDatablocks { get; } Property Value Type Description Int32 NbLayers Gets the nb layers. Declaration public int NbLayers { get; } Property Value Type Description Int32"
  },
  "api/ZXing.Aztec.Internal.BinaryShiftToken.html": {
    "href": "api/ZXing.Aztec.Internal.BinaryShiftToken.html",
    "title": "Class BinaryShiftToken | Unity Algorand SDK",
    "keywords": "Class BinaryShiftToken represents a token for a binary shift Inheritance Object Token BinaryShiftToken Inherited Members Token.EMPTY Token.Previous Token.add(Int32, Int32) Token.addBinaryShift(Int32, Int32) Namespace : ZXing.Aztec.Internal Assembly : cs.temp.dll.dll Syntax public sealed class BinaryShiftToken : Token Constructors BinaryShiftToken(Token, Int32, Int32) initializing constructor Declaration public BinaryShiftToken(Token previous, int binaryShiftStart, int binaryShiftByteCount) Parameters Type Name Description Token previous Int32 binaryShiftStart Int32 binaryShiftByteCount Methods appendTo(BitArray, Byte[]) appends the byte array to the BitArray Declaration public override void appendTo(BitArray bitArray, byte[] text) Parameters Type Name Description BitArray bitArray Byte [] text Overrides Token.appendTo(BitArray, Byte[]) ToString() string representation Declaration public override String ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/ZXing.Aztec.Internal.Decoder.html": {
    "href": "api/ZXing.Aztec.Internal.Decoder.html",
    "title": "Class Decoder | Unity Algorand SDK",
    "keywords": "Class Decoder The main class which implements Aztec Code decoding -- as opposed to locating and extracting the Aztec Code from an image. Inheritance Object Decoder Namespace : ZXing.Aztec.Internal Assembly : cs.temp.dll.dll Syntax public sealed class Decoder Methods decode(AztecDetectorResult) Decodes the specified detector result. Declaration public DecoderResult decode(AztecDetectorResult detectorResult) Parameters Type Name Description AztecDetectorResult detectorResult The detector result. Returns Type Description DecoderResult highLevelDecode(Boolean[]) This method is used for testing the high-level encoder Declaration public static String highLevelDecode(bool[] correctedBits) Parameters Type Name Description Boolean [] correctedBits Returns Type Description String"
  },
  "api/ZXing.Aztec.Internal.Detector.html": {
    "href": "api/ZXing.Aztec.Internal.Detector.html",
    "title": "Class Detector | Unity Algorand SDK",
    "keywords": "Class Detector Encapsulates logic that can detect an Aztec Code in an image, even if the Aztec Code is rotated or skewed, or partially obscured. Inheritance Object Detector Namespace : ZXing.Aztec.Internal Assembly : cs.temp.dll.dll Syntax public sealed class Detector Constructors Detector(BitMatrix) Initializes a new instance of the Detector class. Declaration public Detector(BitMatrix image) Parameters Type Name Description BitMatrix image The image. Methods detect() Detects an Aztec Code in an image. Declaration public AztecDetectorResult detect() Returns Type Description AztecDetectorResult detect(Boolean) Detects an Aztec Code in an image. Declaration public AztecDetectorResult detect(bool isMirror) Parameters Type Name Description Boolean isMirror if true, image is a mirror-image of original. Returns Type Description AztecDetectorResult encapsulating results of detecting an Aztec Code"
  },
  "api/ZXing.Aztec.Internal.Encoder.html": {
    "href": "api/ZXing.Aztec.Internal.Encoder.html",
    "title": "Class Encoder | Unity Algorand SDK",
    "keywords": "Class Encoder Generates Aztec 2D barcodes. Inheritance Object Encoder Namespace : ZXing.Aztec.Internal Assembly : cs.temp.dll.dll Syntax public static class Encoder Fields DEFAULT_AZTEC_LAYERS default layers 0 Declaration public const int DEFAULT_AZTEC_LAYERS = 0 Field Value Type Description Int32 DEFAULT_EC_PERCENT default EC percent 33 Declaration public const int DEFAULT_EC_PERCENT = 33 Field Value Type Description Int32 Methods encode(String) Encodes the given string content as an Aztec symbol (without ECI code) Declaration public static AztecCode encode(String data) Parameters Type Name Description String data input data string; must be encodable as ISO/IEC 8859-1 (Latin-1) Returns Type Description AztecCode Aztec symbol matrix with metadata encode(String, Int32, Int32) Declaration public static AztecCode encode(String data, int minECCPercent, int userSpecifiedLayers) Parameters Type Name Description String data input data string; must be encodable as ISO/IEC 8859-1 (Latin-1) Int32 minECCPercent minimal percentage of error check words (According to ISO/IEC 24778:2008, a minimum of 23% + 3 words is recommended) Int32 userSpecifiedLayers if non-zero, a user-specified value for the number of layers Returns Type Description AztecCode Aztec symbol matrix with metadata encode(String, Int32, Int32, Encoding) Encodes the given string content as an Aztec symbol Declaration public static AztecCode encode(String data, int minECCPercent, int userSpecifiedLayers, Encoding encoding) Parameters Type Name Description String data input data string Int32 minECCPercent minimal percentage of error check words (According to ISO/IEC 24778:2008, a minimum of 23% + 3 words is recommended) Int32 userSpecifiedLayers if non-zero, a user-specified value for the number of layers Encoding encoding character set in which to encode string using ECI; if null, no ECI code will be inserted, and the string must be encodable as ISO/IEC 8859-1 (Latin-1), the default encoding of the symbol. Returns Type Description AztecCode Aztec symbol matrix with metadata encode(String, Int32, Int32, Encoding, Boolean) Encodes the given string content as an Aztec symbol Declaration public static AztecCode encode(String data, int minECCPercent, int userSpecifiedLayers, Encoding encoding, bool disableEci) Parameters Type Name Description String data input data string Int32 minECCPercent minimal percentage of error check words (According to ISO/IEC 24778:2008, a minimum of 23% + 3 words is recommended) Int32 userSpecifiedLayers if non-zero, a user-specified value for the number of layers Encoding encoding character set in which to encode string using ECI; if null, no ECI code will be inserted, and the string must be encodable as ISO/IEC 8859-1 (Latin-1), the default encoding of the symbol. Boolean disableEci if true, dont't add ECI segment Returns Type Description AztecCode Aztec symbol matrix with metadata encode(Byte[]) Encodes the given binary content as an Aztec symbol (without ECI code) Declaration public static AztecCode encode(byte[] data) Parameters Type Name Description Byte [] data input data Returns Type Description AztecCode Aztec symbol matrix with metadata encode(Byte[], Int32, Int32) Encodes the given binary content as an Aztec symbol (without ECI code) Declaration public static AztecCode encode(byte[] data, int minECCPercent, int userSpecifiedLayers) Parameters Type Name Description Byte [] data input data string Int32 minECCPercent minimal percentage of error check words (According to ISO/IEC 24778:2008, a minimum of 23% + 3 words is recommended) Int32 userSpecifiedLayers if non-zero, a user-specified value for the number of layers Returns Type Description AztecCode Aztec symbol matrix with metadata encode(Byte[], Int32, Int32, Encoding) Encodes the given binary content as an Aztec symbol Declaration public static AztecCode encode(byte[] data, int minECCPercent, int userSpecifiedLayers, Encoding encoding) Parameters Type Name Description Byte [] data input data string Int32 minECCPercent minimal percentage of error check words (According to ISO/IEC 24778:2008, a minimum of 23% + 3 words is recommended) Int32 userSpecifiedLayers if non-zero, a user-specified value for the number of layers Encoding encoding character set to mark using ECI; if null, no ECI code will be inserted, and the default encoding of ISO/IEC 8859-1 will be assuming by readers. Returns Type Description AztecCode Aztec symbol matrix with metadata encode(Byte[], Int32, Int32, Encoding, Boolean) Encodes the given binary content as an Aztec symbol Declaration public static AztecCode encode(byte[] data, int minECCPercent, int userSpecifiedLayers, Encoding encoding, bool disableEci) Parameters Type Name Description Byte [] data input data string Int32 minECCPercent minimal percentage of error check words (According to ISO/IEC 24778:2008, a minimum of 23% + 3 words is recommended) Int32 userSpecifiedLayers if non-zero, a user-specified value for the number of layers Encoding encoding character set to mark using ECI; if null, no ECI code will be inserted, and the default encoding of ISO/IEC 8859-1 will be assuming by readers. Boolean disableEci if true, don't add ECI segment, regardless if encoding ist set Returns Type Description AztecCode Aztec symbol matrix with metadata"
  },
  "api/ZXing.Aztec.Internal.HighLevelEncoder.html": {
    "href": "api/ZXing.Aztec.Internal.HighLevelEncoder.html",
    "title": "Class HighLevelEncoder | Unity Algorand SDK",
    "keywords": "Class HighLevelEncoder This produces nearly optimal encodings of text into the first-level of encoding used by Aztec code. It uses a dynamic algorithm. For each prefix of the string, it determines a set of encodings that could lead to this prefix. We repeatedly add a character and generate a new set of optimal encodings until we have read through the entire input. @author Frank Yellin @author Rustam Abdullaev Inheritance Object HighLevelEncoder Namespace : ZXing.Aztec.Internal Assembly : cs.temp.dll.dll Syntax public sealed class HighLevelEncoder Constructors HighLevelEncoder(Byte[]) Declaration public HighLevelEncoder(byte[] text) Parameters Type Name Description Byte [] text HighLevelEncoder(Byte[], Encoding) Declaration public HighLevelEncoder(byte[] text, Encoding encoding) Parameters Type Name Description Byte [] text Encoding encoding HighLevelEncoder(Byte[], Encoding, Boolean) Declaration public HighLevelEncoder(byte[] text, Encoding encoding, bool disableEci) Parameters Type Name Description Byte [] text Encoding encoding Boolean disableEci if true, disable ECI segment Methods encode() Convert the text represented by this High Level Encoder into a BitArray. Declaration public BitArray encode() Returns Type Description BitArray text represented by this encoder encoded as a"
  },
  "api/ZXing.Aztec.Internal.html": {
    "href": "api/ZXing.Aztec.Internal.html",
    "title": "Namespace ZXing.Aztec.Internal | Unity Algorand SDK",
    "keywords": "Namespace ZXing.Aztec.Internal Classes AztecCode Aztec 2D code representation AztecDetectorResult Extends with more information specific to the Aztec format, like the number of layers and whether it's compact. BinaryShiftToken represents a token for a binary shift Decoder The main class which implements Aztec Code decoding -- as opposed to locating and extracting the Aztec Code from an image. Detector Encapsulates logic that can detect an Aztec Code in an image, even if the Aztec Code is rotated or skewed, or partially obscured. Encoder Generates Aztec 2D barcodes. HighLevelEncoder This produces nearly optimal encodings of text into the first-level of encoding used by Aztec code. It uses a dynamic algorithm. For each prefix of the string, it determines a set of encodings that could lead to this prefix. We repeatedly add a character and generate a new set of optimal encodings until we have read through the entire input. @author Frank Yellin @author Rustam Abdullaev SimpleToken Token"
  },
  "api/ZXing.Aztec.Internal.SimpleToken.html": {
    "href": "api/ZXing.Aztec.Internal.SimpleToken.html",
    "title": "Class SimpleToken | Unity Algorand SDK",
    "keywords": "Class SimpleToken Inheritance Object Token SimpleToken Inherited Members Token.EMPTY Token.Previous Token.add(Int32, Int32) Token.addBinaryShift(Int32, Int32) Namespace : ZXing.Aztec.Internal Assembly : cs.temp.dll.dll Syntax public sealed class SimpleToken : Token Constructors SimpleToken(Token, Int32, Int32) initializing constructor Declaration public SimpleToken(Token previous, int value, int bitCount) Parameters Type Name Description Token previous Int32 value Int32 bitCount Methods appendTo(BitArray, Byte[]) append token to bitarray Declaration public override void appendTo(BitArray bitArray, byte[] text) Parameters Type Name Description BitArray bitArray Byte [] text Overrides Token.appendTo(BitArray, Byte[]) ToString() string representation Declaration public override String ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/ZXing.Aztec.Internal.Token.html": {
    "href": "api/ZXing.Aztec.Internal.Token.html",
    "title": "Class Token | Unity Algorand SDK",
    "keywords": "Class Token Inheritance Object Token BinaryShiftToken SimpleToken Namespace : ZXing.Aztec.Internal Assembly : cs.temp.dll.dll Syntax public abstract class Token Constructors Token(Token) constructor Declaration protected Token(Token previous) Parameters Type Name Description Token previous Fields EMPTY represents an empty token Declaration public static Token EMPTY Field Value Type Description Token Properties Previous previous token Declaration public Token Previous { get; } Property Value Type Description Token Methods add(Int32, Int32) adds a new simple token Declaration public Token add(int value, int bitCount) Parameters Type Name Description Int32 value Int32 bitCount Returns Type Description Token addBinaryShift(Int32, Int32) Declaration public Token addBinaryShift(int start, int byteCount) Parameters Type Name Description Int32 start Int32 byteCount Returns Type Description Token appendTo(BitArray, Byte[]) append to bitarray Declaration public abstract void appendTo(BitArray bitArray, byte[] text) Parameters Type Name Description BitArray bitArray Byte [] text"
  },
  "api/ZXing.BarcodeFormat.html": {
    "href": "api/ZXing.BarcodeFormat.html",
    "title": "Enum BarcodeFormat | Unity Algorand SDK",
    "keywords": "Enum BarcodeFormat Enumerates barcode formats known to this package. Namespace : ZXing Assembly : cs.temp.dll.dll Syntax [Flags] public enum BarcodeFormat Fields Name Description All_1D UPC_A | UPC_E | EAN_13 | EAN_8 | CODABAR | CODE_39 | CODE_93 | CODE_128 | ITF | RSS_14 | RSS_EXPANDED without MSI (to many false-positives) and IMB (not enough tested, and it looks more like a 2D) AZTEC Aztec 2D barcode format. CODABAR CODABAR 1D format. CODE_128 Code 128 1D format. CODE_39 Code 39 1D format. CODE_93 Code 93 1D format. DATA_MATRIX Data Matrix 2D barcode format. EAN_13 EAN-13 1D format. EAN_8 EAN-8 1D format. IMB Intelligent Mail barcode ITF ITF (Interleaved Two of Five) 1D format. MAXICODE MaxiCode 2D barcode format. MSI MSI PDF_417 PDF417 format. PHARMA_CODE Pharmacode format. PLESSEY Plessey QR_CODE QR Code 2D barcode format. RSS_14 RSS 14 RSS_EXPANDED RSS EXPANDED UPC_A UPC-A 1D format. UPC_E UPC-E 1D format. UPC_EAN_EXTENSION UPC/EAN extension format. Not a stand-alone format."
  },
  "api/ZXing.BarcodeReader.html": {
    "href": "api/ZXing.BarcodeReader.html",
    "title": "Class BarcodeReader | Unity Algorand SDK",
    "keywords": "Class BarcodeReader A smart class to decode the barcode inside a bitmap object Inheritance Object BarcodeReaderGeneric BarcodeReader Implements IBarcodeReaderGeneric IBarcodeReader Inherited Members BarcodeReaderGeneric.defaultCreateRGBLuminanceSource BarcodeReaderGeneric.Options BarcodeReaderGeneric.Reader BarcodeReaderGeneric.ResultPointFound BarcodeReaderGeneric.ResultFound BarcodeReaderGeneric.AutoRotate BarcodeReaderGeneric.TryInverted BarcodeReaderGeneric.CreateBinarizer BarcodeReaderGeneric.Decode(LuminanceSource) BarcodeReaderGeneric.DecodeMultiple(LuminanceSource) BarcodeReaderGeneric.OnResultsFound(IEnumerable<Result>) BarcodeReaderGeneric.OnResultFound(Result) BarcodeReaderGeneric.OnResultPointFound(ResultPoint) BarcodeReaderGeneric.Decode(Byte[], Int32, Int32, RGBLuminanceSource.BitmapFormat) BarcodeReaderGeneric.DecodeMultiple(Byte[], Int32, Int32, RGBLuminanceSource.BitmapFormat) Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public class BarcodeReader : BarcodeReaderGeneric, IBarcodeReaderGeneric, IBarcodeReader Constructors BarcodeReader() Initializes a new instance of the BarcodeReader class. Declaration public BarcodeReader() BarcodeReader(Reader, Func<Color32[], Int32, Int32, LuminanceSource>, Func<LuminanceSource, Binarizer>) Initializes a new instance of the BarcodeReader class. Declaration public BarcodeReader(Reader reader, Func<Color32[], int, int, LuminanceSource> createLuminanceSource, Func<LuminanceSource, Binarizer> createBinarizer) Parameters Type Name Description Reader reader Sets the reader which should be used to find and decode the barcode. If null then MultiFormatReader is used Func < Color32 [], Int32 , Int32 , LuminanceSource > createLuminanceSource Sets the function to create a luminance source object for a bitmap. If null, an exception is thrown when Decode is called Func < LuminanceSource , Binarizer > createBinarizer Sets the function to create a binarizer object for a luminance source. If null then HybridBinarizer is used BarcodeReader(Reader, Func<Color32[], Int32, Int32, LuminanceSource>, Func<LuminanceSource, Binarizer>, Func<Byte[], Int32, Int32, RGBLuminanceSource.BitmapFormat, LuminanceSource>) Initializes a new instance of the BarcodeReader class. Declaration public BarcodeReader(Reader reader, Func<Color32[], int, int, LuminanceSource> createLuminanceSource, Func<LuminanceSource, Binarizer> createBinarizer, Func<byte[], int, int, RGBLuminanceSource.BitmapFormat, LuminanceSource> createRGBLuminanceSource) Parameters Type Name Description Reader reader Sets the reader which should be used to find and decode the barcode. If null then MultiFormatReader is used Func < Color32 [], Int32 , Int32 , LuminanceSource > createLuminanceSource Sets the function to create a luminance source object for a bitmap. If null, an exception is thrown when Decode is called Func < LuminanceSource , Binarizer > createBinarizer Sets the function to create a binarizer object for a luminance source. If null then HybridBinarizer is used Func < Byte [], Int32 , Int32 , RGBLuminanceSource.BitmapFormat , LuminanceSource > createRGBLuminanceSource Sets the function to create a luminance source object for a rgb raw byte array. Properties CreateLuminanceSource Optional: Gets or sets the function to create a luminance source object for a bitmap. If null a platform specific default LuminanceSource is used Declaration protected Func<Color32[], int, int, LuminanceSource> CreateLuminanceSource { get; } Property Value Type Description Func < Color32 [], Int32 , Int32 , LuminanceSource > The function to create a luminance source object. Methods Decode(Color32[], Int32, Int32) Decodes the specified barcode bitmap. Declaration public Result Decode(Color32[] rawColor32, int width, int height) Parameters Type Name Description Color32 [] rawColor32 Int32 width Int32 height Returns Type Description Result the result data or null DecodeMultiple(Color32[], Int32, Int32) Decodes the specified barcode bitmap. Declaration public Result[] DecodeMultiple(Color32[] rawColor32, int width, int height) Parameters Type Name Description Color32 [] rawColor32 Int32 width Int32 height Returns Type Description Result [] the result data or null Implements IBarcodeReaderGeneric IBarcodeReader"
  },
  "api/ZXing.BarcodeReader-1.html": {
    "href": "api/ZXing.BarcodeReader-1.html",
    "title": "Class BarcodeReader<T> | Unity Algorand SDK",
    "keywords": "Class BarcodeReader<T> A smart class to decode the barcode inside a bitmap object Inheritance Object BarcodeReaderGeneric BarcodeReader<T> Implements IBarcodeReaderGeneric IBarcodeReader <T> Inherited Members BarcodeReaderGeneric.defaultCreateRGBLuminanceSource BarcodeReaderGeneric.Options BarcodeReaderGeneric.Reader BarcodeReaderGeneric.ResultPointFound BarcodeReaderGeneric.ResultFound BarcodeReaderGeneric.AutoRotate BarcodeReaderGeneric.TryInverted BarcodeReaderGeneric.CreateBinarizer BarcodeReaderGeneric.Decode(LuminanceSource) BarcodeReaderGeneric.DecodeMultiple(LuminanceSource) BarcodeReaderGeneric.OnResultsFound(IEnumerable<Result>) BarcodeReaderGeneric.OnResultFound(Result) BarcodeReaderGeneric.OnResultPointFound(ResultPoint) BarcodeReaderGeneric.Decode(Byte[], Int32, Int32, RGBLuminanceSource.BitmapFormat) BarcodeReaderGeneric.DecodeMultiple(Byte[], Int32, Int32, RGBLuminanceSource.BitmapFormat) Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public class BarcodeReader<T> : BarcodeReaderGeneric, IBarcodeReaderGeneric, IBarcodeReader<T> Type Parameters Name Description T Constructors BarcodeReader(Func<T, LuminanceSource>) Initializes a new instance of the BarcodeReader<T> class. Declaration public BarcodeReader(Func<T, LuminanceSource> createLuminanceSource) Parameters Type Name Description Func <T, LuminanceSource > createLuminanceSource BarcodeReader(Reader, Func<T, LuminanceSource>, Func<LuminanceSource, Binarizer>) Initializes a new instance of the BarcodeReader<T> class. Declaration public BarcodeReader(Reader reader, Func<T, LuminanceSource> createLuminanceSource, Func<LuminanceSource, Binarizer> createBinarizer) Parameters Type Name Description Reader reader Sets the reader which should be used to find and decode the barcode. If null then MultiFormatReader is used Func <T, LuminanceSource > createLuminanceSource Sets the function to create a luminance source object for a bitmap. If null, an exception is thrown when Decode is called Func < LuminanceSource , Binarizer > createBinarizer Sets the function to create a binarizer object for a luminance source. If null then HybridBinarizer is used BarcodeReader(Reader, Func<T, LuminanceSource>, Func<LuminanceSource, Binarizer>, Func<Byte[], Int32, Int32, RGBLuminanceSource.BitmapFormat, LuminanceSource>) Initializes a new instance of the BarcodeReader<T> class. Declaration public BarcodeReader(Reader reader, Func<T, LuminanceSource> createLuminanceSource, Func<LuminanceSource, Binarizer> createBinarizer, Func<byte[], int, int, RGBLuminanceSource.BitmapFormat, LuminanceSource> createRGBLuminanceSource) Parameters Type Name Description Reader reader Sets the reader which should be used to find and decode the barcode. If null then MultiFormatReader is used Func <T, LuminanceSource > createLuminanceSource Sets the function to create a luminance source object for a bitmap. If null, an exception is thrown when Decode is called Func < LuminanceSource , Binarizer > createBinarizer Sets the function to create a binarizer object for a luminance source. If null then HybridBinarizer is used Func < Byte [], Int32 , Int32 , RGBLuminanceSource.BitmapFormat , LuminanceSource > createRGBLuminanceSource Sets the function to create a luminance source object for a rgb raw byte array. BarcodeReader(Reader, Func<LuminanceSource, Binarizer>, Func<Byte[], Int32, Int32, RGBLuminanceSource.BitmapFormat, LuminanceSource>) Constructor for additional image formats for one BarcodeReader class Declaration protected BarcodeReader(Reader reader, Func<LuminanceSource, Binarizer> createBinarizer, Func<byte[], int, int, RGBLuminanceSource.BitmapFormat, LuminanceSource> createRGBLuminanceSource) Parameters Type Name Description Reader reader Sets the reader which should be used to find and decode the barcode. If null then MultiFormatReader is used Func < LuminanceSource , Binarizer > createBinarizer Sets the function to create a binarizer object for a luminance source. If null then HybridBinarizer is used Func < Byte [], Int32 , Int32 , RGBLuminanceSource.BitmapFormat , LuminanceSource > createRGBLuminanceSource Sets the function to create a luminance source object for a rgb raw byte array. Properties CreateLuminanceSource Optional: Gets or sets the function to create a luminance source object for a bitmap. If null a platform specific default LuminanceSource is used Declaration protected Func<T, LuminanceSource> CreateLuminanceSource { get; } Property Value Type Description Func <T, LuminanceSource > The function to create a luminance source object. Methods Decode(T) Decodes the specified barcode bitmap. Declaration public Result Decode(T barcodeBitmap) Parameters Type Name Description T barcodeBitmap The barcode bitmap. Returns Type Description Result the result data or null DecodeMultiple(T) Decodes the specified barcode bitmap. Declaration public Result[] DecodeMultiple(T barcodeBitmap) Parameters Type Name Description T barcodeBitmap The barcode bitmap. Returns Type Description Result [] the result data or null Implements IBarcodeReaderGeneric IBarcodeReader<T>"
  },
  "api/ZXing.BarcodeReaderGeneric.html": {
    "href": "api/ZXing.BarcodeReaderGeneric.html",
    "title": "Class BarcodeReaderGeneric | Unity Algorand SDK",
    "keywords": "Class BarcodeReaderGeneric A smart class to decode the barcode inside a bitmap object Inheritance Object BarcodeReaderGeneric BarcodeReader BarcodeReader<T> Implements IBarcodeReaderGeneric Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public class BarcodeReaderGeneric : IBarcodeReaderGeneric Constructors BarcodeReaderGeneric() Initializes a new instance of the BarcodeReaderGeneric class. Declaration public BarcodeReaderGeneric() BarcodeReaderGeneric(Reader, Func<LuminanceSource, Binarizer>, Func<Byte[], Int32, Int32, RGBLuminanceSource.BitmapFormat, LuminanceSource>) Initializes a new instance of the BarcodeReaderGeneric class. Declaration public BarcodeReaderGeneric(Reader reader, Func<LuminanceSource, Binarizer> createBinarizer, Func<byte[], int, int, RGBLuminanceSource.BitmapFormat, LuminanceSource> createRGBLuminanceSource) Parameters Type Name Description Reader reader Sets the reader which should be used to find and decode the barcode. If null then MultiFormatReader is used Func < LuminanceSource , Binarizer > createBinarizer Sets the function to create a binarizer object for a luminance source. If null then HybridBinarizer is used Func < Byte [], Int32 , Int32 , RGBLuminanceSource.BitmapFormat , LuminanceSource > createRGBLuminanceSource Sets the function to create a luminance source object for a rgb array. If null the RGBLuminanceSource is used. The handler is only called when Decode with a byte[] array is called. Fields defaultCreateRGBLuminanceSource represents the default function which is called to get a RGBLuminanceSource instance from a raw byte array Declaration protected static readonly Func<byte[], int, int, RGBLuminanceSource.BitmapFormat, LuminanceSource> defaultCreateRGBLuminanceSource Field Value Type Description Func < Byte [], Int32 , Int32 , RGBLuminanceSource.BitmapFormat , LuminanceSource > Properties AutoRotate Gets or sets a value indicating whether the image should be automatically rotated. Rotation is supported for 90, 180 and 270 degrees Declaration public bool AutoRotate { get; set; } Property Value Type Description Boolean true if image should be rotated; otherwise, false . CreateBinarizer Optional: Gets or sets the function to create a binarizer object for a luminance source. If null then HybridBinarizer is used Declaration protected Func<LuminanceSource, Binarizer> CreateBinarizer { get; } Property Value Type Description Func < LuminanceSource , Binarizer > The function to create a binarizer object. Options Gets or sets the options. Declaration public DecodingOptions Options { get; set; } Property Value Type Description DecodingOptions The options. Reader Gets the reader which should be used to find and decode the barcode. Declaration protected Reader Reader { get; } Property Value Type Description Reader The reader. TryInverted Gets or sets a value indicating whether the image should be automatically inverted if no result is found in the original image. ATTENTION: Please be carefully because it slows down the decoding process if it is used Declaration public bool TryInverted { get; set; } Property Value Type Description Boolean true if image should be inverted; otherwise, false . Methods Decode(Byte[], Int32, Int32, RGBLuminanceSource.BitmapFormat) Decodes the specified barcode bitmap. Declaration public Result Decode(byte[] rawRGB, int width, int height, RGBLuminanceSource.BitmapFormat format) Parameters Type Name Description Byte [] rawRGB The image as byte[] array. Int32 width The width. Int32 height The height. RGBLuminanceSource.BitmapFormat format The format. Returns Type Description Result the result data or null Decode(LuminanceSource) Tries to decode a barcode within an image which is given by a luminance source. That method gives a chance to prepare a luminance source completely before calling the time consuming decoding method. On the other hand there is a chance to create a luminance source which is independent from external resources (like Bitmap objects) and the decoding call can be made in a background thread. Declaration public virtual Result Decode(LuminanceSource luminanceSource) Parameters Type Name Description LuminanceSource luminanceSource The luminance source. Returns Type Description Result DecodeMultiple(Byte[], Int32, Int32, RGBLuminanceSource.BitmapFormat) Decodes the specified barcode bitmap. Declaration public Result[] DecodeMultiple(byte[] rawRGB, int width, int height, RGBLuminanceSource.BitmapFormat format) Parameters Type Name Description Byte [] rawRGB The image as byte[] array. Int32 width The width. Int32 height The height. RGBLuminanceSource.BitmapFormat format The format. Returns Type Description Result [] the result data or null DecodeMultiple(LuminanceSource) Tries to decode barcodes within an image which is given by a luminance source. That method gives a chance to prepare a luminance source completely before calling the time consuming decoding method. On the other hand there is a chance to create a luminance source which is independent from external resources (like Bitmap objects) and the decoding call can be made in a background thread. Declaration public virtual Result[] DecodeMultiple(LuminanceSource luminanceSource) Parameters Type Name Description LuminanceSource luminanceSource The luminance source. Returns Type Description Result [] OnResultFound(Result) raises the ResultFound event Declaration protected void OnResultFound(Result result) Parameters Type Name Description Result result OnResultPointFound(ResultPoint) calls the explicitResultPointFound action Declaration protected void OnResultPointFound(ResultPoint resultPoint) Parameters Type Name Description ResultPoint resultPoint OnResultsFound(IEnumerable<Result>) raises the ResultFound event Declaration protected void OnResultsFound(IEnumerable<Result> results) Parameters Type Name Description IEnumerable < Result > results Events ResultFound event is executed if a result was found via decode Declaration public event Action<Result> ResultFound Event Type Type Description Action < Result > ResultPointFound Gets or sets a method which is called if an important point is found Declaration public event Action<ResultPoint> ResultPointFound Event Type Type Description Action < ResultPoint > The result point callback. Implements IBarcodeReaderGeneric"
  },
  "api/ZXing.BarcodeWriter.html": {
    "href": "api/ZXing.BarcodeWriter.html",
    "title": "Class BarcodeWriter | Unity Algorand SDK",
    "keywords": "Class BarcodeWriter A smart class to encode some content to a barcode image Inheritance Object BarcodeWriterGeneric BarcodeWriter < UnityEngine.Color32 []> BarcodeWriter Implements IBarcodeWriterGeneric IBarcodeWriter < UnityEngine.Color32 []> IBarcodeWriter Inherited Members BarcodeWriter<UnityEngine.Color32[]>.Renderer BarcodeWriter<UnityEngine.Color32[]>.Write(String) BarcodeWriter<UnityEngine.Color32[]>.Write(BitMatrix) BarcodeWriterGeneric.Format BarcodeWriterGeneric.Options BarcodeWriterGeneric.Encoder BarcodeWriterGeneric.Encode(String) Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public class BarcodeWriter : BarcodeWriter<UnityEngine.Color32[]>, IBarcodeWriterGeneric, IBarcodeWriter<UnityEngine.Color32[]>, IBarcodeWriter Constructors BarcodeWriter() Initializes a new instance of the BarcodeWriter class. Declaration public BarcodeWriter() Implements IBarcodeWriterGeneric IBarcodeWriter<TOutput> IBarcodeWriter"
  },
  "api/ZXing.BarcodeWriter-1.html": {
    "href": "api/ZXing.BarcodeWriter-1.html",
    "title": "Class BarcodeWriter<TOutput> | Unity Algorand SDK",
    "keywords": "Class BarcodeWriter<TOutput> A base class for specific barcode writers with specific formats of barcode images. Inheritance Object BarcodeWriterGeneric BarcodeWriter<TOutput> BarcodeWriter BarcodeWriterPixelData BarcodeWriterSvg Implements IBarcodeWriterGeneric IBarcodeWriter <TOutput> Inherited Members BarcodeWriterGeneric.Format BarcodeWriterGeneric.Options BarcodeWriterGeneric.Encoder BarcodeWriterGeneric.Encode(String) Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public class BarcodeWriter<TOutput> : BarcodeWriterGeneric, IBarcodeWriterGeneric, IBarcodeWriter<TOutput> Type Parameters Name Description TOutput The type of the output. Properties Renderer Gets or sets the renderer which should be used to render the encoded BitMatrix. Declaration public IBarcodeRenderer<TOutput> Renderer { get; set; } Property Value Type Description IBarcodeRenderer <TOutput> Methods Write(BitMatrix) Returns a rendered instance of the barcode which is given by a BitMatrix. For rendering the instance of the property Renderer is used and has to be set before calling that method. Declaration public TOutput Write(BitMatrix matrix) Parameters Type Name Description BitMatrix matrix The matrix. Returns Type Description TOutput Write(String) Encodes the specified contents and returns a rendered instance of the barcode. For rendering the instance of the property Renderer is used and has to be set before calling that method. Declaration public TOutput Write(string contents) Parameters Type Name Description String contents The contents. Returns Type Description TOutput Implements IBarcodeWriterGeneric IBarcodeWriter<TOutput>"
  },
  "api/ZXing.BarcodeWriterGeneric.html": {
    "href": "api/ZXing.BarcodeWriterGeneric.html",
    "title": "Class BarcodeWriterGeneric | Unity Algorand SDK",
    "keywords": "Class BarcodeWriterGeneric A base class for specific barcode writers with specific formats of barcode images. Inheritance Object BarcodeWriterGeneric BarcodeWriter<TOutput> Implements IBarcodeWriterGeneric Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public class BarcodeWriterGeneric : IBarcodeWriterGeneric Constructors BarcodeWriterGeneric() Declaration public BarcodeWriterGeneric() BarcodeWriterGeneric(Writer) Declaration public BarcodeWriterGeneric(Writer encoder) Parameters Type Name Description Writer encoder Properties Encoder Gets or sets the writer which encodes the content to a BitMatrix. If no value is set the MultiFormatWriter is used. Declaration public Writer Encoder { get; set; } Property Value Type Description Writer Format Gets or sets the barcode format. The value is only suitable if the MultiFormatWriter is used. Declaration public BarcodeFormat Format { get; set; } Property Value Type Description BarcodeFormat Options Gets or sets the options container for the encoding and renderer process. Declaration public EncodingOptions Options { get; set; } Property Value Type Description EncodingOptions Methods Encode(String) Encodes the specified contents and returns a BitMatrix array. That array has to be rendered manually or with a IBarcodeRenderer. Declaration public BitMatrix Encode(string contents) Parameters Type Name Description String contents The contents. Returns Type Description BitMatrix Implements IBarcodeWriterGeneric"
  },
  "api/ZXing.BarcodeWriterPixelData.html": {
    "href": "api/ZXing.BarcodeWriterPixelData.html",
    "title": "Class BarcodeWriterPixelData | Unity Algorand SDK",
    "keywords": "Class BarcodeWriterPixelData A smart class to encode some content to raw pixel data Inheritance Object BarcodeWriterGeneric BarcodeWriter < PixelData > BarcodeWriterPixelData Implements IBarcodeWriterGeneric IBarcodeWriter < PixelData > IBarcodeWriterPixelData Inherited Members BarcodeWriter<PixelData>.Renderer BarcodeWriter<PixelData>.Write(String) BarcodeWriter<PixelData>.Write(BitMatrix) BarcodeWriterGeneric.Format BarcodeWriterGeneric.Options BarcodeWriterGeneric.Encoder BarcodeWriterGeneric.Encode(String) Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public class BarcodeWriterPixelData : BarcodeWriter<PixelData>, IBarcodeWriterGeneric, IBarcodeWriter<PixelData>, IBarcodeWriterPixelData Constructors BarcodeWriterPixelData() Initializes a new instance of the BarcodeWriterPixelData class. Declaration public BarcodeWriterPixelData() Implements IBarcodeWriterGeneric IBarcodeWriter<TOutput> IBarcodeWriterPixelData"
  },
  "api/ZXing.BarcodeWriterSvg.html": {
    "href": "api/ZXing.BarcodeWriterSvg.html",
    "title": "Class BarcodeWriterSvg | Unity Algorand SDK",
    "keywords": "Class BarcodeWriterSvg A smart class to encode some content to a svg barcode image Inheritance Object BarcodeWriterGeneric BarcodeWriter < SvgRenderer.SvgImage > BarcodeWriterSvg Implements IBarcodeWriterGeneric IBarcodeWriter < SvgRenderer.SvgImage > IBarcodeWriterSvg Inherited Members BarcodeWriter<SvgRenderer.SvgImage>.Renderer BarcodeWriter<SvgRenderer.SvgImage>.Write(String) BarcodeWriter<SvgRenderer.SvgImage>.Write(BitMatrix) BarcodeWriterGeneric.Format BarcodeWriterGeneric.Options BarcodeWriterGeneric.Encoder BarcodeWriterGeneric.Encode(String) Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public class BarcodeWriterSvg : BarcodeWriter<SvgRenderer.SvgImage>, IBarcodeWriterGeneric, IBarcodeWriter<SvgRenderer.SvgImage>, IBarcodeWriterSvg Constructors BarcodeWriterSvg() Initializes a new instance of the BarcodeWriterSvg class. Declaration public BarcodeWriterSvg() Implements IBarcodeWriterGeneric IBarcodeWriter<TOutput> IBarcodeWriterSvg"
  },
  "api/ZXing.BaseLuminanceSource.html": {
    "href": "api/ZXing.BaseLuminanceSource.html",
    "title": "Class BaseLuminanceSource | Unity Algorand SDK",
    "keywords": "Class BaseLuminanceSource The base class for luminance sources which supports cropping and rotating based upon the luminance values. Inheritance Object LuminanceSource BaseLuminanceSource Color32LuminanceSource PlanarYUVLuminanceSource RGBLuminanceSource Inherited Members LuminanceSource.Width LuminanceSource.Height LuminanceSource.ToString() Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public abstract class BaseLuminanceSource : LuminanceSource Constructors BaseLuminanceSource(Byte[], Int32, Int32) Initializes a new instance of the BaseLuminanceSource class. Declaration protected BaseLuminanceSource(byte[] luminanceArray, int width, int height) Parameters Type Name Description Byte [] luminanceArray The luminance array. Int32 width The width. Int32 height The height. BaseLuminanceSource(Int32, Int32) Initializes a new instance of the BaseLuminanceSource class. Declaration protected BaseLuminanceSource(int width, int height) Parameters Type Name Description Int32 width The width. Int32 height The height. Fields BChannelWeight weight of the blue channel for calculating a gray scale image Declaration protected const int BChannelWeight = 7424 Field Value Type Description Int32 ChannelWeight numbers of bits which for right shifting Declaration protected const int ChannelWeight = 16 Field Value Type Description Int32 GChannelWeight weight of the green channel for calculating a gray scale image Declaration protected const int GChannelWeight = 38550 Field Value Type Description Int32 luminances Declaration protected byte[] luminances Field Value Type Description Byte [] RChannelWeight weight of the red channel for calculating a gray scale image Declaration protected const int RChannelWeight = 19562 Field Value Type Description Int32 Properties CropSupported Declaration public override bool CropSupported { get; } Property Value Type Description Boolean Whether this subclass supports cropping. Overrides LuminanceSource.CropSupported InversionSupported Declaration public override bool InversionSupported { get; } Property Value Type Description Boolean Whether this subclass supports invertion. Overrides LuminanceSource.InversionSupported Matrix gets the luminance matrix Declaration public override byte[] Matrix { get; } Property Value Type Description Byte [] Overrides LuminanceSource.Matrix RotateSupported Declaration public override bool RotateSupported { get; } Property Value Type Description Boolean Whether this subclass supports counter-clockwise rotation. Overrides LuminanceSource.RotateSupported Methods CreateLuminanceSource(Byte[], Int32, Int32) Should create a new luminance source with the right class type. The method is used in methods crop and rotate. Declaration protected abstract LuminanceSource CreateLuminanceSource(byte[] newLuminances, int width, int height) Parameters Type Name Description Byte [] newLuminances The new luminances. Int32 width The width. Int32 height The height. Returns Type Description LuminanceSource crop(Int32, Int32, Int32, Int32) Returns a new object with cropped image data. Implementations may keep a reference to the original data rather than a copy. Only callable if CropSupported is true. Declaration public override LuminanceSource crop(int left, int top, int width, int height) Parameters Type Name Description Int32 left The left coordinate, 0 <= left < Width. Int32 top The top coordinate, 0 <= top <= Height. Int32 width The width of the rectangle to crop. Int32 height The height of the rectangle to crop. Returns Type Description LuminanceSource A cropped version of this object. Overrides LuminanceSource.crop(Int32, Int32, Int32, Int32) getRow(Int32, Byte[]) Fetches one row of luminance data from the underlying platform's bitmap. Values range from 0 (black) to 255 (white). It is preferable for implementations of this method to only fetch this row rather than the whole image, since no 2D Readers may be installed and getMatrix() may never be called. Declaration public override byte[] getRow(int y, byte[] row) Parameters Type Name Description Int32 y The row to fetch, 0 <= y < Height. Byte [] row An optional preallocated array. If null or too small, it will be ignored. Always use the returned object, and ignore the .length of the array. Returns Type Description Byte [] An array containing the luminance data. Overrides LuminanceSource.getRow(Int32, Byte[]) invert() Inverts the luminance values (newValue = 255 - oldValue) Declaration public override LuminanceSource invert() Returns Type Description LuminanceSource Overrides LuminanceSource.invert() rotateCounterClockwise() Returns a new object with rotated image data by 90 degrees counterclockwise. Only callable if {@link #isRotateSupported()} is true. Declaration public override LuminanceSource rotateCounterClockwise() Returns Type Description LuminanceSource A rotated version of this object. Overrides LuminanceSource.rotateCounterClockwise() rotateCounterClockwise45() TODO: not implemented yet Declaration public override LuminanceSource rotateCounterClockwise45() Returns Type Description LuminanceSource A rotated version of this object. Overrides LuminanceSource.rotateCounterClockwise45()"
  },
  "api/ZXing.Binarizer.html": {
    "href": "api/ZXing.Binarizer.html",
    "title": "Class Binarizer | Unity Algorand SDK",
    "keywords": "Class Binarizer This class hierarchy provides a set of methods to convert luminance data to 1 bit data. It allows the algorithm to vary polymorphically, for example allowing a very expensive thresholding technique for servers and a fast one for mobile. It also permits the implementation to vary, e.g. a JNI version for Android and a Java fallback version for other platforms. dswitkin@google.com (Daniel Switkin) Inheritance Object Binarizer GlobalHistogramBinarizer Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public abstract class Binarizer Constructors Binarizer(LuminanceSource) Initializes a new instance of the Binarizer class. Declaration protected Binarizer(LuminanceSource source) Parameters Type Name Description LuminanceSource source The source. Properties BlackMatrix Converts a 2D array of luminance data to 1 bit data. As above, assume this method is expensive and do not call it repeatedly. This method is intended for decoding 2D barcodes and may or may not apply sharpening. Therefore, a row from this matrix may not be identical to one fetched using getBlackRow(), so don't mix and match between them. Declaration public abstract BitMatrix BlackMatrix { get; } Property Value Type Description BitMatrix The 2D array of bits for the image (true means black). Height Gets the height of the luminance source object. Declaration public int Height { get; } Property Value Type Description Int32 LuminanceSource Gets the luminance source object. Declaration public virtual LuminanceSource LuminanceSource { get; } Property Value Type Description LuminanceSource Width Gets the width of the luminance source object. Declaration public int Width { get; } Property Value Type Description Int32 Methods createBinarizer(LuminanceSource) Creates a new object with the same type as this Binarizer implementation, but with pristine state. This is needed because Binarizer implementations may be stateful, e.g. keeping a cache of 1 bit data. See Effective Java for why we can't use Java's clone() method. Declaration public abstract Binarizer createBinarizer(LuminanceSource source) Parameters Type Name Description LuminanceSource source The LuminanceSource this Binarizer will operate on. Returns Type Description Binarizer A new concrete Binarizer implementation object. getBlackRow(Int32, BitArray) Converts one row of luminance data to 1 bit data. May actually do the conversion, or return cached data. Callers should assume this method is expensive and call it as seldom as possible. This method is intended for decoding 1D barcodes and may choose to apply sharpening. For callers which only examine one row of pixels at a time, the same BitArray should be reused and passed in with each call for performance. However it is legal to keep more than one row at a time if needed. Declaration public abstract BitArray getBlackRow(int y, BitArray row) Parameters Type Name Description Int32 y The row to fetch, which must be in [0, bitmap height) BitArray row An optional preallocated array. If null or too small, it will be ignored. If used, the Binarizer will call BitArray.clear(). Always use the returned object. Returns Type Description BitArray The array of bits for this row (true means black)."
  },
  "api/ZXing.BinaryBitmap.html": {
    "href": "api/ZXing.BinaryBitmap.html",
    "title": "Class BinaryBitmap | Unity Algorand SDK",
    "keywords": "Class BinaryBitmap This class is the core bitmap class used by ZXing to represent 1 bit data. Reader objects accept a BinaryBitmap and attempt to decode it. Inheritance Object BinaryBitmap Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public sealed class BinaryBitmap Constructors BinaryBitmap(Binarizer) Declaration public BinaryBitmap(Binarizer binarizer) Parameters Type Name Description Binarizer binarizer Properties BlackMatrix Converts a 2D array of luminance data to 1 bit. As above, assume this method is expensive and do not call it repeatedly. This method is intended for decoding 2D barcodes and may or may not apply sharpening. Therefore, a row from this matrix may not be identical to one fetched using getBlackRow(), so don't mix and match between them. Declaration public BitMatrix BlackMatrix { get; } Property Value Type Description BitMatrix The 2D array of bits for the image (true means black). CropSupported Declaration public bool CropSupported { get; } Property Value Type Description Boolean Whether this bitmap can be cropped. Height Declaration public int Height { get; } Property Value Type Description Int32 The height of the bitmap. RotateSupported Declaration public bool RotateSupported { get; } Property Value Type Description Boolean Whether this bitmap supports counter-clockwise rotation. Width Declaration public int Width { get; } Property Value Type Description Int32 The width of the bitmap. Methods crop(Int32, Int32, Int32, Int32) Returns a new object with cropped image data. Implementations may keep a reference to the original data rather than a copy. Only callable if isCropSupported() is true. Declaration public BinaryBitmap crop(int left, int top, int width, int height) Parameters Type Name Description Int32 left The left coordinate, which must be in [0, Width) Int32 top The top coordinate, which must be in [0, Height) Int32 width The width of the rectangle to crop. Int32 height The height of the rectangle to crop. Returns Type Description BinaryBitmap A cropped version of this object. getBlackRow(Int32, BitArray) Converts one row of luminance data to 1 bit data. May actually do the conversion, or return cached data. Callers should assume this method is expensive and call it as seldom as possible. This method is intended for decoding 1D barcodes and may choose to apply sharpening. Declaration public BitArray getBlackRow(int y, BitArray row) Parameters Type Name Description Int32 y The row to fetch, which must be in [0, bitmap height). BitArray row An optional preallocated array. If null or too small, it will be ignored. If used, the Binarizer will call BitArray.clear(). Always use the returned object. Returns Type Description BitArray The array of bits for this row (true means black). rotateCounterClockwise() Returns a new object with rotated image data by 90 degrees counterclockwise. Only callable if RotateSupported is true. Declaration public BinaryBitmap rotateCounterClockwise() Returns Type Description BinaryBitmap A rotated version of this object. rotateCounterClockwise45() Returns a new object with rotated image data by 45 degrees counterclockwise. Only callable if RotateSupported is true. Declaration public BinaryBitmap rotateCounterClockwise45() Returns Type Description BinaryBitmap A rotated version of this object. ToString() Returns a String that represents this instance. Declaration public override string ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString()"
  },
  "api/ZXing.Client.Result.AddressBookParsedResult.html": {
    "href": "api/ZXing.Client.Result.AddressBookParsedResult.html",
    "title": "Class AddressBookParsedResult | Unity Algorand SDK",
    "keywords": "Class AddressBookParsedResult Represents a parsed result that encodes contact information, like that in an address book entry. Inheritance Object ParsedResult AddressBookParsedResult Inherited Members ParsedResult.displayResultValue ParsedResult.Type ParsedResult.DisplayResult ParsedResult.ToString() ParsedResult.Equals(Object) ParsedResult.GetHashCode() ParsedResult.maybeAppend(String, StringBuilder) ParsedResult.maybeAppend(String[], StringBuilder) Namespace : ZXing.Client.Result Assembly : cs.temp.dll.dll Syntax public sealed class AddressBookParsedResult : ParsedResult Constructors AddressBookParsedResult(String[], String[], String, String[], String[], String[], String[], String, String, String[], String[], String, String, String, String[], String[]) initializing constructor Declaration public AddressBookParsedResult(String[] names, String[] nicknames, String pronunciation, String[] phoneNumbers, String[] phoneTypes, String[] emails, String[] emailTypes, String instantMessenger, String note, String[] addresses, String[] addressTypes, String org, String birthday, String title, String[] urls, String[] geo) Parameters Type Name Description String [] names String [] nicknames String pronunciation String [] phoneNumbers String [] phoneTypes String [] emails String [] emailTypes String instantMessenger String note String [] addresses String [] addressTypes String org String birthday String title String [] urls String [] geo AddressBookParsedResult(String[], String[], String[], String[], String[], String[], String[]) initializing constructor Declaration public AddressBookParsedResult(String[] names, String[] phoneNumbers, String[] phoneTypes, String[] emails, String[] emailTypes, String[] addresses, String[] addressTypes) Parameters Type Name Description String [] names String [] phoneNumbers String [] phoneTypes String [] emails String [] emailTypes String [] addresses String [] addressTypes Properties Addresses the addresses Declaration public String[] Addresses { get; } Property Value Type Description String [] AddressTypes Declaration public String[] AddressTypes { get; } Property Value Type Description String [] Birthday Declaration public String Birthday { get; } Property Value Type Description String Emails the e-mail addresses Declaration public String[] Emails { get; } Property Value Type Description String [] EmailTypes Declaration public String[] EmailTypes { get; } Property Value Type Description String [] Geo Declaration public String[] Geo { get; } Property Value Type Description String [] InstantMessenger the instant messenger addresses Declaration public String InstantMessenger { get; } Property Value Type Description String Names the names Declaration public String[] Names { get; } Property Value Type Description String [] Nicknames the nicknames Declaration public String[] Nicknames { get; } Property Value Type Description String [] Note the note field Declaration public String Note { get; } Property Value Type Description String Org the organisations Declaration public String Org { get; } Property Value Type Description String PhoneNumbers the phone numbers Declaration public String[] PhoneNumbers { get; } Property Value Type Description String [] PhoneTypes Declaration public String[] PhoneTypes { get; } Property Value Type Description String [] Pronunciation In Japanese, the name is written in kanji, which can have multiple readings. Therefore a hint is often provided, called furigana, which spells the name phonetically. Declaration public String Pronunciation { get; } Property Value Type Description String Title the title Declaration public String Title { get; } Property Value Type Description String URLs the urls Declaration public String[] URLs { get; } Property Value Type Description String []"
  },
  "api/ZXing.Client.Result.CalendarParsedResult.html": {
    "href": "api/ZXing.Client.Result.CalendarParsedResult.html",
    "title": "Class CalendarParsedResult | Unity Algorand SDK",
    "keywords": "Class CalendarParsedResult Represents a parsed result that encodes a calendar event at a certain time, optionally with attendees and a location. Inheritance Object ParsedResult CalendarParsedResult Inherited Members ParsedResult.displayResultValue ParsedResult.Type ParsedResult.DisplayResult ParsedResult.ToString() ParsedResult.Equals(Object) ParsedResult.GetHashCode() ParsedResult.maybeAppend(String, StringBuilder) ParsedResult.maybeAppend(String[], StringBuilder) Namespace : ZXing.Client.Result Assembly : cs.temp.dll.dll Syntax public sealed class CalendarParsedResult : ParsedResult Constructors CalendarParsedResult(String, String, String, String, String, String, String[], String, Double, Double) initializing constructor Declaration public CalendarParsedResult(String summary, String startString, String endString, String durationString, String location, String organizer, String[] attendees, String description, double latitude, double longitude) Parameters Type Name Description String summary String startString String endString String durationString String location String organizer String [] attendees String description Double latitude Double longitude Properties Attendees attendees Declaration public String[] Attendees { get; } Property Value Type Description String [] Description description Declaration public String Description { get; } Property Value Type Description String End event end , or null if event has no duration Declaration public DateTime? End { get; } Property Value Type Description Nullable < DateTime > isEndAllDay Gets a value indicating whether this instance is end all day. Declaration public bool isEndAllDay { get; } Property Value Type Description Boolean true if end time was specified as a whole day Latitude latitude Declaration public double Latitude { get; } Property Value Type Description Double Location location Declaration public String Location { get; } Property Value Type Description String Longitude longitude Declaration public double Longitude { get; } Property Value Type Description Double Organizer organizer Declaration public String Organizer { get; } Property Value Type Description String Start Gets the start. Declaration public DateTime Start { get; } Property Value Type Description DateTime Summary summary Declaration public String Summary { get; } Property Value Type Description String Methods isStartAllDay() Determines whether [is start all day]. Declaration public bool isStartAllDay() Returns Type Description Boolean if start time was specified as a whole day"
  },
  "api/ZXing.Client.Result.EmailAddressParsedResult.html": {
    "href": "api/ZXing.Client.Result.EmailAddressParsedResult.html",
    "title": "Class EmailAddressParsedResult | Unity Algorand SDK",
    "keywords": "Class EmailAddressParsedResult Represents a parsed result that encodes an email message including recipients, subject and body text. Inheritance Object ParsedResult EmailAddressParsedResult Inherited Members ParsedResult.displayResultValue ParsedResult.Type ParsedResult.DisplayResult ParsedResult.ToString() ParsedResult.Equals(Object) ParsedResult.GetHashCode() ParsedResult.maybeAppend(String, StringBuilder) ParsedResult.maybeAppend(String[], StringBuilder) Namespace : ZXing.Client.Result Assembly : cs.temp.dll.dll Syntax public sealed class EmailAddressParsedResult : ParsedResult Properties BCCs the BCCs Declaration public String[] BCCs { get; } Property Value Type Description String [] Body the body Declaration public String Body { get; } Property Value Type Description String CCs the CCs Declaration public String[] CCs { get; } Property Value Type Description String [] EmailAddress the email address Declaration public String EmailAddress { get; } Property Value Type Description String MailtoURI the mailto: uri Declaration public String MailtoURI { get; } Property Value Type Description String Subject the subject Declaration public String Subject { get; } Property Value Type Description String Tos the TOs Declaration public String[] Tos { get; } Property Value Type Description String []"
  },
  "api/ZXing.Client.Result.ExpandedProductParsedResult.html": {
    "href": "api/ZXing.Client.Result.ExpandedProductParsedResult.html",
    "title": "Class ExpandedProductParsedResult | Unity Algorand SDK",
    "keywords": "Class ExpandedProductParsedResult Represents a parsed result that encodes extended product information as encoded by the RSS format, like weight, price, dates, etc. Inheritance Object ParsedResult ExpandedProductParsedResult Inherited Members ParsedResult.displayResultValue ParsedResult.Type ParsedResult.ToString() ParsedResult.Equals(Object) ParsedResult.maybeAppend(String, StringBuilder) ParsedResult.maybeAppend(String[], StringBuilder) Namespace : ZXing.Client.Result Assembly : cs.temp.dll.dll Syntax public class ExpandedProductParsedResult : ParsedResult Constructors ExpandedProductParsedResult(String, String, String, String, String, String, String, String, String, String, String, String, String, String, IDictionary<String, String>) initializing constructor Declaration public ExpandedProductParsedResult(String rawText, String productID, String sscc, String lotNumber, String productionDate, String packagingDate, String bestBeforeDate, String expirationDate, String weight, String weightType, String weightIncrement, String price, String priceIncrement, String priceCurrency, IDictionary<String, String> uncommonAIs) Parameters Type Name Description String rawText String productID String sscc String lotNumber String productionDate String packagingDate String bestBeforeDate String expirationDate String weight String weightType String weightIncrement String price String priceIncrement String priceCurrency IDictionary < String , String > uncommonAIs Fields KILOGRAM extension for kilogram weight type Declaration public static String KILOGRAM Field Value Type Description String POUND extension for pounds weight type Declaration public static String POUND Field Value Type Description String Properties BestBeforeDate the best before date Declaration public String BestBeforeDate { get; } Property Value Type Description String DisplayResult the display representation (raw text) Declaration public override string DisplayResult { get; } Property Value Type Description String Overrides ParsedResult.DisplayResult ExpirationDate the expiration date Declaration public String ExpirationDate { get; } Property Value Type Description String LotNumber the lot number Declaration public String LotNumber { get; } Property Value Type Description String PackagingDate the packaging date Declaration public String PackagingDate { get; } Property Value Type Description String Price the price Declaration public String Price { get; } Property Value Type Description String PriceCurrency the price currency Declaration public String PriceCurrency { get; } Property Value Type Description String PriceIncrement the price increment Declaration public String PriceIncrement { get; } Property Value Type Description String ProductID the product id Declaration public String ProductID { get; } Property Value Type Description String ProductionDate the production date Declaration public String ProductionDate { get; } Property Value Type Description String RawText the raw text Declaration public String RawText { get; } Property Value Type Description String Sscc the sscc Declaration public String Sscc { get; } Property Value Type Description String UncommonAIs the uncommon AIs Declaration public IDictionary<String, String> UncommonAIs { get; } Property Value Type Description IDictionary < String , String > Weight the weight Declaration public String Weight { get; } Property Value Type Description String WeightIncrement the weight increment Declaration public String WeightIncrement { get; } Property Value Type Description String WeightType the weight type Declaration public String WeightType { get; } Property Value Type Description String Methods Equals(Object) Declaration public override bool Equals(Object o) Parameters Type Name Description Object o Returns Type Description Boolean GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ParsedResult.GetHashCode()"
  },
  "api/ZXing.Client.Result.ExpandedProductResultParser.html": {
    "href": "api/ZXing.Client.Result.ExpandedProductResultParser.html",
    "title": "Class ExpandedProductResultParser | Unity Algorand SDK",
    "keywords": "Class ExpandedProductResultParser Parses strings of digits that represent a RSS Extended code. Inheritance Object ResultParser ExpandedProductResultParser Inherited Members ResultParser.parseResult(Result) ResultParser.maybeAppend(String, StringBuilder) ResultParser.maybeAppend(String[], StringBuilder) ResultParser.maybeWrap(String) ResultParser.unescapeBackslash(String) ResultParser.parseHexDigit(Char) ResultParser.urlDecode(String) Namespace : ZXing.Client.Result Assembly : cs.temp.dll.dll Syntax public class ExpandedProductResultParser : ResultParser Methods parse(Result) tries to parse a text representation to a specific result object Declaration public override ParsedResult parse(Result result) Parameters Type Name Description Result result Returns Type Description ParsedResult Overrides ResultParser.parse(Result)"
  },
  "api/ZXing.Client.Result.GeoParsedResult.html": {
    "href": "api/ZXing.Client.Result.GeoParsedResult.html",
    "title": "Class GeoParsedResult | Unity Algorand SDK",
    "keywords": "Class GeoParsedResult Represents a parsed result that encodes a geographic coordinate, with latitude, longitude and altitude. Inheritance Object ParsedResult GeoParsedResult Inherited Members ParsedResult.displayResultValue ParsedResult.Type ParsedResult.DisplayResult ParsedResult.ToString() ParsedResult.Equals(Object) ParsedResult.GetHashCode() ParsedResult.maybeAppend(String, StringBuilder) ParsedResult.maybeAppend(String[], StringBuilder) Namespace : ZXing.Client.Result Assembly : cs.temp.dll.dll Syntax public sealed class GeoParsedResult : ParsedResult Properties Altitude Declaration public double Altitude { get; } Property Value Type Description Double altitude in meters. If not specified, in the geo URI, returns 0.0 GeoURI the geo URI Declaration public String GeoURI { get; } Property Value Type Description String GoogleMapsURI Declaration public String GoogleMapsURI { get; } Property Value Type Description String a URI link to Google Maps which display the point on the Earth described by this instance, and sets the zoom level in a way that roughly reflects the altitude, if specified Latitude Declaration public double Latitude { get; } Property Value Type Description Double latitude in degrees Longitude Declaration public double Longitude { get; } Property Value Type Description Double longitude in degrees Query Declaration public String Query { get; } Property Value Type Description String"
  },
  "api/ZXing.Client.Result.html": {
    "href": "api/ZXing.Client.Result.html",
    "title": "Namespace ZXing.Client.Result | Unity Algorand SDK",
    "keywords": "Namespace ZXing.Client.Result Classes AddressBookParsedResult Represents a parsed result that encodes contact information, like that in an address book entry. CalendarParsedResult Represents a parsed result that encodes a calendar event at a certain time, optionally with attendees and a location. EmailAddressParsedResult Represents a parsed result that encodes an email message including recipients, subject and body text. ExpandedProductParsedResult Represents a parsed result that encodes extended product information as encoded by the RSS format, like weight, price, dates, etc. ExpandedProductResultParser Parses strings of digits that represent a RSS Extended code. GeoParsedResult Represents a parsed result that encodes a geographic coordinate, with latitude, longitude and altitude. ISBNParsedResult Represents a parsed result that encodes a product ISBN number. ISBNResultParser Parses strings of digits that represent a ISBN. ParsedResult Abstract class representing the result of decoding a barcode, as more than a String -- as some type of structured data. This might be a subclass which represents a URL, or an e-mail address. {@link ResultParser#parseResult(Result)} will turn a raw decoded string into the most appropriate type of structured representation. Thanks to Jeff Griffin for proposing rewrite of these classes that relies less on exception-based mechanisms during parsing. ProductParsedResult Represents a parsed result that encodes a product by an identifier of some kind. ResultParser Abstract class representing the result of decoding a barcode, as more than a String -- as some type of structured data. This might be a subclass which represents a URL, or an e-mail address. {@link #parseResult(com.google.zxing.Result)} will turn a raw decoded string into the most appropriate type of structured representation. Thanks to Jeff Griffin for proposing rewrite of these classes that relies less on exception-based mechanisms during parsing. SMSParsedResult Represents a parsed result that encodes an SMS message, including recipients, subject and body text. SMSTOMMSTOResultParser Parses an \"smsto:\" URI result, whose format is not standardized but appears to be like: {@code smsto:number(:body)}. This actually also parses URIs starting with \"smsto:\", \"mmsto:\", \"SMSTO:\", and \"MMSTO:\", and treats them all the same way, and effectively converts them to an \"sms:\" URI for purposes of forwarding to the platform. SMTPResultParser Parses an \"smtp:\" URI result, whose format is not standardized but appears to be like: smtp[:subject[:body]]} . See http://code.google.com/p/zxing/issues/detail?id=536 TelParsedResult Represents a parsed result that encodes a telephone number. TextParsedResult A simple result type encapsulating a string that has no further interpretation. URIParsedResult A simple result type encapsulating a URI that has no further interpretation. VINParsedResult Represents a parsed result that encodes a Vehicle Identification Number (VIN). VINResultParser Detects a result that is likely a vehicle identification number. @author Sean Owen WifiParsedResult Represents a parsed result that encodes wifi network information, like SSID and password. WifiResultParser Parses a WIFI configuration string. Strings will be of the form: {@code WIFI:T:[network type];S:[network SSID];P:[network password];H:[hidden?];;} The fields can appear in any order. Only \"S:\" is required. For WPA2 enterprise(EAP), strings will be of the form: {@code WIFI:T:WPA2-EAP;S:[network SSID];H:[hidden?];E:[EAP method];PH2:[Phase 2 method];A:[anonymous identity];I:[username];P:[password];;} \"EAP method\" can e.g.be \"TTLS\" or \"PWD\" or one of the other fields in WifiEnterpriseConfig.Eap and \"Phase 2 method\" can e.g.be \"MSCHAPV2\" or any of the other fields in WifiEnterpriseConfig.Phase2 Enums ParsedResultType Represents the type of data encoded by a barcode -- from plain text, to a URI, to an e-mail address, etc."
  },
  "api/ZXing.Client.Result.ISBNParsedResult.html": {
    "href": "api/ZXing.Client.Result.ISBNParsedResult.html",
    "title": "Class ISBNParsedResult | Unity Algorand SDK",
    "keywords": "Class ISBNParsedResult Represents a parsed result that encodes a product ISBN number. Inheritance Object ParsedResult ISBNParsedResult Inherited Members ParsedResult.displayResultValue ParsedResult.Type ParsedResult.DisplayResult ParsedResult.ToString() ParsedResult.Equals(Object) ParsedResult.GetHashCode() ParsedResult.maybeAppend(String, StringBuilder) ParsedResult.maybeAppend(String[], StringBuilder) Namespace : ZXing.Client.Result Assembly : cs.temp.dll.dll Syntax public sealed class ISBNParsedResult : ParsedResult Properties ISBN the ISBN number Declaration public String ISBN { get; } Property Value Type Description String"
  },
  "api/ZXing.Client.Result.ISBNResultParser.html": {
    "href": "api/ZXing.Client.Result.ISBNResultParser.html",
    "title": "Class ISBNResultParser | Unity Algorand SDK",
    "keywords": "Class ISBNResultParser Parses strings of digits that represent a ISBN. Inheritance Object ResultParser ISBNResultParser Inherited Members ResultParser.parseResult(Result) ResultParser.maybeAppend(String, StringBuilder) ResultParser.maybeAppend(String[], StringBuilder) ResultParser.maybeWrap(String) ResultParser.unescapeBackslash(String) ResultParser.parseHexDigit(Char) ResultParser.urlDecode(String) Namespace : ZXing.Client.Result Assembly : cs.temp.dll.dll Syntax public class ISBNResultParser : ResultParser Methods parse(Result) See ISBN-13 For Dummies Declaration public override ParsedResult parse(Result result) Parameters Type Name Description Result result The result. Returns Type Description ParsedResult Overrides ResultParser.parse(Result)"
  },
  "api/ZXing.Client.Result.ParsedResult.html": {
    "href": "api/ZXing.Client.Result.ParsedResult.html",
    "title": "Class ParsedResult | Unity Algorand SDK",
    "keywords": "Class ParsedResult Abstract class representing the result of decoding a barcode, as more than a String -- as some type of structured data. This might be a subclass which represents a URL, or an e-mail address. {@link ResultParser#parseResult(Result)} will turn a raw decoded string into the most appropriate type of structured representation. Thanks to Jeff Griffin for proposing rewrite of these classes that relies less on exception-based mechanisms during parsing. Inheritance Object ParsedResult AddressBookParsedResult CalendarParsedResult EmailAddressParsedResult ExpandedProductParsedResult GeoParsedResult ISBNParsedResult ProductParsedResult SMSParsedResult TelParsedResult TextParsedResult URIParsedResult VINParsedResult WifiParsedResult Namespace : ZXing.Client.Result Assembly : cs.temp.dll.dll Syntax public abstract class ParsedResult Constructors ParsedResult(ParsedResultType) constructor Declaration protected ParsedResult(ParsedResultType type) Parameters Type Name Description ParsedResultType type Fields displayResultValue user friendly value Declaration protected string displayResultValue Field Value Type Description String Properties DisplayResult user friendly value Declaration public virtual String DisplayResult { get; } Property Value Type Description String Type gets the type of the parsed result Declaration public virtual ParsedResultType Type { get; } Property Value Type Description ParsedResultType Methods Equals(Object) compare two objects Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) GetHashCode() gets the hashcode Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() maybeAppend(String, StringBuilder) append to result if not null or empty Declaration public static void maybeAppend(String value, StringBuilder result) Parameters Type Name Description String value StringBuilder result maybeAppend(String[], StringBuilder) append to result if not null or empty Declaration public static void maybeAppend(String[] values, StringBuilder result) Parameters Type Name Description String [] values StringBuilder result ToString() gets a user friendly value Declaration public override String ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/ZXing.Client.Result.ParsedResultType.html": {
    "href": "api/ZXing.Client.Result.ParsedResultType.html",
    "title": "Enum ParsedResultType | Unity Algorand SDK",
    "keywords": "Enum ParsedResultType Represents the type of data encoded by a barcode -- from plain text, to a URI, to an e-mail address, etc. Namespace : ZXing.Client.Result Assembly : cs.temp.dll.dll Syntax public enum ParsedResultType Fields Name Description ADDRESSBOOK address book CALENDAR calendar EMAIL_ADDRESS email address GEO geo coordinates ISBN ISBN PRODUCT product SMS sms TEL telefon TEXT Text URI URI VIN VIN WIFI wifi"
  },
  "api/ZXing.Client.Result.ProductParsedResult.html": {
    "href": "api/ZXing.Client.Result.ProductParsedResult.html",
    "title": "Class ProductParsedResult | Unity Algorand SDK",
    "keywords": "Class ProductParsedResult Represents a parsed result that encodes a product by an identifier of some kind. Inheritance Object ParsedResult ProductParsedResult Inherited Members ParsedResult.displayResultValue ParsedResult.Type ParsedResult.DisplayResult ParsedResult.ToString() ParsedResult.Equals(Object) ParsedResult.GetHashCode() ParsedResult.maybeAppend(String, StringBuilder) ParsedResult.maybeAppend(String[], StringBuilder) Namespace : ZXing.Client.Result Assembly : cs.temp.dll.dll Syntax public sealed class ProductParsedResult : ParsedResult Properties NormalizedProductID normalized product id Declaration public String NormalizedProductID { get; } Property Value Type Description String ProductID product id Declaration public String ProductID { get; } Property Value Type Description String"
  },
  "api/ZXing.Client.Result.ResultParser.html": {
    "href": "api/ZXing.Client.Result.ResultParser.html",
    "title": "Class ResultParser | Unity Algorand SDK",
    "keywords": "Class ResultParser Abstract class representing the result of decoding a barcode, as more than a String -- as some type of structured data. This might be a subclass which represents a URL, or an e-mail address. {@link #parseResult(com.google.zxing.Result)} will turn a raw decoded string into the most appropriate type of structured representation. Thanks to Jeff Griffin for proposing rewrite of these classes that relies less on exception-based mechanisms during parsing. Inheritance Object ResultParser ExpandedProductResultParser ISBNResultParser SMSTOMMSTOResultParser SMTPResultParser VINResultParser WifiResultParser Namespace : ZXing.Client.Result Assembly : cs.temp.dll.dll Syntax public abstract class ResultParser Methods maybeAppend(String, StringBuilder) append value to result, if not null Declaration protected static void maybeAppend(String value, StringBuilder result) Parameters Type Name Description String value StringBuilder result maybeAppend(String[], StringBuilder) append value to result, if not null Declaration protected static void maybeAppend(String[] value, StringBuilder result) Parameters Type Name Description String [] value StringBuilder result maybeWrap(String) wrap, if not null Declaration protected static String[] maybeWrap(String value) Parameters Type Name Description String value Returns Type Description String [] parse(Result) Attempts to parse the raw {@link Result}'s contents as a particular type of information (email, URL, etc.) and return a {@link ParsedResult} encapsulating the result of parsing. Declaration public abstract ParsedResult parse(Result theResult) Parameters Type Name Description Result theResult the raw ZXing.Client.Result to parse Returns Type Description ParsedResult ParsedResult encapsulating the parsing result parseHexDigit(Char) parse hex digit Declaration protected static int parseHexDigit(char c) Parameters Type Name Description Char c Returns Type Description Int32 parseResult(Result) Parses the result. Declaration public static ParsedResult parseResult(Result theResult) Parameters Type Name Description Result theResult The result. Returns Type Description ParsedResult unescapeBackslash(String) unescape backslash Declaration protected static String unescapeBackslash(String escaped) Parameters Type Name Description String escaped Returns Type Description String urlDecode(String) decodes url Declaration protected static String urlDecode(String escaped) Parameters Type Name Description String escaped Returns Type Description String"
  },
  "api/ZXing.Client.Result.SMSParsedResult.html": {
    "href": "api/ZXing.Client.Result.SMSParsedResult.html",
    "title": "Class SMSParsedResult | Unity Algorand SDK",
    "keywords": "Class SMSParsedResult Represents a parsed result that encodes an SMS message, including recipients, subject and body text. Inheritance Object ParsedResult SMSParsedResult Inherited Members ParsedResult.displayResultValue ParsedResult.Type ParsedResult.DisplayResult ParsedResult.ToString() ParsedResult.Equals(Object) ParsedResult.GetHashCode() ParsedResult.maybeAppend(String, StringBuilder) ParsedResult.maybeAppend(String[], StringBuilder) Namespace : ZXing.Client.Result Assembly : cs.temp.dll.dll Syntax public sealed class SMSParsedResult : ParsedResult Constructors SMSParsedResult(String, String, String, String) initializing constructor Declaration public SMSParsedResult(String number, String via, String subject, String body) Parameters Type Name Description String number String via String subject String body SMSParsedResult(String[], String[], String, String) initializing constructor Declaration public SMSParsedResult(String[] numbers, String[] vias, String subject, String body) Parameters Type Name Description String [] numbers String [] vias String subject String body Properties Body body Declaration public String Body { get; } Property Value Type Description String Numbers numbers Declaration public String[] Numbers { get; } Property Value Type Description String [] SMSURI sms uri Declaration public String SMSURI { get; } Property Value Type Description String Subject subject Declaration public String Subject { get; } Property Value Type Description String Vias vias Declaration public String[] Vias { get; } Property Value Type Description String []"
  },
  "api/ZXing.Client.Result.SMSTOMMSTOResultParser.html": {
    "href": "api/ZXing.Client.Result.SMSTOMMSTOResultParser.html",
    "title": "Class SMSTOMMSTOResultParser | Unity Algorand SDK",
    "keywords": "Class SMSTOMMSTOResultParser Parses an \"smsto:\" URI result, whose format is not standardized but appears to be like: {@code smsto:number(:body)}. This actually also parses URIs starting with \"smsto:\", \"mmsto:\", \"SMSTO:\", and \"MMSTO:\", and treats them all the same way, and effectively converts them to an \"sms:\" URI for purposes of forwarding to the platform. Inheritance Object ResultParser SMSTOMMSTOResultParser Inherited Members ResultParser.parseResult(Result) ResultParser.maybeAppend(String, StringBuilder) ResultParser.maybeAppend(String[], StringBuilder) ResultParser.maybeWrap(String) ResultParser.unescapeBackslash(String) ResultParser.parseHexDigit(Char) ResultParser.urlDecode(String) Namespace : ZXing.Client.Result Assembly : cs.temp.dll.dll Syntax public class SMSTOMMSTOResultParser : ResultParser Methods parse(Result) attempt to parse the raw result to the specific type Declaration public override ParsedResult parse(Result result) Parameters Type Name Description Result result Returns Type Description ParsedResult Overrides ResultParser.parse(Result)"
  },
  "api/ZXing.Client.Result.SMTPResultParser.html": {
    "href": "api/ZXing.Client.Result.SMTPResultParser.html",
    "title": "Class SMTPResultParser | Unity Algorand SDK",
    "keywords": "Class SMTPResultParser Parses an \"smtp:\" URI result, whose format is not standardized but appears to be like: smtp[:subject[:body]]} . See http://code.google.com/p/zxing/issues/detail?id=536 Inheritance Object ResultParser SMTPResultParser Inherited Members ResultParser.parseResult(Result) ResultParser.maybeAppend(String, StringBuilder) ResultParser.maybeAppend(String[], StringBuilder) ResultParser.maybeWrap(String) ResultParser.unescapeBackslash(String) ResultParser.parseHexDigit(Char) ResultParser.urlDecode(String) Namespace : ZXing.Client.Result Assembly : cs.temp.dll.dll Syntax public class SMTPResultParser : ResultParser Methods parse(Result) attempt to parse the raw result to the specific type Declaration public override ParsedResult parse(Result result) Parameters Type Name Description Result result Returns Type Description ParsedResult Overrides ResultParser.parse(Result)"
  },
  "api/ZXing.Client.Result.TelParsedResult.html": {
    "href": "api/ZXing.Client.Result.TelParsedResult.html",
    "title": "Class TelParsedResult | Unity Algorand SDK",
    "keywords": "Class TelParsedResult Represents a parsed result that encodes a telephone number. Inheritance Object ParsedResult TelParsedResult Inherited Members ParsedResult.displayResultValue ParsedResult.Type ParsedResult.DisplayResult ParsedResult.ToString() ParsedResult.Equals(Object) ParsedResult.GetHashCode() ParsedResult.maybeAppend(String, StringBuilder) ParsedResult.maybeAppend(String[], StringBuilder) Namespace : ZXing.Client.Result Assembly : cs.temp.dll.dll Syntax public sealed class TelParsedResult : ParsedResult Constructors TelParsedResult(String, String, String) initializing constructor Declaration public TelParsedResult(String number, String telURI, String title) Parameters Type Name Description String number String telURI String title Properties Number number Declaration public String Number { get; } Property Value Type Description String TelURI URI Declaration public String TelURI { get; } Property Value Type Description String Title title Declaration public String Title { get; } Property Value Type Description String"
  },
  "api/ZXing.Client.Result.TextParsedResult.html": {
    "href": "api/ZXing.Client.Result.TextParsedResult.html",
    "title": "Class TextParsedResult | Unity Algorand SDK",
    "keywords": "Class TextParsedResult A simple result type encapsulating a string that has no further interpretation. Inheritance Object ParsedResult TextParsedResult Inherited Members ParsedResult.displayResultValue ParsedResult.Type ParsedResult.DisplayResult ParsedResult.ToString() ParsedResult.Equals(Object) ParsedResult.GetHashCode() ParsedResult.maybeAppend(String, StringBuilder) ParsedResult.maybeAppend(String[], StringBuilder) Namespace : ZXing.Client.Result Assembly : cs.temp.dll.dll Syntax public sealed class TextParsedResult : ParsedResult Constructors TextParsedResult(String, String) initializing constructor Declaration public TextParsedResult(String text, String language) Parameters Type Name Description String text String language Properties Language language Declaration public String Language { get; } Property Value Type Description String Text text Declaration public String Text { get; } Property Value Type Description String"
  },
  "api/ZXing.Client.Result.URIParsedResult.html": {
    "href": "api/ZXing.Client.Result.URIParsedResult.html",
    "title": "Class URIParsedResult | Unity Algorand SDK",
    "keywords": "Class URIParsedResult A simple result type encapsulating a URI that has no further interpretation. Inheritance Object ParsedResult URIParsedResult Inherited Members ParsedResult.displayResultValue ParsedResult.Type ParsedResult.DisplayResult ParsedResult.ToString() ParsedResult.Equals(Object) ParsedResult.GetHashCode() ParsedResult.maybeAppend(String, StringBuilder) ParsedResult.maybeAppend(String[], StringBuilder) Namespace : ZXing.Client.Result Assembly : cs.temp.dll.dll Syntax public sealed class URIParsedResult : ParsedResult Constructors URIParsedResult(String, String) initializing constructor Declaration public URIParsedResult(String uri, String title) Parameters Type Name Description String uri String title Properties Title title Declaration public String Title { get; } Property Value Type Description String URI URI Declaration public String URI { get; } Property Value Type Description String"
  },
  "api/ZXing.Client.Result.VINParsedResult.html": {
    "href": "api/ZXing.Client.Result.VINParsedResult.html",
    "title": "Class VINParsedResult | Unity Algorand SDK",
    "keywords": "Class VINParsedResult Represents a parsed result that encodes a Vehicle Identification Number (VIN). Inheritance Object ParsedResult VINParsedResult Inherited Members ParsedResult.displayResultValue ParsedResult.Type ParsedResult.ToString() ParsedResult.Equals(Object) ParsedResult.GetHashCode() ParsedResult.maybeAppend(String, StringBuilder) ParsedResult.maybeAppend(String[], StringBuilder) Namespace : ZXing.Client.Result Assembly : cs.temp.dll.dll Syntax public class VINParsedResult : ParsedResult Constructors VINParsedResult(String, String, String, String, String, String, Int32, Char, String) initializing constructor Declaration public VINParsedResult(String vin, String worldManufacturerID, String vehicleDescriptorSection, String vehicleIdentifierSection, String countryCode, String vehicleAttributes, int modelYear, char plantCode, String sequentialNumber) Parameters Type Name Description String vin String worldManufacturerID String vehicleDescriptorSection String vehicleIdentifierSection String countryCode String vehicleAttributes Int32 modelYear Char plantCode String sequentialNumber Properties CountryCode country code Declaration public String CountryCode { get; } Property Value Type Description String DisplayResult a user friendly representation Declaration public override string DisplayResult { get; } Property Value Type Description String Overrides ParsedResult.DisplayResult ModelYear model year Declaration public int ModelYear { get; } Property Value Type Description Int32 PlantCode plant code Declaration public char PlantCode { get; } Property Value Type Description Char SequentialNumber sequential number Declaration public String SequentialNumber { get; } Property Value Type Description String VehicleAttributes vehicle attributes Declaration public String VehicleAttributes { get; } Property Value Type Description String VehicleDescriptorSection vehicle descriptor section Declaration public String VehicleDescriptorSection { get; } Property Value Type Description String VehicleIdentifierSection vehicle identifier section Declaration public String VehicleIdentifierSection { get; } Property Value Type Description String VIN VIN Declaration public String VIN { get; } Property Value Type Description String WorldManufacturerID manufacturer id Declaration public String WorldManufacturerID { get; } Property Value Type Description String"
  },
  "api/ZXing.Client.Result.VINResultParser.html": {
    "href": "api/ZXing.Client.Result.VINResultParser.html",
    "title": "Class VINResultParser | Unity Algorand SDK",
    "keywords": "Class VINResultParser Detects a result that is likely a vehicle identification number. @author Sean Owen Inheritance Object ResultParser VINResultParser Inherited Members ResultParser.parseResult(Result) ResultParser.maybeAppend(String, StringBuilder) ResultParser.maybeAppend(String[], StringBuilder) ResultParser.maybeWrap(String) ResultParser.unescapeBackslash(String) ResultParser.parseHexDigit(Char) ResultParser.urlDecode(String) Namespace : ZXing.Client.Result Assembly : cs.temp.dll.dll Syntax public class VINResultParser : ResultParser Methods parse(Result) attempt to parse the raw result to the specific type Declaration public override ParsedResult parse(Result result) Parameters Type Name Description Result result Returns Type Description ParsedResult Overrides ResultParser.parse(Result)"
  },
  "api/ZXing.Client.Result.WifiParsedResult.html": {
    "href": "api/ZXing.Client.Result.WifiParsedResult.html",
    "title": "Class WifiParsedResult | Unity Algorand SDK",
    "keywords": "Class WifiParsedResult Represents a parsed result that encodes wifi network information, like SSID and password. Inheritance Object ParsedResult WifiParsedResult Inherited Members ParsedResult.displayResultValue ParsedResult.Type ParsedResult.DisplayResult ParsedResult.ToString() ParsedResult.Equals(Object) ParsedResult.GetHashCode() ParsedResult.maybeAppend(String, StringBuilder) ParsedResult.maybeAppend(String[], StringBuilder) Namespace : ZXing.Client.Result Assembly : cs.temp.dll.dll Syntax public class WifiParsedResult : ParsedResult Constructors WifiParsedResult(String, String, String) initializing constructor Declaration public WifiParsedResult(String networkEncryption, String ssid, String password) Parameters Type Name Description String networkEncryption String ssid String password WifiParsedResult(String, String, String, Boolean) initializing constructor Declaration public WifiParsedResult(String networkEncryption, String ssid, String password, bool hidden) Parameters Type Name Description String networkEncryption String ssid String password Boolean hidden WifiParsedResult(String, String, String, Boolean, String, String, String, String) initializing constructor Declaration public WifiParsedResult(String networkEncryption, String ssid, String password, bool hidden, String identity, String anonymousIdentity, String eapMethod, String phase2Method) Parameters Type Name Description String networkEncryption String ssid String password Boolean hidden String identity String anonymousIdentity String eapMethod String phase2Method Properties AnonymousIdentity anonymous Declaration public String AnonymousIdentity { get; } Property Value Type Description String EapMethod eap Declaration public String EapMethod { get; } Property Value Type Description String Hidden hidden flag Declaration public bool Hidden { get; } Property Value Type Description Boolean Identity identity Declaration public String Identity { get; } Property Value Type Description String NetworkEncryption network encryption Declaration public String NetworkEncryption { get; } Property Value Type Description String Password password Declaration public String Password { get; } Property Value Type Description String Phase2Method phase 2 method Declaration public String Phase2Method { get; } Property Value Type Description String Ssid SSID Declaration public String Ssid { get; } Property Value Type Description String"
  },
  "api/ZXing.Client.Result.WifiResultParser.html": {
    "href": "api/ZXing.Client.Result.WifiResultParser.html",
    "title": "Class WifiResultParser | Unity Algorand SDK",
    "keywords": "Class WifiResultParser Parses a WIFI configuration string. Strings will be of the form: {@code WIFI:T:[network type];S:[network SSID];P:[network password];H:[hidden?];;} The fields can appear in any order. Only \"S:\" is required. For WPA2 enterprise(EAP), strings will be of the form: {@code WIFI:T:WPA2-EAP;S:[network SSID];H:[hidden?];E:[EAP method];PH2:[Phase 2 method];A:[anonymous identity];I:[username];P:[password];;} \"EAP method\" can e.g.be \"TTLS\" or \"PWD\" or one of the other fields in WifiEnterpriseConfig.Eap and \"Phase 2 method\" can e.g.be \"MSCHAPV2\" or any of the other fields in WifiEnterpriseConfig.Phase2 Inheritance Object ResultParser WifiResultParser Inherited Members ResultParser.parseResult(Result) ResultParser.maybeAppend(String, StringBuilder) ResultParser.maybeAppend(String[], StringBuilder) ResultParser.maybeWrap(String) ResultParser.unescapeBackslash(String) ResultParser.parseHexDigit(Char) ResultParser.urlDecode(String) Namespace : ZXing.Client.Result Assembly : cs.temp.dll.dll Syntax public class WifiResultParser : ResultParser Methods parse(Result) attempt to parse the raw result to the specific type Declaration public override ParsedResult parse(Result result) Parameters Type Name Description Result result Returns Type Description ParsedResult Overrides ResultParser.parse(Result)"
  },
  "api/ZXing.Color32LuminanceSource.html": {
    "href": "api/ZXing.Color32LuminanceSource.html",
    "title": "Class Color32LuminanceSource | Unity Algorand SDK",
    "keywords": "Class Color32LuminanceSource Calculates the luminance values based upon the Color32 structure Inheritance Object LuminanceSource BaseLuminanceSource Color32LuminanceSource Inherited Members BaseLuminanceSource.RChannelWeight BaseLuminanceSource.GChannelWeight BaseLuminanceSource.BChannelWeight BaseLuminanceSource.ChannelWeight BaseLuminanceSource.luminances BaseLuminanceSource.getRow(Int32, Byte[]) BaseLuminanceSource.Matrix BaseLuminanceSource.rotateCounterClockwise() BaseLuminanceSource.rotateCounterClockwise45() BaseLuminanceSource.RotateSupported BaseLuminanceSource.crop(Int32, Int32, Int32, Int32) BaseLuminanceSource.CropSupported BaseLuminanceSource.InversionSupported BaseLuminanceSource.invert() LuminanceSource.Width LuminanceSource.Height LuminanceSource.ToString() Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public class Color32LuminanceSource : BaseLuminanceSource Constructors Color32LuminanceSource(Color32[], Int32, Int32) Initializes a new instance of the Color32LuminanceSource class. Declaration public Color32LuminanceSource(Color32[] color32s, int width, int height) Parameters Type Name Description Color32 [] color32s The color32s. Int32 width The width. Int32 height The height. Color32LuminanceSource(Int32, Int32) Initializes a new instance of the Color32LuminanceSource class. Declaration public Color32LuminanceSource(int width, int height) Parameters Type Name Description Int32 width The width. Int32 height The height. Methods CreateLuminanceSource(Byte[], Int32, Int32) Should create a new luminance source with the right class type. The method is used in methods crop and rotate. Declaration protected override LuminanceSource CreateLuminanceSource(byte[] newLuminances, int width, int height) Parameters Type Name Description Byte [] newLuminances The new luminances. Int32 width The width. Int32 height The height. Returns Type Description LuminanceSource Overrides BaseLuminanceSource.CreateLuminanceSource(Byte[], Int32, Int32) SetPixels(Color32[]) Sets the pixels. Declaration public void SetPixels(Color32[] color32s) Parameters Type Name Description Color32 [] color32s The color32s."
  },
  "api/ZXing.Color32Renderer.html": {
    "href": "api/ZXing.Color32Renderer.html",
    "title": "Class Color32Renderer | Unity Algorand SDK",
    "keywords": "Class Color32Renderer a barcode renderer which returns a Color32 array Inheritance Object Color32Renderer Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public class Color32Renderer : IBarcodeRenderer<Color32[]> Constructors Color32Renderer() Initializes a new instance of the Color32Renderer class. Declaration public Color32Renderer() Properties Background Gets or sets the background color. Declaration public Color32 Background { get; set; } Property Value Type Description Color32 The background color. Foreground Gets or sets the foreground color. Declaration public Color32 Foreground { get; set; } Property Value Type Description Color32 The foreground color. Methods Render(BitMatrix, BarcodeFormat, String) Renders the specified matrix. Declaration public Color32[] Render(BitMatrix matrix, BarcodeFormat format, string content) Parameters Type Name Description BitMatrix matrix The matrix. BarcodeFormat format The format. String content The content. Returns Type Description Color32 [] Render(BitMatrix, BarcodeFormat, String, EncodingOptions) Renders the specified matrix. Declaration public Color32[] Render(BitMatrix matrix, BarcodeFormat format, string content, EncodingOptions options) Parameters Type Name Description BitMatrix matrix The matrix. BarcodeFormat format The format. String content The content. EncodingOptions options The options. Returns Type Description Color32 []"
  },
  "api/ZXing.Common.BitArray.html": {
    "href": "api/ZXing.Common.BitArray.html",
    "title": "Class BitArray | Unity Algorand SDK",
    "keywords": "Class BitArray A simple, fast array of bits, represented compactly by an array of ints internally. Inheritance Object BitArray Namespace : ZXing.Common Assembly : cs.temp.dll.dll Syntax public sealed class BitArray Constructors BitArray() default constructor Declaration public BitArray() BitArray(Int32) initializing constructor Declaration public BitArray(int size) Parameters Type Name Description Int32 size desired size of the array Properties Array Declaration public int[] Array { get; } Property Value Type Description Int32 [] underlying array of ints. The first element holds the first 32 bits, and the least significant bit is bit 0. Item[Int32] index accessor Declaration public bool this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Boolean Size size of the array, number of elements Declaration public int Size { get; } Property Value Type Description Int32 SizeInBytes size of the array in bytes Declaration public int SizeInBytes { get; } Property Value Type Description Int32 Methods appendBit(Boolean) Appends the bit. Declaration public void appendBit(bool bit) Parameters Type Name Description Boolean bit The bit. appendBitArray(BitArray) adds the array to the end Declaration public void appendBitArray(BitArray other) Parameters Type Name Description BitArray other appendBits(Int32, Int32) Appends the least-significant bits, from value, in order from most-significant to least-significant. For example, appending 6 bits from 0x000001E will append the bits 0, 1, 1, 1, 1, 0 in that order. Declaration public void appendBits(int value, int numBits) Parameters Type Name Description Int32 value Int32 containing bits to append Int32 numBits bits from value to append clear() Clears all bits (sets to false). Declaration public void clear() Clone() Erstellt ein neues Objekt, das eine Kopie der aktuellen Instanz darstellt. Declaration public object Clone() Returns Type Description Object Ein neues Objekt, das eine Kopie dieser Instanz darstellt. Equals(Object) Determines whether the specified Object is equal to this instance. Declaration public override bool Equals(Object o) Parameters Type Name Description Object o The Object to compare with this instance. Returns Type Description Boolean true if the specified Object is equal to this instance; otherwise, false . flip(Int32) Flips bit i. Declaration public void flip(int i) Parameters Type Name Description Int32 i bit to set GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Object.GetHashCode() getNextSet(Int32) Gets the next set. Declaration public int getNextSet(int from) Parameters Type Name Description Int32 from first bit to check Returns Type Description Int32 index of first bit that is set, starting from the given index, or size if none are set at or beyond this given index getNextUnset(Int32) see getNextSet(int) Declaration public int getNextUnset(int from) Parameters Type Name Description Int32 from index to start looking for unset bit Returns Type Description Int32 index of next unset bit, or Size if none are unset until the end isRange(Int32, Int32, Boolean) Efficient method to check if a range of bits is set, or not set. Declaration public bool isRange(int start, int end, bool value) Parameters Type Name Description Int32 start start of range, inclusive. Int32 end end of range, exclusive Boolean value if true, checks that bits in range are set, otherwise checks that they are not set Returns Type Description Boolean true iff all bits are set or not set in range, according to value argument reverse() Reverses all bits in the array. Declaration public void reverse() setBulk(Int32, Int32) Sets a block of 32 bits, starting at bit i. Declaration public void setBulk(int i, int newBits) Parameters Type Name Description Int32 i first bit to set Int32 newBits the new value of the next 32 bits. Note again that the least-significant bit corresponds to bit i, the next-least-significant to i+1, and so on. setRange(Int32, Int32) Sets a range of bits. Declaration public void setRange(int start, int end) Parameters Type Name Description Int32 start start of range, inclusive. Int32 end end of range, exclusive toBytes(Int32, Byte[], Int32, Int32) converts to bytes. Declaration public void toBytes(int bitOffset, byte[] array, int offset, int numBytes) Parameters Type Name Description Int32 bitOffset first bit to start writing Byte [] array array to write into. Bytes are written most-significant byte first. This is the opposite of the internal representation, which is exposed by BitArray Int32 offset position in array to start writing Int32 numBytes how many bytes to write ToString() Returns a String that represents this instance. Declaration public override String ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString() xor(BitArray) XOR operation Declaration public void xor(BitArray other) Parameters Type Name Description BitArray other"
  },
  "api/ZXing.Common.BitMatrix.html": {
    "href": "api/ZXing.Common.BitMatrix.html",
    "title": "Class BitMatrix | Unity Algorand SDK",
    "keywords": "Class BitMatrix Represents a 2D matrix of bits. In function arguments below, and throughout the common module, x is the column position, and y is the row position. The ordering is always x, y. The origin is at the top-left. Internally the bits are represented in a 1-D array of 32-bit ints. However, each row begins with a new int. This is done intentionally so that we can copy out a row into a BitArray very efficiently. The ordering of bits is row-major. Within each int, the least significant bits are used first, meaning they represent lower x values. This is compatible with BitArray's implementation. Inheritance Object BitMatrix Namespace : ZXing.Common Assembly : cs.temp.dll.dll Syntax public sealed class BitMatrix Constructors BitMatrix(Int32) Creates an empty square BitMatrix . Declaration public BitMatrix(int dimension) Parameters Type Name Description Int32 dimension height and width BitMatrix(Int32, Int32) Creates an empty square BitMatrix . Declaration public BitMatrix(int width, int height) Parameters Type Name Description Int32 width bit matrix width Int32 height bit matrix height Properties Dimension This method is for compatibility with older code. It's only logical to call if the matrix is square, so I'm throwing if that's not the case. Declaration public int Dimension { get; } Property Value Type Description Int32 row/column dimension of this matrix Height Declaration public int Height { get; } Property Value Type Description Int32 The height of the matrix Item[Int32, Int32] Gets the requested bit, where true means black. Declaration public bool this[int x, int y] { get; set; } Parameters Type Name Description Int32 x The horizontal component (i.e. which column) Int32 y The vertical component (i.e. which row) Property Value Type Description Boolean value of given bit in matrix RowSize Declaration public int RowSize { get; } Property Value Type Description Int32 The rowsize of the matrix Width Declaration public int Width { get; } Property Value Type Description Int32 The width of the matrix Methods clear() Clears all bits (sets to false). Declaration public void clear() Clone() Clones this instance. Declaration public object Clone() Returns Type Description Object Equals(Object) Determines whether the specified Object is equal to this instance. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj The Object to compare with this instance. Returns Type Description Boolean true if the specified Object is equal to this instance; otherwise, false . Overrides Object.Equals(Object) flip() Flips every bit in the matrix. Declaration public void flip() flip(Int32, Int32) Flips the given bit. Declaration public void flip(int x, int y) Parameters Type Name Description Int32 x The horizontal component (i.e. which column) Int32 y The vertical component (i.e. which row) flipWhen(Func<Int32, Int32, Boolean>) flip all of the bits, if shouldBeFlipped is true for the coordinates Declaration public void flipWhen(Func<int, int, bool> shouldBeFlipped) Parameters Type Name Description Func < Int32 , Int32 , Boolean > shouldBeFlipped should return true, if the bit at a given coordinate should be flipped getBottomRightOnBit() bottom right Declaration public int[] getBottomRightOnBit() Returns Type Description Int32 [] getEnclosingRectangle() This is useful in detecting the enclosing rectangle of a 'pure' barcode. Declaration public int[] getEnclosingRectangle() Returns Type Description Int32 [] {left,top,width,height} enclosing rectangle of all 1 bits, or null if it is all white GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Object.GetHashCode() getRow(Int32, BitArray) A fast method to retrieve one row of data from the matrix as a BitArray. Declaration public BitArray getRow(int y, BitArray row) Parameters Type Name Description Int32 y The row to retrieve BitArray row An optional caller-allocated BitArray, will be allocated if null or too small Returns Type Description BitArray The resulting BitArray - this reference should always be used even when passing your own row getTopLeftOnBit() This is useful in detecting a corner of a 'pure' barcode. Declaration public int[] getTopLeftOnBit() Returns Type Description Int32 [] {x,y} coordinate of top-left-most 1 bit, or null if it is all white parse(String, String, String) parse the string representation to a bitmatrix Declaration public static BitMatrix parse(String stringRepresentation, String setString, String unsetString) Parameters Type Name Description String stringRepresentation String setString String unsetString Returns Type Description BitMatrix parse(Boolean[][]) Interprets a 2D array of booleans as a BitMatrix , where \"true\" means an \"on\" bit. Declaration public static BitMatrix parse(bool[][] image) Parameters Type Name Description Boolean [][] image bits of the image, as a row-major 2D array. Elements are arrays representing rows Returns Type Description BitMatrix BitMatrix representation of image rotate180() Modifies this {@code BitMatrix} to represent the same but rotated 180 degrees Declaration public void rotate180() rotate90() Modifies this {@code BitMatrix} to represent the same but rotated 90 degrees counterclockwise Declaration public void rotate90() setRegion(Int32, Int32, Int32, Int32) Sets a square region of the bit matrix to true. Declaration public void setRegion(int left, int top, int width, int height) Parameters Type Name Description Int32 left The horizontal position to begin at (inclusive) Int32 top The vertical position to begin at (inclusive) Int32 width The width of the region Int32 height The height of the region setRow(Int32, BitArray) Sets the row. Declaration public void setRow(int y, BitArray row) Parameters Type Name Description Int32 y row to set BitArray row {@link BitArray} to copy from ToString() Returns a String that represents this instance. Declaration public override String ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString() ToString(String, String) Returns a String that represents this instance. Declaration public String ToString(String setString, String unsetString) Parameters Type Name Description String setString The set string. String unsetString The unset string. Returns Type Description String A String that represents this instance. ToString(String, String, String) Returns a String that represents this instance. Declaration public String ToString(String setString, String unsetString, String lineSeparator) Parameters Type Name Description String setString The set string. String unsetString The unset string. String lineSeparator The line separator. Returns Type Description String A String that represents this instance. xor(BitMatrix) Exclusive-or (XOR): Flip the bit in this {@code BitMatrix} if the corresponding mask bit is set. Declaration public void xor(BitMatrix mask) Parameters Type Name Description BitMatrix mask The mask."
  },
  "api/ZXing.Common.BitSource.html": {
    "href": "api/ZXing.Common.BitSource.html",
    "title": "Class BitSource | Unity Algorand SDK",
    "keywords": "Class BitSource This provides an easy abstraction to read bits at a time from a sequence of bytes, where the number of bits read is not often a multiple of 8. This class is thread-safe but not reentrant. Unless the caller modifies the bytes array it passed in, in which case all bets are off. Inheritance Object BitSource Namespace : ZXing.Common Assembly : cs.temp.dll.dll Syntax public sealed class BitSource Constructors BitSource(Byte[]) Declaration public BitSource(byte[] bytes) Parameters Type Name Description Byte [] bytes bytes from which this will read bits. Bits will be read from the first byte first. Bits are read within a byte from most-significant to least-significant bit. Properties BitOffset index of next bit in current byte which would be read by the next call to {@link #readBits(int)}. Declaration public int BitOffset { get; } Property Value Type Description Int32 ByteOffset index of next byte in input byte array which would be read by the next call to {@link #readBits(int)}. Declaration public int ByteOffset { get; } Property Value Type Description Int32 Methods available() Declaration public int available() Returns Type Description Int32 number of bits that can be read successfully readBits(Int32) Declaration public int readBits(int numBits) Parameters Type Name Description Int32 numBits number of bits to read Returns Type Description Int32 int representing the bits read. The bits will appear as the least-significant bits of the int"
  },
  "api/ZXing.Common.CharacterSetECI.html": {
    "href": "api/ZXing.Common.CharacterSetECI.html",
    "title": "Class CharacterSetECI | Unity Algorand SDK",
    "keywords": "Class CharacterSetECI Encapsulates a Character Set ECI, according to \"Extended Channel Interpretations\" 5.3.1.1 of ISO 18004. Inheritance Object ECI CharacterSetECI Inherited Members ECI.Value ECI.getECIByValue(Int32) Namespace : ZXing.Common Assembly : cs.temp.dll.dll Syntax public sealed class CharacterSetECI : ECI Properties EncodingName encoding name Declaration public String EncodingName { get; } Property Value Type Description String Methods getCharacterSetECI(Encoding) Declaration public static CharacterSetECI getCharacterSetECI(Encoding encoding) Parameters Type Name Description Encoding encoding encoding Returns Type Description CharacterSetECI CharacterSetECI representing ECI for character encoding, or null if it is legal but unsupported getCharacterSetECIByName(String) Declaration public static CharacterSetECI getCharacterSetECIByName(String name) Parameters Type Name Description String name character set ECI encoding name Returns Type Description CharacterSetECI CharacterSetECI representing ECI for character encoding, or null if it is legal but unsupported getCharacterSetECIByValue(Int32) Declaration public static CharacterSetECI getCharacterSetECIByValue(int value) Parameters Type Name Description Int32 value character set ECI value Returns Type Description CharacterSetECI CharacterSetECI representing ECI of given value, or null if it is legal but unsupported getEncoding(String) returns the encoding object fo the specified name Declaration public static Encoding getEncoding(string encodingName) Parameters Type Name Description String encodingName Returns Type Description Encoding getEncoding(CharacterSetECI) returns the encoding object fo the specified charset Declaration public static Encoding getEncoding(CharacterSetECI charsetECI) Parameters Type Name Description CharacterSetECI charsetECI Returns Type Description Encoding"
  },
  "api/ZXing.Common.DecoderResult.html": {
    "href": "api/ZXing.Common.DecoderResult.html",
    "title": "Class DecoderResult | Unity Algorand SDK",
    "keywords": "Class DecoderResult Encapsulates the result of decoding a matrix of bits. This typically applies to 2D barcode formats. For now it contains the raw bytes obtained, as well as a String interpretation of those bytes, if applicable. Sean Owen Inheritance Object DecoderResult Namespace : ZXing.Common Assembly : cs.temp.dll.dll Syntax public sealed class DecoderResult Constructors DecoderResult(Byte[], String, IList<Byte[]>, String, Int32) initializing constructor Declaration public DecoderResult(byte[] rawBytes, String text, IList<byte[]> byteSegments, String ecLevel, int symbologyModifier) Parameters Type Name Description Byte [] rawBytes String text IList < Byte []> byteSegments String ecLevel Int32 symbologyModifier DecoderResult(Byte[], String, IList<Byte[]>, String, Int32, Int32, Int32) initializing constructor Declaration public DecoderResult(byte[] rawBytes, String text, IList<byte[]> byteSegments, String ecLevel, int saSequence, int saParity, int symbologyModifier) Parameters Type Name Description Byte [] rawBytes String text IList < Byte []> byteSegments String ecLevel Int32 saSequence Int32 saParity Int32 symbologyModifier DecoderResult(Byte[], String, List<Byte[]>, String) initializing constructor Declaration public DecoderResult(byte[] rawBytes, String text, List<byte[]> byteSegments, String ecLevel) Parameters Type Name Description Byte [] rawBytes String text List < Byte []> byteSegments String ecLevel DecoderResult(Byte[], String, List<Byte[]>, String, Int32, Int32) initializing constructor Declaration public DecoderResult(byte[] rawBytes, String text, List<byte[]> byteSegments, String ecLevel, int saSequence, int saParity) Parameters Type Name Description Byte [] rawBytes String text List < Byte []> byteSegments String ecLevel Int32 saSequence Int32 saParity DecoderResult(Byte[], Int32, String, IList<Byte[]>, String) initializing constructor Declaration public DecoderResult(byte[] rawBytes, int numBits, String text, IList<byte[]> byteSegments, String ecLevel) Parameters Type Name Description Byte [] rawBytes Int32 numBits String text IList < Byte []> byteSegments String ecLevel DecoderResult(Byte[], Int32, String, IList<Byte[]>, String, Int32, Int32, Int32) initializing constructor Declaration public DecoderResult(byte[] rawBytes, int numBits, String text, IList<byte[]> byteSegments, String ecLevel, int saSequence, int saParity, int symbologyModifier) Parameters Type Name Description Byte [] rawBytes Int32 numBits String text IList < Byte []> byteSegments String ecLevel Int32 saSequence Int32 saParity Int32 symbologyModifier Properties ByteSegments list of byte segments in the result, or null if not applicable Declaration public IList<byte[]> ByteSegments { get; } Property Value Type Description IList < Byte []> ECLevel name of error correction level used, or null if not applicable Declaration public String ECLevel { get; } Property Value Type Description String Erasures number of erasures corrected, or null if not applicable Declaration public int Erasures { get; set; } Property Value Type Description Int32 ErrorsCorrected number of errors corrected, or null if not applicable Declaration public int ErrorsCorrected { get; set; } Property Value Type Description Int32 NumBits how many bits of RawBytes are valid; typically 8 times its length Declaration public int NumBits { get; } Property Value Type Description Int32 Other Miscellanseous data value for the various decoders Declaration public object Other { get; set; } Property Value Type Description Object The other. RawBytes raw bytes representing the result, or null if not applicable Declaration public byte[] RawBytes { get; } Property Value Type Description Byte [] StructuredAppend gets a value which describe if structure append data was found Declaration public bool StructuredAppend { get; } Property Value Type Description Boolean StructuredAppendParity gives the parity information if structured append was found Declaration public int StructuredAppendParity { get; } Property Value Type Description Int32 StructuredAppendSequenceNumber gives the sequence number of the result if structured append was found Declaration public int StructuredAppendSequenceNumber { get; } Property Value Type Description Int32 SymbologyModifier gives the symbology identifier Declaration public int SymbologyModifier { get; set; } Property Value Type Description Int32 Text text representation of the result Declaration public String Text { get; } Property Value Type Description String"
  },
  "api/ZXing.Common.DecodingOptions.html": {
    "href": "api/ZXing.Common.DecodingOptions.html",
    "title": "Class DecodingOptions | Unity Algorand SDK",
    "keywords": "Class DecodingOptions Defines an container for encoder options Inheritance Object DecodingOptions Namespace : ZXing.Common Assembly : cs.temp.dll.dll Syntax public class DecodingOptions Constructors DecodingOptions() Initializes a new instance of the DecodingOptions class. Declaration public DecodingOptions() Properties AllowedEANExtensions Allowed extension lengths for EAN or UPC barcodes. Other formats will ignore this. Maps to an int[] of the allowed extension lengths, for example [2], [5], or [2, 5]. If it is optional to have an extension, do not set this hint. If this is set, and a UPC or EAN barcode is found but an extension is not, then no result will be returned at all. Declaration public int[] AllowedEANExtensions { get; set; } Property Value Type Description Int32 [] AllowedLengths Allowed lengths of encoded data -- reject anything else. Maps to an int[]. Declaration public int[] AllowedLengths { get; set; } Property Value Type Description Int32 [] AssumeCode39CheckDigit Assume Code 39 codes employ a check digit. Maps to Boolean . Declaration public bool AssumeCode39CheckDigit { get; set; } Property Value Type Description Boolean true if it should assume a Code 39 check digit; otherwise, false . AssumeGS1 Assume the barcode is being processed as a GS1 barcode, and modify behavior as needed. For example this affects FNC1 handling for Code 128 (aka GS1-128). Declaration public bool AssumeGS1 { get; set; } Property Value Type Description Boolean true if it should assume GS1; otherwise, false . AssumeMSICheckDigit Assume MSI codes employ a check digit. Maps to Boolean . Declaration public bool AssumeMSICheckDigit { get; set; } Property Value Type Description Boolean true if it should assume a MSI check digit; otherwise, false . CharacterSet Specifies what character encoding to use when decoding, where applicable (type String) Declaration public string CharacterSet { get; set; } Property Value Type Description String The character set. Hints Gets the data container for all options Declaration public IDictionary<DecodeHintType, object> Hints { get; } Property Value Type Description IDictionary < DecodeHintType , Object > PossibleFormats Image is known to be of one of a few possible formats. Maps to a {@link java.util.List} of {@link BarcodeFormat}s. Declaration public IList<BarcodeFormat> PossibleFormats { get; set; } Property Value Type Description IList < BarcodeFormat > The possible formats. PureBarcode Image is a pure monochrome image of a barcode. Declaration public bool PureBarcode { get; set; } Property Value Type Description Boolean true if monochrome image of a barcode; otherwise, false . ReturnCodabarStartEnd If true, return the start and end digits in a Codabar barcode instead of stripping them. They are alpha, whereas the rest are numeric. By default, they are stripped, but this causes them to not be. Doesn't matter what it maps to; use Boolean . Declaration public bool ReturnCodabarStartEnd { get; set; } Property Value Type Description Boolean TryHarder Gets or sets a flag which cause a deeper look into the bitmap Declaration public bool TryHarder { get; set; } Property Value Type Description Boolean true if [try harder]; otherwise, false . TryInverted Gets or sets a value indicating whether the image should be automatically inverted if no result is found in the original image. ATTENTION: Please be carefully because it slows down the decoding process if it is used Declaration public bool TryInverted { get; set; } Property Value Type Description Boolean true if image should be inverted; otherwise, false . UseCode39ExtendedMode if Code39 could be detected try to use extended mode for full ASCII character set Declaration public bool UseCode39ExtendedMode { get; set; } Property Value Type Description Boolean UseCode39RelaxedExtendedMode Don't fail if a Code39 is detected but can't be decoded in extended mode. Return the raw Code39 result instead. Maps to Boolean . Declaration public bool UseCode39RelaxedExtendedMode { get; set; } Property Value Type Description Boolean Events ValueChanged event is raised when a value is changed Declaration public event Action<object, EventArgs> ValueChanged Event Type Type Description Action < Object , EventArgs >"
  },
  "api/ZXing.Common.DefaultGridSampler.html": {
    "href": "api/ZXing.Common.DefaultGridSampler.html",
    "title": "Class DefaultGridSampler | Unity Algorand SDK",
    "keywords": "Class DefaultGridSampler Inheritance Object GridSampler DefaultGridSampler Inherited Members GridSampler.Instance GridSampler.setGridSampler(GridSampler) GridSampler.checkAndNudgePoints(BitMatrix, Single[]) Namespace : ZXing.Common Assembly : cs.temp.dll.dll Syntax public sealed class DefaultGridSampler : GridSampler Methods sampleGrid(BitMatrix, Int32, Int32, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single) Declaration public override BitMatrix sampleGrid(BitMatrix image, int dimensionX, int dimensionY, float p1ToX, float p1ToY, float p2ToX, float p2ToY, float p3ToX, float p3ToY, float p4ToX, float p4ToY, float p1FromX, float p1FromY, float p2FromX, float p2FromY, float p3FromX, float p3FromY, float p4FromX, float p4FromY) Parameters Type Name Description BitMatrix image Int32 dimensionX Int32 dimensionY Single p1ToX Single p1ToY Single p2ToX Single p2ToY Single p3ToX Single p3ToY Single p4ToX Single p4ToY Single p1FromX Single p1FromY Single p2FromX Single p2FromY Single p3FromX Single p3FromY Single p4FromX Single p4FromY Returns Type Description BitMatrix Overrides GridSampler.sampleGrid(BitMatrix, Int32, Int32, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single) sampleGrid(BitMatrix, Int32, Int32, PerspectiveTransform) Declaration public override BitMatrix sampleGrid(BitMatrix image, int dimensionX, int dimensionY, PerspectiveTransform transform) Parameters Type Name Description BitMatrix image Int32 dimensionX Int32 dimensionY PerspectiveTransform transform Returns Type Description BitMatrix Overrides GridSampler.sampleGrid(BitMatrix, Int32, Int32, PerspectiveTransform)"
  },
  "api/ZXing.Common.Detector.html": {
    "href": "api/ZXing.Common.Detector.html",
    "title": "Namespace ZXing.Common.Detector | Unity Algorand SDK",
    "keywords": "Namespace ZXing.Common.Detector Classes MathUtils General math-related and numeric utility functions. MonochromeRectangleDetector A somewhat generic detector that looks for a barcode-like rectangular region within an image. It looks within a mostly white region of an image for a region of black and white, but mostly black. It returns the four corners of the region, as best it can determine. WhiteRectangleDetector Detects a candidate barcode-like rectangular region within an image. It starts around the center of the image, increases the size of the candidate region until it finds a white rectangular region. By keeping track of the last black points it encountered, it determines the corners of the barcode."
  },
  "api/ZXing.Common.Detector.MathUtils.html": {
    "href": "api/ZXing.Common.Detector.MathUtils.html",
    "title": "Class MathUtils | Unity Algorand SDK",
    "keywords": "Class MathUtils General math-related and numeric utility functions. Inheritance Object MathUtils Namespace : ZXing.Common.Detector Assembly : cs.temp.dll.dll Syntax public static class MathUtils Methods distance(Int32, Int32, Int32, Int32) Declaration public static float distance(int aX, int aY, int bX, int bY) Parameters Type Name Description Int32 aX Int32 aY Int32 bX Int32 bY Returns Type Description Single Euclidean distance between points A and B distance(Single, Single, Single, Single) Declaration public static float distance(float aX, float aY, float bX, float bY) Parameters Type Name Description Single aX Single aY Single bX Single bY Returns Type Description Single Euclidean distance between points A and B round(Single) Ends up being a bit faster than {@link Math#round(float)}. This merely rounds its argument to the nearest int, where x.5 rounds up to x+1. Semantics of this shortcut differ slightly from {@link Math#round(float)} in that half rounds down for negative values. -2.5 rounds to -3, not -2. For purposes here it makes no difference. Declaration public static int round(float d) Parameters Type Name Description Single d real value to round Returns Type Description Int32 nearest int sum(Int32[]) Declaration public static int sum(int[] array) Parameters Type Name Description Int32 [] array values to sum Returns Type Description Int32 sum of values in array"
  },
  "api/ZXing.Common.Detector.MonochromeRectangleDetector.html": {
    "href": "api/ZXing.Common.Detector.MonochromeRectangleDetector.html",
    "title": "Class MonochromeRectangleDetector | Unity Algorand SDK",
    "keywords": "Class MonochromeRectangleDetector A somewhat generic detector that looks for a barcode-like rectangular region within an image. It looks within a mostly white region of an image for a region of black and white, but mostly black. It returns the four corners of the region, as best it can determine. Inheritance Object MonochromeRectangleDetector Namespace : ZXing.Common.Detector Assembly : cs.temp.dll.dll Syntax public sealed class MonochromeRectangleDetector Constructors MonochromeRectangleDetector(BitMatrix) initializing constructor Declaration public MonochromeRectangleDetector(BitMatrix image) Parameters Type Name Description BitMatrix image Methods detect() Detects a rectangular region of black and white -- mostly black -- with a region of mostly white, in an image. Declaration public ResultPoint[] detect() Returns Type Description ResultPoint [] ResultPoint [] describing the corners of the rectangular region. The first and last points are opposed on the diagonal, as are the second and third. The first point will be the topmost point and the last, the bottommost. The second point will be leftmost and the third, the rightmost"
  },
  "api/ZXing.Common.Detector.WhiteRectangleDetector.html": {
    "href": "api/ZXing.Common.Detector.WhiteRectangleDetector.html",
    "title": "Class WhiteRectangleDetector | Unity Algorand SDK",
    "keywords": "Class WhiteRectangleDetector Detects a candidate barcode-like rectangular region within an image. It starts around the center of the image, increases the size of the candidate region until it finds a white rectangular region. By keeping track of the last black points it encountered, it determines the corners of the barcode. Inheritance Object WhiteRectangleDetector Namespace : ZXing.Common.Detector Assembly : cs.temp.dll.dll Syntax public sealed class WhiteRectangleDetector Methods Create(BitMatrix) Creates a WhiteRectangleDetector instance Declaration public static WhiteRectangleDetector Create(BitMatrix image) Parameters Type Name Description BitMatrix image The image. Returns Type Description WhiteRectangleDetector null, if image is too small, otherwise a WhiteRectangleDetector instance Create(BitMatrix, Int32, Int32, Int32) Creates a WhiteRectangleDetector instance Declaration public static WhiteRectangleDetector Create(BitMatrix image, int initSize, int x, int y) Parameters Type Name Description BitMatrix image barcode image to find a rectangle in Int32 initSize initial size of search area around center Int32 x x position of search center Int32 y y position of search center Returns Type Description WhiteRectangleDetector null, if image is too small, otherwise a WhiteRectangleDetector instance detect() Detects a candidate barcode-like rectangular region within an image. It starts around the center of the image, increases the size of the candidate region until it finds a white rectangular region. Declaration public ResultPoint[] detect() Returns Type Description ResultPoint [] ResultPoint [] describing the corners of the rectangular region. The first and last points are opposed on the diagonal, as are the second and third. The first point will be the topmost point and the last, the bottommost. The second point will be leftmost and the third, the rightmost"
  },
  "api/ZXing.Common.DetectorResult.html": {
    "href": "api/ZXing.Common.DetectorResult.html",
    "title": "Class DetectorResult | Unity Algorand SDK",
    "keywords": "Class DetectorResult Encapsulates the result of detecting a barcode in an image. This includes the raw matrix of black/white pixels corresponding to the barcode, and possibly points of interest in the image, like the location of finder patterns or corners of the barcode in the image. Inheritance Object DetectorResult Namespace : ZXing.Common Assembly : cs.temp.dll.dll Syntax public class DetectorResult Constructors DetectorResult(BitMatrix, ResultPoint[]) initializing constructor Declaration public DetectorResult(BitMatrix bits, ResultPoint[] points) Parameters Type Name Description BitMatrix bits ResultPoint [] points Properties Bits the detected bits Declaration public BitMatrix Bits { get; } Property Value Type Description BitMatrix Points the pixel points where the result is found Declaration public ResultPoint[] Points { get; } Property Value Type Description ResultPoint []"
  },
  "api/ZXing.Common.ECI.html": {
    "href": "api/ZXing.Common.ECI.html",
    "title": "Class ECI | Unity Algorand SDK",
    "keywords": "Class ECI Superclass of classes encapsulating types ECIs, according to \"Extended Channel Interpretations\" 5.3 of ISO 18004. Inheritance Object ECI CharacterSetECI Namespace : ZXing.Common Assembly : cs.temp.dll.dll Syntax public abstract class ECI Properties Value the ECI value Declaration public virtual int Value { get; } Property Value Type Description Int32 Methods getECIByValue(Int32) Declaration public static ECI getECIByValue(int val) Parameters Type Name Description Int32 val ECI value Returns Type Description ECI ECI representing ECI of given value, or null if it is legal but unsupported"
  },
  "api/ZXing.Common.EncodingOptions.html": {
    "href": "api/ZXing.Common.EncodingOptions.html",
    "title": "Class EncodingOptions | Unity Algorand SDK",
    "keywords": "Class EncodingOptions Defines an container for encoder options Inheritance Object EncodingOptions Namespace : ZXing.Common Assembly : cs.temp.dll.dll Syntax public class EncodingOptions Constructors EncodingOptions() Initializes a new instance of the EncodingOptions class. Declaration public EncodingOptions() Properties GS1Format Specifies whether the data should be encoded to the GS1 standard; FNC1 character is added in front of the data Declaration public bool GS1Format { get; set; } Property Value Type Description Boolean Height Specifies the height of the barcode image Declaration public int Height { get; set; } Property Value Type Description Int32 Hints Gets the data container for all options Declaration public IDictionary<EncodeHintType, object> Hints { get; } Property Value Type Description IDictionary < EncodeHintType , Object > Margin Specifies margin, in pixels, to use when generating the barcode. The meaning can vary by format; for example it controls margin before and after the barcode horizontally for most 1D formats. Declaration public int Margin { get; set; } Property Value Type Description Int32 PureBarcode Don't put the content string into the output image. Declaration public bool PureBarcode { get; set; } Property Value Type Description Boolean Width Specifies the width of the barcode image Declaration public int Width { get; set; } Property Value Type Description Int32"
  },
  "api/ZXing.Common.GlobalHistogramBinarizer.html": {
    "href": "api/ZXing.Common.GlobalHistogramBinarizer.html",
    "title": "Class GlobalHistogramBinarizer | Unity Algorand SDK",
    "keywords": "Class GlobalHistogramBinarizer This Binarizer implementation uses the old ZXing global histogram approach. It is suitable for low-end mobile devices which don't have enough CPU or memory to use a local thresholding algorithm. However, because it picks a global black point, it cannot handle difficult shadows and gradients. Faster mobile devices and all desktop applications should probably use HybridBinarizer instead. dswitkin@google.com (Daniel Switkin) Sean Owen Inheritance Object Binarizer GlobalHistogramBinarizer HybridBinarizer Inherited Members Binarizer.LuminanceSource Binarizer.getBlackRow(Int32, BitArray) Binarizer.Width Binarizer.Height Namespace : ZXing.Common Assembly : cs.temp.dll.dll Syntax public class GlobalHistogramBinarizer : Binarizer Constructors GlobalHistogramBinarizer(LuminanceSource) Initializes a new instance of the GlobalHistogramBinarizer class. Declaration public GlobalHistogramBinarizer(LuminanceSource source) Parameters Type Name Description LuminanceSource source The source. Properties BlackMatrix Does not sharpen the data, as this call is intended to only be used by 2D Readers. Declaration public override BitMatrix BlackMatrix { get; } Property Value Type Description BitMatrix Overrides Binarizer.BlackMatrix Methods createBinarizer(LuminanceSource) Creates a new object with the same type as this Binarizer implementation, but with pristine state. This is needed because Binarizer implementations may be stateful, e.g. keeping a cache of 1 bit data. See Effective Java for why we can't use Java's clone() method. Declaration public override Binarizer createBinarizer(LuminanceSource source) Parameters Type Name Description LuminanceSource source The LuminanceSource this Binarizer will operate on. Returns Type Description Binarizer A new concrete Binarizer implementation object. Overrides Binarizer.createBinarizer(LuminanceSource) getBlackRow(Int32, BitArray) Applies simple sharpening to the row data to improve performance of the 1D Readers. Declaration public override BitArray getBlackRow(int y, BitArray row) Parameters Type Name Description Int32 y BitArray row Returns Type Description BitArray"
  },
  "api/ZXing.Common.GridSampler.html": {
    "href": "api/ZXing.Common.GridSampler.html",
    "title": "Class GridSampler | Unity Algorand SDK",
    "keywords": "Class GridSampler Implementations of this class can, given locations of finder patterns for a QR code in an image, sample the right points in the image to reconstruct the QR code, accounting for perspective distortion. It is abstracted since it is relatively expensive and should be allowed to take advantage of platform-specific optimized implementations, like Sun's Java Advanced Imaging library, but which may not be available in other environments such as J2ME, and vice versa. The implementation used can be controlled by calling {@link #setGridSampler(GridSampler)} with an instance of a class which implements this interface. Inheritance Object GridSampler DefaultGridSampler Namespace : ZXing.Common Assembly : cs.temp.dll.dll Syntax public abstract class GridSampler Properties Instance Declaration public static GridSampler Instance { get; } Property Value Type Description GridSampler the current implementation of GridSampler Methods checkAndNudgePoints(BitMatrix, Single[]) Checks a set of points that have been transformed to sample points on an image against the image's dimensions to see if the point are even within the image. This method will actually \"nudge\" the endpoints back onto the image if they are found to be barely (less than 1 pixel) off the image. This accounts for imperfect detection of finder patterns in an image where the QR Code runs all the way to the image border. For efficiency, the method will check points from either end of the line until one is found to be within the image. Because the set of points are assumed to be linear, this is valid. Declaration protected static bool checkAndNudgePoints(BitMatrix image, float[] points) Parameters Type Name Description BitMatrix image image into which the points should map Single [] points actual points in x1,y1,...,xn,yn form Returns Type Description Boolean sampleGrid(BitMatrix, Int32, Int32, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single) Samples an image for a square matrix of bits of the given dimension. This is used to extract the black/white modules of a 2D barcode like a QR Code found in an image. Because this barcode may be rotated or perspective-distorted, the caller supplies four points in the source image that define known points in the barcode, so that the image may be sampled appropriately. The last eight \"from\" parameters are four X/Y coordinate pairs of locations of points in the image that define some significant points in the image to be sample. For example, these may be the location of finder pattern in a QR Code. The first eight \"to\" parameters are four X/Y coordinate pairs measured in the destination BitMatrix , from the top left, where the known points in the image given by the \"from\" parameters map to. These 16 parameters define the transformation needed to sample the image. Declaration public abstract BitMatrix sampleGrid(BitMatrix image, int dimensionX, int dimensionY, float p1ToX, float p1ToY, float p2ToX, float p2ToY, float p3ToX, float p3ToY, float p4ToX, float p4ToY, float p1FromX, float p1FromY, float p2FromX, float p2FromY, float p3FromX, float p3FromY, float p4FromX, float p4FromY) Parameters Type Name Description BitMatrix image image to sample Int32 dimensionX The dimension X. Int32 dimensionY The dimension Y. Single p1ToX The p1 preimage X. Single p1ToY The p1 preimage Y. Single p2ToX The p2 preimage X. Single p2ToY The p2 preimage Y. Single p3ToX The p3 preimage X. Single p3ToY The p3 preimage Y. Single p4ToX The p4 preimage X. Single p4ToY The p4 preimage Y. Single p1FromX The p1 image X. Single p1FromY The p1 image Y. Single p2FromX The p2 image X. Single p2FromY The p2 image Y. Single p3FromX The p3 image X. Single p3FromY The p3 image Y. Single p4FromX The p4 image X. Single p4FromY The p4 image Y. Returns Type Description BitMatrix BitMatrix representing a grid of points sampled from the image within a region defined by the \"from\" parameters sampleGrid(BitMatrix, Int32, Int32, PerspectiveTransform) Declaration public virtual BitMatrix sampleGrid(BitMatrix image, int dimensionX, int dimensionY, PerspectiveTransform transform) Parameters Type Name Description BitMatrix image Int32 dimensionX Int32 dimensionY PerspectiveTransform transform Returns Type Description BitMatrix setGridSampler(GridSampler) Sets the implementation of GridSampler used by the library. One global instance is stored, which may sound problematic. But, the implementation provided ought to be appropriate for the entire platform, and all uses of this library in the whole lifetime of the JVM. For instance, an Android activity can swap in an implementation that takes advantage of native platform libraries. Declaration public static void setGridSampler(GridSampler newGridSampler) Parameters Type Name Description GridSampler newGridSampler The platform-specific object to install."
  },
  "api/ZXing.Common.html": {
    "href": "api/ZXing.Common.html",
    "title": "Namespace ZXing.Common | Unity Algorand SDK",
    "keywords": "Namespace ZXing.Common Classes BitArray A simple, fast array of bits, represented compactly by an array of ints internally. BitMatrix Represents a 2D matrix of bits. In function arguments below, and throughout the common module, x is the column position, and y is the row position. The ordering is always x, y. The origin is at the top-left. Internally the bits are represented in a 1-D array of 32-bit ints. However, each row begins with a new int. This is done intentionally so that we can copy out a row into a BitArray very efficiently. The ordering of bits is row-major. Within each int, the least significant bits are used first, meaning they represent lower x values. This is compatible with BitArray's implementation. BitSource This provides an easy abstraction to read bits at a time from a sequence of bytes, where the number of bits read is not often a multiple of 8. This class is thread-safe but not reentrant. Unless the caller modifies the bytes array it passed in, in which case all bets are off. CharacterSetECI Encapsulates a Character Set ECI, according to \"Extended Channel Interpretations\" 5.3.1.1 of ISO 18004. DecoderResult Encapsulates the result of decoding a matrix of bits. This typically applies to 2D barcode formats. For now it contains the raw bytes obtained, as well as a String interpretation of those bytes, if applicable. Sean Owen DecodingOptions Defines an container for encoder options DefaultGridSampler DetectorResult Encapsulates the result of detecting a barcode in an image. This includes the raw matrix of black/white pixels corresponding to the barcode, and possibly points of interest in the image, like the location of finder patterns or corners of the barcode in the image. ECI Superclass of classes encapsulating types ECIs, according to \"Extended Channel Interpretations\" 5.3 of ISO 18004. EncodingOptions Defines an container for encoder options GlobalHistogramBinarizer This Binarizer implementation uses the old ZXing global histogram approach. It is suitable for low-end mobile devices which don't have enough CPU or memory to use a local thresholding algorithm. However, because it picks a global black point, it cannot handle difficult shadows and gradients. Faster mobile devices and all desktop applications should probably use HybridBinarizer instead. dswitkin@google.com (Daniel Switkin) Sean Owen GridSampler Implementations of this class can, given locations of finder patterns for a QR code in an image, sample the right points in the image to reconstruct the QR code, accounting for perspective distortion. It is abstracted since it is relatively expensive and should be allowed to take advantage of platform-specific optimized implementations, like Sun's Java Advanced Imaging library, but which may not be available in other environments such as J2ME, and vice versa. The implementation used can be controlled by calling {@link #setGridSampler(GridSampler)} with an instance of a class which implements this interface. HybridBinarizer This class implements a local thresholding algorithm, which while slower than the GlobalHistogramBinarizer, is fairly efficient for what it does. It is designed for high frequency images of barcodes with black data on white backgrounds. For this application, it does a much better job than a global blackpoint with severe shadows and gradients. However it tends to produce artifacts on lower frequency images and is therefore not a good general purpose binarizer for uses outside ZXing. This class extends GlobalHistogramBinarizer, using the older histogram approach for 1D readers, and the newer local approach for 2D readers. 1D decoding using a per-row histogram is already inherently local, and only fails for horizontal gradients. We can revisit that problem later, but for now it was not a win to use local blocks for 1D. This Binarizer is the default for the unit tests and the recommended class for library users. dswitkin@google.com (Daniel Switkin) PerspectiveTransform This class implements a perspective transform in two dimensions. Given four source and four destination points, it will compute the transformation implied between them. The code is based directly upon section 3.4.2 of George Wolberg's \"Digital Image Warping\"; see pages 54-56. StringUtils Common string-related functions."
  },
  "api/ZXing.Common.HybridBinarizer.html": {
    "href": "api/ZXing.Common.HybridBinarizer.html",
    "title": "Class HybridBinarizer | Unity Algorand SDK",
    "keywords": "Class HybridBinarizer This class implements a local thresholding algorithm, which while slower than the GlobalHistogramBinarizer, is fairly efficient for what it does. It is designed for high frequency images of barcodes with black data on white backgrounds. For this application, it does a much better job than a global blackpoint with severe shadows and gradients. However it tends to produce artifacts on lower frequency images and is therefore not a good general purpose binarizer for uses outside ZXing. This class extends GlobalHistogramBinarizer, using the older histogram approach for 1D readers, and the newer local approach for 2D readers. 1D decoding using a per-row histogram is already inherently local, and only fails for horizontal gradients. We can revisit that problem later, but for now it was not a win to use local blocks for 1D. This Binarizer is the default for the unit tests and the recommended class for library users. dswitkin@google.com (Daniel Switkin) Inheritance Object Binarizer GlobalHistogramBinarizer HybridBinarizer Inherited Members GlobalHistogramBinarizer.getBlackRow(Int32, BitArray) Binarizer.LuminanceSource Binarizer.getBlackRow(Int32, BitArray) Binarizer.Width Binarizer.Height Namespace : ZXing.Common Assembly : cs.temp.dll.dll Syntax public sealed class HybridBinarizer : GlobalHistogramBinarizer Constructors HybridBinarizer(LuminanceSource) initializing constructor Declaration public HybridBinarizer(LuminanceSource source) Parameters Type Name Description LuminanceSource source Properties BlackMatrix gives the black matrix Declaration public override BitMatrix BlackMatrix { get; } Property Value Type Description BitMatrix Overrides GlobalHistogramBinarizer.BlackMatrix Methods createBinarizer(LuminanceSource) creates a new instance Declaration public override Binarizer createBinarizer(LuminanceSource source) Parameters Type Name Description LuminanceSource source Returns Type Description Binarizer Overrides GlobalHistogramBinarizer.createBinarizer(LuminanceSource)"
  },
  "api/ZXing.Common.PerspectiveTransform.html": {
    "href": "api/ZXing.Common.PerspectiveTransform.html",
    "title": "Class PerspectiveTransform | Unity Algorand SDK",
    "keywords": "Class PerspectiveTransform This class implements a perspective transform in two dimensions. Given four source and four destination points, it will compute the transformation implied between them. The code is based directly upon section 3.4.2 of George Wolberg's \"Digital Image Warping\"; see pages 54-56. Inheritance Object PerspectiveTransform Namespace : ZXing.Common Assembly : cs.temp.dll.dll Syntax public sealed class PerspectiveTransform Methods quadrilateralToQuadrilateral(Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single) Declaration public static PerspectiveTransform quadrilateralToQuadrilateral(float x0, float y0, float x1, float y1, float x2, float y2, float x3, float y3, float x0p, float y0p, float x1p, float y1p, float x2p, float y2p, float x3p, float y3p) Parameters Type Name Description Single x0 Single y0 Single x1 Single y1 Single x2 Single y2 Single x3 Single y3 Single x0p Single y0p Single x1p Single y1p Single x2p Single y2p Single x3p Single y3p Returns Type Description PerspectiveTransform quadrilateralToSquare(Single, Single, Single, Single, Single, Single, Single, Single) Declaration public static PerspectiveTransform quadrilateralToSquare(float x0, float y0, float x1, float y1, float x2, float y2, float x3, float y3) Parameters Type Name Description Single x0 Single y0 Single x1 Single y1 Single x2 Single y2 Single x3 Single y3 Returns Type Description PerspectiveTransform squareToQuadrilateral(Single, Single, Single, Single, Single, Single, Single, Single) Declaration public static PerspectiveTransform squareToQuadrilateral(float x0, float y0, float x1, float y1, float x2, float y2, float x3, float y3) Parameters Type Name Description Single x0 Single y0 Single x1 Single y1 Single x2 Single y2 Single x3 Single y3 Returns Type Description PerspectiveTransform transformPoints(Single[]) Declaration public void transformPoints(float[] points) Parameters Type Name Description Single [] points transformPoints(Single[], Single[]) Convenience method, not optimized for performance. Declaration public void transformPoints(float[] xValues, float[] yValues) Parameters Type Name Description Single [] xValues Single [] yValues"
  },
  "api/ZXing.Common.ReedSolomon.GenericGF.html": {
    "href": "api/ZXing.Common.ReedSolomon.GenericGF.html",
    "title": "Class GenericGF | Unity Algorand SDK",
    "keywords": "Class GenericGF This class contains utility methods for performing mathematical operations over the Galois Fields. Operations use a given primitive polynomial in calculations. Throughout this package, elements of the GF are represented as an {@code int} for convenience and speed (but at the cost of memory). Inheritance Object GenericGF Namespace : ZXing.Common.ReedSolomon Assembly : cs.temp.dll.dll Syntax public sealed class GenericGF Constructors GenericGF(Int32, Int32, Int32) Create a representation of GF(size) using the given primitive polynomial. Declaration public GenericGF(int primitive, int size, int genBase) Parameters Type Name Description Int32 primitive irreducible polynomial whose coefficients are represented by the bits of an int, where the least-significant bit represents the constant coefficient Int32 size the size of the field Int32 genBase the factor b in the generator polynomial can be 0- or 1-based (g(x) = (x+a^b)(x+a^(b+1))...(x+a^(b+2t-1))). In most cases it should be 1, but for QR code it is 0. Fields AZTEC_DATA_10 Aztec data 10 Declaration public static GenericGF AZTEC_DATA_10 Field Value Type Description GenericGF AZTEC_DATA_12 Aztec data 12 Declaration public static GenericGF AZTEC_DATA_12 Field Value Type Description GenericGF AZTEC_DATA_6 Aztec data 6 Declaration public static GenericGF AZTEC_DATA_6 Field Value Type Description GenericGF AZTEC_DATA_8 Aztec data 8 Declaration public static GenericGF AZTEC_DATA_8 Field Value Type Description GenericGF AZTEC_PARAM Aztec param Declaration public static GenericGF AZTEC_PARAM Field Value Type Description GenericGF DATA_MATRIX_FIELD_256 Data Matrix Declaration public static GenericGF DATA_MATRIX_FIELD_256 Field Value Type Description GenericGF MAXICODE_FIELD_64 Maxicode Declaration public static GenericGF MAXICODE_FIELD_64 Field Value Type Description GenericGF QR_CODE_FIELD_256 QR Code Declaration public static GenericGF QR_CODE_FIELD_256 Field Value Type Description GenericGF Properties GeneratorBase Gets the generator base. Declaration public int GeneratorBase { get; } Property Value Type Description Int32 Size Gets the size. Declaration public int Size { get; } Property Value Type Description Int32 Methods ToString() Returns a String that represents this instance. Declaration public override String ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString()"
  },
  "api/ZXing.Common.ReedSolomon.html": {
    "href": "api/ZXing.Common.ReedSolomon.html",
    "title": "Namespace ZXing.Common.ReedSolomon | Unity Algorand SDK",
    "keywords": "Namespace ZXing.Common.ReedSolomon Classes GenericGF This class contains utility methods for performing mathematical operations over the Galois Fields. Operations use a given primitive polynomial in calculations. Throughout this package, elements of the GF are represented as an {@code int} for convenience and speed (but at the cost of memory). ReedSolomonDecoder Implements Reed-Solomon decoding, as the name implies. The algorithm will not be explained here, but the following references were helpful in creating this implementation: Bruce Maggs. \"Decoding Reed-Solomon Codes\" (see discussion of Forney's Formula) J.I. Hall. \"Chapter 5. Generalized Reed-Solomon Codes\" (see discussion of Euclidean algorithm) Much credit is due to William Rucklidge since portions of this code are an indirect port of his C++ Reed-Solomon implementation. ReedSolomonEncoder Implements Reed-Solomon encoding, as the name implies."
  },
  "api/ZXing.Common.ReedSolomon.ReedSolomonDecoder.html": {
    "href": "api/ZXing.Common.ReedSolomon.ReedSolomonDecoder.html",
    "title": "Class ReedSolomonDecoder | Unity Algorand SDK",
    "keywords": "Class ReedSolomonDecoder Implements Reed-Solomon decoding, as the name implies. The algorithm will not be explained here, but the following references were helpful in creating this implementation: Bruce Maggs. \"Decoding Reed-Solomon Codes\" (see discussion of Forney's Formula) J.I. Hall. \"Chapter 5. Generalized Reed-Solomon Codes\" (see discussion of Euclidean algorithm) Much credit is due to William Rucklidge since portions of this code are an indirect port of his C++ Reed-Solomon implementation. Inheritance Object ReedSolomonDecoder Namespace : ZXing.Common.ReedSolomon Assembly : cs.temp.dll.dll Syntax public sealed class ReedSolomonDecoder Constructors ReedSolomonDecoder(GenericGF) constructor Declaration public ReedSolomonDecoder(GenericGF field) Parameters Type Name Description GenericGF field Methods decode(Int32[], Int32) Decodes given set of received codewords, which include both data and error-correction codewords. Really, this means it uses Reed-Solomon to detect and correct errors, in-place, in the input. Declaration public bool decode(int[] received, int twoS) Parameters Type Name Description Int32 [] received data and error-correction codewords Int32 twoS number of error-correction codewords available Returns Type Description Boolean false: decoding fails"
  },
  "api/ZXing.Common.ReedSolomon.ReedSolomonEncoder.html": {
    "href": "api/ZXing.Common.ReedSolomon.ReedSolomonEncoder.html",
    "title": "Class ReedSolomonEncoder | Unity Algorand SDK",
    "keywords": "Class ReedSolomonEncoder Implements Reed-Solomon encoding, as the name implies. Inheritance Object ReedSolomonEncoder Namespace : ZXing.Common.ReedSolomon Assembly : cs.temp.dll.dll Syntax public sealed class ReedSolomonEncoder Constructors ReedSolomonEncoder(GenericGF) constructor Declaration public ReedSolomonEncoder(GenericGF field) Parameters Type Name Description GenericGF field Methods encode(Int32[], Int32) encodes Declaration public void encode(int[] toEncode, int ecBytes) Parameters Type Name Description Int32 [] toEncode Int32 ecBytes"
  },
  "api/ZXing.Common.StringUtils.html": {
    "href": "api/ZXing.Common.StringUtils.html",
    "title": "Class StringUtils | Unity Algorand SDK",
    "keywords": "Class StringUtils Common string-related functions. Inheritance Object StringUtils Namespace : ZXing.Common Assembly : cs.temp.dll.dll Syntax public static class StringUtils Fields EUC_JP EUC-JP Declaration public const String EUC_JP = null Field Value Type Description String EUC_JP_ENCODING ECU JP encoding if available Declaration public static readonly Encoding EUC_JP_ENCODING Field Value Type Description Encoding GB2312 GB2312 Declaration public const String GB2312 = null Field Value Type Description String GB2312_ENCODING GB 2312 encoding if available Declaration public static readonly Encoding GB2312_ENCODING Field Value Type Description Encoding ISO88591 ISO-8859-1 Declaration public const String ISO88591 = null Field Value Type Description String ISO88591_ENCODING ISO8859-1 encoding if available Declaration public static readonly Encoding ISO88591_ENCODING Field Value Type Description Encoding PLATFORM_DEFAULT_ENCODING default encoding of the current platform (name) Declaration public static readonly String PLATFORM_DEFAULT_ENCODING Field Value Type Description String PLATFORM_DEFAULT_ENCODING_T default encoding of the current platform (type) Declaration public static readonly Encoding PLATFORM_DEFAULT_ENCODING_T Field Value Type Description Encoding SHIFT_JIS SJIS Declaration public const String SHIFT_JIS = null Field Value Type Description String SHIFT_JIS_ENCODING Shift JIS encoding if available Declaration public static readonly Encoding SHIFT_JIS_ENCODING Field Value Type Description Encoding UTF8 UTF-8 Declaration public const String UTF8 = null Field Value Type Description String Methods guessCharset(Byte[], IDictionary<DecodeHintType, Object>) Declaration public static Encoding guessCharset(byte[] bytes, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description Byte [] bytes bytes encoding a string, whose encoding should be guessed IDictionary < DecodeHintType , Object > hints decode hints if applicable Returns Type Description Encoding Charset of guessed encoding; at the moment will only guess one of: {@link #SHIFT_JIS_CHARSET}, {@link StandardCharsets#UTF_8}, {@link StandardCharsets#ISO_8859_1}, {@link StandardCharsets#UTF_16}, or the platform default encoding if none of these can possibly be correct guessEncoding(Byte[], IDictionary<DecodeHintType, Object>) Guesses the encoding. Declaration public static String guessEncoding(byte[] bytes, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description Byte [] bytes bytes encoding a string, whose encoding should be guessed IDictionary < DecodeHintType , Object > hints decode hints if applicable Returns Type Description String"
  },
  "api/ZXing.Datamatrix.DatamatrixEncodingOptions.html": {
    "href": "api/ZXing.Datamatrix.DatamatrixEncodingOptions.html",
    "title": "Class DatamatrixEncodingOptions | Unity Algorand SDK",
    "keywords": "Class DatamatrixEncodingOptions The class holds the available options for the DatamatrixWriter Inheritance Object DatamatrixEncodingOptions Namespace : ZXing.Datamatrix Assembly : cs.temp.dll.dll Syntax public class DatamatrixEncodingOptions : EncodingOptions Properties DefaultEncodation Specifies the default encodation Make sure that the content fits into the encodation value, otherwise there will be an exception thrown. standard value: Encodation.ASCII Declaration public int? DefaultEncodation { get; set; } Property Value Type Description Nullable < Int32 > MaxSize Specifies a maximum barcode size Declaration public Dimension MaxSize { get; set; } Property Value Type Description Dimension MinSize Specifies a minimum barcode size Declaration public Dimension MinSize { get; set; } Property Value Type Description Dimension SymbolShape Specifies the matrix shape for Data Matrix Declaration public SymbolShapeHint? SymbolShape { get; set; } Property Value Type Description Nullable < SymbolShapeHint >"
  },
  "api/ZXing.Datamatrix.DataMatrixReader.html": {
    "href": "api/ZXing.Datamatrix.DataMatrixReader.html",
    "title": "Class DataMatrixReader | Unity Algorand SDK",
    "keywords": "Class DataMatrixReader This implementation can detect and decode Data Matrix codes in an image. bbrown@google.com (Brian Brown) Inheritance Object DataMatrixReader Implements Reader Namespace : ZXing.Datamatrix Assembly : cs.temp.dll.dll Syntax public sealed class DataMatrixReader : Reader Methods decode(BinaryBitmap) Locates and decodes a Data Matrix code in an image. Declaration public Result decode(BinaryBitmap image) Parameters Type Name Description BinaryBitmap image Returns Type Description Result a String representing the content encoded by the Data Matrix code decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) Locates and decodes a Data Matrix code in an image. Declaration public Result decode(BinaryBitmap image, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description BinaryBitmap image IDictionary < DecodeHintType , Object > hints Returns Type Description Result a String representing the content encoded by the Data Matrix code reset() does nothing here Declaration public void reset() Implements Reader"
  },
  "api/ZXing.Datamatrix.DataMatrixWriter.html": {
    "href": "api/ZXing.Datamatrix.DataMatrixWriter.html",
    "title": "Class DataMatrixWriter | Unity Algorand SDK",
    "keywords": "Class DataMatrixWriter This object renders a Data Matrix code as a BitMatrix 2D array of greyscale values. Inheritance Object DataMatrixWriter Implements Writer Namespace : ZXing.Datamatrix Assembly : cs.temp.dll.dll Syntax public sealed class DataMatrixWriter : Writer Methods encode(String, BarcodeFormat, Int32, Int32) encodes the content to a BitMatrix Declaration public BitMatrix encode(String contents, BarcodeFormat format, int width, int height) Parameters Type Name Description String contents BarcodeFormat format Int32 width Int32 height Returns Type Description BitMatrix encode(String, BarcodeFormat, Int32, Int32, IDictionary<EncodeHintType, Object>) encodes the content to a BitMatrix Declaration public BitMatrix encode(String contents, BarcodeFormat format, int width, int height, IDictionary<EncodeHintType, object> hints) Parameters Type Name Description String contents BarcodeFormat format Int32 width Int32 height IDictionary < EncodeHintType , Object > hints Returns Type Description BitMatrix Implements Writer"
  },
  "api/ZXing.Datamatrix.Encoder.DefaultPlacement.html": {
    "href": "api/ZXing.Datamatrix.Encoder.DefaultPlacement.html",
    "title": "Class DefaultPlacement | Unity Algorand SDK",
    "keywords": "Class DefaultPlacement Symbol Character Placement Program. Adapted from Annex M.1 in ISO/IEC 16022:2000(E). Inheritance Object DefaultPlacement Namespace : ZXing.Datamatrix.Encoder Assembly : cs.temp.dll.dll Syntax public class DefaultPlacement Constructors DefaultPlacement(String, Int32, Int32) Main constructor Declaration public DefaultPlacement(String codewords, int numcols, int numrows) Parameters Type Name Description String codewords the codewords to place Int32 numcols the number of columns Int32 numrows the number of rows Properties Bits bits Declaration public byte[] Bits { get; } Property Value Type Description Byte [] Numcols num cols Declaration public int Numcols { get; } Property Value Type Description Int32 Numrows num rows Declaration public int Numrows { get; } Property Value Type Description Int32 Methods getBit(Int32, Int32) get a specific bit Declaration public bool getBit(int col, int row) Parameters Type Name Description Int32 col Int32 row Returns Type Description Boolean place() place Declaration public void place()"
  },
  "api/ZXing.Datamatrix.Encoder.Encodation.html": {
    "href": "api/ZXing.Datamatrix.Encoder.Encodation.html",
    "title": "Class Encodation | Unity Algorand SDK",
    "keywords": "Class Encodation Enumeration for encodation types Inheritance Object Encodation Namespace : ZXing.Datamatrix.Encoder Assembly : cs.temp.dll.dll Syntax public sealed class Encodation Fields ASCII ASCII Declaration public const int ASCII = 0 Field Value Type Description Int32 BASE256 BASE256 Declaration public const int BASE256 = 5 Field Value Type Description Int32 C40 C40 Declaration public const int C40 = 1 Field Value Type Description Int32 EDIFACT EDIFACT Declaration public const int EDIFACT = 4 Field Value Type Description Int32 TEXT TEXT Declaration public const int TEXT = 2 Field Value Type Description Int32 X12 X12 Declaration public const int X12 = 3 Field Value Type Description Int32"
  },
  "api/ZXing.Datamatrix.Encoder.ErrorCorrection.html": {
    "href": "api/ZXing.Datamatrix.Encoder.ErrorCorrection.html",
    "title": "Class ErrorCorrection | Unity Algorand SDK",
    "keywords": "Class ErrorCorrection Error Correction Code for ECC200. Inheritance Object ErrorCorrection Namespace : ZXing.Datamatrix.Encoder Assembly : cs.temp.dll.dll Syntax public static class ErrorCorrection Methods encodeECC200(String, SymbolInfo) Creates the ECC200 error correction for an encoded message. Declaration public static String encodeECC200(String codewords, SymbolInfo symbolInfo) Parameters Type Name Description String codewords The codewords. SymbolInfo symbolInfo information about the symbol to be encoded Returns Type Description String the codewords with interleaved error correction."
  },
  "api/ZXing.Datamatrix.Encoder.html": {
    "href": "api/ZXing.Datamatrix.Encoder.html",
    "title": "Namespace ZXing.Datamatrix.Encoder | Unity Algorand SDK",
    "keywords": "Namespace ZXing.Datamatrix.Encoder Classes DefaultPlacement Symbol Character Placement Program. Adapted from Annex M.1 in ISO/IEC 16022:2000(E). Encodation Enumeration for encodation types ErrorCorrection Error Correction Code for ECC200. SymbolInfo Symbol info table for DataMatrix. Enums SymbolShapeHint Enumeration for DataMatrix symbol shape hint. It can be used to force square or rectangular symbols."
  },
  "api/ZXing.Datamatrix.Encoder.SymbolInfo.html": {
    "href": "api/ZXing.Datamatrix.Encoder.SymbolInfo.html",
    "title": "Class SymbolInfo | Unity Algorand SDK",
    "keywords": "Class SymbolInfo Symbol info table for DataMatrix. Inheritance Object SymbolInfo Namespace : ZXing.Datamatrix.Encoder Assembly : cs.temp.dll.dll Syntax public class SymbolInfo Constructors SymbolInfo(Boolean, Int32, Int32, Int32, Int32, Int32) initializing constructor Declaration public SymbolInfo(bool rectangular, int dataCapacity, int errorCodewords, int matrixWidth, int matrixHeight, int dataRegions) Parameters Type Name Description Boolean rectangular Int32 dataCapacity Int32 errorCodewords Int32 matrixWidth Int32 matrixHeight Int32 dataRegions Fields matrixHeight matrix height Declaration public readonly int matrixHeight Field Value Type Description Int32 matrixWidth matrix width Declaration public readonly int matrixWidth Field Value Type Description Int32 Methods getCodewordCount() codeword count Declaration public int getCodewordCount() Returns Type Description Int32 getDataLengthForInterleavedBlock(Int32) data length for interleaved block Declaration public virtual int getDataLengthForInterleavedBlock(int index) Parameters Type Name Description Int32 index Returns Type Description Int32 getErrorLengthForInterleavedBlock(Int32) error length for interleaved block Declaration public int getErrorLengthForInterleavedBlock(int index) Parameters Type Name Description Int32 index Returns Type Description Int32 getInterleavedBlockCount() interleaved block count Declaration public virtual int getInterleavedBlockCount() Returns Type Description Int32 getSymbolDataHeight() symbol data height Declaration public int getSymbolDataHeight() Returns Type Description Int32 getSymbolDataWidth() symbol data width Declaration public int getSymbolDataWidth() Returns Type Description Int32 getSymbolHeight() symbol height Declaration public int getSymbolHeight() Returns Type Description Int32 getSymbolWidth() symbol width Declaration public int getSymbolWidth() Returns Type Description Int32 lookup(Int32) Declaration public static SymbolInfo lookup(int dataCodewords) Parameters Type Name Description Int32 dataCodewords Returns Type Description SymbolInfo lookup(Int32, Boolean, Boolean) Declaration public static SymbolInfo lookup(int dataCodewords, bool allowRectangular, bool fail) Parameters Type Name Description Int32 dataCodewords Boolean allowRectangular Boolean fail Returns Type Description SymbolInfo lookup(Int32, SymbolShapeHint) Declaration public static SymbolInfo lookup(int dataCodewords, SymbolShapeHint shape) Parameters Type Name Description Int32 dataCodewords SymbolShapeHint shape Returns Type Description SymbolInfo lookup(Int32, SymbolShapeHint, Dimension, Dimension, Boolean) Declaration public static SymbolInfo lookup(int dataCodewords, SymbolShapeHint shape, Dimension minSize, Dimension maxSize, bool fail) Parameters Type Name Description Int32 dataCodewords SymbolShapeHint shape Dimension minSize Dimension maxSize Boolean fail Returns Type Description SymbolInfo overrideSymbolSet(SymbolInfo[]) Declaration public static void overrideSymbolSet(SymbolInfo[] override) Parameters Type Name Description SymbolInfo [] override ToString() user friendly representation Declaration public override String ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/ZXing.Datamatrix.Encoder.SymbolShapeHint.html": {
    "href": "api/ZXing.Datamatrix.Encoder.SymbolShapeHint.html",
    "title": "Enum SymbolShapeHint | Unity Algorand SDK",
    "keywords": "Enum SymbolShapeHint Enumeration for DataMatrix symbol shape hint. It can be used to force square or rectangular symbols. Namespace : ZXing.Datamatrix.Encoder Assembly : cs.temp.dll.dll Syntax public enum SymbolShapeHint Fields Name Description FORCE_NONE doesn't force anything FORCE_RECTANGLE forces rectangle image FORCE_SQUARE forces square image"
  },
  "api/ZXing.Datamatrix.html": {
    "href": "api/ZXing.Datamatrix.html",
    "title": "Namespace ZXing.Datamatrix | Unity Algorand SDK",
    "keywords": "Namespace ZXing.Datamatrix Classes DatamatrixEncodingOptions The class holds the available options for the DatamatrixWriter DataMatrixReader This implementation can detect and decode Data Matrix codes in an image. bbrown@google.com (Brian Brown) DataMatrixWriter This object renders a Data Matrix code as a BitMatrix 2D array of greyscale values."
  },
  "api/ZXing.Datamatrix.Internal.Decoder.html": {
    "href": "api/ZXing.Datamatrix.Internal.Decoder.html",
    "title": "Class Decoder | Unity Algorand SDK",
    "keywords": "Class Decoder The main class which implements Data Matrix Code decoding -- as opposed to locating and extracting the Data Matrix Code from an image. bbrown@google.com (Brian Brown) Inheritance Object Decoder Namespace : ZXing.Datamatrix.Internal Assembly : cs.temp.dll.dll Syntax public sealed class Decoder Constructors Decoder() Initializes a new instance of the Decoder class. Declaration public Decoder() Methods decode(BitMatrix) Decodes a Data Matrix Code represented as a . A 1 or \"true\" is taken to mean a black module. Declaration public DecoderResult decode(BitMatrix bits) Parameters Type Name Description BitMatrix bits booleans representing white/black Data Matrix Code modules Returns Type Description DecoderResult text and bytes encoded within the Data Matrix Code decode(Boolean[][]) Convenience method that can decode a Data Matrix Code represented as a 2D array of booleans. \"true\" is taken to mean a black module. booleans representing white/black Data Matrix Code modules text and bytes encoded within the Data Matrix Code FormatException Declaration public DecoderResult decode(bool[][] image) Parameters Type Name Description Boolean [][] image Returns Type Description DecoderResult"
  },
  "api/ZXing.Datamatrix.Internal.Detector.html": {
    "href": "api/ZXing.Datamatrix.Internal.Detector.html",
    "title": "Class Detector | Unity Algorand SDK",
    "keywords": "Class Detector Encapsulates logic that can detect a Data Matrix Code in an image, even if the Data Matrix Code is rotated or skewed, or partially obscured. Inheritance Object Detector Namespace : ZXing.Datamatrix.Internal Assembly : cs.temp.dll.dll Syntax public sealed class Detector Constructors Detector(BitMatrix) Initializes a new instance of the Detector class. Declaration public Detector(BitMatrix image) Parameters Type Name Description BitMatrix image The image. Methods detect() Detects a Data Matrix Code in an image. Declaration public DetectorResult detect() Returns Type Description DetectorResult encapsulating results of detecting a Data Matrix Code or null"
  },
  "api/ZXing.Datamatrix.Internal.html": {
    "href": "api/ZXing.Datamatrix.Internal.html",
    "title": "Namespace ZXing.Datamatrix.Internal | Unity Algorand SDK",
    "keywords": "Namespace ZXing.Datamatrix.Internal Classes Decoder The main class which implements Data Matrix Code decoding -- as opposed to locating and extracting the Data Matrix Code from an image. bbrown@google.com (Brian Brown) Detector Encapsulates logic that can detect a Data Matrix Code in an image, even if the Data Matrix Code is rotated or skewed, or partially obscured. Version The Version object encapsulates attributes about a particular size Data Matrix Code. bbrown@google.com (Brian Brown)"
  },
  "api/ZXing.Datamatrix.Internal.Version.html": {
    "href": "api/ZXing.Datamatrix.Internal.Version.html",
    "title": "Class Version | Unity Algorand SDK",
    "keywords": "Class Version The Version object encapsulates attributes about a particular size Data Matrix Code. bbrown@google.com (Brian Brown) Inheritance Object Version Namespace : ZXing.Datamatrix.Internal Assembly : cs.temp.dll.dll Syntax public sealed class Version Methods getDataRegionSizeColumns() returns the data region size columns Declaration public int getDataRegionSizeColumns() Returns Type Description Int32 getDataRegionSizeRows() retursn the data region size rows Declaration public int getDataRegionSizeRows() Returns Type Description Int32 getSymbolSizeColumns() returns the symbols size columns Declaration public int getSymbolSizeColumns() Returns Type Description Int32 getSymbolSizeRows() returns the symbol size rows Declaration public int getSymbolSizeRows() Returns Type Description Int32 getTotalCodewords() returns the total codewords count Declaration public int getTotalCodewords() Returns Type Description Int32 getVersionForDimensions(Int32, Int32) Deduces version information from Data Matrix dimensions. Number of rows in modules Number of columns in modules Version for a Data Matrix Code of those dimensions FormatException Declaration public static Version getVersionForDimensions(int numRows, int numColumns) Parameters Type Name Description Int32 numRows Int32 numColumns Returns Type Description Version getVersionNumber() returns the version numer Declaration public int getVersionNumber() Returns Type Description Int32 ToString() returns the version number as string Declaration public override String ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/ZXing.DecodeHintType.html": {
    "href": "api/ZXing.DecodeHintType.html",
    "title": "Enum DecodeHintType | Unity Algorand SDK",
    "keywords": "Enum DecodeHintType Encapsulates a type of hint that a caller may pass to a barcode reader to help it more quickly or accurately decode it. It is up to implementations to decide what, if anything, to do with the information that is supplied. decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public enum DecodeHintType Fields Name Description ALLOWED_EAN_EXTENSIONS Allowed extension lengths for EAN or UPC barcodes. Other formats will ignore this. Maps to an int[] of the allowed extension lengths, for example [2], [5], or [2, 5]. If it is optional to have an extension, do not set this hint. If this is set, and a UPC or EAN barcode is found but an extension is not, then no result will be returned at all. ALLOWED_LENGTHS Allowed lengths of encoded data -- reject anything else. Maps to an int[]. ALSO_INVERTED If true, also tries to decode as inverted image. All configured decoders are simply called a second time with an inverted image. Doesn't matter what it maps to; use {@link Boolean#TRUE}. ASSUME_CODE_39_CHECK_DIGIT Assume Code 39 codes employ a check digit. Maps to Boolean . ASSUME_GS1 Assume the barcode is being processed as a GS1 barcode, and modify behavior as needed. For example this affects FNC1 handling for Code 128 (aka GS1-128). Doesn't matter what it maps to; use Boolean . ASSUME_MSI_CHECK_DIGIT Assume MSI codes employ a check digit. Maps to Boolean . CHARACTER_SET Specifies what character encoding to use when decoding, where applicable (type String) NEED_RESULT_POINT_CALLBACK The caller needs to be notified via callback when a possible ResultPoint is found. Maps to a ResultPointCallback . OTHER Unspecified, application-specific hint. Maps to an unspecified Object . POSSIBLE_FORMATS Image is known to be of one of a few possible formats. Maps to a ICollection of BarcodeFormat s. PURE_BARCODE Image is a pure monochrome image of a barcode. Doesn't matter what it maps to; use Boolean = true. RELAXED_CODE_39_EXTENDED_MODE Don't fail if a Code39 is detected but can't be decoded in extended mode. Return the raw Code39 result instead. Maps to Boolean . RETURN_CODABAR_START_END If true, return the start and end digits in a Codabar barcode instead of stripping them. They are alpha, whereas the rest are numeric. By default, they are stripped, but this causes them to not be. Doesn't matter what it maps to; use Boolean . TRY_HARDER Spend more time to try to find a barcode; optimize for accuracy, not speed. Doesn't matter what it maps to; use Boolean = true. TRY_HARDER_WITHOUT_ROTATION 1D readers supporting rotation with TRY_HARDER enabled. But BarcodeReader class can do auto-rotating for 1D and 2D codes. Enabling that option prevents 1D readers doing double rotation. BarcodeReader enables that option automatically if \"global\" auto-rotation is enabled. Maps to Boolean . USE_CODE_39_EXTENDED_MODE if Code39 could be detected try to use extended mode for full ASCII character set Maps to Boolean ."
  },
  "api/ZXing.Dimension.html": {
    "href": "api/ZXing.Dimension.html",
    "title": "Class Dimension | Unity Algorand SDK",
    "keywords": "Class Dimension Simply encapsulates a width and height. Inheritance Object Dimension Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public sealed class Dimension Constructors Dimension(Int32, Int32) initializing constructor Declaration public Dimension(int width, int height) Parameters Type Name Description Int32 width Int32 height Properties Height the height Declaration public int Height { get; } Property Value Type Description Int32 Width the width Declaration public int Width { get; } Property Value Type Description Int32 Methods Equals(Object) Declaration public override bool Equals(Object other) Parameters Type Name Description Object other Returns Type Description Boolean GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() ToString() Declaration public override String ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/ZXing.EncodeHintType.html": {
    "href": "api/ZXing.EncodeHintType.html",
    "title": "Enum EncodeHintType | Unity Algorand SDK",
    "keywords": "Enum EncodeHintType These are a set of hints that you may pass to Writers to specify their behavior. Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public enum EncodeHintType Fields Name Description AZTEC_LAYERS Specifies the required number of layers for an Aztec code. A negative number (-1, -2, -3, -4) specifies a compact Aztec code 0 indicates to use the minimum number of layers (the default) A positive number (1, 2, .. 32) specifies a normal (non-compact) Aztec code type: Int32 , or String representation of the integer value CHARACTER_SET Specifies what character encoding to use where applicable. type: String CODE128_FORCE_CODESET_B if true, don't switch to codeset C for numbers DATA_MATRIX_DEFAULT_ENCODATION Specifies the default encodation for Data Matrix (type Encodation ) Make sure that the content fits into the encodation value, otherwise there will be an exception thrown. standard value: Encodation.ASCII DATA_MATRIX_SHAPE Specifies the matrix shape for Data Matrix (type SymbolShapeHint ) DISABLE_ECI Don't append ECI segment. That is against the specification of QR Code but some readers have problems if the charset is switched from ISO-8859-1 (default) to UTF-8 with the necessary ECI segment. If you set the property to true you can use UTF-8 encoding and the ECI segment is omitted. type: Boolean ERROR_CORRECTION Specifies what degree of error correction to use, for example in QR Codes. Type depends on the encoder. For example for QR codes it's type ErrorCorrectionLevel For Aztec it is of type Int32 , representing the minimal percentage of error correction words. In all cases, it can also be a String representation of the desired value as well. Note: an Aztec symbol should have a minimum of 25% EC words. For PDF417 it is of type PDF417ErrorCorrectionLevel or Int32 (between 0 and 8), FORCE_CODE_SET Forces which encoding will be used. Currently only used for Code-128 code sets (Type String ). Valid values are \"A\", \"B\", \"C\". see also CODE128_FORCE_CODESET_B GS1_FORMAT Specifies whether the data should be encoded to the GS1 standard type: Boolean , or \"true\" or \"false\" String value HEIGHT Specifies the height of the barcode image type: Int32 MARGIN Specifies margin, in pixels, to use when generating the barcode. The meaning can vary by format; for example it controls margin before and after the barcode horizontally for most 1D formats. type: Int32 , or String representation of the integer value MAX_SIZE Specifies a maximum barcode size (type Dimension ). Only applicable to Data Matrix now. MIN_SIZE Specifies a minimum barcode size (type Dimension ). Only applicable to Data Matrix now. PDF417_ASPECT_RATIO Specifies the aspect ratio to use. Default is 4. type: PDF417AspectRatio , or 1-4. PDF417_COMPACT Specifies whether to use compact mode for PDF417 type: Boolean , or \"true\" or \"false\" String value PDF417_COMPACTION Specifies what compaction mode to use for PDF417. type: Compaction or String value of one of its enum values PDF417_DIMENSIONS Specifies the minimum and maximum number of rows and columns for PDF417. type: Dimensions PDF417_IMAGE_ASPECT_RATIO Specifies the desired aspect ratio (number of columns / number of rows) of the output image. Default is 3. type: Single . PDF417_MACRO_META_DATA The Specifies that the PDF417 will contain macro metadata. type: PDF417MacroMetadata PURE_BARCODE Don't put the content string into the output image. type: Boolean QR_COMPACT Specifies whether to use compact mode for QR code (type Boolean , or \"true\" or \"false\" Please note that when compaction is performed, the most compact character encoding is chosen for characters in the input that are not in the ISO-8859-1 character set. Based on experience, some scanners do not support encodings like cp-1256 (Arabic). In such cases the encoding can be forced to UTF-8 by means of the CHARACTER_SET encoding hint. QR_MASK_PATTERN Specifies the QR code mask pattern to be used. Allowed values are 0..QRCode.NUM_MASK_PATTERNS-1. By default the code will automatically select the optimal mask pattern. (Type Int32 , or String representation of the integer value). QR_VERSION Specifies the exact version of QR code to be encoded. (Type Int32 , or String representation of the integer value). WIDTH Specifies the width of the barcode image type: Int32"
  },
  "api/ZXing.FormatException.html": {
    "href": "api/ZXing.FormatException.html",
    "title": "Class FormatException | Unity Algorand SDK",
    "keywords": "Class FormatException Thrown when a barcode was successfully detected, but some aspect of the content did not conform to the barcode's format rules. This could have been due to a mis-detection. Sean Owen Inheritance Object ReaderException FormatException Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public sealed class FormatException : ReaderException Constructors FormatException() Declaration public FormatException() FormatException(Exception) Declaration public FormatException(Exception innerException) Parameters Type Name Description Exception innerException FormatException(String) Declaration public FormatException(String message) Parameters Type Name Description String message FormatException(String, Exception) Declaration public FormatException(String message, Exception innerException) Parameters Type Name Description String message Exception innerException"
  },
  "api/ZXing.html": {
    "href": "api/ZXing.html",
    "title": "Namespace ZXing | Unity Algorand SDK",
    "keywords": "Namespace ZXing Classes BarcodeReader A smart class to decode the barcode inside a bitmap object BarcodeReader<T> A smart class to decode the barcode inside a bitmap object BarcodeReaderGeneric A smart class to decode the barcode inside a bitmap object BarcodeWriter A smart class to encode some content to a barcode image BarcodeWriter<TOutput> A base class for specific barcode writers with specific formats of barcode images. BarcodeWriterGeneric A base class for specific barcode writers with specific formats of barcode images. BarcodeWriterPixelData A smart class to encode some content to raw pixel data BarcodeWriterSvg A smart class to encode some content to a svg barcode image BaseLuminanceSource The base class for luminance sources which supports cropping and rotating based upon the luminance values. Binarizer This class hierarchy provides a set of methods to convert luminance data to 1 bit data. It allows the algorithm to vary polymorphically, for example allowing a very expensive thresholding technique for servers and a fast one for mobile. It also permits the implementation to vary, e.g. a JNI version for Android and a Java fallback version for other platforms. dswitkin@google.com (Daniel Switkin) BinaryBitmap This class is the core bitmap class used by ZXing to represent 1 bit data. Reader objects accept a BinaryBitmap and attempt to decode it. Color32LuminanceSource Calculates the luminance values based upon the Color32 structure Color32Renderer a barcode renderer which returns a Color32 array Dimension Simply encapsulates a width and height. FormatException Thrown when a barcode was successfully detected, but some aspect of the content did not conform to the barcode's format rules. This could have been due to a mis-detection. Sean Owen InvertedLuminanceSource A wrapper implementation of {@link LuminanceSource} which inverts the luminances it returns -- black becomes white and vice versa, and each value becomes (255-value). LuminanceSource The purpose of this class hierarchy is to abstract different bitmap implementations across platforms into a standard interface for requesting greyscale luminance values. The interface only provides immutable methods; therefore crop and rotation create copies. This is to ensure that one Reader does not modify the original luminance source and leave it in an unknown state for other Readers in the chain. MultiFormatReader MultiFormatReader is a convenience class and the main entry point into the library for most uses. By default it attempts to decode all barcode formats that the library supports. Optionally, you can provide a hints object to request different behavior, for example only decoding QR codes. MultiFormatWriter This is a factory class which finds the appropriate Writer subclass for the BarcodeFormat requested and encodes the barcode with the supplied contents. PlanarYUVLuminanceSource This object extends LuminanceSource around an array of YUV data returned from the camera driver, with the option to crop to a rectangle within the full data. This can be used to exclude superfluous pixels around the perimeter and speed up decoding. It works for any pixel format where the Y channel is planar and appears first, including YCbCr_420_SP and YCbCr_422_SP. @author dswitkin@google.com (Daniel Switkin) ReaderException The general exception class throw when something goes wrong during decoding of a barcode. This includes, but is not limited to, failing checksums / error correction algorithms, being unable to locate finder timing patterns, and so on. Result Encapsulates the result of decoding a barcode within an image. ResultPoint Encapsulates a point of interest in an image containing a barcode. Typically, this would be the location of a finder pattern or the corner of the barcode, for example. RGBLuminanceSource Luminance source class which support different formats of images. SupportClass Contains conversion support elements such as classes, interfaces and static methods. WriterException A base class which covers the range of exceptions which may occur when encoding a barcode using the Writer framework. Interfaces IBarcodeReader Interface for a smart class to decode the barcode inside a bitmap object IBarcodeReader<T> Interface for a smart class to decode the barcode inside a bitmap object IBarcodeReaderGeneric Interface for a smart class to decode the barcode inside a bitmap object IBarcodeWriter Interface for a smart class to encode some content into a barcode IBarcodeWriter<TOutput> Interface for a smart class to encode some content into a barcode IBarcodeWriterGeneric Interface for a smart class to encode some content into a barcode IBarcodeWriterPixelData Interface for a smart class to encode some content into a barcode IBarcodeWriterSvg Interface for a smart class to encode some content into a barcode Reader Implementations of this interface can decode an image of a barcode in some format into the String it encodes. For example, QRCodeReader can decode a QR code. The decoder may optionally receive hints from the caller which may help it decode more quickly or accurately. See MultiFormatReader , which attempts to determine what barcode format is present within the image as well, and then decodes it accordingly. Writer The base class for all objects which encode/generate a barcode image. Enums BarcodeFormat Enumerates barcode formats known to this package. DecodeHintType Encapsulates a type of hint that a caller may pass to a barcode reader to help it more quickly or accurately decode it. It is up to implementations to decide what, if anything, to do with the information that is supplied. decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) EncodeHintType These are a set of hints that you may pass to Writers to specify their behavior. ResultMetadataType Represents some type of metadata about the result of the decoding that the decoder wishes to communicate back to the caller. RGBLuminanceSource.BitmapFormat enumeration of supported bitmap format which the RGBLuminanceSource can process Delegates ResultPointCallback Callback which is invoked when a possible result point (significant point in the barcode image such as a corner) is found."
  },
  "api/ZXing.IBarcodeReader.html": {
    "href": "api/ZXing.IBarcodeReader.html",
    "title": "Interface IBarcodeReader | Unity Algorand SDK",
    "keywords": "Interface IBarcodeReader Interface for a smart class to decode the barcode inside a bitmap object Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public interface IBarcodeReader Properties Options Specifies some options which influence the decoding process Declaration DecodingOptions Options { get; set; } Property Value Type Description DecodingOptions Methods Decode(Color32[], Int32, Int32) Decodes the specified barcode bitmap. Declaration Result Decode(Color32[] rawColor32, int width, int height) Parameters Type Name Description Color32 [] rawColor32 The image as Color32 array. Int32 width the width of the image which is represented by rawColor32 Int32 height the height of the image which is represented by rawColor32 Returns Type Description Result the result data or null Decode(Byte[], Int32, Int32, RGBLuminanceSource.BitmapFormat) Decodes the specified barcode bitmap which is given by a generic byte array with the order RGB24. Declaration Result Decode(byte[] rawRGB, int width, int height, RGBLuminanceSource.BitmapFormat format) Parameters Type Name Description Byte [] rawRGB The image as RGB24 array. Int32 width The width. Int32 height The height. RGBLuminanceSource.BitmapFormat format The format. Returns Type Description Result the result data or null Decode(LuminanceSource) Tries to decode a barcode within an image which is given by a luminance source. That method gives a chance to prepare a luminance source completely before calling the time consuming decoding method. On the other hand there is a chance to create a luminance source which is independent from external resources (like Bitmap objects) and the decoding call can be made in a background thread. Declaration Result Decode(LuminanceSource luminanceSource) Parameters Type Name Description LuminanceSource luminanceSource The luminance source. Returns Type Description Result DecodeMultiple(Color32[], Int32, Int32) Decodes the specified barcode bitmap. Declaration Result[] DecodeMultiple(Color32[] rawColor32, int width, int height) Parameters Type Name Description Color32 [] rawColor32 The image as Color32 array. Int32 width the width of the image which is represented by rawColor32 Int32 height the height of the image which is represented by rawColor32 Returns Type Description Result [] the result data or null DecodeMultiple(Byte[], Int32, Int32, RGBLuminanceSource.BitmapFormat) Decodes the specified barcode bitmap which is given by a generic byte array with the order RGB24. Declaration Result[] DecodeMultiple(byte[] rawRGB, int width, int height, RGBLuminanceSource.BitmapFormat format) Parameters Type Name Description Byte [] rawRGB The image as RGB24 array. Int32 width The width. Int32 height The height. RGBLuminanceSource.BitmapFormat format The format. Returns Type Description Result [] the result data or null DecodeMultiple(LuminanceSource) Tries to decode barcodes within an image which is given by a luminance source. That method gives a chance to prepare a luminance source completely before calling the time consuming decoding method. On the other hand there is a chance to create a luminance source which is independent from external resources (like Bitmap objects) and the decoding call can be made in a background thread. Declaration Result[] DecodeMultiple(LuminanceSource luminanceSource) Parameters Type Name Description LuminanceSource luminanceSource The luminance source. Returns Type Description Result [] Events ResultFound event is executed when a result was found via decode Declaration event Action<Result> ResultFound Event Type Type Description Action < Result > ResultPointFound event is executed when a result point was found Declaration event Action<ResultPoint> ResultPointFound Event Type Type Description Action < ResultPoint >"
  },
  "api/ZXing.IBarcodeReader-1.html": {
    "href": "api/ZXing.IBarcodeReader-1.html",
    "title": "Interface IBarcodeReader<T> | Unity Algorand SDK",
    "keywords": "Interface IBarcodeReader<T> Interface for a smart class to decode the barcode inside a bitmap object Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public interface IBarcodeReader<T> Type Parameters Name Description T Methods Decode(T) Decodes the specified barcode bitmap. Declaration Result Decode(T barcodeBitmap) Parameters Type Name Description T barcodeBitmap The barcode bitmap. Returns Type Description Result the result data or null DecodeMultiple(T) Decodes the specified barcode bitmap. Declaration Result[] DecodeMultiple(T barcodeBitmap) Parameters Type Name Description T barcodeBitmap The barcode bitmap. Returns Type Description Result [] the result data or null"
  },
  "api/ZXing.IBarcodeReaderGeneric.html": {
    "href": "api/ZXing.IBarcodeReaderGeneric.html",
    "title": "Interface IBarcodeReaderGeneric | Unity Algorand SDK",
    "keywords": "Interface IBarcodeReaderGeneric Interface for a smart class to decode the barcode inside a bitmap object Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public interface IBarcodeReaderGeneric Properties Options Specifies some options which influence the decoding process Declaration DecodingOptions Options { get; set; } Property Value Type Description DecodingOptions Methods Decode(Byte[], Int32, Int32, RGBLuminanceSource.BitmapFormat) Decodes the specified barcode bitmap which is given by a generic byte array. Declaration Result Decode(byte[] rawRGB, int width, int height, RGBLuminanceSource.BitmapFormat format) Parameters Type Name Description Byte [] rawRGB The barcode bitmap. Int32 width The width. Int32 height The height. RGBLuminanceSource.BitmapFormat format The format. Returns Type Description Result the result data or null Decode(LuminanceSource) Tries to decode a barcode within an image which is given by a luminance source. That method gives a chance to prepare a luminance source completely before calling the time consuming decoding method. On the other hand there is a chance to create a luminance source which is independent from external resources (like Bitmap objects) and the decoding call can be made in a background thread. Declaration Result Decode(LuminanceSource luminanceSource) Parameters Type Name Description LuminanceSource luminanceSource The luminance source. Returns Type Description Result DecodeMultiple(Byte[], Int32, Int32, RGBLuminanceSource.BitmapFormat) Decodes the specified barcode bitmap which is given by a generic byte array with the order RGB24. Declaration Result[] DecodeMultiple(byte[] rawRGB, int width, int height, RGBLuminanceSource.BitmapFormat format) Parameters Type Name Description Byte [] rawRGB The barcode bitmap. Int32 width The width. Int32 height The height. RGBLuminanceSource.BitmapFormat format The format. Returns Type Description Result [] the result data or null DecodeMultiple(LuminanceSource) Tries to decode barcodes within an image which is given by a luminance source. That method gives a chance to prepare a luminance source completely before calling the time consuming decoding method. On the other hand there is a chance to create a luminance source which is independent from external resources (like Bitmap objects) and the decoding call can be made in a background thread. Declaration Result[] DecodeMultiple(LuminanceSource luminanceSource) Parameters Type Name Description LuminanceSource luminanceSource The luminance source. Returns Type Description Result [] Events ResultFound event is executed when a result was found via decode Declaration event Action<Result> ResultFound Event Type Type Description Action < Result > ResultPointFound event is executed when a result point was found Declaration event Action<ResultPoint> ResultPointFound Event Type Type Description Action < ResultPoint >"
  },
  "api/ZXing.IBarcodeWriter.html": {
    "href": "api/ZXing.IBarcodeWriter.html",
    "title": "Interface IBarcodeWriter | Unity Algorand SDK",
    "keywords": "Interface IBarcodeWriter Interface for a smart class to encode some content into a barcode Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public interface IBarcodeWriter Properties Encoder Gets or sets the writer which encodes the content to a BitMatrix. If no value is set the MultiFormatWriter is used. Declaration Writer Encoder { get; set; } Property Value Type Description Writer Format Get or sets the barcode format which should be generated (only suitable if MultiFormatWriter is used for property Encoder which is the default) Declaration BarcodeFormat Format { get; set; } Property Value Type Description BarcodeFormat Options Gets or sets the options container for the encoding and renderer process. Declaration EncodingOptions Options { get; set; } Property Value Type Description EncodingOptions Methods Encode(String) Encodes the specified contents. Declaration BitMatrix Encode(string contents) Parameters Type Name Description String contents The contents. Returns Type Description BitMatrix Write(BitMatrix) Returns a rendered instance of the barcode which is given by a BitMatrix. Declaration UnityEngine.Color32[] Write(BitMatrix matrix) Parameters Type Name Description BitMatrix matrix Returns Type Description UnityEngine.Color32 [] Write(String) Creates a visual representation of the contents Declaration UnityEngine.Color32[] Write(string contents) Parameters Type Name Description String contents Returns Type Description UnityEngine.Color32 []"
  },
  "api/ZXing.IBarcodeWriter-1.html": {
    "href": "api/ZXing.IBarcodeWriter-1.html",
    "title": "Interface IBarcodeWriter<TOutput> | Unity Algorand SDK",
    "keywords": "Interface IBarcodeWriter<TOutput> Interface for a smart class to encode some content into a barcode Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public interface IBarcodeWriter<out TOutput> Type Parameters Name Description TOutput Methods Write(BitMatrix) Returns a rendered instance of the barcode which is given by a BitMatrix. Declaration TOutput Write(BitMatrix matrix) Parameters Type Name Description BitMatrix matrix The matrix. Returns Type Description TOutput Write(String) Creates a visual representation of the contents Declaration TOutput Write(string contents) Parameters Type Name Description String contents The contents. Returns Type Description TOutput"
  },
  "api/ZXing.IBarcodeWriterGeneric.html": {
    "href": "api/ZXing.IBarcodeWriterGeneric.html",
    "title": "Interface IBarcodeWriterGeneric | Unity Algorand SDK",
    "keywords": "Interface IBarcodeWriterGeneric Interface for a smart class to encode some content into a barcode Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public interface IBarcodeWriterGeneric Properties Encoder Gets or sets the writer which encodes the content to a BitMatrix. If no value is set the MultiFormatWriter is used. Declaration Writer Encoder { get; set; } Property Value Type Description Writer Format Get or sets the barcode format which should be generated (only suitable if MultiFormatWriter is used for property Encoder which is the default) Declaration BarcodeFormat Format { get; set; } Property Value Type Description BarcodeFormat Options Gets or sets the options container for the encoding and renderer process. Declaration EncodingOptions Options { get; set; } Property Value Type Description EncodingOptions Methods Encode(String) Encodes the specified contents. Declaration BitMatrix Encode(string contents) Parameters Type Name Description String contents The contents. Returns Type Description BitMatrix"
  },
  "api/ZXing.IBarcodeWriterPixelData.html": {
    "href": "api/ZXing.IBarcodeWriterPixelData.html",
    "title": "Interface IBarcodeWriterPixelData | Unity Algorand SDK",
    "keywords": "Interface IBarcodeWriterPixelData Interface for a smart class to encode some content into a barcode Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public interface IBarcodeWriterPixelData Methods Write(BitMatrix) Returns a rendered instance of the barcode which is given by a BitMatrix. Declaration PixelData Write(BitMatrix matrix) Parameters Type Name Description BitMatrix matrix Returns Type Description PixelData Write(String) Creates a visual representation of the contents Declaration PixelData Write(string contents) Parameters Type Name Description String contents Returns Type Description PixelData"
  },
  "api/ZXing.IBarcodeWriterSvg.html": {
    "href": "api/ZXing.IBarcodeWriterSvg.html",
    "title": "Interface IBarcodeWriterSvg | Unity Algorand SDK",
    "keywords": "Interface IBarcodeWriterSvg Interface for a smart class to encode some content into a barcode Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public interface IBarcodeWriterSvg Methods Write(BitMatrix) Returns a rendered instance of the barcode which is given by a BitMatrix. Declaration SvgRenderer.SvgImage Write(BitMatrix matrix) Parameters Type Name Description BitMatrix matrix Returns Type Description SvgRenderer.SvgImage Write(String) Creates a visual representation of the contents Declaration SvgRenderer.SvgImage Write(string contents) Parameters Type Name Description String contents Returns Type Description SvgRenderer.SvgImage"
  },
  "api/ZXing.IMB.html": {
    "href": "api/ZXing.IMB.html",
    "title": "Namespace ZXing.IMB | Unity Algorand SDK",
    "keywords": "Namespace ZXing.IMB Classes IMBReader implements an Intelligent Mail barcode Rishabh Hatgadkar"
  },
  "api/ZXing.IMB.IMBReader.html": {
    "href": "api/ZXing.IMB.IMBReader.html",
    "title": "Class IMBReader | Unity Algorand SDK",
    "keywords": "Class IMBReader implements an Intelligent Mail barcode Rishabh Hatgadkar Inheritance Object IMBReader Namespace : ZXing.IMB Assembly : cs.temp.dll.dll Syntax public sealed class IMBReader : OneDReader Methods decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) Attempts to decode a one-dimensional barcode format given a single row of an image. Declaration public override Result decodeRow(int rowNumber, BitArray row, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description Int32 rowNumber row number from top of the row BitArray row the black/white pixel data of the row IDictionary < DecodeHintType , Object > hints decode hints Returns Type Description Result Result containing encoded string and start/end of barcode or null, if an error occurs or barcode cannot be found doDecode(BinaryBitmap, IDictionary<DecodeHintType, Object>) decode the image Declaration protected override Result doDecode(BinaryBitmap image, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description BinaryBitmap image IDictionary < DecodeHintType , Object > hints Returns Type Description Result reset() resets internal state Declaration public override void reset()"
  },
  "api/ZXing.InvertedLuminanceSource.html": {
    "href": "api/ZXing.InvertedLuminanceSource.html",
    "title": "Class InvertedLuminanceSource | Unity Algorand SDK",
    "keywords": "Class InvertedLuminanceSource A wrapper implementation of {@link LuminanceSource} which inverts the luminances it returns -- black becomes white and vice versa, and each value becomes (255-value). Inheritance Object LuminanceSource InvertedLuminanceSource Inherited Members LuminanceSource.Width LuminanceSource.Height LuminanceSource.InversionSupported LuminanceSource.ToString() Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public sealed class InvertedLuminanceSource : LuminanceSource Constructors InvertedLuminanceSource(LuminanceSource) Initializes a new instance of the InvertedLuminanceSource class. Declaration public InvertedLuminanceSource(LuminanceSource delegate) Parameters Type Name Description LuminanceSource delegate The @delegate. Properties CropSupported Declaration public override bool CropSupported { get; } Property Value Type Description Boolean Whether this subclass supports cropping. Overrides LuminanceSource.CropSupported Matrix Fetches luminance data for the underlying bitmap. Values should be fetched using: int luminance = array[y * width + x] & 0xff; Declaration public override byte[] Matrix { get; } Property Value Type Description Byte [] A row-major 2D array of luminance values. Do not use result.length as it may be larger than width * height bytes on some platforms. Do not modify the contents of the result. Overrides LuminanceSource.Matrix RotateSupported Declaration public override bool RotateSupported { get; } Property Value Type Description Boolean Whether this subclass supports counter-clockwise rotation. Overrides LuminanceSource.RotateSupported Methods crop(Int32, Int32, Int32, Int32) Returns a new object with cropped image data. Implementations may keep a reference to the original data rather than a copy. Only callable if CropSupported is true. Declaration public override LuminanceSource crop(int left, int top, int width, int height) Parameters Type Name Description Int32 left The left coordinate, 0 <= left < Width. Int32 top The top coordinate, 0 <= top <= Height. Int32 width The width of the rectangle to crop. Int32 height The height of the rectangle to crop. Returns Type Description LuminanceSource A cropped version of this object. Overrides LuminanceSource.crop(Int32, Int32, Int32, Int32) getRow(Int32, Byte[]) Fetches one row of luminance data from the underlying platform's bitmap. Values range from 0 (black) to 255 (white). Because Java does not have an unsigned byte type, callers will have to bitwise and with 0xff for each value. It is preferable for implementations of this method to only fetch this row rather than the whole image, since no 2D Readers may be installed and getMatrix() may never be called. Declaration public override byte[] getRow(int y, byte[] row) Parameters Type Name Description Int32 y The row to fetch, 0 <= y < Height. Byte [] row An optional preallocated array. If null or too small, it will be ignored. Always use the returned object, and ignore the .length of the array. Returns Type Description Byte [] An array containing the luminance data. Overrides LuminanceSource.getRow(Int32, Byte[]) invert() Inverts this instance. Declaration public override LuminanceSource invert() Returns Type Description LuminanceSource original delegate {@link LuminanceSource} since invert undoes itself Overrides LuminanceSource.invert() rotateCounterClockwise() Returns a new object with rotated image data by 90 degrees counterclockwise. Only callable if {@link #isRotateSupported()} is true. Declaration public override LuminanceSource rotateCounterClockwise() Returns Type Description LuminanceSource A rotated version of this object. Overrides LuminanceSource.rotateCounterClockwise() rotateCounterClockwise45() Returns a new object with rotated image data by 45 degrees counterclockwise. Only callable if {@link #isRotateSupported()} is true. Declaration public override LuminanceSource rotateCounterClockwise45() Returns Type Description LuminanceSource A rotated version of this object. Overrides LuminanceSource.rotateCounterClockwise45()"
  },
  "api/ZXing.LuminanceSource.html": {
    "href": "api/ZXing.LuminanceSource.html",
    "title": "Class LuminanceSource | Unity Algorand SDK",
    "keywords": "Class LuminanceSource The purpose of this class hierarchy is to abstract different bitmap implementations across platforms into a standard interface for requesting greyscale luminance values. The interface only provides immutable methods; therefore crop and rotation create copies. This is to ensure that one Reader does not modify the original luminance source and leave it in an unknown state for other Readers in the chain. Inheritance Object LuminanceSource BaseLuminanceSource InvertedLuminanceSource Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public abstract class LuminanceSource Constructors LuminanceSource(Int32, Int32) initializing constructor Declaration protected LuminanceSource(int width, int height) Parameters Type Name Description Int32 width Int32 height Properties CropSupported Declaration public virtual bool CropSupported { get; } Property Value Type Description Boolean Whether this subclass supports cropping. Height Declaration public virtual int Height { get; protected set; } Property Value Type Description Int32 The height of the bitmap. InversionSupported Declaration public virtual bool InversionSupported { get; } Property Value Type Description Boolean Whether this subclass supports invertion. Matrix Fetches luminance data for the underlying bitmap. Values should be fetched using: int luminance = array[y * width + x] & 0xff Declaration public abstract byte[] Matrix { get; } Property Value Type Description Byte [] A row-major 2D array of luminance values. Do not use result.length as it may be larger than width * height bytes on some platforms. Do not modify the contents of the result. RotateSupported Declaration public virtual bool RotateSupported { get; } Property Value Type Description Boolean Whether this subclass supports counter-clockwise rotation. Width Declaration public virtual int Width { get; protected set; } Property Value Type Description Int32 The width of the bitmap. Methods crop(Int32, Int32, Int32, Int32) Returns a new object with cropped image data. Implementations may keep a reference to the original data rather than a copy. Only callable if CropSupported is true. Declaration public virtual LuminanceSource crop(int left, int top, int width, int height) Parameters Type Name Description Int32 left The left coordinate, which must be in [0, Width) Int32 top The top coordinate, which must be in [0, Height) Int32 width The width of the rectangle to crop. Int32 height The height of the rectangle to crop. Returns Type Description LuminanceSource A cropped version of this object. getRow(Int32, Byte[]) Fetches one row of luminance data from the underlying platform's bitmap. Values range from 0 (black) to 255 (white). Because Java does not have an unsigned byte type, callers will have to bitwise and with 0xff for each value. It is preferable for implementations of this method to only fetch this row rather than the whole image, since no 2D Readers may be installed and getMatrix() may never be called. Declaration public abstract byte[] getRow(int y, byte[] row) Parameters Type Name Description Int32 y The row to fetch, which must be in [0, bitmap height) Byte [] row An optional preallocated array. If null or too small, it will be ignored. Always use the returned object, and ignore the .length of the array. Returns Type Description Byte [] An array containing the luminance data. invert() inverts the luminance values, not supported here. has to implemented in sub classes Declaration public virtual LuminanceSource invert() Returns Type Description LuminanceSource rotateCounterClockwise() Returns a new object with rotated image data by 90 degrees counterclockwise. Only callable if RotateSupported is true. Declaration public virtual LuminanceSource rotateCounterClockwise() Returns Type Description LuminanceSource A rotated version of this object. rotateCounterClockwise45() Returns a new object with rotated image data by 45 degrees counterclockwise. Only callable if RotateSupported is true. Declaration public virtual LuminanceSource rotateCounterClockwise45() Returns Type Description LuminanceSource A rotated version of this object. ToString() Declaration public override String ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/ZXing.Maxicode.html": {
    "href": "api/ZXing.Maxicode.html",
    "title": "Namespace ZXing.Maxicode | Unity Algorand SDK",
    "keywords": "Namespace ZXing.Maxicode Classes MaxiCodeReader This implementation can detect and decode a MaxiCode in an image."
  },
  "api/ZXing.Maxicode.Internal.Decoder.html": {
    "href": "api/ZXing.Maxicode.Internal.Decoder.html",
    "title": "Class Decoder | Unity Algorand SDK",
    "keywords": "Class Decoder The main class which implements MaxiCode decoding -- as opposed to locating and extracting the MaxiCode from an image. Manuel Kasten Inheritance Object Decoder Namespace : ZXing.Maxicode.Internal Assembly : cs.temp.dll.dll Syntax public sealed class Decoder Constructors Decoder() constructor Declaration public Decoder() Methods decode(BitMatrix) decode the bits Declaration public DecoderResult decode(BitMatrix bits) Parameters Type Name Description BitMatrix bits Returns Type Description DecoderResult decode(BitMatrix, IDictionary<DecodeHintType, Object>) decode the bits Declaration public DecoderResult decode(BitMatrix bits, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description BitMatrix bits IDictionary < DecodeHintType , Object > hints Returns Type Description DecoderResult"
  },
  "api/ZXing.Maxicode.Internal.html": {
    "href": "api/ZXing.Maxicode.Internal.html",
    "title": "Namespace ZXing.Maxicode.Internal | Unity Algorand SDK",
    "keywords": "Namespace ZXing.Maxicode.Internal Classes Decoder The main class which implements MaxiCode decoding -- as opposed to locating and extracting the MaxiCode from an image. Manuel Kasten"
  },
  "api/ZXing.Maxicode.MaxiCodeReader.html": {
    "href": "api/ZXing.Maxicode.MaxiCodeReader.html",
    "title": "Class MaxiCodeReader | Unity Algorand SDK",
    "keywords": "Class MaxiCodeReader This implementation can detect and decode a MaxiCode in an image. Inheritance Object MaxiCodeReader Implements Reader Namespace : ZXing.Maxicode Assembly : cs.temp.dll.dll Syntax public sealed class MaxiCodeReader : Reader Methods decode(BinaryBitmap) Locates and decodes a MaxiCode in an image. a String representing the content encoded by the MaxiCode FormatException Declaration public Result decode(BinaryBitmap image) Parameters Type Name Description BinaryBitmap image Returns Type Description Result decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) Locates and decodes a MaxiCode within an image. This method also accepts hints, each possibly associated to some data, which may help the implementation decode. Declaration public Result decode(BinaryBitmap image, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description BinaryBitmap image image of barcode to decode IDictionary < DecodeHintType , Object > hints passed as a from DecodeHintType to arbitrary data. The meaning of the data depends upon the hint type. The implementation may or may not do anything with these hints. Returns Type Description Result String which the barcode encodes reset() does nothing here Declaration public void reset() Implements Reader"
  },
  "api/ZXing.Multi.ByQuadrantReader.html": {
    "href": "api/ZXing.Multi.ByQuadrantReader.html",
    "title": "Class ByQuadrantReader | Unity Algorand SDK",
    "keywords": "Class ByQuadrantReader This class attempts to decode a barcode from an image, not by scanning the whole image, but by scanning subsets of the image. This is important when there may be multiple barcodes in an image, and detecting a barcode may find parts of multiple barcode and fail to decode (e.g. QR Codes). Instead this scans the four quadrants of the image -- and also the center 'quadrant' to cover the case where a barcode is found in the center. Inheritance Object ByQuadrantReader Implements Reader Namespace : ZXing.Multi Assembly : cs.temp.dll.dll Syntax public sealed class ByQuadrantReader : Reader Constructors ByQuadrantReader(Reader) Initializes a new instance of the ByQuadrantReader class. Declaration public ByQuadrantReader(Reader delegate) Parameters Type Name Description Reader delegate The @delegate. Methods decode(BinaryBitmap) Locates and decodes a barcode in some format within an image. Declaration public Result decode(BinaryBitmap image) Parameters Type Name Description BinaryBitmap image image of barcode to decode Returns Type Description Result String which the barcode encodes decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) Locates and decodes a barcode in some format within an image. This method also accepts hints, each possibly associated to some data, which may help the implementation decode. Declaration public Result decode(BinaryBitmap image, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description BinaryBitmap image image of barcode to decode IDictionary < DecodeHintType , Object > hints passed as a from DecodeHintType to arbitrary data. The meaning of the data depends upon the hint type. The implementation may or may not do anything with these hints. Returns Type Description Result String which the barcode encodes reset() Resets any internal state the implementation has after a decode, to prepare it for reuse. Declaration public void reset() Implements Reader See Also GenericMultipleBarcodeReader"
  },
  "api/ZXing.Multi.GenericMultipleBarcodeReader.html": {
    "href": "api/ZXing.Multi.GenericMultipleBarcodeReader.html",
    "title": "Class GenericMultipleBarcodeReader | Unity Algorand SDK",
    "keywords": "Class GenericMultipleBarcodeReader Attempts to locate multiple barcodes in an image by repeatedly decoding portion of the image. After one barcode is found, the areas left, above, right and below the barcode's {@link com.google.zxing.ResultPoint}s are scanned, recursively. A caller may want to also employ {@link ByQuadrantReader} when attempting to find multiple 2D barcodes, like QR Codes, in an image, where the presence of multiple barcodes might prevent detecting any one of them. That is, instead of passing a {@link Reader} a caller might pass new ByQuadrantReader(reader) . Sean Owen Inheritance Object GenericMultipleBarcodeReader Implements MultipleBarcodeReader Reader Namespace : ZXing.Multi Assembly : cs.temp.dll.dll Syntax public sealed class GenericMultipleBarcodeReader : MultipleBarcodeReader, Reader Constructors GenericMultipleBarcodeReader(Reader) Initializes a new instance of the GenericMultipleBarcodeReader class. Declaration public GenericMultipleBarcodeReader(Reader delegate) Parameters Type Name Description Reader delegate The @delegate. Methods decode(BinaryBitmap) Locates and decodes a barcode in some format within an image. Declaration public Result decode(BinaryBitmap image) Parameters Type Name Description BinaryBitmap image image of barcode to decode Returns Type Description Result String which the barcode encodes decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) Locates and decodes a barcode in some format within an image. This method also accepts hints, each possibly associated to some data, which may help the implementation decode. Declaration public Result decode(BinaryBitmap image, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description BinaryBitmap image image of barcode to decode IDictionary < DecodeHintType , Object > hints passed as a from DecodeHintType to arbitrary data. The meaning of the data depends upon the hint type. The implementation may or may not do anything with these hints. Returns Type Description Result String which the barcode encodes decodeMultiple(BinaryBitmap) Decodes the multiple. Declaration public Result[] decodeMultiple(BinaryBitmap image) Parameters Type Name Description BinaryBitmap image The image. Returns Type Description Result [] decodeMultiple(BinaryBitmap, IDictionary<DecodeHintType, Object>) Decodes the multiple. Declaration public Result[] decodeMultiple(BinaryBitmap image, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description BinaryBitmap image The image. IDictionary < DecodeHintType , Object > hints The hints. Returns Type Description Result [] reset() Resets any internal state the implementation has after a decode, to prepare it for reuse. Declaration public void reset() Implements MultipleBarcodeReader Reader"
  },
  "api/ZXing.Multi.html": {
    "href": "api/ZXing.Multi.html",
    "title": "Namespace ZXing.Multi | Unity Algorand SDK",
    "keywords": "Namespace ZXing.Multi Classes ByQuadrantReader This class attempts to decode a barcode from an image, not by scanning the whole image, but by scanning subsets of the image. This is important when there may be multiple barcodes in an image, and detecting a barcode may find parts of multiple barcode and fail to decode (e.g. QR Codes). Instead this scans the four quadrants of the image -- and also the center 'quadrant' to cover the case where a barcode is found in the center. GenericMultipleBarcodeReader Attempts to locate multiple barcodes in an image by repeatedly decoding portion of the image. After one barcode is found, the areas left, above, right and below the barcode's {@link com.google.zxing.ResultPoint}s are scanned, recursively. A caller may want to also employ {@link ByQuadrantReader} when attempting to find multiple 2D barcodes, like QR Codes, in an image, where the presence of multiple barcodes might prevent detecting any one of them. That is, instead of passing a {@link Reader} a caller might pass new ByQuadrantReader(reader) . Sean Owen Interfaces MultipleBarcodeReader Implementation of this interface attempt to read several barcodes from one image. Sean Owen Reader"
  },
  "api/ZXing.Multi.MultipleBarcodeReader.html": {
    "href": "api/ZXing.Multi.MultipleBarcodeReader.html",
    "title": "Interface MultipleBarcodeReader | Unity Algorand SDK",
    "keywords": "Interface MultipleBarcodeReader Implementation of this interface attempt to read several barcodes from one image. Sean Owen Reader Namespace : ZXing.Multi Assembly : cs.temp.dll.dll Syntax public interface MultipleBarcodeReader Methods decodeMultiple(BinaryBitmap) Decodes the multiple. Declaration Result[] decodeMultiple(BinaryBitmap image) Parameters Type Name Description BinaryBitmap image The image. Returns Type Description Result [] decodeMultiple(BinaryBitmap, IDictionary<DecodeHintType, Object>) Decodes the multiple. Declaration Result[] decodeMultiple(BinaryBitmap image, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description BinaryBitmap image The image. IDictionary < DecodeHintType , Object > hints The hints. Returns Type Description Result []"
  },
  "api/ZXing.Multi.QrCode.html": {
    "href": "api/ZXing.Multi.QrCode.html",
    "title": "Namespace ZXing.Multi.QrCode | Unity Algorand SDK",
    "keywords": "Namespace ZXing.Multi.QrCode Classes QRCodeMultiReader This implementation can detect and decode multiple QR Codes in an image."
  },
  "api/ZXing.Multi.QrCode.Internal.html": {
    "href": "api/ZXing.Multi.QrCode.Internal.html",
    "title": "Namespace ZXing.Multi.QrCode.Internal | Unity Algorand SDK",
    "keywords": "Namespace ZXing.Multi.QrCode.Internal Classes MultiDetector Encapsulates logic that can detect one or more QR Codes in an image, even if the QR Code is rotated or skewed, or partially obscured. Sean Owen Hannes Erven MultiFinderPatternFinder This class attempts to find finder patterns in a QR Code. Finder patterns are the square markers at three corners of a QR Code. This class is thread-safe but not reentrant. Each thread must allocate its own object. In contrast to , this class will return an array of all possible QR code locations in the image. Use the TRY_HARDER hint to ask for a more thorough detection. Sean Owen Hannes Erven"
  },
  "api/ZXing.Multi.QrCode.Internal.MultiDetector.html": {
    "href": "api/ZXing.Multi.QrCode.Internal.MultiDetector.html",
    "title": "Class MultiDetector | Unity Algorand SDK",
    "keywords": "Class MultiDetector Encapsulates logic that can detect one or more QR Codes in an image, even if the QR Code is rotated or skewed, or partially obscured. Sean Owen Hannes Erven Inheritance Object MultiDetector Namespace : ZXing.Multi.QrCode.Internal Assembly : cs.temp.dll.dll Syntax public sealed class MultiDetector : Detector Constructors MultiDetector(BitMatrix) Initializes a new instance of the MultiDetector class. Declaration public MultiDetector(BitMatrix image) Parameters Type Name Description BitMatrix image The image. Methods detectMulti(IDictionary<DecodeHintType, Object>) Detects the multi. Declaration public DetectorResult[] detectMulti(IDictionary<DecodeHintType, object> hints) Parameters Type Name Description IDictionary < DecodeHintType , Object > hints The hints. Returns Type Description DetectorResult []"
  },
  "api/ZXing.Multi.QrCode.Internal.MultiFinderPatternFinder.html": {
    "href": "api/ZXing.Multi.QrCode.Internal.MultiFinderPatternFinder.html",
    "title": "Class MultiFinderPatternFinder | Unity Algorand SDK",
    "keywords": "Class MultiFinderPatternFinder This class attempts to find finder patterns in a QR Code. Finder patterns are the square markers at three corners of a QR Code. This class is thread-safe but not reentrant. Each thread must allocate its own object. In contrast to , this class will return an array of all possible QR code locations in the image. Use the TRY_HARDER hint to ask for a more thorough detection. Sean Owen Hannes Erven Inheritance Object MultiFinderPatternFinder Namespace : ZXing.Multi.QrCode.Internal Assembly : cs.temp.dll.dll Syntax public sealed class MultiFinderPatternFinder : FinderPatternFinder Constructors MultiFinderPatternFinder(BitMatrix, ResultPointCallback) Creates a finder that will search the image for three finder patterns. image to search callback for result points Declaration public MultiFinderPatternFinder(BitMatrix image, ResultPointCallback resultPointCallback) Parameters Type Name Description BitMatrix image ResultPointCallback resultPointCallback Methods findMulti(IDictionary<DecodeHintType, Object>) try to find patterns Declaration public FinderPatternInfo[] findMulti(IDictionary<DecodeHintType, object> hints) Parameters Type Name Description IDictionary < DecodeHintType , Object > hints Returns Type Description FinderPatternInfo []"
  },
  "api/ZXing.Multi.QrCode.QRCodeMultiReader.html": {
    "href": "api/ZXing.Multi.QrCode.QRCodeMultiReader.html",
    "title": "Class QRCodeMultiReader | Unity Algorand SDK",
    "keywords": "Class QRCodeMultiReader This implementation can detect and decode multiple QR Codes in an image. Inheritance Object QRCodeMultiReader Implements MultipleBarcodeReader Namespace : ZXing.Multi.QrCode Assembly : cs.temp.dll.dll Syntax public sealed class QRCodeMultiReader : QRCodeReader, MultipleBarcodeReader Methods decodeMultiple(BinaryBitmap) Decodes the multiple. Declaration public Result[] decodeMultiple(BinaryBitmap image) Parameters Type Name Description BinaryBitmap image The image. Returns Type Description Result [] decodeMultiple(BinaryBitmap, IDictionary<DecodeHintType, Object>) Decodes the multiple. Declaration public Result[] decodeMultiple(BinaryBitmap image, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description BinaryBitmap image The image. IDictionary < DecodeHintType , Object > hints The hints. Returns Type Description Result [] Implements MultipleBarcodeReader"
  },
  "api/ZXing.MultiFormatReader.html": {
    "href": "api/ZXing.MultiFormatReader.html",
    "title": "Class MultiFormatReader | Unity Algorand SDK",
    "keywords": "Class MultiFormatReader MultiFormatReader is a convenience class and the main entry point into the library for most uses. By default it attempts to decode all barcode formats that the library supports. Optionally, you can provide a hints object to request different behavior, for example only decoding QR codes. Inheritance Object MultiFormatReader Implements Reader Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public sealed class MultiFormatReader : Reader Properties Hints This method adds state to the MultiFormatReader. By setting the hints once, subsequent calls to decodeWithState(image) can reuse the same set of readers without reallocating memory. This is important for performance in continuous scan clients. Declaration public IDictionary<DecodeHintType, object> Hints { set; } Property Value Type Description IDictionary < DecodeHintType , Object > Methods decode(BinaryBitmap) This version of decode honors the intent of Reader.decode(BinaryBitmap) in that it passes null as a hint to the decoders. However, that makes it inefficient to call repeatedly. Use setHints() followed by decodeWithState() for continuous scan applications. Declaration public Result decode(BinaryBitmap image) Parameters Type Name Description BinaryBitmap image The pixel data to decode Returns Type Description Result The contents of the image decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) Decode an image using the hints provided. Does not honor existing state. Declaration public Result decode(BinaryBitmap image, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description BinaryBitmap image The pixel data to decode IDictionary < DecodeHintType , Object > hints The hints to use, clearing the previous state. Returns Type Description Result The contents of the image decodeWithState(BinaryBitmap) Decode an image using the state set up by calling setHints() previously. Continuous scan clients will get a large speed increase by using this instead of decode(). Declaration public Result decodeWithState(BinaryBitmap image) Parameters Type Name Description BinaryBitmap image The pixel data to decode Returns Type Description Result The contents of the image reset() resets all specific readers Declaration public void reset() Implements Reader"
  },
  "api/ZXing.MultiFormatWriter.html": {
    "href": "api/ZXing.MultiFormatWriter.html",
    "title": "Class MultiFormatWriter | Unity Algorand SDK",
    "keywords": "Class MultiFormatWriter This is a factory class which finds the appropriate Writer subclass for the BarcodeFormat requested and encodes the barcode with the supplied contents. Inheritance Object MultiFormatWriter Implements Writer Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public sealed class MultiFormatWriter : Writer Properties SupportedWriters Gets the collection of supported writers. Declaration public static ICollection<BarcodeFormat> SupportedWriters { get; } Property Value Type Description ICollection < BarcodeFormat > Methods encode(String, BarcodeFormat, Int32, Int32) encode the given data Declaration public BitMatrix encode(String contents, BarcodeFormat format, int width, int height) Parameters Type Name Description String contents BarcodeFormat format Int32 width Int32 height Returns Type Description BitMatrix encode(String, BarcodeFormat, Int32, Int32, IDictionary<EncodeHintType, Object>) encode the given data Declaration public BitMatrix encode(String contents, BarcodeFormat format, int width, int height, IDictionary<EncodeHintType, object> hints) Parameters Type Name Description String contents BarcodeFormat format Int32 width Int32 height IDictionary < EncodeHintType , Object > hints Returns Type Description BitMatrix Implements Writer"
  },
  "api/ZXing.OneD.CodaBarReader.html": {
    "href": "api/ZXing.OneD.CodaBarReader.html",
    "title": "Class CodaBarReader | Unity Algorand SDK",
    "keywords": "Class CodaBarReader Decodes Codabar barcodes. Bas Vijfwinkel Inheritance Object OneDReader CodaBarReader Implements Reader Inherited Members OneDReader.INTEGER_MATH_SHIFT OneDReader.PATTERN_MATCH_RESULT_SCALE_FACTOR OneDReader.decode(BinaryBitmap) OneDReader.decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.reset() OneDReader.doDecode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.recordPattern(BitArray, Int32, Int32[]) OneDReader.recordPattern(BitArray, Int32, Int32[], Int32) OneDReader.recordPatternInReverse(BitArray, Int32, Int32[]) OneDReader.patternMatchVariance(Int32[], Int32[], Int32) Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public sealed class CodaBarReader : OneDReader, Reader Constructors CodaBarReader() Declaration public CodaBarReader() Methods decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) Attempts to decode a one-dimensional barcode format given a single row of an image. Declaration public override Result decodeRow(int rowNumber, BitArray row, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description Int32 rowNumber row number from top of the row BitArray row the black/white pixel data of the row IDictionary < DecodeHintType , Object > hints decode hints Returns Type Description Result Result containing encoded string and start/end of barcode or null, if an error occurs or barcode cannot be found Overrides OneDReader.decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) Implements Reader"
  },
  "api/ZXing.OneD.CodaBarWriter.html": {
    "href": "api/ZXing.OneD.CodaBarWriter.html",
    "title": "Class CodaBarWriter | Unity Algorand SDK",
    "keywords": "Class CodaBarWriter This class renders CodaBar as Boolean []. Inheritance Object OneDimensionalCodeWriter CodaBarWriter Implements Writer Inherited Members OneDimensionalCodeWriter.encode(String) OneDimensionalCodeWriter.encode(String, IDictionary<EncodeHintType, Object>) OneDimensionalCodeWriter.encode(String, BarcodeFormat, Int32, Int32) OneDimensionalCodeWriter.encode(String, BarcodeFormat, Int32, Int32, IDictionary<EncodeHintType, Object>) OneDimensionalCodeWriter.checkNumeric(String) OneDimensionalCodeWriter.appendPattern(Boolean[], Int32, Int32[], Boolean) OneDimensionalCodeWriter.DefaultMargin OneDimensionalCodeWriter.CalculateChecksumDigitModulo10(String) Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public sealed class CodaBarWriter : OneDimensionalCodeWriter, Writer Properties SupportedWriteFormats returns supported formats Declaration protected override IList<BarcodeFormat> SupportedWriteFormats { get; } Property Value Type Description IList < BarcodeFormat > Overrides OneDimensionalCodeWriter.SupportedWriteFormats Methods encode(String) encodes the content Declaration public override bool[] encode(string contents) Parameters Type Name Description String contents Returns Type Description Boolean [] Implements Writer"
  },
  "api/ZXing.OneD.Code128EncodingOptions.Codesets.html": {
    "href": "api/ZXing.OneD.Code128EncodingOptions.Codesets.html",
    "title": "Enum Code128EncodingOptions.Codesets | Unity Algorand SDK",
    "keywords": "Enum Code128EncodingOptions.Codesets avaiable codesets Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public enum Codesets Fields Name Description A Codeset A B Codeset B C Codeset C None none specified"
  },
  "api/ZXing.OneD.Code128EncodingOptions.html": {
    "href": "api/ZXing.OneD.Code128EncodingOptions.html",
    "title": "Class Code128EncodingOptions | Unity Algorand SDK",
    "keywords": "Class Code128EncodingOptions The class holds the available options for the Code128 1D Writer Inheritance Object Code128EncodingOptions Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public class Code128EncodingOptions : EncodingOptions Properties ForceCodeset Forces which encoding will be used. Currently only used for Code-128 code sets (Type String ). Valid values are \"A\", \"B\", \"C\". Declaration public Code128EncodingOptions.Codesets ForceCodeset { get; set; } Property Value Type Description Code128EncodingOptions.Codesets ForceCodesetB if true, don't switch to codeset C for numbers Declaration public bool ForceCodesetB { get; set; } Property Value Type Description Boolean"
  },
  "api/ZXing.OneD.Code128Reader.html": {
    "href": "api/ZXing.OneD.Code128Reader.html",
    "title": "Class Code128Reader | Unity Algorand SDK",
    "keywords": "Class Code128Reader Decodes Code 128 barcodes. Sean Owen Inheritance Object OneDReader Code128Reader Implements Reader Inherited Members OneDReader.INTEGER_MATH_SHIFT OneDReader.PATTERN_MATCH_RESULT_SCALE_FACTOR OneDReader.decode(BinaryBitmap) OneDReader.decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.reset() OneDReader.doDecode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.recordPattern(BitArray, Int32, Int32[]) OneDReader.recordPattern(BitArray, Int32, Int32[], Int32) OneDReader.recordPatternInReverse(BitArray, Int32, Int32[]) OneDReader.patternMatchVariance(Int32[], Int32[], Int32) Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public sealed class Code128Reader : OneDReader, Reader Methods decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) Attempts to decode a one-dimensional barcode format given a single row of an image. Declaration public override Result decodeRow(int rowNumber, BitArray row, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description Int32 rowNumber row number from top of the row BitArray row the black/white pixel data of the row IDictionary < DecodeHintType , Object > hints decode hints Returns Type Description Result Result containing encoded string and start/end of barcode or null, if an error occurs or barcode cannot be found Overrides OneDReader.decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) Implements Reader"
  },
  "api/ZXing.OneD.Code128Writer.html": {
    "href": "api/ZXing.OneD.Code128Writer.html",
    "title": "Class Code128Writer | Unity Algorand SDK",
    "keywords": "Class Code128Writer This object renders a CODE128 code as a . erik.barbara@gmail.com (Erik Barbara) Inheritance Object OneDimensionalCodeWriter Code128Writer Implements Writer Inherited Members OneDimensionalCodeWriter.encode(String, BarcodeFormat, Int32, Int32) OneDimensionalCodeWriter.encode(String, BarcodeFormat, Int32, Int32, IDictionary<EncodeHintType, Object>) OneDimensionalCodeWriter.checkNumeric(String) OneDimensionalCodeWriter.appendPattern(Boolean[], Int32, Int32[], Boolean) OneDimensionalCodeWriter.DefaultMargin OneDimensionalCodeWriter.CalculateChecksumDigitModulo10(String) Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public sealed class Code128Writer : OneDimensionalCodeWriter, Writer Properties SupportedWriteFormats returns supported formats Declaration protected override IList<BarcodeFormat> SupportedWriteFormats { get; } Property Value Type Description IList < BarcodeFormat > Overrides OneDimensionalCodeWriter.SupportedWriteFormats Methods encode(String) Encode the contents following specified format. Declaration public override bool[] encode(String contents) Parameters Type Name Description String contents Returns Type Description Boolean [] Overrides OneDimensionalCodeWriter.encode(String) encode(String, IDictionary<EncodeHintType, Object>) starts encoding Declaration protected override bool[] encode(String contents, IDictionary<EncodeHintType, object> hints) Parameters Type Name Description String contents IDictionary < EncodeHintType , Object > hints Returns Type Description Boolean [] Overrides OneDimensionalCodeWriter.encode(String, IDictionary<EncodeHintType, Object>) Implements Writer"
  },
  "api/ZXing.OneD.Code39Reader.html": {
    "href": "api/ZXing.OneD.Code39Reader.html",
    "title": "Class Code39Reader | Unity Algorand SDK",
    "keywords": "Class Code39Reader Decodes Code 39 barcodes. Supports \"Full ASCII Code 39\" if USE_CODE_39_EXTENDED_MODE is set. Sean Owen @see Code93Reader Inheritance Object OneDReader Code39Reader Implements Reader Inherited Members OneDReader.INTEGER_MATH_SHIFT OneDReader.PATTERN_MATCH_RESULT_SCALE_FACTOR OneDReader.decode(BinaryBitmap) OneDReader.decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.reset() OneDReader.doDecode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.recordPattern(BitArray, Int32, Int32[]) OneDReader.recordPattern(BitArray, Int32, Int32[], Int32) OneDReader.recordPatternInReverse(BitArray, Int32, Int32[]) OneDReader.patternMatchVariance(Int32[], Int32[], Int32) Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public sealed class Code39Reader : OneDReader, Reader Constructors Code39Reader() Creates a reader that assumes all encoded data is data, and does not treat the final character as a check digit. It will not decoded \"extended Code 39\" sequences. Declaration public Code39Reader() Code39Reader(Boolean) Creates a reader that can be configured to check the last character as a check digit. It will not decoded \"extended Code 39\" sequences. Declaration public Code39Reader(bool usingCheckDigit) Parameters Type Name Description Boolean usingCheckDigit if true, treat the last data character as a check digit, not data, and verify that the checksum passes. Code39Reader(Boolean, Boolean) Creates a reader that can be configured to check the last character as a check digit, or optionally attempt to decode \"extended Code 39\" sequences that are used to encode the full ASCII character set. Declaration public Code39Reader(bool usingCheckDigit, bool extendedMode) Parameters Type Name Description Boolean usingCheckDigit if true, treat the last data character as a check digit, not data, and verify that the checksum passes. Boolean extendedMode if true, will attempt to decode extended Code 39 sequences in the text. Properties Alphabet Returns a string with all possible characters Declaration public static string Alphabet { get; } Property Value Type Description String Methods decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) Attempts to decode a one-dimensional barcode format given a single row of an image. Declaration public override Result decodeRow(int rowNumber, BitArray row, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description Int32 rowNumber row number from top of the row BitArray row the black/white pixel data of the row IDictionary < DecodeHintType , Object > hints decode hints Returns Type Description Result Result containing encoded string and start/end of barcode Overrides OneDReader.decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) Implements Reader"
  },
  "api/ZXing.OneD.Code39Writer.html": {
    "href": "api/ZXing.OneD.Code39Writer.html",
    "title": "Class Code39Writer | Unity Algorand SDK",
    "keywords": "Class Code39Writer This object renders a CODE39 code as a . erik.barbara@gmail.com (Erik Barbara) Inheritance Object OneDimensionalCodeWriter Code39Writer Implements Writer Inherited Members OneDimensionalCodeWriter.encode(String, IDictionary<EncodeHintType, Object>) OneDimensionalCodeWriter.encode(String, BarcodeFormat, Int32, Int32) OneDimensionalCodeWriter.encode(String, BarcodeFormat, Int32, Int32, IDictionary<EncodeHintType, Object>) OneDimensionalCodeWriter.checkNumeric(String) OneDimensionalCodeWriter.appendPattern(Boolean[], Int32, Int32[], Boolean) OneDimensionalCodeWriter.DefaultMargin OneDimensionalCodeWriter.CalculateChecksumDigitModulo10(String) Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public sealed class Code39Writer : OneDimensionalCodeWriter, Writer Properties SupportedWriteFormats returns supported formats Declaration protected override IList<BarcodeFormat> SupportedWriteFormats { get; } Property Value Type Description IList < BarcodeFormat > Overrides OneDimensionalCodeWriter.SupportedWriteFormats Methods encode(String) Encode the contents to byte array expression of one-dimensional barcode. Start code and end code should be included in result, and side margins should not be included. a {@code boolean[]} of horizontal pixels (false = white, true = black) Declaration public override bool[] encode(String contents) Parameters Type Name Description String contents Returns Type Description Boolean [] Overrides OneDimensionalCodeWriter.encode(String) Implements Writer"
  },
  "api/ZXing.OneD.Code93Reader.html": {
    "href": "api/ZXing.OneD.Code93Reader.html",
    "title": "Class Code93Reader | Unity Algorand SDK",
    "keywords": "Class Code93Reader Decodes Code 93 barcodes. Sean Owen Code39Reader Inheritance Object OneDReader Code93Reader Implements Reader Inherited Members OneDReader.INTEGER_MATH_SHIFT OneDReader.PATTERN_MATCH_RESULT_SCALE_FACTOR OneDReader.decode(BinaryBitmap) OneDReader.decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.reset() OneDReader.doDecode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.recordPattern(BitArray, Int32, Int32[]) OneDReader.recordPattern(BitArray, Int32, Int32[], Int32) OneDReader.recordPatternInReverse(BitArray, Int32, Int32[]) OneDReader.patternMatchVariance(Int32[], Int32[], Int32) Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public sealed class Code93Reader : OneDReader, Reader Constructors Code93Reader() Initializes a new instance of the Code93Reader class. Declaration public Code93Reader() Methods decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) Attempts to decode a one-dimensional barcode format given a single row of an image. Declaration public override Result decodeRow(int rowNumber, BitArray row, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description Int32 rowNumber row number from top of the row BitArray row the black/white pixel data of the row IDictionary < DecodeHintType , Object > hints decode hints Returns Type Description Result Result containing encoded string and start/end of barcode Overrides OneDReader.decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) Implements Reader"
  },
  "api/ZXing.OneD.Code93Writer.html": {
    "href": "api/ZXing.OneD.Code93Writer.html",
    "title": "Class Code93Writer | Unity Algorand SDK",
    "keywords": "Class Code93Writer This object renders a CODE93 code as a BitMatrix Inheritance Object OneDimensionalCodeWriter Code93Writer Implements Writer Inherited Members OneDimensionalCodeWriter.encode(String, IDictionary<EncodeHintType, Object>) OneDimensionalCodeWriter.encode(String, BarcodeFormat, Int32, Int32) OneDimensionalCodeWriter.encode(String, BarcodeFormat, Int32, Int32, IDictionary<EncodeHintType, Object>) OneDimensionalCodeWriter.checkNumeric(String) OneDimensionalCodeWriter.DefaultMargin OneDimensionalCodeWriter.CalculateChecksumDigitModulo10(String) Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public class Code93Writer : OneDimensionalCodeWriter, Writer Properties SupportedWriteFormats returns supported formats Declaration protected override IList<BarcodeFormat> SupportedWriteFormats { get; } Property Value Type Description IList < BarcodeFormat > Overrides OneDimensionalCodeWriter.SupportedWriteFormats Methods appendPattern(Boolean[], Int32, Int32[], Boolean) Declaration protected static int appendPattern(bool[] target, int pos, int[] pattern, bool startColor) Parameters Type Name Description Boolean [] target output to append to Int32 pos start position Int32 [] pattern pattern to append Boolean startColor unused Returns Type Description Int32 9 encode(String) Declaration public override bool[] encode(String contents) Parameters Type Name Description String contents barcode contents to encode.It should not be encoded for extended characters. Returns Type Description Boolean [] a { @code bool[]} of horizontal pixels(false = white, true = black) Overrides OneDimensionalCodeWriter.encode(String) Implements Writer"
  },
  "api/ZXing.OneD.EAN13Reader.html": {
    "href": "api/ZXing.OneD.EAN13Reader.html",
    "title": "Class EAN13Reader | Unity Algorand SDK",
    "keywords": "Class EAN13Reader Implements decoding of the EAN-13 format. dswitkin@google.com (Daniel Switkin) Sean Owen alasdair@google.com (Alasdair Mackintosh) Inheritance Object OneDReader UPCEANReader EAN13Reader Implements Reader Inherited Members UPCEANReader.decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) UPCEANReader.decodeRow(Int32, BitArray, Int32[], IDictionary<DecodeHintType, Object>) UPCEANReader.checkChecksum(String) UPCEANReader.decodeEnd(BitArray, Int32) OneDReader.INTEGER_MATH_SHIFT OneDReader.PATTERN_MATCH_RESULT_SCALE_FACTOR OneDReader.decode(BinaryBitmap) OneDReader.decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.reset() OneDReader.doDecode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.recordPattern(BitArray, Int32, Int32[]) OneDReader.recordPattern(BitArray, Int32, Int32[], Int32) OneDReader.recordPatternInReverse(BitArray, Int32, Int32[]) OneDReader.patternMatchVariance(Int32[], Int32[], Int32) Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public sealed class EAN13Reader : UPCEANReader, Reader Constructors EAN13Reader() Initializes a new instance of the EAN13Reader class. Declaration public EAN13Reader() Methods decodeMiddle(BitArray, Int32[], StringBuilder) Subclasses override this to decode the portion of a barcode between the start and end guard patterns. Declaration protected override int decodeMiddle(BitArray row, int[] startRange, StringBuilder resultString) Parameters Type Name Description BitArray row row of black/white values to search Int32 [] startRange start/end offset of start guard pattern StringBuilder resultString to append decoded chars to Returns Type Description Int32 horizontal offset of first pixel after the \"middle\" that was decoded or -1 if decoding could not complete successfully Overrides UPCEANReader.decodeMiddle(BitArray, Int32[], StringBuilder) Implements Reader"
  },
  "api/ZXing.OneD.EAN13Writer.html": {
    "href": "api/ZXing.OneD.EAN13Writer.html",
    "title": "Class EAN13Writer | Unity Algorand SDK",
    "keywords": "Class EAN13Writer This object renders an EAN13 code as a . aripollak@gmail.com (Ari Pollak) Inheritance Object OneDimensionalCodeWriter UPCEANWriter EAN13Writer Implements Writer Inherited Members UPCEANWriter.DefaultMargin OneDimensionalCodeWriter.encode(String, IDictionary<EncodeHintType, Object>) OneDimensionalCodeWriter.encode(String, BarcodeFormat, Int32, Int32) OneDimensionalCodeWriter.encode(String, BarcodeFormat, Int32, Int32, IDictionary<EncodeHintType, Object>) OneDimensionalCodeWriter.checkNumeric(String) OneDimensionalCodeWriter.appendPattern(Boolean[], Int32, Int32[], Boolean) OneDimensionalCodeWriter.CalculateChecksumDigitModulo10(String) Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public sealed class EAN13Writer : UPCEANWriter, Writer Properties SupportedWriteFormats returns supported formats Declaration protected override IList<BarcodeFormat> SupportedWriteFormats { get; } Property Value Type Description IList < BarcodeFormat > Overrides OneDimensionalCodeWriter.SupportedWriteFormats Methods encode(String) Encode the contents to byte array expression of one-dimensional barcode. Start code and end code should be included in result, and side margins should not be included. a {@code boolean[]} of horizontal pixels (false = white, true = black) Declaration public override bool[] encode(String contents) Parameters Type Name Description String contents Returns Type Description Boolean [] Overrides OneDimensionalCodeWriter.encode(String) Implements Writer"
  },
  "api/ZXing.OneD.EAN8Reader.html": {
    "href": "api/ZXing.OneD.EAN8Reader.html",
    "title": "Class EAN8Reader | Unity Algorand SDK",
    "keywords": "Class EAN8Reader Implements decoding of the EAN-8 format. Sean Owen Inheritance Object OneDReader UPCEANReader EAN8Reader Implements Reader Inherited Members UPCEANReader.decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) UPCEANReader.decodeRow(Int32, BitArray, Int32[], IDictionary<DecodeHintType, Object>) UPCEANReader.checkChecksum(String) UPCEANReader.decodeEnd(BitArray, Int32) OneDReader.INTEGER_MATH_SHIFT OneDReader.PATTERN_MATCH_RESULT_SCALE_FACTOR OneDReader.decode(BinaryBitmap) OneDReader.decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.reset() OneDReader.doDecode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.recordPattern(BitArray, Int32, Int32[]) OneDReader.recordPattern(BitArray, Int32, Int32[], Int32) OneDReader.recordPatternInReverse(BitArray, Int32, Int32[]) OneDReader.patternMatchVariance(Int32[], Int32[], Int32) Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public sealed class EAN8Reader : UPCEANReader, Reader Constructors EAN8Reader() Initializes a new instance of the EAN8Reader class. Declaration public EAN8Reader() Methods decodeMiddle(BitArray, Int32[], StringBuilder) Decodes the middle. Declaration protected override int decodeMiddle(BitArray row, int[] startRange, StringBuilder result) Parameters Type Name Description BitArray row The row. Int32 [] startRange The start range. StringBuilder result The result. Returns Type Description Int32 Overrides UPCEANReader.decodeMiddle(BitArray, Int32[], StringBuilder) Implements Reader"
  },
  "api/ZXing.OneD.EAN8Writer.html": {
    "href": "api/ZXing.OneD.EAN8Writer.html",
    "title": "Class EAN8Writer | Unity Algorand SDK",
    "keywords": "Class EAN8Writer This object renders an EAN8 code as a . aripollak@gmail.com (Ari Pollak) Inheritance Object OneDimensionalCodeWriter UPCEANWriter EAN8Writer Implements Writer Inherited Members UPCEANWriter.DefaultMargin OneDimensionalCodeWriter.encode(String, IDictionary<EncodeHintType, Object>) OneDimensionalCodeWriter.encode(String, BarcodeFormat, Int32, Int32) OneDimensionalCodeWriter.encode(String, BarcodeFormat, Int32, Int32, IDictionary<EncodeHintType, Object>) OneDimensionalCodeWriter.checkNumeric(String) OneDimensionalCodeWriter.appendPattern(Boolean[], Int32, Int32[], Boolean) OneDimensionalCodeWriter.CalculateChecksumDigitModulo10(String) Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public sealed class EAN8Writer : UPCEANWriter, Writer Properties SupportedWriteFormats returns supported formats Declaration protected override IList<BarcodeFormat> SupportedWriteFormats { get; } Property Value Type Description IList < BarcodeFormat > Overrides OneDimensionalCodeWriter.SupportedWriteFormats Methods encode(String) Declaration public override bool[] encode(String contents) Parameters Type Name Description String contents Returns Type Description Boolean [] a byte array of horizontal pixels (false = white, true = black) Overrides OneDimensionalCodeWriter.encode(String) Implements Writer"
  },
  "api/ZXing.OneD.html": {
    "href": "api/ZXing.OneD.html",
    "title": "Namespace ZXing.OneD | Unity Algorand SDK",
    "keywords": "Namespace ZXing.OneD Classes CodaBarReader Decodes Codabar barcodes. Bas Vijfwinkel CodaBarWriter This class renders CodaBar as Boolean []. Code128EncodingOptions The class holds the available options for the Code128 1D Writer Code128Reader Decodes Code 128 barcodes. Sean Owen Code128Writer This object renders a CODE128 code as a . erik.barbara@gmail.com (Erik Barbara) Code39Reader Decodes Code 39 barcodes. Supports \"Full ASCII Code 39\" if USE_CODE_39_EXTENDED_MODE is set. Sean Owen @see Code93Reader Code39Writer This object renders a CODE39 code as a . erik.barbara@gmail.com (Erik Barbara) Code93Reader Decodes Code 93 barcodes. Sean Owen Code39Reader Code93Writer This object renders a CODE93 code as a BitMatrix EAN13Reader Implements decoding of the EAN-13 format. dswitkin@google.com (Daniel Switkin) Sean Owen alasdair@google.com (Alasdair Mackintosh) EAN13Writer This object renders an EAN13 code as a . aripollak@gmail.com (Ari Pollak) EAN8Reader Implements decoding of the EAN-8 format. Sean Owen EAN8Writer This object renders an EAN8 code as a . aripollak@gmail.com (Ari Pollak) ITFReader Implements decoding of the ITF format, or Interleaved Two of Five. This Reader will scan ITF barcodes of certain lengths only. At the moment it reads length 6, 8, 10, 12, 14, 16, 18, 20, 24, 44 and 48 as these have appeared \"in the wild\". Not all lengths are scanned, especially shorter ones, to avoid false positives. This in turn is due to a lack of required checksum function. The checksum is optional and is not applied by this Reader. The consumer of the decoded value will have to apply a checksum if required. http://en.wikipedia.org/wiki/Interleaved_2_of_5 is a great reference for Interleaved 2 of 5 information. kevin.osullivan@sita.aero, SITA Lab. ITFWriter This object renders a ITF code as a . erik.barbara@gmail.com (Erik Barbara) MSIReader Decodes MSI barcodes. MSIWriter This object renders a MSI code as a . MultiFormatOneDReader dswitkin@google.com (Daniel Switkin) Sean Owen MultiFormatUPCEANReader A reader that can read all available UPC/EAN formats. If a caller wants to try to read all such formats, it is most efficient to use this implementation rather than invoke individual readers. Sean Owen OneDimensionalCodeWriter Encapsulates functionality and implementation that is common to one-dimensional barcodes. dsbnatut@gmail.com (Kazuki Nishiura) OneDReader Encapsulates functionality and implementation that is common to all families of one-dimensional barcodes. dswitkin@google.com (Daniel Switkin) Sean Owen PharmaCodeReader Decodes PharmaCode @author Ruslan Karachun PlesseyWriter This object renders a Plessey code as a . UPCAReader Implements decoding of the UPC-A format. dswitkin@google.com (Daniel Switkin) Sean Owen UPCAWriter This object renders a UPC-A code as a . qwandor@google.com (Andrew Walbran) UPCEANReader Encapsulates functionality and implementation that is common to UPC and EAN families of one-dimensional barcodes. dswitkin@google.com (Daniel Switkin) Sean Owen alasdair@google.com (Alasdair Mackintosh) UPCEANWriter Encapsulates functionality and implementation that is common to UPC and EAN families of one-dimensional barcodes. aripollak@gmail.com (Ari Pollak) dsbnatut@gmail.com (Kazuki Nishiura) UPCEReader Implements decoding of the UPC-E format. This is a great reference for UPC-E information. Sean Owen UPCEWriter This object renders an UPC-E code as a {@link BitMatrix}. @author 0979097955s@gmail.com (RX) Enums Code128EncodingOptions.Codesets avaiable codesets"
  },
  "api/ZXing.OneD.ITFReader.html": {
    "href": "api/ZXing.OneD.ITFReader.html",
    "title": "Class ITFReader | Unity Algorand SDK",
    "keywords": "Class ITFReader Implements decoding of the ITF format, or Interleaved Two of Five. This Reader will scan ITF barcodes of certain lengths only. At the moment it reads length 6, 8, 10, 12, 14, 16, 18, 20, 24, 44 and 48 as these have appeared \"in the wild\". Not all lengths are scanned, especially shorter ones, to avoid false positives. This in turn is due to a lack of required checksum function. The checksum is optional and is not applied by this Reader. The consumer of the decoded value will have to apply a checksum if required. http://en.wikipedia.org/wiki/Interleaved_2_of_5 is a great reference for Interleaved 2 of 5 information. kevin.osullivan@sita.aero, SITA Lab. Inheritance Object OneDReader ITFReader Implements Reader Inherited Members OneDReader.INTEGER_MATH_SHIFT OneDReader.PATTERN_MATCH_RESULT_SCALE_FACTOR OneDReader.decode(BinaryBitmap) OneDReader.decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.reset() OneDReader.doDecode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.recordPattern(BitArray, Int32, Int32[]) OneDReader.recordPattern(BitArray, Int32, Int32[], Int32) OneDReader.recordPatternInReverse(BitArray, Int32, Int32[]) OneDReader.patternMatchVariance(Int32[], Int32[], Int32) Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public sealed class ITFReader : OneDReader, Reader Methods decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) Attempts to decode a one-dimensional barcode format given a single row of an image. Declaration public override Result decodeRow(int rowNumber, BitArray row, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description Int32 rowNumber row number from top of the row BitArray row the black/white pixel data of the row IDictionary < DecodeHintType , Object > hints decode hints Returns Type Description Result Result containing encoded string and start/end of barcode Overrides OneDReader.decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) Implements Reader"
  },
  "api/ZXing.OneD.ITFWriter.html": {
    "href": "api/ZXing.OneD.ITFWriter.html",
    "title": "Class ITFWriter | Unity Algorand SDK",
    "keywords": "Class ITFWriter This object renders a ITF code as a . erik.barbara@gmail.com (Erik Barbara) Inheritance Object OneDimensionalCodeWriter ITFWriter Implements Writer Inherited Members OneDimensionalCodeWriter.encode(String, IDictionary<EncodeHintType, Object>) OneDimensionalCodeWriter.encode(String, BarcodeFormat, Int32, Int32) OneDimensionalCodeWriter.encode(String, BarcodeFormat, Int32, Int32, IDictionary<EncodeHintType, Object>) OneDimensionalCodeWriter.checkNumeric(String) OneDimensionalCodeWriter.appendPattern(Boolean[], Int32, Int32[], Boolean) OneDimensionalCodeWriter.DefaultMargin OneDimensionalCodeWriter.CalculateChecksumDigitModulo10(String) Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public sealed class ITFWriter : OneDimensionalCodeWriter, Writer Properties SupportedWriteFormats returns supported formats Declaration protected override IList<BarcodeFormat> SupportedWriteFormats { get; } Property Value Type Description IList < BarcodeFormat > Overrides OneDimensionalCodeWriter.SupportedWriteFormats Methods encode(String) Encode the contents to bool array expression of one-dimensional barcode. Start code and end code should be included in result, and side margins should not be included. a {@code bool[]} of horizontal pixels (false = white, true = black) Declaration public override bool[] encode(String contents) Parameters Type Name Description String contents Returns Type Description Boolean [] Overrides OneDimensionalCodeWriter.encode(String) Implements Writer"
  },
  "api/ZXing.OneD.MSIReader.html": {
    "href": "api/ZXing.OneD.MSIReader.html",
    "title": "Class MSIReader | Unity Algorand SDK",
    "keywords": "Class MSIReader Decodes MSI barcodes. Inheritance Object OneDReader MSIReader Implements Reader Inherited Members OneDReader.INTEGER_MATH_SHIFT OneDReader.PATTERN_MATCH_RESULT_SCALE_FACTOR OneDReader.decode(BinaryBitmap) OneDReader.decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.reset() OneDReader.doDecode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.recordPattern(BitArray, Int32, Int32[]) OneDReader.recordPattern(BitArray, Int32, Int32[], Int32) OneDReader.recordPatternInReverse(BitArray, Int32, Int32[]) OneDReader.patternMatchVariance(Int32[], Int32[], Int32) Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public sealed class MSIReader : OneDReader, Reader Constructors MSIReader() Creates a reader that assumes all encoded data is data, and does not treat the final character as a check digit. Declaration public MSIReader() MSIReader(Boolean) Creates a reader that can be configured to check the last character as a check digit, Declaration public MSIReader(bool usingCheckDigit) Parameters Type Name Description Boolean usingCheckDigit if true, treat the last data character as a check digit, not data, and verify that the checksum passes. Methods decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) Attempts to decode a one-dimensional barcode format given a single row of an image. Declaration public override Result decodeRow(int rowNumber, BitArray row, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description Int32 rowNumber row number from top of the row BitArray row the black/white pixel data of the row IDictionary < DecodeHintType , Object > hints decode hints Returns Type Description Result Result containing encoded string and start/end of barcode Overrides OneDReader.decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) Implements Reader"
  },
  "api/ZXing.OneD.MSIWriter.html": {
    "href": "api/ZXing.OneD.MSIWriter.html",
    "title": "Class MSIWriter | Unity Algorand SDK",
    "keywords": "Class MSIWriter This object renders a MSI code as a . Inheritance Object OneDimensionalCodeWriter MSIWriter Implements Writer Inherited Members OneDimensionalCodeWriter.encode(String, IDictionary<EncodeHintType, Object>) OneDimensionalCodeWriter.encode(String, BarcodeFormat, Int32, Int32) OneDimensionalCodeWriter.encode(String, BarcodeFormat, Int32, Int32, IDictionary<EncodeHintType, Object>) OneDimensionalCodeWriter.checkNumeric(String) OneDimensionalCodeWriter.appendPattern(Boolean[], Int32, Int32[], Boolean) OneDimensionalCodeWriter.DefaultMargin OneDimensionalCodeWriter.CalculateChecksumDigitModulo10(String) Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public sealed class MSIWriter : OneDimensionalCodeWriter, Writer Properties SupportedWriteFormats returns supported formats Declaration protected override IList<BarcodeFormat> SupportedWriteFormats { get; } Property Value Type Description IList < BarcodeFormat > Overrides OneDimensionalCodeWriter.SupportedWriteFormats Methods encode(String) Encode the contents to byte array expression of one-dimensional barcode. Start code and end code should be included in result, and side margins should not be included. a {@code boolean[]} of horizontal pixels (false = white, true = black) Declaration public override bool[] encode(String contents) Parameters Type Name Description String contents Returns Type Description Boolean [] Overrides OneDimensionalCodeWriter.encode(String) Implements Writer"
  },
  "api/ZXing.OneD.MultiFormatOneDReader.html": {
    "href": "api/ZXing.OneD.MultiFormatOneDReader.html",
    "title": "Class MultiFormatOneDReader | Unity Algorand SDK",
    "keywords": "Class MultiFormatOneDReader dswitkin@google.com (Daniel Switkin) Sean Owen Inheritance Object OneDReader MultiFormatOneDReader Implements Reader Inherited Members OneDReader.INTEGER_MATH_SHIFT OneDReader.PATTERN_MATCH_RESULT_SCALE_FACTOR OneDReader.decode(BinaryBitmap) OneDReader.decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.doDecode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.recordPattern(BitArray, Int32, Int32[]) OneDReader.recordPattern(BitArray, Int32, Int32[], Int32) OneDReader.recordPatternInReverse(BitArray, Int32, Int32[]) OneDReader.patternMatchVariance(Int32[], Int32[], Int32) Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public sealed class MultiFormatOneDReader : OneDReader, Reader Constructors MultiFormatOneDReader(IDictionary<DecodeHintType, Object>) Initializes a new instance of the MultiFormatOneDReader class. Declaration public MultiFormatOneDReader(IDictionary<DecodeHintType, object> hints) Parameters Type Name Description IDictionary < DecodeHintType , Object > hints The hints. Methods decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) Attempts to decode a one-dimensional barcode format given a single row of an image. Declaration public override Result decodeRow(int rowNumber, BitArray row, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description Int32 rowNumber row number from top of the row BitArray row the black/white pixel data of the row IDictionary < DecodeHintType , Object > hints decode hints Returns Type Description Result Result containing encoded string and start/end of barcode or null, if an error occurs or barcode cannot be found Overrides OneDReader.decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) reset() Resets any internal state the implementation has after a decode, to prepare it for reuse. Declaration public override void reset() Overrides OneDReader.reset() Implements Reader"
  },
  "api/ZXing.OneD.MultiFormatUPCEANReader.html": {
    "href": "api/ZXing.OneD.MultiFormatUPCEANReader.html",
    "title": "Class MultiFormatUPCEANReader | Unity Algorand SDK",
    "keywords": "Class MultiFormatUPCEANReader A reader that can read all available UPC/EAN formats. If a caller wants to try to read all such formats, it is most efficient to use this implementation rather than invoke individual readers. Sean Owen Inheritance Object OneDReader MultiFormatUPCEANReader Implements Reader Inherited Members OneDReader.INTEGER_MATH_SHIFT OneDReader.PATTERN_MATCH_RESULT_SCALE_FACTOR OneDReader.decode(BinaryBitmap) OneDReader.decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.doDecode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.recordPattern(BitArray, Int32, Int32[]) OneDReader.recordPattern(BitArray, Int32, Int32[], Int32) OneDReader.recordPatternInReverse(BitArray, Int32, Int32[]) OneDReader.patternMatchVariance(Int32[], Int32[], Int32) Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public sealed class MultiFormatUPCEANReader : OneDReader, Reader Constructors MultiFormatUPCEANReader(IDictionary<DecodeHintType, Object>) Initializes a new instance of the MultiFormatUPCEANReader class. Declaration public MultiFormatUPCEANReader(IDictionary<DecodeHintType, object> hints) Parameters Type Name Description IDictionary < DecodeHintType , Object > hints The hints. Methods decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) Attempts to decode a one-dimensional barcode format given a single row of an image. Declaration public override Result decodeRow(int rowNumber, BitArray row, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description Int32 rowNumber row number from top of the row BitArray row the black/white pixel data of the row IDictionary < DecodeHintType , Object > hints decode hints Returns Type Description Result Result containing encoded string and start/end of barcode or null if an error occurs or barcode cannot be found Overrides OneDReader.decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) reset() Resets any internal state the implementation has after a decode, to prepare it for reuse. Declaration public override void reset() Overrides OneDReader.reset() Implements Reader"
  },
  "api/ZXing.OneD.OneDimensionalCodeWriter.html": {
    "href": "api/ZXing.OneD.OneDimensionalCodeWriter.html",
    "title": "Class OneDimensionalCodeWriter | Unity Algorand SDK",
    "keywords": "Class OneDimensionalCodeWriter Encapsulates functionality and implementation that is common to one-dimensional barcodes. dsbnatut@gmail.com (Kazuki Nishiura) Inheritance Object OneDimensionalCodeWriter CodaBarWriter Code128Writer Code39Writer Code93Writer ITFWriter MSIWriter PlesseyWriter UPCEANWriter Implements Writer Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public abstract class OneDimensionalCodeWriter : Writer Properties DefaultMargin Gets the default margin. Declaration public virtual int DefaultMargin { get; } Property Value Type Description Int32 SupportedWriteFormats returns supported formats Declaration protected abstract IList<BarcodeFormat> SupportedWriteFormats { get; } Property Value Type Description IList < BarcodeFormat > Methods appendPattern(Boolean[], Int32, Int32[], Boolean) Appends the given pattern to the target array starting at pos. Declaration protected static int appendPattern(bool[] target, int pos, int[] pattern, bool startColor) Parameters Type Name Description Boolean [] target encode black/white pattern into this array Int32 pos position to start encoding at in target Int32 [] pattern lengths of black/white runs to encode Boolean startColor starting color - false for white, true for black Returns Type Description Int32 the number of elements added to target. CalculateChecksumDigitModulo10(String) Calculates the checksum digit modulo10. Declaration public static String CalculateChecksumDigitModulo10(String contents) Parameters Type Name Description String contents The contents. Returns Type Description String checkNumeric(String) Throw ArgumentException if input contains characters other than digits 0-9. Declaration protected static void checkNumeric(String contents) Parameters Type Name Description String contents string to check for numeric characters encode(String) Encode the contents to boolean array expression of one-dimensional barcode. Start code and end code should be included in result, and side margins should not be included. Declaration public abstract bool[] encode(String contents) Parameters Type Name Description String contents barcode contents to encode Returns Type Description Boolean [] a bool[] of horizontal pixels (false = white, true = black) encode(String, IDictionary<EncodeHintType, Object>) Can be overwritten if the encode requires to read the hints map. Otherwise it defaults to {@code encode}. Declaration protected virtual bool[] encode(String contents, IDictionary<EncodeHintType, object> hints) Parameters Type Name Description String contents barcode contents to encode IDictionary < EncodeHintType , Object > hints encoding hints Returns Type Description Boolean [] a bool[] of horizontal pixels (false = white, true = black) encode(String, BarcodeFormat, Int32, Int32) Encode a barcode using the default settings. Declaration public BitMatrix encode(String contents, BarcodeFormat format, int width, int height) Parameters Type Name Description String contents The contents to encode in the barcode BarcodeFormat format The barcode format to generate Int32 width The preferred width in pixels Int32 height The preferred height in pixels Returns Type Description BitMatrix The generated barcode as a Matrix of unsigned bytes (0 == black, 255 == white) encode(String, BarcodeFormat, Int32, Int32, IDictionary<EncodeHintType, Object>) Encode the contents following specified format. {@code width} and {@code height} are required size. This method may return bigger size {@code BitMatrix} when specified size is too small. The user can set both {@code width} and {@code height} to zero to get minimum size barcode. If negative value is set to {@code width} or {@code height}, {@code IllegalArgumentException} is thrown. Declaration public virtual BitMatrix encode(String contents, BarcodeFormat format, int width, int height, IDictionary<EncodeHintType, object> hints) Parameters Type Name Description String contents BarcodeFormat format Int32 width Int32 height IDictionary < EncodeHintType , Object > hints Returns Type Description BitMatrix Implements Writer"
  },
  "api/ZXing.OneD.OneDReader.html": {
    "href": "api/ZXing.OneD.OneDReader.html",
    "title": "Class OneDReader | Unity Algorand SDK",
    "keywords": "Class OneDReader Encapsulates functionality and implementation that is common to all families of one-dimensional barcodes. dswitkin@google.com (Daniel Switkin) Sean Owen Inheritance Object OneDReader CodaBarReader Code128Reader Code39Reader Code93Reader ITFReader MSIReader MultiFormatOneDReader MultiFormatUPCEANReader PharmaCodeReader AbstractRSSReader UPCEANReader Implements Reader Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public abstract class OneDReader : Reader Fields INTEGER_MATH_SHIFT Declaration protected static int INTEGER_MATH_SHIFT Field Value Type Description Int32 PATTERN_MATCH_RESULT_SCALE_FACTOR Declaration protected static int PATTERN_MATCH_RESULT_SCALE_FACTOR Field Value Type Description Int32 Methods decode(BinaryBitmap) Locates and decodes a barcode in some format within an image. Declaration public Result decode(BinaryBitmap image) Parameters Type Name Description BinaryBitmap image image of barcode to decode Returns Type Description Result String which the barcode encodes decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) Locates and decodes a barcode in some format within an image. This method also accepts hints, each possibly associated to some data, which may help the implementation decode. Note that we don't try rotation without the try harder flag, even if rotation was supported. Declaration public virtual Result decode(BinaryBitmap image, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description BinaryBitmap image image of barcode to decode IDictionary < DecodeHintType , Object > hints passed as a from DecodeHintType to arbitrary data. The meaning of the data depends upon the hint type. The implementation may or may not do anything with these hints. Returns Type Description Result String which the barcode encodes decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) Attempts to decode a one-dimensional barcode format given a single row of an image. Declaration public abstract Result decodeRow(int rowNumber, BitArray row, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description Int32 rowNumber row number from top of the row BitArray row the black/white pixel data of the row IDictionary < DecodeHintType , Object > hints decode hints Returns Type Description Result Result containing encoded string and start/end of barcode doDecode(BinaryBitmap, IDictionary<DecodeHintType, Object>) We're going to examine rows from the middle outward, searching alternately above and below the middle, and farther out each time. rowStep is the number of rows between each successive attempt above and below the middle. So we'd scan row middle, then middle - rowStep, then middle + rowStep, then middle - (2 * rowStep), etc. rowStep is bigger as the image is taller, but is always at least 1. We've somewhat arbitrarily decided that moving up and down by about 1/16 of the image is pretty good; we try more of the image if \"trying harder\". Declaration protected virtual Result doDecode(BinaryBitmap image, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description BinaryBitmap image The image to decode IDictionary < DecodeHintType , Object > hints Any hints that were requested Returns Type Description Result The contents of the decoded barcode patternMatchVariance(Int32[], Int32[], Int32) Determines how closely a set of observed counts of runs of black/white values matches a given target pattern. This is reported as the ratio of the total variance from the expected pattern proportions across all pattern elements, to the length of the pattern. Declaration protected static int patternMatchVariance(int[] counters, int[] pattern, int maxIndividualVariance) Parameters Type Name Description Int32 [] counters observed counters Int32 [] pattern expected pattern Int32 maxIndividualVariance The most any counter can differ before we give up Returns Type Description Int32 ratio of total variance between counters and pattern compared to total pattern size, where the ratio has been multiplied by 256. So, 0 means no variance (perfect match); 256 means the total variance between counters and patterns equals the pattern length, higher values mean even more variance recordPattern(BitArray, Int32, Int32[]) Records the size of successive runs of white and black pixels in a row, starting at a given point. The values are recorded in the given array, and the number of runs recorded is equal to the size of the array. If the row starts on a white pixel at the given start point, then the first count recorded is the run of white pixels starting from that point; likewise it is the count of a run of black pixels if the row begin on a black pixels at that point. Declaration protected static bool recordPattern(BitArray row, int start, int[] counters) Parameters Type Name Description BitArray row row to count from Int32 start offset into row to start at Int32 [] counters array into which to record counts Returns Type Description Boolean recordPattern(BitArray, Int32, Int32[], Int32) Records the size of successive runs of white and black pixels in a row, starting at a given point. The values are recorded in the given array, and the number of runs recorded is equal to the size of the array. If the row starts on a white pixel at the given start point, then the first count recorded is the run of white pixels starting from that point; likewise it is the count of a run of black pixels if the row begin on a black pixels at that point. Declaration protected static bool recordPattern(BitArray row, int start, int[] counters, int numCounters) Parameters Type Name Description BitArray row row to count from Int32 start offset into row to start at Int32 [] counters array into which to record counts Int32 numCounters Returns Type Description Boolean recordPatternInReverse(BitArray, Int32, Int32[]) Records the pattern in reverse. Declaration protected static bool recordPatternInReverse(BitArray row, int start, int[] counters) Parameters Type Name Description BitArray row The row. Int32 start The start. Int32 [] counters The counters. Returns Type Description Boolean reset() Resets any internal state the implementation has after a decode, to prepare it for reuse. Declaration public virtual void reset() Implements Reader"
  },
  "api/ZXing.OneD.PharmaCodeReader.html": {
    "href": "api/ZXing.OneD.PharmaCodeReader.html",
    "title": "Class PharmaCodeReader | Unity Algorand SDK",
    "keywords": "Class PharmaCodeReader Decodes PharmaCode @author Ruslan Karachun Inheritance Object OneDReader PharmaCodeReader Implements Reader Inherited Members OneDReader.INTEGER_MATH_SHIFT OneDReader.PATTERN_MATCH_RESULT_SCALE_FACTOR OneDReader.decode(BinaryBitmap) OneDReader.decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.reset() OneDReader.doDecode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.recordPattern(BitArray, Int32, Int32[]) OneDReader.recordPattern(BitArray, Int32, Int32[], Int32) OneDReader.recordPatternInReverse(BitArray, Int32, Int32[]) OneDReader.patternMatchVariance(Int32[], Int32[], Int32) Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public sealed class PharmaCodeReader : OneDReader, Reader Methods decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) Attempts to decode a one-dimensional barcode format given a single row of an image. Declaration public override Result decodeRow(int rowNumber, BitArray row, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description Int32 rowNumber row number from top of the row BitArray row the black/white pixel data of the row IDictionary < DecodeHintType , Object > hints decode hints Returns Type Description Result Result containing encoded string and start/end of barcode or null, if an error occurs or barcode cannot be found Overrides OneDReader.decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) mean(Double[]) Declaration public static double mean(double[] m) Parameters Type Name Description Double [] m Returns Type Description Double Implements Reader"
  },
  "api/ZXing.OneD.PlesseyWriter.html": {
    "href": "api/ZXing.OneD.PlesseyWriter.html",
    "title": "Class PlesseyWriter | Unity Algorand SDK",
    "keywords": "Class PlesseyWriter This object renders a Plessey code as a . Inheritance Object OneDimensionalCodeWriter PlesseyWriter Implements Writer Inherited Members OneDimensionalCodeWriter.encode(String, IDictionary<EncodeHintType, Object>) OneDimensionalCodeWriter.encode(String, BarcodeFormat, Int32, Int32) OneDimensionalCodeWriter.encode(String, BarcodeFormat, Int32, Int32, IDictionary<EncodeHintType, Object>) OneDimensionalCodeWriter.checkNumeric(String) OneDimensionalCodeWriter.appendPattern(Boolean[], Int32, Int32[], Boolean) OneDimensionalCodeWriter.DefaultMargin OneDimensionalCodeWriter.CalculateChecksumDigitModulo10(String) Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public sealed class PlesseyWriter : OneDimensionalCodeWriter, Writer Properties SupportedWriteFormats returns the list of supported formats Declaration protected override IList<BarcodeFormat> SupportedWriteFormats { get; } Property Value Type Description IList < BarcodeFormat > Overrides OneDimensionalCodeWriter.SupportedWriteFormats Methods encode(String) Encode the contents to byte array expression of one-dimensional barcode. Start code and end code should be included in result, and side margins should not be included. a {@code boolean[]} of horizontal pixels (false = white, true = black) Declaration public override bool[] encode(String contents) Parameters Type Name Description String contents Returns Type Description Boolean [] Overrides OneDimensionalCodeWriter.encode(String) Implements Writer"
  },
  "api/ZXing.OneD.RSS.AbstractRSSReader.html": {
    "href": "api/ZXing.OneD.RSS.AbstractRSSReader.html",
    "title": "Class AbstractRSSReader | Unity Algorand SDK",
    "keywords": "Class AbstractRSSReader Superclass of OneDReader implementations that read barcodes in the RSS family of formats. Inheritance Object OneDReader AbstractRSSReader RSSExpandedReader RSS14Reader Implements Reader Inherited Members OneDReader.INTEGER_MATH_SHIFT OneDReader.PATTERN_MATCH_RESULT_SCALE_FACTOR OneDReader.decode(BinaryBitmap) OneDReader.decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.reset() OneDReader.doDecode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.recordPattern(BitArray, Int32, Int32[]) OneDReader.recordPattern(BitArray, Int32, Int32[], Int32) OneDReader.recordPatternInReverse(BitArray, Int32, Int32[]) OneDReader.patternMatchVariance(Int32[], Int32[], Int32) OneDReader.decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) Namespace : ZXing.OneD.RSS Assembly : cs.temp.dll.dll Syntax public abstract class AbstractRSSReader : OneDReader, Reader Constructors AbstractRSSReader() Initializes a new instance of the AbstractRSSReader class. Declaration protected AbstractRSSReader() Methods count(Int32[]) Counts the specified array. Declaration protected static int count(int[] array) Parameters Type Name Description Int32 [] array The array. Returns Type Description Int32 decrement(Int32[], Single[]) Decrements the specified array. Declaration protected static void decrement(int[] array, float[] errors) Parameters Type Name Description Int32 [] array The array. Single [] errors The errors. getDataCharacterCounters() Gets the data character counters. Declaration protected int[] getDataCharacterCounters() Returns Type Description Int32 [] getDecodeFinderCounters() Gets the decode finder counters. Declaration protected int[] getDecodeFinderCounters() Returns Type Description Int32 [] getEvenCounts() Gets the even counts. Declaration protected int[] getEvenCounts() Returns Type Description Int32 [] getEvenRoundingErrors() Gets the even rounding errors. Declaration protected float[] getEvenRoundingErrors() Returns Type Description Single [] getOddCounts() Gets the odd counts. Declaration protected int[] getOddCounts() Returns Type Description Int32 [] getOddRoundingErrors() Gets the odd rounding errors. Declaration protected float[] getOddRoundingErrors() Returns Type Description Single [] increment(Int32[], Single[]) Increments the specified array. Declaration protected static void increment(int[] array, float[] errors) Parameters Type Name Description Int32 [] array The array. Single [] errors The errors. isFinderPattern(Int32[]) Determines whether [is finder pattern] [the specified counters]. Declaration protected static bool isFinderPattern(int[] counters) Parameters Type Name Description Int32 [] counters The counters. Returns Type Description Boolean true if [is finder pattern] [the specified counters]; otherwise, false . parseFinderValue(Int32[], Int32[][], out Int32) Parses the finder value. Declaration protected static bool parseFinderValue(int[] counters, int[][] finderPatterns, out int value) Parameters Type Name Description Int32 [] counters The counters. Int32 [][] finderPatterns The finder patterns. Int32 value The value. Returns Type Description Boolean Implements Reader"
  },
  "api/ZXing.OneD.RSS.DataCharacter.html": {
    "href": "api/ZXing.OneD.RSS.DataCharacter.html",
    "title": "Class DataCharacter | Unity Algorand SDK",
    "keywords": "Class DataCharacter Encapsulates a since character value in an RSS barcode, including its checksum information. Inheritance Object DataCharacter Namespace : ZXing.OneD.RSS Assembly : cs.temp.dll.dll Syntax public class DataCharacter Constructors DataCharacter(Int32, Int32) Initializes a new instance of the DataCharacter class. Declaration public DataCharacter(int value, int checksumPortion) Parameters Type Name Description Int32 value The value. Int32 checksumPortion The checksum portion. Properties ChecksumPortion Gets the checksum portion. Declaration public int ChecksumPortion { get; } Property Value Type Description Int32 Value Gets the value. Declaration public int Value { get; } Property Value Type Description Int32 Methods Equals(Object) Determines whether the specified Object is equal to this instance. Declaration public override bool Equals(Object o) Parameters Type Name Description Object o The Object to compare with this instance. Returns Type Description Boolean true if the specified Object is equal to this instance; otherwise, false . GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Object.GetHashCode() ToString() Returns a String that represents this instance. Declaration public override String ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString()"
  },
  "api/ZXing.OneD.RSS.Expanded.Decoders.AbstractExpandedDecoder.html": {
    "href": "api/ZXing.OneD.RSS.Expanded.Decoders.AbstractExpandedDecoder.html",
    "title": "Class AbstractExpandedDecoder | Unity Algorand SDK",
    "keywords": "Class AbstractExpandedDecoder Pablo Orduña, University of Deusto (pablo.orduna@deusto.es) Eduardo Castillejo, University of Deusto (eduardo.castillejo@deusto.es) Inheritance Object AbstractExpandedDecoder Namespace : ZXing.OneD.RSS.Expanded.Decoders Assembly : cs.temp.dll.dll Syntax public abstract class AbstractExpandedDecoder Methods createDecoder(BitArray) Creates the decoder. Declaration public static AbstractExpandedDecoder createDecoder(BitArray information) Parameters Type Name Description BitArray information The information. Returns Type Description AbstractExpandedDecoder getInformation() Gets the information. Declaration protected BitArray getInformation() Returns Type Description BitArray parseInformation() Parses the information. Declaration public abstract String parseInformation() Returns Type Description String"
  },
  "api/ZXing.OneD.RSS.Expanded.Decoders.html": {
    "href": "api/ZXing.OneD.RSS.Expanded.Decoders.html",
    "title": "Namespace ZXing.OneD.RSS.Expanded.Decoders | Unity Algorand SDK",
    "keywords": "Namespace ZXing.OneD.RSS.Expanded.Decoders Classes AbstractExpandedDecoder Pablo Orduña, University of Deusto (pablo.orduna@deusto.es) Eduardo Castillejo, University of Deusto (eduardo.castillejo@deusto.es)"
  },
  "api/ZXing.OneD.RSS.Expanded.html": {
    "href": "api/ZXing.OneD.RSS.Expanded.html",
    "title": "Namespace ZXing.OneD.RSS.Expanded | Unity Algorand SDK",
    "keywords": "Namespace ZXing.OneD.RSS.Expanded Classes RSSExpandedReader Pablo Orduña, University of Deusto (pablo.orduna@deusto.es) Eduardo Castillejo, University of Deusto (eduardo.castillejo@deusto.es)"
  },
  "api/ZXing.OneD.RSS.Expanded.RSSExpandedReader.html": {
    "href": "api/ZXing.OneD.RSS.Expanded.RSSExpandedReader.html",
    "title": "Class RSSExpandedReader | Unity Algorand SDK",
    "keywords": "Class RSSExpandedReader Pablo Orduña, University of Deusto (pablo.orduna@deusto.es) Eduardo Castillejo, University of Deusto (eduardo.castillejo@deusto.es) Inheritance Object OneDReader AbstractRSSReader RSSExpandedReader Implements Reader Inherited Members AbstractRSSReader.getDecodeFinderCounters() AbstractRSSReader.getDataCharacterCounters() AbstractRSSReader.getOddRoundingErrors() AbstractRSSReader.getEvenRoundingErrors() AbstractRSSReader.getOddCounts() AbstractRSSReader.getEvenCounts() AbstractRSSReader.parseFinderValue(Int32[], Int32[][], Int32) AbstractRSSReader.count(Int32[]) AbstractRSSReader.increment(Int32[], Single[]) AbstractRSSReader.decrement(Int32[], Single[]) AbstractRSSReader.isFinderPattern(Int32[]) OneDReader.INTEGER_MATH_SHIFT OneDReader.PATTERN_MATCH_RESULT_SCALE_FACTOR OneDReader.decode(BinaryBitmap) OneDReader.decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.doDecode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.recordPattern(BitArray, Int32, Int32[]) OneDReader.recordPattern(BitArray, Int32, Int32[], Int32) OneDReader.recordPatternInReverse(BitArray, Int32, Int32[]) OneDReader.patternMatchVariance(Int32[], Int32[], Int32) Namespace : ZXing.OneD.RSS.Expanded Assembly : cs.temp.dll.dll Syntax public sealed class RSSExpandedReader : AbstractRSSReader, Reader Methods decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) Attempts to decode a one-dimensional barcode format given a single row of an image. Declaration public override Result decodeRow(int rowNumber, BitArray row, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description Int32 rowNumber row number from top of the row BitArray row the black/white pixel data of the row IDictionary < DecodeHintType , Object > hints decode hints Returns Type Description Result Result containing encoded string and start/end of barcode or null, if an error occurs or barcode cannot be found Overrides OneDReader.decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) reset() Resets this instance. Declaration public override void reset() Overrides OneDReader.reset() Implements Reader"
  },
  "api/ZXing.OneD.RSS.FinderPattern.html": {
    "href": "api/ZXing.OneD.RSS.FinderPattern.html",
    "title": "Class FinderPattern | Unity Algorand SDK",
    "keywords": "Class FinderPattern Encapsulates an RSS barcode finder pattern, including its start/end position and row. Inheritance Object FinderPattern Namespace : ZXing.OneD.RSS Assembly : cs.temp.dll.dll Syntax public sealed class FinderPattern Constructors FinderPattern(Int32, Int32[], Int32, Int32, Int32) Initializes a new instance of the FinderPattern class. Declaration public FinderPattern(int value, int[] startEnd, int start, int end, int rowNumber) Parameters Type Name Description Int32 value The value. Int32 [] startEnd The start end. Int32 start The start. Int32 end The end. Int32 rowNumber The row number. Properties ResultPoints Gets the result points. Declaration public ResultPoint[] ResultPoints { get; } Property Value Type Description ResultPoint [] StartEnd Gets the start end. Declaration public int[] StartEnd { get; } Property Value Type Description Int32 [] Value Gets the value. Declaration public int Value { get; } Property Value Type Description Int32 Methods Equals(Object) Determines whether the specified Object is equal to this instance. Declaration public override bool Equals(Object o) Parameters Type Name Description Object o The Object to compare with this instance. Returns Type Description Boolean true if the specified Object is equal to this instance; otherwise, false . GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Object.GetHashCode()"
  },
  "api/ZXing.OneD.RSS.html": {
    "href": "api/ZXing.OneD.RSS.html",
    "title": "Namespace ZXing.OneD.RSS | Unity Algorand SDK",
    "keywords": "Namespace ZXing.OneD.RSS Classes AbstractRSSReader Superclass of OneDReader implementations that read barcodes in the RSS family of formats. DataCharacter Encapsulates a since character value in an RSS barcode, including its checksum information. FinderPattern Encapsulates an RSS barcode finder pattern, including its start/end position and row. RSS14Reader Decodes RSS-14, including truncated and stacked variants. See ISO/IEC 24724:2006. RSSUtils Adapted from listings in ISO/IEC 24724 Appendix B and Appendix G."
  },
  "api/ZXing.OneD.RSS.RSS14Reader.html": {
    "href": "api/ZXing.OneD.RSS.RSS14Reader.html",
    "title": "Class RSS14Reader | Unity Algorand SDK",
    "keywords": "Class RSS14Reader Decodes RSS-14, including truncated and stacked variants. See ISO/IEC 24724:2006. Inheritance Object OneDReader AbstractRSSReader RSS14Reader Implements Reader Inherited Members AbstractRSSReader.getDecodeFinderCounters() AbstractRSSReader.getDataCharacterCounters() AbstractRSSReader.getOddRoundingErrors() AbstractRSSReader.getEvenRoundingErrors() AbstractRSSReader.getOddCounts() AbstractRSSReader.getEvenCounts() AbstractRSSReader.parseFinderValue(Int32[], Int32[][], Int32) AbstractRSSReader.count(Int32[]) AbstractRSSReader.increment(Int32[], Single[]) AbstractRSSReader.decrement(Int32[], Single[]) AbstractRSSReader.isFinderPattern(Int32[]) OneDReader.INTEGER_MATH_SHIFT OneDReader.PATTERN_MATCH_RESULT_SCALE_FACTOR OneDReader.decode(BinaryBitmap) OneDReader.decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.doDecode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.recordPattern(BitArray, Int32, Int32[]) OneDReader.recordPattern(BitArray, Int32, Int32[], Int32) OneDReader.recordPatternInReverse(BitArray, Int32, Int32[]) OneDReader.patternMatchVariance(Int32[], Int32[], Int32) Namespace : ZXing.OneD.RSS Assembly : cs.temp.dll.dll Syntax public sealed class RSS14Reader : AbstractRSSReader, Reader Constructors RSS14Reader() Initializes a new instance of the RSS14Reader class. Declaration public RSS14Reader() Methods decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) Attempts to decode a one-dimensional barcode format given a single row of an image. Declaration public override Result decodeRow(int rowNumber, BitArray row, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description Int32 rowNumber row number from top of the row BitArray row the black/white pixel data of the row IDictionary < DecodeHintType , Object > hints decode hints Returns Type Description Result Result containing encoded string and start/end of barcode or null, if an error occurs or barcode cannot be found Overrides OneDReader.decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) reset() Resets this instance. Declaration public override void reset() Overrides OneDReader.reset() Implements Reader"
  },
  "api/ZXing.OneD.RSS.RSSUtils.html": {
    "href": "api/ZXing.OneD.RSS.RSSUtils.html",
    "title": "Class RSSUtils | Unity Algorand SDK",
    "keywords": "Class RSSUtils Adapted from listings in ISO/IEC 24724 Appendix B and Appendix G. Inheritance Object RSSUtils Namespace : ZXing.OneD.RSS Assembly : cs.temp.dll.dll Syntax public static class RSSUtils Methods getRSSvalue(Int32[], Int32, Boolean) Gets the RS svalue. Declaration public static int getRSSvalue(int[] widths, int maxWidth, bool noNarrow) Parameters Type Name Description Int32 [] widths The widths. Int32 maxWidth Width of the max. Boolean noNarrow if set to true [no narrow]. Returns Type Description Int32"
  },
  "api/ZXing.OneD.UPCAReader.html": {
    "href": "api/ZXing.OneD.UPCAReader.html",
    "title": "Class UPCAReader | Unity Algorand SDK",
    "keywords": "Class UPCAReader Implements decoding of the UPC-A format. dswitkin@google.com (Daniel Switkin) Sean Owen Inheritance Object OneDReader UPCEANReader UPCAReader Implements Reader Inherited Members UPCEANReader.checkChecksum(String) UPCEANReader.decodeEnd(BitArray, Int32) OneDReader.INTEGER_MATH_SHIFT OneDReader.PATTERN_MATCH_RESULT_SCALE_FACTOR OneDReader.decode(BinaryBitmap) OneDReader.reset() OneDReader.doDecode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.recordPattern(BitArray, Int32, Int32[]) OneDReader.recordPattern(BitArray, Int32, Int32[], Int32) OneDReader.recordPatternInReverse(BitArray, Int32, Int32[]) OneDReader.patternMatchVariance(Int32[], Int32[], Int32) Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public sealed class UPCAReader : UPCEANReader, Reader Methods decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) Decodes the specified image. Declaration public override Result decode(BinaryBitmap image, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description BinaryBitmap image The image. IDictionary < DecodeHintType , Object > hints The hints. Returns Type Description Result Overrides OneDReader.decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) decodeMiddle(BitArray, Int32[], StringBuilder) Subclasses override this to decode the portion of a barcode between the start and end guard patterns. Declaration protected override int decodeMiddle(BitArray row, int[] startRange, StringBuilder resultString) Parameters Type Name Description BitArray row row of black/white values to search Int32 [] startRange start/end offset of start guard pattern StringBuilder resultString to append decoded chars to Returns Type Description Int32 horizontal offset of first pixel after the \"middle\" that was decoded or -1 if decoding could not complete successfully Overrides UPCEANReader.decodeMiddle(BitArray, Int32[], StringBuilder) decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) Attempts to decode a one-dimensional barcode format given a single row of an image. Declaration public override Result decodeRow(int rowNumber, BitArray row, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description Int32 rowNumber row number from top of the row BitArray row the black/white pixel data of the row IDictionary < DecodeHintType , Object > hints decode hints Returns Type Description Result Result containing encoded string and start/end of barcode or null, if an error occurs or barcode cannot be found Overrides UPCEANReader.decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) decodeRow(Int32, BitArray, Int32[], IDictionary<DecodeHintType, Object>) Like decodeRow(int, BitArray, java.util.Map), but allows caller to inform method about where the UPC/EAN start pattern is found. This allows this to be computed once and reused across many implementations. Declaration public override Result decodeRow(int rowNumber, BitArray row, int[] startGuardRange, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description Int32 rowNumber BitArray row Int32 [] startGuardRange IDictionary < DecodeHintType , Object > hints Returns Type Description Result Overrides UPCEANReader.decodeRow(Int32, BitArray, Int32[], IDictionary<DecodeHintType, Object>) Implements Reader"
  },
  "api/ZXing.OneD.UPCAWriter.html": {
    "href": "api/ZXing.OneD.UPCAWriter.html",
    "title": "Class UPCAWriter | Unity Algorand SDK",
    "keywords": "Class UPCAWriter This object renders a UPC-A code as a . qwandor@google.com (Andrew Walbran) Inheritance Object UPCAWriter Implements Writer Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public class UPCAWriter : Writer Methods encode(String, BarcodeFormat, Int32, Int32) Encode a barcode using the default settings. Declaration public BitMatrix encode(String contents, BarcodeFormat format, int width, int height) Parameters Type Name Description String contents The contents to encode in the barcode BarcodeFormat format The barcode format to generate Int32 width The preferred width in pixels Int32 height The preferred height in pixels Returns Type Description BitMatrix The generated barcode as a Matrix of unsigned bytes (0 == black, 255 == white) encode(String, BarcodeFormat, Int32, Int32, IDictionary<EncodeHintType, Object>) Declaration public BitMatrix encode(String contents, BarcodeFormat format, int width, int height, IDictionary<EncodeHintType, object> hints) Parameters Type Name Description String contents The contents to encode in the barcode BarcodeFormat format The barcode format to generate Int32 width The preferred width in pixels Int32 height The preferred height in pixels IDictionary < EncodeHintType , Object > hints Additional parameters to supply to the encoder Returns Type Description BitMatrix The generated barcode as a Matrix of unsigned bytes (0 == black, 255 == white) Implements Writer"
  },
  "api/ZXing.OneD.UPCEANReader.html": {
    "href": "api/ZXing.OneD.UPCEANReader.html",
    "title": "Class UPCEANReader | Unity Algorand SDK",
    "keywords": "Class UPCEANReader Encapsulates functionality and implementation that is common to UPC and EAN families of one-dimensional barcodes. dswitkin@google.com (Daniel Switkin) Sean Owen alasdair@google.com (Alasdair Mackintosh) Inheritance Object OneDReader UPCEANReader EAN13Reader EAN8Reader UPCAReader UPCEReader Implements Reader Inherited Members OneDReader.INTEGER_MATH_SHIFT OneDReader.PATTERN_MATCH_RESULT_SCALE_FACTOR OneDReader.decode(BinaryBitmap) OneDReader.decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.reset() OneDReader.doDecode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.recordPattern(BitArray, Int32, Int32[]) OneDReader.recordPattern(BitArray, Int32, Int32[], Int32) OneDReader.recordPatternInReverse(BitArray, Int32, Int32[]) OneDReader.patternMatchVariance(Int32[], Int32[], Int32) Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public abstract class UPCEANReader : OneDReader, Reader Constructors UPCEANReader() Initializes a new instance of the UPCEANReader class. Declaration protected UPCEANReader() Methods checkChecksum(String) Declaration protected virtual bool checkChecksum(String s) Parameters Type Name Description String s string of digits to check Returns Type Description Boolean see ZXing.OneD.UPCEANReader.checkStandardUPCEANChecksum(String) decodeEnd(BitArray, Int32) Decodes the end. Declaration protected virtual int[] decodeEnd(BitArray row, int endStart) Parameters Type Name Description BitArray row The row. Int32 endStart The end start. Returns Type Description Int32 [] decodeMiddle(BitArray, Int32[], StringBuilder) Subclasses override this to decode the portion of a barcode between the start and end guard patterns. Declaration protected abstract int decodeMiddle(BitArray row, int[] startRange, StringBuilder resultString) Parameters Type Name Description BitArray row row of black/white values to search Int32 [] startRange start/end offset of start guard pattern StringBuilder resultString to append decoded chars to Returns Type Description Int32 horizontal offset of first pixel after the \"middle\" that was decoded or -1 if decoding could not complete successfully decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) Attempts to decode a one-dimensional barcode format given a single row of an image. Declaration public override Result decodeRow(int rowNumber, BitArray row, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description Int32 rowNumber row number from top of the row BitArray row the black/white pixel data of the row IDictionary < DecodeHintType , Object > hints decode hints Returns Type Description Result Result containing encoded string and start/end of barcode or null, if an error occurs or barcode cannot be found Overrides OneDReader.decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) decodeRow(Int32, BitArray, Int32[], IDictionary<DecodeHintType, Object>) Like , but allows caller to inform method about where the UPC/EAN start pattern is found. This allows this to be computed once and reused across many implementations. Declaration public virtual Result decodeRow(int rowNumber, BitArray row, int[] startGuardRange, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description Int32 rowNumber row index into the image BitArray row encoding of the row of the barcode image Int32 [] startGuardRange start/end column where the opening start pattern was found IDictionary < DecodeHintType , Object > hints optional hints that influence decoding Returns Type Description Result Result encapsulating the result of decoding a barcode in the row Implements Reader"
  },
  "api/ZXing.OneD.UPCEANWriter.html": {
    "href": "api/ZXing.OneD.UPCEANWriter.html",
    "title": "Class UPCEANWriter | Unity Algorand SDK",
    "keywords": "Class UPCEANWriter Encapsulates functionality and implementation that is common to UPC and EAN families of one-dimensional barcodes. aripollak@gmail.com (Ari Pollak) dsbnatut@gmail.com (Kazuki Nishiura) Inheritance Object OneDimensionalCodeWriter UPCEANWriter EAN13Writer EAN8Writer UPCEWriter Implements Writer Inherited Members OneDimensionalCodeWriter.SupportedWriteFormats OneDimensionalCodeWriter.encode(String) OneDimensionalCodeWriter.encode(String, IDictionary<EncodeHintType, Object>) OneDimensionalCodeWriter.encode(String, BarcodeFormat, Int32, Int32) OneDimensionalCodeWriter.encode(String, BarcodeFormat, Int32, Int32, IDictionary<EncodeHintType, Object>) OneDimensionalCodeWriter.checkNumeric(String) OneDimensionalCodeWriter.appendPattern(Boolean[], Int32, Int32[], Boolean) OneDimensionalCodeWriter.CalculateChecksumDigitModulo10(String) Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public abstract class UPCEANWriter : OneDimensionalCodeWriter, Writer Properties DefaultMargin Gets the default margin. Declaration public override int DefaultMargin { get; } Property Value Type Description Int32 Overrides OneDimensionalCodeWriter.DefaultMargin Implements Writer"
  },
  "api/ZXing.OneD.UPCEReader.html": {
    "href": "api/ZXing.OneD.UPCEReader.html",
    "title": "Class UPCEReader | Unity Algorand SDK",
    "keywords": "Class UPCEReader Implements decoding of the UPC-E format. This is a great reference for UPC-E information. Sean Owen Inheritance Object OneDReader UPCEANReader UPCEReader Implements Reader Inherited Members UPCEANReader.decodeRow(Int32, BitArray, IDictionary<DecodeHintType, Object>) UPCEANReader.decodeRow(Int32, BitArray, Int32[], IDictionary<DecodeHintType, Object>) OneDReader.INTEGER_MATH_SHIFT OneDReader.PATTERN_MATCH_RESULT_SCALE_FACTOR OneDReader.decode(BinaryBitmap) OneDReader.decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.reset() OneDReader.doDecode(BinaryBitmap, IDictionary<DecodeHintType, Object>) OneDReader.recordPattern(BitArray, Int32, Int32[]) OneDReader.recordPattern(BitArray, Int32, Int32[], Int32) OneDReader.recordPatternInReverse(BitArray, Int32, Int32[]) OneDReader.patternMatchVariance(Int32[], Int32[], Int32) Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public sealed class UPCEReader : UPCEANReader, Reader Constructors UPCEReader() Initializes a new instance of the UPCEReader class. Declaration public UPCEReader() Methods checkChecksum(String) see checkStandardUPCEANChecksum(String) Declaration protected override bool checkChecksum(String s) Parameters Type Name Description String s Returns Type Description Boolean Overrides UPCEANReader.checkChecksum(String) convertUPCEtoUPCA(String) Expands a UPC-E value back into its full, equivalent UPC-A code value. UPC-E code as string of digits equivalent UPC-A code as string of digits Declaration public static String convertUPCEtoUPCA(String upce) Parameters Type Name Description String upce Returns Type Description String decodeEnd(BitArray, Int32) Decodes the end. Declaration protected override int[] decodeEnd(BitArray row, int endStart) Parameters Type Name Description BitArray row The row. Int32 endStart The end start. Returns Type Description Int32 [] Overrides UPCEANReader.decodeEnd(BitArray, Int32) decodeMiddle(BitArray, Int32[], StringBuilder) Decodes the middle. Declaration protected override int decodeMiddle(BitArray row, int[] startRange, StringBuilder result) Parameters Type Name Description BitArray row The row. Int32 [] startRange The start range. StringBuilder result The result. Returns Type Description Int32 Overrides UPCEANReader.decodeMiddle(BitArray, Int32[], StringBuilder) Implements Reader"
  },
  "api/ZXing.OneD.UPCEWriter.html": {
    "href": "api/ZXing.OneD.UPCEWriter.html",
    "title": "Class UPCEWriter | Unity Algorand SDK",
    "keywords": "Class UPCEWriter This object renders an UPC-E code as a {@link BitMatrix}. @author 0979097955s@gmail.com (RX) Inheritance Object OneDimensionalCodeWriter UPCEANWriter UPCEWriter Implements Writer Inherited Members UPCEANWriter.DefaultMargin OneDimensionalCodeWriter.encode(String, IDictionary<EncodeHintType, Object>) OneDimensionalCodeWriter.encode(String, BarcodeFormat, Int32, Int32) OneDimensionalCodeWriter.encode(String, BarcodeFormat, Int32, Int32, IDictionary<EncodeHintType, Object>) OneDimensionalCodeWriter.checkNumeric(String) OneDimensionalCodeWriter.appendPattern(Boolean[], Int32, Int32[], Boolean) OneDimensionalCodeWriter.CalculateChecksumDigitModulo10(String) Namespace : ZXing.OneD Assembly : cs.temp.dll.dll Syntax public class UPCEWriter : UPCEANWriter, Writer Properties SupportedWriteFormats returns supported formats Declaration protected override IList<BarcodeFormat> SupportedWriteFormats { get; } Property Value Type Description IList < BarcodeFormat > Overrides OneDimensionalCodeWriter.SupportedWriteFormats Methods encode(String) content encoding method Declaration public override bool[] encode(String contents) Parameters Type Name Description String contents Returns Type Description Boolean [] Overrides OneDimensionalCodeWriter.encode(String) Implements Writer"
  },
  "api/ZXing.PDF417.html": {
    "href": "api/ZXing.PDF417.html",
    "title": "Namespace ZXing.PDF417 | Unity Algorand SDK",
    "keywords": "Namespace ZXing.PDF417 Classes PDF417EncodingOptions The class holds the available options for the PDF417Writer PDF417MacroMetadata PDF417 Macro meta data. PDF417Reader This implementation can detect and decode PDF417 codes in an image. SITA Lab (kevin.osullivan@sita.aero) Guenther Grau PDF417ResultMetadata PDF 417 result meta data. Guenther Grau PDF417Writer Jacob Haynes qwandor@google.com (Andrew Walbran)"
  },
  "api/ZXing.PDF417.Internal.BarcodeMetadata.html": {
    "href": "api/ZXing.PDF417.Internal.BarcodeMetadata.html",
    "title": "Class BarcodeMetadata | Unity Algorand SDK",
    "keywords": "Class BarcodeMetadata Metadata about a PDF417 Barcode Inheritance Object BarcodeMetadata Namespace : ZXing.PDF417.Internal Assembly : cs.temp.dll.dll Syntax public sealed class BarcodeMetadata Constructors BarcodeMetadata(Int32, Int32, Int32, Int32) initializing constructor Declaration public BarcodeMetadata(int columnCount, int rowCountUpperPart, int rowCountLowerPart, int errorCorrectionLevel) Parameters Type Name Description Int32 columnCount Int32 rowCountUpperPart Int32 rowCountLowerPart Int32 errorCorrectionLevel Properties ColumnCount column count Declaration public int ColumnCount { get; } Property Value Type Description Int32 ErrorCorrectionLevel error correction level Declaration public int ErrorCorrectionLevel { get; } Property Value Type Description Int32 RowCount row count Declaration public int RowCount { get; } Property Value Type Description Int32 RowCountLower row count lower Declaration public int RowCountLower { get; } Property Value Type Description Int32 RowCountUpper row count upper Declaration public int RowCountUpper { get; } Property Value Type Description Int32"
  },
  "api/ZXing.PDF417.Internal.BarcodeValue.html": {
    "href": "api/ZXing.PDF417.Internal.BarcodeValue.html",
    "title": "Class BarcodeValue | Unity Algorand SDK",
    "keywords": "Class BarcodeValue A Barcode Value for the PDF417 barcode. The scanner will iterate through the bitmatrix, and given the different methods or iterations will increment a given barcode value's confidence. When done, this will return the values of highest confidence. Inheritance Object BarcodeValue Namespace : ZXing.PDF417.Internal Assembly : cs.temp.dll.dll Syntax public sealed class BarcodeValue Methods getValue() Determines the maximum occurrence of a set value and returns all values which were set with this occurrence. Declaration public int[] getValue() Returns Type Description Int32 [] an array of int, containing the values with the highest occurrence, or null, if no value was set. setValue(Int32) Incremenets the Confidence for a given value. (Adds an occurance of a value) Declaration public void setValue(int value) Parameters Type Name Description Int32 value Value."
  },
  "api/ZXing.PDF417.Internal.BoundingBox.html": {
    "href": "api/ZXing.PDF417.Internal.BoundingBox.html",
    "title": "Class BoundingBox | Unity Algorand SDK",
    "keywords": "Class BoundingBox A Bounding Box helper class Inheritance Object BoundingBox Namespace : ZXing.PDF417.Internal Assembly : cs.temp.dll.dll Syntax public sealed class BoundingBox Properties BottomLeft bottom left corner of the box Declaration public ResultPoint BottomLeft { get; } Property Value Type Description ResultPoint BottomRight bottom right corner of the box Declaration public ResultPoint BottomRight { get; } Property Value Type Description ResultPoint MaxX max x Declaration public int MaxX { get; } Property Value Type Description Int32 MaxY max y Declaration public int MaxY { get; } Property Value Type Description Int32 MinX min x Declaration public int MinX { get; } Property Value Type Description Int32 MinY min y Declaration public int MinY { get; } Property Value Type Description Int32 TopLeft top left corner of the box Declaration public ResultPoint TopLeft { get; } Property Value Type Description ResultPoint TopRight top right corner of the box Declaration public ResultPoint TopRight { get; } Property Value Type Description ResultPoint Methods addMissingRows(Int32, Int32, Boolean) Adds the missing rows. Declaration public BoundingBox addMissingRows(int missingStartRows, int missingEndRows, bool isLeft) Parameters Type Name Description Int32 missingStartRows Missing start rows. Int32 missingEndRows Missing end rows. Boolean isLeft If set to true is left. Returns Type Description BoundingBox The missing rows. Create(BitMatrix, ResultPoint, ResultPoint, ResultPoint, ResultPoint) Initializes a new instance of the BoundingBox class. returns null if the corner points don't match up correctly Declaration public static BoundingBox Create(BitMatrix image, ResultPoint topLeft, ResultPoint bottomLeft, ResultPoint topRight, ResultPoint bottomRight) Parameters Type Name Description BitMatrix image The image. ResultPoint topLeft The top left. ResultPoint bottomLeft The bottom left. ResultPoint topRight The top right. ResultPoint bottomRight The bottom right. Returns Type Description BoundingBox Create(BoundingBox) Creates the specified box. Declaration public static BoundingBox Create(BoundingBox box) Parameters Type Name Description BoundingBox box The box. Returns Type Description BoundingBox"
  },
  "api/ZXing.PDF417.Internal.Codeword.html": {
    "href": "api/ZXing.PDF417.Internal.Codeword.html",
    "title": "Class Codeword | Unity Algorand SDK",
    "keywords": "Class Codeword A Codeword in the PDF417 barcode Inheritance Object Codeword Namespace : ZXing.PDF417.Internal Assembly : cs.temp.dll.dll Syntax public sealed class Codeword Constructors Codeword(Int32, Int32, Int32, Int32) Initializes a new instance of the Codeword class. Declaration public Codeword(int startX, int endX, int bucket, int value) Parameters Type Name Description Int32 startX Start x. Int32 endX End x. Int32 bucket Bucket. Int32 value Value. Properties Bucket bucket Declaration public int Bucket { get; } Property Value Type Description Int32 EndX end of x coordinates Declaration public int EndX { get; } Property Value Type Description Int32 HasValidRowNumber Gets a value indicating whether this instance has valid row number. Declaration public bool HasValidRowNumber { get; } Property Value Type Description Boolean true if this instance has valid row number; otherwise, false . RowNumber row number Declaration public int RowNumber { get; set; } Property Value Type Description Int32 StartX start of x coordinates Declaration public int StartX { get; } Property Value Type Description Int32 Value value Declaration public int Value { get; } Property Value Type Description Int32 Width Gets the width. Declaration public int Width { get; } Property Value Type Description Int32 The width. Methods IsValidRowNumber(Int32) Determines whether this instance is valid row number the specified rowNumber. Declaration public bool IsValidRowNumber(int rowNumber) Parameters Type Name Description Int32 rowNumber Row number. Returns Type Description Boolean true if this instance is valid row number the specified rowNumber; otherwise, false . setRowNumberAsRowIndicatorColumn() Sets the row number as the row's indicator column. Declaration public void setRowNumberAsRowIndicatorColumn() ToString() Returns a String that represents the current Codeword . Declaration public override string ToString() Returns Type Description String A String that represents the current Codeword . Overrides Object.ToString()"
  },
  "api/ZXing.PDF417.Internal.Compaction.html": {
    "href": "api/ZXing.PDF417.Internal.Compaction.html",
    "title": "Enum Compaction | Unity Algorand SDK",
    "keywords": "Enum Compaction Represents possible PDF417 barcode compaction types. Namespace : ZXing.PDF417.Internal Assembly : cs.temp.dll.dll Syntax public enum Compaction Fields Name Description AUTO BYTE NUMERIC TEXT"
  },
  "api/ZXing.PDF417.Internal.DetectionResult.html": {
    "href": "api/ZXing.PDF417.Internal.DetectionResult.html",
    "title": "Class DetectionResult | Unity Algorand SDK",
    "keywords": "Class DetectionResult Inheritance Object DetectionResult Namespace : ZXing.PDF417.Internal Assembly : cs.temp.dll.dll Syntax public class DetectionResult Constructors DetectionResult(BarcodeMetadata, BoundingBox) initializing constructor Declaration public DetectionResult(BarcodeMetadata metadata, BoundingBox box) Parameters Type Name Description BarcodeMetadata metadata BoundingBox box Properties Box bounding box of the detected result Declaration public BoundingBox Box { get; } Property Value Type Description BoundingBox ColumnCount column count Declaration public int ColumnCount { get; } Property Value Type Description Int32 DetectionResultColumns result columns Declaration public DetectionResultColumn[] DetectionResultColumns { get; set; } Property Value Type Description DetectionResultColumn [] ErrorCorrectionLevel error correction level Declaration public int ErrorCorrectionLevel { get; } Property Value Type Description Int32 Metadata metadata which are found Declaration public BarcodeMetadata Metadata { get; } Property Value Type Description BarcodeMetadata RowCount row count Declaration public int RowCount { get; } Property Value Type Description Int32 Methods getDetectionResultColumns() Returns the DetectionResult Columns. This does a fair bit of calculation, so call it sparingly. Declaration public DetectionResultColumn[] getDetectionResultColumns() Returns Type Description DetectionResultColumn [] The detection result columns. ToString() Returns a String that represents the current DetectionResult . Declaration public override string ToString() Returns Type Description String A String that represents the current DetectionResult . Overrides Object.ToString()"
  },
  "api/ZXing.PDF417.Internal.DetectionResultColumn.html": {
    "href": "api/ZXing.PDF417.Internal.DetectionResultColumn.html",
    "title": "Class DetectionResultColumn | Unity Algorand SDK",
    "keywords": "Class DetectionResultColumn Represents a Column in the Detection Result Inheritance Object DetectionResultColumn DetectionResultRowIndicatorColumn Namespace : ZXing.PDF417.Internal Assembly : cs.temp.dll.dll Syntax public class DetectionResultColumn Constructors DetectionResultColumn(BoundingBox) Initializes a new instance of the DetectionResultColumn class. Declaration public DetectionResultColumn(BoundingBox box) Parameters Type Name Description BoundingBox box The Bounding Box around the column (in the BitMatrix) Properties Box The Bounding Box around the column (in the BitMatrix) Declaration public BoundingBox Box { get; } Property Value Type Description BoundingBox The box. Codewords The Codewords the Box encodes for, offset by the Box minY. Remember to Access this ONLY through GetCodeword(imageRow) if you're accessing it in that manner. Declaration public Codeword[] Codewords { get; set; } Property Value Type Description Codeword [] The codewords. Methods getCodeword(Int32) Gets the codeword for a given row Declaration public Codeword getCodeword(int imageRow) Parameters Type Name Description Int32 imageRow Image row. Returns Type Description Codeword The codeword. getCodewordNearby(Int32) Gets the codeword closest to the specified row in the image Declaration public Codeword getCodewordNearby(int imageRow) Parameters Type Name Description Int32 imageRow Image row. Returns Type Description Codeword IndexForRow(Int32) Converts the Image's Row to the index in the Codewords array Declaration public int IndexForRow(int imageRow) Parameters Type Name Description Int32 imageRow Image row. Returns Type Description Int32 The Codeword Index. RowForIndex(Int32) Converts the Codeword array index into a Row in the Image (BitMatrix) Declaration public int RowForIndex(int codewordIndex) Parameters Type Name Description Int32 codewordIndex Codeword index. Returns Type Description Int32 The Image Row. setCodeword(Int32, Codeword) Sets the codeword for an image row Declaration public void setCodeword(int imageRow, Codeword codeword) Parameters Type Name Description Int32 imageRow Image row. Codeword codeword Codeword. ToString() Returns a String that represents the current DetectionResultColumn . Declaration public override string ToString() Returns Type Description String A String that represents the current DetectionResultColumn . Overrides Object.ToString()"
  },
  "api/ZXing.PDF417.Internal.DetectionResultRowIndicatorColumn.html": {
    "href": "api/ZXing.PDF417.Internal.DetectionResultRowIndicatorColumn.html",
    "title": "Class DetectionResultRowIndicatorColumn | Unity Algorand SDK",
    "keywords": "Class DetectionResultRowIndicatorColumn Represents a Column in the Detection Result Inheritance Object DetectionResultColumn DetectionResultRowIndicatorColumn Inherited Members DetectionResultColumn.Box DetectionResultColumn.Codewords DetectionResultColumn.IndexForRow(Int32) DetectionResultColumn.RowForIndex(Int32) DetectionResultColumn.getCodeword(Int32) DetectionResultColumn.getCodewordNearby(Int32) DetectionResultColumn.setCodeword(Int32, Codeword) Namespace : ZXing.PDF417.Internal Assembly : cs.temp.dll.dll Syntax public sealed class DetectionResultRowIndicatorColumn : DetectionResultColumn Constructors DetectionResultRowIndicatorColumn(BoundingBox, Boolean) Initializes a new instance of the DetectionResultRowIndicatorColumn class. Declaration public DetectionResultRowIndicatorColumn(BoundingBox box, bool isLeft) Parameters Type Name Description BoundingBox box Box. Boolean isLeft If set to true is left. Properties IsLeft Gets or sets a value indicating whether this instance is the left indicator Declaration public bool IsLeft { get; set; } Property Value Type Description Boolean true if this instance is left; otherwise, false . Methods adjustCompleteIndicatorColumnRowNumbers(BarcodeMetadata) TODO implement properly TODO maybe we should add missing codewords to store the correct row number to make finding row numbers for other columns easier use row height count to make detection of invalid row numbers more reliable Declaration public void adjustCompleteIndicatorColumnRowNumbers(BarcodeMetadata metadata) Parameters Type Name Description BarcodeMetadata metadata Metadata. getBarcodeMetadata() Gets the barcode metadata. Declaration public BarcodeMetadata getBarcodeMetadata() Returns Type Description BarcodeMetadata The barcode metadata. getRowHeights() Gets the row heights. Declaration public int[] getRowHeights() Returns Type Description Int32 [] The row heights. ToString() Returns a String that represents the current DetectionResultRowIndicatorColumn . Declaration public override string ToString() Returns Type Description String A String that represents the current DetectionResultRowIndicatorColumn . Overrides DetectionResultColumn.ToString()"
  },
  "api/ZXing.PDF417.Internal.Detector.html": {
    "href": "api/ZXing.PDF417.Internal.Detector.html",
    "title": "Class Detector | Unity Algorand SDK",
    "keywords": "Class Detector Encapsulates logic that can detect a PDF417 Code in an image, even if the PDF417 Code is rotated or skewed, or partially obscured. SITA Lab (kevin.osullivan@sita.aero) dswitkin@google.com (Daniel Switkin) Guenther Grau Inheritance Object Detector Namespace : ZXing.PDF417.Internal Assembly : cs.temp.dll.dll Syntax public sealed class Detector Methods detect(BinaryBitmap, IDictionary<DecodeHintType, Object>, Boolean) Detects a PDF417 Code in an image. Checks 0, 90, 180, and 270 degree rotations. Declaration public static PDF417DetectorResult detect(BinaryBitmap image, IDictionary<DecodeHintType, object> hints, bool multiple) Parameters Type Name Description BinaryBitmap image barcode image to decode IDictionary < DecodeHintType , Object > hints optional hints to detector Boolean multiple if true, then the image is searched for multiple codes. If false, then at most one code will be found and returned Returns Type Description PDF417DetectorResult PDF417DetectorResult encapsulating results of detecting a PDF417 code"
  },
  "api/ZXing.PDF417.Internal.Dimensions.html": {
    "href": "api/ZXing.PDF417.Internal.Dimensions.html",
    "title": "Class Dimensions | Unity Algorand SDK",
    "keywords": "Class Dimensions Data object to specify the minimum and maximum number of rows and columns for a PDF417 barcode. @author qwandor@google.com (Andrew Walbran) Inheritance Object Dimensions Namespace : ZXing.PDF417.Internal Assembly : cs.temp.dll.dll Syntax public sealed class Dimensions Constructors Dimensions(Int32, Int32, Int32, Int32) Initializes a new instance of the Dimensions class. Declaration public Dimensions(int minCols, int maxCols, int minRows, int maxRows) Parameters Type Name Description Int32 minCols The min cols. Int32 maxCols The max cols. Int32 minRows The min rows. Int32 maxRows The max rows. Properties MaxCols Gets the max cols. Declaration public int MaxCols { get; } Property Value Type Description Int32 MaxRows Gets the max rows. Declaration public int MaxRows { get; } Property Value Type Description Int32 MinCols Gets the min cols. Declaration public int MinCols { get; } Property Value Type Description Int32 MinRows Gets the min rows. Declaration public int MinRows { get; } Property Value Type Description Int32"
  },
  "api/ZXing.PDF417.Internal.EC.ErrorCorrection.html": {
    "href": "api/ZXing.PDF417.Internal.EC.ErrorCorrection.html",
    "title": "Class ErrorCorrection | Unity Algorand SDK",
    "keywords": "Class ErrorCorrection PDF417 error correction implementation. This example is quite useful in understanding the algorithm. Sean Owen ReedSolomonDecoder Inheritance Object ErrorCorrection Namespace : ZXing.PDF417.Internal.EC Assembly : cs.temp.dll.dll Syntax public sealed class ErrorCorrection Constructors ErrorCorrection() Initializes a new instance of the ErrorCorrection class. Declaration public ErrorCorrection() Methods decode(Int32[], Int32, Int32[], out Int32) Decodes the specified received. Declaration public bool decode(int[] received, int numECCodewords, int[] erasures, out int errorLocationsCount) Parameters Type Name Description Int32 [] received received codewords Int32 numECCodewords number of those codewords used for EC Int32 [] erasures location of erasures Int32 errorLocationsCount The error locations count. Returns Type Description Boolean"
  },
  "api/ZXing.PDF417.Internal.EC.html": {
    "href": "api/ZXing.PDF417.Internal.EC.html",
    "title": "Namespace ZXing.PDF417.Internal.EC | Unity Algorand SDK",
    "keywords": "Namespace ZXing.PDF417.Internal.EC Classes ErrorCorrection PDF417 error correction implementation. This example is quite useful in understanding the algorithm. Sean Owen ReedSolomonDecoder"
  },
  "api/ZXing.PDF417.Internal.html": {
    "href": "api/ZXing.PDF417.Internal.html",
    "title": "Namespace ZXing.PDF417.Internal | Unity Algorand SDK",
    "keywords": "Namespace ZXing.PDF417.Internal Classes BarcodeMetadata Metadata about a PDF417 Barcode BarcodeValue A Barcode Value for the PDF417 barcode. The scanner will iterate through the bitmatrix, and given the different methods or iterations will increment a given barcode value's confidence. When done, this will return the values of highest confidence. BoundingBox A Bounding Box helper class Codeword A Codeword in the PDF417 barcode DetectionResult DetectionResultColumn Represents a Column in the Detection Result DetectionResultRowIndicatorColumn Represents a Column in the Detection Result Detector Encapsulates logic that can detect a PDF417 Code in an image, even if the PDF417 Code is rotated or skewed, or partially obscured. SITA Lab (kevin.osullivan@sita.aero) dswitkin@google.com (Daniel Switkin) Guenther Grau Dimensions Data object to specify the minimum and maximum number of rows and columns for a PDF417 barcode. @author qwandor@google.com (Andrew Walbran) PDF417CodewordDecoder PDF417DetectorResult PDF 417 Detector Result class. Skipped private backing stores. Guenther Grau PDF417ScanningDecoder Enums Compaction Represents possible PDF417 barcode compaction types. PDF417AspectRatio defines the aspect ratio of the image PDF417ErrorCorrectionLevel defines the level of the error correction / count of error correction codewords"
  },
  "api/ZXing.PDF417.Internal.PDF417AspectRatio.html": {
    "href": "api/ZXing.PDF417.Internal.PDF417AspectRatio.html",
    "title": "Enum PDF417AspectRatio | Unity Algorand SDK",
    "keywords": "Enum PDF417AspectRatio defines the aspect ratio of the image Namespace : ZXing.PDF417.Internal Assembly : cs.temp.dll.dll Syntax public enum PDF417AspectRatio Fields Name Description A1 ratio 1 A2 ratio 2 A3 ratio 3 A4 ratio 4 AUTO automatic selection"
  },
  "api/ZXing.PDF417.Internal.PDF417CodewordDecoder.html": {
    "href": "api/ZXing.PDF417.Internal.PDF417CodewordDecoder.html",
    "title": "Class PDF417CodewordDecoder | Unity Algorand SDK",
    "keywords": "Class PDF417CodewordDecoder Inheritance Object PDF417CodewordDecoder Namespace : ZXing.PDF417.Internal Assembly : cs.temp.dll.dll Syntax public static class PDF417CodewordDecoder Methods getDecodedValue(Int32[]) Gets the decoded value. Declaration public static int getDecodedValue(int[] moduleBitCount) Parameters Type Name Description Int32 [] moduleBitCount Module bit count. Returns Type Description Int32 The decoded value."
  },
  "api/ZXing.PDF417.Internal.PDF417DetectorResult.html": {
    "href": "api/ZXing.PDF417.Internal.PDF417DetectorResult.html",
    "title": "Class PDF417DetectorResult | Unity Algorand SDK",
    "keywords": "Class PDF417DetectorResult PDF 417 Detector Result class. Skipped private backing stores. Guenther Grau Inheritance Object PDF417DetectorResult Namespace : ZXing.PDF417.Internal Assembly : cs.temp.dll.dll Syntax public sealed class PDF417DetectorResult Constructors PDF417DetectorResult(BitMatrix, List<ResultPoint[]>) Initializes a new instance of the PDF417DetectorResult class. Declaration public PDF417DetectorResult(BitMatrix bits, List<ResultPoint[]> points) Parameters Type Name Description BitMatrix bits Bits. List < ResultPoint []> points Points. Properties Bits bit matrix of the detected result Declaration public BitMatrix Bits { get; } Property Value Type Description BitMatrix Points points of the detected result in the image Declaration public List<ResultPoint[]> Points { get; } Property Value Type Description List < ResultPoint []>"
  },
  "api/ZXing.PDF417.Internal.PDF417ErrorCorrectionLevel.html": {
    "href": "api/ZXing.PDF417.Internal.PDF417ErrorCorrectionLevel.html",
    "title": "Enum PDF417ErrorCorrectionLevel | Unity Algorand SDK",
    "keywords": "Enum PDF417ErrorCorrectionLevel defines the level of the error correction / count of error correction codewords Namespace : ZXing.PDF417.Internal Assembly : cs.temp.dll.dll Syntax public enum PDF417ErrorCorrectionLevel Fields Name Description AUTO automatic selection L0 level 0 L1 level 1 L2 level 2 L3 level 3 L4 level 4 L5 level 5 L6 level 6 L7 level 7 L8 level 8"
  },
  "api/ZXing.PDF417.Internal.PDF417ScanningDecoder.html": {
    "href": "api/ZXing.PDF417.Internal.PDF417ScanningDecoder.html",
    "title": "Class PDF417ScanningDecoder | Unity Algorand SDK",
    "keywords": "Class PDF417ScanningDecoder Inheritance Object PDF417ScanningDecoder Namespace : ZXing.PDF417.Internal Assembly : cs.temp.dll.dll Syntax public static class PDF417ScanningDecoder Methods decode(BitMatrix, ResultPoint, ResultPoint, ResultPoint, ResultPoint, Int32, Int32) Decode the specified image, imageTopLeft, imageBottomLeft, imageTopRight, imageBottomRight, minCodewordWidth and maxCodewordWidth. TODO: don't pass in minCodewordWidth and maxCodewordWidth, pass in barcode columns for start and stop pattern columns. That way width can be deducted from the pattern column. This approach also allows to detect more details about the barcode, e.g. if a bar type (white or black) is wider than it should be. This can happen if the scanner used a bad blackpoint. Declaration public static DecoderResult decode(BitMatrix image, ResultPoint imageTopLeft, ResultPoint imageBottomLeft, ResultPoint imageTopRight, ResultPoint imageBottomRight, int minCodewordWidth, int maxCodewordWidth) Parameters Type Name Description BitMatrix image Image. ResultPoint imageTopLeft Image top left. ResultPoint imageBottomLeft Image bottom left. ResultPoint imageTopRight Image top right. ResultPoint imageBottomRight Image bottom right. Int32 minCodewordWidth Minimum codeword width. Int32 maxCodewordWidth Max codeword width. Returns Type Description DecoderResult ToString(BarcodeValue[][]) Returns a String that represents the BarcodeValue jagged array. Declaration public static String ToString(BarcodeValue[][] barcodeMatrix) Parameters Type Name Description BarcodeValue [][] barcodeMatrix Barcode matrix as a jagged array. Returns Type Description String A String that represents the BarcodeValue jagged array."
  },
  "api/ZXing.PDF417.PDF417EncodingOptions.html": {
    "href": "api/ZXing.PDF417.PDF417EncodingOptions.html",
    "title": "Class PDF417EncodingOptions | Unity Algorand SDK",
    "keywords": "Class PDF417EncodingOptions The class holds the available options for the PDF417Writer Inheritance Object PDF417EncodingOptions Namespace : ZXing.PDF417 Assembly : cs.temp.dll.dll Syntax public class PDF417EncodingOptions : EncodingOptions Properties AspectRatio Specifies the aspect ratio of the smallest codeword. (Width of narrowest bar / Row Height) Declaration public PDF417AspectRatio AspectRatio { get; set; } Property Value Type Description PDF417AspectRatio CharacterSet Specifies what character encoding to use where applicable (type {@link String}) Declaration public string CharacterSet { get; set; } Property Value Type Description String Compact Specifies whether to use compact mode for PDF417 (type Boolean ). Declaration public bool Compact { get; set; } Property Value Type Description Boolean Compaction Specifies what compaction mode to use for PDF417 (type Compaction ). Declaration public Compaction Compaction { get; set; } Property Value Type Description Compaction Dimensions Specifies the minimum and maximum number of rows and columns for PDF417 (type Dimensions ). Declaration public Dimensions Dimensions { get; set; } Property Value Type Description Dimensions DisableECI Explicitly disables ECI segment when generating PDF417 Code That is against the specification but some readers have problems if the charset is switched from CP437 (default) to UTF-8 with the necessary ECI segment. If you set the property to true you can use different encodings and the ECI segment is omitted. Declaration public bool DisableECI { get; set; } Property Value Type Description Boolean ErrorCorrection Specifies what degree of error correction to use Declaration public PDF417ErrorCorrectionLevel ErrorCorrection { get; set; } Property Value Type Description PDF417ErrorCorrectionLevel ImageAspectRatio Specifies the desired output image aspect ratio (Width / Height). The actual aspect ratio is calculated based on the necessary number of codewords. Declaration public float ImageAspectRatio { get; set; } Property Value Type Description Single"
  },
  "api/ZXing.PDF417.PDF417MacroMetadata.html": {
    "href": "api/ZXing.PDF417.PDF417MacroMetadata.html",
    "title": "Class PDF417MacroMetadata | Unity Algorand SDK",
    "keywords": "Class PDF417MacroMetadata PDF417 Macro meta data. Inheritance Object PDF417MacroMetadata Namespace : ZXing.PDF417 Assembly : cs.temp.dll.dll Syntax public sealed class PDF417MacroMetadata Properties Addressee address Declaration public string Addressee { get; set; } Property Value Type Description String Checksum 16-bit CRC checksum using CCITT-16 returns crc checksum, -1 if not set Declaration public int? Checksum { get; set; } Property Value Type Description Nullable < Int32 > FileId Is the same for each related PDF417 symbol Declaration public string FileId { get; set; } Property Value Type Description String FileName Filename of the encoded file Declaration public string FileName { get; set; } Property Value Type Description String FileSize filesize in bytes of the encoded file returns filesize in bytes, -1 if not set Declaration public long? FileSize { get; set; } Property Value Type Description Nullable < Int64 > IsLastSegment true if it is the last segment Declaration public bool IsLastSegment { get; set; } Property Value Type Description Boolean SegmentCount count of segments, -1 if not set Declaration public int SegmentCount { get; set; } Property Value Type Description Int32 SegmentIndex The Segment ID represents the segment of the whole file distributed over different symbols. Declaration public int SegmentIndex { get; set; } Property Value Type Description Int32 Sender sender Declaration public string Sender { get; set; } Property Value Type Description String Timestamp unix epock timestamp, elapsed seconds since 1970-01-01 returns elapsed seconds, -1 if not set Declaration public long? Timestamp { get; set; } Property Value Type Description Nullable < Int64 >"
  },
  "api/ZXing.PDF417.PDF417Reader.html": {
    "href": "api/ZXing.PDF417.PDF417Reader.html",
    "title": "Class PDF417Reader | Unity Algorand SDK",
    "keywords": "Class PDF417Reader This implementation can detect and decode PDF417 codes in an image. SITA Lab (kevin.osullivan@sita.aero) Guenther Grau Inheritance Object PDF417Reader Implements Reader MultipleBarcodeReader Namespace : ZXing.PDF417 Assembly : cs.temp.dll.dll Syntax public sealed class PDF417Reader : Reader Methods decode(BinaryBitmap) Locates and decodes a PDF417 code in an image. a String representing the content encoded by the PDF417 code FormatException Declaration public Result decode(BinaryBitmap image) Parameters Type Name Description BinaryBitmap image Returns Type Description Result decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) Locates and decodes a barcode in some format within an image. This method also accepts hints, each possibly associated to some data, which may help the implementation decode. Note this will return the FIRST barcode discovered if there are many. Declaration public Result decode(BinaryBitmap image, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description BinaryBitmap image image of barcode to decode IDictionary < DecodeHintType , Object > hints passed as a from DecodeHintType to arbitrary data. The meaning of the data depends upon the hint type. The implementation may or may not do anything with these hints. Returns Type Description Result String which the barcode encodes decodeMultiple(BinaryBitmap) Locates and decodes Multiple PDF417 codes in an image. an array of Strings representing the content encoded by the PDF417 codes Declaration public Result[] decodeMultiple(BinaryBitmap image) Parameters Type Name Description BinaryBitmap image Returns Type Description Result [] decodeMultiple(BinaryBitmap, IDictionary<DecodeHintType, Object>) Locates and decodes multiple barcodes in some format within an image. This method also accepts hints, each possibly associated to some data, which may help the implementation decode. Declaration public Result[] decodeMultiple(BinaryBitmap image, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description BinaryBitmap image image of barcode to decode IDictionary < DecodeHintType , Object > hints passed as a from DecodeHintType to arbitrary data. The meaning of the data depends upon the hint type. The implementation may or may not do anything with these hints. Returns Type Description Result [] String which the barcodes encode reset() Resets any internal state the implementation has after a decode, to prepare it for reuse. Declaration public void reset() Implements Reader MultipleBarcodeReader"
  },
  "api/ZXing.PDF417.PDF417ResultMetadata.html": {
    "href": "api/ZXing.PDF417.PDF417ResultMetadata.html",
    "title": "Class PDF417ResultMetadata | Unity Algorand SDK",
    "keywords": "Class PDF417ResultMetadata PDF 417 result meta data. Guenther Grau Inheritance Object PDF417ResultMetadata Namespace : ZXing.PDF417 Assembly : cs.temp.dll.dll Syntax public sealed class PDF417ResultMetadata Constructors PDF417ResultMetadata() default constructor Declaration public PDF417ResultMetadata() Properties Addressee address Declaration public string Addressee { get; set; } Property Value Type Description String Checksum 16-bit CRC checksum using CCITT-16 returns crc checksum, -1 if not set Declaration public int Checksum { get; set; } Property Value Type Description Int32 FileId Is the same for each related PDF417 symbol Declaration public string FileId { get; set; } Property Value Type Description String FileName Filename of the encoded file Declaration public string FileName { get; set; } Property Value Type Description String FileSize filesize in bytes of the encoded file returns filesize in bytes, -1 if not set Declaration public long FileSize { get; set; } Property Value Type Description Int64 IsLastSegment true if it is the last segment Declaration public bool IsLastSegment { get; set; } Property Value Type Description Boolean SegmentCount count of segments, -1 if not set Declaration public int SegmentCount { get; set; } Property Value Type Description Int32 SegmentIndex The Segment ID represents the segment of the whole file distributed over different symbols. Declaration public int SegmentIndex { get; set; } Property Value Type Description Int32 Sender sender Declaration public string Sender { get; set; } Property Value Type Description String Timestamp unix epock timestamp, elapsed seconds since 1970-01-01 returns elapsed seconds, -1 if not set Declaration public long Timestamp { get; set; } Property Value Type Description Int64 Methods ToString() string represenation of that instance Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/ZXing.PDF417.PDF417Writer.html": {
    "href": "api/ZXing.PDF417.PDF417Writer.html",
    "title": "Class PDF417Writer | Unity Algorand SDK",
    "keywords": "Class PDF417Writer Jacob Haynes qwandor@google.com (Andrew Walbran) Inheritance Object PDF417Writer Implements Writer Namespace : ZXing.PDF417 Assembly : cs.temp.dll.dll Syntax public sealed class PDF417Writer : Writer Methods encode(String, BarcodeFormat, Int32, Int32) Encode a barcode using the default settings. Declaration public BitMatrix encode(String contents, BarcodeFormat format, int width, int height) Parameters Type Name Description String contents The contents to encode in the barcode BarcodeFormat format The barcode format to generate Int32 width The preferred width in pixels Int32 height The preferred height in pixels Returns Type Description BitMatrix The generated barcode as a Matrix of unsigned bytes (0 == black, 255 == white) encode(String, BarcodeFormat, Int32, Int32, IDictionary<EncodeHintType, Object>) Declaration public BitMatrix encode(String contents, BarcodeFormat format, int width, int height, IDictionary<EncodeHintType, object> hints) Parameters Type Name Description String contents The contents to encode in the barcode BarcodeFormat format The barcode format to generate Int32 width The preferred width in pixels Int32 height The preferred height in pixels IDictionary < EncodeHintType , Object > hints Additional parameters to supply to the encoder Returns Type Description BitMatrix The generated barcode as a Matrix of unsigned bytes (0 == black, 255 == white) Implements Writer"
  },
  "api/ZXing.PlanarYUVLuminanceSource.html": {
    "href": "api/ZXing.PlanarYUVLuminanceSource.html",
    "title": "Class PlanarYUVLuminanceSource | Unity Algorand SDK",
    "keywords": "Class PlanarYUVLuminanceSource This object extends LuminanceSource around an array of YUV data returned from the camera driver, with the option to crop to a rectangle within the full data. This can be used to exclude superfluous pixels around the perimeter and speed up decoding. It works for any pixel format where the Y channel is planar and appears first, including YCbCr_420_SP and YCbCr_422_SP. @author dswitkin@google.com (Daniel Switkin) Inheritance Object LuminanceSource BaseLuminanceSource PlanarYUVLuminanceSource Inherited Members BaseLuminanceSource.RChannelWeight BaseLuminanceSource.GChannelWeight BaseLuminanceSource.BChannelWeight BaseLuminanceSource.ChannelWeight BaseLuminanceSource.luminances BaseLuminanceSource.rotateCounterClockwise() BaseLuminanceSource.rotateCounterClockwise45() BaseLuminanceSource.RotateSupported BaseLuminanceSource.InversionSupported BaseLuminanceSource.invert() LuminanceSource.Width LuminanceSource.Height LuminanceSource.ToString() Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public sealed class PlanarYUVLuminanceSource : BaseLuminanceSource Constructors PlanarYUVLuminanceSource(Byte[], Int32, Int32, Int32, Int32, Int32, Int32, Boolean) Initializes a new instance of the PlanarYUVLuminanceSource class. Declaration public PlanarYUVLuminanceSource(byte[] yuvData, int dataWidth, int dataHeight, int left, int top, int width, int height, bool reverseHoriz) Parameters Type Name Description Byte [] yuvData The yuv data. Int32 dataWidth Width of the data. Int32 dataHeight Height of the data. Int32 left The left. Int32 top The top. Int32 width The width. Int32 height The height. Boolean reverseHoriz if set to true [reverse horiz]. Properties CropSupported Declaration public override bool CropSupported { get; } Property Value Type Description Boolean Whether this subclass supports cropping. Overrides BaseLuminanceSource.CropSupported Matrix Declaration public override byte[] Matrix { get; } Property Value Type Description Byte [] Overrides BaseLuminanceSource.Matrix ThumbnailHeight height of image from {@link #renderThumbnail()} Declaration public int ThumbnailHeight { get; } Property Value Type Description Int32 ThumbnailWidth width of image from {@link #renderThumbnail()} Declaration public int ThumbnailWidth { get; } Property Value Type Description Int32 Methods CreateLuminanceSource(Byte[], Int32, Int32) creates a new instance Declaration protected override LuminanceSource CreateLuminanceSource(byte[] newLuminances, int width, int height) Parameters Type Name Description Byte [] newLuminances Int32 width Int32 height Returns Type Description LuminanceSource Overrides BaseLuminanceSource.CreateLuminanceSource(Byte[], Int32, Int32) crop(Int32, Int32, Int32, Int32) Returns a new object with cropped image data. Implementations may keep a reference to the original data rather than a copy. Only callable if CropSupported is true. Declaration public override LuminanceSource crop(int left, int top, int width, int height) Parameters Type Name Description Int32 left The left coordinate, 0 <= left < Width. Int32 top The top coordinate, 0 <= top <= Height. Int32 width The width of the rectangle to crop. Int32 height The height of the rectangle to crop. Returns Type Description LuminanceSource A cropped version of this object. Overrides BaseLuminanceSource.crop(Int32, Int32, Int32, Int32) getRow(Int32, Byte[]) Fetches one row of luminance data from the underlying platform's bitmap. Values range from 0 (black) to 255 (white). Because Java does not have an unsigned byte type, callers will have to bitwise and with 0xff for each value. It is preferable for implementations of this method to only fetch this row rather than the whole image, since no 2D Readers may be installed and getMatrix() may never be called. Declaration public override byte[] getRow(int y, byte[] row) Parameters Type Name Description Int32 y The row to fetch, 0 <= y < Height. Byte [] row An optional preallocated array. If null or too small, it will be ignored. Always use the returned object, and ignore the .length of the array. Returns Type Description Byte [] An array containing the luminance data. Overrides BaseLuminanceSource.getRow(Int32, Byte[]) renderThumbnail() Renders the cropped greyscale bitmap. Declaration public int[] renderThumbnail() Returns Type Description Int32 []"
  },
  "api/ZXing.QrCode.html": {
    "href": "api/ZXing.QrCode.html",
    "title": "Namespace ZXing.QrCode | Unity Algorand SDK",
    "keywords": "Namespace ZXing.QrCode Classes QrCodeEncodingOptions The class holds the available options for the QrCodeWriter QRCodeReader This implementation can detect and decode QR Codes in an image. Sean Owen QRCodeWriter This object renders a QR Code as a BitMatrix 2D array of greyscale values. dswitkin@google.com (Daniel Switkin)"
  },
  "api/ZXing.QrCode.Internal.AlignmentPattern.html": {
    "href": "api/ZXing.QrCode.Internal.AlignmentPattern.html",
    "title": "Class AlignmentPattern | Unity Algorand SDK",
    "keywords": "Class AlignmentPattern Encapsulates an alignment pattern, which are the smaller square patterns found in all but the simplest QR Codes. Inheritance Object ResultPoint AlignmentPattern Inherited Members ResultPoint.X ResultPoint.Y ResultPoint.Equals(Object) ResultPoint.GetHashCode() ResultPoint.ToString() ResultPoint.orderBestPatterns(ResultPoint[]) ResultPoint.distance(ResultPoint, ResultPoint) Namespace : ZXing.QrCode.Internal Assembly : cs.temp.dll.dll Syntax public sealed class AlignmentPattern : ResultPoint"
  },
  "api/ZXing.QrCode.Internal.ByteMatrix.html": {
    "href": "api/ZXing.QrCode.Internal.ByteMatrix.html",
    "title": "Class ByteMatrix | Unity Algorand SDK",
    "keywords": "Class ByteMatrix JAVAPORT: The original code was a 2D array of ints, but since it only ever gets assigned 0, 1 and 2 I'm going to use less memory and go with bytes. Inheritance Object ByteMatrix Namespace : ZXing.QrCode.Internal Assembly : cs.temp.dll.dll Syntax public sealed class ByteMatrix Constructors ByteMatrix(Int32, Int32) Initializes a new instance of the ByteMatrix class. Declaration public ByteMatrix(int width, int height) Parameters Type Name Description Int32 width The width. Int32 height The height. Properties Array an internal representation as bytes, in row-major order. array[y][x] represents point (x,y) Declaration public byte[][] Array { get; } Property Value Type Description Byte [][] Height Gets the height. Declaration public int Height { get; } Property Value Type Description Int32 Item[Int32, Int32] Gets or sets the Int32 with the specified x. Declaration public int this[int x, int y] { get; set; } Parameters Type Name Description Int32 x Int32 y Property Value Type Description Int32 Width Gets the width. Declaration public int Width { get; } Property Value Type Description Int32 Methods clear(Byte) Clears the specified value. Declaration public void clear(byte value) Parameters Type Name Description Byte value The value. set(Int32, Int32, Boolean) Sets the specified x. Declaration public void set(int x, int y, bool value) Parameters Type Name Description Int32 x The x. Int32 y The y. Boolean value if set to true [value]. set(Int32, Int32, Byte) Sets the specified x. Declaration public void set(int x, int y, byte value) Parameters Type Name Description Int32 x The x. Int32 y The y. Byte value The value. ToString() Returns a String that represents this instance. Declaration public override String ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString()"
  },
  "api/ZXing.QrCode.Internal.Decoder.html": {
    "href": "api/ZXing.QrCode.Internal.Decoder.html",
    "title": "Class Decoder | Unity Algorand SDK",
    "keywords": "Class Decoder The main class which implements QR Code decoding -- as opposed to locating and extracting the QR Code from an image. Inheritance Object Decoder Namespace : ZXing.QrCode.Internal Assembly : cs.temp.dll.dll Syntax public sealed class Decoder Constructors Decoder() Initializes a new instance of the Decoder class. Declaration public Decoder() Methods decode(BitMatrix, IDictionary<DecodeHintType, Object>) Decodes a QR Code represented as a {@link BitMatrix}. A 1 or \"true\" is taken to mean a black module. Declaration public DecoderResult decode(BitMatrix bits, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description BitMatrix bits booleans representing white/black QR Code modules IDictionary < DecodeHintType , Object > hints decoding hints that should be used to influence decoding Returns Type Description DecoderResult text and bytes encoded within the QR Code decode(Boolean[][], IDictionary<DecodeHintType, Object>) Convenience method that can decode a QR Code represented as a 2D array of booleans. \"true\" is taken to mean a black module. Declaration public DecoderResult decode(bool[][] image, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description Boolean [][] image booleans representing white/black QR Code modules IDictionary < DecodeHintType , Object > hints decoding hints that should be used to influence decoding Returns Type Description DecoderResult text and bytes encoded within the QR Code"
  },
  "api/ZXing.QrCode.Internal.Detector.html": {
    "href": "api/ZXing.QrCode.Internal.Detector.html",
    "title": "Class Detector | Unity Algorand SDK",
    "keywords": "Class Detector Encapsulates logic that can detect a QR Code in an image, even if the QR Code is rotated or skewed, or partially obscured. Inheritance Object Detector Namespace : ZXing.QrCode.Internal Assembly : cs.temp.dll.dll Syntax public class Detector Constructors Detector(BitMatrix) Initializes a new instance of the Detector class. Declaration public Detector(BitMatrix image) Parameters Type Name Description BitMatrix image The image. Properties Image Gets the image. Declaration protected virtual BitMatrix Image { get; } Property Value Type Description BitMatrix ResultPointCallback Gets the result point callback. Declaration protected virtual ResultPointCallback ResultPointCallback { get; } Property Value Type Description ResultPointCallback Methods calculateModuleSize(ResultPoint, ResultPoint, ResultPoint) Computes an average estimated module size based on estimated derived from the positions of the three finder patterns. Declaration protected virtual float calculateModuleSize(ResultPoint topLeft, ResultPoint topRight, ResultPoint bottomLeft) Parameters Type Name Description ResultPoint topLeft detected top-left finder pattern center ResultPoint topRight detected top-right finder pattern center ResultPoint bottomLeft detected bottom-left finder pattern center Returns Type Description Single estimated module size detect() Detects a QR Code in an image. Declaration public virtual DetectorResult detect() Returns Type Description DetectorResult encapsulating results of detecting a QR Code detect(IDictionary<DecodeHintType, Object>) Detects a QR Code in an image. Declaration public virtual DetectorResult detect(IDictionary<DecodeHintType, object> hints) Parameters Type Name Description IDictionary < DecodeHintType , Object > hints optional hints to detector Returns Type Description DetectorResult encapsulating results of detecting a QR Code findAlignmentInRegion(Single, Int32, Int32, Single) Attempts to locate an alignment pattern in a limited region of the image, which is guessed to contain it. This method uses {@link AlignmentPattern}. Declaration protected AlignmentPattern findAlignmentInRegion(float overallEstModuleSize, int estAlignmentX, int estAlignmentY, float allowanceFactor) Parameters Type Name Description Single overallEstModuleSize estimated module size so far Int32 estAlignmentX x coordinate of center of area probably containing alignment pattern Int32 estAlignmentY y coordinate of above Single allowanceFactor number of pixels in all directions to search from the center Returns Type Description AlignmentPattern AlignmentPattern if found, or null otherwise processFinderPatternInfo(FinderPatternInfo) Processes the finder pattern info. Declaration protected virtual DetectorResult processFinderPatternInfo(FinderPatternInfo info) Parameters Type Name Description FinderPatternInfo info The info. Returns Type Description DetectorResult"
  },
  "api/ZXing.QrCode.Internal.Encoder.html": {
    "href": "api/ZXing.QrCode.Internal.Encoder.html",
    "title": "Class Encoder | Unity Algorand SDK",
    "keywords": "Class Encoder Inheritance Object Encoder Namespace : ZXing.QrCode.Internal Assembly : cs.temp.dll.dll Syntax public static class Encoder Methods chooseMode(String) Chooses the mode. Declaration public static Mode chooseMode(String content) Parameters Type Name Description String content The content. Returns Type Description Mode encode(String, ErrorCorrectionLevel) Encode \"bytes\" with the error correction level \"ecLevel\". The encoding mode will be chosen internally by chooseMode(). On success, store the result in \"qrCode\". We recommend you to use QRCode.EC_LEVEL_L (the lowest level) for \"getECLevel\" since our primary use is to show QR code on desktop screens. We don't need very strong error correction for this purpose. Note that there is no way to encode bytes in MODE_KANJI. We might want to add EncodeWithMode() with which clients can specify the encoding mode. For now, we don't need the functionality. Declaration public static QRCode encode(String content, ErrorCorrectionLevel ecLevel) Parameters Type Name Description String content text to encode ErrorCorrectionLevel ecLevel error correction level to use Returns Type Description QRCode QRCode representing the encoded QR code encode(String, ErrorCorrectionLevel, IDictionary<EncodeHintType, Object>) Encodes the specified content. Declaration public static QRCode encode(String content, ErrorCorrectionLevel ecLevel, IDictionary<EncodeHintType, object> hints) Parameters Type Name Description String content The content. ErrorCorrectionLevel ecLevel The ec level. IDictionary < EncodeHintType , Object > hints The hints. Returns Type Description QRCode"
  },
  "api/ZXing.QrCode.Internal.ErrorCorrectionLevel.html": {
    "href": "api/ZXing.QrCode.Internal.ErrorCorrectionLevel.html",
    "title": "Class ErrorCorrectionLevel | Unity Algorand SDK",
    "keywords": "Class ErrorCorrectionLevel See ISO 18004:2006, 6.5.1. This enum encapsulates the four error correction levels defined by the QR code standard. Inheritance Object ErrorCorrectionLevel Namespace : ZXing.QrCode.Internal Assembly : cs.temp.dll.dll Syntax public sealed class ErrorCorrectionLevel Fields H H = ~30% correction Declaration public static readonly ErrorCorrectionLevel H Field Value Type Description ErrorCorrectionLevel L L = ~7% correction Declaration public static readonly ErrorCorrectionLevel L Field Value Type Description ErrorCorrectionLevel M M = ~15% correction Declaration public static readonly ErrorCorrectionLevel M Field Value Type Description ErrorCorrectionLevel Q Q = ~25% correction Declaration public static readonly ErrorCorrectionLevel Q Field Value Type Description ErrorCorrectionLevel Properties Bits Gets the bits. Declaration public int Bits { get; } Property Value Type Description Int32 Name Gets the name. Declaration public String Name { get; } Property Value Type Description String Methods forBits(Int32) Fors the bits. Declaration public static ErrorCorrectionLevel forBits(int bits) Parameters Type Name Description Int32 bits int containing the two bits encoding a QR Code's error correction level Returns Type Description ErrorCorrectionLevel ErrorCorrectionLevel representing the encoded error correction level ordinal() Ordinals this instance. Declaration public int ordinal() Returns Type Description Int32 ToString() Returns a String that represents this instance. Declaration public override String ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString()"
  },
  "api/ZXing.QrCode.Internal.FinderPattern.html": {
    "href": "api/ZXing.QrCode.Internal.FinderPattern.html",
    "title": "Class FinderPattern | Unity Algorand SDK",
    "keywords": "Class FinderPattern Encapsulates a finder pattern, which are the three square patterns found in the corners of QR Codes. It also encapsulates a count of similar finder patterns, as a convenience to the finder's bookkeeping. Inheritance Object ResultPoint FinderPattern Inherited Members ResultPoint.X ResultPoint.Y ResultPoint.Equals(Object) ResultPoint.GetHashCode() ResultPoint.ToString() ResultPoint.orderBestPatterns(ResultPoint[]) ResultPoint.distance(ResultPoint, ResultPoint) Namespace : ZXing.QrCode.Internal Assembly : cs.temp.dll.dll Syntax public sealed class FinderPattern : ResultPoint Properties EstimatedModuleSize Gets the size of the estimated module. Declaration public float EstimatedModuleSize { get; } Property Value Type Description Single The size of the estimated module."
  },
  "api/ZXing.QrCode.Internal.FinderPatternFinder.html": {
    "href": "api/ZXing.QrCode.Internal.FinderPatternFinder.html",
    "title": "Class FinderPatternFinder | Unity Algorand SDK",
    "keywords": "Class FinderPatternFinder This class attempts to find finder patterns in a QR Code. Finder patterns are the square markers at three corners of a QR Code. This class is thread-safe but not reentrant. Each thread must allocate its own object. Inheritance Object FinderPatternFinder Namespace : ZXing.QrCode.Internal Assembly : cs.temp.dll.dll Syntax public class FinderPatternFinder Constructors FinderPatternFinder(BitMatrix) Creates a finder that will search the image for three finder patterns. Declaration public FinderPatternFinder(BitMatrix image) Parameters Type Name Description BitMatrix image image to search FinderPatternFinder(BitMatrix, ResultPointCallback) Initializes a new instance of the FinderPatternFinder class. Declaration public FinderPatternFinder(BitMatrix image, ResultPointCallback resultPointCallback) Parameters Type Name Description BitMatrix image The image. ResultPointCallback resultPointCallback The result point callback. Fields MAX_MODULES support up to version 20 for mobile clients Declaration protected const int MAX_MODULES = 97 Field Value Type Description Int32 MIN_SKIP 1 pixel/module times 3 modules/center Declaration protected const int MIN_SKIP = 3 Field Value Type Description Int32 Properties Image Gets the image. Declaration protected virtual BitMatrix Image { get; } Property Value Type Description BitMatrix PossibleCenters Gets the possible centers. Declaration protected virtual List<FinderPattern> PossibleCenters { get; } Property Value Type Description List < FinderPattern > Methods clearCounts(Int32[]) sets everything to 0 Declaration protected void clearCounts(int[] counts) Parameters Type Name Description Int32 [] counts doClearCounts(Int32[]) sets everything to 0 Declaration protected static void doClearCounts(int[] counts) Parameters Type Name Description Int32 [] counts doShiftCounts2(Int32[]) shifts left by 2 index Declaration protected static void doShiftCounts2(int[] stateCount) Parameters Type Name Description Int32 [] stateCount foundPatternCross(Int32[]) Declaration protected static bool foundPatternCross(int[] stateCount) Parameters Type Name Description Int32 [] stateCount count of black/white/black/white/black pixels just read Returns Type Description Boolean true iff the proportions of the counts is close enough to the 1/1/3/1/1 ratios used by finder patterns to be considered a match foundPatternDiagonal(Int32[]) Declaration protected static bool foundPatternDiagonal(int[] stateCount) Parameters Type Name Description Int32 [] stateCount count of black/white/black/white/black pixels just read Returns Type Description Boolean true if the proportions of the counts is close enough to the 1/1/3/1/1 ratios by finder patterns to be considered a match handlePossibleCenter(Int32[], Int32, Int32) This is called when a horizontal scan finds a possible alignment pattern. It will cross check with a vertical scan, and if successful, will, ah, cross-cross-check with another horizontal scan. This is needed primarily to locate the real horizontal center of the pattern in cases of extreme skew. And then we cross-cross-cross check with another diagonal scan. If that succeeds the finder pattern location is added to a list that tracks the number of times each location has been nearly-matched as a finder pattern. Each additional find is more evidence that the location is in fact a finder pattern center Declaration protected bool handlePossibleCenter(int[] stateCount, int i, int j) Parameters Type Name Description Int32 [] stateCount reading state module counts from horizontal scan Int32 i row where finder pattern may be found Int32 j end of possible finder pattern in row Returns Type Description Boolean true if a finder pattern candidate was found this time handlePossibleCenter(Int32[], Int32, Int32, Boolean) @see #handlePossibleCenter(int[], int, int) Declaration protected bool handlePossibleCenter(int[] stateCount, int i, int j, bool pureBarcode) Parameters Type Name Description Int32 [] stateCount reading state module counts from horizontal scan Int32 i row where finder pattern may be found Int32 j end of possible finder pattern in row Boolean pureBarcode ignored Returns Type Description Boolean true if a finder pattern candidate was found this time shiftCounts2(Int32[]) shifts left by 2 index Declaration protected void shiftCounts2(int[] stateCount) Parameters Type Name Description Int32 [] stateCount"
  },
  "api/ZXing.QrCode.Internal.FinderPatternInfo.html": {
    "href": "api/ZXing.QrCode.Internal.FinderPatternInfo.html",
    "title": "Class FinderPatternInfo | Unity Algorand SDK",
    "keywords": "Class FinderPatternInfo Encapsulates information about finder patterns in an image, including the location of the three finder patterns, and their estimated module size. Inheritance Object FinderPatternInfo Namespace : ZXing.QrCode.Internal Assembly : cs.temp.dll.dll Syntax public sealed class FinderPatternInfo Constructors FinderPatternInfo(FinderPattern[]) Initializes a new instance of the FinderPatternInfo class. Declaration public FinderPatternInfo(FinderPattern[] patternCenters) Parameters Type Name Description FinderPattern [] patternCenters The pattern centers. Properties BottomLeft Gets the bottom left. Declaration public FinderPattern BottomLeft { get; } Property Value Type Description FinderPattern TopLeft Gets the top left. Declaration public FinderPattern TopLeft { get; } Property Value Type Description FinderPattern TopRight Gets the top right. Declaration public FinderPattern TopRight { get; } Property Value Type Description FinderPattern"
  },
  "api/ZXing.QrCode.Internal.html": {
    "href": "api/ZXing.QrCode.Internal.html",
    "title": "Namespace ZXing.QrCode.Internal | Unity Algorand SDK",
    "keywords": "Namespace ZXing.QrCode.Internal Classes AlignmentPattern Encapsulates an alignment pattern, which are the smaller square patterns found in all but the simplest QR Codes. ByteMatrix JAVAPORT: The original code was a 2D array of ints, but since it only ever gets assigned 0, 1 and 2 I'm going to use less memory and go with bytes. Decoder The main class which implements QR Code decoding -- as opposed to locating and extracting the QR Code from an image. Detector Encapsulates logic that can detect a QR Code in an image, even if the QR Code is rotated or skewed, or partially obscured. Encoder ErrorCorrectionLevel See ISO 18004:2006, 6.5.1. This enum encapsulates the four error correction levels defined by the QR code standard. FinderPattern Encapsulates a finder pattern, which are the three square patterns found in the corners of QR Codes. It also encapsulates a count of similar finder patterns, as a convenience to the finder's bookkeeping. FinderPatternFinder This class attempts to find finder patterns in a QR Code. Finder patterns are the square markers at three corners of a QR Code. This class is thread-safe but not reentrant. Each thread must allocate its own object. FinderPatternInfo Encapsulates information about finder patterns in an image, including the location of the three finder patterns, and their estimated module size. MaskUtil MatrixUtil Mode See ISO 18004:2006, 6.4.1, Tables 2 and 3. This enum encapsulates the various modes in which data can be encoded to bits in the QR code standard. QRCode QRCodeDecoderMetaData Meta-data container for QR Code decoding. Instances of this class may be used to convey information back to the decoding caller. Callers are expected to process this. Version See ISO 18004:2006 Annex D Version.ECB Encapsulates the parameters for one error-correction block in one symbol version. This includes the number of data codewords, and the number of times a block with these parameters is used consecutively in the QR code version's format. Version.ECBlocks Encapsulates a set of error-correction blocks in one symbol version. Most versions will use blocks of differing sizes within one version, so, this encapsulates the parameters for each set of blocks. It also holds the number of error-correction codewords per block since it will be the same across all blocks within one version. Enums Mode.Names enumeration for encoding modes"
  },
  "api/ZXing.QrCode.Internal.MaskUtil.html": {
    "href": "api/ZXing.QrCode.Internal.MaskUtil.html",
    "title": "Class MaskUtil | Unity Algorand SDK",
    "keywords": "Class MaskUtil Inheritance Object MaskUtil Namespace : ZXing.QrCode.Internal Assembly : cs.temp.dll.dll Syntax public static class MaskUtil Methods applyMaskPenaltyRule1(ByteMatrix) Apply mask penalty rule 1 and return the penalty. Find repetitive cells with the same color and give penalty to them. Example: 00000 or 11111. Declaration public static int applyMaskPenaltyRule1(ByteMatrix matrix) Parameters Type Name Description ByteMatrix matrix The matrix. Returns Type Description Int32 applyMaskPenaltyRule2(ByteMatrix) Apply mask penalty rule 2 and return the penalty. Find 2x2 blocks with the same color and give penalty to them. This is actually equivalent to the spec's rule, which is to find MxN blocks and give a penalty proportional to (M-1)x(N-1), because this is the number of 2x2 blocks inside such a block. Declaration public static int applyMaskPenaltyRule2(ByteMatrix matrix) Parameters Type Name Description ByteMatrix matrix The matrix. Returns Type Description Int32 applyMaskPenaltyRule3(ByteMatrix) Apply mask penalty rule 3 and return the penalty. Find consecutive cells of 00001011101 or 10111010000, and give penalty to them. If we find patterns like 000010111010000, we give penalties twice (i.e. 40 * 2). Declaration public static int applyMaskPenaltyRule3(ByteMatrix matrix) Parameters Type Name Description ByteMatrix matrix The matrix. Returns Type Description Int32 applyMaskPenaltyRule4(ByteMatrix) Apply mask penalty rule 4 and return the penalty. Calculate the ratio of dark cells and give penalty if the ratio is far from 50%. It gives 10 penalty for 5% distance. Declaration public static int applyMaskPenaltyRule4(ByteMatrix matrix) Parameters Type Name Description ByteMatrix matrix The matrix. Returns Type Description Int32 getDataMaskBit(Int32, Int32, Int32) Return the mask bit for \"getMaskPattern\" at \"x\" and \"y\". See 8.8 of JISX0510:2004 for mask pattern conditions. Declaration public static bool getDataMaskBit(int maskPattern, int x, int y) Parameters Type Name Description Int32 maskPattern The mask pattern. Int32 x The x. Int32 y The y. Returns Type Description Boolean"
  },
  "api/ZXing.QrCode.Internal.MatrixUtil.html": {
    "href": "api/ZXing.QrCode.Internal.MatrixUtil.html",
    "title": "Class MatrixUtil | Unity Algorand SDK",
    "keywords": "Class MatrixUtil Inheritance Object MatrixUtil Namespace : ZXing.QrCode.Internal Assembly : cs.temp.dll.dll Syntax public static class MatrixUtil Methods buildMatrix(BitArray, ErrorCorrectionLevel, Version, Int32, ByteMatrix) Build 2D matrix of QR Code from \"dataBits\" with \"ecLevel\", \"version\" and \"getMaskPattern\". On success, store the result in \"matrix\" and return true. Declaration public static void buildMatrix(BitArray dataBits, ErrorCorrectionLevel ecLevel, Version version, int maskPattern, ByteMatrix matrix) Parameters Type Name Description BitArray dataBits The data bits. ErrorCorrectionLevel ecLevel The ec level. Version version The version. Int32 maskPattern The mask pattern. ByteMatrix matrix The matrix. calculateBCHCode(Int32, Int32) Calculate BCH (Bose-Chaudhuri-Hocquenghem) code for \"value\" using polynomial \"poly\". The BCH code is used for encoding type information and version information. Example: Calculation of version information of 7. f(x) is created from 7. 7 = 000111 in 6 bits f(x) = x^2 + x^2 + x^1 g(x) is given by the standard (p. 67) g(x) = x^12 + x^11 + x^10 + x^9 + x^8 + x^5 + x^2 + 1 Multiply f(x) by x^(18 - 6) f'(x) = f(x) * x^(18 - 6) f'(x) = x^14 + x^13 + x^12 Calculate the remainder of f'(x) / g(x) x^2 __ g(x) )x^14 + x^13 + x^12 x^14 + x^13 + x^12 + x^11 + x^10 + x^7 + x^4 + x^2 -------------------------------------------------- x^11 + x^10 + x^7 + x^4 + x^2 The remainder is x^11 + x^10 + x^7 + x^4 + x^2 Encode it in binary: 110010010100 The return value is 0xc94 (1100 1001 0100) Since all coefficients in the polynomials are 1 or 0, we can do the calculation by bit operations. We don't care if coefficients are positive or negative. Declaration public static int calculateBCHCode(int value, int poly) Parameters Type Name Description Int32 value The value. Int32 poly The poly. Returns Type Description Int32 clearMatrix(ByteMatrix) Set all cells to 2. 2 means that the cell is empty (not set yet). JAVAPORT: We shouldn't need to do this at all. The code should be rewritten to begin encoding with the ByteMatrix initialized all to zero. Declaration public static void clearMatrix(ByteMatrix matrix) Parameters Type Name Description ByteMatrix matrix The matrix. embedBasicPatterns(Version, ByteMatrix) Embed basic patterns. On success, modify the matrix and return true. The basic patterns are: Position detection patterns Timing patterns Dark dot at the left bottom corner Position adjustment patterns, if need be Declaration public static void embedBasicPatterns(Version version, ByteMatrix matrix) Parameters Type Name Description Version version The version. ByteMatrix matrix The matrix. embedDataBits(BitArray, Int32, ByteMatrix) Embed \"dataBits\" using \"getMaskPattern\". On success, modify the matrix and return true. For debugging purposes, it skips masking process if \"getMaskPattern\" is -1. See 8.7 of JISX0510:2004 (p.38) for how to embed data bits. Declaration public static void embedDataBits(BitArray dataBits, int maskPattern, ByteMatrix matrix) Parameters Type Name Description BitArray dataBits The data bits. Int32 maskPattern The mask pattern. ByteMatrix matrix The matrix. embedTypeInfo(ErrorCorrectionLevel, Int32, ByteMatrix) Embed type information. On success, modify the matrix. Declaration public static void embedTypeInfo(ErrorCorrectionLevel ecLevel, int maskPattern, ByteMatrix matrix) Parameters Type Name Description ErrorCorrectionLevel ecLevel The ec level. Int32 maskPattern The mask pattern. ByteMatrix matrix The matrix. findMSBSet(Int32) Return the position of the most significant bit set (to one) in the \"value\". The most significant bit is position 32. If there is no bit set, return 0. Examples: findMSBSet(0) => 0 findMSBSet(1) => 1 findMSBSet(255) => 8 Declaration public static int findMSBSet(int value_Renamed) Parameters Type Name Description Int32 value_Renamed The value_ renamed. Returns Type Description Int32 makeTypeInfoBits(ErrorCorrectionLevel, Int32, BitArray) Make bit vector of type information. On success, store the result in \"bits\" and return true. Encode error correction level and mask pattern. See 8.9 of JISX0510:2004 (p.45) for details. Declaration public static void makeTypeInfoBits(ErrorCorrectionLevel ecLevel, int maskPattern, BitArray bits) Parameters Type Name Description ErrorCorrectionLevel ecLevel The ec level. Int32 maskPattern The mask pattern. BitArray bits The bits. makeVersionInfoBits(Version, BitArray) Make bit vector of version information. On success, store the result in \"bits\" and return true. See 8.10 of JISX0510:2004 (p.45) for details. Declaration public static void makeVersionInfoBits(Version version, BitArray bits) Parameters Type Name Description Version version The version. BitArray bits The bits. maybeEmbedVersionInfo(Version, ByteMatrix) Embed version information if need be. On success, modify the matrix and return true. See 8.10 of JISX0510:2004 (p.47) for how to embed version information. Declaration public static void maybeEmbedVersionInfo(Version version, ByteMatrix matrix) Parameters Type Name Description Version version The version. ByteMatrix matrix The matrix."
  },
  "api/ZXing.QrCode.Internal.Mode.html": {
    "href": "api/ZXing.QrCode.Internal.Mode.html",
    "title": "Class Mode | Unity Algorand SDK",
    "keywords": "Class Mode See ISO 18004:2006, 6.4.1, Tables 2 and 3. This enum encapsulates the various modes in which data can be encoded to bits in the QR code standard. Inheritance Object Mode Namespace : ZXing.QrCode.Internal Assembly : cs.temp.dll.dll Syntax public sealed class Mode Fields ALPHANUMERIC Declaration public static readonly Mode ALPHANUMERIC Field Value Type Description Mode BYTE Declaration public static readonly Mode BYTE Field Value Type Description Mode ECI character counts don't apply Declaration public static readonly Mode ECI Field Value Type Description Mode FNC1_FIRST_POSITION Declaration public static readonly Mode FNC1_FIRST_POSITION Field Value Type Description Mode FNC1_SECOND_POSITION Declaration public static readonly Mode FNC1_SECOND_POSITION Field Value Type Description Mode HANZI See GBT 18284-2000; \"Hanzi\" is a transliteration of this mode name. Declaration public static readonly Mode HANZI Field Value Type Description Mode KANJI Declaration public static readonly Mode KANJI Field Value Type Description Mode NUMERIC Declaration public static readonly Mode NUMERIC Field Value Type Description Mode STRUCTURED_APPEND Not supported Declaration public static readonly Mode STRUCTURED_APPEND Field Value Type Description Mode TERMINATOR Not really a mode... Declaration public static readonly Mode TERMINATOR Field Value Type Description Mode Properties Bits Gets the bits. Declaration public int Bits { get; } Property Value Type Description Int32 Name Gets the name. Declaration public Mode.Names Name { get; } Property Value Type Description Mode.Names Methods forBits(Int32) Fors the bits. Declaration public static Mode forBits(int bits) Parameters Type Name Description Int32 bits four bits encoding a QR Code data mode Returns Type Description Mode Mode encoded by these bits getCharacterCountBits(Version) Declaration public int getCharacterCountBits(Version version) Parameters Type Name Description Version version version in question Returns Type Description Int32 number of bits used, in this QR Code symbol {@link Version}, to encode the count of characters that will follow encoded in this {@link Mode} ToString() Returns a String that represents this instance. Declaration public override String ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString()"
  },
  "api/ZXing.QrCode.Internal.Mode.Names.html": {
    "href": "api/ZXing.QrCode.Internal.Mode.Names.html",
    "title": "Enum Mode.Names | Unity Algorand SDK",
    "keywords": "Enum Mode.Names enumeration for encoding modes Namespace : ZXing.QrCode.Internal Assembly : cs.temp.dll.dll Syntax public enum Names Fields Name Description ALPHANUMERIC alpha-numeric encoding BYTE byte mode encoding ECI ECI segment FNC1_FIRST_POSITION FNC1 char, first position FNC1_SECOND_POSITION FNC1 char, second position HANZI Hanzi mode KANJI Kanji mode NUMERIC numeric encoding STRUCTURED_APPEND structured append TERMINATOR"
  },
  "api/ZXing.QrCode.Internal.QRCode.html": {
    "href": "api/ZXing.QrCode.Internal.QRCode.html",
    "title": "Class QRCode | Unity Algorand SDK",
    "keywords": "Class QRCode Inheritance Object QRCode Namespace : ZXing.QrCode.Internal Assembly : cs.temp.dll.dll Syntax public sealed class QRCode Constructors QRCode() Initializes a new instance of the QRCode class. Declaration public QRCode() Fields NUM_MASK_PATTERNS Declaration public static int NUM_MASK_PATTERNS Field Value Type Description Int32 Properties ECLevel Gets or sets the EC level. Declaration public ErrorCorrectionLevel ECLevel { get; set; } Property Value Type Description ErrorCorrectionLevel The EC level. MaskPattern Gets or sets the mask pattern. Declaration public int MaskPattern { get; set; } Property Value Type Description Int32 The mask pattern. Matrix Gets or sets the matrix. Declaration public ByteMatrix Matrix { get; set; } Property Value Type Description ByteMatrix The matrix. Mode Gets or sets the mode, not relevant if QR_COMPACT is selected. Declaration public Mode Mode { get; set; } Property Value Type Description Mode The mode. Version Gets or sets the version. Declaration public Version Version { get; set; } Property Value Type Description Version The version. Methods isValidMaskPattern(Int32) Check if \"mask_pattern\" is valid. Declaration public static bool isValidMaskPattern(int maskPattern) Parameters Type Name Description Int32 maskPattern The mask pattern. Returns Type Description Boolean true if [is valid mask pattern] [the specified mask pattern]; otherwise, false . ToString() Returns a String that represents this instance. Declaration public override String ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString()"
  },
  "api/ZXing.QrCode.Internal.QRCodeDecoderMetaData.html": {
    "href": "api/ZXing.QrCode.Internal.QRCodeDecoderMetaData.html",
    "title": "Class QRCodeDecoderMetaData | Unity Algorand SDK",
    "keywords": "Class QRCodeDecoderMetaData Meta-data container for QR Code decoding. Instances of this class may be used to convey information back to the decoding caller. Callers are expected to process this. Inheritance Object QRCodeDecoderMetaData Namespace : ZXing.QrCode.Internal Assembly : cs.temp.dll.dll Syntax public sealed class QRCodeDecoderMetaData Constructors QRCodeDecoderMetaData(Boolean) Initializes a new instance of the QRCodeDecoderMetaData class. Declaration public QRCodeDecoderMetaData(bool mirrored) Parameters Type Name Description Boolean mirrored if set to true [mirrored]. Properties IsMirrored true if the QR Code was mirrored. Declaration public bool IsMirrored { get; } Property Value Type Description Boolean Methods applyMirroredCorrection(ResultPoint[]) Apply the result points' order correction due to mirroring. Declaration public void applyMirroredCorrection(ResultPoint[] points) Parameters Type Name Description ResultPoint [] points Array of points to apply mirror correction to."
  },
  "api/ZXing.QrCode.Internal.Version.ECB.html": {
    "href": "api/ZXing.QrCode.Internal.Version.ECB.html",
    "title": "Class Version.ECB | Unity Algorand SDK",
    "keywords": "Class Version.ECB Encapsulates the parameters for one error-correction block in one symbol version. This includes the number of data codewords, and the number of times a block with these parameters is used consecutively in the QR code version's format. Inheritance Object Version.ECB Namespace : ZXing.QrCode.Internal Assembly : cs.temp.dll.dll Syntax public sealed class ECB Properties Count Gets the count. Declaration public int Count { get; } Property Value Type Description Int32 DataCodewords Gets the data codewords. Declaration public int DataCodewords { get; } Property Value Type Description Int32"
  },
  "api/ZXing.QrCode.Internal.Version.ECBlocks.html": {
    "href": "api/ZXing.QrCode.Internal.Version.ECBlocks.html",
    "title": "Class Version.ECBlocks | Unity Algorand SDK",
    "keywords": "Class Version.ECBlocks Encapsulates a set of error-correction blocks in one symbol version. Most versions will use blocks of differing sizes within one version, so, this encapsulates the parameters for each set of blocks. It also holds the number of error-correction codewords per block since it will be the same across all blocks within one version. Inheritance Object Version.ECBlocks Namespace : ZXing.QrCode.Internal Assembly : cs.temp.dll.dll Syntax public sealed class ECBlocks Properties ECCodewordsPerBlock Gets the EC codewords per block. Declaration public int ECCodewordsPerBlock { get; } Property Value Type Description Int32 NumBlocks Gets the num blocks. Declaration public int NumBlocks { get; } Property Value Type Description Int32 TotalECCodewords Gets the total EC codewords. Declaration public int TotalECCodewords { get; } Property Value Type Description Int32 Methods getECBlocks() Gets the EC blocks. Declaration public Version.ECB[] getECBlocks() Returns Type Description Version.ECB []"
  },
  "api/ZXing.QrCode.Internal.Version.html": {
    "href": "api/ZXing.QrCode.Internal.Version.html",
    "title": "Class Version | Unity Algorand SDK",
    "keywords": "Class Version See ISO 18004:2006 Annex D Inheritance Object Version Namespace : ZXing.QrCode.Internal Assembly : cs.temp.dll.dll Syntax public sealed class Version Properties AlignmentPatternCenters Gets the alignment pattern centers. Declaration public int[] AlignmentPatternCenters { get; } Property Value Type Description Int32 [] DimensionForVersion Gets the dimension for version. Declaration public int DimensionForVersion { get; } Property Value Type Description Int32 TotalCodewords Gets the total codewords. Declaration public int TotalCodewords { get; } Property Value Type Description Int32 VersionNumber Gets the version number. Declaration public int VersionNumber { get; } Property Value Type Description Int32 Methods getECBlocksForLevel(ErrorCorrectionLevel) Gets the EC blocks for level. Declaration public Version.ECBlocks getECBlocksForLevel(ErrorCorrectionLevel ecLevel) Parameters Type Name Description ErrorCorrectionLevel ecLevel The ec level. Returns Type Description Version.ECBlocks getProvisionalVersionForDimension(Int32) Deduces version information purely from QR Code dimensions. Declaration public static Version getProvisionalVersionForDimension(int dimension) Parameters Type Name Description Int32 dimension dimension in modules Returns Type Description Version Version for a QR Code of that dimension or null getVersionForNumber(Int32) Gets the version for number. Declaration public static Version getVersionForNumber(int versionNumber) Parameters Type Name Description Int32 versionNumber The version number. Returns Type Description Version ToString() Returns a String that represents this instance. Declaration public override String ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString()"
  },
  "api/ZXing.QrCode.QrCodeEncodingOptions.html": {
    "href": "api/ZXing.QrCode.QrCodeEncodingOptions.html",
    "title": "Class QrCodeEncodingOptions | Unity Algorand SDK",
    "keywords": "Class QrCodeEncodingOptions The class holds the available options for the QrCodeWriter Inheritance Object QrCodeEncodingOptions Namespace : ZXing.QrCode Assembly : cs.temp.dll.dll Syntax public class QrCodeEncodingOptions : EncodingOptions Properties CharacterSet Specifies what character encoding to use where applicable (type ) Declaration public string CharacterSet { get; set; } Property Value Type Description String DisableECI Explicitly disables ECI segment when generating QR Code That is against the specification of QR Code but some readers have problems if the charset is switched from ISO-8859-1 (default) to UTF-8 with the necessary ECI segment. If you set the property to true you can use UTF-8 encoding and the ECI segment is omitted. Declaration public bool DisableECI { get; set; } Property Value Type Description Boolean ErrorCorrection Specifies what degree of error correction to use, for example in QR Codes. Type depends on the encoder. For example for QR codes it's type . Declaration public ErrorCorrectionLevel ErrorCorrection { get; set; } Property Value Type Description ErrorCorrectionLevel QrCompact Specifies whether to use compact mode for QR code (type Boolean , or \"true\" or \"false\" Please note that when compaction is performed, the most compact character encoding is chosen for characters in the input that are not in the ISO-8859-1 character set. Based on experience, some scanners do not support encodings like cp-1256 (Arabic). In such cases the encoding can be forced to UTF-8 by means of the CharacterSet encoding hint. Declaration public bool QrCompact { get; set; } Property Value Type Description Boolean QrVersion Specifies the exact version of QR code to be encoded. An integer, range 1 to 40. If the data specified cannot fit within the required version, a WriterException will be thrown. Declaration public int? QrVersion { get; set; } Property Value Type Description Nullable < Int32 >"
  },
  "api/ZXing.QrCode.QRCodeReader.html": {
    "href": "api/ZXing.QrCode.QRCodeReader.html",
    "title": "Class QRCodeReader | Unity Algorand SDK",
    "keywords": "Class QRCodeReader This implementation can detect and decode QR Codes in an image. Sean Owen Inheritance Object QRCodeReader Implements Reader Namespace : ZXing.QrCode Assembly : cs.temp.dll.dll Syntax public class QRCodeReader : Reader Methods decode(BinaryBitmap) Locates and decodes a QR code in an image. a String representing the content encoded by the QR code Declaration public Result decode(BinaryBitmap image) Parameters Type Name Description BinaryBitmap image Returns Type Description Result decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) Locates and decodes a barcode in some format within an image. This method also accepts hints, each possibly associated to some data, which may help the implementation decode. Declaration public Result decode(BinaryBitmap image, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description BinaryBitmap image image of barcode to decode IDictionary < DecodeHintType , Object > hints passed as a from DecodeHintType to arbitrary data. The meaning of the data depends upon the hint type. The implementation may or may not do anything with these hints. Returns Type Description Result String which the barcode encodes getDecoder() Gets the decoder. Declaration protected Decoder getDecoder() Returns Type Description Decoder reset() Resets any internal state the implementation has after a decode, to prepare it for reuse. Declaration public void reset() Implements Reader"
  },
  "api/ZXing.QrCode.QRCodeWriter.html": {
    "href": "api/ZXing.QrCode.QRCodeWriter.html",
    "title": "Class QRCodeWriter | Unity Algorand SDK",
    "keywords": "Class QRCodeWriter This object renders a QR Code as a BitMatrix 2D array of greyscale values. dswitkin@google.com (Daniel Switkin) Inheritance Object QRCodeWriter Implements Writer Namespace : ZXing.QrCode Assembly : cs.temp.dll.dll Syntax public sealed class QRCodeWriter : Writer Methods encode(String, BarcodeFormat, Int32, Int32) Encode a barcode using the default settings. Declaration public BitMatrix encode(String contents, BarcodeFormat format, int width, int height) Parameters Type Name Description String contents The contents to encode in the barcode BarcodeFormat format The barcode format to generate Int32 width The preferred width in pixels Int32 height The preferred height in pixels Returns Type Description BitMatrix The generated barcode as a Matrix of unsigned bytes (0 == black, 255 == white) encode(String, BarcodeFormat, Int32, Int32, IDictionary<EncodeHintType, Object>) Declaration public BitMatrix encode(String contents, BarcodeFormat format, int width, int height, IDictionary<EncodeHintType, object> hints) Parameters Type Name Description String contents The contents to encode in the barcode BarcodeFormat format The barcode format to generate Int32 width The preferred width in pixels Int32 height The preferred height in pixels IDictionary < EncodeHintType , Object > hints Additional parameters to supply to the encoder Returns Type Description BitMatrix The generated barcode as a Matrix of unsigned bytes (0 == black, 255 == white) Implements Writer"
  },
  "api/ZXing.Reader.html": {
    "href": "api/ZXing.Reader.html",
    "title": "Interface Reader | Unity Algorand SDK",
    "keywords": "Interface Reader Implementations of this interface can decode an image of a barcode in some format into the String it encodes. For example, QRCodeReader can decode a QR code. The decoder may optionally receive hints from the caller which may help it decode more quickly or accurately. See MultiFormatReader , which attempts to determine what barcode format is present within the image as well, and then decodes it accordingly. Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public interface Reader Methods decode(BinaryBitmap) Locates and decodes a barcode in some format within an image. Declaration Result decode(BinaryBitmap image) Parameters Type Name Description BinaryBitmap image image of barcode to decode Returns Type Description Result String which the barcode encodes decode(BinaryBitmap, IDictionary<DecodeHintType, Object>) Locates and decodes a barcode in some format within an image. This method also accepts hints, each possibly associated to some data, which may help the implementation decode. Declaration Result decode(BinaryBitmap image, IDictionary<DecodeHintType, object> hints) Parameters Type Name Description BinaryBitmap image image of barcode to decode IDictionary < DecodeHintType , Object > hints passed as a from DecodeHintType to arbitrary data. The meaning of the data depends upon the hint type. The implementation may or may not do anything with these hints. Returns Type Description Result String which the barcode encodes reset() Resets any internal state the implementation has after a decode, to prepare it for reuse. Declaration void reset()"
  },
  "api/ZXing.ReaderException.html": {
    "href": "api/ZXing.ReaderException.html",
    "title": "Class ReaderException | Unity Algorand SDK",
    "keywords": "Class ReaderException The general exception class throw when something goes wrong during decoding of a barcode. This includes, but is not limited to, failing checksums / error correction algorithms, being unable to locate finder timing patterns, and so on. Inheritance Object ReaderException FormatException Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public class ReaderException : Exception Constructors ReaderException() Initializes a new instance of the ReaderException class. Declaration public ReaderException() ReaderException(Exception) Initializes a new instance of the ReaderException class. Declaration public ReaderException(Exception innerException) Parameters Type Name Description Exception innerException The inner exception. ReaderException(String) Initializes a new instance of the ReaderException class. Declaration public ReaderException(String message) Parameters Type Name Description String message ReaderException(String, Exception) Initializes a new instance of the ReaderException class. Declaration public ReaderException(String message, Exception innerException) Parameters Type Name Description String message Exception innerException The inner exception."
  },
  "api/ZXing.Rendering.html": {
    "href": "api/ZXing.Rendering.html",
    "title": "Namespace ZXing.Rendering | Unity Algorand SDK",
    "keywords": "Namespace ZXing.Rendering Classes PixelData represents the generated code as a byte array with pixel data (4 byte per pixel, BGRA) PixelDataRenderer Renders a to an byte array with pixel data (4 byte per pixel, BGRA) SvgRenderer Renders a barcode into a Svg image SvgRenderer.SvgImage Represents a barcode as a Svg image Interfaces IBarcodeRenderer<TOutput> Interface for a class to convert a BitMatrix to an output image format"
  },
  "api/ZXing.Rendering.IBarcodeRenderer-1.html": {
    "href": "api/ZXing.Rendering.IBarcodeRenderer-1.html",
    "title": "Interface IBarcodeRenderer<TOutput> | Unity Algorand SDK",
    "keywords": "Interface IBarcodeRenderer<TOutput> Interface for a class to convert a BitMatrix to an output image format Namespace : ZXing.Rendering Assembly : cs.temp.dll.dll Syntax public interface IBarcodeRenderer<out TOutput> Type Parameters Name Description TOutput Methods Render(BitMatrix, BarcodeFormat, String) Renders the specified matrix to its graphically representation Declaration TOutput Render(BitMatrix matrix, BarcodeFormat format, string content) Parameters Type Name Description BitMatrix matrix The matrix. BarcodeFormat format The format. String content The encoded content of the barcode which should be included in the image. That can be the numbers below a 1D barcode or something other. Returns Type Description TOutput Render(BitMatrix, BarcodeFormat, String, EncodingOptions) Renders the specified matrix to its graphically representation Declaration TOutput Render(BitMatrix matrix, BarcodeFormat format, string content, EncodingOptions options) Parameters Type Name Description BitMatrix matrix The matrix. BarcodeFormat format The format. String content The encoded content of the barcode which should be included in the image. That can be the numbers below a 1D barcode or something other. EncodingOptions options The options. Returns Type Description TOutput"
  },
  "api/ZXing.Rendering.PixelData.html": {
    "href": "api/ZXing.Rendering.PixelData.html",
    "title": "Class PixelData | Unity Algorand SDK",
    "keywords": "Class PixelData represents the generated code as a byte array with pixel data (4 byte per pixel, BGRA) Inheritance Object PixelData Namespace : ZXing.Rendering Assembly : cs.temp.dll.dll Syntax public sealed class PixelData Properties Height the height of the image Declaration public int Height { get; } Property Value Type Description Int32 Pixels the generated code as byte array of BGRA pixels Declaration public byte[] Pixels { get; } Property Value Type Description Byte [] Width the width of the image Declaration public int Width { get; } Property Value Type Description Int32 Methods ToColor32() converts the pixel data to a bitmap object Declaration public Color32[] ToColor32() Returns Type Description Color32 []"
  },
  "api/ZXing.Rendering.PixelDataRenderer.html": {
    "href": "api/ZXing.Rendering.PixelDataRenderer.html",
    "title": "Class PixelDataRenderer | Unity Algorand SDK",
    "keywords": "Class PixelDataRenderer Renders a to an byte array with pixel data (4 byte per pixel, BGRA) Inheritance Object PixelDataRenderer Implements IBarcodeRenderer < PixelData > Namespace : ZXing.Rendering Assembly : cs.temp.dll.dll Syntax public sealed class PixelDataRenderer : IBarcodeRenderer<PixelData> Constructors PixelDataRenderer() Initializes a new instance of the PixelDataRenderer class. Declaration public PixelDataRenderer() Properties Background Gets or sets the background color. Declaration public Color Background { get; set; } Property Value Type Description Color The background color. Foreground Gets or sets the foreground color. Declaration public Color Foreground { get; set; } Property Value Type Description Color The foreground color. Methods Render(BitMatrix, BarcodeFormat, String) Renders the specified matrix. Declaration public PixelData Render(BitMatrix matrix, BarcodeFormat format, string content) Parameters Type Name Description BitMatrix matrix The matrix. BarcodeFormat format The format. String content The content. Returns Type Description PixelData Render(BitMatrix, BarcodeFormat, String, EncodingOptions) Renders the specified matrix. Declaration public PixelData Render(BitMatrix matrix, BarcodeFormat format, string content, EncodingOptions options) Parameters Type Name Description BitMatrix matrix The matrix. BarcodeFormat format The format. String content The content. EncodingOptions options The options. Returns Type Description PixelData Implements IBarcodeRenderer<TOutput>"
  },
  "api/ZXing.Rendering.SvgRenderer.html": {
    "href": "api/ZXing.Rendering.SvgRenderer.html",
    "title": "Class SvgRenderer | Unity Algorand SDK",
    "keywords": "Class SvgRenderer Renders a barcode into a Svg image Inheritance Object SvgRenderer Implements IBarcodeRenderer < SvgRenderer.SvgImage > Namespace : ZXing.Rendering Assembly : cs.temp.dll.dll Syntax public class SvgRenderer : IBarcodeRenderer<SvgRenderer.SvgImage> Constructors SvgRenderer() Initializes a new instance of the SvgRenderer class. Declaration public SvgRenderer() Fields DefaultFontName the default font name if nothing else is set (Arial) Declaration public const string DefaultFontName = \"Arial\" Field Value Type Description String DefaultFontSize the default font size if nothing else is set (10) Declaration public const int DefaultFontSize = 10 Field Value Type Description Int32 Properties Background Gets or sets the background color. Declaration public Color Background { get; set; } Property Value Type Description Color The background color. FontName Gets or sets the font family name Declaration public string FontName { get; set; } Property Value Type Description String The font family name. FontSize Gets or sets the font size in pixel Declaration public int FontSize { get; set; } Property Value Type Description Int32 The font size in pixel. Foreground Gets or sets the foreground color. Declaration public Color Foreground { get; set; } Property Value Type Description Color The foreground color. Methods Render(BitMatrix, BarcodeFormat, String) Renders the specified matrix. Declaration public SvgRenderer.SvgImage Render(BitMatrix matrix, BarcodeFormat format, string content) Parameters Type Name Description BitMatrix matrix The matrix. BarcodeFormat format The format. String content The content. Returns Type Description SvgRenderer.SvgImage Render(BitMatrix, BarcodeFormat, String, EncodingOptions) Renders the specified matrix. Declaration public SvgRenderer.SvgImage Render(BitMatrix matrix, BarcodeFormat format, string content, EncodingOptions options) Parameters Type Name Description BitMatrix matrix The matrix. BarcodeFormat format The format. String content The content. EncodingOptions options The options. Returns Type Description SvgRenderer.SvgImage Implements IBarcodeRenderer<TOutput>"
  },
  "api/ZXing.Rendering.SvgRenderer.SvgImage.html": {
    "href": "api/ZXing.Rendering.SvgRenderer.SvgImage.html",
    "title": "Class SvgRenderer.SvgImage | Unity Algorand SDK",
    "keywords": "Class SvgRenderer.SvgImage Represents a barcode as a Svg image Inheritance Object SvgRenderer.SvgImage Namespace : ZXing.Rendering Assembly : cs.temp.dll.dll Syntax public class SvgImage Constructors SvgImage() Initializes a new instance of the SvgRenderer.SvgImage class. Declaration public SvgImage() SvgImage(Int32, Int32) Initializes a new instance of the SvgRenderer.SvgImage class. Declaration public SvgImage(int width, int height) Parameters Type Name Description Int32 width Int32 height SvgImage(String) Initializes a new instance of the SvgRenderer.SvgImage class. Declaration public SvgImage(string content) Parameters Type Name Description String content The content. Properties Content Gets or sets the content. Declaration public String Content { get; set; } Property Value Type Description String The content. Height The original height of the bitmatrix for the barcode Declaration public int Height { get; set; } Property Value Type Description Int32 Width The original width of the bitmatrix for the barcode Declaration public int Width { get; set; } Property Value Type Description Int32 Methods ToString() Gives the XML representation of the SVG image Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/ZXing.Result.html": {
    "href": "api/ZXing.Result.html",
    "title": "Class Result | Unity Algorand SDK",
    "keywords": "Class Result Encapsulates the result of decoding a barcode within an image. Inheritance Object Result Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public sealed class Result Constructors Result(String, Byte[], Int32, ResultPoint[], BarcodeFormat) Initializes a new instance of the Result class. Declaration public Result(String text, byte[] rawBytes, int numBits, ResultPoint[] resultPoints, BarcodeFormat format) Parameters Type Name Description String text The text. Byte [] rawBytes The raw bytes. Int32 numBits ResultPoint [] resultPoints The result points. BarcodeFormat format The format. Result(String, Byte[], Int32, ResultPoint[], BarcodeFormat, Int64) Initializes a new instance of the Result class. Declaration public Result(String text, byte[] rawBytes, int numBits, ResultPoint[] resultPoints, BarcodeFormat format, long timestamp) Parameters Type Name Description String text The text. Byte [] rawBytes The raw bytes. Int32 numBits ResultPoint [] resultPoints The result points. BarcodeFormat format The format. Int64 timestamp The timestamp. Result(String, Byte[], ResultPoint[], BarcodeFormat) Initializes a new instance of the Result class. Declaration public Result(String text, byte[] rawBytes, ResultPoint[] resultPoints, BarcodeFormat format) Parameters Type Name Description String text The text. Byte [] rawBytes The raw bytes. ResultPoint [] resultPoints The result points. BarcodeFormat format The format. Result(String, Byte[], ResultPoint[], BarcodeFormat, Int64) Initializes a new instance of the Result class. Declaration public Result(String text, byte[] rawBytes, ResultPoint[] resultPoints, BarcodeFormat format, long timestamp) Parameters Type Name Description String text The text. Byte [] rawBytes The raw bytes. ResultPoint [] resultPoints The result points. BarcodeFormat format The format. Int64 timestamp The timestamp. Properties BarcodeFormat Declaration public BarcodeFormat BarcodeFormat { get; } Property Value Type Description BarcodeFormat {@link BarcodeFormat} representing the format of the barcode that was decoded NumBits how many bits of RawBytes are valid; typically 8 times its length Declaration public int NumBits { get; } Property Value Type Description Int32 RawBytes Declaration public byte[] RawBytes { get; } Property Value Type Description Byte [] raw bytes encoded by the barcode, if applicable, otherwise null ResultMetadata Declaration public IDictionary<ResultMetadataType, object> ResultMetadata { get; } Property Value Type Description IDictionary < ResultMetadataType , Object > {@link Hashtable} mapping {@link ResultMetadataType} keys to values. May be null . This contains optional metadata about what was detected about the barcode, like orientation. ResultPoints Declaration public ResultPoint[] ResultPoints { get; } Property Value Type Description ResultPoint [] points related to the barcode in the image. These are typically points identifying finder patterns or the corners of the barcode. The exact meaning is specific to the type of barcode that was decoded. Text Declaration public String Text { get; } Property Value Type Description String raw text encoded by the barcode, if applicable, otherwise null Timestamp Gets the timestamp. Declaration public long Timestamp { get; } Property Value Type Description Int64 Methods addResultPoints(ResultPoint[]) Adds the result points. Declaration public void addResultPoints(ResultPoint[] newPoints) Parameters Type Name Description ResultPoint [] newPoints The new points. putAllMetadata(IDictionary<ResultMetadataType, Object>) Adds a list of metadata to the result Declaration public void putAllMetadata(IDictionary<ResultMetadataType, object> metadata) Parameters Type Name Description IDictionary < ResultMetadataType , Object > metadata The metadata. putMetadata(ResultMetadataType, Object) Adds one metadata to the result Declaration public void putMetadata(ResultMetadataType type, Object value) Parameters Type Name Description ResultMetadataType type The type. Object value The value. ToString() Returns a String that represents this instance. Declaration public override String ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString()"
  },
  "api/ZXing.ResultMetadataType.html": {
    "href": "api/ZXing.ResultMetadataType.html",
    "title": "Enum ResultMetadataType | Unity Algorand SDK",
    "keywords": "Enum ResultMetadataType Represents some type of metadata about the result of the decoding that the decoder wishes to communicate back to the caller. Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public enum ResultMetadataType Fields Name Description AZTEC_EXTRA_METADATA Aztec-specific metadata BYTE_SEGMENTS 2D barcode formats typically encode text, but allow for a sort of 'byte mode' which is sometimes used to encode binary data. While {@link Result} makes available the complete raw bytes in the barcode for these formats, it does not offer the bytes from the byte segments alone. This maps to a {@link java.util.List} of byte arrays corresponding to the raw bytes in the byte segments in the barcode, in order. ERROR_CORRECTION_LEVEL Error correction level used, if applicable. The value type depends on the format, but is typically a String. ISSUE_NUMBER For some periodicals, indicates the issue number as an {@link Integer}. ORIENTATION Denotes the likely approximate orientation of the barcode in the image. This value is given as degrees rotated clockwise from the normal, upright orientation. For example a 1D barcode which was found by reading top-to-bottom would be said to have orientation \"90\". This key maps to an {@link Integer} whose value is in the range [0,360). OTHER Unspecified, application-specific metadata. Maps to an unspecified {@link Object}. PDF417_EXTRA_METADATA PDF417-specific metadata POSSIBLE_COUNTRY For some products, the possible country of manufacture as a {@link String} denoting the ISO country code. Some map to multiple possible countries, like \"US/CA\". STRUCTURED_APPEND_PARITY If the code format supports structured append and the current scanned code is part of one then the parity is given with it. STRUCTURED_APPEND_SEQUENCE If the code format supports structured append and the current scanned code is part of one then the sequence number is given with it. SUGGESTED_PRICE For some products, indicates the suggested retail price in the barcode as a formatted {@link String}. SYMBOLOGY_IDENTIFIER Barcode Symbology Identifier. Note: According to the GS1 specification the identifier may have to replace a leading FNC1/GS character when prepending to the barcode content. UPC_EAN_EXTENSION For some products, the extension text"
  },
  "api/ZXing.ResultPoint.html": {
    "href": "api/ZXing.ResultPoint.html",
    "title": "Class ResultPoint | Unity Algorand SDK",
    "keywords": "Class ResultPoint Encapsulates a point of interest in an image containing a barcode. Typically, this would be the location of a finder pattern or the corner of the barcode, for example. Inheritance Object ResultPoint AlignmentPattern FinderPattern Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public class ResultPoint Constructors ResultPoint() Initializes a new instance of the ResultPoint class. Declaration public ResultPoint() ResultPoint(Single, Single) Initializes a new instance of the ResultPoint class. Declaration public ResultPoint(float x, float y) Parameters Type Name Description Single x The x. Single y The y. Properties X Gets the X. Declaration public virtual float X { get; } Property Value Type Description Single Y Gets the Y. Declaration public virtual float Y { get; } Property Value Type Description Single Methods distance(ResultPoint, ResultPoint) calculates the distance between two points Declaration public static float distance(ResultPoint pattern1, ResultPoint pattern2) Parameters Type Name Description ResultPoint pattern1 first pattern ResultPoint pattern2 second pattern Returns Type Description Single distance between two points Equals(Object) Determines whether the specified Object is equal to this instance. Declaration public override bool Equals(Object other) Parameters Type Name Description Object other The Object to compare with this instance. Returns Type Description Boolean true if the specified Object is equal to this instance; otherwise, false . GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Object.GetHashCode() orderBestPatterns(ResultPoint[]) Orders an array of three ResultPoints in an order [A,B,C] such that AB is less than AC and BC is less than AC and the angle between BC and BA is less than 180 degrees. Declaration public static void orderBestPatterns(ResultPoint[] patterns) Parameters Type Name Description ResultPoint [] patterns array of three ResultPoint to order ToString() Returns a String that represents this instance. Declaration public override String ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString()"
  },
  "api/ZXing.ResultPointCallback.html": {
    "href": "api/ZXing.ResultPointCallback.html",
    "title": "Delegate ResultPointCallback | Unity Algorand SDK",
    "keywords": "Delegate ResultPointCallback Callback which is invoked when a possible result point (significant point in the barcode image such as a corner) is found. Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public delegate void ResultPointCallback(ResultPoint point); Parameters Type Name Description ResultPoint point See Also NEED_RESULT_POINT_CALLBACK"
  },
  "api/ZXing.RGBLuminanceSource.BitmapFormat.html": {
    "href": "api/ZXing.RGBLuminanceSource.BitmapFormat.html",
    "title": "Enum RGBLuminanceSource.BitmapFormat | Unity Algorand SDK",
    "keywords": "Enum RGBLuminanceSource.BitmapFormat enumeration of supported bitmap format which the RGBLuminanceSource can process Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public enum BitmapFormat Fields Name Description ARGB32 4 bytes per pixel with the channels alpha, red, green and blue BGR24 3 bytes per pixel with the channels blue, green and red BGR32 4 bytes per pixel with the channels blue, green and red BGRA32 4 bytes per pixel with the channels blue, green, red and alpha Gray16 grayscale array, the byte array is a luminance array with 2 bytes per pixel Gray8 grayscale array, the byte array is a luminance array with 1 byte per pixel RGB24 3 bytes per pixel with the channels red, green and blue RGB32 4 bytes per pixel with the channels red, green and blue RGB565 2 bytes per pixel, 5 bit red, 6 bits green and 5 bits blue RGBA32 4 bytes per pixel with the channels red, green, blue and alpha Unknown format of the byte[] isn't known. RGBLuminanceSource tries to determine the best possible value UYVY 4 bytes for two pixels, UYVY formatted YUYV 4 bytes for two pixels, YUYV formatted"
  },
  "api/ZXing.RGBLuminanceSource.html": {
    "href": "api/ZXing.RGBLuminanceSource.html",
    "title": "Class RGBLuminanceSource | Unity Algorand SDK",
    "keywords": "Class RGBLuminanceSource Luminance source class which support different formats of images. Inheritance Object LuminanceSource BaseLuminanceSource RGBLuminanceSource Inherited Members BaseLuminanceSource.RChannelWeight BaseLuminanceSource.GChannelWeight BaseLuminanceSource.BChannelWeight BaseLuminanceSource.ChannelWeight BaseLuminanceSource.luminances BaseLuminanceSource.getRow(Int32, Byte[]) BaseLuminanceSource.Matrix BaseLuminanceSource.rotateCounterClockwise() BaseLuminanceSource.rotateCounterClockwise45() BaseLuminanceSource.RotateSupported BaseLuminanceSource.crop(Int32, Int32, Int32, Int32) BaseLuminanceSource.CropSupported BaseLuminanceSource.InversionSupported BaseLuminanceSource.invert() LuminanceSource.Width LuminanceSource.Height LuminanceSource.ToString() Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public class RGBLuminanceSource : BaseLuminanceSource Constructors RGBLuminanceSource(Byte[], Int32, Int32) Initializes a new instance of the RGBLuminanceSource class. It supports a byte array with 3 bytes per pixel (RGB24). Declaration public RGBLuminanceSource(byte[] rgbRawBytes, int width, int height) Parameters Type Name Description Byte [] rgbRawBytes The RGB raw bytes. Int32 width The width. Int32 height The height. RGBLuminanceSource(Byte[], Int32, Int32, Boolean) Initializes a new instance of the RGBLuminanceSource class. It supports a byte array with 1 byte per pixel (Gray8). That means the whole array consists of the luminance values (grayscale). Declaration public RGBLuminanceSource(byte[] luminanceArray, int width, int height, bool is8Bit) Parameters Type Name Description Byte [] luminanceArray The luminance array. Int32 width The width. Int32 height The height. Boolean is8Bit if set to true [is8 bit]. RGBLuminanceSource(Byte[], Int32, Int32, RGBLuminanceSource.BitmapFormat) Initializes a new instance of the RGBLuminanceSource class. It supports a byte array with 3 bytes per pixel (RGB24). Declaration public RGBLuminanceSource(byte[] rgbRawBytes, int width, int height, RGBLuminanceSource.BitmapFormat bitmapFormat) Parameters Type Name Description Byte [] rgbRawBytes The RGB raw bytes. Int32 width The width. Int32 height The height. RGBLuminanceSource.BitmapFormat bitmapFormat The bitmap format. RGBLuminanceSource(Int32, Int32) Initializes a new instance of the RGBLuminanceSource class. Declaration protected RGBLuminanceSource(int width, int height) Parameters Type Name Description Int32 width The width. Int32 height The height. Methods CalculateLuminance(Byte[], RGBLuminanceSource.BitmapFormat) calculates the luminance values for the given byte array and bitmap format Declaration protected void CalculateLuminance(byte[] rgbRawBytes, RGBLuminanceSource.BitmapFormat bitmapFormat) Parameters Type Name Description Byte [] rgbRawBytes RGBLuminanceSource.BitmapFormat bitmapFormat CreateLuminanceSource(Byte[], Int32, Int32) Should create a new luminance source with the right class type. The method is used in methods crop and rotate. Declaration protected override LuminanceSource CreateLuminanceSource(byte[] newLuminances, int width, int height) Parameters Type Name Description Byte [] newLuminances The new luminances. Int32 width The width. Int32 height The height. Returns Type Description LuminanceSource Overrides BaseLuminanceSource.CreateLuminanceSource(Byte[], Int32, Int32)"
  },
  "api/ZXing.SupportClass.html": {
    "href": "api/ZXing.SupportClass.html",
    "title": "Class SupportClass | Unity Algorand SDK",
    "keywords": "Class SupportClass Contains conversion support elements such as classes, interfaces and static methods. Inheritance Object SupportClass Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public static class SupportClass Methods bitCount(Int32) Declaration public static int bitCount(int n) Parameters Type Name Description Int32 n Returns Type Description Int32 Fill<T>(T[], T) Fills the specified array. (can't use extension method because of .Net 2.0 support) Declaration public static void Fill<T>(T[] array, T value) Parameters Type Name Description T[] array The array. T value The value. Type Parameters Name Description T Fill<T>(T[], Int32, Int32, T) Fills the specified array. (can't use extension method because of .Net 2.0 support) Declaration public static void Fill<T>(T[] array, int startIndex, int endIndex, T value) Parameters Type Name Description T[] array The array. Int32 startIndex The start index. Int32 endIndex The end index. T value The value. Type Parameters Name Description T GetCharsFromString(String, Int32, Int32, Char[], Int32) Copies an array of chars obtained from a String into a specified array of chars Declaration public static void GetCharsFromString(string sourceString, int sourceStart, int sourceEnd, char[] destinationArray, int destinationStart) Parameters Type Name Description String sourceString The String to get the chars from Int32 sourceStart Position of the String to start getting the chars Int32 sourceEnd Position of the String to end getting the chars Char [] destinationArray Array to return the chars Int32 destinationStart Position of the destination array of chars to start storing the chars GetValue<T>(IDictionary<DecodeHintType, Object>, DecodeHintType, T) Savely gets the value of a decoding hint if hints is null the default is returned Declaration public static T GetValue<T>(IDictionary<DecodeHintType, object> hints, DecodeHintType hintType, T default) Parameters Type Name Description IDictionary < DecodeHintType , Object > hints The hints. DecodeHintType hintType Type of the hint. T default The @default. Returns Type Description T Type Parameters Name Description T Join<T>(String, IEnumerable<T>) Joins all elements to one string. Declaration public static string Join<T>(string separator, IEnumerable<T> values) Parameters Type Name Description String separator The separator. IEnumerable <T> values The values. Returns Type Description String Type Parameters Name Description T SetCapacity<T>(IList<T>, Int32) Sets the capacity for the specified List Declaration public static void SetCapacity<T>(IList<T> vector, int newCapacity) where T : new() Parameters Type Name Description IList <T> vector The List which capacity will be set Int32 newCapacity The new capacity value Type Parameters Name Description T ToBinaryString(Int32) Declaration public static string ToBinaryString(int x) Parameters Type Name Description Int32 x Returns Type Description String toStringArray(ICollection<String>) Converts a string-Collection to an array Declaration public static String[] toStringArray(ICollection<string> strings) Parameters Type Name Description ICollection < String > strings The strings. Returns Type Description String []"
  },
  "api/ZXing.Writer.html": {
    "href": "api/ZXing.Writer.html",
    "title": "Interface Writer | Unity Algorand SDK",
    "keywords": "Interface Writer The base class for all objects which encode/generate a barcode image. Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public interface Writer Methods encode(String, BarcodeFormat, Int32, Int32, IDictionary<EncodeHintType, Object>) Declaration BitMatrix encode(String contents, BarcodeFormat format, int width, int height, IDictionary<EncodeHintType, object> hints) Parameters Type Name Description String contents The contents to encode in the barcode BarcodeFormat format The barcode format to generate Int32 width The preferred width in pixels Int32 height The preferred height in pixels IDictionary < EncodeHintType , Object > hints Additional parameters to supply to the encoder Returns Type Description BitMatrix The generated barcode as a Matrix of unsigned bytes (0 == black, 255 == white) encode(String, BarcodeFormat, Int32, Int32) Encode a barcode using the default settings. Declaration BitMatrix encode(string contents, BarcodeFormat format, int width, int height) Parameters Type Name Description String contents The contents to encode in the barcode BarcodeFormat format The barcode format to generate Int32 width The preferred width in pixels Int32 height The preferred height in pixels Returns Type Description BitMatrix The generated barcode as a Matrix of unsigned bytes (0 == black, 255 == white)"
  },
  "api/ZXing.WriterException.html": {
    "href": "api/ZXing.WriterException.html",
    "title": "Class WriterException | Unity Algorand SDK",
    "keywords": "Class WriterException A base class which covers the range of exceptions which may occur when encoding a barcode using the Writer framework. Inheritance Object WriterException Namespace : ZXing Assembly : cs.temp.dll.dll Syntax public sealed class WriterException : Exception Constructors WriterException() Initializes a new instance of the WriterException class. Declaration public WriterException() WriterException(String) Initializes a new instance of the WriterException class. Declaration public WriterException(String message) Parameters Type Name Description String message The message. WriterException(String, Exception) Initializes a new instance of the WriterException class. Declaration public WriterException(String message, Exception innerExc) Parameters Type Name Description String message The message. Exception innerExc The inner exc."
  },
  "changelog/CHANGELOG.html": {
    "href": "changelog/CHANGELOG.html",
    "title": "Changelog | Unity Algorand SDK",
    "keywords": "Changelog All notable changes to this package will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . 2.0.0-pre.9 (2022-03-04) Code Refactoring assemblies: move libraries to their own assemblies to simplify things ( 0b17ea1 ) walletconnect: remove unused enum WalletConnectError ( 6df5079 ) websocket: change namespace Netcode.Transports.WebSocket -> AlgoSdk.WebSocket ( ddb1357 ) Features walletconnect: add HandshakeUrl struct ( 4238348 ) BREAKING CHANGES websocket: Namespace Netcode.Transports.WebSocket has been renamed to AlgoSdk.WebSocket . assemblies: zxing.net and websocket-sharp are now in their own assemblies. You will need to update them if you were using the ZXing or WebSocket namespaces. walletconnect: Renamed QrCode -> QrCodeUtility . Set autoReference = false in CareBoo.AlgoSdk.QrCode assembly. AlgorandWalletConnectSession.StartConnection now returns a HandshakeUrl instead of a System.String . walletconnect: WalletConnectError has been removed since it's not being used by the API. 2.0.0-pre.8 (2022-03-04) Bug Fixes qrcode: replace zxing dll with its source code ( 766c83e ), closes #84 websocket: regenerate guids in CareBoo.AlgoSdk.WebSocket assembly ( 3cb3180 ), closes #83 Features unitask: upgrade UniTask to version 2.3.1 ( 537d297 ) BREAKING CHANGES qrcode: QrCode logic has been moved from the CareBoo.AlgoSdk.WalletConnect assembly and into the CareBoo.AlgoSdk.QrCode assembly. websocket: The GUID to the CareBoo.AlgoSdk.WebSocket assembly has changed. You may need to re-reference it. 2.0.0-pre.7 (2022-03-01) Features dependencies: upgrade unity collections to 1.1.0 ( 88308be ) 2.0.0-pre.6 (2022-03-01) Bug Fixes walletconnect: fix compile issue for unity 2020 ( e26836a ) Features algod: add overloads for IAlgodClient.SendTransactions that allow sending raw msgpack ( 4befeeb ) lowlevel: add NativeArrayUtil.ConcatAll ( 10644db ) models: add implicit operators for either value type in an either ( 84cfbcf ) BREAKING CHANGES lowlevel: Remove unused struct NativeReferenceOfDisposable from AlgoSdk.LowLevel 2.0.0-pre.5 (2022-02-28) Features accounts: add AccountInfo.EstimateMinBalance ( 51d471b ) transaction: reduce generic constraints related to ITransaction ( 42dfe82 ) 2.0.0-pre.4 (2022-02-28) Features api: add statusCode deserialization field to ErrorResponseFormatter ( 3f69600 ) 2.0.0-pre.3 (2022-02-27) Bug Fixes walletconnect: fix issue where new WalletConnect assembly was not compiling in Unity 2020.3 ( 0a1ec26 ) Code Refactoring walletconnect: move WalletConnect code to its own assembly ( e6668cd ) BREAKING CHANGES walletconnect: Code in the AlgoSdk.WalletConnect namespace are now in the CareBoo.AlgoSdk.WalletConnect assembly. Additionally, Hex has been moved to the AlgoSdk namespace and remains in the CareBoo.AlgoSdk assembly. 2.0.0-pre.2 (2022-02-25) Code Refactoring websocket: move websocket code to its own assembly definition ( 8ff6738 ) BREAKING CHANGES websocket: To reference Netcode.Transports.WebSocket classes, you need to now reference the CareBoo.WebSocket assembly 2.0.0-pre.1 (2022-02-25) Features api: add support for CancellationToken and IProgress<float> ( 6ca2f39 ) BREAKING CHANGES api: API is no longer returning UniTask , and is now returning AlgoApiRequest.Sent . 1.4.0-pre.1 (2022-02-24) Features walletconnect: add Algorand WalletConnect client ( #67 ) ( 3028858 ), closes #65 walletconnect: add QR Code Generator support ( #68 ) ( 1f84dcf ), closes #51 walletconnect: add WalletConnect support ( #69 ) ( c650b15 ), closes #11 walletconnect: add WebSocket support ( e0d2e6d ), closes #59 1.4.0-exp.4 (2022-02-24) Features walletconnect: add WalletConnect support ( #69 ) ( c650b15 ), closes #11 1.4.0-exp.3 (2022-02-22) Features walletconnect: add QR Code Generator support ( #68 ) ( 1f84dcf ), closes #51 1.4.0-exp.2 (2022-02-21) Features walletconnect: add Algorand WalletConnect client ( #67 ) ( 3028858 ), closes #65 1.4.0-exp.1 (2022-02-18) Features walletconnect: add WebSocket support ( e0d2e6d ), closes #59 1.3.0 (2021-11-19) Features logic: add Logic.Sign for signing programs with private keys ( 131ef28 ) logic: add LogicSig.GetAddress ( 9628a9a ) multisig: add Multisig.GetAddress ( e490459 ) 1.2.2 (2021-11-15) Bug Fixes algoapiobject: fix compile err ( 12ca53c ) assetparams: change size of URL FixedString to 128 bytes ( 792d207 ) 1.2.2-pre.2 (2021-11-15) Bug Fixes algoapiobject: fix compile err ( 13692b8 ) 1.2.2-pre.1 (2021-11-13) Bug Fixes assetparams: change size of URL FixedString to 128 bytes ( c964899 ) 1.2.1 (2021-11-09) Bug Fixes error response: fix some responses with response code 0 incorrectly treated as errors ( e605e75 ) 1.2.0 (2021-11-08) Bug Fixes json: fix MultiSig JSON format using incorrect field names ( 83d0950 ) logging: remove unnecessary debug logs ( 7550061 ) msgpack: fix enum serialization when using IL2CPP ( 0c1a4d0 ) plugins: remove \"lib\" prefix from certain plugins ( 0ecf98f ), closes #55 plugins: remove unnecessary android static library plugin ( fc09b66 ) teal: fix TealValue deserialization failing when both uint and bytes values included ( 22cfcd0 ) web response: fix ErrorResponse.IsError not returning true when responseCode == 0 ( 3e1c8d6 ), closes #58 Features api clients: add constructor to api clients that makes the token parameter optional ( 0bcd681 ) api: add custom Request HTTP header support ( a6f51f8 ), closes #58 Performance Improvements plugins: replace debug mode libsodium libraries with release mode ( d7638c8 ), closes #55 1.2.0-pre.3 (2021-11-08) Bug Fixes web response: fix ErrorResponse.IsError not returning true when responseCode == 0 ( 3e1c8d6 ), closes #58 1.2.0-pre.2 (2021-11-07) Features api clients: add constructor to api clients that makes the token parameter optional ( 0bcd681 ) 1.2.0-pre.1 (2021-11-07) Bug Fixes json: fix MultiSig JSON format using incorrect field names ( 83d0950 ) teal: fix TealValue deserialization failing when both uint and bytes values included ( 22cfcd0 ) Features api: add custom Request HTTP header support ( a6f51f8 ), closes #58 Performance Improvements plugins: replace debug mode libsodium libraries with release mode ( d7638c8 ), closes #55 1.1.1-pre.1 (2021-11-05) Bug Fixes logging: remove unnecessary debug logs ( 7550061 ) msgpack: fix enum serialization when using IL2CPP ( 0c1a4d0 ) plugins: remove \"lib\" prefix from certain plugins ( 0ecf98f ), closes #55 plugins: remove unnecessary android static library plugin ( fc09b66 ) 1.1.0 (2021-11-03) Bug Fixes add missing meta files ( 2407941 ) osx: fix multiple sodium.bundle plugins ( b3b9389 ) Features editor: Make many models serializable and add property drawers to render them in editor ( 09185fc ), closes #41 support WebGL ( 1890694 ), closes #52 1.1.0-pre.3 (2021-11-03) Features editor: Make many models serializable and add property drawers to render them in editor ( 09185fc ), closes #41 1.1.0-pre.2 (2021-11-01) Bug Fixes osx: fix multiple sodium.bundle plugins ( b3b9389 ) 1.1.0-pre.1 (2021-10-31) Features support WebGL ( 1890694 ), closes #52 1.0.1-pre.1 (2021-10-29) Bug Fixes add missing meta files ( 2407941 ) 1.0.0 (2021-10-29) Bug Fixes 🐛 fix RawTransaction.Equals ( b0769da ) 🐛 fix compile errs ( 9e59233 ) 🐛 fix crash on ArrayComparer.Equals ( e2931e0 ) 🐛 fix issues with codegen and AOT compilation ( 4d4b583 ) 🐛 fix keyworded enum types formatting as numbers ( ee6f363 ) 🐛 Fix npm release ( e3fed38 ) 🐛 Fix repository ( b4efa6e ) 🐛 fix signatures ( 1e3a9cc ) 🚩 Update package registry ( 64987f8 ) ✅ Fix CI tests on Github Actions can't find libsodium ( db8718a ), closes #12 algod: 🐛 fix AlgodClient.TealCompile ( bd05ed3 ), closes #20 algod: 🐛 fix AssetParams serialization ( 6f2b830 ) algod: 🐛 fix pending transactions not returning messagepack ( 3b881a3 ) algod: 🐛 fix vrfpubkey formatter lookup ( 08a09ae ) algod: 🐛 fix vrfpubkey formatting ( f3c1a56 ) algod: 🐛 replace VrfPubKey with FixedString128Bytes ( e6ce383 ), closes #42 crypto: fix libsodium not working on OSX ( cb0b2c4 ) fix empty dirs finding their way into the project ( 5a00890 ) indexer: 🐛 add missing fields to Account model ( 86122de ) indexer: 🐛 add token back to indexer ( c704eb2 ) indexer: 🐛 fix HealthCheck missing serialization logic ( f11aa38 ) indexer: 🐛 fix indexer requires token ( ef2d461 ) indexer: 🐛 fix transaction formatters missing valid msgpack fields ( e18f84a ) indexer: 🔥 fix huge issue with indexer where query parameters were in body ( 92cb794 ) indexer: ✨ fix TealValue msgpack fieldnames ( 2da8001 ) indexer: fix missing Version field in HealthCheck ( f70c73d ) json: 🐛 fix PrivateKey JSON deserialization err ( 63baf88 ) json: 🐛 fix empty json objects missing begin object '{' char ( d2b0539 ) kmd: 🎨 fix KmdClient API incorrectly using optional args ( 29374e1 ), closes #36 kmd: 🐛 fix GenerateKeyRequest to use wallet_handle_token not password ( 19c3215 ) kmd: 🐛 fix ImportKeyRequest to use wallet_handle_token not password ( 4a60a6c ) kmd: 🐛 fix KmdClient.SignTransaction returning a signed transaction message ( 6df57ec ) kmd: 🐛 fix WalletHandle not added to formatter cache ( be0495d ) kmd: 🐛 fix multisig ( 78559d0 ) serialization: 🐛 fix Block not having a formatter ( d840dfe ) serialization: 🐛 fix BlockResponse Serialization ( 6925142 ) serialization: 🐛 fix JsonWriter not writing to NativeText ( 9a21502 ) serialization: 🐛 fix SignedTransaction serialization ( 2f7bc6b ) serialization: 🐛 fix TransactionId serialization ( f4fcb74 ) serialization: 🐛 fix discrepancy between TransactionId and TransactinIdResponse ( 4bef93f ) serialization: 🐛 fix issue where fixed strings were incorrectly being added to the queryparams ( 338790b ) serialization: 🐛 fix missing AlgoApiObject on all Transaction Params ( d8f5b27 ) transaction: 🐛 fix OnCompletion having incorrect byte values ( 9786105 ) transaction: 🐛 fix incorrect constructor in Transaction.ApplicationCall ( 521fb98 ) transaction: remove unused assetCloseTo param in AssetClawback ( ce4d004 ) Code Refactoring 🔥 remove NativeSliceExtensions ( 325bfa9 ) 🔥 remove some verify methods in the transaction ( 2432bdd ) 🔥 remove unnecessary SendTransactionRaw ( 552dac8 ) ♻️ convert all SignedTransaction<> to a single SignedTransaction ( 4909d60 ) ♻️ rename RawSignedTransaction -> SignedTransaction ( 787b160 ) ♻️ rename RawTransaction -> Transaction ( b3c4129 ) ♻️ rename AlgoApiKeyAttribute -> AlgoApiFieldAttribute ( 607dab2 ) algod: ♻️ rename Block -> BlockResponse ( de1999c ) algod: ♻️ replace AccountParticipation with Transaction.KeyRegistration.Params ( b7e9ba7 ) kmd: ♻️ replace Request with explicit method params ( 1b63b9b ) remove .NET 4.8 requirement ( 077ea1e ), closes #19 #9 Features 👷 Add npmjs support ( 42c57c3 ) ➕ Add libsodium ios, android, and windows ( 066a8ad ) ✨ Add Account.Generate ( 8cfea18 ) ✨ Add Address struct ( 9c63147 ) ✨ Add basic signed transaction support ( 64bfae2 ) ✨ Add basic transaction support for message pack serialization and deserialization ( 13dc164 ) ✨ Add checksums ( 1427b4c ) ✨ add FixedBytesFormatter ( e686c0d ) ✨ Add IEquatable, GetHashCode for RawTransaction ( fea1031 ) ✨ add LogicSig implementation ( bfcea16 ) ✨ Add Mnemonic.FromString and Mnemonic.ToString ( 5f2e0ef ) ✨ add readOnly support ( 4f94ee4 ) ✨ Add Sha512 interop ( 72412b8 ) ✨ Add start of Native Integration with Libsodium ( 04dadfb ) ✨ Added Transaction Header, Payment ( f4f5004 ) ✨ implement asset configuration transaction ( 15201f2 ), closes #27 ✨ implement AssetFreezeTransaction ( aeb6bf7 ), closes #26 ✨ implement AssetTransfer Transaction ( 2d74093 ), closes #23 ✨ update AlgoApiFormatterLookup ( 509f021 ) Add Mnemonic and Key datastructs ( 0338af0 ) Add signed transaction support for payment transactions ( 4cb4b4c ) algod: add support for sending a group of transactions ( c2337e0 ) algod: implement Algod Client ( ba2920e ), closes #10 #16 #18 indexer: ♻️ rename ApplicationStateSchema -> StateSchema ( c2c1752 ) indexer: ✨ add IIndexerClient ( c383659 ) indexer: ✨ implement AccountQuery ( 3bc4c45 ) indexer: ✨ implement AccountResponse ( df7875c ) indexer: ✨ implement AccountsQuery ( eb4f138 ) indexer: ✨ implement AccountsResponse ( 15b95a0 ) indexer: ✨ implement AddressRole ( 819fee1 ) indexer: ✨ implement Application ( 6efc045 ) indexer: ✨ implement ApplicationLocalState ( b9f5e19 ) indexer: ✨ implement ApplicationQuery ( 90529fe ) indexer: ✨ implement ApplicationResponse ( 2968a38 ) indexer: ✨ implement ApplicationsQuery ( 1b2a010 ) indexer: ✨ implement ApplicationsResponse ( f3120b3 ) indexer: ✨ implement Asset ( 3e2b9e6 ) indexer: ✨ implement AssetHolding ( b7e6714 ) indexer: ✨ implement AssetParams ( 3e25148 ) indexer: ✨ implement AssetQuery ( 2c8f30d ) indexer: ✨ implement AssetResponse ( f44da47 ) indexer: ✨ implement AssetsResponse ( abf6ccd ) indexer: ✨ implement BalancesQuery ( 37c652e ) indexer: ✨ implement BalancesResponse ( bef374a ) indexer: ✨ implement Block ( 8168949 ) indexer: ✨ implement BlockRewards ( 43a2e0d ) indexer: ✨ implement BlockUpgradeStatus ( 34ee633 ) indexer: ✨ implement BlockUpgradeVote ( 46bfbdf ) indexer: ✨ implement ErrorResponse msgpack fields ( 7bb31e4 ) indexer: ✨ implement EvalDelta msgpack fields ( e7ce847 ) indexer: ✨ implement EvalDeltaKeyValue msgpack fields ( f564579 ) indexer: ✨ implement HealthCheck ( 57e38ee ) indexer: ✨ implement IndexerClient.GetAccount ( e088877 ) indexer: ✨ implement IndexerClient.GetAccounts ( 1fa9f5b ) indexer: ✨ implement IndexerClient.GetHealth ( ee98909 ) indexer: ✨ implement IndexerClient ( b39c115 ) indexer: ✨ implement LogicSig json fields ( a547772 ) indexer: ✨ implement MiniAssetHolding ( 6df0bd0 ) indexer: ✨ implement MultiSig.SubSignature ( d995b21 ) indexer: ✨ implement MultiSig ( 2b33c02 ) indexer: ✨ implement OnCompletion ( b7181f3 ) indexer: ✨ implement TealKeyValue msgPack fields ( bfcb1ad ) indexer: ✨ implement Transaction.ApplicationCall ( 4e800be ) indexer: ✨ implement Transaction.ApplicationCall model fields ( e05a1b3 ) indexer: ✨ implement Transaction.AssetConfiguration model fields ( b021ac9 ) indexer: ✨ implement Transaction.AssetFreeze model fields ( 655aee9 ) indexer: ✨ implement Transaction.AssetTransfer model fields ( 5322ad7 ) indexer: ✨ implement Transaction.KeyRegistration ( da15081 ) indexer: ✨ implement Transaction.KeyRegistration model fields ( ab75259 ) indexer: ✨ implement TransactionResponse ( 0cdcdde ) indexer: ✨ implement TransactionsQuery ( a9e353a ) indexer: ✨ implement AssetsQuery ( ebfb08c ) indexer: ✨ implement TransactionsResponse ( 27345f5 ) json: ✨ implement JsonReader.Skip ( cba58d6 ) json: ✨ implement JsonWriter.WriteRaw ( f780932 ) json: ✨ implement ReadRaw ( c2ec519 ) kmd: ✨ add Error to ErrorMessage which is used for kmd ( b64aac6 ) kmd: ✨ implement APIV1DELETEKeyResponse ( d273c12 ) kmd: ✨ implement APIV1DELETEMultisigResponse ( b323213 ) kmd: ✨ implement APIV1GETWalletsResponse ( cd7180d ) kmd: ✨ implement APIV1Wallet ( 4b74869 ) kmd: ✨ implement APIV1WalletHandle ( da73b67 ) kmd: ✨ implement CreateWalletRequest ( 02cac0a ) kmd: ✨ implement CreateWalletRequest api fields ( 9f1b667 ) kmd: ✨ implement CreateWalletResponse ( d0c3965 ) kmd: ✨ implement DeleteKeyRequest ( 9de69d0 ) kmd: ✨ implement DeleteMultiSigRequest ( 4d0b859 ) kmd: ✨ implement ExportKeyRequest ( 2dfed57 ) kmd: ✨ implement ExportKeyResponse.Equals ( a5769c7 ) kmd: ✨ implement ExportKeyResponse ( f5dc29a ) kmd: ✨ implement ExportMasterKeyRequest ( b668ac9 ) kmd: ✨ implement ExportMasterKeyResponse ( eaf3066 ) kmd: ✨ implement ExportMultiSigRequest ( eab6771 ) kmd: ✨ implement ExportMultiSigResponse ( 41677c2 ) kmd: ✨ implement GenerateKeyResponse ( 82f0749 ) kmd: ✨ implement GenerateMasterKeyRequest ( 41f2b64 ) kmd: ✨ implement ImportKeyRequest ( 09c8308 ) kmd: ✨ implement ImportKeyResponse ( 338e9e7 ) kmd: ✨ implement ImportMultiSigRequest ( b8eb046 ) kmd: ✨ implement ImportMultiSigResponse ( 6a92419 ) kmd: ✨ implement InitWalletHandleTokenRequest ( 5c2bde4 ) kmd: ✨ implement InitWalletHandleTokenResponse ( 4eacfe2 ) kmd: ✨ implement KmdClient ( b37cef3 ), closes #13 kmd: ✨ implement ListKeysRequest ( 70ce0ff ) kmd: ✨ implement ListKeysResponse ( 6fb2a6d ) kmd: ✨ implement ListMultiSigRequest ( 3da753e ) kmd: ✨ implement ListMultiSigResponse ( d0a6782 ) kmd: ✨ implement ListWalletsRequest ( 91de444 ) kmd: ✨ implement ReleaseWalletHandleTokenRequest ( c6a836d ) kmd: ✨ implement ReleaseWalletHandleTokenResponse ( 3f2d081 ) kmd: ✨ implement RenameWalletRequest ( ccf7d3e ) kmd: ✨ implement RenameWalletResponse ( 1d35264 ) kmd: ✨ implement RenewWalletHandleTokenRequest ( 76269cc ) kmd: ✨ implement RenewWalletHandleTokenResponse ( d4f6a9a ) kmd: ✨ implement SignMultiSigRequest ( d535391 ) kmd: ✨ implement SignMultiSigResponse ( 0b16ac4 ) kmd: ✨ implement SignProgramMultiSigRequest ( 9460af9 ) kmd: ✨ implement SignProgramMultiSigResponse ( ee5ea0e ) kmd: ✨ implement SignProgramRequest ( c8826fa ) kmd: ✨ implement SignTransactionRequest ( 38ec667 ) kmd: ✨ implement SignTransactionResponse ( e88c293 ) kmd: ✨ implement VersionsRequest ( 90f9cb6 ) kmd: ✨ implement VersionsResponse ( 15ab570 ) kmd: ✨ implement WalletInfoResponse ( cb073e9 ) kmd: implement SignProgramResponse ( f529e2a ) msgpack: ✨ implement MessagePackReader.ReadRaw ( 0f6e28a ) msgpack: ✨ implement MessagePackWriter.WriteRaw ( 703544c ) networking: ✨ add ApiResponse API to ApiResponse<> ( b9728f9 ) serialization: ✨ add formatters for PrivateKey , PublicKey , and Signature ( 11d345b ) serialization: ✨ add support for deserializing byte[] ( 6764157 ) serialization: ✨ add support for generically serializing byte enums to strings ( bae5d83 ) serialization: ✨ finish implementing MessagePackReader.Integers and MessagePackWriter.Integers ( d669359 ) serialization: ✨ finish implementing serializer/deserializer methods in EnumFormatter ( 414991f ) serialization: ✨ implement AlgoApiObject ( 9ef3335 ) serialization: ✨ implement Timestamp ( e520962 ) serialization: 🎉 update formatter cache ( ae346d6 ) transaction: ✨ add GetSignature and ToRaw extensions to ITransaction ( 426dea6 ) transaction: ✨ add RegisterAccountOnline and RegisterAccountOffline APIs ( d52e953 ) transaction: ✨ add Transaction.AppCreate and Transaction.AppConfigure APIs ( 0dd2e75 ) transaction: ✨ add Transaction.AssetCreate Transaction.AssetConfigure and Transaction.AssetDelete API ( 4192aba ) transaction: ✨ add Transaction.AssetFreeze API ( d8b5721 ) transaction: ✨ add Transaction.Payment API ( 241ec4c ) transaction: ✨ implement address from application id ( a7df476 ) transaction: ✨ implement AssetClawback and AssetAccept ( ccb2dc6 ), closes #24 #25 transaction: ✨ implement atomic transfers ( c97fdc1 ), closes #45 transaction: ✨ use TransactionParams in Transaction constructors ( c99bd3f ) unity: make AlgoApiClient's Serializable ( a6ef8a4 ) Reverts demo: 🔥 remove bossroom assets... too big to be a sample ( d768029 ) BREAKING CHANGES Removing NativeSliceExtensions algod: AccountParticipation no longer exists transaction: All transaction constructors have been changed to use TransactionParams indexer: Removed token from IndexerClient constructor kmd: changes IKmdClient API to use parameters instead of Request objs indexer: indexer queries are now given as optional arguments remove Transaction.VerifySignature , SignedTransaction.Verify signed transactions are now represented by SignedTransaction (non-generic) renamed RawSignedTransaction -> SignedTransaction RawTransaction renamed to Transaction AlgoApiKeyAttribute -> AlgoApiFieldAttribute algod: Block renamed to BlockResponse Replace Buffer with GetUnsafePtr Algo Serializer API has completely changed... Removes the SendTransactionRaw method from AlgodClient 1.0.0-pre.7 (2021-10-29) Bug Fixes transaction: remove unused assetCloseTo param in AssetClawback ( f45dac1 ) 1.0.0-pre.6 (2021-10-28) Bug Fixes indexer: fix missing Version field in HealthCheck ( 39c3444 ) Features algod: add support for sending a group of transactions ( a7a7695 ) 1.0.0-pre.5 (2021-10-27) Bug Fixes crypto: fix libsodium not working on OSX ( 1154450 ) 1.0.0-pre.4 (2021-10-27) Features unity: make AlgoApiClient's Serializable ( 4a3aa11 ) 1.0.0-pre.3 (2021-10-25) Code Refactoring 🔥 remove NativeSliceExtensions ( c5c7715 ) BREAKING CHANGES Removing NativeSliceExtensions 1.0.0-pre.2 (2021-10-25) Bug Fixes fix empty dirs finding their way into the project ( 82afc9d ) 1.0.0-pre.1 (2021-10-24) Bug Fixes 🐛 fix RawTransaction.Equals ( f6bd889 ) 🐛 fix compile errs ( 7a03ed9 ) 🐛 fix crash on ArrayComparer.Equals ( 8ca1b06 ) 🐛 fix issues with codegen and AOT compilation ( d2f9bdc ) 🐛 fix keyworded enum types formatting as numbers ( d686c13 ) 🐛 Fix npm release ( 9e68078 ) 🐛 Fix repository ( e765589 ) 🐛 fix signatures ( 2fb4614 ) 🚩 Update package registry ( a0800bc ) ✅ Fix CI tests on Github Actions can't find libsodium ( 20c4ad5 ), closes #12 algod: 🐛 fix AlgodClient.TealCompile ( 8f5a67a ), closes #20 algod: 🐛 fix AssetParams serialization ( cbf9a69 ) algod: 🐛 fix pending transactions not returning messagepack ( dca09f8 ) algod: 🐛 fix vrfpubkey formatter lookup ( 0bb0014 ) algod: 🐛 fix vrfpubkey formatting ( 7d02443 ) algod: 🐛 replace VrfPubKey with FixedString128Bytes ( 94b02b0 ), closes #42 indexer: 🐛 add missing fields to Account model ( 5732a1d ) indexer: 🐛 add token back to indexer ( 023cb05 ) indexer: 🐛 fix HealthCheck missing serialization logic ( f5165c6 ) indexer: 🐛 fix indexer requires token ( 57f6114 ) indexer: 🐛 fix transaction formatters missing valid msgpack fields ( bf917ac ) indexer: 🔥 fix huge issue with indexer where query parameters were in body ( 7bcca20 ) indexer: ✨ fix TealValue msgpack fieldnames ( 2a6ef27 ) json: 🐛 fix PrivateKey JSON deserialization err ( cb327e0 ) json: 🐛 fix empty json objects missing begin object '{' char ( af9a2f1 ) kmd: 🎨 fix KmdClient API incorrectly using optional args ( a53998b ), closes #36 kmd: 🐛 fix GenerateKeyRequest to use wallet_handle_token not password ( a86c25e ) kmd: 🐛 fix ImportKeyRequest to use wallet_handle_token not password ( f020a03 ) kmd: 🐛 fix KmdClient.SignTransaction returning a signed transaction message ( f0a354c ) kmd: 🐛 fix WalletHandle not added to formatter cache ( 4c30939 ) kmd: 🐛 fix multisig ( fc7bcd6 ) serialization: 🐛 fix Block not having a formatter ( dec6176 ) serialization: 🐛 fix BlockResponse Serialization ( 1252a16 ) serialization: 🐛 fix JsonWriter not writing to NativeText ( 2b61659 ) serialization: 🐛 fix SignedTransaction serialization ( f4bde8d ) serialization: 🐛 fix TransactionId serialization ( b7e07ca ) serialization: 🐛 fix discrepancy between TransactionId and TransactinIdResponse ( d0c0370 ) serialization: 🐛 fix issue where fixed strings were incorrectly being added to the queryparams ( a3e6fd9 ) serialization: 🐛 fix missing AlgoApiObject on all Transaction Params ( a11015f ) transaction: 🐛 fix OnCompletion having incorrect byte values ( 514a378 ) transaction: 🐛 fix incorrect constructor in Transaction.ApplicationCall ( 98b5829 ) Code Refactoring 🔥 remove some verify methods in the transaction ( 70a8308 ) 🔥 remove unnecessary SendTransactionRaw ( 09b3bdc ) ♻️ convert all SignedTransaction<> to a single SignedTransaction ( 26fa65a ) ♻️ rename RawSignedTransaction -> SignedTransaction ( 059c6a3 ) ♻️ rename RawTransaction -> Transaction ( bade09e ) ♻️ rename AlgoApiKeyAttribute -> AlgoApiFieldAttribute ( 1b37028 ) algod: ♻️ rename Block -> BlockResponse ( eca9fb6 ) algod: ♻️ replace AccountParticipation with Transaction.KeyRegistration.Params ( 3b624ee ) kmd: ♻️ replace Request with explicit method params ( 030a0a9 ) remove .NET 4.8 requirement ( 9f55707 ), closes #19 #9 Features 👷 Add npmjs support ( 56f60f0 ) ➕ Add libsodium ios, android, and windows ( 00c9511 ) ✨ Add Account.Generate ( 95233bf ) ✨ Add Address struct ( d92b903 ) ✨ Add basic signed transaction support ( bb5900f ) ✨ Add basic transaction support for message pack serialization and deserialization ( 63243ed ) ✨ Add checksums ( 2bc2189 ) ✨ add FixedBytesFormatter ( 941eb3f ) ✨ Add IEquatable, GetHashCode for RawTransaction ( 885928e ) ✨ add LogicSig implementation ( 51a21e0 ) ✨ Add Mnemonic.FromString and Mnemonic.ToString ( d3a88c6 ) ✨ add readOnly support ( 6070565 ) ✨ Add Sha512 interop ( 86aabf5 ) ✨ Add start of Native Integration with Libsodium ( 55e325f ) ✨ Added Transaction Header, Payment ( d3ebced ) ✨ implement asset configuration transaction ( 4f9ec58 ), closes #27 ✨ implement AssetFreezeTransaction ( e3233bf ), closes #26 ✨ implement AssetTransfer Transaction ( 62a1841 ), closes #23 ✨ update AlgoApiFormatterLookup ( cc112e5 ) Add Mnemonic and Key datastructs ( 4370f74 ) Add signed transaction support for payment transactions ( c07d370 ) algod: implement Algod Client ( a7c9e90 ), closes #10 #16 #18 indexer: ♻️ rename ApplicationStateSchema -> StateSchema ( 7b02f70 ) indexer: ✨ add IIndexerClient ( 093153e ) indexer: ✨ implement AccountQuery ( bda5301 ) indexer: ✨ implement AccountResponse ( 09d7fb9 ) indexer: ✨ implement AccountsQuery ( e7d56e2 ) indexer: ✨ implement AccountsResponse ( ea01260 ) indexer: ✨ implement AddressRole ( 3325b60 ) indexer: ✨ implement Application ( 144d04d ) indexer: ✨ implement ApplicationLocalState ( 9ad284f ) indexer: ✨ implement ApplicationQuery ( de02370 ) indexer: ✨ implement ApplicationResponse ( fa34b20 ) indexer: ✨ implement ApplicationsQuery ( 914ca8b ) indexer: ✨ implement ApplicationsResponse ( e342cdc ) indexer: ✨ implement Asset ( 161f361 ) indexer: ✨ implement AssetHolding ( 203785a ) indexer: ✨ implement AssetParams ( ac78bfe ) indexer: ✨ implement AssetQuery ( c8eda94 ) indexer: ✨ implement AssetResponse ( cd8e48f ) indexer: ✨ implement AssetsResponse ( ade022d ) indexer: ✨ implement BalancesQuery ( b8f167e ) indexer: ✨ implement BalancesResponse ( c7ae299 ) indexer: ✨ implement Block ( 2533f24 ) indexer: ✨ implement BlockRewards ( bb49cb0 ) indexer: ✨ implement BlockUpgradeStatus ( e9a0423 ) indexer: ✨ implement BlockUpgradeVote ( de5e72e ) indexer: ✨ implement ErrorResponse msgpack fields ( 358e6a6 ) indexer: ✨ implement EvalDelta msgpack fields ( 45b2df2 ) indexer: ✨ implement EvalDeltaKeyValue msgpack fields ( bd3c230 ) indexer: ✨ implement HealthCheck ( a164577 ) indexer: ✨ implement IndexerClient.GetAccount ( 88ba11a ) indexer: ✨ implement IndexerClient.GetAccounts ( 2e427f1 ) indexer: ✨ implement IndexerClient.GetHealth ( 0883ff0 ) indexer: ✨ implement IndexerClient ( d7fd35a ) indexer: ✨ implement LogicSig json fields ( b22297c ) indexer: ✨ implement MiniAssetHolding ( 59941b8 ) indexer: ✨ implement MultiSig.SubSignature ( ef526ec ) indexer: ✨ implement MultiSig ( df959a7 ) indexer: ✨ implement OnCompletion ( 04227b9 ) indexer: ✨ implement TealKeyValue msgPack fields ( e521553 ) indexer: ✨ implement Transaction.ApplicationCall ( 5a5e819 ) indexer: ✨ implement Transaction.ApplicationCall model fields ( 69d64e8 ) indexer: ✨ implement Transaction.AssetConfiguration model fields ( baf7c2e ) indexer: ✨ implement Transaction.AssetFreeze model fields ( be45b90 ) indexer: ✨ implement Transaction.AssetTransfer model fields ( 84aa15e ) indexer: ✨ implement Transaction.KeyRegistration ( 69e004e ) indexer: ✨ implement Transaction.KeyRegistration model fields ( 44029ca ) indexer: ✨ implement TransactionResponse ( 430a1fa ) indexer: ✨ implement TransactionsQuery ( 9ec7f4f ) indexer: ✨ implement AssetsQuery ( e8d6e55 ) indexer: ✨ implement TransactionsResponse ( e1a46f8 ) json: ✨ implement JsonReader.Skip ( 0d6e6ab ) json: ✨ implement JsonWriter.WriteRaw ( 1643bad ) json: ✨ implement ReadRaw ( 384abf8 ) kmd: ✨ add Error to ErrorMessage which is used for kmd ( 3c37a94 ) kmd: ✨ implement APIV1DELETEKeyResponse ( 81f6c1e ) kmd: ✨ implement APIV1DELETEMultisigResponse ( 4c1d6db ) kmd: ✨ implement APIV1GETWalletsResponse ( 9025e9a ) kmd: ✨ implement APIV1Wallet ( e514183 ) kmd: ✨ implement APIV1WalletHandle ( 8bae4b4 ) kmd: ✨ implement CreateWalletRequest ( 63882eb ) kmd: ✨ implement CreateWalletRequest api fields ( f32094f ) kmd: ✨ implement CreateWalletResponse ( 2579231 ) kmd: ✨ implement DeleteKeyRequest ( 5c89319 ) kmd: ✨ implement DeleteMultiSigRequest ( 15afda0 ) kmd: ✨ implement ExportKeyRequest ( a8b1131 ) kmd: ✨ implement ExportKeyResponse.Equals ( 010e656 ) kmd: ✨ implement ExportKeyResponse ( db01766 ) kmd: ✨ implement ExportMasterKeyRequest ( 2a8ed81 ) kmd: ✨ implement ExportMasterKeyResponse ( 2843847 ) kmd: ✨ implement ExportMultiSigRequest ( e67c925 ) kmd: ✨ implement ExportMultiSigResponse ( bac0edb ) kmd: ✨ implement GenerateKeyResponse ( 1d6795f ) kmd: ✨ implement GenerateMasterKeyRequest ( 6503dd8 ) kmd: ✨ implement ImportKeyRequest ( 521f7c1 ) kmd: ✨ implement ImportKeyResponse ( 83798a6 ) kmd: ✨ implement ImportMultiSigRequest ( 5eb5d42 ) kmd: ✨ implement ImportMultiSigResponse ( 001f3ea ) kmd: ✨ implement InitWalletHandleTokenRequest ( 36dd459 ) kmd: ✨ implement InitWalletHandleTokenResponse ( 26db31b ) kmd: ✨ implement KmdClient ( 7433060 ), closes #13 kmd: ✨ implement ListKeysRequest ( b55fe67 ) kmd: ✨ implement ListKeysResponse ( 0096bd5 ) kmd: ✨ implement ListMultiSigRequest ( ce667d1 ) kmd: ✨ implement ListMultiSigResponse ( 550a0ed ) kmd: ✨ implement ListWalletsRequest ( b3b5023 ) kmd: ✨ implement ReleaseWalletHandleTokenRequest ( ff024de ) kmd: ✨ implement ReleaseWalletHandleTokenResponse ( 719c393 ) kmd: ✨ implement RenameWalletRequest ( c5a9f3b ) kmd: ✨ implement RenameWalletResponse ( 6e5b55e ) kmd: ✨ implement RenewWalletHandleTokenRequest ( 0a0d589 ) kmd: ✨ implement RenewWalletHandleTokenResponse ( d85e5f5 ) kmd: ✨ implement SignMultiSigRequest ( e1dfee9 ) kmd: ✨ implement SignMultiSigResponse ( 83ea09f ) kmd: ✨ implement SignProgramMultiSigRequest ( 063ed1d ) kmd: ✨ implement SignProgramMultiSigResponse ( b5e5b5e ) kmd: ✨ implement SignProgramRequest ( 52ccb07 ) kmd: ✨ implement SignTransactionRequest ( c542582 ) kmd: ✨ implement SignTransactionResponse ( d7080ab ) kmd: ✨ implement VersionsRequest ( f70f0fd ) kmd: ✨ implement VersionsResponse ( 7c85ec2 ) kmd: ✨ implement WalletInfoResponse ( 6b3edc7 ) kmd: implement SignProgramResponse ( 978a31d ) msgpack: ✨ implement MessagePackReader.ReadRaw ( c2dec22 ) msgpack: ✨ implement MessagePackWriter.WriteRaw ( d5ae90e ) networking: ✨ add ApiResponse API to ApiResponse<> ( 8556c53 ) serialization: ✨ add formatters for PrivateKey , PublicKey , and Signature ( 2dedd67 ) serialization: ✨ add support for deserializing byte[] ( 3ef497f ) serialization: ✨ add support for generically serializing byte enums to strings ( 424c8b4 ) serialization: ✨ finish implementing MessagePackReader.Integers and MessagePackWriter.Integers ( 37d8f20 ) serialization: ✨ finish implementing serializer/deserializer methods in EnumFormatter ( 3af569f ) serialization: ✨ implement AlgoApiObject ( 74456b6 ) serialization: ✨ implement Timestamp ( cc1159b ) serialization: 🎉 update formatter cache ( 029f841 ) transaction: ✨ add GetSignature and ToRaw extensions to ITransaction ( e4a3ad5 ) transaction: ✨ add RegisterAccountOnline and RegisterAccountOffline APIs ( 71d42c1 ) transaction: ✨ add Transaction.AppCreate and Transaction.AppConfigure APIs ( c64469a ) transaction: ✨ add Transaction.AssetCreate Transaction.AssetConfigure and Transaction.AssetDelete API ( 259b37b ) transaction: ✨ add Transaction.AssetFreeze API ( 160f837 ) transaction: ✨ add Transaction.Payment API ( 88e918d ) transaction: ✨ implement address from application id ( 9e3c883 ) transaction: ✨ implement AssetClawback and AssetAccept ( c3578ec ), closes #24 #25 transaction: ✨ implement atomic transfers ( 21f7ee3 ), closes #45 transaction: ✨ use TransactionParams in Transaction constructors ( a966320 ) Reverts demo: 🔥 remove bossroom assets... too big to be a sample ( e53192d ) BREAKING CHANGES algod: AccountParticipation no longer exists transaction: All transaction constructors have been changed to use TransactionParams indexer: Removed token from IndexerClient constructor kmd: changes IKmdClient API to use parameters instead of Request objs indexer: indexer queries are now given as optional arguments remove Transaction.VerifySignature , SignedTransaction.Verify signed transactions are now represented by SignedTransaction (non-generic) renamed RawSignedTransaction -> SignedTransaction RawTransaction renamed to Transaction AlgoApiKeyAttribute -> AlgoApiFieldAttribute algod: Block renamed to BlockResponse Replace Buffer with GetUnsafePtr Algo Serializer API has completely changed... Removes the SendTransactionRaw method from AlgodClient 1.0.0-exp.27 (2021-10-24) Bug Fixes algod: 🐛 fix AlgodClient.TealCompile ( 8f5a67a ), closes #20 algod: 🐛 fix AssetParams serialization ( cbf9a69 ) algod: 🐛 fix vrfpubkey formatter lookup ( 0bb0014 ) algod: 🐛 fix vrfpubkey formatting ( 7d02443 ) algod: 🐛 replace VrfPubKey with FixedString128Bytes ( 94b02b0 ), closes #42 kmd: 🎨 fix KmdClient API incorrectly using optional args ( a53998b ), closes #36 serialization: 🐛 fix TransactionId serialization ( b7e07ca ) transaction: 🐛 fix OnCompletion having incorrect byte values ( 514a378 ) transaction: 🐛 fix incorrect constructor in Transaction.ApplicationCall ( 98b5829 ) Code Refactoring algod: ♻️ replace AccountParticipation with Transaction.KeyRegistration.Params ( 3b624ee ) Features transaction: ✨ add RegisterAccountOnline and RegisterAccountOffline APIs ( 71d42c1 ) transaction: ✨ add Transaction.AppCreate and Transaction.AppConfigure APIs ( c64469a ) transaction: ✨ add Transaction.AssetCreate Transaction.AssetConfigure and Transaction.AssetDelete API ( 259b37b ) transaction: ✨ add Transaction.AssetFreeze API ( 160f837 ) transaction: ✨ add Transaction.Payment API ( 88e918d ) transaction: ✨ implement address from application id ( 9e3c883 ) transaction: ✨ implement AssetClawback and AssetAccept ( c3578ec ), closes #24 #25 transaction: ✨ implement atomic transfers ( 21f7ee3 ), closes #45 transaction: ✨ use TransactionParams in Transaction constructors ( a966320 ) BREAKING CHANGES algod: AccountParticipation no longer exists transaction: All transaction constructors have been changed to use TransactionParams 1.0.0-exp.27 (2021-10-23) Bug Fixes algod: 🐛 fix AlgodClient.TealCompile ( 8f5a67a ), closes #20 algod: 🐛 fix AssetParams serialization ( cbf9a69 ) algod: 🐛 fix vrfpubkey formatter lookup ( 0bb0014 ) algod: 🐛 fix vrfpubkey formatting ( 7d02443 ) algod: 🐛 replace VrfPubKey with FixedString128Bytes ( 94b02b0 ), closes #42 kmd: 🎨 fix KmdClient API incorrectly using optional args ( a53998b ), closes #36 serialization: 🐛 fix TransactionId serialization ( b7e07ca ) transaction: 🐛 fix OnCompletion having incorrect byte values ( 514a378 ) transaction: 🐛 fix incorrect constructor in Transaction.ApplicationCall ( 98b5829 ) Code Refactoring algod: ♻️ replace AccountParticipation with Transaction.KeyRegistration.Params ( 3b624ee ) Features transaction: ✨ add RegisterAccountOnline and RegisterAccountOffline APIs ( 71d42c1 ) transaction: ✨ add Transaction.AppCreate and Transaction.AppConfigure APIs ( c64469a ) transaction: ✨ add Transaction.AssetCreate Transaction.AssetConfigure and Transaction.AssetDelete API ( 259b37b ) transaction: ✨ add Transaction.AssetFreeze API ( 160f837 ) transaction: ✨ add Transaction.Payment API ( 88e918d ) transaction: ✨ implement address from application id ( 9e3c883 ) transaction: ✨ implement AssetClawback and AssetAccept ( c3578ec ), closes #24 #25 transaction: ✨ implement atomic transfers ( 21f7ee3 ), closes #45 transaction: ✨ use TransactionParams in Transaction constructors ( a966320 ) BREAKING CHANGES algod: AccountParticipation no longer exists transaction: All transaction constructors have been changed to use TransactionParams 1.0.0-exp.26 (2021-10-13) Bug Fixes indexer: 🐛 add token back to indexer ( 023cb05 ) indexer: 🐛 fix indexer requires token ( 57f6114 ) json: 🐛 fix PrivateKey JSON deserialization err ( cb327e0 ) json: 🐛 fix empty json objects missing begin object '{' char ( af9a2f1 ) kmd: 🐛 fix GenerateKeyRequest to use wallet_handle_token not password ( a86c25e ) kmd: 🐛 fix ImportKeyRequest to use wallet_handle_token not password ( f020a03 ) kmd: 🐛 fix KmdClient.SignTransaction returning a signed transaction message ( f0a354c ) kmd: 🐛 fix WalletHandle not added to formatter cache ( 4c30939 ) kmd: 🐛 fix multisig ( fc7bcd6 ) Code Refactoring kmd: ♻️ replace Request with explicit method params ( 030a0a9 ) Features json: ✨ implement JsonReader.Skip ( 0d6e6ab ) serialization: ✨ add support for deserializing byte[] ( 3ef497f ) transaction: ✨ add GetSignature and ToRaw extensions to ITransaction ( e4a3ad5 ) BREAKING CHANGES indexer: Removed token from IndexerClient constructor kmd: changes IKmdClient API to use parameters instead of Request objs 1.0.0-exp.25 (2021-10-08) Bug Fixes 🐛 fix keyworded enum types formatting as numbers ( d686c13 ) algod: 🐛 fix pending transactions not returning messagepack ( dca09f8 ) indexer: 🐛 add missing fields to Account model ( 5732a1d ) indexer: 🐛 fix HealthCheck missing serialization logic ( f5165c6 ) indexer: 🔥 fix huge issue with indexer where query parameters were in body ( 7bcca20 ) serialization: 🐛 fix Block not having a formatter ( dec6176 ) serialization: 🐛 fix BlockResponse Serialization ( 1252a16 ) serialization: 🐛 fix JsonWriter not writing to NativeText ( 2b61659 ) serialization: 🐛 fix discrepancy between TransactionId and TransactinIdResponse ( d0c0370 ) serialization: 🐛 fix issue where fixed strings were incorrectly being added to the queryparams ( a3e6fd9 ) serialization: 🐛 fix missing AlgoApiObject on all Transaction Params ( a11015f ) Features networking: ✨ add ApiResponse API to ApiResponse<> ( 8556c53 ) serialization: ✨ add support for generically serializing byte enums to strings ( 424c8b4 ) serialization: ✨ finish implementing MessagePackReader.Integers and MessagePackWriter.Integers ( 37d8f20 ) serialization: ✨ finish implementing serializer/deserializer methods in EnumFormatter ( 3af569f ) Reverts demo: 🔥 remove bossroom assets... too big to be a sample ( e53192d ) BREAKING CHANGES indexer: indexer queries are now given as optional arguments 1.0.0-exp.24 (2021-10-05) Bug Fixes 🐛 fix signatures ( 2fb4614 ) Features kmd: ✨ add Error to ErrorMessage which is used for kmd ( 3c37a94 ) kmd: ✨ implement APIV1DELETEKeyResponse ( 81f6c1e ) kmd: ✨ implement APIV1DELETEMultisigResponse ( 4c1d6db ) kmd: ✨ implement APIV1GETWalletsResponse ( 9025e9a ) kmd: ✨ implement APIV1Wallet ( e514183 ) kmd: ✨ implement APIV1WalletHandle ( 8bae4b4 ) kmd: ✨ implement CreateWalletRequest ( 63882eb ) kmd: ✨ implement CreateWalletRequest api fields ( f32094f ) kmd: ✨ implement CreateWalletResponse ( 2579231 ) kmd: ✨ implement DeleteKeyRequest ( 5c89319 ) kmd: ✨ implement DeleteMultiSigRequest ( 15afda0 ) kmd: ✨ implement ExportKeyRequest ( a8b1131 ) kmd: ✨ implement ExportKeyResponse.Equals ( 010e656 ) kmd: ✨ implement ExportKeyResponse ( db01766 ) kmd: ✨ implement ExportMasterKeyRequest ( 2a8ed81 ) kmd: ✨ implement ExportMasterKeyResponse ( 2843847 ) kmd: ✨ implement ExportMultiSigRequest ( e67c925 ) kmd: ✨ implement ExportMultiSigResponse ( bac0edb ) kmd: ✨ implement GenerateKeyResponse ( 1d6795f ) kmd: ✨ implement GenerateMasterKeyRequest ( 6503dd8 ) kmd: ✨ implement ImportKeyRequest ( 521f7c1 ) kmd: ✨ implement ImportKeyResponse ( 83798a6 ) kmd: ✨ implement ImportMultiSigRequest ( 5eb5d42 ) kmd: ✨ implement ImportMultiSigResponse ( 001f3ea ) kmd: ✨ implement InitWalletHandleTokenRequest ( 36dd459 ) kmd: ✨ implement InitWalletHandleTokenResponse ( 26db31b ) kmd: ✨ implement KmdClient ( 7433060 ), closes #13 kmd: ✨ implement ListKeysRequest ( b55fe67 ) kmd: ✨ implement ListKeysResponse ( 0096bd5 ) kmd: ✨ implement ListMultiSigRequest ( ce667d1 ) kmd: ✨ implement ListMultiSigResponse ( 550a0ed ) kmd: ✨ implement ListWalletsRequest ( b3b5023 ) kmd: ✨ implement ReleaseWalletHandleTokenRequest ( ff024de ) kmd: ✨ implement ReleaseWalletHandleTokenResponse ( 719c393 ) kmd: ✨ implement RenameWalletRequest ( c5a9f3b ) kmd: ✨ implement RenameWalletResponse ( 6e5b55e ) kmd: ✨ implement RenewWalletHandleTokenRequest ( 0a0d589 ) kmd: ✨ implement RenewWalletHandleTokenResponse ( d85e5f5 ) kmd: ✨ implement SignMultiSigRequest ( e1dfee9 ) kmd: ✨ implement SignMultiSigResponse ( 83ea09f ) kmd: ✨ implement SignProgramMultiSigRequest ( 063ed1d ) kmd: ✨ implement SignProgramMultiSigResponse ( b5e5b5e ) kmd: ✨ implement SignProgramRequest ( 52ccb07 ) kmd: ✨ implement SignTransactionRequest ( c542582 ) kmd: ✨ implement SignTransactionResponse ( d7080ab ) kmd: ✨ implement VersionsRequest ( f70f0fd ) kmd: ✨ implement VersionsResponse ( 7c85ec2 ) kmd: ✨ implement WalletInfoResponse ( 6b3edc7 ) kmd: implement SignProgramResponse ( 978a31d ) serialization: ✨ add formatters for PrivateKey , PublicKey , and Signature ( 2dedd67 ) serialization: 🎉 update formatter cache ( 029f841 ) 1.0.0-exp.23 (2021-10-03) Bug Fixes 🐛 fix RawTransaction.Equals ( f6bd889 ) indexer: 🐛 fix transaction formatters missing valid msgpack fields ( bf917ac ) indexer: ✨ fix TealValue msgpack fieldnames ( 2a6ef27 ) serialization: 🐛 fix SignedTransaction serialization ( f4bde8d ) Code Refactoring 🔥 remove some verify methods in the transaction ( 70a8308 ) ♻️ convert all SignedTransaction<> to a single SignedTransaction ( 26fa65a ) ♻️ rename RawSignedTransaction -> SignedTransaction ( 059c6a3 ) ♻️ rename RawTransaction -> Transaction ( bade09e ) ♻️ rename AlgoApiKeyAttribute -> AlgoApiFieldAttribute ( 1b37028 ) algod: ♻️ rename Block -> BlockResponse ( eca9fb6 ) Features ✨ add readOnly support ( 6070565 ) indexer: ♻️ rename ApplicationStateSchema -> StateSchema ( 7b02f70 ) indexer: ✨ add IIndexerClient ( 093153e ) indexer: ✨ implement AccountQuery ( bda5301 ) indexer: ✨ implement AccountResponse ( 09d7fb9 ) indexer: ✨ implement AccountsQuery ( e7d56e2 ) indexer: ✨ implement AccountsResponse ( ea01260 ) indexer: ✨ implement AddressRole ( 3325b60 ) indexer: ✨ implement Application ( 144d04d ) indexer: ✨ implement ApplicationLocalState ( 9ad284f ) indexer: ✨ implement ApplicationQuery ( de02370 ) indexer: ✨ implement ApplicationResponse ( fa34b20 ) indexer: ✨ implement ApplicationsQuery ( 914ca8b ) indexer: ✨ implement ApplicationsResponse ( e342cdc ) indexer: ✨ implement Asset ( 161f361 ) indexer: ✨ implement AssetHolding ( 203785a ) indexer: ✨ implement AssetParams ( ac78bfe ) indexer: ✨ implement AssetQuery ( c8eda94 ) indexer: ✨ implement AssetResponse ( cd8e48f ) indexer: ✨ implement AssetsResponse ( ade022d ) indexer: ✨ implement BalancesQuery ( b8f167e ) indexer: ✨ implement BalancesResponse ( c7ae299 ) indexer: ✨ implement Block ( 2533f24 ) indexer: ✨ implement BlockRewards ( bb49cb0 ) indexer: ✨ implement BlockUpgradeStatus ( e9a0423 ) indexer: ✨ implement BlockUpgradeVote ( de5e72e ) indexer: ✨ implement ErrorResponse msgpack fields ( 358e6a6 ) indexer: ✨ implement EvalDelta msgpack fields ( 45b2df2 ) indexer: ✨ implement EvalDeltaKeyValue msgpack fields ( bd3c230 ) indexer: ✨ implement HealthCheck ( a164577 ) indexer: ✨ implement IndexerClient.GetAccount ( 88ba11a ) indexer: ✨ implement IndexerClient.GetAccounts ( 2e427f1 ) indexer: ✨ implement IndexerClient.GetHealth ( 0883ff0 ) indexer: ✨ implement IndexerClient ( d7fd35a ) indexer: ✨ implement LogicSig json fields ( b22297c ) indexer: ✨ implement MiniAssetHolding ( 59941b8 ) indexer: ✨ implement MultiSig.SubSignature ( ef526ec ) indexer: ✨ implement MultiSig ( df959a7 ) indexer: ✨ implement OnCompletion ( 04227b9 ) indexer: ✨ implement TealKeyValue msgPack fields ( e521553 ) indexer: ✨ implement Transaction.ApplicationCall ( 5a5e819 ) indexer: ✨ implement Transaction.ApplicationCall model fields ( 69d64e8 ) indexer: ✨ implement Transaction.AssetConfiguration model fields ( baf7c2e ) indexer: ✨ implement Transaction.AssetFreeze model fields ( be45b90 ) indexer: ✨ implement Transaction.AssetTransfer model fields ( 84aa15e ) indexer: ✨ implement Transaction.KeyRegistration ( 69e004e ) indexer: ✨ implement Transaction.KeyRegistration model fields ( 44029ca ) indexer: ✨ implement TransactionResponse ( 430a1fa ) indexer: ✨ implement TransactionsQuery ( 9ec7f4f ) indexer: ✨ implement AssetsQuery ( e8d6e55 ) indexer: ✨ implement TransactionsResponse ( e1a46f8 ) json: ✨ implement JsonWriter.WriteRaw ( 1643bad ) json: ✨ implement ReadRaw ( 384abf8 ) msgpack: ✨ implement MessagePackReader.ReadRaw ( c2dec22 ) msgpack: ✨ implement MessagePackWriter.WriteRaw ( d5ae90e ) serialization: ✨ implement AlgoApiObject ( 74456b6 ) serialization: ✨ implement Timestamp ( cc1159b ) BREAKING CHANGES remove Transaction.VerifySignature , SignedTransaction.Verify signed transactions are now represented by SignedTransaction (non-generic) renamed RawSignedTransaction -> SignedTransaction RawTransaction renamed to Transaction AlgoApiKeyAttribute -> AlgoApiFieldAttribute algod: Block renamed to BlockResponse 1.0.0-exp.22 (2021-09-28) Bug Fixes 🐛 fix crash on ArrayComparer.Equals ( 8ca1b06 ) 🐛 fix issues with codegen and AOT compilation ( d2f9bdc ) 1.0.0-exp.21 (2021-09-28) Features ✨ update AlgoApiFormatterLookup ( cc112e5 ) 1.0.0-exp.20 (2021-09-28) Features ✨ add FixedBytesFormatter ( 941eb3f ) BREAKING CHANGES Replace Buffer with GetUnsafePtr 1.0.0-exp.19 (2021-09-25) Bug Fixes 🐛 fix compile errs ( 7a03ed9 ) 1.0.0-exp.18 (2021-09-25) Features ✨ add LogicSig implementation ( 51a21e0 ) 1.0.0-exp.17 (2021-09-20) Features ✨ implement asset configuration transaction ( 4f9ec58 ), closes #27 ✨ implement AssetFreezeTransaction ( e3233bf ), closes #26 ✨ implement AssetTransfer Transaction ( 62a1841 ), closes #23 1.0.0-exp.16 (2021-09-19) Code Refactoring remove .NET 4.8 requirement ( 9f55707 ), closes #19 #9 BREAKING CHANGES Algo Serializer API has completely changed... 1.0.0-exp.15 (2021-09-03) Code Refactoring 🔥 remove unnecessary SendTransactionRaw ( 09b3bdc ) BREAKING CHANGES Removes the SendTransactionRaw method from AlgodClient 1.0.0-exp.14 (2021-08-30) Features algod: implement Algod Client ( a7c9e90 ), closes #10 #16 #18 1.0.0-exp.13 (2021-08-07) Bug Fixes ✅ Fix CI tests on Github Actions can't find libsodium ( 20c4ad5 ), closes #12 1.0.0-exp.12 (2021-08-04) Features Add signed transaction support for payment transactions ( c07d370 ) 1.0.0-exp.11 (2021-08-03) Features ✨ Add basic signed transaction support ( bb5900f ) 1.0.0-exp.10 (2021-08-03) Features ✨ Add IEquatable, GetHashCode for RawTransaction ( 885928e ) 1.0.0-exp.9 (2021-08-02) Features ✨ Add basic transaction support for message pack serialization and deserialization ( 63243ed ) 1.0.0-exp.8 (2021-07-25) Features ✨ Added Transaction Header, Payment ( d3ebced ) 1.0.0-exp.7 (2021-07-24) Features ✨ Add Account.Generate ( 95233bf ) 1.0.0-exp.6 (2021-07-24) Features 👷 Add npmjs support ( 56f60f0 ) ➕ Add libsodium ios, android, and windows ( 00c9511 ) ✨ Add Address struct ( d92b903 ) ✨ Add checksums ( 2bc2189 ) ✨ Add Sha512 interop ( 86aabf5 ) ✨ Add start of Native Integration with Libsodium ( 55e325f ) 1.0.0-exp.6 (2021-07-23) Features 👷 Add npmjs support ( 56f60f0 ) ➕ Add libsodium ios, android, and windows ( 00c9511 ) ✨ Add checksums ( 2bc2189 ) ✨ Add Sha512 interop ( 86aabf5 ) ✨ Add start of Native Integration with Libsodium ( 55e325f ) 1.0.0-exp.6 (2021-07-21) Features 👷 Add npmjs support ( 56f60f0 ) ➕ Add libsodium ios, android, and windows ( 00c9511 ) ✨ Add Sha512 interop ( 86aabf5 ) ✨ Add start of Native Integration with Libsodium ( 55e325f ) 1.0.0-exp.6 (2021-07-20) Features 👷 Add npmjs support ( 56f60f0 ) ➕ Add libsodium ios, android, and windows ( 00c9511 ) ✨ Add start of Native Integration with Libsodium ( 55e325f ) 1.0.0-exp.6 (2021-07-20) Features 👷 Add npmjs support ( 56f60f0 ) ➕ Add libsodium ios, android, and windows ( 00c9511 ) ✨ Add start of Native Integration with Libsodium ( 55e325f ) 1.0.0-exp.5 (2021-07-12) Bug Fixes 🐛 Fix repository ( e765589 ) 1.0.0-exp.4 (2021-07-12) Bug Fixes 🐛 Fix npm release ( 9e68078 ) 1.0.0-exp.3 (2021-07-12) Bug Fixes 🚩 Update package registry ( a0800bc ) 1.0.0-exp.2 (2021-07-12) Features ✨ Add Mnemonic.FromString and Mnemonic.ToString ( d3a88c6 ) 1.0.0-exp.1 (2021-05-18) Features Add Mnemonic and Key datastructs ( 4370f74 )"
  },
  "index.html": {
    "href": "index.html",
    "title": "Unity Algorand SDK | Unity Algorand SDK",
    "keywords": "Unity Algorand SDK Caution This package has not been audited and isn't suitable for production use. Algorand is a Pure Proof-of-Stake blockchain overseen by the Algorand Foundation. This Unity software package allows you to create and sign transactions, use Algorand's REST APIs , and connect to any Algorand wallet supporting WalletConnect . Supported Targets Unity Version Windows Mac OS Linux Android iOS WebGL 2020.3 ✅ ✅ ✅ ✅ ✅ ✅ 2021.2 ✅ ✅ ✅ ✅ ✅ ✅ Installation This SDK is provided as a UPM package in the following locations: Open UPM NPM Registry Open UPM The easiest way to install is to use Open UPM as it manages your scopes automatically. You can install Open UPM here . Then use the Open UPM CLI at the root of your Unity project to install. > cd <your unity project> > openupm add com.careboo.unity-algorand-sdk Manually Adding UPM Scopes If you don't want to use Open UPM, it's straightforward to manually add the UPM registry scopes required for this package. In the Unity Editor, click on Edit -> Project Settings -> Package Manager. Under the Scoped Registries tab, click the + button to add a new Scoped Registry. Set the following values for the Scoped Registry: Name: Open UPM URL: https://package.openupm.com Scopes: - com.cysharp.unitask - com.careboo.unity-algorand-sdk Click on Window -> Package Manager, and the Algorand SDK package should appear in the Packages: My Registries tab. Install the latest version of the Algorand SDK . For more details, see Unity's official documentation on Scoped Registries . Unity Asset Store This SDK will soon be available in the Unity Asset Store . Getting Started Documentation The Quickstart Guide is the best place to start. You can view the documentation website for a specific version or branch at https://careboo.github.io/unity-algorand-sdk/{version}/ e.g. https://careboo.github.io/unity-algorand-sdk/main/ . Demo There's a Demo game you can try out in the demo branch ."
  },
  "license/LICENSE.html": {
    "href": "license/LICENSE.html",
    "title": "| Unity Algorand SDK",
    "keywords": "MIT License Copyright (c) 2020-2022 CareBoo Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "license/Third Party Notices.html": {
    "href": "license/Third Party Notices.html",
    "title": "| Unity Algorand SDK",
    "keywords": "This package contains third-party software components governed by the license(s) indicated below: Component Name: libsodium License Type: ISC License Copyright (c) 2013-2022 Frank Denis Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. Component Name: tweetnacl-js License Type: The Unlicense This is free and unencumbered software released into the public domain. Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means. In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. For more information, please refer to http://unlicense.org Component Name: js-sha512 License Type: MIT Copyright 2014-2018 Chen, Yi-Cyuan Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Component Name: WebSocket transport for Netcode for GameObjects. License Type: MIT Copyright (c) 2021 Unity Technologies Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Component Name: websocket-sharp License Type: MIT Copyright (c) 2010-2022 sta.blockhead Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Component Name: ZXing.Net License Type: Apache License 2.0 Copyright 2013-2022 micjahn Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."
  },
  "manual/quickstart.html": {
    "href": "manual/quickstart.html",
    "title": "Quickstart | Unity Algorand SDK",
    "keywords": "Quickstart Create an Account The following code will generate a new account: // using AlgoSdk; // using UnityEngine; var (privateKey, address) = Account.GenerateAccount(); Debug.Log($\"My address: {address}\"); Debug.Log($\"My private key: {privateKey}\"); Debug.Log($\"My passphrase (mnemonic): {privateKey.ToMnemonic()}\"); Save your address and passphrase in a separate place. Warning Never share your private key or mnemonic. Production environments require stringent private key management. For more information on key management in community Wallets, click here . For the Algorand open source wallet , click here . Fund the Account Before sending transactions to the Algorand network, the account must be funded to cover the minimal transaction fees that exist on Algorand. To fund the account use the Algorand faucet . Connect to a Node Note Prerequisites: Docker Compose Git The easiest way to access a node in development is via the Algorand Sandbox. > git clone https://github.com/algorand/sandbox.git > cd sandbox > ./sandbox up testnet The testnet option will configure the network to use the testnet. Warning The sandbox installation may take a few minutes to startup in order to catch up to the current block round. To learn more about fast catchup, see Sync Node Network using Fast Catchup Once the network is up and running, you should be able to connect to the algod service. Verify that the node is healthy and you can connect to it. Create a new AlgodCheck component that creates an AlgodClient on Start() and makes a GetHealth() request. using AlgoSdk; using Cysharp.Threading.Tasks; using UnityEngine; public class AlgodCheck : MonoBehaviour { AlgodClient algod; public void Start() { algod = new AlgodClient( address: \"http://localhost:4001\", token: \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\" ); CheckAlgodStatus().Forget(); } public async UniTaskVoid CheckAlgodStatus() { var response = await algod.GetHealth(); if (response.Error.IsError) { Debug.LogError(response.Error.Message); } else { Debug.Log(\"Connected to algod!\"); } } } Add the AlgodCheck component to a GameObject in a new scene, and press Play . You should see the Connected to algod! message in the editor console. If you cannot connect, or the node is not healthy, then you should see an error message in the console. Note It's possible the node you're connecting to may require different HTTP request headers for authentication. In that case you can specify the explicit HTTP headers using key-value string tuples: algod = new AlgodClient( \"https://testnet-algorand.api.purestake.io/ps2\", (\"x-api-key\", \"my-super-secret-api-key\") ); Check Your Balance To verify your funds were added to your account, add the following method to your AlgodCheck script. Replace the address with the address of the account you generated earlier. public async UniTaskVoid CheckBalance() { var accountAddress = \"FLWI6UNTQ6CXTKSHOC7QPHYD2L3JVLIPWKNR5FECHX46VOE3DMY24BJASY\"; var (error, accountInfo) = await algod.GetAccountInformation(accountAddress); if (error.IsError) { Debug.LogError(error.Message); } else { Debug.Log($\"My account has {accountInfo.Amount / 1_000_000} algos\"); } } Then call it in your Start() method. public void Start() { // [...] CheckBalance().Forget(); } Your balance should appear in the editor console when you press Play again. Send a Transaction The process for sending a transaction will look like Get the suggested TransactionParams from AlgodClient.GetSuggestedParams() . This contains information like the fee, the hash of the genesis block, and the latest round number. Create a transaction using the static creation methods found in the Transaction class. For a payment transaction, we're going to use Transaction.Payment(Address sender, TransactionParams txnParams, Address receiver, ulong amount) . Sign the transaction using either a secret key or a wallet. Send the signed transaction with AlgodClient.SendTransaction<T>(Signed<T> txn) and save its TransactionId . Wait for the transaction to be confirmed by polling AlgodClient.GetPendingTransaction(TransactionId txid) until it returns PendingTransaction.ConfirmedRound > 0 marking that it was confirmed. Add a new method, MakePayment(PrivateKey privateKey, Address receiver, ulong amount) that will send a PaymentTxn . public async UniTaskVoid MakePayment(PrivateKey privateKey, Address receiver, ulong amount) { // Get the secret key handle and the public key of the sender account. // We'll use the secret key handle to sign the transaction. // The public key will be used as the sender's Address. using var keyPair = privateKey.ToKeyPair(); // Get the suggested transaction params var (txnParamsError, txnParams) = await algod.GetSuggestedParams(); if (txnParamsError.IsError) { Debug.LogError(txnParamsError.Message); return; } // Construct and sign the payment transaction var paymentTxn = Transaction.Payment( sender: keyPair.PublicKey, txnParams: txnParams, receiver: receiver, amount: amount ); var signedTxn = paymentTxn.Sign(keyPair.SecretKey); // Send the transaction var (sendTxnError, txid) = await algod.SendTransaction(signedTxn); if (sendTxnError.IsError) { Debug.LogError(sendTxnError.Message); return; } // Wait for the transaction to be confirmed PendingTransaction pending = default; ErrorResponse error = default; while (pending.ConfirmedRound == 0) { (error, pending) = await algod.GetPendingTransaction(txid); if (error.IsError) { Debug.LogError(error.Message); return; } await UniTask.Delay(1000); } Debug.Log($\"Successfully made payment! Confirmed on round {pending.ConfirmedRound}\"); } To keep things simple, add a new Update() method that will invoke MakePayment whenever the player presses their spacebar. Replace the passphrase with the passphrase you generated earlier. public void Update() { if (Input.GetKeyDown(KeyCode.Space)) { var privateKey = Mnemonic .FromString(\"find paddle girl crumble hammer usual obvious toy actual obscure decorate lock bag inmate author valve course ship burger denial sibling tissue nominee above remove\") .ToPrivateKey(); ulong amount = 100_000; Address receiver = \"HZ57J3K46JIJXILONBBZOHX6BKPXEM2VVXNRFSUED6DKFD5ZD24PMJ3MVA\"; MakePayment(privateKey, receiver, amount).Forget(); } } Now press Play again, then press the spacebar. After a couple seconds, your transaction should be confirmed and you should see a \"Successfully made payment!\" message in the editor console. Complete Example Here is the final code for AlgodCheck component. using AlgoSdk; using Cysharp.Threading.Tasks; using UnityEngine; public class AlgodCheck : MonoBehaviour { AlgodClient algod; public void Start() { algod = new AlgodClient( address: \"http://localhost:4001\", token: \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\" ); CheckAlgodStatus().Forget(); CheckBalance().Forget(); } public void Update() { if (Input.GetKeyDown(KeyCode.Space)) { var privateKey = Mnemonic .FromString(\"find paddle girl crumble hammer usual obvious toy actual obscure decorate lock bag inmate author valve course ship burger denial sibling tissue nominee above remove\") .ToPrivateKey(); ulong amount = 100_000; Address receiver = \"HZ57J3K46JIJXILONBBZOHX6BKPXEM2VVXNRFSUED6DKFD5ZD24PMJ3MVA\"; MakePayment(privateKey, receiver, amount).Forget(); } } public async UniTaskVoid CheckAlgodStatus() { var response = await algod.GetHealth(); if (response.Error.IsError) { Debug.LogError(response.Error.Message); } else { Debug.Log(\"Connected to algod!\"); } } public async UniTaskVoid CheckBalance() { var accountAddress = \"FLWI6UNTQ6CXTKSHOC7QPHYD2L3JVLIPWKNR5FECHX46VOE3DMY24BJASY\"; var (error, accountInfo) = await algod.GetAccountInformation(accountAddress); if (error.IsError) { Debug.LogError(error.Message); } else { Debug.Log($\"My account has {accountInfo.Amount / 1_000_000} algos\"); } } public async UniTaskVoid MakePayment(PrivateKey privateKey, Address receiver, ulong amount) { // Get the secret key handle and the public key of the sender account. // We'll use the secret key handle to sign the transaction. // The public key will be used as the sender's Address. using var keyPair = privateKey.ToKeyPair(); // Get the suggested transaction params var (txnParamsError, txnParams) = await algod.GetSuggestedParams(); if (txnParamsError.IsError) { Debug.LogError(txnParamsError.Message); return; } // Construct and sign the payment transaction var paymentTxn = Transaction.Payment( sender: keyPair.PublicKey, txnParams: txnParams, receiver: receiver, amount: amount ); var signedTxn = paymentTxn.Sign(keyPair.SecretKey); // Send the transaction var (sendTxnError, txid) = await algod.SendTransaction(signedTxn); if (sendTxnError.IsError) { Debug.LogError(sendTxnError.Message); return; } // Wait for the transaction to be confirmed PendingTransaction pending = default; ErrorResponse error = default; while (pending.ConfirmedRound == 0) { (error, pending) = await algod.GetPendingTransaction(txid); if (error.IsError) { Debug.LogError(error.Message); return; } await UniTask.Delay(1000); } Debug.Log($\"Successfully made payment! Confirmed on round {pending.ConfirmedRound}\"); } }"
  },
  "manual/troubleshooting.html": {
    "href": "manual/troubleshooting.html",
    "title": "Troubleshooting | Unity Algorand SDK",
    "keywords": "Troubleshooting Debugging Web Requests Setting the UNITY_ALGO_SDK_DEBUG #define directives will turn on additional HTTP request logging: completed request url: https://testnet-algorand.api.purestake.io/idx2/health uploadedData: downloadedData: {\"data\":{\"migration-required\":false,\"read-only-mode\":true},\"db-available\":true,\"is-migrating\":false,\"message\":\"17756385\",\"round\":17756385} error: method: GET downloadHandler.error: <...snip...> If the data is in JSON or plaintext format, then it will show in the logs as the raw JSON text. If the data is in Message Pack format, it will show as base-64 encoded byte string. Tip When debugging Message Pack, it can be useful to use a visualizer like the one at https://msgpack.dbrgn.ch/ ."
  }
}