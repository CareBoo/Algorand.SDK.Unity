{
  "api/AlgoSdk.Account.html": {
    "href": "api/AlgoSdk.Account.html",
    "title": "Class Account | Unity Algorand SDK",
    "keywords": "Class Account Contains utility functions for generating new accounts (private keys). Inheritance System.Object Account Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class Account Methods GenerateAccount() Generate a fresh account Declaration public static (PrivateKey, Address) GenerateAccount() Returns Type Description System.ValueTuple < PrivateKey , Address > A private key, address tuple. GenerateAccount() Generate a fresh account Declaration public static (PrivateKey, Address) GenerateAccount() Returns Type Description System.ValueTuple < PrivateKey , Address > A private key, address tuple."
  },
  "api/AlgoSdk.AccountInfo.html": {
    "href": "api/AlgoSdk.AccountInfo.html",
    "title": "Struct AccountInfo | Unity Algorand SDK",
    "keywords": "Struct AccountInfo Information regarding an Algorand account at a given round. Implements System.IEquatable < AccountInfo > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct AccountInfo : IEquatable<AccountInfo> Fields Address The public key of the account. Declaration public Address Address Field Value Type Description Address Address The public key of the account. Declaration public Address Address Field Value Type Description Address Amount The amount of microalgos belonging to this account including pending rewards. Declaration public ulong Amount Field Value Type Description System.UInt64 Amount The amount of microalgos belonging to this account including pending rewards. Declaration public ulong Amount Field Value Type Description System.UInt64 AmountWithoutPendingRewards The amount of microalgos belonging to this account not including pending rewards. Declaration public ulong AmountWithoutPendingRewards Field Value Type Description System.UInt64 AmountWithoutPendingRewards The amount of microalgos belonging to this account not including pending rewards. Declaration public ulong AmountWithoutPendingRewards Field Value Type Description System.UInt64 ApplicationsLocalState Local application data stored in this account. Declaration public ApplicationLocalState[] ApplicationsLocalState Field Value Type Description ApplicationLocalState [] ApplicationsLocalState Local application data stored in this account. Declaration public ApplicationLocalState[] ApplicationsLocalState Field Value Type Description ApplicationLocalState [] ApplicationsTotalExtraPages The total number of extra program pages for this account. Declaration public ulong ApplicationsTotalExtraPages Field Value Type Description System.UInt64 ApplicationsTotalExtraPages The total number of extra program pages for this account. Declaration public ulong ApplicationsTotalExtraPages Field Value Type Description System.UInt64 ApplicationsTotalSchema The sum of all local and global schemas in this account. Declaration public StateSchema ApplicationsTotalSchema Field Value Type Description StateSchema ApplicationsTotalSchema The sum of all local and global schemas in this account. Declaration public StateSchema ApplicationsTotalSchema Field Value Type Description StateSchema Assets Assets held by this account. Declaration public AssetHolding[] Assets Field Value Type Description AssetHolding [] Assets Assets held by this account. Declaration public AssetHolding[] Assets Field Value Type Description AssetHolding [] AuthAddress The address against which signing should be checked. If empty, the address of the current account is used. This field can be updated in any transaction by setting the RekeyTo field. Declaration public Address AuthAddress Field Value Type Description Address AuthAddress The address against which signing should be checked. If empty, the address of the current account is used. This field can be updated in any transaction by setting the RekeyTo field. Declaration public Address AuthAddress Field Value Type Description Address ClosedAtRound Round during which this account was most recently closed. Declaration public ulong ClosedAtRound Field Value Type Description System.UInt64 ClosedAtRound Round during which this account was most recently closed. Declaration public ulong ClosedAtRound Field Value Type Description System.UInt64 CreatedApplications Parameters of applications created by this account including app global data. Declaration public Application[] CreatedApplications Field Value Type Description Application [] CreatedApplications Parameters of applications created by this account including app global data. Declaration public Application[] CreatedApplications Field Value Type Description Application [] CreatedAssets Parameters of assets created by this account. Declaration public Asset[] CreatedAssets Field Value Type Description Asset [] CreatedAssets Parameters of assets created by this account. Declaration public Asset[] CreatedAssets Field Value Type Description Asset [] CreatedAtRound Round during which this account first appeared in a transaction. Declaration public ulong CreatedAtRound Field Value Type Description System.UInt64 CreatedAtRound Round during which this account first appeared in a transaction. Declaration public ulong CreatedAtRound Field Value Type Description System.UInt64 Deleted Whether or not this account is currently closed. Declaration public Optional<bool> Deleted Field Value Type Description Optional < System.Boolean > Deleted Whether or not this account is currently closed. Declaration public Optional<bool> Deleted Field Value Type Description Optional < System.Boolean > Participation See AccountParticipation Declaration public AccountParticipation Participation Field Value Type Description AccountParticipation Participation See AccountParticipation Declaration public AccountParticipation Participation Field Value Type Description AccountParticipation PendingRewards Amount of MicroAlgos of pending rewards in this account. Declaration public ulong PendingRewards Field Value Type Description System.UInt64 PendingRewards Amount of MicroAlgos of pending rewards in this account. Declaration public ulong PendingRewards Field Value Type Description System.UInt64 RewardBase Used as part of the rewards computation. Only applicable to accounts which are participating. Declaration public ulong RewardBase Field Value Type Description System.UInt64 RewardBase Used as part of the rewards computation. Only applicable to accounts which are participating. Declaration public ulong RewardBase Field Value Type Description System.UInt64 Rewards Total rewards of MicroAlgos the account has received, including pending rewards. Declaration public ulong Rewards Field Value Type Description System.UInt64 Rewards Total rewards of MicroAlgos the account has received, including pending rewards. Declaration public ulong Rewards Field Value Type Description System.UInt64 Round The round for which this information is relevant. Declaration public ulong Round Field Value Type Description System.UInt64 Round The round for which this information is relevant. Declaration public ulong Round Field Value Type Description System.UInt64 SignatureType Indicates what type of signature is used by this account, must be one of: Declaration public SignatureType SignatureType Field Value Type Description SignatureType SignatureType Indicates what type of signature is used by this account, must be one of: Declaration public SignatureType SignatureType Field Value Type Description SignatureType Status Delegation status of the account's MicroAlgos Offline indicates that the associated account is delegated. Online indicates that the associated account used as part of the delegation pool. NotParticipating indicates that the associated account is neither a delegator nor a delegate. Declaration public FixedString32Bytes Status Field Value Type Description FixedString32Bytes Status Delegation status of the account's MicroAlgos Offline indicates that the associated account is delegated. Online indicates that the associated account used as part of the delegation pool. NotParticipating indicates that the associated account is neither a delegator nor a delegate. Declaration public FixedString32Bytes Status Field Value Type Description FixedString32Bytes Methods Equals(AccountInfo) Declaration public bool Equals(AccountInfo other) Parameters Type Name Description AccountInfo other Returns Type Description System.Boolean Equals(AccountInfo) Declaration public bool Equals(AccountInfo other) Parameters Type Name Description AccountInfo other Returns Type Description System.Boolean EstimateMinBalance() Estimate the minimum balance of the account in MicroAlgos. Declaration public ulong EstimateMinBalance() Returns Type Description System.UInt64 The sum of all the costs per data item in the account. Remarks Account Data Type Cost Per Item (MicroAlgos) Assets Opted In or Created 100,000 Applications Opted In or Created 100,000 Applications Extra Program Pages 100,000 Applications Stored Uints 28,500 Applications Stored Byteslices 50,000 EstimateMinBalance() Estimate the minimum balance of the account in MicroAlgos. Declaration public ulong EstimateMinBalance() Returns Type Description System.UInt64 The sum of all the costs per data item in the account. Remarks Account Data Type Cost Per Item (MicroAlgos) Assets Opted In or Created 100,000 Applications Opted In or Created 100,000 Applications Extra Program Pages 100,000 Applications Stored Uints 28,500 Applications Stored Byteslices 50,000 Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.AccountParticipation.html": {
    "href": "api/AlgoSdk.AccountParticipation.html",
    "title": "Struct AccountParticipation | Unity Algorand SDK",
    "keywords": "Struct AccountParticipation Describes the parameters used by this account in consensus protocol. Implements System.IEquatable < AccountParticipation > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct AccountParticipation : IEquatable<AccountParticipation> Fields SelectionParticipationKey Selection public key (if any) currently registered for this round. Declaration public VrfPubKey SelectionParticipationKey Field Value Type Description VrfPubKey SelectionParticipationKey Selection public key (if any) currently registered for this round. Declaration public VrfPubKey SelectionParticipationKey Field Value Type Description VrfPubKey VoteFirst First round for which this participation is valid. Declaration public ulong VoteFirst Field Value Type Description System.UInt64 VoteFirst First round for which this participation is valid. Declaration public ulong VoteFirst Field Value Type Description System.UInt64 VoteKeyDilution Number of subkeys in each batch of participation keys. Declaration public ulong VoteKeyDilution Field Value Type Description System.UInt64 VoteKeyDilution Number of subkeys in each batch of participation keys. Declaration public ulong VoteKeyDilution Field Value Type Description System.UInt64 VoteLast Last round for which this participation is valid. Declaration public ulong VoteLast Field Value Type Description System.UInt64 VoteLast Last round for which this participation is valid. Declaration public ulong VoteLast Field Value Type Description System.UInt64 VoteParticipationKey Root participation public key (if any) currently registered for this round. Declaration public Ed25519.PublicKey VoteParticipationKey Field Value Type Description Ed25519.PublicKey VoteParticipationKey Root participation public key (if any) currently registered for this round. Declaration public Ed25519.PublicKey VoteParticipationKey Field Value Type Description Ed25519.PublicKey Methods Equals(AccountParticipation) Declaration public bool Equals(AccountParticipation other) Parameters Type Name Description AccountParticipation other Returns Type Description System.Boolean Equals(AccountParticipation) Declaration public bool Equals(AccountParticipation other) Parameters Type Name Description AccountParticipation other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.AccountResponse.html": {
    "href": "api/AlgoSdk.AccountResponse.html",
    "title": "Struct AccountResponse | Unity Algorand SDK",
    "keywords": "Struct AccountResponse Implements System.IEquatable < AccountResponse > IIndexerResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AccountResponse : IEquatable<AccountResponse>, IIndexerResponse Properties Account Declaration public AccountInfo Account { readonly get; set; } Property Value Type Description AccountInfo Account Declaration public AccountInfo Account { readonly get; set; } Property Value Type Description AccountInfo CurrentRound Declaration public ulong CurrentRound { readonly get; set; } Property Value Type Description System.UInt64 CurrentRound Declaration public ulong CurrentRound { readonly get; set; } Property Value Type Description System.UInt64 Methods Equals(AccountResponse) Declaration public bool Equals(AccountResponse other) Parameters Type Name Description AccountResponse other Returns Type Description System.Boolean Equals(AccountResponse) Declaration public bool Equals(AccountResponse other) Parameters Type Name Description AccountResponse other Returns Type Description System.Boolean Implements System.IEquatable<T> IIndexerResponse"
  },
  "api/AlgoSdk.AccountsResponse.html": {
    "href": "api/AlgoSdk.AccountsResponse.html",
    "title": "Struct AccountsResponse | Unity Algorand SDK",
    "keywords": "Struct AccountsResponse Implements System.IEquatable < AccountsResponse > IPaginatedResponse IIndexerResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AccountsResponse : IEquatable<AccountsResponse>, IPaginatedResponse, IIndexerResponse Properties Accounts Declaration public AccountInfo[] Accounts { readonly get; set; } Property Value Type Description AccountInfo [] Accounts Declaration public AccountInfo[] Accounts { readonly get; set; } Property Value Type Description AccountInfo [] CurrentRound Declaration public ulong CurrentRound { readonly get; set; } Property Value Type Description System.UInt64 CurrentRound Declaration public ulong CurrentRound { readonly get; set; } Property Value Type Description System.UInt64 NextToken Declaration public FixedString128Bytes NextToken { readonly get; set; } Property Value Type Description FixedString128Bytes NextToken Declaration public FixedString128Bytes NextToken { readonly get; set; } Property Value Type Description FixedString128Bytes Methods Equals(AccountsResponse) Declaration public bool Equals(AccountsResponse other) Parameters Type Name Description AccountsResponse other Returns Type Description System.Boolean Equals(AccountsResponse) Declaration public bool Equals(AccountsResponse other) Parameters Type Name Description AccountsResponse other Returns Type Description System.Boolean Implements System.IEquatable<T> IPaginatedResponse IIndexerResponse"
  },
  "api/AlgoSdk.AccountStateDelta.html": {
    "href": "api/AlgoSdk.AccountStateDelta.html",
    "title": "Struct AccountStateDelta | Unity Algorand SDK",
    "keywords": "Struct AccountStateDelta Application state delta for an account Address . Implements System.IEquatable < AccountStateDelta > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct AccountStateDelta : IEquatable<AccountStateDelta> Fields Address Declaration public Address Address Field Value Type Description Address Address Declaration public Address Address Field Value Type Description Address Delta Declaration public EvalDeltaKeyValue[] Delta Field Value Type Description EvalDeltaKeyValue [] Delta Declaration public EvalDeltaKeyValue[] Delta Field Value Type Description EvalDeltaKeyValue [] Methods Equals(AccountStateDelta) Declaration public bool Equals(AccountStateDelta other) Parameters Type Name Description AccountStateDelta other Returns Type Description System.Boolean Equals(AccountStateDelta) Declaration public bool Equals(AccountStateDelta other) Parameters Type Name Description AccountStateDelta other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.Address.CheckSum.html": {
    "href": "api/AlgoSdk.Address.CheckSum.html",
    "title": "Struct Address.CheckSum | Unity Algorand SDK",
    "keywords": "Struct Address.CheckSum Implements IByteArray System.IEquatable < Address.CheckSum > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct CheckSum : IEquatable<Address.CheckSum> Fields SizeBytes Declaration public const int SizeBytes = 4 Field Value Type Description System.Int32 SizeBytes Declaration public const int SizeBytes = 4 Field Value Type Description System.Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Length Declaration public readonly int Length { get; } Property Value Type Description System.Int32 Length Declaration public readonly int Length { get; } Property Value Type Description System.Int32 Methods Equals(Address.CheckSum) Declaration public bool Equals(Address.CheckSum other) Parameters Type Name Description Address.CheckSum other Returns Type Description System.Boolean Equals(Address.CheckSum) Declaration public bool Equals(Address.CheckSum other) Parameters Type Name Description Address.CheckSum other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description System.Void * GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description System.Void * ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Equality(in Address.CheckSum, in Address.CheckSum) Declaration public static bool operator ==(in Address.CheckSum x, in Address.CheckSum y) Parameters Type Name Description Address.CheckSum x Address.CheckSum y Returns Type Description System.Boolean Equality(in Address.CheckSum, in Address.CheckSum) Declaration public static bool operator ==(in Address.CheckSum x, in Address.CheckSum y) Parameters Type Name Description Address.CheckSum x Address.CheckSum y Returns Type Description System.Boolean Implicit(Sha512_256_Hash to Address.CheckSum) Declaration public static implicit operator Address.CheckSum(Sha512_256_Hash hash) Parameters Type Name Description Sha512_256_Hash hash Returns Type Description Address.CheckSum Implicit(Sha512_256_Hash to Address.CheckSum) Declaration public static implicit operator Address.CheckSum(Sha512_256_Hash hash) Parameters Type Name Description Sha512_256_Hash hash Returns Type Description Address.CheckSum Inequality(in Address.CheckSum, in Address.CheckSum) Declaration public static bool operator !=(in Address.CheckSum x, in Address.CheckSum y) Parameters Type Name Description Address.CheckSum x Address.CheckSum y Returns Type Description System.Boolean Inequality(in Address.CheckSum, in Address.CheckSum) Declaration public static bool operator !=(in Address.CheckSum x, in Address.CheckSum y) Parameters Type Name Description Address.CheckSum x Address.CheckSum y Returns Type Description System.Boolean Implements IByteArray System.IEquatable<T>"
  },
  "api/AlgoSdk.Address.html": {
    "href": "api/AlgoSdk.Address.html",
    "title": "Struct Address | Unity Algorand SDK",
    "keywords": "Struct Address A public key for an Algorand account. Implements IByteArray System.IEquatable < Address > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct Address : IEquatable<Address> Fields Empty Declaration public static readonly Address Empty Field Value Type Description Address Empty Declaration public static readonly Address Empty Field Value Type Description Address SizeBytes Declaration public const int SizeBytes = default(int) Field Value Type Description System.Int32 SizeBytes Declaration public const int SizeBytes = default(int) Field Value Type Description System.Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Length Declaration public readonly int Length { get; } Property Value Type Description System.Int32 Length Declaration public readonly int Length { get; } Property Value Type Description System.Int32 Methods Equals(Address) Declaration public bool Equals(Address other) Parameters Type Name Description Address other Returns Type Description System.Boolean Equals(Address) Declaration public bool Equals(Address other) Parameters Type Name Description Address other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) FromPublicKey(Ed25519.PublicKey) Declaration public static Address FromPublicKey(Ed25519.PublicKey publicKey) Parameters Type Name Description Ed25519.PublicKey publicKey Returns Type Description Address FromPublicKey(Ed25519.PublicKey) Declaration public static Address FromPublicKey(Ed25519.PublicKey publicKey) Parameters Type Name Description Ed25519.PublicKey publicKey Returns Type Description Address FromString(String) Declaration public static Address FromString(string addressString) Parameters Type Name Description System.String addressString Returns Type Description Address FromString(String) Declaration public static Address FromString(string addressString) Parameters Type Name Description System.String addressString Returns Type Description Address FromString<TString>(TString) Declaration public static Address FromString<TString>(TString s) where TString : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description TString s Returns Type Description Address Type Parameters Name Description TString FromString<TString>(TString) Declaration public static Address FromString<TString>(TString s) where TString : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description TString s Returns Type Description Address Type Parameters Name Description TString GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description System.Void * GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description System.Void * ToFixedString() Declaration public FixedString128Bytes ToFixedString() Returns Type Description FixedString128Bytes ToFixedString() Declaration public FixedString128Bytes ToFixedString() Returns Type Description FixedString128Bytes ToPublicKey() Declaration public Ed25519.PublicKey ToPublicKey() Returns Type Description Ed25519.PublicKey ToPublicKey() Declaration public Ed25519.PublicKey ToPublicKey() Returns Type Description Ed25519.PublicKey ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Equality(in Address, in Address) Declaration public static bool operator ==(in Address a1, in Address a2) Parameters Type Name Description Address a1 Address a2 Returns Type Description System.Boolean Equality(in Address, in Address) Declaration public static bool operator ==(in Address a1, in Address a2) Parameters Type Name Description Address a1 Address a2 Returns Type Description System.Boolean Implicit(Address to Ed25519.PublicKey) Declaration public static implicit operator Ed25519.PublicKey(Address address) Parameters Type Name Description Address address Returns Type Description Ed25519.PublicKey Implicit(Address to Ed25519.PublicKey) Declaration public static implicit operator Ed25519.PublicKey(Address address) Parameters Type Name Description Address address Returns Type Description Ed25519.PublicKey Implicit(Ed25519.PublicKey to Address) Declaration public static implicit operator Address(Ed25519.PublicKey publicKey) Parameters Type Name Description Ed25519.PublicKey publicKey Returns Type Description Address Implicit(Ed25519.PublicKey to Address) Declaration public static implicit operator Address(Ed25519.PublicKey publicKey) Parameters Type Name Description Ed25519.PublicKey publicKey Returns Type Description Address Implicit(Sha512_256_Hash to Address) Declaration public static implicit operator Address(Sha512_256_Hash checksum) Parameters Type Name Description Sha512_256_Hash checksum Returns Type Description Address Implicit(Sha512_256_Hash to Address) Declaration public static implicit operator Address(Sha512_256_Hash checksum) Parameters Type Name Description Sha512_256_Hash checksum Returns Type Description Address Implicit(String to Address) Declaration public static implicit operator Address(string s) Parameters Type Name Description System.String s Returns Type Description Address Implicit(String to Address) Declaration public static implicit operator Address(string s) Parameters Type Name Description System.String s Returns Type Description Address Inequality(in Address, in Address) Declaration public static bool operator !=(in Address a1, in Address a2) Parameters Type Name Description Address a1 Address a2 Returns Type Description System.Boolean Inequality(in Address, in Address) Declaration public static bool operator !=(in Address a1, in Address a2) Parameters Type Name Description Address a1 Address a2 Returns Type Description System.Boolean Implements IByteArray System.IEquatable<T>"
  },
  "api/AlgoSdk.AddressRole.html": {
    "href": "api/AlgoSdk.AddressRole.html",
    "title": "Enum AddressRole | Unity Algorand SDK",
    "keywords": "Enum AddressRole Role of an address for a transaction. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum AddressRole : byte Fields Name Description FreezeTarget None Receiver Sender"
  },
  "api/AlgoSdk.AddressRole_1.html": {
    "href": "api/AlgoSdk.AddressRole_1.html",
    "title": "Enum AddressRole | Unity Algorand SDK",
    "keywords": "Enum AddressRole Role of an address for a transaction. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum AddressRole : byte Fields Name Description FreezeTarget None Receiver Sender"
  },
  "api/AlgoSdk.AddressRoleExtensions.html": {
    "href": "api/AlgoSdk.AddressRoleExtensions.html",
    "title": "Class AddressRoleExtensions | Unity Algorand SDK",
    "keywords": "Class AddressRoleExtensions Inheritance System.Object AddressRoleExtensions Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class AddressRoleExtensions Fields TypeToString Declaration public static readonly string[] TypeToString Field Value Type Description System.String [] TypeToString Declaration public static readonly string[] TypeToString Field Value Type Description System.String [] Methods ToFixedString(AddressRole) Declaration public static FixedString32Bytes ToFixedString(this AddressRole addrRole) Parameters Type Name Description AddressRole addrRole Returns Type Description FixedString32Bytes ToFixedString(AddressRole) Declaration public static FixedString32Bytes ToFixedString(this AddressRole addrRole) Parameters Type Name Description AddressRole addrRole Returns Type Description FixedString32Bytes ToOptionalFixedString(AddressRole) Declaration public static Optional<FixedString32Bytes> ToOptionalFixedString(this AddressRole addressRole) Parameters Type Name Description AddressRole addressRole Returns Type Description Optional < FixedString32Bytes > ToOptionalFixedString(AddressRole) Declaration public static Optional<FixedString32Bytes> ToOptionalFixedString(this AddressRole addressRole) Parameters Type Name Description AddressRole addressRole Returns Type Description Optional < FixedString32Bytes >"
  },
  "api/AlgoSdk.AlgoApiField.html": {
    "href": "api/AlgoSdk.AlgoApiField.html",
    "title": "Class AlgoApiField | Unity Algorand SDK",
    "keywords": "Class AlgoApiField Inheritance System.Object System.Attribute AlgoApiField Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.Property | AttributeTargets.Field, Inherited = true, AllowMultiple = false)] [AttributeUsage(AttributeTargets.Property | AttributeTargets.Field, Inherited = true, AllowMultiple = false)] public sealed class AlgoApiField : Attribute, _Attribute Constructors AlgoApiField(String, String, Boolean) Declaration public AlgoApiField(string jsonKeyName, string msgPackKeyName, bool readOnly = false) Parameters Type Name Description System.String jsonKeyName System.String msgPackKeyName System.Boolean readOnly AlgoApiField(String, String, Boolean) Declaration public AlgoApiField(string jsonKeyName, string msgPackKeyName, bool readOnly = false) Parameters Type Name Description System.String jsonKeyName System.String msgPackKeyName System.Boolean readOnly Properties JsonKeyName Declaration public string JsonKeyName { get; } Property Value Type Description System.String JsonKeyName Declaration public string JsonKeyName { get; } Property Value Type Description System.String MessagePackKeyName Declaration public string MessagePackKeyName { get; } Property Value Type Description System.String MessagePackKeyName Declaration public string MessagePackKeyName { get; } Property Value Type Description System.String ReadOnly Declaration public bool ReadOnly { get; } Property Value Type Description System.Boolean ReadOnly Declaration public bool ReadOnly { get; } Property Value Type Description System.Boolean Implements System.Runtime.InteropServices._Attribute"
  },
  "api/AlgoSdk.AlgoApiField-1.EqualityComparer.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.EqualityComparer.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.EqualityComparer | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.EqualityComparer Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate bool EqualityComparer(TAlgoApiObject messagePackObject, TAlgoApiObject other); Parameters Type Name Description TAlgoApiObject messagePackObject TAlgoApiObject other Returns Type Description System.Boolean"
  },
  "api/AlgoSdk.AlgoApiField-1.EqualityComparer_1.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.EqualityComparer_1.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.EqualityComparer | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.EqualityComparer Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate bool EqualityComparer(TAlgoApiObject messagePackObject, TAlgoApiObject other); Parameters Type Name Description TAlgoApiObject messagePackObject TAlgoApiObject other Returns Type Description System.Boolean"
  },
  "api/AlgoSdk.AlgoApiField-1.FieldGetter-1.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.FieldGetter-1.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.FieldGetter<T> | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.FieldGetter<T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate T FieldGetter<T>(TAlgoApiObject messagePackObject); Parameters Type Name Description TAlgoApiObject messagePackObject Returns Type Description T Type Parameters Name Description T"
  },
  "api/AlgoSdk.AlgoApiField-1.FieldGetter-1_1.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.FieldGetter-1_1.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.FieldGetter<T> | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.FieldGetter<T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate T FieldGetter<T>(TAlgoApiObject messagePackObject); Parameters Type Name Description TAlgoApiObject messagePackObject Returns Type Description T Type Parameters Name Description T"
  },
  "api/AlgoSdk.AlgoApiField-1.FieldSetter-1.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.FieldSetter-1.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.FieldSetter<T> | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.FieldSetter<T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate void FieldSetter<T>(ref TAlgoApiObject messagePackObject, T value); Parameters Type Name Description TAlgoApiObject messagePackObject T value Type Parameters Name Description T"
  },
  "api/AlgoSdk.AlgoApiField-1.FieldSetter-1_1.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.FieldSetter-1_1.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.FieldSetter<T> | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.FieldSetter<T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate void FieldSetter<T>(ref TAlgoApiObject messagePackObject, T value); Parameters Type Name Description TAlgoApiObject messagePackObject T value Type Parameters Name Description T"
  },
  "api/AlgoSdk.AlgoApiField-1.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.html",
    "title": "Class AlgoApiField<TAlgoApiObject> | Unity Algorand SDK",
    "keywords": "Class AlgoApiField<TAlgoApiObject> Inheritance System.Object AlgoApiField<TAlgoApiObject> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public class AlgoApiField<TAlgoApiObject> where TAlgoApiObject : struct Type Parameters Name Description TAlgoApiObject Constructors AlgoApiField(AlgoApiField<TAlgoApiObject>.MessagePackDeserializer, AlgoApiField<TAlgoApiObject>.MessagePackSerializer, AlgoApiField<TAlgoApiObject>.JsonDeserializer, AlgoApiField<TAlgoApiObject>.JsonSerializer, AlgoApiField<TAlgoApiObject>.SerializePredicate, AlgoApiField<TAlgoApiObject>.EqualityComparer) Declaration public AlgoApiField(AlgoApiField<TAlgoApiObject>.MessagePackDeserializer deserializeMessagePack, AlgoApiField<TAlgoApiObject>.MessagePackSerializer serializeMessagePack, AlgoApiField<TAlgoApiObject>.JsonDeserializer deserializeJson, AlgoApiField<TAlgoApiObject>.JsonSerializer serializeJson, AlgoApiField<TAlgoApiObject>.SerializePredicate shouldSerialize, AlgoApiField<TAlgoApiObject>.EqualityComparer fieldsEqual) Parameters Type Name Description AlgoApiField.MessagePackDeserializer <> deserializeMessagePack AlgoApiField.MessagePackSerializer <> serializeMessagePack AlgoApiField.JsonDeserializer <> deserializeJson AlgoApiField.JsonSerializer <> serializeJson AlgoApiField.SerializePredicate <> shouldSerialize AlgoApiField.EqualityComparer <> fieldsEqual AlgoApiField(AlgoApiField<TAlgoApiObject>.MessagePackDeserializer, AlgoApiField<TAlgoApiObject>.MessagePackSerializer, AlgoApiField<TAlgoApiObject>.JsonDeserializer, AlgoApiField<TAlgoApiObject>.JsonSerializer, AlgoApiField<TAlgoApiObject>.SerializePredicate, AlgoApiField<TAlgoApiObject>.EqualityComparer) Declaration public AlgoApiField(AlgoApiField<TAlgoApiObject>.MessagePackDeserializer deserializeMessagePack, AlgoApiField<TAlgoApiObject>.MessagePackSerializer serializeMessagePack, AlgoApiField<TAlgoApiObject>.JsonDeserializer deserializeJson, AlgoApiField<TAlgoApiObject>.JsonSerializer serializeJson, AlgoApiField<TAlgoApiObject>.SerializePredicate shouldSerialize, AlgoApiField<TAlgoApiObject>.EqualityComparer fieldsEqual) Parameters Type Name Description AlgoApiField.MessagePackDeserializer <> deserializeMessagePack AlgoApiField.MessagePackSerializer <> serializeMessagePack AlgoApiField.JsonDeserializer <> deserializeJson AlgoApiField.JsonSerializer <> serializeJson AlgoApiField.SerializePredicate <> shouldSerialize AlgoApiField.EqualityComparer <> fieldsEqual Fields DeserializeJson Declaration public readonly AlgoApiField<TAlgoApiObject>.JsonDeserializer DeserializeJson Field Value Type Description AlgoApiField.JsonDeserializer <> DeserializeJson Declaration public readonly AlgoApiField<TAlgoApiObject>.JsonDeserializer DeserializeJson Field Value Type Description AlgoApiField.JsonDeserializer <> DeserializeMessagePack Declaration public readonly AlgoApiField<TAlgoApiObject>.MessagePackDeserializer DeserializeMessagePack Field Value Type Description AlgoApiField.MessagePackDeserializer <> DeserializeMessagePack Declaration public readonly AlgoApiField<TAlgoApiObject>.MessagePackDeserializer DeserializeMessagePack Field Value Type Description AlgoApiField.MessagePackDeserializer <> FieldsEqual Declaration public readonly AlgoApiField<TAlgoApiObject>.EqualityComparer FieldsEqual Field Value Type Description AlgoApiField.EqualityComparer <> FieldsEqual Declaration public readonly AlgoApiField<TAlgoApiObject>.EqualityComparer FieldsEqual Field Value Type Description AlgoApiField.EqualityComparer <> SerializeJson Declaration public readonly AlgoApiField<TAlgoApiObject>.JsonSerializer SerializeJson Field Value Type Description AlgoApiField.JsonSerializer <> SerializeJson Declaration public readonly AlgoApiField<TAlgoApiObject>.JsonSerializer SerializeJson Field Value Type Description AlgoApiField.JsonSerializer <> SerializeMessagePack Declaration public readonly AlgoApiField<TAlgoApiObject>.MessagePackSerializer SerializeMessagePack Field Value Type Description AlgoApiField.MessagePackSerializer <> SerializeMessagePack Declaration public readonly AlgoApiField<TAlgoApiObject>.MessagePackSerializer SerializeMessagePack Field Value Type Description AlgoApiField.MessagePackSerializer <> ShouldSerialize Declaration public readonly AlgoApiField<TAlgoApiObject>.SerializePredicate ShouldSerialize Field Value Type Description AlgoApiField.SerializePredicate <> ShouldSerialize Declaration public readonly AlgoApiField<TAlgoApiObject>.SerializePredicate ShouldSerialize Field Value Type Description AlgoApiField.SerializePredicate <> Methods Assign<T>(AlgoApiField<TAlgoApiObject>.FieldGetter<T>, AlgoApiField<TAlgoApiObject>.FieldSetter<T>, AlgoApiField<TAlgoApiObject>.EqualityComparer, AlgoApiField<TAlgoApiObject>.SerializePredicate) Declaration public static AlgoApiField<TAlgoApiObject> Assign<T>(AlgoApiField<TAlgoApiObject>.FieldGetter<T> getter, AlgoApiField<TAlgoApiObject>.FieldSetter<T> setter, AlgoApiField<TAlgoApiObject>.EqualityComparer fieldsEqual, AlgoApiField<TAlgoApiObject>.SerializePredicate shouldSerialize) Parameters Type Name Description AlgoApiField.FieldGetter <T> getter AlgoApiField.FieldSetter <T> setter AlgoApiField.EqualityComparer <> fieldsEqual AlgoApiField.SerializePredicate <> shouldSerialize Returns Type Description AlgoApiField <TAlgoApiObject> Type Parameters Name Description T Assign<T>(AlgoApiField<TAlgoApiObject>.FieldGetter<T>, AlgoApiField<TAlgoApiObject>.FieldSetter<T>, AlgoApiField<TAlgoApiObject>.EqualityComparer, AlgoApiField<TAlgoApiObject>.SerializePredicate) Declaration public static AlgoApiField<TAlgoApiObject> Assign<T>(AlgoApiField<TAlgoApiObject>.FieldGetter<T> getter, AlgoApiField<TAlgoApiObject>.FieldSetter<T> setter, AlgoApiField<TAlgoApiObject>.EqualityComparer fieldsEqual, AlgoApiField<TAlgoApiObject>.SerializePredicate shouldSerialize) Parameters Type Name Description AlgoApiField.FieldGetter <T> getter AlgoApiField.FieldSetter <T> setter AlgoApiField.EqualityComparer <> fieldsEqual AlgoApiField.SerializePredicate <> shouldSerialize Returns Type Description AlgoApiField <TAlgoApiObject> Type Parameters Name Description T Assign<T>(AlgoApiField<TAlgoApiObject>.FieldGetter<T>, AlgoApiField<TAlgoApiObject>.FieldSetter<T>, IEqualityComparer<T>, Boolean) Declaration public static AlgoApiField<TAlgoApiObject> Assign<T>(AlgoApiField<TAlgoApiObject>.FieldGetter<T> getter, AlgoApiField<TAlgoApiObject>.FieldSetter<T> setter, IEqualityComparer<T> comparer, bool readOnly) Parameters Type Name Description AlgoApiField.FieldGetter <T> getter AlgoApiField.FieldSetter <T> setter IEqualityComparer <T> comparer System.Boolean readOnly Returns Type Description AlgoApiField <TAlgoApiObject> Type Parameters Name Description T Assign<T>(AlgoApiField<TAlgoApiObject>.FieldGetter<T>, AlgoApiField<TAlgoApiObject>.FieldSetter<T>, IEqualityComparer<T>, Boolean) Declaration public static AlgoApiField<TAlgoApiObject> Assign<T>(AlgoApiField<TAlgoApiObject>.FieldGetter<T> getter, AlgoApiField<TAlgoApiObject>.FieldSetter<T> setter, IEqualityComparer<T> comparer, bool readOnly) Parameters Type Name Description AlgoApiField.FieldGetter <T> getter AlgoApiField.FieldSetter <T> setter IEqualityComparer <T> comparer System.Boolean readOnly Returns Type Description AlgoApiField <TAlgoApiObject> Type Parameters Name Description T Assign<T>(AlgoApiField<TAlgoApiObject>.FieldGetter<T>, AlgoApiField<TAlgoApiObject>.FieldSetter<T>, Boolean) Declaration public static AlgoApiField<TAlgoApiObject> Assign<T>(AlgoApiField<TAlgoApiObject>.FieldGetter<T> getter, AlgoApiField<TAlgoApiObject>.FieldSetter<T> setter, bool readOnly) where T : IEquatable<T> Parameters Type Name Description AlgoApiField.FieldGetter <T> getter AlgoApiField.FieldSetter <T> setter System.Boolean readOnly Returns Type Description AlgoApiField <TAlgoApiObject> Type Parameters Name Description T Assign<T>(AlgoApiField<TAlgoApiObject>.FieldGetter<T>, AlgoApiField<TAlgoApiObject>.FieldSetter<T>, Boolean) Declaration public static AlgoApiField<TAlgoApiObject> Assign<T>(AlgoApiField<TAlgoApiObject>.FieldGetter<T> getter, AlgoApiField<TAlgoApiObject>.FieldSetter<T> setter, bool readOnly) where T : IEquatable<T> Parameters Type Name Description AlgoApiField.FieldGetter <T> getter AlgoApiField.FieldSetter <T> setter System.Boolean readOnly Returns Type Description AlgoApiField <TAlgoApiObject> Type Parameters Name Description T"
  },
  "api/AlgoSdk.AlgoApiField-1.JsonDeserializer.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.JsonDeserializer.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.JsonDeserializer | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.JsonDeserializer Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate void JsonDeserializer(ref TAlgoApiObject obj, ref JsonReader reader); Parameters Type Name Description TAlgoApiObject obj JsonReader reader"
  },
  "api/AlgoSdk.AlgoApiField-1.JsonDeserializer_1.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.JsonDeserializer_1.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.JsonDeserializer | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.JsonDeserializer Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate void JsonDeserializer(ref TAlgoApiObject obj, ref JsonReader reader); Parameters Type Name Description TAlgoApiObject obj JsonReader reader"
  },
  "api/AlgoSdk.AlgoApiField-1.JsonSerializer.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.JsonSerializer.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.JsonSerializer | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.JsonSerializer Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate void JsonSerializer(TAlgoApiObject obj, ref JsonWriter writer); Parameters Type Name Description TAlgoApiObject obj JsonWriter writer"
  },
  "api/AlgoSdk.AlgoApiField-1.JsonSerializer_1.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.JsonSerializer_1.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.JsonSerializer | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.JsonSerializer Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate void JsonSerializer(TAlgoApiObject obj, ref JsonWriter writer); Parameters Type Name Description TAlgoApiObject obj JsonWriter writer"
  },
  "api/AlgoSdk.AlgoApiField-1.Map-1.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.Map-1.html",
    "title": "Class AlgoApiField<TAlgoApiObject>.Map<TKey> | Unity Algorand SDK",
    "keywords": "Class AlgoApiField<TAlgoApiObject>.Map<TKey> Inheritance System.Object AlgoApiField<TAlgoApiObject>.Map<TKey> Implements SortedDictionary <TKey, AlgoApiField <TAlgoApiObject>> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public class Map<TKey> : SortedDictionary<TKey, AlgoApiField<TAlgoApiObject>> where TKey : struct, INativeList<byte>, IUTF8Bytes Type Parameters Name Description TKey Methods Assign<T>(TKey, AlgoApiField<TAlgoApiObject>.FieldGetter<T>, AlgoApiField<TAlgoApiObject>.FieldSetter<T>, IEqualityComparer<T>, Boolean) Declaration public AlgoApiField<TAlgoApiObject>.Map<TKey> Assign<T>(TKey key, AlgoApiField<TAlgoApiObject>.FieldGetter<T> getter, AlgoApiField<TAlgoApiObject>.FieldSetter<T> setter, IEqualityComparer<T> comparer, bool readOnly) Parameters Type Name Description TKey key AlgoApiField.FieldGetter <T> getter AlgoApiField.FieldSetter <T> setter IEqualityComparer <T> comparer System.Boolean readOnly Returns Type Description AlgoApiField.Map <TKey> Type Parameters Name Description T Assign<T>(TKey, AlgoApiField<TAlgoApiObject>.FieldGetter<T>, AlgoApiField<TAlgoApiObject>.FieldSetter<T>, IEqualityComparer<T>, Boolean) Declaration public AlgoApiField<TAlgoApiObject>.Map<TKey> Assign<T>(TKey key, AlgoApiField<TAlgoApiObject>.FieldGetter<T> getter, AlgoApiField<TAlgoApiObject>.FieldSetter<T> setter, IEqualityComparer<T> comparer, bool readOnly) Parameters Type Name Description TKey key AlgoApiField.FieldGetter <T> getter AlgoApiField.FieldSetter <T> setter IEqualityComparer <T> comparer System.Boolean readOnly Returns Type Description AlgoApiField.Map <TKey> Type Parameters Name Description T Assign<T>(TKey, AlgoApiField<TAlgoApiObject>.FieldGetter<T>, AlgoApiField<TAlgoApiObject>.FieldSetter<T>, Boolean) Declaration public AlgoApiField<TAlgoApiObject>.Map<TKey> Assign<T>(TKey key, AlgoApiField<TAlgoApiObject>.FieldGetter<T> getter, AlgoApiField<TAlgoApiObject>.FieldSetter<T> setter, bool readOnly) where T : IEquatable<T> Parameters Type Name Description TKey key AlgoApiField.FieldGetter <T> getter AlgoApiField.FieldSetter <T> setter System.Boolean readOnly Returns Type Description AlgoApiField.Map <TKey> Type Parameters Name Description T Assign<T>(TKey, AlgoApiField<TAlgoApiObject>.FieldGetter<T>, AlgoApiField<TAlgoApiObject>.FieldSetter<T>, Boolean) Declaration public AlgoApiField<TAlgoApiObject>.Map<TKey> Assign<T>(TKey key, AlgoApiField<TAlgoApiObject>.FieldGetter<T> getter, AlgoApiField<TAlgoApiObject>.FieldSetter<T> setter, bool readOnly) where T : IEquatable<T> Parameters Type Name Description TKey key AlgoApiField.FieldGetter <T> getter AlgoApiField.FieldSetter <T> setter System.Boolean readOnly Returns Type Description AlgoApiField.Map <TKey> Type Parameters Name Description T GetField(TKey) Declaration public AlgoApiField<TAlgoApiObject> GetField(TKey key) Parameters Type Name Description TKey key Returns Type Description AlgoApiField <TAlgoApiObject> GetField(TKey) Declaration public AlgoApiField<TAlgoApiObject> GetField(TKey key) Parameters Type Name Description TKey key Returns Type Description AlgoApiField <TAlgoApiObject> GetFieldsToSerialize(TAlgoApiObject, Allocator) Declaration public NativeList<TKey> GetFieldsToSerialize(TAlgoApiObject obj, Allocator allocator) Parameters Type Name Description TAlgoApiObject obj Allocator allocator Returns Type Description NativeList <TKey> GetFieldsToSerialize(TAlgoApiObject, Allocator) Declaration public NativeList<TKey> GetFieldsToSerialize(TAlgoApiObject obj, Allocator allocator) Parameters Type Name Description TAlgoApiObject obj Allocator allocator Returns Type Description NativeList <TKey> Implements SortedDictionary<, >"
  },
  "api/AlgoSdk.AlgoApiField-1.MessagePackDeserializer.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.MessagePackDeserializer.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.MessagePackDeserializer | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.MessagePackDeserializer Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate void MessagePackDeserializer(ref TAlgoApiObject obj, ref MessagePackReader reader); Parameters Type Name Description TAlgoApiObject obj MessagePackReader reader"
  },
  "api/AlgoSdk.AlgoApiField-1.MessagePackDeserializer_1.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.MessagePackDeserializer_1.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.MessagePackDeserializer | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.MessagePackDeserializer Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate void MessagePackDeserializer(ref TAlgoApiObject obj, ref MessagePackReader reader); Parameters Type Name Description TAlgoApiObject obj MessagePackReader reader"
  },
  "api/AlgoSdk.AlgoApiField-1.MessagePackSerializer.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.MessagePackSerializer.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.MessagePackSerializer | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.MessagePackSerializer Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate void MessagePackSerializer(TAlgoApiObject obj, ref MessagePackWriter writer); Parameters Type Name Description TAlgoApiObject obj MessagePackWriter writer"
  },
  "api/AlgoSdk.AlgoApiField-1.MessagePackSerializer_1.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.MessagePackSerializer_1.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.MessagePackSerializer | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.MessagePackSerializer Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate void MessagePackSerializer(TAlgoApiObject obj, ref MessagePackWriter writer); Parameters Type Name Description TAlgoApiObject obj MessagePackWriter writer"
  },
  "api/AlgoSdk.AlgoApiField-1.SerializePredicate.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.SerializePredicate.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.SerializePredicate | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.SerializePredicate Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate bool SerializePredicate(TAlgoApiObject messagePackObject); Parameters Type Name Description TAlgoApiObject messagePackObject Returns Type Description System.Boolean"
  },
  "api/AlgoSdk.AlgoApiField-1.SerializePredicate_1.html": {
    "href": "api/AlgoSdk.AlgoApiField-1.SerializePredicate_1.html",
    "title": "Delegate AlgoApiField<TAlgoApiObject>.SerializePredicate | Unity Algorand SDK",
    "keywords": "Delegate AlgoApiField<TAlgoApiObject>.SerializePredicate Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public delegate bool SerializePredicate(TAlgoApiObject messagePackObject); Parameters Type Name Description TAlgoApiObject messagePackObject Returns Type Description System.Boolean"
  },
  "api/AlgoSdk.AlgoApiFormatterAttribute.html": {
    "href": "api/AlgoSdk.AlgoApiFormatterAttribute.html",
    "title": "Class AlgoApiFormatterAttribute | Unity Algorand SDK",
    "keywords": "Class AlgoApiFormatterAttribute Inheritance System.Object System.Attribute ProvideSourceInfoAttribute AlgoApiFormatterAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members ProvideSourceInfoAttribute.Member ProvideSourceInfoAttribute.LineNumber ProvideSourceInfoAttribute.AssetPath ProvideSourceInfoAttribute.AbsoluteFilePath System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Enum, Inherited = false, AllowMultiple = false)] [AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Enum, Inherited = false, AllowMultiple = false)] public sealed class AlgoApiFormatterAttribute : ProvideSourceInfoAttribute, _Attribute Constructors AlgoApiFormatterAttribute(Type, String, String, Int32) Declaration public AlgoApiFormatterAttribute(Type formatterType, string member = \"\", string filePath = \"\", int lineNumber = 0) Parameters Type Name Description System.Type formatterType System.String member System.String filePath System.Int32 lineNumber AlgoApiFormatterAttribute(Type, String, String, Int32) Declaration public AlgoApiFormatterAttribute(Type formatterType, string member = \"\", string filePath = \"\", int lineNumber = 0) Parameters Type Name Description System.Type formatterType System.String member System.String filePath System.Int32 lineNumber Properties FormatterType Declaration public Type FormatterType { get; } Property Value Type Description System.Type FormatterType Declaration public Type FormatterType { get; } Property Value Type Description System.Type Implements System.Runtime.InteropServices._Attribute"
  },
  "api/AlgoSdk.AlgoApiFormatterCache-1.html": {
    "href": "api/AlgoSdk.AlgoApiFormatterCache-1.html",
    "title": "Class AlgoApiFormatterCache<T> | Unity Algorand SDK",
    "keywords": "Class AlgoApiFormatterCache<T> Inheritance System.Object AlgoApiFormatterCache<T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class AlgoApiFormatterCache<T> Type Parameters Name Description T Fields Formatter Declaration public static readonly IAlgoApiFormatter<T> Formatter Field Value Type Description IAlgoApiFormatter <T> Formatter Declaration public static readonly IAlgoApiFormatter<T> Formatter Field Value Type Description IAlgoApiFormatter <T>"
  },
  "api/AlgoSdk.AlgoApiFormatterLookup.html": {
    "href": "api/AlgoSdk.AlgoApiFormatterLookup.html",
    "title": "Class AlgoApiFormatterLookup | Unity Algorand SDK",
    "keywords": "Class AlgoApiFormatterLookup Inheritance System.Object AlgoApiFormatterLookup Implements Dictionary < System.Type , System.Object > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public class AlgoApiFormatterLookup : Dictionary<Type, object> Fields AddFormatterMethodName Declaration public const string AddFormatterMethodName = \"Add\" Field Value Type Description System.String AddFormatterMethodName Declaration public const string AddFormatterMethodName = \"Add\" Field Value Type Description System.String Methods Add<T>(IAlgoApiFormatter<T>) Declaration public static void Add<T>(IAlgoApiFormatter<T> formatter) Parameters Type Name Description IAlgoApiFormatter <T> formatter Type Parameters Name Description T Add<T>(IAlgoApiFormatter<T>) Declaration public static void Add<T>(IAlgoApiFormatter<T> formatter) Parameters Type Name Description IAlgoApiFormatter <T> formatter Type Parameters Name Description T Get<T>() Declaration public static IAlgoApiFormatter<T> Get<T>() Returns Type Description IAlgoApiFormatter <T> Type Parameters Name Description T Get<T>() Declaration public static IAlgoApiFormatter<T> Get<T>() Returns Type Description IAlgoApiFormatter <T> Type Parameters Name Description T Implements Dictionary<, >"
  },
  "api/AlgoSdk.AlgoApiObject.html": {
    "href": "api/AlgoSdk.AlgoApiObject.html",
    "title": "Struct AlgoApiObject | Unity Algorand SDK",
    "keywords": "Struct AlgoApiObject A non-deserialized object from an algorand service. Implements System.IEquatable < AlgoApiObject > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AlgoApiObject : IEquatable<AlgoApiObject> Constructors AlgoApiObject(Byte[], ContentType) Declaration public AlgoApiObject(byte[] data, ContentType contentType) Parameters Type Name Description System.Byte [] data ContentType contentType AlgoApiObject(Byte[], ContentType) Declaration public AlgoApiObject(byte[] data, ContentType contentType) Parameters Type Name Description System.Byte [] data ContentType contentType Properties IsJson if this is a json object. Declaration public readonly bool IsJson { get; } Property Value Type Description System.Boolean IsJson if this is a json object. Declaration public readonly bool IsJson { get; } Property Value Type Description System.Boolean IsMessagePack if this is a messagepack object. Declaration public readonly bool IsMessagePack { get; } Property Value Type Description System.Boolean IsMessagePack if this is a messagepack object. Declaration public readonly bool IsMessagePack { get; } Property Value Type Description System.Boolean Json Raw json if the response had encoded as UTF8. Declaration public readonly byte[] Json { get; } Property Value Type Description System.Byte [] Json Raw json if the response had encoded as UTF8. Declaration public readonly byte[] Json { get; } Property Value Type Description System.Byte [] MessagePack Raw message pack if the response had Declaration public readonly byte[] MessagePack { get; } Property Value Type Description System.Byte [] MessagePack Raw message pack if the response had Declaration public readonly byte[] MessagePack { get; } Property Value Type Description System.Byte [] Methods Equals(AlgoApiObject) Declaration public bool Equals(AlgoApiObject other) Parameters Type Name Description AlgoApiObject other Returns Type Description System.Boolean Equals(AlgoApiObject) Declaration public bool Equals(AlgoApiObject other) Parameters Type Name Description AlgoApiObject other Returns Type Description System.Boolean Operators Implicit(NativeArray<Byte> to AlgoApiObject) Declaration public static implicit operator AlgoApiObject(NativeArray<byte> msgpack) Parameters Type Name Description NativeArray < System.Byte > msgpack Returns Type Description AlgoApiObject Implicit(NativeArray<Byte> to AlgoApiObject) Declaration public static implicit operator AlgoApiObject(NativeArray<byte> msgpack) Parameters Type Name Description NativeArray < System.Byte > msgpack Returns Type Description AlgoApiObject Implicit(NativeList<Byte> to AlgoApiObject) Declaration public static implicit operator AlgoApiObject(NativeList<byte> msgpack) Parameters Type Name Description NativeList < System.Byte > msgpack Returns Type Description AlgoApiObject Implicit(NativeList<Byte> to AlgoApiObject) Declaration public static implicit operator AlgoApiObject(NativeList<byte> msgpack) Parameters Type Name Description NativeList < System.Byte > msgpack Returns Type Description AlgoApiObject Implicit(NativeText to AlgoApiObject) Declaration public static implicit operator AlgoApiObject(NativeText json) Parameters Type Name Description NativeText json Returns Type Description AlgoApiObject Implicit(NativeText to AlgoApiObject) Declaration public static implicit operator AlgoApiObject(NativeText json) Parameters Type Name Description NativeText json Returns Type Description AlgoApiObject Implicit(Byte[] to AlgoApiObject) Declaration public static implicit operator AlgoApiObject(byte[] msgpack) Parameters Type Name Description System.Byte [] msgpack Returns Type Description AlgoApiObject Implicit(Byte[] to AlgoApiObject) Declaration public static implicit operator AlgoApiObject(byte[] msgpack) Parameters Type Name Description System.Byte [] msgpack Returns Type Description AlgoApiObject Implicit(String to AlgoApiObject) Declaration public static implicit operator AlgoApiObject(string json) Parameters Type Name Description System.String json Returns Type Description AlgoApiObject Implicit(String to AlgoApiObject) Declaration public static implicit operator AlgoApiObject(string json) Parameters Type Name Description System.String json Returns Type Description AlgoApiObject Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.AlgoApiObjectAttribute.html": {
    "href": "api/AlgoSdk.AlgoApiObjectAttribute.html",
    "title": "Class AlgoApiObjectAttribute | Unity Algorand SDK",
    "keywords": "Class AlgoApiObjectAttribute Inheritance System.Object System.Attribute ProvideSourceInfoAttribute AlgoApiObjectAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members ProvideSourceInfoAttribute.Member ProvideSourceInfoAttribute.LineNumber ProvideSourceInfoAttribute.AssetPath ProvideSourceInfoAttribute.AbsoluteFilePath System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.Struct, AllowMultiple = false)] [AttributeUsage(AttributeTargets.Struct, AllowMultiple = false)] public sealed class AlgoApiObjectAttribute : ProvideSourceInfoAttribute, _Attribute Constructors AlgoApiObjectAttribute(String, String, Int32) Declaration public AlgoApiObjectAttribute(string member = \"\", string filePath = \"\", int lineNumber = 0) Parameters Type Name Description System.String member System.String filePath System.Int32 lineNumber AlgoApiObjectAttribute(String, String, Int32) Declaration public AlgoApiObjectAttribute(string member = \"\", string filePath = \"\", int lineNumber = 0) Parameters Type Name Description System.String member System.String filePath System.Int32 lineNumber Implements System.Runtime.InteropServices._Attribute"
  },
  "api/AlgoSdk.AlgoApiObjectFormatter.html": {
    "href": "api/AlgoSdk.AlgoApiObjectFormatter.html",
    "title": "Class AlgoApiObjectFormatter | Unity Algorand SDK",
    "keywords": "Class AlgoApiObjectFormatter Inheritance System.Object AlgoApiObjectFormatter Implements IAlgoApiFormatter < AlgoApiObject > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public class AlgoApiObjectFormatter : IAlgoApiFormatter<AlgoApiObject> Methods Deserialize(ref JsonReader) Declaration public AlgoApiObject Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description AlgoApiObject Deserialize(ref JsonReader) Declaration public AlgoApiObject Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description AlgoApiObject Deserialize(ref MessagePackReader) Declaration public AlgoApiObject Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description AlgoApiObject Deserialize(ref MessagePackReader) Declaration public AlgoApiObject Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description AlgoApiObject Serialize(ref JsonWriter, AlgoApiObject) Declaration public void Serialize(ref JsonWriter writer, AlgoApiObject value) Parameters Type Name Description JsonWriter writer AlgoApiObject value Serialize(ref JsonWriter, AlgoApiObject) Declaration public void Serialize(ref JsonWriter writer, AlgoApiObject value) Parameters Type Name Description JsonWriter writer AlgoApiObject value Serialize(ref MessagePackWriter, AlgoApiObject) Declaration public void Serialize(ref MessagePackWriter writer, AlgoApiObject value) Parameters Type Name Description MessagePackWriter writer AlgoApiObject value Serialize(ref MessagePackWriter, AlgoApiObject) Declaration public void Serialize(ref MessagePackWriter writer, AlgoApiObject value) Parameters Type Name Description MessagePackWriter writer AlgoApiObject value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.AlgoApiObjectFormatter-1.html": {
    "href": "api/AlgoSdk.AlgoApiObjectFormatter-1.html",
    "title": "Class AlgoApiObjectFormatter<T> | Unity Algorand SDK",
    "keywords": "Class AlgoApiObjectFormatter<T> Inheritance System.Object AlgoApiObjectFormatter<T> Implements IAlgoApiFormatter <T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public class AlgoApiObjectFormatter<T> : IAlgoApiFormatter<T> where T : struct Type Parameters Name Description T Methods Assign<TField>(String, String, AlgoApiField<T>.FieldGetter<TField>, AlgoApiField<T>.FieldSetter<TField>, IEqualityComparer<TField>, Boolean) Declaration public AlgoApiObjectFormatter<T> Assign<TField>(string jsonKey, string messagePackKey, AlgoApiField<T>.FieldGetter<TField> getter, AlgoApiField<T>.FieldSetter<TField> setter, IEqualityComparer<TField> comparer, bool readOnly) Parameters Type Name Description System.String jsonKey System.String messagePackKey AlgoSdk.AlgoApiField.FieldGetter <TField> getter AlgoSdk.AlgoApiField.FieldSetter <TField> setter IEqualityComparer <TField> comparer System.Boolean readOnly Returns Type Description AlgoApiObjectFormatter <T> Type Parameters Name Description TField Assign<TField>(String, String, AlgoApiField<T>.FieldGetter<TField>, AlgoApiField<T>.FieldSetter<TField>, IEqualityComparer<TField>, Boolean) Declaration public AlgoApiObjectFormatter<T> Assign<TField>(string jsonKey, string messagePackKey, AlgoApiField<T>.FieldGetter<TField> getter, AlgoApiField<T>.FieldSetter<TField> setter, IEqualityComparer<TField> comparer, bool readOnly) Parameters Type Name Description System.String jsonKey System.String messagePackKey AlgoSdk.AlgoApiField.FieldGetter <TField> getter AlgoSdk.AlgoApiField.FieldSetter <TField> setter IEqualityComparer <TField> comparer System.Boolean readOnly Returns Type Description AlgoApiObjectFormatter <T> Type Parameters Name Description TField Assign<TField>(String, String, AlgoApiField<T>.FieldGetter<TField>, AlgoApiField<T>.FieldSetter<TField>, Boolean) Declaration public AlgoApiObjectFormatter<T> Assign<TField>(string jsonKey, string messagePackKey, AlgoApiField<T>.FieldGetter<TField> getter, AlgoApiField<T>.FieldSetter<TField> setter, bool readOnly) where TField : IEquatable<TField> Parameters Type Name Description System.String jsonKey System.String messagePackKey AlgoSdk.AlgoApiField.FieldGetter <TField> getter AlgoSdk.AlgoApiField.FieldSetter <TField> setter System.Boolean readOnly Returns Type Description AlgoApiObjectFormatter <T> Type Parameters Name Description TField Assign<TField>(String, String, AlgoApiField<T>.FieldGetter<TField>, AlgoApiField<T>.FieldSetter<TField>, Boolean) Declaration public AlgoApiObjectFormatter<T> Assign<TField>(string jsonKey, string messagePackKey, AlgoApiField<T>.FieldGetter<TField> getter, AlgoApiField<T>.FieldSetter<TField> setter, bool readOnly) where TField : IEquatable<TField> Parameters Type Name Description System.String jsonKey System.String messagePackKey AlgoSdk.AlgoApiField.FieldGetter <TField> getter AlgoSdk.AlgoApiField.FieldSetter <TField> setter System.Boolean readOnly Returns Type Description AlgoApiObjectFormatter <T> Type Parameters Name Description TField Deserialize(ref JsonReader) Declaration public T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref JsonReader) Declaration public T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration public T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration public T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Serialize(ref JsonWriter, T) Declaration public void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref JsonWriter, T) Declaration public void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref MessagePackWriter, T) Declaration public void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value Serialize(ref MessagePackWriter, T) Declaration public void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.AlgoApiRequest.Awaiter.html": {
    "href": "api/AlgoSdk.AlgoApiRequest.Awaiter.html",
    "title": "Struct AlgoApiRequest.Awaiter | Unity Algorand SDK",
    "keywords": "Struct AlgoApiRequest.Awaiter A Task Awaiter for Implements ICriticalNotifyCompletion Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public readonly struct Awaiter Constructors Awaiter(UniTask<UnityWebRequest>.Awaiter) Declaration public Awaiter(UniTask<UnityWebRequest>.Awaiter uniTaskAwaiter) Parameters Type Name Description UniTask.Awaiter <> uniTaskAwaiter Awaiter(UniTask<UnityWebRequest>.Awaiter) Declaration public Awaiter(UniTask<UnityWebRequest>.Awaiter uniTaskAwaiter) Parameters Type Name Description UniTask.Awaiter <> uniTaskAwaiter Properties IsCompleted Declaration public readonly bool IsCompleted { get; } Property Value Type Description System.Boolean IsCompleted Declaration public readonly bool IsCompleted { get; } Property Value Type Description System.Boolean Methods GetResult() Declaration public readonly AlgoApiResponse GetResult() Returns Type Description AlgoApiResponse GetResult() Declaration public readonly AlgoApiResponse GetResult() Returns Type Description AlgoApiResponse OnCompleted(Action) Declaration public readonly void OnCompleted(Action continuation) Parameters Type Name Description System.Action continuation OnCompleted(Action) Declaration public readonly void OnCompleted(Action continuation) Parameters Type Name Description System.Action continuation UnsafeOnCompleted(Action) Declaration public readonly void UnsafeOnCompleted(Action continuation) Parameters Type Name Description System.Action continuation UnsafeOnCompleted(Action) Declaration public readonly void UnsafeOnCompleted(Action continuation) Parameters Type Name Description System.Action continuation Implements ICriticalNotifyCompletion"
  },
  "api/AlgoSdk.AlgoApiRequest.Awaiter-1.html": {
    "href": "api/AlgoSdk.AlgoApiRequest.Awaiter-1.html",
    "title": "Struct AlgoApiRequest.Awaiter<TResponse> | Unity Algorand SDK",
    "keywords": "Struct AlgoApiRequest.Awaiter<TResponse> A Task Awaiter for Implements ICriticalNotifyCompletion Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public readonly struct Awaiter<TResponse> Type Parameters Name Description TResponse Constructors Awaiter(UniTask<UnityWebRequest>.Awaiter) Declaration public Awaiter(UniTask<UnityWebRequest>.Awaiter uniTaskAwaiter) Parameters Type Name Description UniTask.Awaiter <> uniTaskAwaiter Awaiter(UniTask<UnityWebRequest>.Awaiter) Declaration public Awaiter(UniTask<UnityWebRequest>.Awaiter uniTaskAwaiter) Parameters Type Name Description UniTask.Awaiter <> uniTaskAwaiter Properties IsCompleted Declaration public readonly bool IsCompleted { get; } Property Value Type Description System.Boolean IsCompleted Declaration public readonly bool IsCompleted { get; } Property Value Type Description System.Boolean Methods GetResult() Declaration public readonly AlgoApiResponse<TResponse> GetResult() Returns Type Description AlgoApiResponse <TResponse> GetResult() Declaration public readonly AlgoApiResponse<TResponse> GetResult() Returns Type Description AlgoApiResponse <TResponse> OnCompleted(Action) Declaration public readonly void OnCompleted(Action continuation) Parameters Type Name Description System.Action continuation OnCompleted(Action) Declaration public readonly void OnCompleted(Action continuation) Parameters Type Name Description System.Action continuation UnsafeOnCompleted(Action) Declaration public readonly void UnsafeOnCompleted(Action continuation) Parameters Type Name Description System.Action continuation UnsafeOnCompleted(Action) Declaration public readonly void UnsafeOnCompleted(Action continuation) Parameters Type Name Description System.Action continuation Implements ICriticalNotifyCompletion"
  },
  "api/AlgoSdk.AlgoApiRequest.html": {
    "href": "api/AlgoSdk.AlgoApiRequest.html",
    "title": "Struct AlgoApiRequest | Unity Algorand SDK",
    "keywords": "Struct AlgoApiRequest A wrapper around for handling requests to Algorand REST services. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public ref readonly struct AlgoApiRequest Methods Delete(String) Create a DELETE request Declaration public static AlgoApiRequest Delete(string url) Parameters Type Name Description System.String url The url for this request Returns Type Description AlgoApiRequest A new DELETE request Delete(String) Create a DELETE request Declaration public static AlgoApiRequest Delete(string url) Parameters Type Name Description System.String url The url for this request Returns Type Description AlgoApiRequest A new DELETE request Get(String) Create a GET request Declaration public static AlgoApiRequest Get(string url) Parameters Type Name Description System.String url The url for this request Returns Type Description AlgoApiRequest A new GET request Get(String) Create a GET request Declaration public static AlgoApiRequest Get(string url) Parameters Type Name Description System.String url The url for this request Returns Type Description AlgoApiRequest A new GET request Post(String) Create a POST request Declaration public static AlgoApiRequest Post(string url) Parameters Type Name Description System.String url The url for this request Returns Type Description AlgoApiRequest A new POST request Post(String) Create a POST request Declaration public static AlgoApiRequest Post(string url) Parameters Type Name Description System.String url The url for this request Returns Type Description AlgoApiRequest A new POST request Send(CancellationToken) Send the request. Declaration public readonly AlgoApiRequest.Sent Send(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken An optional cancellation token Returns Type Description AlgoApiRequest.Sent A AlgoApiRequest.Sent request Send(CancellationToken) Send the request. Declaration public readonly AlgoApiRequest.Sent Send(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken An optional cancellation token Returns Type Description AlgoApiRequest.Sent A AlgoApiRequest.Sent request Send<TProgress>(TProgress, CancellationToken) Send the request and check progress callbacks using System.IProgress`1 Declaration public readonly AlgoApiRequest.SentWithProgress<TProgress> Send<TProgress>(TProgress progress, CancellationToken cancellationToken = null) where TProgress : IProgress<float> Parameters Type Name Description TProgress progress The progress callback CancellationToken cancellationToken An optional cancellation token Returns Type Description AlgoApiRequest.SentWithProgress <TProgress> A AlgoApiRequest.SentWithProgress<TProgress> request Type Parameters Name Description TProgress A progress callback implementing System.IProgress`1 Send<TProgress>(TProgress, CancellationToken) Send the request and check progress callbacks using System.IProgress`1 Declaration public readonly AlgoApiRequest.SentWithProgress<TProgress> Send<TProgress>(TProgress progress, CancellationToken cancellationToken = null) where TProgress : IProgress<float> Parameters Type Name Description TProgress progress The progress callback CancellationToken cancellationToken An optional cancellation token Returns Type Description AlgoApiRequest.SentWithProgress <TProgress> A AlgoApiRequest.SentWithProgress<TProgress> request Type Parameters Name Description TProgress A progress callback implementing System.IProgress`1 SetHeaders(Header[]) Set additional headers on this request Declaration public readonly AlgoApiRequest SetHeaders(params Header[] headers) Parameters Type Name Description Header [] headers The headers in format \"key:value\" Returns Type Description AlgoApiRequest this request with headers set SetHeaders(Header[]) Set additional headers on this request Declaration public readonly AlgoApiRequest SetHeaders(params Header[] headers) Parameters Type Name Description Header [] headers The headers in format \"key:value\" Returns Type Description AlgoApiRequest this request with headers set SetJsonBody(NativeText) Set body of the request, and set its content type header to \"application/json\" Declaration public readonly AlgoApiRequest SetJsonBody(NativeText json) Parameters Type Name Description NativeText json The utf8 json to set the body of the request Returns Type Description AlgoApiRequest this request with body and header set SetJsonBody(NativeText) Set body of the request, and set its content type header to \"application/json\" Declaration public readonly AlgoApiRequest SetJsonBody(NativeText json) Parameters Type Name Description NativeText json The utf8 json to set the body of the request Returns Type Description AlgoApiRequest this request with body and header set SetJsonBody(String) Set body of the request, and set its content type header to \"application/json\" Declaration public readonly AlgoApiRequest SetJsonBody(string json) Parameters Type Name Description System.String json The utf8 json to set the body of the request Returns Type Description AlgoApiRequest this request with body and header set SetJsonBody(String) Set body of the request, and set its content type header to \"application/json\" Declaration public readonly AlgoApiRequest SetJsonBody(string json) Parameters Type Name Description System.String json The utf8 json to set the body of the request Returns Type Description AlgoApiRequest this request with body and header set SetJsonBody<TBody>(TBody) Set body of the request, and set its content type header to \"application/json\" Declaration public readonly AlgoApiRequest SetJsonBody<TBody>(TBody value) Parameters Type Name Description TBody value An object to serialize into json, then to set in the body of the request Returns Type Description AlgoApiRequest this request with body and header set Type Parameters Name Description TBody Type of the object to serialize SetJsonBody<TBody>(TBody) Set body of the request, and set its content type header to \"application/json\" Declaration public readonly AlgoApiRequest SetJsonBody<TBody>(TBody value) Parameters Type Name Description TBody value An object to serialize into json, then to set in the body of the request Returns Type Description AlgoApiRequest this request with body and header set Type Parameters Name Description TBody Type of the object to serialize SetMessagePackBody(NativeArray<Byte>.ReadOnly) Set body of the request and set its content type header to \"application/msgpack\" Declaration public readonly AlgoApiRequest SetMessagePackBody(NativeArray<byte>.ReadOnly bytes) Parameters Type Name Description NativeArray.ReadOnly <> bytes The msgpack bytes to set for the body Returns Type Description AlgoApiRequest this request with body and header set SetMessagePackBody(NativeArray<Byte>.ReadOnly) Set body of the request and set its content type header to \"application/msgpack\" Declaration public readonly AlgoApiRequest SetMessagePackBody(NativeArray<byte>.ReadOnly bytes) Parameters Type Name Description NativeArray.ReadOnly <> bytes The msgpack bytes to set for the body Returns Type Description AlgoApiRequest this request with body and header set SetPlainTextBody(String) Set body of the request, and set its content type header to \"application/text\" Declaration public readonly AlgoApiRequest SetPlainTextBody(string plainText) Parameters Type Name Description System.String plainText The utf8 plaintext to use for the body Returns Type Description AlgoApiRequest this request with body and header set SetPlainTextBody(String) Set body of the request, and set its content type header to \"application/text\" Declaration public readonly AlgoApiRequest SetPlainTextBody(string plainText) Parameters Type Name Description System.String plainText The utf8 plaintext to use for the body Returns Type Description AlgoApiRequest this request with body and header set SetRawBody(Byte[], ContentType) Set the body and content type header of the request Declaration public readonly AlgoApiRequest SetRawBody(byte[] data, ContentType contentType) Parameters Type Name Description System.Byte [] data The raw bytes to set for the body ContentType contentType The content type to set the header of the request Returns Type Description AlgoApiRequest this request with body and header set SetRawBody(Byte[], ContentType) Set the body and content type header of the request Declaration public readonly AlgoApiRequest SetRawBody(byte[] data, ContentType contentType) Parameters Type Name Description System.Byte [] data The raw bytes to set for the body ContentType contentType The content type to set the header of the request Returns Type Description AlgoApiRequest this request with body and header set SetToken(String, String) Set the token used for authenticating to the service. Declaration public readonly AlgoApiRequest SetToken(string tokenHeader, string token) Parameters Type Name Description System.String tokenHeader The name of the request header used for the token. System.String token The token used for authenticating to the service. Returns Type Description AlgoApiRequest with token set SetToken(String, String) Set the token used for authenticating to the service. Declaration public readonly AlgoApiRequest SetToken(string tokenHeader, string token) Parameters Type Name Description System.String tokenHeader The name of the request header used for the token. System.String token The token used for authenticating to the service. Returns Type Description AlgoApiRequest with token set"
  },
  "api/AlgoSdk.AlgoApiRequest.Sent.html": {
    "href": "api/AlgoSdk.AlgoApiRequest.Sent.html",
    "title": "Struct AlgoApiRequest.Sent | Unity Algorand SDK",
    "keywords": "Struct AlgoApiRequest.Sent A wrapper around the handling the sent request. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public ref readonly struct Sent Constructors Sent(UnityWebRequestAsyncOperation, CancellationToken) Declaration public Sent(UnityWebRequestAsyncOperation asyncOperation, CancellationToken cancellationToken = null) Parameters Type Name Description UnityWebRequestAsyncOperation asyncOperation CancellationToken cancellationToken Sent(UnityWebRequestAsyncOperation, CancellationToken) Declaration public Sent(UnityWebRequestAsyncOperation asyncOperation, CancellationToken cancellationToken = null) Parameters Type Name Description UnityWebRequestAsyncOperation asyncOperation CancellationToken cancellationToken Properties AsyncOperation Declaration public readonly UnityWebRequestAsyncOperation AsyncOperation { get; } Property Value Type Description UnityWebRequestAsyncOperation AsyncOperation Declaration public readonly UnityWebRequestAsyncOperation AsyncOperation { get; } Property Value Type Description UnityWebRequestAsyncOperation Methods CastResponse<TResponse>() Declaration public readonly AlgoApiRequest.Sent<TResponse> CastResponse<TResponse>() Returns Type Description AlgoApiRequest.Sent <TResponse> Type Parameters Name Description TResponse CastResponse<TResponse>() Declaration public readonly AlgoApiRequest.Sent<TResponse> CastResponse<TResponse>() Returns Type Description AlgoApiRequest.Sent <TResponse> Type Parameters Name Description TResponse GetAwaiter() Declaration public readonly AlgoApiRequest.Awaiter GetAwaiter() Returns Type Description AlgoApiRequest.Awaiter GetAwaiter() Declaration public readonly AlgoApiRequest.Awaiter GetAwaiter() Returns Type Description AlgoApiRequest.Awaiter WithCancellation(CancellationToken) Declaration public readonly AlgoApiRequest.Sent WithCancellation(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description AlgoApiRequest.Sent WithCancellation(CancellationToken) Declaration public readonly AlgoApiRequest.Sent WithCancellation(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description AlgoApiRequest.Sent WithProgress<TProgress>(TProgress) Declaration public readonly AlgoApiRequest.SentWithProgress<TProgress> WithProgress<TProgress>(TProgress progress) where TProgress : IProgress<float> Parameters Type Name Description TProgress progress Returns Type Description AlgoApiRequest.SentWithProgress <TProgress> Type Parameters Name Description TProgress WithProgress<TProgress>(TProgress) Declaration public readonly AlgoApiRequest.SentWithProgress<TProgress> WithProgress<TProgress>(TProgress progress) where TProgress : IProgress<float> Parameters Type Name Description TProgress progress Returns Type Description AlgoApiRequest.SentWithProgress <TProgress> Type Parameters Name Description TProgress"
  },
  "api/AlgoSdk.AlgoApiRequest.Sent-1.html": {
    "href": "api/AlgoSdk.AlgoApiRequest.Sent-1.html",
    "title": "Struct AlgoApiRequest.Sent<TResponse> | Unity Algorand SDK",
    "keywords": "Struct AlgoApiRequest.Sent<TResponse> A wrapper around the handling the sent request. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public ref readonly struct Sent<TResponse> Type Parameters Name Description TResponse Constructors Sent(UnityWebRequestAsyncOperation, CancellationToken) Declaration public Sent(UnityWebRequestAsyncOperation asyncOperation, CancellationToken cancellationToken = null) Parameters Type Name Description UnityWebRequestAsyncOperation asyncOperation CancellationToken cancellationToken Sent(UnityWebRequestAsyncOperation, CancellationToken) Declaration public Sent(UnityWebRequestAsyncOperation asyncOperation, CancellationToken cancellationToken = null) Parameters Type Name Description UnityWebRequestAsyncOperation asyncOperation CancellationToken cancellationToken Properties AsyncOperation Declaration public readonly UnityWebRequestAsyncOperation AsyncOperation { get; } Property Value Type Description UnityWebRequestAsyncOperation AsyncOperation Declaration public readonly UnityWebRequestAsyncOperation AsyncOperation { get; } Property Value Type Description UnityWebRequestAsyncOperation Methods GetAwaiter() Declaration public readonly AlgoApiRequest.Awaiter<TResponse> GetAwaiter() Returns Type Description AlgoApiRequest.Awaiter <TResponse> GetAwaiter() Declaration public readonly AlgoApiRequest.Awaiter<TResponse> GetAwaiter() Returns Type Description AlgoApiRequest.Awaiter <TResponse> WithCancellation(CancellationToken) Declaration public readonly AlgoApiRequest.Sent<TResponse> WithCancellation(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description AlgoApiRequest.Sent <TResponse> WithCancellation(CancellationToken) Declaration public readonly AlgoApiRequest.Sent<TResponse> WithCancellation(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description AlgoApiRequest.Sent <TResponse> WithProgress<TProgress>(TProgress) Declaration public readonly AlgoApiRequest.SentWithProgress<TResponse, TProgress> WithProgress<TProgress>(TProgress progress) where TProgress : IProgress<float> Parameters Type Name Description TProgress progress Returns Type Description AlgoApiRequest.SentWithProgress <TResponse, TProgress> Type Parameters Name Description TProgress WithProgress<TProgress>(TProgress) Declaration public readonly AlgoApiRequest.SentWithProgress<TResponse, TProgress> WithProgress<TProgress>(TProgress progress) where TProgress : IProgress<float> Parameters Type Name Description TProgress progress Returns Type Description AlgoApiRequest.SentWithProgress <TResponse, TProgress> Type Parameters Name Description TProgress Operators Implicit(AlgoApiRequest.Sent to AlgoApiRequest.Sent<TResponse>) Declaration public static implicit operator AlgoApiRequest.Sent<TResponse>(AlgoApiRequest.Sent sent) Parameters Type Name Description AlgoApiRequest.Sent sent Returns Type Description AlgoApiRequest.Sent <TResponse> Implicit(AlgoApiRequest.Sent to AlgoApiRequest.Sent<TResponse>) Declaration public static implicit operator AlgoApiRequest.Sent<TResponse>(AlgoApiRequest.Sent sent) Parameters Type Name Description AlgoApiRequest.Sent sent Returns Type Description AlgoApiRequest.Sent <TResponse>"
  },
  "api/AlgoSdk.AlgoApiRequest.SentWithProgress-1.html": {
    "href": "api/AlgoSdk.AlgoApiRequest.SentWithProgress-1.html",
    "title": "Struct AlgoApiRequest.SentWithProgress<TProgress> | Unity Algorand SDK",
    "keywords": "Struct AlgoApiRequest.SentWithProgress<TProgress> A wrapper around the handling the sent request. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public ref readonly struct SentWithProgress<TProgress> where TProgress : IProgress<float> Type Parameters Name Description TProgress Constructors SentWithProgress(UnityWebRequestAsyncOperation, TProgress, CancellationToken) Declaration public SentWithProgress(UnityWebRequestAsyncOperation asyncOperation, TProgress progress, CancellationToken cancellationToken = null) Parameters Type Name Description UnityWebRequestAsyncOperation asyncOperation TProgress progress CancellationToken cancellationToken SentWithProgress(UnityWebRequestAsyncOperation, TProgress, CancellationToken) Declaration public SentWithProgress(UnityWebRequestAsyncOperation asyncOperation, TProgress progress, CancellationToken cancellationToken = null) Parameters Type Name Description UnityWebRequestAsyncOperation asyncOperation TProgress progress CancellationToken cancellationToken Properties AsyncOperation Declaration public readonly UnityWebRequestAsyncOperation AsyncOperation { get; } Property Value Type Description UnityWebRequestAsyncOperation AsyncOperation Declaration public readonly UnityWebRequestAsyncOperation AsyncOperation { get; } Property Value Type Description UnityWebRequestAsyncOperation Methods CastResponse<TResponse>() Declaration public readonly AlgoApiRequest.SentWithProgress<TResponse, TProgress> CastResponse<TResponse>() Returns Type Description AlgoApiRequest.SentWithProgress <TResponse, TProgress> Type Parameters Name Description TResponse CastResponse<TResponse>() Declaration public readonly AlgoApiRequest.SentWithProgress<TResponse, TProgress> CastResponse<TResponse>() Returns Type Description AlgoApiRequest.SentWithProgress <TResponse, TProgress> Type Parameters Name Description TResponse GetAwaiter() Declaration public readonly AlgoApiRequest.Awaiter GetAwaiter() Returns Type Description AlgoApiRequest.Awaiter GetAwaiter() Declaration public readonly AlgoApiRequest.Awaiter GetAwaiter() Returns Type Description AlgoApiRequest.Awaiter WithCancellation(CancellationToken) Declaration public readonly AlgoApiRequest.SentWithProgress<TProgress> WithCancellation(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description AlgoApiRequest.SentWithProgress <TProgress> WithCancellation(CancellationToken) Declaration public readonly AlgoApiRequest.SentWithProgress<TProgress> WithCancellation(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description AlgoApiRequest.SentWithProgress <TProgress>"
  },
  "api/AlgoSdk.AlgoApiRequest.SentWithProgress-2.html": {
    "href": "api/AlgoSdk.AlgoApiRequest.SentWithProgress-2.html",
    "title": "Struct AlgoApiRequest.SentWithProgress<TResponse, TProgress> | Unity Algorand SDK",
    "keywords": "Struct AlgoApiRequest.SentWithProgress<TResponse, TProgress> A wrapper around the handling the sent request. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public ref readonly struct SentWithProgress<TResponse, TProgress> where TProgress : IProgress<float> Type Parameters Name Description TResponse TProgress Constructors SentWithProgress(UnityWebRequestAsyncOperation, TProgress, CancellationToken) Declaration public SentWithProgress(UnityWebRequestAsyncOperation asyncOperation, TProgress progress, CancellationToken cancellationToken = null) Parameters Type Name Description UnityWebRequestAsyncOperation asyncOperation TProgress progress CancellationToken cancellationToken SentWithProgress(UnityWebRequestAsyncOperation, TProgress, CancellationToken) Declaration public SentWithProgress(UnityWebRequestAsyncOperation asyncOperation, TProgress progress, CancellationToken cancellationToken = null) Parameters Type Name Description UnityWebRequestAsyncOperation asyncOperation TProgress progress CancellationToken cancellationToken Properties AsyncOperation Declaration public readonly UnityWebRequestAsyncOperation AsyncOperation { get; } Property Value Type Description UnityWebRequestAsyncOperation AsyncOperation Declaration public readonly UnityWebRequestAsyncOperation AsyncOperation { get; } Property Value Type Description UnityWebRequestAsyncOperation Methods GetAwaiter() Declaration public readonly AlgoApiRequest.Awaiter<TResponse> GetAwaiter() Returns Type Description AlgoApiRequest.Awaiter <TResponse> GetAwaiter() Declaration public readonly AlgoApiRequest.Awaiter<TResponse> GetAwaiter() Returns Type Description AlgoApiRequest.Awaiter <TResponse> WithCancellation(CancellationToken) Declaration public readonly AlgoApiRequest.SentWithProgress<TResponse, TProgress> WithCancellation(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description AlgoApiRequest.SentWithProgress <TResponse, TProgress> WithCancellation(CancellationToken) Declaration public readonly AlgoApiRequest.SentWithProgress<TResponse, TProgress> WithCancellation(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description AlgoApiRequest.SentWithProgress <TResponse, TProgress> Operators Implicit(AlgoApiRequest.SentWithProgress<TProgress> to AlgoApiRequest.SentWithProgress<TResponse, TProgress>) Declaration public static implicit operator AlgoApiRequest.SentWithProgress<TResponse, TProgress>(AlgoApiRequest.SentWithProgress<TProgress> sent) Parameters Type Name Description AlgoApiRequest.SentWithProgress <TProgress> sent Returns Type Description AlgoApiRequest.SentWithProgress <TResponse, TProgress> Implicit(AlgoApiRequest.SentWithProgress<TProgress> to AlgoApiRequest.SentWithProgress<TResponse, TProgress>) Declaration public static implicit operator AlgoApiRequest.SentWithProgress<TResponse, TProgress>(AlgoApiRequest.SentWithProgress<TProgress> sent) Parameters Type Name Description AlgoApiRequest.SentWithProgress <TProgress> sent Returns Type Description AlgoApiRequest.SentWithProgress <TResponse, TProgress>"
  },
  "api/AlgoSdk.AlgoApiResponse.html": {
    "href": "api/AlgoSdk.AlgoApiResponse.html",
    "title": "Struct AlgoApiResponse | Unity Algorand SDK",
    "keywords": "Struct AlgoApiResponse Wrapper class around a completed Implements IAlgoApiResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AlgoApiResponse : IAlgoApiResponse Constructors AlgoApiResponse(UnityWebRequest) Declaration public AlgoApiResponse(UnityWebRequest completedRequest) Parameters Type Name Description UnityWebRequest completedRequest AlgoApiResponse(UnityWebRequest) Declaration public AlgoApiResponse(UnityWebRequest completedRequest) Parameters Type Name Description UnityWebRequest completedRequest Properties ContentType Declaration public readonly ContentType ContentType { get; } Property Value Type Description ContentType ContentType Declaration public readonly ContentType ContentType { get; } Property Value Type Description ContentType Data Declaration public readonly byte[] Data { get; } Property Value Type Description System.Byte [] Data Declaration public readonly byte[] Data { get; } Property Value Type Description System.Byte [] Error Declaration public readonly ErrorResponse Error { get; } Property Value Type Description ErrorResponse Error Declaration public readonly ErrorResponse Error { get; } Property Value Type Description ErrorResponse ResponseCode Declaration public readonly long ResponseCode { get; } Property Value Type Description System.Int64 ResponseCode Declaration public readonly long ResponseCode { get; } Property Value Type Description System.Int64 Status Declaration public readonly Result Status { get; } Property Value Type Description Result Status Declaration public readonly Result Status { get; } Property Value Type Description Result Methods GetText() Declaration public string GetText() Returns Type Description System.String GetText() Declaration public string GetText() Returns Type Description System.String Implements IAlgoApiResponse"
  },
  "api/AlgoSdk.AlgoApiResponse-1.html": {
    "href": "api/AlgoSdk.AlgoApiResponse-1.html",
    "title": "Struct AlgoApiResponse<T> | Unity Algorand SDK",
    "keywords": "Struct AlgoApiResponse<T> Wrapper class around a completed . This can be deconstructed into a tuple of (ErrorResponse, Payload) Implements IAlgoApiResponse <T> IAlgoApiResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public readonly struct AlgoApiResponse<T> : IAlgoApiResponse<T>, IAlgoApiResponse Type Parameters Name Description T The type of the object deserialized from the response Constructors AlgoApiResponse(AlgoApiResponse) Declaration public AlgoApiResponse(AlgoApiResponse response) Parameters Type Name Description AlgoApiResponse response AlgoApiResponse(AlgoApiResponse) Declaration public AlgoApiResponse(AlgoApiResponse response) Parameters Type Name Description AlgoApiResponse response AlgoApiResponse(AlgoApiResponse, T) Declaration public AlgoApiResponse(AlgoApiResponse response, T payload) Parameters Type Name Description AlgoApiResponse response T payload AlgoApiResponse(AlgoApiResponse, T) Declaration public AlgoApiResponse(AlgoApiResponse response, T payload) Parameters Type Name Description AlgoApiResponse response T payload AlgoApiResponse(AlgoApiResponse, ErrorResponse) Declaration public AlgoApiResponse(AlgoApiResponse response, ErrorResponse error) Parameters Type Name Description AlgoApiResponse response ErrorResponse error AlgoApiResponse(AlgoApiResponse, ErrorResponse) Declaration public AlgoApiResponse(AlgoApiResponse response, ErrorResponse error) Parameters Type Name Description AlgoApiResponse response ErrorResponse error Properties ContentType Declaration public readonly ContentType ContentType { get; } Property Value Type Description ContentType ContentType Declaration public readonly ContentType ContentType { get; } Property Value Type Description ContentType Data Declaration public readonly byte[] Data { get; } Property Value Type Description System.Byte [] Data Declaration public readonly byte[] Data { get; } Property Value Type Description System.Byte [] Error Declaration public readonly ErrorResponse Error { get; } Property Value Type Description ErrorResponse Error Declaration public readonly ErrorResponse Error { get; } Property Value Type Description ErrorResponse Payload Declaration public readonly T Payload { get; } Property Value Type Description T Payload Declaration public readonly T Payload { get; } Property Value Type Description T ResponseCode Declaration public readonly long ResponseCode { get; } Property Value Type Description System.Int64 ResponseCode Declaration public readonly long ResponseCode { get; } Property Value Type Description System.Int64 Status Declaration public readonly Result Status { get; } Property Value Type Description Result Status Declaration public readonly Result Status { get; } Property Value Type Description Result Methods Deconstruct(out ErrorResponse, out T) Declaration public readonly void Deconstruct(out ErrorResponse error, out T payload) Parameters Type Name Description ErrorResponse error T payload Deconstruct(out ErrorResponse, out T) Declaration public readonly void Deconstruct(out ErrorResponse error, out T payload) Parameters Type Name Description ErrorResponse error T payload GetText() Declaration public readonly string GetText() Returns Type Description System.String GetText() Declaration public readonly string GetText() Returns Type Description System.String Operators Implicit(AlgoApiResponse to AlgoApiResponse<T>) Declaration public static implicit operator AlgoApiResponse<T>(AlgoApiResponse response) Parameters Type Name Description AlgoApiResponse response Returns Type Description AlgoApiResponse <T> Implicit(AlgoApiResponse to AlgoApiResponse<T>) Declaration public static implicit operator AlgoApiResponse<T>(AlgoApiResponse response) Parameters Type Name Description AlgoApiResponse response Returns Type Description AlgoApiResponse <T> Implicit(AlgoApiResponse<T> to AlgoApiResponse) Declaration public static implicit operator AlgoApiResponse(AlgoApiResponse<T> response) Parameters Type Name Description AlgoApiResponse <T> response Returns Type Description AlgoApiResponse Implicit(AlgoApiResponse<T> to AlgoApiResponse) Declaration public static implicit operator AlgoApiResponse(AlgoApiResponse<T> response) Parameters Type Name Description AlgoApiResponse <T> response Returns Type Description AlgoApiResponse Implements IAlgoApiResponse<T> IAlgoApiResponse"
  },
  "api/AlgoSdk.AlgoApiSerializer.html": {
    "href": "api/AlgoSdk.AlgoApiSerializer.html",
    "title": "Class AlgoApiSerializer | Unity Algorand SDK",
    "keywords": "Class AlgoApiSerializer Contains functions for serializing and deserializing AlgoSdk types Inheritance System.Object AlgoApiSerializer Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class AlgoApiSerializer Methods Deserialize<T>(NativeArray<Byte>, ContentType) Deserializes raw data based on its ContentType Declaration public static T Deserialize<T>(NativeArray<byte> bytes, ContentType contentType) Parameters Type Name Description NativeArray < System.Byte > bytes The raw data to deserialize ContentType contentType The content type of the raw data (Json | MessagePack) Returns Type Description T The data deserialized as T Type Parameters Name Description T The type to deserialize to Deserialize<T>(NativeArray<Byte>, ContentType) Deserializes raw data based on its ContentType Declaration public static T Deserialize<T>(NativeArray<byte> bytes, ContentType contentType) Parameters Type Name Description NativeArray < System.Byte > bytes The raw data to deserialize ContentType contentType The content type of the raw data (Json | MessagePack) Returns Type Description T The data deserialized as T Type Parameters Name Description T The type to deserialize to Deserialize<T>(Byte[], ContentType) Deserializes raw data based on its ContentType Declaration public static T Deserialize<T>(byte[] bytes, ContentType contentType) Parameters Type Name Description System.Byte [] bytes The raw data to deserialize ContentType contentType The content type of the raw data (Json | MessagePack) Returns Type Description T The data deserialized as T Type Parameters Name Description T The type to deserialize to Deserialize<T>(Byte[], ContentType) Deserializes raw data based on its ContentType Declaration public static T Deserialize<T>(byte[] bytes, ContentType contentType) Parameters Type Name Description System.Byte [] bytes The raw data to deserialize ContentType contentType The content type of the raw data (Json | MessagePack) Returns Type Description T The data deserialized as T Type Parameters Name Description T The type to deserialize to DeserializeJson<T>(NativeArray<Byte>) Deserialize JSON encoded as UTF8 bytes Declaration public static T DeserializeJson<T>(NativeArray<byte> bytes) Parameters Type Name Description NativeArray < System.Byte > bytes UTF8 Bytes that can be decoded into JSON Returns Type Description T The data deserialized as T Type Parameters Name Description T The type to deserialize the data into DeserializeJson<T>(NativeArray<Byte>) Deserialize JSON encoded as UTF8 bytes Declaration public static T DeserializeJson<T>(NativeArray<byte> bytes) Parameters Type Name Description NativeArray < System.Byte > bytes UTF8 Bytes that can be decoded into JSON Returns Type Description T The data deserialized as T Type Parameters Name Description T The type to deserialize the data into DeserializeJson<T>(NativeText) Deserialize JSON text into an object Declaration public static T DeserializeJson<T>(NativeText text) Parameters Type Name Description NativeText text The JSON text Returns Type Description T The data deserialized as T Type Parameters Name Description T The type of the object that will be deserialized into DeserializeJson<T>(NativeText) Deserialize JSON text into an object Declaration public static T DeserializeJson<T>(NativeText text) Parameters Type Name Description NativeText text The JSON text Returns Type Description T The data deserialized as T Type Parameters Name Description T The type of the object that will be deserialized into DeserializeJson<T>(Byte[]) Deserialize JSON encoded as UTF8 bytes Declaration public static T DeserializeJson<T>(byte[] bytes) Parameters Type Name Description System.Byte [] bytes UTF8 Bytes that can be decoded into JSON Returns Type Description T The data deserialized as T Type Parameters Name Description T The type to deserialize the data into DeserializeJson<T>(Byte[]) Deserialize JSON encoded as UTF8 bytes Declaration public static T DeserializeJson<T>(byte[] bytes) Parameters Type Name Description System.Byte [] bytes UTF8 Bytes that can be decoded into JSON Returns Type Description T The data deserialized as T Type Parameters Name Description T The type to deserialize the data into DeserializeJson<T>(String) Deserialize JSON text into an object Declaration public static T DeserializeJson<T>(string text) Parameters Type Name Description System.String text The JSON text Returns Type Description T The data deserialized as T Type Parameters Name Description T The type of the object that will be deserialized into DeserializeJson<T>(String) Deserialize JSON text into an object Declaration public static T DeserializeJson<T>(string text) Parameters Type Name Description System.String text The JSON text Returns Type Description T The data deserialized as T Type Parameters Name Description T The type of the object that will be deserialized into DeserializeMessagePack<T>(NativeArray<Byte>) Deserialize messagepack bytes into an object Declaration public static T DeserializeMessagePack<T>(NativeArray<byte> bytes) Parameters Type Name Description NativeArray < System.Byte > bytes The messagepack bytes Returns Type Description T The data deserialized as T Type Parameters Name Description T The type of the object that will be deserialized into DeserializeMessagePack<T>(NativeArray<Byte>) Deserialize messagepack bytes into an object Declaration public static T DeserializeMessagePack<T>(NativeArray<byte> bytes) Parameters Type Name Description NativeArray < System.Byte > bytes The messagepack bytes Returns Type Description T The data deserialized as T Type Parameters Name Description T The type of the object that will be deserialized into SerializeJson<T>(T) Serialize an object into json text Declaration public static string SerializeJson<T>(T obj) Parameters Type Name Description T obj The object to serialize Returns Type Description System.String json text as a string Type Parameters Name Description T The type of the object that is serialized SerializeJson<T>(T) Serialize an object into json text Declaration public static string SerializeJson<T>(T obj) Parameters Type Name Description T obj The object to serialize Returns Type Description System.String json text as a string Type Parameters Name Description T The type of the object that is serialized SerializeJson<T>(T, Allocator) Serialize an object into json text Declaration public static NativeText SerializeJson<T>(T obj, Allocator allocator) Parameters Type Name Description T obj The object to serialize Allocator allocator The allocator to use for the created text of json Returns Type Description NativeText A allocated from the given allocator Type Parameters Name Description T The type of the object that is serialized SerializeJson<T>(T, Allocator) Serialize an object into json text Declaration public static NativeText SerializeJson<T>(T obj, Allocator allocator) Parameters Type Name Description T obj The object to serialize Allocator allocator The allocator to use for the created text of json Returns Type Description NativeText A allocated from the given allocator Type Parameters Name Description T The type of the object that is serialized SerializeMessagePack<T>(T) Serialize an object into messagepack bytes Declaration public static byte[] SerializeMessagePack<T>(T obj) Parameters Type Name Description T obj The object to serialize Returns Type Description System.Byte [] The message pack message as an array of bytes Type Parameters Name Description T The type of the object that is serialized SerializeMessagePack<T>(T) Serialize an object into messagepack bytes Declaration public static byte[] SerializeMessagePack<T>(T obj) Parameters Type Name Description T obj The object to serialize Returns Type Description System.Byte [] The message pack message as an array of bytes Type Parameters Name Description T The type of the object that is serialized SerializeMessagePack<T>(T, Allocator) Serialize an object into messagepack bytes Declaration public static NativeList<byte> SerializeMessagePack<T>(T obj, Allocator allocator) Parameters Type Name Description T obj The object to serialize Allocator allocator The allocator to use for the created list of message pack bytes Returns Type Description NativeList < System.Byte > A allocated using the given allocator Type Parameters Name Description T The type of the object that is serialized SerializeMessagePack<T>(T, Allocator) Serialize an object into messagepack bytes Declaration public static NativeList<byte> SerializeMessagePack<T>(T obj, Allocator allocator) Parameters Type Name Description T obj The object to serialize Allocator allocator The allocator to use for the created list of message pack bytes Returns Type Description NativeList < System.Byte > A allocated using the given allocator Type Parameters Name Description T The type of the object that is serialized"
  },
  "api/AlgoSdk.AlgodClient.html": {
    "href": "api/AlgoSdk.AlgodClient.html",
    "title": "Struct AlgodClient | Unity Algorand SDK",
    "keywords": "Struct AlgodClient A client for accessing the algod service Implements IAlgodClient IAlgoApiClient Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct AlgodClient : IAlgodClient, IAlgoApiClient Remarks The algod service is responsible for handling information required to create and send transactions. Constructors AlgodClient(String, Header[]) Create a new algod client Declaration public AlgodClient(string address, params Header[] headers) Parameters Type Name Description System.String address url of the algod service, including the port, e.g. \"http://localhost:4001\" Header [] headers extra headers to add to the requests. e.g. (\"x-api-key, my-api-key\") AlgodClient(String, Header[]) Create a new algod client Declaration public AlgodClient(string address, params Header[] headers) Parameters Type Name Description System.String address url of the algod service, including the port, e.g. \"http://localhost:4001\" Header [] headers extra headers to add to the requests. e.g. (\"x-api-key, my-api-key\") AlgodClient(String, String, Header[]) Create a new algod client Declaration public AlgodClient(string address, string token, params Header[] headers) Parameters Type Name Description System.String address url of the algod service, including the port, e.g. \"http://localhost:4001\" System.String token token used in authenticating to the algod service Header [] headers extra headers to add to the requests. e.g. (\"x-api-key, my-api-key\") AlgodClient(String, String, Header[]) Create a new algod client Declaration public AlgodClient(string address, string token, params Header[] headers) Parameters Type Name Description System.String address url of the algod service, including the port, e.g. \"http://localhost:4001\" System.String token token used in authenticating to the algod service Header [] headers extra headers to add to the requests. e.g. (\"x-api-key, my-api-key\") Properties Address Declaration public readonly string Address { get; } Property Value Type Description System.String Address Declaration public readonly string Address { get; } Property Value Type Description System.String Headers Declaration public readonly Header[] Headers { get; } Property Value Type Description Header [] Headers Declaration public readonly Header[] Headers { get; } Property Value Type Description Header [] Token Declaration public readonly string Token { get; } Property Value Type Description System.String Token Declaration public readonly string Token { get; } Property Value Type Description System.String TokenHeader Declaration public readonly string TokenHeader { get; } Property Value Type Description System.String TokenHeader Declaration public readonly string TokenHeader { get; } Property Value Type Description System.String Methods AbortCatchup(String) Declaration public AlgoApiRequest.Sent<CatchupMessage> AbortCatchup(string catchpoint) Parameters Type Name Description System.String catchpoint Returns Type Description AlgoApiRequest.Sent < CatchupMessage > AbortCatchup(String) Declaration public AlgoApiRequest.Sent<CatchupMessage> AbortCatchup(string catchpoint) Parameters Type Name Description System.String catchpoint Returns Type Description AlgoApiRequest.Sent < CatchupMessage > GetAccountInformation(Address) Declaration public AlgoApiRequest.Sent<AccountInfo> GetAccountInformation(Address accountAddress) Parameters Type Name Description Address accountAddress Returns Type Description AlgoApiRequest.Sent < AccountInfo > GetAccountInformation(Address) Declaration public AlgoApiRequest.Sent<AccountInfo> GetAccountInformation(Address accountAddress) Parameters Type Name Description Address accountAddress Returns Type Description AlgoApiRequest.Sent < AccountInfo > GetApplication(UInt64) Declaration public AlgoApiRequest.Sent<Application> GetApplication(ulong applicationId) Parameters Type Name Description System.UInt64 applicationId Returns Type Description AlgoApiRequest.Sent < Application > GetApplication(UInt64) Declaration public AlgoApiRequest.Sent<Application> GetApplication(ulong applicationId) Parameters Type Name Description System.UInt64 applicationId Returns Type Description AlgoApiRequest.Sent < Application > GetAsset(UInt64) Declaration public AlgoApiRequest.Sent<Asset> GetAsset(ulong assetId) Parameters Type Name Description System.UInt64 assetId Returns Type Description AlgoApiRequest.Sent < Asset > GetAsset(UInt64) Declaration public AlgoApiRequest.Sent<Asset> GetAsset(ulong assetId) Parameters Type Name Description System.UInt64 assetId Returns Type Description AlgoApiRequest.Sent < Asset > GetBlock(UInt64) Declaration public AlgoApiRequest.Sent<BlockResponse> GetBlock(ulong round) Parameters Type Name Description System.UInt64 round Returns Type Description AlgoApiRequest.Sent < BlockResponse > GetBlock(UInt64) Declaration public AlgoApiRequest.Sent<BlockResponse> GetBlock(ulong round) Parameters Type Name Description System.UInt64 round Returns Type Description AlgoApiRequest.Sent < BlockResponse > GetCurrentStatus() Declaration public AlgoApiRequest.Sent<Status> GetCurrentStatus() Returns Type Description AlgoApiRequest.Sent < Status > GetCurrentStatus() Declaration public AlgoApiRequest.Sent<Status> GetCurrentStatus() Returns Type Description AlgoApiRequest.Sent < Status > GetGenesisInformation() Declaration public AlgoApiRequest.Sent<AlgoApiObject> GetGenesisInformation() Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > GetGenesisInformation() Declaration public AlgoApiRequest.Sent<AlgoApiObject> GetGenesisInformation() Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > GetHealth() Declaration public AlgoApiRequest.Sent GetHealth() Returns Type Description AlgoApiRequest.Sent GetHealth() Declaration public AlgoApiRequest.Sent GetHealth() Returns Type Description AlgoApiRequest.Sent GetLedgerSupply() Declaration public AlgoApiRequest.Sent<LedgerSupply> GetLedgerSupply() Returns Type Description AlgoApiRequest.Sent < LedgerSupply > GetLedgerSupply() Declaration public AlgoApiRequest.Sent<LedgerSupply> GetLedgerSupply() Returns Type Description AlgoApiRequest.Sent < LedgerSupply > GetMerkleProof(UInt64, TransactionId) Declaration public AlgoApiRequest.Sent<MerkleProof> GetMerkleProof(ulong round, TransactionId txid) Parameters Type Name Description System.UInt64 round TransactionId txid Returns Type Description AlgoApiRequest.Sent < MerkleProof > GetMerkleProof(UInt64, TransactionId) Declaration public AlgoApiRequest.Sent<MerkleProof> GetMerkleProof(ulong round, TransactionId txid) Parameters Type Name Description System.UInt64 round TransactionId txid Returns Type Description AlgoApiRequest.Sent < MerkleProof > GetMetrics() Declaration public AlgoApiRequest.Sent GetMetrics() Returns Type Description AlgoApiRequest.Sent GetMetrics() Declaration public AlgoApiRequest.Sent GetMetrics() Returns Type Description AlgoApiRequest.Sent GetPendingTransaction(TransactionId) Declaration public AlgoApiRequest.Sent<PendingTransaction> GetPendingTransaction(TransactionId txid) Parameters Type Name Description TransactionId txid Returns Type Description AlgoApiRequest.Sent < PendingTransaction > GetPendingTransaction(TransactionId) Declaration public AlgoApiRequest.Sent<PendingTransaction> GetPendingTransaction(TransactionId txid) Parameters Type Name Description TransactionId txid Returns Type Description AlgoApiRequest.Sent < PendingTransaction > GetPendingTransactions(UInt64) Declaration public AlgoApiRequest.Sent<PendingTransactions> GetPendingTransactions(ulong max = 0UL) Parameters Type Name Description System.UInt64 max Returns Type Description AlgoApiRequest.Sent < PendingTransactions > GetPendingTransactions(UInt64) Declaration public AlgoApiRequest.Sent<PendingTransactions> GetPendingTransactions(ulong max = 0UL) Parameters Type Name Description System.UInt64 max Returns Type Description AlgoApiRequest.Sent < PendingTransactions > GetPendingTransactionsByAccount(Address, UInt64) Declaration public AlgoApiRequest.Sent<PendingTransactions> GetPendingTransactionsByAccount(Address accountAddress, ulong max = 0UL) Parameters Type Name Description Address accountAddress System.UInt64 max Returns Type Description AlgoApiRequest.Sent < PendingTransactions > GetPendingTransactionsByAccount(Address, UInt64) Declaration public AlgoApiRequest.Sent<PendingTransactions> GetPendingTransactionsByAccount(Address accountAddress, ulong max = 0UL) Parameters Type Name Description Address accountAddress System.UInt64 max Returns Type Description AlgoApiRequest.Sent < PendingTransactions > GetStatusAfterWaitingForRound(UInt64) Declaration public AlgoApiRequest.Sent<Status> GetStatusAfterWaitingForRound(ulong round) Parameters Type Name Description System.UInt64 round Returns Type Description AlgoApiRequest.Sent < Status > GetStatusAfterWaitingForRound(UInt64) Declaration public AlgoApiRequest.Sent<Status> GetStatusAfterWaitingForRound(ulong round) Parameters Type Name Description System.UInt64 round Returns Type Description AlgoApiRequest.Sent < Status > GetSuggestedParams() Declaration public AlgoApiRequest.Sent<TransactionParams> GetSuggestedParams() Returns Type Description AlgoApiRequest.Sent < TransactionParams > GetSuggestedParams() Declaration public AlgoApiRequest.Sent<TransactionParams> GetSuggestedParams() Returns Type Description AlgoApiRequest.Sent < TransactionParams > GetSwaggerSpec() Declaration public AlgoApiRequest.Sent<AlgoApiObject> GetSwaggerSpec() Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > GetSwaggerSpec() Declaration public AlgoApiRequest.Sent<AlgoApiObject> GetSwaggerSpec() Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > GetVersions() Declaration public AlgoApiRequest.Sent<Version> GetVersions() Returns Type Description AlgoApiRequest.Sent < Version > GetVersions() Declaration public AlgoApiRequest.Sent<Version> GetVersions() Returns Type Description AlgoApiRequest.Sent < Version > RegisterParticipationKeys(String, UInt64, Optional<UInt64>, Optional<Boolean>, Optional<Boolean>) Declaration public AlgoApiRequest.Sent<TransactionIdResponse> RegisterParticipationKeys(string accountAddress, ulong fee = 1000UL, Optional<ulong> keyDilution = default(Optional<ulong>), Optional<bool> noWait = default(Optional<bool>), Optional<bool> roundLastValid = default(Optional<bool>)) Parameters Type Name Description System.String accountAddress System.UInt64 fee Optional < System.UInt64 > keyDilution Optional < System.Boolean > noWait Optional < System.Boolean > roundLastValid Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > RegisterParticipationKeys(String, UInt64, Optional<UInt64>, Optional<Boolean>, Optional<Boolean>) Declaration public AlgoApiRequest.Sent<TransactionIdResponse> RegisterParticipationKeys(string accountAddress, ulong fee = 1000UL, Optional<ulong> keyDilution = default(Optional<ulong>), Optional<bool> noWait = default(Optional<bool>), Optional<bool> roundLastValid = default(Optional<bool>)) Parameters Type Name Description System.String accountAddress System.UInt64 fee Optional < System.UInt64 > keyDilution Optional < System.Boolean > noWait Optional < System.Boolean > roundLastValid Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > SendTransaction(Byte[]) Declaration public AlgoApiRequest.Sent<TransactionIdResponse> SendTransaction(byte[] txn) Parameters Type Name Description System.Byte [] txn Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > SendTransaction(Byte[]) Declaration public AlgoApiRequest.Sent<TransactionIdResponse> SendTransaction(byte[] txn) Parameters Type Name Description System.Byte [] txn Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > SendTransaction<T>(Signed<T>) Declaration public AlgoApiRequest.Sent<TransactionIdResponse> SendTransaction<T>(Signed<T> txn) where T : struct, ITransaction, IEquatable<T> Parameters Type Name Description Signed <T> txn Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > Type Parameters Name Description T SendTransaction<T>(Signed<T>) Declaration public AlgoApiRequest.Sent<TransactionIdResponse> SendTransaction<T>(Signed<T> txn) where T : struct, ITransaction, IEquatable<T> Parameters Type Name Description Signed <T> txn Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > Type Parameters Name Description T SendTransactions(SignedTransaction[]) Declaration public AlgoApiRequest.Sent<TransactionIdResponse> SendTransactions(params SignedTransaction[] txns) Parameters Type Name Description SignedTransaction [] txns Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > SendTransactions(SignedTransaction[]) Declaration public AlgoApiRequest.Sent<TransactionIdResponse> SendTransactions(params SignedTransaction[] txns) Parameters Type Name Description SignedTransaction [] txns Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > SendTransactions(Byte[][]) Declaration public AlgoApiRequest.Sent<TransactionIdResponse> SendTransactions(params byte[][] signedTxns) Parameters Type Name Description System.Byte [][] signedTxns Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > SendTransactions(Byte[][]) Declaration public AlgoApiRequest.Sent<TransactionIdResponse> SendTransactions(params byte[][] signedTxns) Parameters Type Name Description System.Byte [][] signedTxns Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > ShutDown(Optional<UInt64>) Declaration public AlgoApiRequest.Sent ShutDown(Optional<ulong> timeout = default(Optional<ulong>)) Parameters Type Name Description Optional < System.UInt64 > timeout Returns Type Description AlgoApiRequest.Sent ShutDown(Optional<UInt64>) Declaration public AlgoApiRequest.Sent ShutDown(Optional<ulong> timeout = default(Optional<ulong>)) Parameters Type Name Description Optional < System.UInt64 > timeout Returns Type Description AlgoApiRequest.Sent StartCatchup(String) Declaration public AlgoApiRequest.Sent<CatchupMessage> StartCatchup(string catchpoint) Parameters Type Name Description System.String catchpoint Returns Type Description AlgoApiRequest.Sent < CatchupMessage > StartCatchup(String) Declaration public AlgoApiRequest.Sent<CatchupMessage> StartCatchup(string catchpoint) Parameters Type Name Description System.String catchpoint Returns Type Description AlgoApiRequest.Sent < CatchupMessage > TealCompile(String) Declaration public AlgoApiRequest.Sent<TealCompilationResult> TealCompile(string source) Parameters Type Name Description System.String source Returns Type Description AlgoApiRequest.Sent < TealCompilationResult > TealCompile(String) Declaration public AlgoApiRequest.Sent<TealCompilationResult> TealCompile(string source) Parameters Type Name Description System.String source Returns Type Description AlgoApiRequest.Sent < TealCompilationResult > TealDryrun(Optional<DryrunRequest>) Declaration public AlgoApiRequest.Sent<DryrunResults> TealDryrun(Optional<DryrunRequest> dryrunRequest = default(Optional<DryrunRequest>)) Parameters Type Name Description Optional < DryrunRequest > dryrunRequest Returns Type Description AlgoApiRequest.Sent < DryrunResults > TealDryrun(Optional<DryrunRequest>) Declaration public AlgoApiRequest.Sent<DryrunResults> TealDryrun(Optional<DryrunRequest> dryrunRequest = default(Optional<DryrunRequest>)) Parameters Type Name Description Optional < DryrunRequest > dryrunRequest Returns Type Description AlgoApiRequest.Sent < DryrunResults > Implements IAlgodClient IAlgoApiClient"
  },
  "api/AlgoSdk.AppCallTxn.html": {
    "href": "api/AlgoSdk.AppCallTxn.html",
    "title": "Struct AppCallTxn | Unity Algorand SDK",
    "keywords": "Struct AppCallTxn Implements IAppCallTxn ITransaction System.IEquatable < AppCallTxn > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct AppCallTxn : IAppCallTxn, ITransaction, IEquatable<AppCallTxn> Properties Accounts Declaration public Address[] Accounts { get; set; } Property Value Type Description Address [] Accounts Declaration public Address[] Accounts { get; set; } Property Value Type Description Address [] AppArguments Declaration public CompiledTeal AppArguments { get; set; } Property Value Type Description CompiledTeal AppArguments Declaration public CompiledTeal AppArguments { get; set; } Property Value Type Description CompiledTeal ApplicationId Declaration public ulong ApplicationId { get; set; } Property Value Type Description System.UInt64 ApplicationId Declaration public ulong ApplicationId { get; set; } Property Value Type Description System.UInt64 ApprovalProgram Declaration public CompiledTeal ApprovalProgram { get; set; } Property Value Type Description CompiledTeal ApprovalProgram Declaration public CompiledTeal ApprovalProgram { get; set; } Property Value Type Description CompiledTeal ClearStateProgram Declaration public CompiledTeal ClearStateProgram { get; set; } Property Value Type Description CompiledTeal ClearStateProgram Declaration public CompiledTeal ClearStateProgram { get; set; } Property Value Type Description CompiledTeal ExtraProgramPages Declaration public ulong ExtraProgramPages { get; set; } Property Value Type Description System.UInt64 ExtraProgramPages Declaration public ulong ExtraProgramPages { get; set; } Property Value Type Description System.UInt64 Fee Declaration public ulong Fee { get; set; } Property Value Type Description System.UInt64 Fee Declaration public ulong Fee { get; set; } Property Value Type Description System.UInt64 FirstValidRound Declaration public ulong FirstValidRound { get; set; } Property Value Type Description System.UInt64 FirstValidRound Declaration public ulong FirstValidRound { get; set; } Property Value Type Description System.UInt64 ForeignApps Declaration public ulong[] ForeignApps { get; set; } Property Value Type Description System.UInt64 [] ForeignApps Declaration public ulong[] ForeignApps { get; set; } Property Value Type Description System.UInt64 [] ForeignAssets Declaration public ulong[] ForeignAssets { get; set; } Property Value Type Description System.UInt64 [] ForeignAssets Declaration public ulong[] ForeignAssets { get; set; } Property Value Type Description System.UInt64 [] GenesisHash Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisHash Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisId Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes GenesisId Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes GlobalStateSchema Declaration public StateSchema GlobalStateSchema { get; set; } Property Value Type Description StateSchema GlobalStateSchema Declaration public StateSchema GlobalStateSchema { get; set; } Property Value Type Description StateSchema Group Declaration public Sha512_256_Hash Group { get; set; } Property Value Type Description Sha512_256_Hash Group Declaration public Sha512_256_Hash Group { get; set; } Property Value Type Description Sha512_256_Hash LastValidRound Declaration public ulong LastValidRound { get; set; } Property Value Type Description System.UInt64 LastValidRound Declaration public ulong LastValidRound { get; set; } Property Value Type Description System.UInt64 Lease Declaration public Sha512_256_Hash Lease { get; set; } Property Value Type Description Sha512_256_Hash Lease Declaration public Sha512_256_Hash Lease { get; set; } Property Value Type Description Sha512_256_Hash LocalStateSchema Declaration public StateSchema LocalStateSchema { get; set; } Property Value Type Description StateSchema LocalStateSchema Declaration public StateSchema LocalStateSchema { get; set; } Property Value Type Description StateSchema Note Declaration public byte[] Note { get; set; } Property Value Type Description System.Byte [] Note Declaration public byte[] Note { get; set; } Property Value Type Description System.Byte [] OnComplete Declaration public OnCompletion OnComplete { get; set; } Property Value Type Description OnCompletion OnComplete Declaration public OnCompletion OnComplete { get; set; } Property Value Type Description OnCompletion RekeyTo Declaration public Address RekeyTo { get; set; } Property Value Type Description Address RekeyTo Declaration public Address RekeyTo { get; set; } Property Value Type Description Address Sender Declaration public Address Sender { get; set; } Property Value Type Description Address Sender Declaration public Address Sender { get; set; } Property Value Type Description Address TransactionType Declaration public TransactionType TransactionType { get; } Property Value Type Description TransactionType TransactionType Declaration public TransactionType TransactionType { get; } Property Value Type Description TransactionType Methods CopyFrom(Transaction) Declaration public void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction CopyFrom(Transaction) Declaration public void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction CopyTo(ref Transaction) Declaration public void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction CopyTo(ref Transaction) Declaration public void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction Equals(AppCallTxn) Declaration public bool Equals(AppCallTxn other) Parameters Type Name Description AppCallTxn other Returns Type Description System.Boolean Equals(AppCallTxn) Declaration public bool Equals(AppCallTxn other) Parameters Type Name Description AppCallTxn other Returns Type Description System.Boolean Implements IAppCallTxn ITransaction System.IEquatable<T>"
  },
  "api/AlgoSdk.AppCallTxn.Params.html": {
    "href": "api/AlgoSdk.AppCallTxn.Params.html",
    "title": "Struct AppCallTxn.Params | Unity Algorand SDK",
    "keywords": "Struct AppCallTxn.Params Implements System.IEquatable < AppCallTxn.Params > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct Params : IEquatable<AppCallTxn.Params> Fields Accounts Declaration public Address[] Accounts Field Value Type Description Address [] Accounts Declaration public Address[] Accounts Field Value Type Description Address [] AppArguments Declaration public CompiledTeal AppArguments Field Value Type Description CompiledTeal AppArguments Declaration public CompiledTeal AppArguments Field Value Type Description CompiledTeal ApplicationId Declaration public ulong ApplicationId Field Value Type Description System.UInt64 ApplicationId Declaration public ulong ApplicationId Field Value Type Description System.UInt64 ApprovalProgram Declaration public CompiledTeal ApprovalProgram Field Value Type Description CompiledTeal ApprovalProgram Declaration public CompiledTeal ApprovalProgram Field Value Type Description CompiledTeal ClearStateProgram Declaration public CompiledTeal ClearStateProgram Field Value Type Description CompiledTeal ClearStateProgram Declaration public CompiledTeal ClearStateProgram Field Value Type Description CompiledTeal ExtraProgramPages Declaration public ulong ExtraProgramPages Field Value Type Description System.UInt64 ExtraProgramPages Declaration public ulong ExtraProgramPages Field Value Type Description System.UInt64 ForeignApps Declaration public ulong[] ForeignApps Field Value Type Description System.UInt64 [] ForeignApps Declaration public ulong[] ForeignApps Field Value Type Description System.UInt64 [] ForeignAssets Declaration public ulong[] ForeignAssets Field Value Type Description System.UInt64 [] ForeignAssets Declaration public ulong[] ForeignAssets Field Value Type Description System.UInt64 [] GlobalStateSchema Declaration public StateSchema GlobalStateSchema Field Value Type Description StateSchema GlobalStateSchema Declaration public StateSchema GlobalStateSchema Field Value Type Description StateSchema LocalStateSchema Declaration public StateSchema LocalStateSchema Field Value Type Description StateSchema LocalStateSchema Declaration public StateSchema LocalStateSchema Field Value Type Description StateSchema OnComplete Declaration public OnCompletion OnComplete Field Value Type Description OnCompletion OnComplete Declaration public OnCompletion OnComplete Field Value Type Description OnCompletion Methods Equals(AppCallTxn.Params) Declaration public bool Equals(AppCallTxn.Params other) Parameters Type Name Description AppCallTxn.Params other Returns Type Description System.Boolean Equals(AppCallTxn.Params) Declaration public bool Equals(AppCallTxn.Params other) Parameters Type Name Description AppCallTxn.Params other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.Application.html": {
    "href": "api/AlgoSdk.Application.html",
    "title": "Struct Application | Unity Algorand SDK",
    "keywords": "Struct Application Application index and its parameters Implements System.IEquatable < Application > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct Application : IEquatable<Application> Fields CreatedAtRound Round when this application was created. Declaration public ulong CreatedAtRound Field Value Type Description System.UInt64 CreatedAtRound Round when this application was created. Declaration public ulong CreatedAtRound Field Value Type Description System.UInt64 Deleted Whether or not this application is currently deleted. Declaration public Optional<bool> Deleted Field Value Type Description Optional < System.Boolean > Deleted Whether or not this application is currently deleted. Declaration public Optional<bool> Deleted Field Value Type Description Optional < System.Boolean > DeletedAtRound Round when this application was deleted. Declaration public ulong DeletedAtRound Field Value Type Description System.UInt64 DeletedAtRound Round when this application was deleted. Declaration public ulong DeletedAtRound Field Value Type Description System.UInt64 HashPrefix Bytes prefix when hashing this struct Declaration public static readonly byte[] HashPrefix Field Value Type Description System.Byte [] HashPrefix Bytes prefix when hashing this struct Declaration public static readonly byte[] HashPrefix Field Value Type Description System.Byte [] Id [appidx] application index. Declaration public ulong Id Field Value Type Description System.UInt64 Id [appidx] application index. Declaration public ulong Id Field Value Type Description System.UInt64 Params [appparams] application parameters. Declaration public ApplicationParams Params Field Value Type Description ApplicationParams Params [appparams] application parameters. Declaration public ApplicationParams Params Field Value Type Description ApplicationParams Methods ComputeAddressFromId(UInt64) Computes the Address from an Id . Declaration public static Address ComputeAddressFromId(ulong appIndex) Parameters Type Name Description System.UInt64 appIndex An application id. Returns Type Description Address An Address . ComputeAddressFromId(UInt64) Computes the Address from an Id . Declaration public static Address ComputeAddressFromId(ulong appIndex) Parameters Type Name Description System.UInt64 appIndex An application id. Returns Type Description Address An Address . Equals(Application) Declaration public bool Equals(Application other) Parameters Type Name Description Application other Returns Type Description System.Boolean Equals(Application) Declaration public bool Equals(Application other) Parameters Type Name Description Application other Returns Type Description System.Boolean GetAddress() Computes the Address from the Id for this application. Declaration public Optional<Address> GetAddress() Returns Type Description Optional < Address > Empty if the Id is empty, otherwise an Address . GetAddress() Computes the Address from the Id for this application. Declaration public Optional<Address> GetAddress() Returns Type Description Optional < Address > Empty if the Id is empty, otherwise an Address . Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.ApplicationLocalState.html": {
    "href": "api/AlgoSdk.ApplicationLocalState.html",
    "title": "Struct ApplicationLocalState | Unity Algorand SDK",
    "keywords": "Struct ApplicationLocalState Stores local state associated with an application. Implements System.IEquatable < ApplicationLocalState > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct ApplicationLocalState : IEquatable<ApplicationLocalState> Fields ClosedOutAtRound Round when account closed out of the application. Declaration public ulong ClosedOutAtRound Field Value Type Description System.UInt64 ClosedOutAtRound Round when account closed out of the application. Declaration public ulong ClosedOutAtRound Field Value Type Description System.UInt64 Deleted Whether or not the application local state is currently deleted from its account. Declaration public Optional<bool> Deleted Field Value Type Description Optional < System.Boolean > Deleted Whether or not the application local state is currently deleted from its account. Declaration public Optional<bool> Deleted Field Value Type Description Optional < System.Boolean > Id The application which this local state is for. Declaration public ulong Id Field Value Type Description System.UInt64 Id The application which this local state is for. Declaration public ulong Id Field Value Type Description System.UInt64 KeyValues [tkv] storage. Declaration public TealKeyValue[] KeyValues Field Value Type Description TealKeyValue [] KeyValues [tkv] storage. Declaration public TealKeyValue[] KeyValues Field Value Type Description TealKeyValue [] OptedInAtRound Round when the account opted into the application. Declaration public ulong OptedInAtRound Field Value Type Description System.UInt64 OptedInAtRound Round when the account opted into the application. Declaration public ulong OptedInAtRound Field Value Type Description System.UInt64 Schema [hsch] schema. Declaration public StateSchema Schema Field Value Type Description StateSchema Schema [hsch] schema. Declaration public StateSchema Schema Field Value Type Description StateSchema Methods Equals(ApplicationLocalState) Declaration public bool Equals(ApplicationLocalState other) Parameters Type Name Description ApplicationLocalState other Returns Type Description System.Boolean Equals(ApplicationLocalState) Declaration public bool Equals(ApplicationLocalState other) Parameters Type Name Description ApplicationLocalState other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.ApplicationParams.html": {
    "href": "api/AlgoSdk.ApplicationParams.html",
    "title": "Struct ApplicationParams | Unity Algorand SDK",
    "keywords": "Struct ApplicationParams Stores the global information associated with an application. Implements System.IEquatable < ApplicationParams > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct ApplicationParams : IEquatable<ApplicationParams> Fields ApprovalProgram Logic executed for every application transaction, except when on-completion is set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Approval programs may reject the transaction. Declaration public CompiledTeal ApprovalProgram Field Value Type Description CompiledTeal ApprovalProgram Logic executed for every application transaction, except when on-completion is set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Approval programs may reject the transaction. Declaration public CompiledTeal ApprovalProgram Field Value Type Description CompiledTeal ClearStateProgram Logic executed for application transactions with on-completion set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Clear state programs cannot reject the transaction. Declaration public CompiledTeal ClearStateProgram Field Value Type Description CompiledTeal ClearStateProgram Logic executed for application transactions with on-completion set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Clear state programs cannot reject the transaction. Declaration public CompiledTeal ClearStateProgram Field Value Type Description CompiledTeal Creator The address that created this application. This is the address where the parameters and global state for this application can be found. Declaration public Address Creator Field Value Type Description Address Creator The address that created this application. This is the address where the parameters and global state for this application can be found. Declaration public Address Creator Field Value Type Description Address ExtraProgramPages [epp] the amount of extra program pages available to this app. Declaration public ulong ExtraProgramPages Field Value Type Description System.UInt64 ExtraProgramPages [epp] the amount of extra program pages available to this app. Declaration public ulong ExtraProgramPages Field Value Type Description System.UInt64 GlobalState global state Declaration public TealKeyValue[] GlobalState Field Value Type Description TealKeyValue [] GlobalState global state Declaration public TealKeyValue[] GlobalState Field Value Type Description TealKeyValue [] GlobalStateSchema global schema Declaration public StateSchema GlobalStateSchema Field Value Type Description StateSchema GlobalStateSchema global schema Declaration public StateSchema GlobalStateSchema Field Value Type Description StateSchema LocalStateSchema local schema Declaration public StateSchema LocalStateSchema Field Value Type Description StateSchema LocalStateSchema local schema Declaration public StateSchema LocalStateSchema Field Value Type Description StateSchema Methods Equals(ApplicationParams) Declaration public bool Equals(ApplicationParams other) Parameters Type Name Description ApplicationParams other Returns Type Description System.Boolean Equals(ApplicationParams) Declaration public bool Equals(ApplicationParams other) Parameters Type Name Description ApplicationParams other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.ApplicationResponse.html": {
    "href": "api/AlgoSdk.ApplicationResponse.html",
    "title": "Struct ApplicationResponse | Unity Algorand SDK",
    "keywords": "Struct ApplicationResponse Implements System.IEquatable < ApplicationResponse > IIndexerResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ApplicationResponse : IEquatable<ApplicationResponse>, IIndexerResponse Properties Application Declaration public Application Application { readonly get; set; } Property Value Type Description Application Application Declaration public Application Application { readonly get; set; } Property Value Type Description Application CurrentRound Declaration public ulong CurrentRound { readonly get; set; } Property Value Type Description System.UInt64 CurrentRound Declaration public ulong CurrentRound { readonly get; set; } Property Value Type Description System.UInt64 Methods Equals(ApplicationResponse) Declaration public bool Equals(ApplicationResponse other) Parameters Type Name Description ApplicationResponse other Returns Type Description System.Boolean Equals(ApplicationResponse) Declaration public bool Equals(ApplicationResponse other) Parameters Type Name Description ApplicationResponse other Returns Type Description System.Boolean Implements System.IEquatable<T> IIndexerResponse"
  },
  "api/AlgoSdk.ApplicationsResponse.html": {
    "href": "api/AlgoSdk.ApplicationsResponse.html",
    "title": "Struct ApplicationsResponse | Unity Algorand SDK",
    "keywords": "Struct ApplicationsResponse Implements System.IEquatable < ApplicationsResponse > IPaginatedResponse IIndexerResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ApplicationsResponse : IEquatable<ApplicationsResponse>, IPaginatedResponse, IIndexerResponse Properties Applications Declaration public Application[] Applications { readonly get; set; } Property Value Type Description Application [] Applications Declaration public Application[] Applications { readonly get; set; } Property Value Type Description Application [] CurrentRound Declaration public ulong CurrentRound { readonly get; set; } Property Value Type Description System.UInt64 CurrentRound Declaration public ulong CurrentRound { readonly get; set; } Property Value Type Description System.UInt64 NextToken Declaration public FixedString128Bytes NextToken { readonly get; set; } Property Value Type Description FixedString128Bytes NextToken Declaration public FixedString128Bytes NextToken { readonly get; set; } Property Value Type Description FixedString128Bytes Methods Equals(ApplicationsResponse) Declaration public bool Equals(ApplicationsResponse other) Parameters Type Name Description ApplicationsResponse other Returns Type Description System.Boolean Equals(ApplicationsResponse) Declaration public bool Equals(ApplicationsResponse other) Parameters Type Name Description ApplicationsResponse other Returns Type Description System.Boolean Implements System.IEquatable<T> IPaginatedResponse IIndexerResponse"
  },
  "api/AlgoSdk.ArrayComparer.html": {
    "href": "api/AlgoSdk.ArrayComparer.html",
    "title": "Class ArrayComparer | Unity Algorand SDK",
    "keywords": "Class ArrayComparer Inheritance System.Object ArrayComparer Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class ArrayComparer Methods Equals(String[], String[]) Declaration public static bool Equals(string[] x, string[] y) Parameters Type Name Description System.String [] x System.String [] y Returns Type Description System.Boolean Equals(String[], String[]) Declaration public static bool Equals(string[] x, string[] y) Parameters Type Name Description System.String [] x System.String [] y Returns Type Description System.Boolean Equals<T>(T[], T[]) Declaration public static bool Equals<T>(T[] x, T[] y) where T : IEquatable<T> Parameters Type Name Description T[] x T[] y Returns Type Description System.Boolean Type Parameters Name Description T Equals<T>(T[], T[]) Declaration public static bool Equals<T>(T[] x, T[] y) where T : IEquatable<T> Parameters Type Name Description T[] x T[] y Returns Type Description System.Boolean Type Parameters Name Description T"
  },
  "api/AlgoSdk.ArrayComparer-1.html": {
    "href": "api/AlgoSdk.ArrayComparer-1.html",
    "title": "Struct ArrayComparer<T> | Unity Algorand SDK",
    "keywords": "Struct ArrayComparer<T> Implements IEqualityComparer <T[]> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ArrayComparer<T> where T : IEquatable<T> Type Parameters Name Description T Fields Instance Declaration public static readonly ArrayComparer<T> Instance Field Value Type Description ArrayComparer <T> Instance Declaration public static readonly ArrayComparer<T> Instance Field Value Type Description ArrayComparer <T> Methods Equals(T[], T[]) Declaration public static bool Equals(T[] x, T[] y) Parameters Type Name Description T[] x T[] y Returns Type Description System.Boolean Equals(T[], T[]) Declaration public static bool Equals(T[] x, T[] y) Parameters Type Name Description T[] x T[] y Returns Type Description System.Boolean GetHashCode(T[]) Declaration public static int GetHashCode(T[] obj) Parameters Type Name Description T[] obj Returns Type Description System.Int32 GetHashCode(T[]) Declaration public static int GetHashCode(T[] obj) Parameters Type Name Description T[] obj Returns Type Description System.Int32 Implements IEqualityComparer<>"
  },
  "api/AlgoSdk.ArrayComparer-2.html": {
    "href": "api/AlgoSdk.ArrayComparer-2.html",
    "title": "Struct ArrayComparer<T, TComparer> | Unity Algorand SDK",
    "keywords": "Struct ArrayComparer<T, TComparer> Implements IEqualityComparer <T[]> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ArrayComparer<T, TComparer> where TComparer : struct, IEqualityComparer<T> Type Parameters Name Description T TComparer Fields Instance Declaration public static readonly ArrayComparer<T, TComparer> Instance Field Value Type Description ArrayComparer <T, TComparer> Instance Declaration public static readonly ArrayComparer<T, TComparer> Instance Field Value Type Description ArrayComparer <T, TComparer> Methods Equals(T[], T[]) Declaration public static bool Equals(T[] x, T[] y) Parameters Type Name Description T[] x T[] y Returns Type Description System.Boolean Equals(T[], T[]) Declaration public static bool Equals(T[] x, T[] y) Parameters Type Name Description T[] x T[] y Returns Type Description System.Boolean GetHashCode(T[]) Declaration public static int GetHashCode(T[] obj) Parameters Type Name Description T[] obj Returns Type Description System.Int32 GetHashCode(T[]) Declaration public static int GetHashCode(T[] obj) Parameters Type Name Description T[] obj Returns Type Description System.Int32 Implements IEqualityComparer<>"
  },
  "api/AlgoSdk.Asset.html": {
    "href": "api/AlgoSdk.Asset.html",
    "title": "Struct Asset | Unity Algorand SDK",
    "keywords": "Struct Asset Specifies both the unique identifier and the parameters for an asset. Implements System.IEquatable < Asset > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct Asset : IEquatable<Asset> Fields CreatedAtRound Round during which this asset was created. Declaration public ulong CreatedAtRound Field Value Type Description System.UInt64 CreatedAtRound Round during which this asset was created. Declaration public ulong CreatedAtRound Field Value Type Description System.UInt64 Deleted Whether or not this asset is currently deleted. Declaration public Optional<bool> Deleted Field Value Type Description Optional < System.Boolean > Deleted Whether or not this asset is currently deleted. Declaration public Optional<bool> Deleted Field Value Type Description Optional < System.Boolean > DestroyedAtRound Round during which this asset was destroyed. Declaration public ulong DestroyedAtRound Field Value Type Description System.UInt64 DestroyedAtRound Round during which this asset was destroyed. Declaration public ulong DestroyedAtRound Field Value Type Description System.UInt64 Index unique asset identifier Declaration public ulong Index Field Value Type Description System.UInt64 Index unique asset identifier Declaration public ulong Index Field Value Type Description System.UInt64 Params Declaration public AssetParams Params Field Value Type Description AssetParams Params Declaration public AssetParams Params Field Value Type Description AssetParams Methods Equals(Asset) Declaration public bool Equals(Asset other) Parameters Type Name Description Asset other Returns Type Description System.Boolean Equals(Asset) Declaration public bool Equals(Asset other) Parameters Type Name Description Asset other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.AssetConfigTxn.html": {
    "href": "api/AlgoSdk.AssetConfigTxn.html",
    "title": "Struct AssetConfigTxn | Unity Algorand SDK",
    "keywords": "Struct AssetConfigTxn Implements IAssetConfigTxn ITransaction System.IEquatable < AssetConfigTxn > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct AssetConfigTxn : IAssetConfigTxn, ITransaction, IEquatable<AssetConfigTxn> Properties AssetParams Declaration public AssetParams AssetParams { get; set; } Property Value Type Description AssetParams AssetParams Declaration public AssetParams AssetParams { get; set; } Property Value Type Description AssetParams ConfigAsset Declaration public ulong ConfigAsset { get; set; } Property Value Type Description System.UInt64 ConfigAsset Declaration public ulong ConfigAsset { get; set; } Property Value Type Description System.UInt64 Fee Declaration public ulong Fee { get; set; } Property Value Type Description System.UInt64 Fee Declaration public ulong Fee { get; set; } Property Value Type Description System.UInt64 FirstValidRound Declaration public ulong FirstValidRound { get; set; } Property Value Type Description System.UInt64 FirstValidRound Declaration public ulong FirstValidRound { get; set; } Property Value Type Description System.UInt64 GenesisHash Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisHash Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisId Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes GenesisId Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes Group Declaration public Sha512_256_Hash Group { get; set; } Property Value Type Description Sha512_256_Hash Group Declaration public Sha512_256_Hash Group { get; set; } Property Value Type Description Sha512_256_Hash LastValidRound Declaration public ulong LastValidRound { get; set; } Property Value Type Description System.UInt64 LastValidRound Declaration public ulong LastValidRound { get; set; } Property Value Type Description System.UInt64 Lease Declaration public Sha512_256_Hash Lease { get; set; } Property Value Type Description Sha512_256_Hash Lease Declaration public Sha512_256_Hash Lease { get; set; } Property Value Type Description Sha512_256_Hash Note Declaration public byte[] Note { get; set; } Property Value Type Description System.Byte [] Note Declaration public byte[] Note { get; set; } Property Value Type Description System.Byte [] RekeyTo Declaration public Address RekeyTo { get; set; } Property Value Type Description Address RekeyTo Declaration public Address RekeyTo { get; set; } Property Value Type Description Address Sender Declaration public Address Sender { get; set; } Property Value Type Description Address Sender Declaration public Address Sender { get; set; } Property Value Type Description Address TransactionType Declaration public TransactionType TransactionType { get; } Property Value Type Description TransactionType TransactionType Declaration public TransactionType TransactionType { get; } Property Value Type Description TransactionType Methods CopyFrom(Transaction) Declaration public void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction CopyFrom(Transaction) Declaration public void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction CopyTo(ref Transaction) Declaration public void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction CopyTo(ref Transaction) Declaration public void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction Equals(AssetConfigTxn) Declaration public bool Equals(AssetConfigTxn other) Parameters Type Name Description AssetConfigTxn other Returns Type Description System.Boolean Equals(AssetConfigTxn) Declaration public bool Equals(AssetConfigTxn other) Parameters Type Name Description AssetConfigTxn other Returns Type Description System.Boolean Implements IAssetConfigTxn ITransaction System.IEquatable<T>"
  },
  "api/AlgoSdk.AssetConfigTxn.Params.html": {
    "href": "api/AlgoSdk.AssetConfigTxn.Params.html",
    "title": "Struct AssetConfigTxn.Params | Unity Algorand SDK",
    "keywords": "Struct AssetConfigTxn.Params Implements System.IEquatable < AssetConfigTxn.Params > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct Params : IEquatable<AssetConfigTxn.Params> Fields AssetParams Declaration public AssetParams AssetParams Field Value Type Description AssetParams AssetParams Declaration public AssetParams AssetParams Field Value Type Description AssetParams ConfigAsset Declaration public ulong ConfigAsset Field Value Type Description System.UInt64 ConfigAsset Declaration public ulong ConfigAsset Field Value Type Description System.UInt64 Methods Equals(AssetConfigTxn.Params) Declaration public bool Equals(AssetConfigTxn.Params other) Parameters Type Name Description AssetConfigTxn.Params other Returns Type Description System.Boolean Equals(AssetConfigTxn.Params) Declaration public bool Equals(AssetConfigTxn.Params other) Parameters Type Name Description AssetConfigTxn.Params other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.AssetFreezeTxn.html": {
    "href": "api/AlgoSdk.AssetFreezeTxn.html",
    "title": "Struct AssetFreezeTxn | Unity Algorand SDK",
    "keywords": "Struct AssetFreezeTxn Implements IAssetFreezeTxn ITransaction System.IEquatable < AssetFreezeTxn > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct AssetFreezeTxn : IAssetFreezeTxn, ITransaction, IEquatable<AssetFreezeTxn> Properties AssetFrozen Declaration public Optional<bool> AssetFrozen { get; set; } Property Value Type Description Optional < System.Boolean > AssetFrozen Declaration public Optional<bool> AssetFrozen { get; set; } Property Value Type Description Optional < System.Boolean > Fee Declaration public ulong Fee { get; set; } Property Value Type Description System.UInt64 Fee Declaration public ulong Fee { get; set; } Property Value Type Description System.UInt64 FirstValidRound Declaration public ulong FirstValidRound { get; set; } Property Value Type Description System.UInt64 FirstValidRound Declaration public ulong FirstValidRound { get; set; } Property Value Type Description System.UInt64 FreezeAccount Declaration public Address FreezeAccount { get; set; } Property Value Type Description Address FreezeAccount Declaration public Address FreezeAccount { get; set; } Property Value Type Description Address FreezeAsset Declaration public ulong FreezeAsset { get; set; } Property Value Type Description System.UInt64 FreezeAsset Declaration public ulong FreezeAsset { get; set; } Property Value Type Description System.UInt64 GenesisHash Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisHash Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisId Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes GenesisId Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes Group Declaration public Sha512_256_Hash Group { get; set; } Property Value Type Description Sha512_256_Hash Group Declaration public Sha512_256_Hash Group { get; set; } Property Value Type Description Sha512_256_Hash LastValidRound Declaration public ulong LastValidRound { get; set; } Property Value Type Description System.UInt64 LastValidRound Declaration public ulong LastValidRound { get; set; } Property Value Type Description System.UInt64 Lease Declaration public Sha512_256_Hash Lease { get; set; } Property Value Type Description Sha512_256_Hash Lease Declaration public Sha512_256_Hash Lease { get; set; } Property Value Type Description Sha512_256_Hash Note Declaration public byte[] Note { get; set; } Property Value Type Description System.Byte [] Note Declaration public byte[] Note { get; set; } Property Value Type Description System.Byte [] RekeyTo Declaration public Address RekeyTo { get; set; } Property Value Type Description Address RekeyTo Declaration public Address RekeyTo { get; set; } Property Value Type Description Address Sender Declaration public Address Sender { get; set; } Property Value Type Description Address Sender Declaration public Address Sender { get; set; } Property Value Type Description Address TransactionType Declaration public TransactionType TransactionType { get; } Property Value Type Description TransactionType TransactionType Declaration public TransactionType TransactionType { get; } Property Value Type Description TransactionType Methods CopyFrom(Transaction) Declaration public void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction CopyFrom(Transaction) Declaration public void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction CopyTo(ref Transaction) Declaration public void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction CopyTo(ref Transaction) Declaration public void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction Equals(AssetFreezeTxn) Declaration public bool Equals(AssetFreezeTxn other) Parameters Type Name Description AssetFreezeTxn other Returns Type Description System.Boolean Equals(AssetFreezeTxn) Declaration public bool Equals(AssetFreezeTxn other) Parameters Type Name Description AssetFreezeTxn other Returns Type Description System.Boolean Implements IAssetFreezeTxn ITransaction System.IEquatable<T>"
  },
  "api/AlgoSdk.AssetFreezeTxn.Params.html": {
    "href": "api/AlgoSdk.AssetFreezeTxn.Params.html",
    "title": "Struct AssetFreezeTxn.Params | Unity Algorand SDK",
    "keywords": "Struct AssetFreezeTxn.Params Implements System.IEquatable < AssetFreezeTxn.Params > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct Params : IEquatable<AssetFreezeTxn.Params> Fields AssetFrozen Declaration public Optional<bool> AssetFrozen Field Value Type Description Optional < System.Boolean > AssetFrozen Declaration public Optional<bool> AssetFrozen Field Value Type Description Optional < System.Boolean > FreezeAccount Declaration public Address FreezeAccount Field Value Type Description Address FreezeAccount Declaration public Address FreezeAccount Field Value Type Description Address FreezeAsset Declaration public ulong FreezeAsset Field Value Type Description System.UInt64 FreezeAsset Declaration public ulong FreezeAsset Field Value Type Description System.UInt64 Methods Equals(AssetFreezeTxn.Params) Declaration public bool Equals(AssetFreezeTxn.Params other) Parameters Type Name Description AssetFreezeTxn.Params other Returns Type Description System.Boolean Equals(AssetFreezeTxn.Params) Declaration public bool Equals(AssetFreezeTxn.Params other) Parameters Type Name Description AssetFreezeTxn.Params other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.AssetHolding.html": {
    "href": "api/AlgoSdk.AssetHolding.html",
    "title": "Struct AssetHolding | Unity Algorand SDK",
    "keywords": "Struct AssetHolding Describes an asset held by an account. Implements System.IEquatable < AssetHolding > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct AssetHolding : IEquatable<AssetHolding> Fields Amount number of units held. Declaration public ulong Amount Field Value Type Description System.UInt64 Amount number of units held. Declaration public ulong Amount Field Value Type Description System.UInt64 AssetId Asset ID of the holding. Declaration public ulong AssetId Field Value Type Description System.UInt64 AssetId Asset ID of the holding. Declaration public ulong AssetId Field Value Type Description System.UInt64 Creator Address that created this asset. This is the address where the parameters for this asset can be found, and also the address where unwanted asset units can be sent in the worst case. Declaration public Address Creator Field Value Type Description Address Creator Address that created this asset. This is the address where the parameters for this asset can be found, and also the address where unwanted asset units can be sent in the worst case. Declaration public Address Creator Field Value Type Description Address Deleted Whether or not the asset holding is currently deleted from its account. Declaration public Optional<bool> Deleted Field Value Type Description Optional < System.Boolean > Deleted Whether or not the asset holding is currently deleted from its account. Declaration public Optional<bool> Deleted Field Value Type Description Optional < System.Boolean > IsFrozen whether or not the holding is frozen. Declaration public bool IsFrozen Field Value Type Description System.Boolean IsFrozen whether or not the holding is frozen. Declaration public bool IsFrozen Field Value Type Description System.Boolean OptedInAtRound Round during which the account opted into this asset holding. Declaration public ulong OptedInAtRound Field Value Type Description System.UInt64 OptedInAtRound Round during which the account opted into this asset holding. Declaration public ulong OptedInAtRound Field Value Type Description System.UInt64 OptedOutAtRound Round during which the account opted out of this asset holding. Declaration public ulong OptedOutAtRound Field Value Type Description System.UInt64 OptedOutAtRound Round during which the account opted out of this asset holding. Declaration public ulong OptedOutAtRound Field Value Type Description System.UInt64 Methods Equals(AssetHolding) Declaration public bool Equals(AssetHolding other) Parameters Type Name Description AssetHolding other Returns Type Description System.Boolean Equals(AssetHolding) Declaration public bool Equals(AssetHolding other) Parameters Type Name Description AssetHolding other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.AssetParams.html": {
    "href": "api/AlgoSdk.AssetParams.html",
    "title": "Struct AssetParams | Unity Algorand SDK",
    "keywords": "Struct AssetParams AssetParams specifies the parameters for an asset. [apar] when part of an AssetConfig transaction. Implements System.IEquatable < AssetParams > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct AssetParams : IEquatable<AssetParams> Fields Clawback Address of account used to clawback holdings of this asset. If empty, clawback is not permitted. Declaration public Address Clawback Field Value Type Description Address Clawback Address of account used to clawback holdings of this asset. If empty, clawback is not permitted. Declaration public Address Clawback Field Value Type Description Address Creator The address that created this asset. This is the address where the parameters for this asset can be found, and also the address where unwanted asset units can be sent in the worst case. Declaration public Address Creator Field Value Type Description Address Creator The address that created this asset. This is the address where the parameters for this asset can be found, and also the address where unwanted asset units can be sent in the worst case. Declaration public Address Creator Field Value Type Description Address Decimals The number of digits to use after the decimal point when displaying this asset. If 0, the asset is not divisible. If 1, the base unit of the asset is in tenths. If 2, the base unit of the asset is in hundredths, and so on. This value must be between 0 and 19 (inclusive). Minimum value: 0. Maximum value: 19. Declaration public uint Decimals Field Value Type Description System.UInt32 Decimals The number of digits to use after the decimal point when displaying this asset. If 0, the asset is not divisible. If 1, the base unit of the asset is in tenths. If 2, the base unit of the asset is in hundredths, and so on. This value must be between 0 and 19 (inclusive). Minimum value: 0. Maximum value: 19. Declaration public uint Decimals Field Value Type Description System.UInt32 DefaultFrozen Whether holdings of this asset are frozen by default. Declaration public bool DefaultFrozen Field Value Type Description System.Boolean DefaultFrozen Whether holdings of this asset are frozen by default. Declaration public bool DefaultFrozen Field Value Type Description System.Boolean Freeze Address of account used to freeze holdings of this asset. If empty, freezing is not permitted. Declaration public Address Freeze Field Value Type Description Address Freeze Address of account used to freeze holdings of this asset. If empty, freezing is not permitted. Declaration public Address Freeze Field Value Type Description Address Manager Address of account used to manage the keys of this asset and to destroy it. Declaration public Address Manager Field Value Type Description Address Manager Address of account used to manage the keys of this asset and to destroy it. Declaration public Address Manager Field Value Type Description Address MetadataHash A commitment to some unspecified asset metadata. The format of this metadata is up to the application. Declaration public Sha512_256_Hash MetadataHash Field Value Type Description Sha512_256_Hash MetadataHash A commitment to some unspecified asset metadata. The format of this metadata is up to the application. Declaration public Sha512_256_Hash MetadataHash Field Value Type Description Sha512_256_Hash Name Name of this asset, as supplied by the creator. Included only when the asset name is composed of printable utf-8 characters. Declaration public FixedString64Bytes Name Field Value Type Description FixedString64Bytes Name Name of this asset, as supplied by the creator. Included only when the asset name is composed of printable utf-8 characters. Declaration public FixedString64Bytes Name Field Value Type Description FixedString64Bytes Reserve Address of account holding reserve (non-minted) units of this asset. Declaration public Address Reserve Field Value Type Description Address Reserve Address of account holding reserve (non-minted) units of this asset. Declaration public Address Reserve Field Value Type Description Address Total The total number of units of this asset. Declaration public ulong Total Field Value Type Description System.UInt64 Total The total number of units of this asset. Declaration public ulong Total Field Value Type Description System.UInt64 UnitName Name of a unit of this asset, as supplied by the creator. Included only when the name of a unit of this asset is composed of printable utf-8 characters. Declaration public FixedString32Bytes UnitName Field Value Type Description FixedString32Bytes UnitName Name of a unit of this asset, as supplied by the creator. Included only when the name of a unit of this asset is composed of printable utf-8 characters. Declaration public FixedString32Bytes UnitName Field Value Type Description FixedString32Bytes Url URL where more information about the asset can be retrieved. Included only when the URL is composed of printable utf-8 characters. Declaration public FixedString128Bytes Url Field Value Type Description FixedString128Bytes Url URL where more information about the asset can be retrieved. Included only when the URL is composed of printable utf-8 characters. Declaration public FixedString128Bytes Url Field Value Type Description FixedString128Bytes Properties NameBase64 Base64 encoded name of this asset, as supplied by the creator. Declaration public FixedString64Bytes NameBase64 { get; set; } Property Value Type Description FixedString64Bytes NameBase64 Base64 encoded name of this asset, as supplied by the creator. Declaration public FixedString64Bytes NameBase64 { get; set; } Property Value Type Description FixedString64Bytes UnitNameBase64 Base64 encoded name of a unit of this asset, as supplied by the creator. Declaration public FixedString32Bytes UnitNameBase64 { get; set; } Property Value Type Description FixedString32Bytes UnitNameBase64 Base64 encoded name of a unit of this asset, as supplied by the creator. Declaration public FixedString32Bytes UnitNameBase64 { get; set; } Property Value Type Description FixedString32Bytes UrlBase64 Base64 encoded URL where more information about the asset can be retrieved. Declaration public FixedString128Bytes UrlBase64 { get; set; } Property Value Type Description FixedString128Bytes UrlBase64 Base64 encoded URL where more information about the asset can be retrieved. Declaration public FixedString128Bytes UrlBase64 { get; set; } Property Value Type Description FixedString128Bytes Methods Equals(AssetParams) Declaration public bool Equals(AssetParams other) Parameters Type Name Description AssetParams other Returns Type Description System.Boolean Equals(AssetParams) Declaration public bool Equals(AssetParams other) Parameters Type Name Description AssetParams other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.AssetResponse.html": {
    "href": "api/AlgoSdk.AssetResponse.html",
    "title": "Struct AssetResponse | Unity Algorand SDK",
    "keywords": "Struct AssetResponse Implements System.IEquatable < AssetResponse > IIndexerResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AssetResponse : IEquatable<AssetResponse>, IIndexerResponse Properties Asset Declaration public Asset Asset { readonly get; set; } Property Value Type Description Asset Asset Declaration public Asset Asset { readonly get; set; } Property Value Type Description Asset CurrentRound Declaration public ulong CurrentRound { readonly get; set; } Property Value Type Description System.UInt64 CurrentRound Declaration public ulong CurrentRound { readonly get; set; } Property Value Type Description System.UInt64 Methods Equals(AssetResponse) Declaration public bool Equals(AssetResponse other) Parameters Type Name Description AssetResponse other Returns Type Description System.Boolean Equals(AssetResponse) Declaration public bool Equals(AssetResponse other) Parameters Type Name Description AssetResponse other Returns Type Description System.Boolean Implements System.IEquatable<T> IIndexerResponse"
  },
  "api/AlgoSdk.AssetsResponse.html": {
    "href": "api/AlgoSdk.AssetsResponse.html",
    "title": "Struct AssetsResponse | Unity Algorand SDK",
    "keywords": "Struct AssetsResponse Implements System.IEquatable < AssetsResponse > IPaginatedResponse IIndexerResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct AssetsResponse : IEquatable<AssetsResponse>, IPaginatedResponse, IIndexerResponse Properties Assets Declaration public Asset[] Assets { readonly get; set; } Property Value Type Description Asset [] Assets Declaration public Asset[] Assets { readonly get; set; } Property Value Type Description Asset [] CurrentRound Declaration public ulong CurrentRound { readonly get; set; } Property Value Type Description System.UInt64 CurrentRound Declaration public ulong CurrentRound { readonly get; set; } Property Value Type Description System.UInt64 NextToken Declaration public FixedString128Bytes NextToken { readonly get; set; } Property Value Type Description FixedString128Bytes NextToken Declaration public FixedString128Bytes NextToken { readonly get; set; } Property Value Type Description FixedString128Bytes Methods Equals(AssetsResponse) Declaration public bool Equals(AssetsResponse other) Parameters Type Name Description AssetsResponse other Returns Type Description System.Boolean Equals(AssetsResponse) Declaration public bool Equals(AssetsResponse other) Parameters Type Name Description AssetsResponse other Returns Type Description System.Boolean Implements System.IEquatable<T> IPaginatedResponse IIndexerResponse"
  },
  "api/AlgoSdk.AssetTransferTxn.html": {
    "href": "api/AlgoSdk.AssetTransferTxn.html",
    "title": "Struct AssetTransferTxn | Unity Algorand SDK",
    "keywords": "Struct AssetTransferTxn Implements IAssetTransferTxn ITransaction System.IEquatable < AssetTransferTxn > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct AssetTransferTxn : IAssetTransferTxn, ITransaction, IEquatable<AssetTransferTxn> Properties AssetAmount Declaration public ulong AssetAmount { get; set; } Property Value Type Description System.UInt64 AssetAmount Declaration public ulong AssetAmount { get; set; } Property Value Type Description System.UInt64 AssetCloseTo Declaration public Address AssetCloseTo { get; set; } Property Value Type Description Address AssetCloseTo Declaration public Address AssetCloseTo { get; set; } Property Value Type Description Address AssetReceiver Declaration public Address AssetReceiver { get; set; } Property Value Type Description Address AssetReceiver Declaration public Address AssetReceiver { get; set; } Property Value Type Description Address AssetSender Declaration public Address AssetSender { get; set; } Property Value Type Description Address AssetSender Declaration public Address AssetSender { get; set; } Property Value Type Description Address CloseAmount Declaration public ulong CloseAmount { get; set; } Property Value Type Description System.UInt64 CloseAmount Declaration public ulong CloseAmount { get; set; } Property Value Type Description System.UInt64 Fee Declaration public ulong Fee { get; set; } Property Value Type Description System.UInt64 Fee Declaration public ulong Fee { get; set; } Property Value Type Description System.UInt64 FirstValidRound Declaration public ulong FirstValidRound { get; set; } Property Value Type Description System.UInt64 FirstValidRound Declaration public ulong FirstValidRound { get; set; } Property Value Type Description System.UInt64 GenesisHash Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisHash Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisId Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes GenesisId Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes Group Declaration public Sha512_256_Hash Group { get; set; } Property Value Type Description Sha512_256_Hash Group Declaration public Sha512_256_Hash Group { get; set; } Property Value Type Description Sha512_256_Hash LastValidRound Declaration public ulong LastValidRound { get; set; } Property Value Type Description System.UInt64 LastValidRound Declaration public ulong LastValidRound { get; set; } Property Value Type Description System.UInt64 Lease Declaration public Sha512_256_Hash Lease { get; set; } Property Value Type Description Sha512_256_Hash Lease Declaration public Sha512_256_Hash Lease { get; set; } Property Value Type Description Sha512_256_Hash Note Declaration public byte[] Note { get; set; } Property Value Type Description System.Byte [] Note Declaration public byte[] Note { get; set; } Property Value Type Description System.Byte [] RekeyTo Declaration public Address RekeyTo { get; set; } Property Value Type Description Address RekeyTo Declaration public Address RekeyTo { get; set; } Property Value Type Description Address Sender Declaration public Address Sender { get; set; } Property Value Type Description Address Sender Declaration public Address Sender { get; set; } Property Value Type Description Address TransactionType Declaration public TransactionType TransactionType { get; } Property Value Type Description TransactionType TransactionType Declaration public TransactionType TransactionType { get; } Property Value Type Description TransactionType XferAsset Declaration public ulong XferAsset { get; set; } Property Value Type Description System.UInt64 XferAsset Declaration public ulong XferAsset { get; set; } Property Value Type Description System.UInt64 Methods CopyFrom(Transaction) Declaration public void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction CopyFrom(Transaction) Declaration public void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction CopyTo(ref Transaction) Declaration public void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction CopyTo(ref Transaction) Declaration public void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction Equals(AssetTransferTxn) Declaration public bool Equals(AssetTransferTxn other) Parameters Type Name Description AssetTransferTxn other Returns Type Description System.Boolean Equals(AssetTransferTxn) Declaration public bool Equals(AssetTransferTxn other) Parameters Type Name Description AssetTransferTxn other Returns Type Description System.Boolean Implements IAssetTransferTxn ITransaction System.IEquatable<T>"
  },
  "api/AlgoSdk.AssetTransferTxn.Params.html": {
    "href": "api/AlgoSdk.AssetTransferTxn.Params.html",
    "title": "Struct AssetTransferTxn.Params | Unity Algorand SDK",
    "keywords": "Struct AssetTransferTxn.Params Implements System.IEquatable < AssetTransferTxn.Params > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Params : IEquatable<AssetTransferTxn.Params> Fields AssetAmount Declaration public ulong AssetAmount Field Value Type Description System.UInt64 AssetAmount Declaration public ulong AssetAmount Field Value Type Description System.UInt64 AssetCloseTo Declaration public Address AssetCloseTo Field Value Type Description Address AssetCloseTo Declaration public Address AssetCloseTo Field Value Type Description Address AssetReceiver Declaration public Address AssetReceiver Field Value Type Description Address AssetReceiver Declaration public Address AssetReceiver Field Value Type Description Address AssetSender Declaration public Address AssetSender Field Value Type Description Address AssetSender Declaration public Address AssetSender Field Value Type Description Address CloseAmount Declaration [NonSerialized] public ulong CloseAmount Field Value Type Description System.UInt64 CloseAmount Declaration [NonSerialized] public ulong CloseAmount Field Value Type Description System.UInt64 XferAsset Declaration public ulong XferAsset Field Value Type Description System.UInt64 XferAsset Declaration public ulong XferAsset Field Value Type Description System.UInt64 Methods Equals(AssetTransferTxn.Params) Declaration public bool Equals(AssetTransferTxn.Params other) Parameters Type Name Description AssetTransferTxn.Params other Returns Type Description System.Boolean Equals(AssetTransferTxn.Params) Declaration public bool Equals(AssetTransferTxn.Params other) Parameters Type Name Description AssetTransferTxn.Params other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.BalancesResponse.html": {
    "href": "api/AlgoSdk.BalancesResponse.html",
    "title": "Struct BalancesResponse | Unity Algorand SDK",
    "keywords": "Struct BalancesResponse Implements System.IEquatable < BalancesResponse > IPaginatedResponse IIndexerResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct BalancesResponse : IEquatable<BalancesResponse>, IPaginatedResponse, IIndexerResponse Properties Balances Declaration public MiniAssetHolding[] Balances { readonly get; set; } Property Value Type Description MiniAssetHolding [] Balances Declaration public MiniAssetHolding[] Balances { readonly get; set; } Property Value Type Description MiniAssetHolding [] CurrentRound Declaration public ulong CurrentRound { readonly get; set; } Property Value Type Description System.UInt64 CurrentRound Declaration public ulong CurrentRound { readonly get; set; } Property Value Type Description System.UInt64 NextToken Declaration public FixedString128Bytes NextToken { readonly get; set; } Property Value Type Description FixedString128Bytes NextToken Declaration public FixedString128Bytes NextToken { readonly get; set; } Property Value Type Description FixedString128Bytes Methods Equals(BalancesResponse) Declaration public bool Equals(BalancesResponse other) Parameters Type Name Description BalancesResponse other Returns Type Description System.Boolean Equals(BalancesResponse) Declaration public bool Equals(BalancesResponse other) Parameters Type Name Description BalancesResponse other Returns Type Description System.Boolean Implements System.IEquatable<T> IPaginatedResponse IIndexerResponse"
  },
  "api/AlgoSdk.Base32Encoding.html": {
    "href": "api/AlgoSdk.Base32Encoding.html",
    "title": "Class Base32Encoding | Unity Algorand SDK",
    "keywords": "Class Base32Encoding Inheritance System.Object Base32Encoding Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class Base32Encoding Fields PaddingCharValue Declaration public static readonly byte PaddingCharValue Field Value Type Description System.Byte PaddingCharValue Declaration public static readonly byte PaddingCharValue Field Value Type Description System.Byte Methods ToBytes(String) Declaration public static byte[] ToBytes(string input) Parameters Type Name Description System.String input Returns Type Description System.Byte [] ToBytes(String) Declaration public static byte[] ToBytes(string input) Parameters Type Name Description System.String input Returns Type Description System.Byte [] ToBytes<TByteArray, TString>(TString, ref TByteArray) Declaration public static void ToBytes<TByteArray, TString>(TString s, ref TByteArray bytes) where TByteArray : struct, IByteArray where TString : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description TString s TByteArray bytes Type Parameters Name Description TByteArray TString ToBytes<TByteArray, TString>(TString, ref TByteArray) Declaration public static void ToBytes<TByteArray, TString>(TString s, ref TByteArray bytes) where TByteArray : struct, IByteArray where TString : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description TString s TByteArray bytes Type Parameters Name Description TByteArray TString ToString(Byte[]) Declaration public static string ToString(byte[] input) Parameters Type Name Description System.Byte [] input Returns Type Description System.String ToString(Byte[]) Declaration public static string ToString(byte[] input) Parameters Type Name Description System.Byte [] input Returns Type Description System.String ToString<TByteArray, TString>(TByteArray, ref TString) Declaration public static void ToString<TByteArray, TString>(TByteArray bytes, ref TString s) where TByteArray : struct, IByteArray where TString : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description TByteArray bytes TString s Type Parameters Name Description TByteArray TString ToString<TByteArray, TString>(TByteArray, ref TString) Declaration public static void ToString<TByteArray, TString>(TByteArray bytes, ref TString s) where TByteArray : struct, IByteArray where TString : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description TByteArray bytes TString s Type Parameters Name Description TByteArray TString TrimPadding<T>(ref T) Declaration public static void TrimPadding<T>(ref T fs) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Type Parameters Name Description T TrimPadding<T>(ref T) Declaration public static void TrimPadding<T>(ref T fs) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Type Parameters Name Description T"
  },
  "api/AlgoSdk.Base64Encoding.html": {
    "href": "api/AlgoSdk.Base64Encoding.html",
    "title": "Class Base64Encoding | Unity Algorand SDK",
    "keywords": "Class Base64Encoding Inheritance System.Object Base64Encoding Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class Base64Encoding Methods Base64ToUtf8<T, U>(ref T, ref U) Declaration public static void Base64ToUtf8<T, U>(this ref T src, ref U tar) where T : struct, IUTF8Bytes, INativeList<byte> where U : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description T src U tar Type Parameters Name Description T U Base64ToUtf8<T, U>(ref T, ref U) Declaration public static void Base64ToUtf8<T, U>(this ref T src, ref U tar) where T : struct, IUTF8Bytes, INativeList<byte> where U : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description T src U tar Type Parameters Name Description T U CopyFromBase64<TByteArray, T>(ref TByteArray, T, Int32) Declaration public static void CopyFromBase64<TByteArray, T>(this ref TByteArray bytes, T s, int maxLength = 2147483647) where TByteArray : struct, IArray<byte> where T : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description TByteArray bytes T s System.Int32 maxLength Type Parameters Name Description TByteArray T CopyFromBase64<TByteArray, T>(ref TByteArray, T, Int32) Declaration public static void CopyFromBase64<TByteArray, T>(this ref TByteArray bytes, T s, int maxLength = 2147483647) where TByteArray : struct, IArray<byte> where T : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description TByteArray bytes T s System.Int32 maxLength Type Parameters Name Description TByteArray T CopyToBase64<TBytes, T>(TBytes, ref T) Declaration public static void CopyToBase64<TBytes, T>(this TBytes bytes, ref T s) where TBytes : struct, IArray<byte> where T : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description TBytes bytes T s Type Parameters Name Description TBytes T CopyToBase64<TBytes, T>(TBytes, ref T) Declaration public static void CopyToBase64<TBytes, T>(this TBytes bytes, ref T s) where TBytes : struct, IArray<byte> where T : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description TBytes bytes T s Type Parameters Name Description TBytes T Utf8ToBase64<T, U>(ref T, ref U) Declaration public static void Utf8ToBase64<T, U>(this ref T src, ref U tar) where T : struct, IUTF8Bytes, INativeList<byte> where U : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description T src U tar Type Parameters Name Description T U Utf8ToBase64<T, U>(ref T, ref U) Declaration public static void Utf8ToBase64<T, U>(this ref T src, ref U tar) where T : struct, IUTF8Bytes, INativeList<byte> where U : struct, IUTF8Bytes, INativeList<byte> Parameters Type Name Description T src U tar Type Parameters Name Description T U"
  },
  "api/AlgoSdk.Block.html": {
    "href": "api/AlgoSdk.Block.html",
    "title": "Struct Block | Unity Algorand SDK",
    "keywords": "Struct Block Block information. Implements System.IEquatable < Block > IBlockRewards IBlockUpgradeState IBlockUpgradeVote Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct Block : IEquatable<Block>, IBlockRewards, IBlockUpgradeState, IBlockUpgradeVote Fields Cc Declaration public AlgoApiObject Cc Field Value Type Description AlgoApiObject Cc Declaration public AlgoApiObject Cc Field Value Type Description AlgoApiObject GenesisHash [gh] hash to which this block belongs. Declaration public GenesisHash GenesisHash Field Value Type Description GenesisHash GenesisHash [gh] hash to which this block belongs. Declaration public GenesisHash GenesisHash Field Value Type Description GenesisHash GenesisId [gen] ID to which this block belongs. Declaration public FixedString64Bytes GenesisId Field Value Type Description FixedString64Bytes GenesisId [gen] ID to which this block belongs. Declaration public FixedString64Bytes GenesisId Field Value Type Description FixedString64Bytes PreviousBlockHash [prev] Previous block hash. Declaration public Sha512_256_Hash PreviousBlockHash Field Value Type Description Sha512_256_Hash PreviousBlockHash [prev] Previous block hash. Declaration public Sha512_256_Hash PreviousBlockHash Field Value Type Description Sha512_256_Hash Rewards See BlockRewards Declaration public BlockRewards Rewards Field Value Type Description BlockRewards Rewards See BlockRewards Declaration public BlockRewards Rewards Field Value Type Description BlockRewards RootTransaction [txn] TransactionsRoot authenticates the set of transactions appearing in the block. More specifically, it's the root of a merkle tree whose leaves are the block's Txids, in lexicographic order. For the empty block, it's 0. Note that the TxnRoot does not authenticate the signatures on the transactions, only the transactions themselves. Two blocks with the same transactions but in a different order and with different signatures will have the same TxnRoot. Declaration public Sha512_256_Hash RootTransaction Field Value Type Description Sha512_256_Hash RootTransaction [txn] TransactionsRoot authenticates the set of transactions appearing in the block. More specifically, it's the root of a merkle tree whose leaves are the block's Txids, in lexicographic order. For the empty block, it's 0. Note that the TxnRoot does not authenticate the signatures on the transactions, only the transactions themselves. Two blocks with the same transactions but in a different order and with different signatures will have the same TxnRoot. Declaration public Sha512_256_Hash RootTransaction Field Value Type Description Sha512_256_Hash Round [rnd] Current round on which this block was appended to the chain. Declaration public ulong Round Field Value Type Description System.UInt64 Round [rnd] Current round on which this block was appended to the chain. Declaration public ulong Round Field Value Type Description System.UInt64 Seed [seed] Sortition seed. Declaration public Sha512_256_Hash Seed Field Value Type Description Sha512_256_Hash Seed [seed] Sortition seed. Declaration public Sha512_256_Hash Seed Field Value Type Description Sha512_256_Hash Timestamp [ts] Block creation timestamp in seconds since epoch Declaration public ulong Timestamp Field Value Type Description System.UInt64 Timestamp [ts] Block creation timestamp in seconds since epoch Declaration public ulong Timestamp Field Value Type Description System.UInt64 TransactionCounter [tc] TxnCounter counts the number of transactions committed in the ledger, from the time at which support for this feature was introduced. Declaration public ulong TransactionCounter Field Value Type Description System.UInt64 Remarks Specifically, TxnCounter is the number of the next transaction that will be committed after this block. It is 0 when no transactions have ever been committed (since TxnCounter started being supported). TransactionCounter [tc] TxnCounter counts the number of transactions committed in the ledger, from the time at which support for this feature was introduced. Declaration public ulong TransactionCounter Field Value Type Description System.UInt64 Remarks Specifically, TxnCounter is the number of the next transaction that will be committed after this block. It is 0 when no transactions have ever been committed (since TxnCounter started being supported). Transactions [txns] list of transactions corresponding to a given round. Declaration public BlockTransaction[] Transactions Field Value Type Description BlockTransaction [] Transactions [txns] list of transactions corresponding to a given round. Declaration public BlockTransaction[] Transactions Field Value Type Description BlockTransaction [] UpgradeState See BlockUpgradeState Declaration public BlockUpgradeState UpgradeState Field Value Type Description BlockUpgradeState UpgradeState See BlockUpgradeState Declaration public BlockUpgradeState UpgradeState Field Value Type Description BlockUpgradeState UpgradeVote See BlockUpgradeVote Declaration public BlockUpgradeVote UpgradeVote Field Value Type Description BlockUpgradeVote UpgradeVote See BlockUpgradeVote Declaration public BlockUpgradeVote UpgradeVote Field Value Type Description BlockUpgradeVote Properties CurrentProtocol Declaration public FixedString128Bytes CurrentProtocol { get; set; } Property Value Type Description FixedString128Bytes CurrentProtocol Declaration public FixedString128Bytes CurrentProtocol { get; set; } Property Value Type Description FixedString128Bytes FeeSink Declaration public Address FeeSink { get; set; } Property Value Type Description Address FeeSink Declaration public Address FeeSink { get; set; } Property Value Type Description Address NextProtocol Declaration public FixedString128Bytes NextProtocol { get; set; } Property Value Type Description FixedString128Bytes NextProtocol Declaration public FixedString128Bytes NextProtocol { get; set; } Property Value Type Description FixedString128Bytes NextProtocolApprovals Declaration public ulong NextProtocolApprovals { get; set; } Property Value Type Description System.UInt64 NextProtocolApprovals Declaration public ulong NextProtocolApprovals { get; set; } Property Value Type Description System.UInt64 NextProtocolSwitchOn Declaration public ulong NextProtocolSwitchOn { get; set; } Property Value Type Description System.UInt64 NextProtocolSwitchOn Declaration public ulong NextProtocolSwitchOn { get; set; } Property Value Type Description System.UInt64 NextProtocolVoteBefore Declaration public ulong NextProtocolVoteBefore { get; set; } Property Value Type Description System.UInt64 NextProtocolVoteBefore Declaration public ulong NextProtocolVoteBefore { get; set; } Property Value Type Description System.UInt64 RewardsCalculationRound Declaration public ulong RewardsCalculationRound { get; set; } Property Value Type Description System.UInt64 RewardsCalculationRound Declaration public ulong RewardsCalculationRound { get; set; } Property Value Type Description System.UInt64 RewardsLevel Declaration public ulong RewardsLevel { get; set; } Property Value Type Description System.UInt64 RewardsLevel Declaration public ulong RewardsLevel { get; set; } Property Value Type Description System.UInt64 RewardsPool Declaration public Address RewardsPool { get; set; } Property Value Type Description Address RewardsPool Declaration public Address RewardsPool { get; set; } Property Value Type Description Address RewardsRate Declaration public ulong RewardsRate { get; set; } Property Value Type Description System.UInt64 RewardsRate Declaration public ulong RewardsRate { get; set; } Property Value Type Description System.UInt64 RewardsResidue Declaration public ulong RewardsResidue { get; set; } Property Value Type Description System.UInt64 RewardsResidue Declaration public ulong RewardsResidue { get; set; } Property Value Type Description System.UInt64 UpgradeApprove Declaration public Optional<bool> UpgradeApprove { get; set; } Property Value Type Description Optional < System.Boolean > UpgradeApprove Declaration public Optional<bool> UpgradeApprove { get; set; } Property Value Type Description Optional < System.Boolean > UpgradeDelay Declaration public ulong UpgradeDelay { get; set; } Property Value Type Description System.UInt64 UpgradeDelay Declaration public ulong UpgradeDelay { get; set; } Property Value Type Description System.UInt64 UpgradePropose Declaration public Address UpgradePropose { get; set; } Property Value Type Description Address UpgradePropose Declaration public Address UpgradePropose { get; set; } Property Value Type Description Address Methods Equals(Block) Declaration public bool Equals(Block other) Parameters Type Name Description Block other Returns Type Description System.Boolean Equals(Block) Declaration public bool Equals(Block other) Parameters Type Name Description Block other Returns Type Description System.Boolean Implements System.IEquatable<T> IBlockRewards IBlockUpgradeState IBlockUpgradeVote"
  },
  "api/AlgoSdk.BlockResponse.html": {
    "href": "api/AlgoSdk.BlockResponse.html",
    "title": "Struct BlockResponse | Unity Algorand SDK",
    "keywords": "Struct BlockResponse A wrapped Block from the GetBlock(UInt64) Implements System.IEquatable < BlockResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct BlockResponse : IEquatable<BlockResponse> Fields BlockHeader Block data. Declaration public Block BlockHeader Field Value Type Description Block BlockHeader Block data. Declaration public Block BlockHeader Field Value Type Description Block Cert Block certificate object. Declaration public AlgoApiObject Cert Field Value Type Description AlgoApiObject Cert Block certificate object. Declaration public AlgoApiObject Cert Field Value Type Description AlgoApiObject Methods Equals(BlockResponse) Declaration public bool Equals(BlockResponse other) Parameters Type Name Description BlockResponse other Returns Type Description System.Boolean Equals(BlockResponse) Declaration public bool Equals(BlockResponse other) Parameters Type Name Description BlockResponse other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.BlockRewards.html": {
    "href": "api/AlgoSdk.BlockRewards.html",
    "title": "Struct BlockRewards | Unity Algorand SDK",
    "keywords": "Struct BlockRewards Implements System.IEquatable < BlockRewards > IBlockRewards Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct BlockRewards : IEquatable<BlockRewards>, IBlockRewards Properties FeeSink Declaration public Address FeeSink { get; set; } Property Value Type Description Address FeeSink Declaration public Address FeeSink { get; set; } Property Value Type Description Address RewardsCalculationRound Declaration public ulong RewardsCalculationRound { get; set; } Property Value Type Description System.UInt64 RewardsCalculationRound Declaration public ulong RewardsCalculationRound { get; set; } Property Value Type Description System.UInt64 RewardsLevel Declaration public ulong RewardsLevel { get; set; } Property Value Type Description System.UInt64 RewardsLevel Declaration public ulong RewardsLevel { get; set; } Property Value Type Description System.UInt64 RewardsPool Declaration public Address RewardsPool { get; set; } Property Value Type Description Address RewardsPool Declaration public Address RewardsPool { get; set; } Property Value Type Description Address RewardsRate Declaration public ulong RewardsRate { get; set; } Property Value Type Description System.UInt64 RewardsRate Declaration public ulong RewardsRate { get; set; } Property Value Type Description System.UInt64 RewardsResidue Declaration public ulong RewardsResidue { get; set; } Property Value Type Description System.UInt64 RewardsResidue Declaration public ulong RewardsResidue { get; set; } Property Value Type Description System.UInt64 Methods Equals(BlockRewards) Declaration public bool Equals(BlockRewards other) Parameters Type Name Description BlockRewards other Returns Type Description System.Boolean Equals(BlockRewards) Declaration public bool Equals(BlockRewards other) Parameters Type Name Description BlockRewards other Returns Type Description System.Boolean Implements System.IEquatable<T> IBlockRewards"
  },
  "api/AlgoSdk.BlockTransaction.html": {
    "href": "api/AlgoSdk.BlockTransaction.html",
    "title": "Struct BlockTransaction | Unity Algorand SDK",
    "keywords": "Struct BlockTransaction A transaction found in a BlockResponse from GetBlock(UInt64) . Implements System.IEquatable < BlockTransaction > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct BlockTransaction : IEquatable<BlockTransaction> Fields Hgi Declaration public Optional<bool> Hgi Field Value Type Description Optional < System.Boolean > Hgi Declaration public Optional<bool> Hgi Field Value Type Description Optional < System.Boolean > Rr Declaration public ulong Rr Field Value Type Description System.UInt64 Rr Declaration public ulong Rr Field Value Type Description System.UInt64 Rs Declaration public ulong Rs Field Value Type Description System.UInt64 Rs Declaration public ulong Rs Field Value Type Description System.UInt64 Transaction The transaction. Declaration public Transaction Transaction Field Value Type Description Transaction Transaction The transaction. Declaration public Transaction Transaction Field Value Type Description Transaction Properties LogicSig A logic sig if the transaction was signed by one. Declaration public LogicSig LogicSig { get; set; } Property Value Type Description LogicSig LogicSig A logic sig if the transaction was signed by one. Declaration public LogicSig LogicSig { get; set; } Property Value Type Description LogicSig Multisig A multisig if the transaction was signed by one. Declaration public Multisig Multisig { get; set; } Property Value Type Description Multisig Multisig A multisig if the transaction was signed by one. Declaration public Multisig Multisig { get; set; } Property Value Type Description Multisig Sig A crypto sig if the transaction was signed by one. Declaration public Sig Sig { get; set; } Property Value Type Description Sig Sig A crypto sig if the transaction was signed by one. Declaration public Sig Sig { get; set; } Property Value Type Description Sig Methods Equals(BlockTransaction) Declaration public bool Equals(BlockTransaction other) Parameters Type Name Description BlockTransaction other Returns Type Description System.Boolean Equals(BlockTransaction) Declaration public bool Equals(BlockTransaction other) Parameters Type Name Description BlockTransaction other Returns Type Description System.Boolean Operators Implicit(BlockTransaction to Transaction) Declaration public static implicit operator Transaction(BlockTransaction blockTxn) Parameters Type Name Description BlockTransaction blockTxn Returns Type Description Transaction Implicit(BlockTransaction to Transaction) Declaration public static implicit operator Transaction(BlockTransaction blockTxn) Parameters Type Name Description BlockTransaction blockTxn Returns Type Description Transaction Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.BlockUpgradeState.html": {
    "href": "api/AlgoSdk.BlockUpgradeState.html",
    "title": "Struct BlockUpgradeState | Unity Algorand SDK",
    "keywords": "Struct BlockUpgradeState Implements System.IEquatable < BlockUpgradeState > IBlockUpgradeState Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct BlockUpgradeState : IEquatable<BlockUpgradeState>, IBlockUpgradeState Properties CurrentProtocol Declaration public FixedString128Bytes CurrentProtocol { get; set; } Property Value Type Description FixedString128Bytes CurrentProtocol Declaration public FixedString128Bytes CurrentProtocol { get; set; } Property Value Type Description FixedString128Bytes NextProtocol Declaration public FixedString128Bytes NextProtocol { get; set; } Property Value Type Description FixedString128Bytes NextProtocol Declaration public FixedString128Bytes NextProtocol { get; set; } Property Value Type Description FixedString128Bytes NextProtocolApprovals Declaration public ulong NextProtocolApprovals { get; set; } Property Value Type Description System.UInt64 NextProtocolApprovals Declaration public ulong NextProtocolApprovals { get; set; } Property Value Type Description System.UInt64 NextProtocolSwitchOn Declaration public ulong NextProtocolSwitchOn { get; set; } Property Value Type Description System.UInt64 NextProtocolSwitchOn Declaration public ulong NextProtocolSwitchOn { get; set; } Property Value Type Description System.UInt64 NextProtocolVoteBefore Declaration public ulong NextProtocolVoteBefore { get; set; } Property Value Type Description System.UInt64 NextProtocolVoteBefore Declaration public ulong NextProtocolVoteBefore { get; set; } Property Value Type Description System.UInt64 Methods Equals(BlockUpgradeState) Declaration public bool Equals(BlockUpgradeState other) Parameters Type Name Description BlockUpgradeState other Returns Type Description System.Boolean Equals(BlockUpgradeState) Declaration public bool Equals(BlockUpgradeState other) Parameters Type Name Description BlockUpgradeState other Returns Type Description System.Boolean Implements System.IEquatable<T> IBlockUpgradeState"
  },
  "api/AlgoSdk.BlockUpgradeVote.html": {
    "href": "api/AlgoSdk.BlockUpgradeVote.html",
    "title": "Struct BlockUpgradeVote | Unity Algorand SDK",
    "keywords": "Struct BlockUpgradeVote Implements System.IEquatable < BlockUpgradeVote > IBlockUpgradeVote Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct BlockUpgradeVote : IEquatable<BlockUpgradeVote>, IBlockUpgradeVote Properties UpgradeApprove Declaration public Optional<bool> UpgradeApprove { get; set; } Property Value Type Description Optional < System.Boolean > UpgradeApprove Declaration public Optional<bool> UpgradeApprove { get; set; } Property Value Type Description Optional < System.Boolean > UpgradeDelay Declaration public ulong UpgradeDelay { get; set; } Property Value Type Description System.UInt64 UpgradeDelay Declaration public ulong UpgradeDelay { get; set; } Property Value Type Description System.UInt64 UpgradePropose Declaration public Address UpgradePropose { get; set; } Property Value Type Description Address UpgradePropose Declaration public Address UpgradePropose { get; set; } Property Value Type Description Address Methods Equals(BlockUpgradeVote) Declaration public bool Equals(BlockUpgradeVote other) Parameters Type Name Description BlockUpgradeVote other Returns Type Description System.Boolean Equals(BlockUpgradeVote) Declaration public bool Equals(BlockUpgradeVote other) Parameters Type Name Description BlockUpgradeVote other Returns Type Description System.Boolean Implements System.IEquatable<T> IBlockUpgradeVote"
  },
  "api/AlgoSdk.BuildVersion.html": {
    "href": "api/AlgoSdk.BuildVersion.html",
    "title": "Struct BuildVersion | Unity Algorand SDK",
    "keywords": "Struct BuildVersion Information regarding the algod service's build version. Implements System.IEquatable < BuildVersion > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct BuildVersion : IEquatable<BuildVersion> Fields Branch Declaration public FixedString64Bytes Branch Field Value Type Description FixedString64Bytes Branch Declaration public FixedString64Bytes Branch Field Value Type Description FixedString64Bytes BuildNumber Declaration public ulong BuildNumber Field Value Type Description System.UInt64 BuildNumber Declaration public ulong BuildNumber Field Value Type Description System.UInt64 Channel Declaration public FixedString64Bytes Channel Field Value Type Description FixedString64Bytes Channel Declaration public FixedString64Bytes Channel Field Value Type Description FixedString64Bytes CommitHash Declaration public FixedString128Bytes CommitHash Field Value Type Description FixedString128Bytes CommitHash Declaration public FixedString128Bytes CommitHash Field Value Type Description FixedString128Bytes Major Declaration public ulong Major Field Value Type Description System.UInt64 Major Declaration public ulong Major Field Value Type Description System.UInt64 Minor Declaration public ulong Minor Field Value Type Description System.UInt64 Minor Declaration public ulong Minor Field Value Type Description System.UInt64 Methods Equals(BuildVersion) Declaration public bool Equals(BuildVersion other) Parameters Type Name Description BuildVersion other Returns Type Description System.Boolean Equals(BuildVersion) Declaration public bool Equals(BuildVersion other) Parameters Type Name Description BuildVersion other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.ByteEnumComparer-1.html": {
    "href": "api/AlgoSdk.ByteEnumComparer-1.html",
    "title": "Struct ByteEnumComparer<T> | Unity Algorand SDK",
    "keywords": "Struct ByteEnumComparer<T> Implements IEqualityComparer <T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ByteEnumComparer<T> where T : Enum Type Parameters Name Description T Fields Instance Declaration public static readonly ByteEnumComparer<T> Instance Field Value Type Description ByteEnumComparer <T> Instance Declaration public static readonly ByteEnumComparer<T> Instance Field Value Type Description ByteEnumComparer <T> Methods Equals(T, T) Declaration public static bool Equals(T x, T y) Parameters Type Name Description T x T y Returns Type Description System.Boolean Equals(T, T) Declaration public static bool Equals(T x, T y) Parameters Type Name Description T x T y Returns Type Description System.Boolean GetHashCode(T) Declaration public static int GetHashCode(T obj) Parameters Type Name Description T obj Returns Type Description System.Int32 GetHashCode(T) Declaration public static int GetHashCode(T obj) Parameters Type Name Description T obj Returns Type Description System.Int32 Implements IEqualityComparer<>"
  },
  "api/AlgoSdk.CatchupMessage.html": {
    "href": "api/AlgoSdk.CatchupMessage.html",
    "title": "Struct CatchupMessage | Unity Algorand SDK",
    "keywords": "Struct CatchupMessage A response from StartCatchup(String) Implements System.IEquatable < CatchupMessage > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct CatchupMessage : IEquatable<CatchupMessage> Fields Message Catchup start response string Declaration public FixedString512Bytes Message Field Value Type Description FixedString512Bytes Message Catchup start response string Declaration public FixedString512Bytes Message Field Value Type Description FixedString512Bytes Methods Equals(CatchupMessage) Declaration public bool Equals(CatchupMessage other) Parameters Type Name Description CatchupMessage other Returns Type Description System.Boolean Equals(CatchupMessage) Declaration public bool Equals(CatchupMessage other) Parameters Type Name Description CatchupMessage other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.CompiledTeal.html": {
    "href": "api/AlgoSdk.CompiledTeal.html",
    "title": "Struct CompiledTeal | Unity Algorand SDK",
    "keywords": "Struct CompiledTeal A wrapper class around compiled teal bytes. Implements System.IEquatable < CompiledTeal > System.IEquatable < System.Byte []> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct CompiledTeal : IEquatable<CompiledTeal>, IEquatable<byte[]> Fields Bytes Declaration public byte[] Bytes Field Value Type Description System.Byte [] Bytes Declaration public byte[] Bytes Field Value Type Description System.Byte [] Methods Equals(CompiledTeal) Declaration public bool Equals(CompiledTeal other) Parameters Type Name Description CompiledTeal other Returns Type Description System.Boolean Equals(CompiledTeal) Declaration public bool Equals(CompiledTeal other) Parameters Type Name Description CompiledTeal other Returns Type Description System.Boolean Equals(Byte[]) Declaration public bool Equals(byte[] other) Parameters Type Name Description System.Byte [] other Returns Type Description System.Boolean Equals(Byte[]) Declaration public bool Equals(byte[] other) Parameters Type Name Description System.Byte [] other Returns Type Description System.Boolean Operators Implicit(CompiledTeal to Byte[]) Declaration public static implicit operator byte[](CompiledTeal compiledTeal) Parameters Type Name Description CompiledTeal compiledTeal Returns Type Description System.Byte [] Implicit(CompiledTeal to Byte[]) Declaration public static implicit operator byte[](CompiledTeal compiledTeal) Parameters Type Name Description CompiledTeal compiledTeal Returns Type Description System.Byte [] Implicit(Byte[] to CompiledTeal) Declaration public static implicit operator CompiledTeal(byte[] bytes) Parameters Type Name Description System.Byte [] bytes Returns Type Description CompiledTeal Implicit(Byte[] to CompiledTeal) Declaration public static implicit operator CompiledTeal(byte[] bytes) Parameters Type Name Description System.Byte [] bytes Returns Type Description CompiledTeal Implements System.IEquatable<T> System.IEquatable<T>"
  },
  "api/AlgoSdk.CompiledTealFormatter.html": {
    "href": "api/AlgoSdk.CompiledTealFormatter.html",
    "title": "Class CompiledTealFormatter | Unity Algorand SDK",
    "keywords": "Class CompiledTealFormatter Inheritance System.Object CompiledTealFormatter Implements IAlgoApiFormatter < CompiledTeal > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public class CompiledTealFormatter : IAlgoApiFormatter<CompiledTeal> Methods Deserialize(ref JsonReader) Declaration public CompiledTeal Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description CompiledTeal Deserialize(ref JsonReader) Declaration public CompiledTeal Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description CompiledTeal Deserialize(ref MessagePackReader) Declaration public CompiledTeal Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description CompiledTeal Deserialize(ref MessagePackReader) Declaration public CompiledTeal Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description CompiledTeal Serialize(ref JsonWriter, CompiledTeal) Declaration public void Serialize(ref JsonWriter writer, CompiledTeal value) Parameters Type Name Description JsonWriter writer CompiledTeal value Serialize(ref JsonWriter, CompiledTeal) Declaration public void Serialize(ref JsonWriter writer, CompiledTeal value) Parameters Type Name Description JsonWriter writer CompiledTeal value Serialize(ref MessagePackWriter, CompiledTeal) Declaration public void Serialize(ref MessagePackWriter writer, CompiledTeal value) Parameters Type Name Description MessagePackWriter writer CompiledTeal value Serialize(ref MessagePackWriter, CompiledTeal) Declaration public void Serialize(ref MessagePackWriter writer, CompiledTeal value) Parameters Type Name Description MessagePackWriter writer CompiledTeal value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.ContentType.html": {
    "href": "api/AlgoSdk.ContentType.html",
    "title": "Enum ContentType | Unity Algorand SDK",
    "keywords": "Enum ContentType Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum ContentType : byte Fields Name Description Json MessagePack None PlainText"
  },
  "api/AlgoSdk.ContentType_1.html": {
    "href": "api/AlgoSdk.ContentType_1.html",
    "title": "Enum ContentType | Unity Algorand SDK",
    "keywords": "Enum ContentType Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum ContentType : byte Fields Name Description Json MessagePack None PlainText"
  },
  "api/AlgoSdk.ContentTypeExtensions.html": {
    "href": "api/AlgoSdk.ContentTypeExtensions.html",
    "title": "Class ContentTypeExtensions | Unity Algorand SDK",
    "keywords": "Class ContentTypeExtensions Inheritance System.Object ContentTypeExtensions Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class ContentTypeExtensions Methods ParseRequestContentType(UnityWebRequest) Declaration public static ContentType ParseRequestContentType(this UnityWebRequest uwr) Parameters Type Name Description UnityWebRequest uwr Returns Type Description ContentType ParseRequestContentType(UnityWebRequest) Declaration public static ContentType ParseRequestContentType(this UnityWebRequest uwr) Parameters Type Name Description UnityWebRequest uwr Returns Type Description ContentType ParseResponseContentType(UnityWebRequest) Declaration public static ContentType ParseResponseContentType(this UnityWebRequest uwr) Parameters Type Name Description UnityWebRequest uwr Returns Type Description ContentType ParseResponseContentType(UnityWebRequest) Declaration public static ContentType ParseResponseContentType(this UnityWebRequest uwr) Parameters Type Name Description UnityWebRequest uwr Returns Type Description ContentType ToHeaderValue(ContentType) Declaration public static string ToHeaderValue(this ContentType contentType) Parameters Type Name Description ContentType contentType Returns Type Description System.String ToHeaderValue(ContentType) Declaration public static string ToHeaderValue(this ContentType contentType) Parameters Type Name Description ContentType contentType Returns Type Description System.String"
  },
  "api/AlgoSdk.CreateWalletRequest.html": {
    "href": "api/AlgoSdk.CreateWalletRequest.html",
    "title": "Struct CreateWalletRequest | Unity Algorand SDK",
    "keywords": "Struct CreateWalletRequest Implements System.IEquatable < CreateWalletRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct CreateWalletRequest : IEquatable<CreateWalletRequest> Fields MasterDerivationKey Declaration public PrivateKey MasterDerivationKey Field Value Type Description PrivateKey MasterDerivationKey Declaration public PrivateKey MasterDerivationKey Field Value Type Description PrivateKey WalletDriverName Declaration public FixedString128Bytes WalletDriverName Field Value Type Description FixedString128Bytes WalletDriverName Declaration public FixedString128Bytes WalletDriverName Field Value Type Description FixedString128Bytes WalletName Declaration public FixedString128Bytes WalletName Field Value Type Description FixedString128Bytes WalletName Declaration public FixedString128Bytes WalletName Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(CreateWalletRequest) Declaration public bool Equals(CreateWalletRequest other) Parameters Type Name Description CreateWalletRequest other Returns Type Description System.Boolean Equals(CreateWalletRequest) Declaration public bool Equals(CreateWalletRequest other) Parameters Type Name Description CreateWalletRequest other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.CreateWalletResponse.html": {
    "href": "api/AlgoSdk.CreateWalletResponse.html",
    "title": "Struct CreateWalletResponse | Unity Algorand SDK",
    "keywords": "Struct CreateWalletResponse Implements System.IEquatable < CreateWalletResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct CreateWalletResponse : IEquatable<CreateWalletResponse> Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Message Declaration public string Message Field Value Type Description System.String Message Declaration public string Message Field Value Type Description System.String Wallet Declaration public Wallet Wallet Field Value Type Description Wallet Wallet Declaration public Wallet Wallet Field Value Type Description Wallet Methods Equals(CreateWalletResponse) Declaration public bool Equals(CreateWalletResponse other) Parameters Type Name Description CreateWalletResponse other Returns Type Description System.Boolean Equals(CreateWalletResponse) Declaration public bool Equals(CreateWalletResponse other) Parameters Type Name Description CreateWalletResponse other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.Crypto.Ed25519.html": {
    "href": "api/AlgoSdk.Crypto.Ed25519.html",
    "title": "Class Ed25519 | Unity Algorand SDK",
    "keywords": "Class Ed25519 Inheritance System.Object Ed25519 Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public static class Ed25519"
  },
  "api/AlgoSdk.Crypto.Ed25519.KeyPair.html": {
    "href": "api/AlgoSdk.Crypto.Ed25519.KeyPair.html",
    "title": "Struct Ed25519.KeyPair | Unity Algorand SDK",
    "keywords": "Struct Ed25519.KeyPair Implements INativeDisposable Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public struct KeyPair Constructors KeyPair(Ed25519.SecretKeyHandle, Ed25519.PublicKey) Declaration public KeyPair(Ed25519.SecretKeyHandle secretKey, Ed25519.PublicKey publicKey) Parameters Type Name Description Ed25519.SecretKeyHandle secretKey Ed25519.PublicKey publicKey KeyPair(Ed25519.SecretKeyHandle, Ed25519.PublicKey) Declaration public KeyPair(Ed25519.SecretKeyHandle secretKey, Ed25519.PublicKey publicKey) Parameters Type Name Description Ed25519.SecretKeyHandle secretKey Ed25519.PublicKey publicKey Fields PublicKey Declaration public readonly Ed25519.PublicKey PublicKey Field Value Type Description Ed25519.PublicKey PublicKey Declaration public readonly Ed25519.PublicKey PublicKey Field Value Type Description Ed25519.PublicKey SecretKey Declaration public readonly Ed25519.SecretKeyHandle SecretKey Field Value Type Description Ed25519.SecretKeyHandle SecretKey Declaration public readonly Ed25519.SecretKeyHandle SecretKey Field Value Type Description Ed25519.SecretKeyHandle Methods Deconstruct(out Ed25519.SecretKeyHandle, out Ed25519.PublicKey) Declaration public void Deconstruct(out Ed25519.SecretKeyHandle secretKey, out Ed25519.PublicKey publicKey) Parameters Type Name Description Ed25519.SecretKeyHandle secretKey Ed25519.PublicKey publicKey Deconstruct(out Ed25519.SecretKeyHandle, out Ed25519.PublicKey) Declaration public void Deconstruct(out Ed25519.SecretKeyHandle secretKey, out Ed25519.PublicKey publicKey) Parameters Type Name Description Ed25519.SecretKeyHandle secretKey Ed25519.PublicKey publicKey Dispose() Declaration public void Dispose() Dispose() Declaration public void Dispose() Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle Implements INativeDisposable"
  },
  "api/AlgoSdk.Crypto.Ed25519.PublicKey.html": {
    "href": "api/AlgoSdk.Crypto.Ed25519.PublicKey.html",
    "title": "Struct Ed25519.PublicKey | Unity Algorand SDK",
    "keywords": "Struct Ed25519.PublicKey Implements IByteArray System.IEquatable < Ed25519.PublicKey > Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct PublicKey : IEquatable<Ed25519.PublicKey> Fields SizeBytes Declaration public const int SizeBytes = 32 Field Value Type Description System.Int32 SizeBytes Declaration public const int SizeBytes = 32 Field Value Type Description System.Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Length Declaration public readonly int Length { get; } Property Value Type Description System.Int32 Length Declaration public readonly int Length { get; } Property Value Type Description System.Int32 Methods Equals(Ed25519.PublicKey) Declaration public bool Equals(Ed25519.PublicKey other) Parameters Type Name Description Ed25519.PublicKey other Returns Type Description System.Boolean Equals(Ed25519.PublicKey) Declaration public bool Equals(Ed25519.PublicKey other) Parameters Type Name Description Ed25519.PublicKey other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description System.Void * GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description System.Void * Operators Equality(in Ed25519.PublicKey, in Ed25519.PublicKey) Declaration public static bool operator ==(in Ed25519.PublicKey x, in Ed25519.PublicKey y) Parameters Type Name Description Ed25519.PublicKey x Ed25519.PublicKey y Returns Type Description System.Boolean Equality(in Ed25519.PublicKey, in Ed25519.PublicKey) Declaration public static bool operator ==(in Ed25519.PublicKey x, in Ed25519.PublicKey y) Parameters Type Name Description Ed25519.PublicKey x Ed25519.PublicKey y Returns Type Description System.Boolean Inequality(in Ed25519.PublicKey, in Ed25519.PublicKey) Declaration public static bool operator !=(in Ed25519.PublicKey x, in Ed25519.PublicKey y) Parameters Type Name Description Ed25519.PublicKey x Ed25519.PublicKey y Returns Type Description System.Boolean Inequality(in Ed25519.PublicKey, in Ed25519.PublicKey) Declaration public static bool operator !=(in Ed25519.PublicKey x, in Ed25519.PublicKey y) Parameters Type Name Description Ed25519.PublicKey x Ed25519.PublicKey y Returns Type Description System.Boolean Implements IByteArray System.IEquatable<T>"
  },
  "api/AlgoSdk.Crypto.Ed25519.SecretKeyHandle.html": {
    "href": "api/AlgoSdk.Crypto.Ed25519.SecretKeyHandle.html",
    "title": "Struct Ed25519.SecretKeyHandle | Unity Algorand SDK",
    "keywords": "Struct Ed25519.SecretKeyHandle Implements INativeDisposable Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public struct SecretKeyHandle Fields KeySize Declaration public const int KeySize = 64 Field Value Type Description System.Int32 KeySize Declaration public const int KeySize = 64 Field Value Type Description System.Int32 Properties Ptr Declaration public readonly IntPtr Ptr { get; } Property Value Type Description System.IntPtr Ptr Declaration public readonly IntPtr Ptr { get; } Property Value Type Description System.IntPtr Methods Create() Declaration public static Ed25519.SecretKeyHandle Create() Returns Type Description Ed25519.SecretKeyHandle Create() Declaration public static Ed25519.SecretKeyHandle Create() Returns Type Description Ed25519.SecretKeyHandle Dispose() Declaration public void Dispose() Dispose() Declaration public void Dispose() Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle Sign<TMessage>(TMessage) Declaration public Ed25519.Signature Sign<TMessage>(TMessage message) where TMessage : IByteArray Parameters Type Name Description TMessage message Returns Type Description Ed25519.Signature Type Parameters Name Description TMessage Sign<TMessage>(TMessage) Declaration public Ed25519.Signature Sign<TMessage>(TMessage message) where TMessage : IByteArray Parameters Type Name Description TMessage message Returns Type Description Ed25519.Signature Type Parameters Name Description TMessage Operators Implicit(Ed25519.SecretKeyHandle to SecureMemoryHandle) Declaration public static implicit operator SecureMemoryHandle(Ed25519.SecretKeyHandle secretKeyHandle) Parameters Type Name Description Ed25519.SecretKeyHandle secretKeyHandle Returns Type Description SecureMemoryHandle Implicit(Ed25519.SecretKeyHandle to SecureMemoryHandle) Declaration public static implicit operator SecureMemoryHandle(Ed25519.SecretKeyHandle secretKeyHandle) Parameters Type Name Description Ed25519.SecretKeyHandle secretKeyHandle Returns Type Description SecureMemoryHandle Implicit(SecureMemoryHandle to Ed25519.SecretKeyHandle) Declaration public static implicit operator Ed25519.SecretKeyHandle(SecureMemoryHandle secureMemoryHandle) Parameters Type Name Description SecureMemoryHandle secureMemoryHandle Returns Type Description Ed25519.SecretKeyHandle Implicit(SecureMemoryHandle to Ed25519.SecretKeyHandle) Declaration public static implicit operator Ed25519.SecretKeyHandle(SecureMemoryHandle secureMemoryHandle) Parameters Type Name Description SecureMemoryHandle secureMemoryHandle Returns Type Description Ed25519.SecretKeyHandle Implements INativeDisposable"
  },
  "api/AlgoSdk.Crypto.Ed25519.Seed.html": {
    "href": "api/AlgoSdk.Crypto.Ed25519.Seed.html",
    "title": "Struct Ed25519.Seed | Unity Algorand SDK",
    "keywords": "Struct Ed25519.Seed Implements IByteArray System.IEquatable < Ed25519.Seed > Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct Seed : IEquatable<Ed25519.Seed> Fields Size Declaration public const int Size = 32 Field Value Type Description System.Int32 Size Declaration public const int Size = 32 Field Value Type Description System.Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Length Declaration public readonly int Length { get; } Property Value Type Description System.Int32 Length Declaration public readonly int Length { get; } Property Value Type Description System.Int32 Methods Equals(Ed25519.Seed) Declaration public bool Equals(Ed25519.Seed other) Parameters Type Name Description Ed25519.Seed other Returns Type Description System.Boolean Equals(Ed25519.Seed) Declaration public bool Equals(Ed25519.Seed other) Parameters Type Name Description Ed25519.Seed other Returns Type Description System.Boolean GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description System.Void * GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description System.Void * ToKeyPair() Declaration public Ed25519.KeyPair ToKeyPair() Returns Type Description Ed25519.KeyPair ToKeyPair() Declaration public Ed25519.KeyPair ToKeyPair() Returns Type Description Ed25519.KeyPair ToPublicKey() Declaration public Ed25519.PublicKey ToPublicKey() Returns Type Description Ed25519.PublicKey ToPublicKey() Declaration public Ed25519.PublicKey ToPublicKey() Returns Type Description Ed25519.PublicKey Implements IByteArray System.IEquatable<T>"
  },
  "api/AlgoSdk.Crypto.Ed25519.Signature.html": {
    "href": "api/AlgoSdk.Crypto.Ed25519.Signature.html",
    "title": "Struct Ed25519.Signature | Unity Algorand SDK",
    "keywords": "Struct Ed25519.Signature Implements IByteArray System.IEquatable < Ed25519.Signature > Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct Signature : IEquatable<Ed25519.Signature> Fields SizeBytes Declaration public const int SizeBytes = 64 Field Value Type Description System.Int32 SizeBytes Declaration public const int SizeBytes = 64 Field Value Type Description System.Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Length Declaration public readonly int Length { get; } Property Value Type Description System.Int32 Length Declaration public readonly int Length { get; } Property Value Type Description System.Int32 Methods Equals(Ed25519.Signature) Declaration public bool Equals(Ed25519.Signature other) Parameters Type Name Description Ed25519.Signature other Returns Type Description System.Boolean Equals(Ed25519.Signature) Declaration public bool Equals(Ed25519.Signature other) Parameters Type Name Description Ed25519.Signature other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description System.Void * GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description System.Void * Verify<TMessage>(TMessage, Ed25519.PublicKey) Declaration public bool Verify<TMessage>(TMessage message, Ed25519.PublicKey pk) where TMessage : IByteArray Parameters Type Name Description TMessage message Ed25519.PublicKey pk Returns Type Description System.Boolean Type Parameters Name Description TMessage Verify<TMessage>(TMessage, Ed25519.PublicKey) Declaration public bool Verify<TMessage>(TMessage message, Ed25519.PublicKey pk) where TMessage : IByteArray Parameters Type Name Description TMessage message Ed25519.PublicKey pk Returns Type Description System.Boolean Type Parameters Name Description TMessage Operators Equality(in Ed25519.Signature, in Ed25519.Signature) Declaration public static bool operator ==(in Ed25519.Signature x, in Ed25519.Signature y) Parameters Type Name Description Ed25519.Signature x Ed25519.Signature y Returns Type Description System.Boolean Equality(in Ed25519.Signature, in Ed25519.Signature) Declaration public static bool operator ==(in Ed25519.Signature x, in Ed25519.Signature y) Parameters Type Name Description Ed25519.Signature x Ed25519.Signature y Returns Type Description System.Boolean Inequality(in Ed25519.Signature, in Ed25519.Signature) Declaration public static bool operator !=(in Ed25519.Signature x, in Ed25519.Signature y) Parameters Type Name Description Ed25519.Signature x Ed25519.Signature y Returns Type Description System.Boolean Inequality(in Ed25519.Signature, in Ed25519.Signature) Declaration public static bool operator !=(in Ed25519.Signature x, in Ed25519.Signature y) Parameters Type Name Description Ed25519.Signature x Ed25519.Signature y Returns Type Description System.Boolean Implements IByteArray System.IEquatable<T>"
  },
  "api/AlgoSdk.Crypto.html": {
    "href": "api/AlgoSdk.Crypto.html",
    "title": "Namespace AlgoSdk.Crypto | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.Crypto Classes Ed25519 Random Sha512 Structs Ed25519.KeyPair Ed25519.PublicKey Ed25519.SecretKeyHandle Ed25519.Seed Ed25519.Signature SecureMemoryHandle Sha512_256_Hash Sha512_Hash"
  },
  "api/AlgoSdk.Crypto.Random.html": {
    "href": "api/AlgoSdk.Crypto.Random.html",
    "title": "Class Random | Unity Algorand SDK",
    "keywords": "Class Random Inheritance System.Object Random Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public static class Random Methods Bytes<T>() Declaration public static T Bytes<T>() where T : struct Returns Type Description T Type Parameters Name Description T Bytes<T>() Declaration public static T Bytes<T>() where T : struct Returns Type Description T Type Parameters Name Description T Randomize<T>(T) Declaration public static void Randomize<T>(T bytes) where T : struct, IByteArray Parameters Type Name Description T bytes Type Parameters Name Description T Randomize<T>(T) Declaration public static void Randomize<T>(T bytes) where T : struct, IByteArray Parameters Type Name Description T bytes Type Parameters Name Description T"
  },
  "api/AlgoSdk.Crypto.SecureMemoryHandle.html": {
    "href": "api/AlgoSdk.Crypto.SecureMemoryHandle.html",
    "title": "Struct SecureMemoryHandle | Unity Algorand SDK",
    "keywords": "Struct SecureMemoryHandle Implements INativeDisposable Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public struct SecureMemoryHandle Fields Ptr Declaration public IntPtr Ptr Field Value Type Description System.IntPtr Ptr Declaration public IntPtr Ptr Field Value Type Description System.IntPtr Properties IsCreated Declaration public readonly bool IsCreated { get; } Property Value Type Description System.Boolean IsCreated Declaration public readonly bool IsCreated { get; } Property Value Type Description System.Boolean Methods Create(UIntPtr) Declaration public static SecureMemoryHandle Create(UIntPtr sizeBytes) Parameters Type Name Description System.UIntPtr sizeBytes Returns Type Description SecureMemoryHandle Create(UIntPtr) Declaration public static SecureMemoryHandle Create(UIntPtr sizeBytes) Parameters Type Name Description System.UIntPtr sizeBytes Returns Type Description SecureMemoryHandle Dispose() Declaration public void Dispose() Dispose() Declaration public void Dispose() Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle Implements INativeDisposable"
  },
  "api/AlgoSdk.Crypto.Sha512.html": {
    "href": "api/AlgoSdk.Crypto.Sha512.html",
    "title": "Class Sha512 | Unity Algorand SDK",
    "keywords": "Class Sha512 Inheritance System.Object Sha512 Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public static class Sha512 Methods Hash256Truncated(Void*, Int32) Declaration public static Sha512_256_Hash Hash256Truncated(void *ptr, int length) Parameters Type Name Description System.Void * ptr System.Int32 length Returns Type Description Sha512_256_Hash Hash256Truncated(Void*, Int32) Declaration public static Sha512_256_Hash Hash256Truncated(void *ptr, int length) Parameters Type Name Description System.Void * ptr System.Int32 length Returns Type Description Sha512_256_Hash Hash256Truncated<TByteArray>(TByteArray) Declaration public static Sha512_256_Hash Hash256Truncated<TByteArray>(TByteArray bytes) where TByteArray : struct, IByteArray Parameters Type Name Description TByteArray bytes Returns Type Description Sha512_256_Hash Type Parameters Name Description TByteArray Hash256Truncated<TByteArray>(TByteArray) Declaration public static Sha512_256_Hash Hash256Truncated<TByteArray>(TByteArray bytes) where TByteArray : struct, IByteArray Parameters Type Name Description TByteArray bytes Returns Type Description Sha512_256_Hash Type Parameters Name Description TByteArray"
  },
  "api/AlgoSdk.Crypto.Sha512_256_Hash.html": {
    "href": "api/AlgoSdk.Crypto.Sha512_256_Hash.html",
    "title": "Struct Sha512_256_Hash | Unity Algorand SDK",
    "keywords": "Struct Sha512_256_Hash Implements IByteArray System.IEquatable < Sha512_256_Hash > Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct Sha512_256_Hash : IEquatable<Sha512_256_Hash> Fields SizeBytes Declaration public const int SizeBytes = 32 Field Value Type Description System.Int32 SizeBytes Declaration public const int SizeBytes = 32 Field Value Type Description System.Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Length Declaration public readonly int Length { get; } Property Value Type Description System.Int32 Length Declaration public readonly int Length { get; } Property Value Type Description System.Int32 Methods Equals(Sha512_256_Hash) Declaration public bool Equals(Sha512_256_Hash other) Parameters Type Name Description Sha512_256_Hash other Returns Type Description System.Boolean Equals(Sha512_256_Hash) Declaration public bool Equals(Sha512_256_Hash other) Parameters Type Name Description Sha512_256_Hash other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description System.Void * GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description System.Void * Operators Equality(in Sha512_256_Hash, in Sha512_256_Hash) Declaration public static bool operator ==(in Sha512_256_Hash x, in Sha512_256_Hash y) Parameters Type Name Description Sha512_256_Hash x Sha512_256_Hash y Returns Type Description System.Boolean Equality(in Sha512_256_Hash, in Sha512_256_Hash) Declaration public static bool operator ==(in Sha512_256_Hash x, in Sha512_256_Hash y) Parameters Type Name Description Sha512_256_Hash x Sha512_256_Hash y Returns Type Description System.Boolean Inequality(in Sha512_256_Hash, in Sha512_256_Hash) Declaration public static bool operator !=(in Sha512_256_Hash x, in Sha512_256_Hash y) Parameters Type Name Description Sha512_256_Hash x Sha512_256_Hash y Returns Type Description System.Boolean Inequality(in Sha512_256_Hash, in Sha512_256_Hash) Declaration public static bool operator !=(in Sha512_256_Hash x, in Sha512_256_Hash y) Parameters Type Name Description Sha512_256_Hash x Sha512_256_Hash y Returns Type Description System.Boolean Implements IByteArray System.IEquatable<T>"
  },
  "api/AlgoSdk.Crypto.Sha512_Hash.html": {
    "href": "api/AlgoSdk.Crypto.Sha512_Hash.html",
    "title": "Struct Sha512_Hash | Unity Algorand SDK",
    "keywords": "Struct Sha512_Hash Implements IByteArray System.IEquatable < Sha512_Hash > Namespace : AlgoSdk.Crypto Assembly : cs.temp.dll.dll Syntax public struct Sha512_Hash : IEquatable<Sha512_Hash> Fields SizeBytes Declaration public const int SizeBytes = 64 Field Value Type Description System.Int32 SizeBytes Declaration public const int SizeBytes = 64 Field Value Type Description System.Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Length Declaration public readonly int Length { get; } Property Value Type Description System.Int32 Length Declaration public readonly int Length { get; } Property Value Type Description System.Int32 Methods Equals(Sha512_Hash) Declaration public bool Equals(Sha512_Hash other) Parameters Type Name Description Sha512_Hash other Returns Type Description System.Boolean Equals(Sha512_Hash) Declaration public bool Equals(Sha512_Hash other) Parameters Type Name Description Sha512_Hash other Returns Type Description System.Boolean GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description System.Void * GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description System.Void * Implements IByteArray System.IEquatable<T>"
  },
  "api/AlgoSdk.DeleteKeyRequest.html": {
    "href": "api/AlgoSdk.DeleteKeyRequest.html",
    "title": "Struct DeleteKeyRequest | Unity Algorand SDK",
    "keywords": "Struct DeleteKeyRequest Implements System.IEquatable < DeleteKeyRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct DeleteKeyRequest : IEquatable<DeleteKeyRequest> Fields Address Declaration public Address Address Field Value Type Description Address Address Declaration public Address Address Field Value Type Description Address WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(DeleteKeyRequest) Declaration public bool Equals(DeleteKeyRequest other) Parameters Type Name Description DeleteKeyRequest other Returns Type Description System.Boolean Equals(DeleteKeyRequest) Declaration public bool Equals(DeleteKeyRequest other) Parameters Type Name Description DeleteKeyRequest other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.DeleteMultisigRequest.html": {
    "href": "api/AlgoSdk.DeleteMultisigRequest.html",
    "title": "Struct DeleteMultisigRequest | Unity Algorand SDK",
    "keywords": "Struct DeleteMultisigRequest Implements System.IEquatable < DeleteMultisigRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct DeleteMultisigRequest : IEquatable<DeleteMultisigRequest> Fields Address Declaration public Address Address Field Value Type Description Address Address Declaration public Address Address Field Value Type Description Address WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(DeleteMultisigRequest) Declaration public bool Equals(DeleteMultisigRequest other) Parameters Type Name Description DeleteMultisigRequest other Returns Type Description System.Boolean Equals(DeleteMultisigRequest) Declaration public bool Equals(DeleteMultisigRequest other) Parameters Type Name Description DeleteMultisigRequest other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.DryrunRequest.html": {
    "href": "api/AlgoSdk.DryrunRequest.html",
    "title": "Struct DryrunRequest | Unity Algorand SDK",
    "keywords": "Struct DryrunRequest Request data type for dryrun endpoint. Given the Transactions and simulated ledger state upload, run TEAL scripts and return debugging information. Implements System.IEquatable < DryrunRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct DryrunRequest : IEquatable<DryrunRequest> Fields Accounts Declaration public AccountInfo[] Accounts Field Value Type Description AccountInfo [] Accounts Declaration public AccountInfo[] Accounts Field Value Type Description AccountInfo [] Applications Declaration public Application[] Applications Field Value Type Description Application [] Applications Declaration public Application[] Applications Field Value Type Description Application [] LatestTimestamp LatestTimestamp is available to some TEAL scripts. Defaults to the latest confirmed timestamp this algod is attached to. Declaration public ulong LatestTimestamp Field Value Type Description System.UInt64 LatestTimestamp LatestTimestamp is available to some TEAL scripts. Defaults to the latest confirmed timestamp this algod is attached to. Declaration public ulong LatestTimestamp Field Value Type Description System.UInt64 ProtocolVersion ProtocolVersion specifies a specific version string to operate under, otherwise whatever the current protocol of the network this algod is running in. Declaration public FixedString64Bytes ProtocolVersion Field Value Type Description FixedString64Bytes ProtocolVersion ProtocolVersion specifies a specific version string to operate under, otherwise whatever the current protocol of the network this algod is running in. Declaration public FixedString64Bytes ProtocolVersion Field Value Type Description FixedString64Bytes Round Round is available to some TEAL scripts. Defaults to the current round on the network this algod is attached to. Declaration public ulong Round Field Value Type Description System.UInt64 Round Round is available to some TEAL scripts. Defaults to the current round on the network this algod is attached to. Declaration public ulong Round Field Value Type Description System.UInt64 Sources Declaration public DryrunSource[] Sources Field Value Type Description DryrunSource [] Sources Declaration public DryrunSource[] Sources Field Value Type Description DryrunSource [] Transactions Declaration public Transaction[] Transactions Field Value Type Description Transaction [] Transactions Declaration public Transaction[] Transactions Field Value Type Description Transaction [] Methods Equals(DryrunRequest) Declaration public bool Equals(DryrunRequest other) Parameters Type Name Description DryrunRequest other Returns Type Description System.Boolean Equals(DryrunRequest) Declaration public bool Equals(DryrunRequest other) Parameters Type Name Description DryrunRequest other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.DryrunResults.html": {
    "href": "api/AlgoSdk.DryrunResults.html",
    "title": "Struct DryrunResults | Unity Algorand SDK",
    "keywords": "Struct DryrunResults Response from TealDryrun(Optional<DryrunRequest>) Implements System.IEquatable < DryrunResults > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct DryrunResults : IEquatable<DryrunResults> Fields Error Declaration public string Error Field Value Type Description System.String Error Declaration public string Error Field Value Type Description System.String ProtocolVersion Protocol version is the protocol version Dryrun was operated under. Declaration public FixedString128Bytes ProtocolVersion Field Value Type Description FixedString128Bytes ProtocolVersion Protocol version is the protocol version Dryrun was operated under. Declaration public FixedString128Bytes ProtocolVersion Field Value Type Description FixedString128Bytes Txns Declaration public DryrunTxnResult[] Txns Field Value Type Description DryrunTxnResult [] Txns Declaration public DryrunTxnResult[] Txns Field Value Type Description DryrunTxnResult [] Methods Equals(DryrunResults) Declaration public bool Equals(DryrunResults other) Parameters Type Name Description DryrunResults other Returns Type Description System.Boolean Equals(DryrunResults) Declaration public bool Equals(DryrunResults other) Parameters Type Name Description DryrunResults other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.DryrunSource.html": {
    "href": "api/AlgoSdk.DryrunSource.html",
    "title": "Struct DryrunSource | Unity Algorand SDK",
    "keywords": "Struct DryrunSource DryrunSource is TEAL source text that gets uploaded, compiled, and inserted into transactions or application state. Implements System.IEquatable < DryrunSource > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct DryrunSource : IEquatable<DryrunSource> Fields AppIndex Declaration public ulong AppIndex Field Value Type Description System.UInt64 AppIndex Declaration public ulong AppIndex Field Value Type Description System.UInt64 FieldName FieldName is what kind of sources this is. If lsig then it goes into the LogicSig of the Transaction at TransactionIndex in Transactions . If approv or clearp it goes into the Approval Program or Clear State Program of Application at AppIndex in Applications . Declaration public FixedString32Bytes FieldName Field Value Type Description FixedString32Bytes FieldName FieldName is what kind of sources this is. If lsig then it goes into the LogicSig of the Transaction at TransactionIndex in Transactions . If approv or clearp it goes into the Approval Program or Clear State Program of Application at AppIndex in Applications . Declaration public FixedString32Bytes FieldName Field Value Type Description FixedString32Bytes Source Declaration public string Source Field Value Type Description System.String Source Declaration public string Source Field Value Type Description System.String TransactionIndex Declaration public ulong TransactionIndex Field Value Type Description System.UInt64 TransactionIndex Declaration public ulong TransactionIndex Field Value Type Description System.UInt64 Methods Equals(DryrunSource) Declaration public bool Equals(DryrunSource other) Parameters Type Name Description DryrunSource other Returns Type Description System.Boolean Equals(DryrunSource) Declaration public bool Equals(DryrunSource other) Parameters Type Name Description DryrunSource other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.DryrunState.html": {
    "href": "api/AlgoSdk.DryrunState.html",
    "title": "Struct DryrunState | Unity Algorand SDK",
    "keywords": "Struct DryrunState Stores the TEAL eval step data Implements System.IEquatable < DryrunState > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct DryrunState : IEquatable<DryrunState> Fields Error Evaluation error if any Declaration public FixedString128Bytes Error Field Value Type Description FixedString128Bytes Error Evaluation error if any Declaration public FixedString128Bytes Error Field Value Type Description FixedString128Bytes Line Line number Declaration public ulong Line Field Value Type Description System.UInt64 Line Line number Declaration public ulong Line Field Value Type Description System.UInt64 ProgramCounter Program counter Declaration public ulong ProgramCounter Field Value Type Description System.UInt64 ProgramCounter Program counter Declaration public ulong ProgramCounter Field Value Type Description System.UInt64 Scratch Declaration public TealValue[] Scratch Field Value Type Description TealValue [] Scratch Declaration public TealValue[] Scratch Field Value Type Description TealValue [] Stack Declaration public TealValue[] Stack Field Value Type Description TealValue [] Stack Declaration public TealValue[] Stack Field Value Type Description TealValue [] Methods Equals(DryrunState) Declaration public bool Equals(DryrunState other) Parameters Type Name Description DryrunState other Returns Type Description System.Boolean Equals(DryrunState) Declaration public bool Equals(DryrunState other) Parameters Type Name Description DryrunState other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.DryrunTxnResult.html": {
    "href": "api/AlgoSdk.DryrunTxnResult.html",
    "title": "Struct DryrunTxnResult | Unity Algorand SDK",
    "keywords": "Struct DryrunTxnResult DryrunTxnResult contains any LogicSig or ApplicationCall program debug information and state updates from a dryrun. Implements System.IEquatable < DryrunTxnResult > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct DryrunTxnResult : IEquatable<DryrunTxnResult> Fields AppCallMessages Declaration public FixedString128Bytes[] AppCallMessages Field Value Type Description FixedString128Bytes [] AppCallMessages Declaration public FixedString128Bytes[] AppCallMessages Field Value Type Description FixedString128Bytes [] AppCallTrace Declaration public DryrunState[] AppCallTrace Field Value Type Description DryrunState [] AppCallTrace Declaration public DryrunState[] AppCallTrace Field Value Type Description DryrunState [] Cost Execution cost of app call transaction Declaration public ulong Cost Field Value Type Description System.UInt64 Cost Execution cost of app call transaction Declaration public ulong Cost Field Value Type Description System.UInt64 Disassembly Disassembled program line by line. Declaration public FixedString128Bytes[] Disassembly Field Value Type Description FixedString128Bytes [] Disassembly Disassembled program line by line. Declaration public FixedString128Bytes[] Disassembly Field Value Type Description FixedString128Bytes [] GlobalDelta Declaration public EvalDeltaKeyValue[] GlobalDelta Field Value Type Description EvalDeltaKeyValue [] GlobalDelta Declaration public EvalDeltaKeyValue[] GlobalDelta Field Value Type Description EvalDeltaKeyValue [] LocalDeltas Declaration public AccountStateDelta[] LocalDeltas Field Value Type Description AccountStateDelta [] LocalDeltas Declaration public AccountStateDelta[] LocalDeltas Field Value Type Description AccountStateDelta [] LogicSigMessages Declaration public FixedString128Bytes[] LogicSigMessages Field Value Type Description FixedString128Bytes [] LogicSigMessages Declaration public FixedString128Bytes[] LogicSigMessages Field Value Type Description FixedString128Bytes [] LogicSigTrace Declaration public DryrunState[] LogicSigTrace Field Value Type Description DryrunState [] LogicSigTrace Declaration public DryrunState[] LogicSigTrace Field Value Type Description DryrunState [] Methods Equals(DryrunTxnResult) Declaration public bool Equals(DryrunTxnResult other) Parameters Type Name Description DryrunTxnResult other Returns Type Description System.Boolean Equals(DryrunTxnResult) Declaration public bool Equals(DryrunTxnResult other) Parameters Type Name Description DryrunTxnResult other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.Editor.AddressDrawer.html": {
    "href": "api/AlgoSdk.Editor.AddressDrawer.html",
    "title": "Class AddressDrawer | Unity Algorand SDK",
    "keywords": "Class AddressDrawer Inheritance System.Object BytesTextDrawer BytesTextDrawer < Address > AddressDrawer Implements PropertyDrawer Inherited Members BytesTextDrawer<Address>.GetString(List<Byte>) BytesTextDrawer<Address>.GetBytes(String) BytesTextDrawer.OnGUI(Rect, SerializedProperty, GUIContent) Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public class AddressDrawer : BytesTextDrawer<Address> Methods GetByteArray(String) Declaration protected override Address GetByteArray(string s) Parameters Type Name Description System.String s Returns Type Description Address Overrides AlgoSdk.Editor.BytesTextDrawer<AlgoSdk.Address>.GetByteArray(System.String) GetByteArray(String) Declaration protected override Address GetByteArray(string s) Parameters Type Name Description System.String s Returns Type Description Address Overrides AlgoSdk.Editor.BytesTextDrawer<AlgoSdk.Address>.GetByteArray(System.String) GetString(Address) Declaration protected override string GetString(Address bytes) Parameters Type Name Description Address bytes Returns Type Description System.String Overrides AlgoSdk.Editor.BytesTextDrawer<AlgoSdk.Address>.GetString(AlgoSdk.Address) GetString(Address) Declaration protected override string GetString(Address bytes) Parameters Type Name Description Address bytes Returns Type Description System.String Overrides AlgoSdk.Editor.BytesTextDrawer<AlgoSdk.Address>.GetString(AlgoSdk.Address) Implements PropertyDrawer"
  },
  "api/AlgoSdk.Editor.Base32Drawer.html": {
    "href": "api/AlgoSdk.Editor.Base32Drawer.html",
    "title": "Class Base32Drawer | Unity Algorand SDK",
    "keywords": "Class Base32Drawer Inheritance System.Object BytesTextDrawer Base32Drawer Implements PropertyDrawer Inherited Members BytesTextDrawer.OnGUI(Rect, SerializedProperty, GUIContent) Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public class Base32Drawer : BytesTextDrawer Methods GetBytes(String) Declaration protected override List<byte> GetBytes(string s) Parameters Type Name Description System.String s Returns Type Description List < System.Byte > Overrides BytesTextDrawer.GetBytes(String) GetBytes(String) Declaration protected override List<byte> GetBytes(string s) Parameters Type Name Description System.String s Returns Type Description List < System.Byte > Overrides BytesTextDrawer.GetBytes(String) GetString(List<Byte>) Declaration protected override string GetString(List<byte> bytes) Parameters Type Name Description List < System.Byte > bytes Returns Type Description System.String Overrides BytesTextDrawer.GetString(List<Byte>) GetString(List<Byte>) Declaration protected override string GetString(List<byte> bytes) Parameters Type Name Description List < System.Byte > bytes Returns Type Description System.String Overrides BytesTextDrawer.GetString(List<Byte>) Implements PropertyDrawer"
  },
  "api/AlgoSdk.Editor.Base64Drawer.html": {
    "href": "api/AlgoSdk.Editor.Base64Drawer.html",
    "title": "Class Base64Drawer | Unity Algorand SDK",
    "keywords": "Class Base64Drawer Inheritance System.Object BytesTextDrawer Base64Drawer Implements PropertyDrawer Inherited Members BytesTextDrawer.OnGUI(Rect, SerializedProperty, GUIContent) Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public class Base64Drawer : BytesTextDrawer Methods GetBytes(String) Declaration protected override List<byte> GetBytes(string s) Parameters Type Name Description System.String s Returns Type Description List < System.Byte > Overrides BytesTextDrawer.GetBytes(String) GetBytes(String) Declaration protected override List<byte> GetBytes(string s) Parameters Type Name Description System.String s Returns Type Description List < System.Byte > Overrides BytesTextDrawer.GetBytes(String) GetString(List<Byte>) Declaration protected override string GetString(List<byte> bytes) Parameters Type Name Description List < System.Byte > bytes Returns Type Description System.String Overrides BytesTextDrawer.GetString(List<Byte>) GetString(List<Byte>) Declaration protected override string GetString(List<byte> bytes) Parameters Type Name Description List < System.Byte > bytes Returns Type Description System.String Overrides BytesTextDrawer.GetString(List<Byte>) Implements PropertyDrawer"
  },
  "api/AlgoSdk.Editor.BytesTextDrawer.html": {
    "href": "api/AlgoSdk.Editor.BytesTextDrawer.html",
    "title": "Class BytesTextDrawer | Unity Algorand SDK",
    "keywords": "Class BytesTextDrawer Inheritance System.Object BytesTextDrawer Base32Drawer Base64Drawer BytesTextDrawer<T> MnemonicDrawer Implements PropertyDrawer Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public abstract class BytesTextDrawer : PropertyDrawer Methods GetBytes(String) Declaration protected abstract List<byte> GetBytes(string s) Parameters Type Name Description System.String s Returns Type Description List < System.Byte > GetBytes(String) Declaration protected abstract List<byte> GetBytes(string s) Parameters Type Name Description System.String s Returns Type Description List < System.Byte > GetString(List<Byte>) Declaration protected abstract string GetString(List<byte> bytes) Parameters Type Name Description List < System.Byte > bytes Returns Type Description System.String GetString(List<Byte>) Declaration protected abstract string GetString(List<byte> bytes) Parameters Type Name Description List < System.Byte > bytes Returns Type Description System.String OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label Implements PropertyDrawer"
  },
  "api/AlgoSdk.Editor.BytesTextDrawer-1.html": {
    "href": "api/AlgoSdk.Editor.BytesTextDrawer-1.html",
    "title": "Class BytesTextDrawer<T> | Unity Algorand SDK",
    "keywords": "Class BytesTextDrawer<T> Inheritance System.Object BytesTextDrawer BytesTextDrawer<T> AddressDrawer PrivateKeyDrawer Implements PropertyDrawer Inherited Members BytesTextDrawer.OnGUI(Rect, SerializedProperty, GUIContent) Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public abstract class BytesTextDrawer<T> : BytesTextDrawer where T : struct, IByteArray Type Parameters Name Description T Methods GetByteArray(String) Declaration protected abstract T GetByteArray(string s) Parameters Type Name Description System.String s Returns Type Description T GetByteArray(String) Declaration protected abstract T GetByteArray(string s) Parameters Type Name Description System.String s Returns Type Description T GetBytes(String) Declaration protected override List<byte> GetBytes(string s) Parameters Type Name Description System.String s Returns Type Description List < System.Byte > Overrides BytesTextDrawer.GetBytes(String) GetBytes(String) Declaration protected override List<byte> GetBytes(string s) Parameters Type Name Description System.String s Returns Type Description List < System.Byte > Overrides BytesTextDrawer.GetBytes(String) GetString(T) Declaration protected abstract string GetString(T bytes) Parameters Type Name Description T bytes Returns Type Description System.String GetString(T) Declaration protected abstract string GetString(T bytes) Parameters Type Name Description T bytes Returns Type Description System.String GetString(List<Byte>) Declaration protected override string GetString(List<byte> bytes) Parameters Type Name Description List < System.Byte > bytes Returns Type Description System.String Overrides BytesTextDrawer.GetString(List<Byte>) GetString(List<Byte>) Declaration protected override string GetString(List<byte> bytes) Parameters Type Name Description List < System.Byte > bytes Returns Type Description System.String Overrides BytesTextDrawer.GetString(List<Byte>) Implements PropertyDrawer"
  },
  "api/AlgoSdk.Editor.CodeGen.AddFormatterCodeMethodInvokeExpression.html": {
    "href": "api/AlgoSdk.Editor.CodeGen.AddFormatterCodeMethodInvokeExpression.html",
    "title": "Class AddFormatterCodeMethodInvokeExpression | Unity Algorand SDK",
    "keywords": "Class AddFormatterCodeMethodInvokeExpression Inheritance System.Object System.CodeDom.CodeObject System.CodeDom.CodeExpression System.CodeDom.CodeMethodInvokeExpression AddFormatterCodeMethodInvokeExpression Inherited Members System.CodeDom.CodeMethodInvokeExpression.Method System.CodeDom.CodeMethodInvokeExpression.Parameters System.CodeDom.CodeObject.UserData Namespace : AlgoSdk.Editor.CodeGen Assembly : cs.temp.dll.dll Syntax public class AddFormatterCodeMethodInvokeExpression : CodeMethodInvokeExpression Constructors AddFormatterCodeMethodInvokeExpression(Type, CodeExpression) Declaration public AddFormatterCodeMethodInvokeExpression(Type type, CodeExpression formatterExpression) Parameters Type Name Description System.Type type System.CodeDom.CodeExpression formatterExpression"
  },
  "api/AlgoSdk.Editor.CodeGen.AlgoApiCompileUnit.html": {
    "href": "api/AlgoSdk.Editor.CodeGen.AlgoApiCompileUnit.html",
    "title": "Class AlgoApiCompileUnit | Unity Algorand SDK",
    "keywords": "Class AlgoApiCompileUnit Extends a partial class or struct Inheritance System.Object System.CodeDom.CodeObject System.CodeDom.CodeCompileUnit AlgoApiCompileUnit Inherited Members System.CodeDom.CodeCompileUnit.Namespaces System.CodeDom.CodeCompileUnit.ReferencedAssemblies System.CodeDom.CodeCompileUnit.AssemblyCustomAttributes System.CodeDom.CodeCompileUnit.StartDirectives System.CodeDom.CodeCompileUnit.EndDirectives System.CodeDom.CodeObject.UserData Namespace : AlgoSdk.Editor.CodeGen Assembly : cs.temp.dll.dll Syntax public class AlgoApiCompileUnit : CodeCompileUnit Constructors AlgoApiCompileUnit(Type) Declaration public AlgoApiCompileUnit(Type type) Parameters Type Name Description System.Type type Properties IsValid Declaration public bool IsValid { get; protected set; } Property Value Type Description System.Boolean SourceInfo Declaration public ProvideSourceInfoAttribute SourceInfo { get; protected set; } Property Value Type Description ProvideSourceInfoAttribute Type Declaration public Type Type { get; protected set; } Property Value Type Description System.Type TypeDeclaration Declaration public FormatterCodeTypeDeclaration TypeDeclaration { get; protected set; } Property Value Type Description FormatterCodeTypeDeclaration Methods GetSourceInfo(Type) Declaration protected ProvideSourceInfoAttribute GetSourceInfo(Type type) Parameters Type Name Description System.Type type Returns Type Description ProvideSourceInfoAttribute"
  },
  "api/AlgoSdk.Editor.CodeGen.AlgoApiFormatterCreateExpression.html": {
    "href": "api/AlgoSdk.Editor.CodeGen.AlgoApiFormatterCreateExpression.html",
    "title": "Class AlgoApiFormatterCreateExpression | Unity Algorand SDK",
    "keywords": "Class AlgoApiFormatterCreateExpression Inheritance System.Object System.CodeDom.CodeObject System.CodeDom.CodeExpression System.CodeDom.CodeObjectCreateExpression AlgoApiFormatterCreateExpression Inherited Members System.CodeDom.CodeObjectCreateExpression.CreateType System.CodeDom.CodeObjectCreateExpression.Parameters System.CodeDom.CodeObject.UserData Namespace : AlgoSdk.Editor.CodeGen Assembly : cs.temp.dll.dll Syntax public class AlgoApiFormatterCreateExpression : CodeObjectCreateExpression Constructors AlgoApiFormatterCreateExpression(Type, Type) Declaration public AlgoApiFormatterCreateExpression(Type type, Type formatterType) Parameters Type Name Description System.Type type System.Type formatterType Methods ConstructFormatterType(Type, Type) Declaration public static Type ConstructFormatterType(Type type, Type formatterType) Parameters Type Name Description System.Type type System.Type formatterType Returns Type Description System.Type"
  },
  "api/AlgoSdk.Editor.CodeGen.AlgoApiObjectFieldKey.html": {
    "href": "api/AlgoSdk.Editor.CodeGen.AlgoApiObjectFieldKey.html",
    "title": "Struct AlgoApiObjectFieldKey | Unity Algorand SDK",
    "keywords": "Struct AlgoApiObjectFieldKey Namespace : AlgoSdk.Editor.CodeGen Assembly : cs.temp.dll.dll Syntax public struct AlgoApiObjectFieldKey Constructors AlgoApiObjectFieldKey(FieldInfo) Declaration public AlgoApiObjectFieldKey(FieldInfo fieldInfo) Parameters Type Name Description System.Reflection.FieldInfo fieldInfo AlgoApiObjectFieldKey(PropertyInfo) Declaration public AlgoApiObjectFieldKey(PropertyInfo propertyInfo) Parameters Type Name Description System.Reflection.PropertyInfo propertyInfo Fields BindingFlags Declaration public static readonly BindingFlags BindingFlags Field Value Type Description System.Reflection.BindingFlags Properties Attribute Declaration public AlgoApiField Attribute { readonly get; } Property Value Type Description AlgoApiField MemberInfo Declaration public MemberInfo MemberInfo { readonly get; } Property Value Type Description System.Reflection.MemberInfo MemberType Declaration public Type MemberType { readonly get; } Property Value Type Description System.Type Methods GetFields(Type) Declaration public static IEnumerable<AlgoApiObjectFieldKey> GetFields(Type type) Parameters Type Name Description System.Type type Returns Type Description IEnumerable < AlgoApiObjectFieldKey >"
  },
  "api/AlgoSdk.Editor.CodeGen.AlgoApiObjectFormatterCreateExpression.html": {
    "href": "api/AlgoSdk.Editor.CodeGen.AlgoApiObjectFormatterCreateExpression.html",
    "title": "Class AlgoApiObjectFormatterCreateExpression | Unity Algorand SDK",
    "keywords": "Class AlgoApiObjectFormatterCreateExpression Inheritance System.Object AlgoApiObjectFormatterCreateExpression Namespace : AlgoSdk.Editor.CodeGen Assembly : cs.temp.dll.dll Syntax public class AlgoApiObjectFormatterCreateExpression Constructors AlgoApiObjectFormatterCreateExpression(Type, IEnumerable<AlgoApiObjectFieldKey>) Declaration public AlgoApiObjectFormatterCreateExpression(Type type, IEnumerable<AlgoApiObjectFieldKey> fields) Parameters Type Name Description System.Type type IEnumerable < AlgoApiObjectFieldKey > fields Operators Implicit(AlgoApiObjectFormatterCreateExpression to CodeExpression) Declaration public static implicit operator CodeExpression(AlgoApiObjectFormatterCreateExpression src) Parameters Type Name Description AlgoApiObjectFormatterCreateExpression src Returns Type Description System.CodeDom.CodeExpression"
  },
  "api/AlgoSdk.Editor.CodeGen.ArrayFormatterInstanceExpression.html": {
    "href": "api/AlgoSdk.Editor.CodeGen.ArrayFormatterInstanceExpression.html",
    "title": "Class ArrayFormatterInstanceExpression | Unity Algorand SDK",
    "keywords": "Class ArrayFormatterInstanceExpression Inheritance System.Object System.CodeDom.CodeObject System.CodeDom.CodeExpression System.CodeDom.CodeFieldReferenceExpression ArrayFormatterInstanceExpression Inherited Members System.CodeDom.CodeFieldReferenceExpression.TargetObject System.CodeDom.CodeFieldReferenceExpression.FieldName System.CodeDom.CodeObject.UserData Namespace : AlgoSdk.Editor.CodeGen Assembly : cs.temp.dll.dll Syntax public class ArrayFormatterInstanceExpression : CodeFieldReferenceExpression Constructors ArrayFormatterInstanceExpression(Type) Declaration public ArrayFormatterInstanceExpression(Type arrayType) Parameters Type Name Description System.Type arrayType"
  },
  "api/AlgoSdk.Editor.CodeGen.FormatterCacheCodeGen.html": {
    "href": "api/AlgoSdk.Editor.CodeGen.FormatterCacheCodeGen.html",
    "title": "Class FormatterCacheCodeGen | Unity Algorand SDK",
    "keywords": "Class FormatterCacheCodeGen Inheritance System.Object FormatterCacheCodeGen Namespace : AlgoSdk.Editor.CodeGen Assembly : cs.temp.dll.dll Syntax public class FormatterCacheCodeGen Methods GenerateFormatterCache() Declaration public static void GenerateFormatterCache()"
  },
  "api/AlgoSdk.Editor.CodeGen.FormatterCodeTypeDeclaration.html": {
    "href": "api/AlgoSdk.Editor.CodeGen.FormatterCodeTypeDeclaration.html",
    "title": "Class FormatterCodeTypeDeclaration | Unity Algorand SDK",
    "keywords": "Class FormatterCodeTypeDeclaration Inheritance System.Object System.CodeDom.CodeObject System.CodeDom.CodeTypeMember System.CodeDom.CodeTypeDeclaration FormatterCodeTypeDeclaration Inherited Members System.CodeDom.CodeTypeDeclaration.TypeAttributes System.CodeDom.CodeTypeDeclaration.BaseTypes System.CodeDom.CodeTypeDeclaration.IsClass System.CodeDom.CodeTypeDeclaration.IsStruct System.CodeDom.CodeTypeDeclaration.IsEnum System.CodeDom.CodeTypeDeclaration.IsInterface System.CodeDom.CodeTypeDeclaration.IsPartial System.CodeDom.CodeTypeDeclaration.Members System.CodeDom.CodeTypeDeclaration.TypeParameters System.CodeDom.CodeTypeDeclaration.PopulateBaseTypes System.CodeDom.CodeTypeDeclaration.PopulateMembers System.CodeDom.CodeTypeMember.Name System.CodeDom.CodeTypeMember.Attributes System.CodeDom.CodeTypeMember.CustomAttributes System.CodeDom.CodeTypeMember.LinePragma System.CodeDom.CodeTypeMember.Comments System.CodeDom.CodeTypeMember.StartDirectives System.CodeDom.CodeTypeMember.EndDirectives System.CodeDom.CodeObject.UserData Namespace : AlgoSdk.Editor.CodeGen Assembly : cs.temp.dll.dll Syntax public class FormatterCodeTypeDeclaration : CodeTypeDeclaration Constructors FormatterCodeTypeDeclaration(Type) Declaration public FormatterCodeTypeDeclaration(Type type) Parameters Type Name Description System.Type type Properties IsValid Declaration public bool IsValid { get; protected set; } Property Value Type Description System.Boolean"
  },
  "api/AlgoSdk.Editor.CodeGen.FormatterStaticFieldInitializerExpression.html": {
    "href": "api/AlgoSdk.Editor.CodeGen.FormatterStaticFieldInitializerExpression.html",
    "title": "Class FormatterStaticFieldInitializerExpression | Unity Algorand SDK",
    "keywords": "Class FormatterStaticFieldInitializerExpression Inheritance System.Object System.CodeDom.CodeObject System.CodeDom.CodeTypeMember System.CodeDom.CodeMemberField FormatterStaticFieldInitializerExpression Inherited Members System.CodeDom.CodeMemberField.Type System.CodeDom.CodeMemberField.InitExpression System.CodeDom.CodeTypeMember.Name System.CodeDom.CodeTypeMember.Attributes System.CodeDom.CodeTypeMember.CustomAttributes System.CodeDom.CodeTypeMember.LinePragma System.CodeDom.CodeTypeMember.Comments System.CodeDom.CodeTypeMember.StartDirectives System.CodeDom.CodeTypeMember.EndDirectives System.CodeDom.CodeObject.UserData Namespace : AlgoSdk.Editor.CodeGen Assembly : cs.temp.dll.dll Syntax public class FormatterStaticFieldInitializerExpression : CodeMemberField Constructors FormatterStaticFieldInitializerExpression(Type) Declaration public FormatterStaticFieldInitializerExpression(Type type) Parameters Type Name Description System.Type type Fields FieldName Declaration public const string FieldName = \"__generated__IsValid\" Field Value Type Description System.String"
  },
  "api/AlgoSdk.Editor.CodeGen.html": {
    "href": "api/AlgoSdk.Editor.CodeGen.html",
    "title": "Namespace AlgoSdk.Editor.CodeGen | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.Editor.CodeGen Classes AddFormatterCodeMethodInvokeExpression AlgoApiCompileUnit Extends a partial class or struct AlgoApiFormatterCreateExpression AlgoApiObjectFormatterCreateExpression ArrayFormatterInstanceExpression FormatterCacheCodeGen FormatterCodeTypeDeclaration FormatterStaticFieldInitializerExpression InitFormattersCodeMemberMethod TypeExtensions Structs AlgoApiObjectFieldKey"
  },
  "api/AlgoSdk.Editor.CodeGen.InitFormattersCodeMemberMethod.html": {
    "href": "api/AlgoSdk.Editor.CodeGen.InitFormattersCodeMemberMethod.html",
    "title": "Class InitFormattersCodeMemberMethod | Unity Algorand SDK",
    "keywords": "Class InitFormattersCodeMemberMethod Inheritance System.Object System.CodeDom.CodeObject System.CodeDom.CodeTypeMember System.CodeDom.CodeMemberMethod InitFormattersCodeMemberMethod Inherited Members System.CodeDom.CodeMemberMethod.ReturnType System.CodeDom.CodeMemberMethod.Statements System.CodeDom.CodeMemberMethod.Parameters System.CodeDom.CodeMemberMethod.PrivateImplementationType System.CodeDom.CodeMemberMethod.ImplementationTypes System.CodeDom.CodeMemberMethod.ReturnTypeCustomAttributes System.CodeDom.CodeMemberMethod.TypeParameters System.CodeDom.CodeMemberMethod.PopulateParameters System.CodeDom.CodeMemberMethod.PopulateStatements System.CodeDom.CodeMemberMethod.PopulateImplementationTypes System.CodeDom.CodeTypeMember.Name System.CodeDom.CodeTypeMember.Attributes System.CodeDom.CodeTypeMember.CustomAttributes System.CodeDom.CodeTypeMember.LinePragma System.CodeDom.CodeTypeMember.Comments System.CodeDom.CodeTypeMember.StartDirectives System.CodeDom.CodeTypeMember.EndDirectives System.CodeDom.CodeObject.UserData Namespace : AlgoSdk.Editor.CodeGen Assembly : cs.temp.dll.dll Syntax public class InitFormattersCodeMemberMethod : CodeMemberMethod Constructors InitFormattersCodeMemberMethod(Type) Declaration public InitFormattersCodeMemberMethod(Type type) Parameters Type Name Description System.Type type Fields MethodName Declaration public const string MethodName = \"__generated__InitializeAlgoApiFormatters\" Field Value Type Description System.String Properties HasAddedFormatters Declaration public bool HasAddedFormatters { get; protected set; } Property Value Type Description System.Boolean"
  },
  "api/AlgoSdk.Editor.CodeGen.TypeExtensions.html": {
    "href": "api/AlgoSdk.Editor.CodeGen.TypeExtensions.html",
    "title": "Class TypeExtensions | Unity Algorand SDK",
    "keywords": "Class TypeExtensions Inheritance System.Object TypeExtensions Namespace : AlgoSdk.Editor.CodeGen Assembly : cs.temp.dll.dll Syntax public static class TypeExtensions Methods FullNameExpression(Type) Declaration public static string FullNameExpression(this Type type) Parameters Type Name Description System.Type type Returns Type Description System.String NameExpression(Type) Declaration public static string NameExpression(this Type type) Parameters Type Name Description System.Type type Returns Type Description System.String SafeFullName(Type) Declaration public static string SafeFullName(this Type type) Parameters Type Name Description System.Type type Returns Type Description System.String"
  },
  "api/AlgoSdk.Editor.CompiledTealDrawer.html": {
    "href": "api/AlgoSdk.Editor.CompiledTealDrawer.html",
    "title": "Class CompiledTealDrawer | Unity Algorand SDK",
    "keywords": "Class CompiledTealDrawer Inheritance System.Object CompiledTealDrawer Implements PropertyDrawer Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public class CompiledTealDrawer : PropertyDrawer Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label Implements PropertyDrawer"
  },
  "api/AlgoSdk.Editor.FixedStringDrawer.html": {
    "href": "api/AlgoSdk.Editor.FixedStringDrawer.html",
    "title": "Class FixedStringDrawer | Unity Algorand SDK",
    "keywords": "Class FixedStringDrawer Inheritance System.Object FixedStringDrawer Implements PropertyDrawer Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public class FixedStringDrawer : PropertyDrawer Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label Implements PropertyDrawer"
  },
  "api/AlgoSdk.Editor.html": {
    "href": "api/AlgoSdk.Editor.html",
    "title": "Namespace AlgoSdk.Editor | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.Editor Classes AddressDrawer Base32Drawer Base64Drawer BytesTextDrawer BytesTextDrawer<T> CompiledTealDrawer FixedStringDrawer MnemonicDrawer PrivateKeyDrawer SerializedBytes"
  },
  "api/AlgoSdk.Editor.MnemonicDrawer.html": {
    "href": "api/AlgoSdk.Editor.MnemonicDrawer.html",
    "title": "Class MnemonicDrawer | Unity Algorand SDK",
    "keywords": "Class MnemonicDrawer Inheritance System.Object BytesTextDrawer MnemonicDrawer Implements PropertyDrawer Inherited Members BytesTextDrawer.OnGUI(Rect, SerializedProperty, GUIContent) Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public class MnemonicDrawer : BytesTextDrawer Methods GetBytes(String) Declaration protected override List<byte> GetBytes(string s) Parameters Type Name Description System.String s Returns Type Description List < System.Byte > Overrides BytesTextDrawer.GetBytes(String) GetBytes(String) Declaration protected override List<byte> GetBytes(string s) Parameters Type Name Description System.String s Returns Type Description List < System.Byte > Overrides BytesTextDrawer.GetBytes(String) GetString(List<Byte>) Declaration protected override string GetString(List<byte> bytes) Parameters Type Name Description List < System.Byte > bytes Returns Type Description System.String Overrides BytesTextDrawer.GetString(List<Byte>) GetString(List<Byte>) Declaration protected override string GetString(List<byte> bytes) Parameters Type Name Description List < System.Byte > bytes Returns Type Description System.String Overrides BytesTextDrawer.GetString(List<Byte>) Implements PropertyDrawer"
  },
  "api/AlgoSdk.Editor.PrivateKeyDrawer.html": {
    "href": "api/AlgoSdk.Editor.PrivateKeyDrawer.html",
    "title": "Class PrivateKeyDrawer | Unity Algorand SDK",
    "keywords": "Class PrivateKeyDrawer Inheritance System.Object BytesTextDrawer BytesTextDrawer < PrivateKey > PrivateKeyDrawer Implements PropertyDrawer Inherited Members BytesTextDrawer<PrivateKey>.GetString(List<Byte>) BytesTextDrawer<PrivateKey>.GetBytes(String) BytesTextDrawer.OnGUI(Rect, SerializedProperty, GUIContent) Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public class PrivateKeyDrawer : BytesTextDrawer<PrivateKey> Methods GetByteArray(String) Declaration protected override PrivateKey GetByteArray(string s) Parameters Type Name Description System.String s Returns Type Description PrivateKey Overrides AlgoSdk.Editor.BytesTextDrawer<AlgoSdk.PrivateKey>.GetByteArray(System.String) GetByteArray(String) Declaration protected override PrivateKey GetByteArray(string s) Parameters Type Name Description System.String s Returns Type Description PrivateKey Overrides AlgoSdk.Editor.BytesTextDrawer<AlgoSdk.PrivateKey>.GetByteArray(System.String) GetString(PrivateKey) Declaration protected override string GetString(PrivateKey bytes) Parameters Type Name Description PrivateKey bytes Returns Type Description System.String Overrides AlgoSdk.Editor.BytesTextDrawer<AlgoSdk.PrivateKey>.GetString(AlgoSdk.PrivateKey) GetString(PrivateKey) Declaration protected override string GetString(PrivateKey bytes) Parameters Type Name Description PrivateKey bytes Returns Type Description System.String Overrides AlgoSdk.Editor.BytesTextDrawer<AlgoSdk.PrivateKey>.GetString(AlgoSdk.PrivateKey) Implements PropertyDrawer"
  },
  "api/AlgoSdk.Editor.SerializedBytes.html": {
    "href": "api/AlgoSdk.Editor.SerializedBytes.html",
    "title": "Class SerializedBytes | Unity Algorand SDK",
    "keywords": "Class SerializedBytes Inheritance System.Object SerializedBytes Namespace : AlgoSdk.Editor Assembly : cs.temp.dll.dll Syntax public class SerializedBytes Constructors SerializedBytes(SerializedProperty) Declaration public SerializedBytes(SerializedProperty root) Parameters Type Name Description SerializedProperty root SerializedBytes(SerializedProperty) Declaration public SerializedBytes(SerializedProperty root) Parameters Type Name Description SerializedProperty root Methods GetBytes() Declaration public List<byte> GetBytes() Returns Type Description List < System.Byte > GetBytes() Declaration public List<byte> GetBytes() Returns Type Description List < System.Byte > SetBytes(List<Byte>) Declaration public void SetBytes(List<byte> bytes) Parameters Type Name Description List < System.Byte > bytes SetBytes(List<Byte>) Declaration public void SetBytes(List<byte> bytes) Parameters Type Name Description List < System.Byte > bytes"
  },
  "api/AlgoSdk.Either-2.html": {
    "href": "api/AlgoSdk.Either-2.html",
    "title": "Struct Either<T, U> | Unity Algorand SDK",
    "keywords": "Struct Either<T, U> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Either<T, U> Type Parameters Name Description T U Constructors Either(T) Declaration public Either(T value) Parameters Type Name Description T value Either(T) Declaration public Either(T value) Parameters Type Name Description T value Either(U) Declaration public Either(U value) Parameters Type Name Description U value Either(U) Declaration public Either(U value) Parameters Type Name Description U value Properties IsValue1 Declaration public bool IsValue1 { readonly get; } Property Value Type Description System.Boolean IsValue1 Declaration public bool IsValue1 { readonly get; } Property Value Type Description System.Boolean IsValue2 Declaration public bool IsValue2 { readonly get; } Property Value Type Description System.Boolean IsValue2 Declaration public bool IsValue2 { readonly get; } Property Value Type Description System.Boolean Value1 Declaration public T Value1 { readonly get; } Property Value Type Description T Value1 Declaration public T Value1 { readonly get; } Property Value Type Description T Value2 Declaration public U Value2 { readonly get; } Property Value Type Description U Value2 Declaration public U Value2 { readonly get; } Property Value Type Description U Methods Deconstruct(out T, out U) Declaration public void Deconstruct(out T value1, out U value2) Parameters Type Name Description T value1 U value2 Deconstruct(out T, out U) Declaration public void Deconstruct(out T value1, out U value2) Parameters Type Name Description T value1 U value2 TryGetValue1(out T) Declaration public bool TryGetValue1(out T value) Parameters Type Name Description T value Returns Type Description System.Boolean TryGetValue1(out T) Declaration public bool TryGetValue1(out T value) Parameters Type Name Description T value Returns Type Description System.Boolean TryGetValue2(out U) Declaration public bool TryGetValue2(out U value) Parameters Type Name Description U value Returns Type Description System.Boolean TryGetValue2(out U) Declaration public bool TryGetValue2(out U value) Parameters Type Name Description U value Returns Type Description System.Boolean Operators Implicit(T to Either<T, U>) Declaration public static implicit operator Either<T, U>(T value1) Parameters Type Name Description T value1 Returns Type Description Either <T, U> Implicit(T to Either<T, U>) Declaration public static implicit operator Either<T, U>(T value1) Parameters Type Name Description T value1 Returns Type Description Either <T, U> Implicit(U to Either<T, U>) Declaration public static implicit operator Either<T, U>(U value2) Parameters Type Name Description U value2 Returns Type Description Either <T, U> Implicit(U to Either<T, U>) Declaration public static implicit operator Either<T, U>(U value2) Parameters Type Name Description U value2 Returns Type Description Either <T, U> Implicit(Either<T, U> to Either<U, T>) Declaration public static implicit operator Either<U, T>(Either<T, U> either) Parameters Type Name Description Either <T, U> either Returns Type Description Either <U, T> Implicit(Either<T, U> to Either<U, T>) Declaration public static implicit operator Either<U, T>(Either<T, U> either) Parameters Type Name Description Either <T, U> either Returns Type Description Either <U, T>"
  },
  "api/AlgoSdk.EitherFormatter-2.html": {
    "href": "api/AlgoSdk.EitherFormatter-2.html",
    "title": "Class EitherFormatter<T, U> | Unity Algorand SDK",
    "keywords": "Class EitherFormatter<T, U> Inheritance System.Object EitherFormatter<T, U> Implements IAlgoApiFormatter < Either <T, U>> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public sealed class EitherFormatter<T, U> : IAlgoApiFormatter<Either<T, U>> Type Parameters Name Description T U Methods Deserialize(ref JsonReader) Declaration public Either<T, U> Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Either <T, U> Deserialize(ref JsonReader) Declaration public Either<T, U> Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Either <T, U> Deserialize(ref MessagePackReader) Declaration public Either<T, U> Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Either <T, U> Deserialize(ref MessagePackReader) Declaration public Either<T, U> Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Either <T, U> Serialize(ref JsonWriter, Either<T, U>) Declaration public void Serialize(ref JsonWriter writer, Either<T, U> value) Parameters Type Name Description JsonWriter writer Either <T, U> value Serialize(ref JsonWriter, Either<T, U>) Declaration public void Serialize(ref JsonWriter writer, Either<T, U> value) Parameters Type Name Description JsonWriter writer Either <T, U> value Serialize(ref MessagePackWriter, Either<T, U>) Declaration public void Serialize(ref MessagePackWriter writer, Either<T, U> value) Parameters Type Name Description MessagePackWriter writer Either <T, U> value Serialize(ref MessagePackWriter, Either<T, U>) Declaration public void Serialize(ref MessagePackWriter writer, Either<T, U> value) Parameters Type Name Description MessagePackWriter writer Either <T, U> value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Endianness.html": {
    "href": "api/AlgoSdk.Endianness.html",
    "title": "Class Endianness | Unity Algorand SDK",
    "keywords": "Class Endianness Inheritance System.Object Endianness Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class Endianness Methods ToBytesBigEndian(UInt64, Allocator) Declaration public static NativeArray<byte> ToBytesBigEndian(this ulong value, Allocator allocator) Parameters Type Name Description System.UInt64 value Allocator allocator Returns Type Description NativeArray < System.Byte > ToBytesBigEndian(UInt64, Allocator) Declaration public static NativeArray<byte> ToBytesBigEndian(this ulong value, Allocator allocator) Parameters Type Name Description System.UInt64 value Allocator allocator Returns Type Description NativeArray < System.Byte >"
  },
  "api/AlgoSdk.ErrorResponse.html": {
    "href": "api/AlgoSdk.ErrorResponse.html",
    "title": "Struct ErrorResponse | Unity Algorand SDK",
    "keywords": "Struct ErrorResponse An error response from algorand APIs with optional data field. Implements System.IEquatable < ErrorResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct ErrorResponse : IEquatable<ErrorResponse> Fields Code HTTP response code Declaration public long Code Field Value Type Description System.Int64 Code HTTP response code Declaration public long Code Field Value Type Description System.Int64 Data Declaration public string Data Field Value Type Description System.String Data Declaration public string Data Field Value Type Description System.String Message Declaration public string Message Field Value Type Description System.String Message Declaration public string Message Field Value Type Description System.String Properties IsError Declaration public readonly bool IsError { get; } Property Value Type Description System.Boolean IsError Declaration public readonly bool IsError { get; } Property Value Type Description System.Boolean Methods Equals(ErrorResponse) Declaration public bool Equals(ErrorResponse other) Parameters Type Name Description ErrorResponse other Returns Type Description System.Boolean Equals(ErrorResponse) Declaration public bool Equals(ErrorResponse other) Parameters Type Name Description ErrorResponse other Returns Type Description System.Boolean ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() WithCode(Int64) Declaration public ErrorResponse WithCode(long code) Parameters Type Name Description System.Int64 code Returns Type Description ErrorResponse WithCode(Int64) Declaration public ErrorResponse WithCode(long code) Parameters Type Name Description System.Int64 code Returns Type Description ErrorResponse Operators Implicit(ErrorResponse to Boolean) Declaration public static implicit operator bool (ErrorResponse error) Parameters Type Name Description ErrorResponse error Returns Type Description System.Boolean Implicit(ErrorResponse to Boolean) Declaration public static implicit operator bool (ErrorResponse error) Parameters Type Name Description ErrorResponse error Returns Type Description System.Boolean Implicit(ErrorResponse to String) Declaration public static implicit operator string (ErrorResponse error) Parameters Type Name Description ErrorResponse error Returns Type Description System.String Implicit(ErrorResponse to String) Declaration public static implicit operator string (ErrorResponse error) Parameters Type Name Description ErrorResponse error Returns Type Description System.String Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.EvalDelta.html": {
    "href": "api/AlgoSdk.EvalDelta.html",
    "title": "Struct EvalDelta | Unity Algorand SDK",
    "keywords": "Struct EvalDelta Represents a TEAL value delta. Implements System.IEquatable < EvalDelta > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct EvalDelta : IEquatable<EvalDelta> Fields Action Declaration public EvalDeltaAction Action Field Value Type Description EvalDeltaAction Action Declaration public EvalDeltaAction Action Field Value Type Description EvalDeltaAction Bytes Declaration public TealBytes Bytes Field Value Type Description TealBytes Bytes Declaration public TealBytes Bytes Field Value Type Description TealBytes UInt Declaration public ulong UInt Field Value Type Description System.UInt64 UInt Declaration public ulong UInt Field Value Type Description System.UInt64 Methods Equals(EvalDelta) Declaration public bool Equals(EvalDelta other) Parameters Type Name Description EvalDelta other Returns Type Description System.Boolean Equals(EvalDelta) Declaration public bool Equals(EvalDelta other) Parameters Type Name Description EvalDelta other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.EvalDeltaAction.html": {
    "href": "api/AlgoSdk.EvalDeltaAction.html",
    "title": "Enum EvalDeltaAction | Unity Algorand SDK",
    "keywords": "Enum EvalDeltaAction Represents the action on the value Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum EvalDeltaAction : byte Fields Name Description Delete None SetBytes SetUInt"
  },
  "api/AlgoSdk.EvalDeltaAction_1.html": {
    "href": "api/AlgoSdk.EvalDeltaAction_1.html",
    "title": "Enum EvalDeltaAction | Unity Algorand SDK",
    "keywords": "Enum EvalDeltaAction Represents the action on the value Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum EvalDeltaAction : byte Fields Name Description Delete None SetBytes SetUInt"
  },
  "api/AlgoSdk.EvalDeltaKeyValue.html": {
    "href": "api/AlgoSdk.EvalDeltaKeyValue.html",
    "title": "Struct EvalDeltaKeyValue | Unity Algorand SDK",
    "keywords": "Struct EvalDeltaKeyValue EvalDeltaKeyValue Implements System.IEquatable < EvalDeltaKeyValue > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct EvalDeltaKeyValue : IEquatable<EvalDeltaKeyValue> Fields Key Declaration public FixedString64Bytes Key Field Value Type Description FixedString64Bytes Key Declaration public FixedString64Bytes Key Field Value Type Description FixedString64Bytes Value Declaration public EvalDelta Value Field Value Type Description EvalDelta Value Declaration public EvalDelta Value Field Value Type Description EvalDelta Methods Equals(EvalDeltaKeyValue) Declaration public bool Equals(EvalDeltaKeyValue other) Parameters Type Name Description EvalDeltaKeyValue other Returns Type Description System.Boolean Equals(EvalDeltaKeyValue) Declaration public bool Equals(EvalDeltaKeyValue other) Parameters Type Name Description EvalDeltaKeyValue other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.ExportKeyRequest.html": {
    "href": "api/AlgoSdk.ExportKeyRequest.html",
    "title": "Struct ExportKeyRequest | Unity Algorand SDK",
    "keywords": "Struct ExportKeyRequest Implements System.IEquatable < ExportKeyRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ExportKeyRequest : IEquatable<ExportKeyRequest> Fields Address Declaration public Address Address Field Value Type Description Address Address Declaration public Address Address Field Value Type Description Address WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(ExportKeyRequest) Declaration public bool Equals(ExportKeyRequest other) Parameters Type Name Description ExportKeyRequest other Returns Type Description System.Boolean Equals(ExportKeyRequest) Declaration public bool Equals(ExportKeyRequest other) Parameters Type Name Description ExportKeyRequest other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.ExportKeyResponse.html": {
    "href": "api/AlgoSdk.ExportKeyResponse.html",
    "title": "Struct ExportKeyResponse | Unity Algorand SDK",
    "keywords": "Struct ExportKeyResponse Implements System.IEquatable < ExportKeyResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ExportKeyResponse : IEquatable<ExportKeyResponse> Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Message Declaration public string Message Field Value Type Description System.String Message Declaration public string Message Field Value Type Description System.String PrivateKey Declaration public PrivateKey PrivateKey Field Value Type Description PrivateKey PrivateKey Declaration public PrivateKey PrivateKey Field Value Type Description PrivateKey Methods Equals(ExportKeyResponse) Declaration public bool Equals(ExportKeyResponse other) Parameters Type Name Description ExportKeyResponse other Returns Type Description System.Boolean Equals(ExportKeyResponse) Declaration public bool Equals(ExportKeyResponse other) Parameters Type Name Description ExportKeyResponse other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.ExportMasterKeyRequest.html": {
    "href": "api/AlgoSdk.ExportMasterKeyRequest.html",
    "title": "Struct ExportMasterKeyRequest | Unity Algorand SDK",
    "keywords": "Struct ExportMasterKeyRequest Implements System.IEquatable < ExportMasterKeyRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ExportMasterKeyRequest : IEquatable<ExportMasterKeyRequest> Fields WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(ExportMasterKeyRequest) Declaration public bool Equals(ExportMasterKeyRequest other) Parameters Type Name Description ExportMasterKeyRequest other Returns Type Description System.Boolean Equals(ExportMasterKeyRequest) Declaration public bool Equals(ExportMasterKeyRequest other) Parameters Type Name Description ExportMasterKeyRequest other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.ExportMasterKeyResponse.html": {
    "href": "api/AlgoSdk.ExportMasterKeyResponse.html",
    "title": "Struct ExportMasterKeyResponse | Unity Algorand SDK",
    "keywords": "Struct ExportMasterKeyResponse Implements System.IEquatable < ExportMasterKeyResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ExportMasterKeyResponse : IEquatable<ExportMasterKeyResponse> Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > MasterDerivationKey Declaration public PrivateKey MasterDerivationKey Field Value Type Description PrivateKey MasterDerivationKey Declaration public PrivateKey MasterDerivationKey Field Value Type Description PrivateKey Message Declaration public string Message Field Value Type Description System.String Message Declaration public string Message Field Value Type Description System.String Methods Equals(ExportMasterKeyResponse) Declaration public bool Equals(ExportMasterKeyResponse other) Parameters Type Name Description ExportMasterKeyResponse other Returns Type Description System.Boolean Equals(ExportMasterKeyResponse) Declaration public bool Equals(ExportMasterKeyResponse other) Parameters Type Name Description ExportMasterKeyResponse other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.ExportMultisigRequest.html": {
    "href": "api/AlgoSdk.ExportMultisigRequest.html",
    "title": "Struct ExportMultisigRequest | Unity Algorand SDK",
    "keywords": "Struct ExportMultisigRequest Implements System.IEquatable < ExportMultisigRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ExportMultisigRequest : IEquatable<ExportMultisigRequest> Fields Address Declaration public Address Address Field Value Type Description Address Address Declaration public Address Address Field Value Type Description Address WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(ExportMultisigRequest) Declaration public bool Equals(ExportMultisigRequest other) Parameters Type Name Description ExportMultisigRequest other Returns Type Description System.Boolean Equals(ExportMultisigRequest) Declaration public bool Equals(ExportMultisigRequest other) Parameters Type Name Description ExportMultisigRequest other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.ExportMultisigResponse.html": {
    "href": "api/AlgoSdk.ExportMultisigResponse.html",
    "title": "Struct ExportMultisigResponse | Unity Algorand SDK",
    "keywords": "Struct ExportMultisigResponse Implements System.IEquatable < ExportMultisigResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ExportMultisigResponse : IEquatable<ExportMultisigResponse> Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Message Declaration public string Message Field Value Type Description System.String Message Declaration public string Message Field Value Type Description System.String MultisigVersion Declaration public byte MultisigVersion Field Value Type Description System.Byte MultisigVersion Declaration public byte MultisigVersion Field Value Type Description System.Byte Pks Declaration public Ed25519.PublicKey[] Pks Field Value Type Description Ed25519.PublicKey [] Pks Declaration public Ed25519.PublicKey[] Pks Field Value Type Description Ed25519.PublicKey [] Threshold Declaration public byte Threshold Field Value Type Description System.Byte Threshold Declaration public byte Threshold Field Value Type Description System.Byte Methods Equals(ExportMultisigResponse) Declaration public bool Equals(ExportMultisigResponse other) Parameters Type Name Description ExportMultisigResponse other Returns Type Description System.Boolean Equals(ExportMultisigResponse) Declaration public bool Equals(ExportMultisigResponse other) Parameters Type Name Description ExportMultisigResponse other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.Formatters.AddressFormatter.html": {
    "href": "api/AlgoSdk.Formatters.AddressFormatter.html",
    "title": "Class AddressFormatter | Unity Algorand SDK",
    "keywords": "Class AddressFormatter Inheritance System.Object AddressFormatter Implements IAlgoApiFormatter < Address > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class AddressFormatter : IAlgoApiFormatter<Address> Methods Deserialize(ref JsonReader) Declaration public Address Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Address Deserialize(ref JsonReader) Declaration public Address Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Address Deserialize(ref MessagePackReader) Declaration public Address Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Address Deserialize(ref MessagePackReader) Declaration public Address Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Address Serialize(ref JsonWriter, Address) Declaration public void Serialize(ref JsonWriter writer, Address value) Parameters Type Name Description JsonWriter writer Address value Serialize(ref JsonWriter, Address) Declaration public void Serialize(ref JsonWriter writer, Address value) Parameters Type Name Description JsonWriter writer Address value Serialize(ref MessagePackWriter, Address) Declaration public void Serialize(ref MessagePackWriter writer, Address value) Parameters Type Name Description MessagePackWriter writer Address value Serialize(ref MessagePackWriter, Address) Declaration public void Serialize(ref MessagePackWriter writer, Address value) Parameters Type Name Description MessagePackWriter writer Address value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.AddressRoleFormatter.html": {
    "href": "api/AlgoSdk.Formatters.AddressRoleFormatter.html",
    "title": "Class AddressRoleFormatter | Unity Algorand SDK",
    "keywords": "Class AddressRoleFormatter Inheritance System.Object KeywordByteEnumFormatter < AddressRole > AddressRoleFormatter Implements IAlgoApiFormatter < AddressRole > Inherited Members KeywordByteEnumFormatter<AddressRole>.Deserialize(JsonReader) KeywordByteEnumFormatter<AddressRole>.Deserialize(MessagePackReader) KeywordByteEnumFormatter<AddressRole>.Serialize(JsonWriter, AddressRole) KeywordByteEnumFormatter<AddressRole>.Serialize(MessagePackWriter, AddressRole) Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class AddressRoleFormatter : KeywordByteEnumFormatter<AddressRole>, IAlgoApiFormatter<AddressRole> Constructors AddressRoleFormatter() Declaration public AddressRoleFormatter() AddressRoleFormatter() Declaration public AddressRoleFormatter() Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.ArrayFormatter-1.html": {
    "href": "api/AlgoSdk.Formatters.ArrayFormatter-1.html",
    "title": "Class ArrayFormatter<T> | Unity Algorand SDK",
    "keywords": "Class ArrayFormatter<T> Inheritance System.Object ArrayFormatter<T> Implements IAlgoApiFormatter <T[]> Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class ArrayFormatter<T> : IAlgoApiFormatter<T[]> Type Parameters Name Description T Fields Instance Declaration public static ArrayFormatter<T> Instance Field Value Type Description ArrayFormatter <T> Instance Declaration public static ArrayFormatter<T> Instance Field Value Type Description ArrayFormatter <T> Methods Deserialize(ref JsonReader) Declaration public T[] Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T[] Deserialize(ref JsonReader) Declaration public T[] Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T[] Deserialize(ref MessagePackReader) Declaration public T[] Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T[] Deserialize(ref MessagePackReader) Declaration public T[] Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T[] Serialize(ref JsonWriter, T[]) Declaration public void Serialize(ref JsonWriter writer, T[] value) Parameters Type Name Description JsonWriter writer T[] value Serialize(ref JsonWriter, T[]) Declaration public void Serialize(ref JsonWriter writer, T[] value) Parameters Type Name Description JsonWriter writer T[] value Serialize(ref MessagePackWriter, T[]) Declaration public void Serialize(ref MessagePackWriter writer, T[] value) Parameters Type Name Description MessagePackWriter writer T[] value Serialize(ref MessagePackWriter, T[]) Declaration public void Serialize(ref MessagePackWriter writer, T[] value) Parameters Type Name Description MessagePackWriter writer T[] value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.BoolFormatter.html": {
    "href": "api/AlgoSdk.Formatters.BoolFormatter.html",
    "title": "Class BoolFormatter | Unity Algorand SDK",
    "keywords": "Class BoolFormatter Inheritance System.Object BoolFormatter Implements IAlgoApiFormatter < System.Boolean > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class BoolFormatter : IAlgoApiFormatter<bool> Methods Deserialize(ref JsonReader) Declaration public bool Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description System.Boolean Deserialize(ref JsonReader) Declaration public bool Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description System.Boolean Deserialize(ref MessagePackReader) Declaration public bool Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description System.Boolean Deserialize(ref MessagePackReader) Declaration public bool Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description System.Boolean Serialize(ref JsonWriter, Boolean) Declaration public void Serialize(ref JsonWriter writer, bool value) Parameters Type Name Description JsonWriter writer System.Boolean value Serialize(ref JsonWriter, Boolean) Declaration public void Serialize(ref JsonWriter writer, bool value) Parameters Type Name Description JsonWriter writer System.Boolean value Serialize(ref MessagePackWriter, Boolean) Declaration public void Serialize(ref MessagePackWriter writer, bool value) Parameters Type Name Description MessagePackWriter writer System.Boolean value Serialize(ref MessagePackWriter, Boolean) Declaration public void Serialize(ref MessagePackWriter writer, bool value) Parameters Type Name Description MessagePackWriter writer System.Boolean value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.ByteArrayFormatter.html": {
    "href": "api/AlgoSdk.Formatters.ByteArrayFormatter.html",
    "title": "Class ByteArrayFormatter | Unity Algorand SDK",
    "keywords": "Class ByteArrayFormatter Inheritance System.Object ByteArrayFormatter Implements IAlgoApiFormatter < System.Byte []> Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class ByteArrayFormatter : IAlgoApiFormatter<byte[]> Methods Deserialize(ref JsonReader) Declaration public byte[] Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description System.Byte [] Deserialize(ref JsonReader) Declaration public byte[] Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description System.Byte [] Deserialize(ref MessagePackReader) Declaration public byte[] Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description System.Byte [] Deserialize(ref MessagePackReader) Declaration public byte[] Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description System.Byte [] Serialize(ref JsonWriter, Byte[]) Declaration public void Serialize(ref JsonWriter writer, byte[] value) Parameters Type Name Description JsonWriter writer System.Byte [] value Serialize(ref JsonWriter, Byte[]) Declaration public void Serialize(ref JsonWriter writer, byte[] value) Parameters Type Name Description JsonWriter writer System.Byte [] value Serialize(ref MessagePackWriter, Byte[]) Declaration public void Serialize(ref MessagePackWriter writer, byte[] value) Parameters Type Name Description MessagePackWriter writer System.Byte [] value Serialize(ref MessagePackWriter, Byte[]) Declaration public void Serialize(ref MessagePackWriter writer, byte[] value) Parameters Type Name Description MessagePackWriter writer System.Byte [] value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.ByteArrayFormatter-1.html": {
    "href": "api/AlgoSdk.Formatters.ByteArrayFormatter-1.html",
    "title": "Class ByteArrayFormatter<TByteArray> | Unity Algorand SDK",
    "keywords": "Class ByteArrayFormatter<TByteArray> Inheritance System.Object ByteArrayFormatter<TByteArray> Implements IAlgoApiFormatter <TByteArray> Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class ByteArrayFormatter<TByteArray> : IAlgoApiFormatter<TByteArray> where TByteArray : struct, IByteArray Type Parameters Name Description TByteArray Fields Instance Declaration public static ByteArrayFormatter<TByteArray> Instance Field Value Type Description ByteArrayFormatter <TByteArray> Instance Declaration public static ByteArrayFormatter<TByteArray> Instance Field Value Type Description ByteArrayFormatter <TByteArray> Methods Deserialize(ref JsonReader) Declaration public TByteArray Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description TByteArray Deserialize(ref JsonReader) Declaration public TByteArray Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description TByteArray Deserialize(ref MessagePackReader) Declaration public TByteArray Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description TByteArray Deserialize(ref MessagePackReader) Declaration public TByteArray Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description TByteArray Serialize(ref JsonWriter, TByteArray) Declaration public void Serialize(ref JsonWriter writer, TByteArray value) Parameters Type Name Description JsonWriter writer TByteArray value Serialize(ref JsonWriter, TByteArray) Declaration public void Serialize(ref JsonWriter writer, TByteArray value) Parameters Type Name Description JsonWriter writer TByteArray value Serialize(ref MessagePackWriter, TByteArray) Declaration public void Serialize(ref MessagePackWriter writer, TByteArray value) Parameters Type Name Description MessagePackWriter writer TByteArray value Serialize(ref MessagePackWriter, TByteArray) Declaration public void Serialize(ref MessagePackWriter writer, TByteArray value) Parameters Type Name Description MessagePackWriter writer TByteArray value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.ByteEnumFormatter-1.html": {
    "href": "api/AlgoSdk.Formatters.ByteEnumFormatter-1.html",
    "title": "Class ByteEnumFormatter<T> | Unity Algorand SDK",
    "keywords": "Class ByteEnumFormatter<T> Inheritance System.Object ByteEnumFormatter<T> Implements IAlgoApiFormatter <T> Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public sealed class ByteEnumFormatter<T> : IAlgoApiFormatter<T> where T : Enum Type Parameters Name Description T Methods Deserialize(ref JsonReader) Declaration public T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref JsonReader) Declaration public T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration public T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration public T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Serialize(ref JsonWriter, T) Declaration public void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref JsonWriter, T) Declaration public void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref MessagePackWriter, T) Declaration public void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value Serialize(ref MessagePackWriter, T) Declaration public void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.ErrorResponseFormatter.html": {
    "href": "api/AlgoSdk.Formatters.ErrorResponseFormatter.html",
    "title": "Class ErrorResponseFormatter | Unity Algorand SDK",
    "keywords": "Class ErrorResponseFormatter Inheritance System.Object ErrorResponseFormatter Implements IAlgoApiFormatter < ErrorResponse > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class ErrorResponseFormatter : IAlgoApiFormatter<ErrorResponse> Methods Deserialize(ref JsonReader) Declaration public ErrorResponse Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description ErrorResponse Deserialize(ref JsonReader) Declaration public ErrorResponse Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description ErrorResponse Deserialize(ref MessagePackReader) Declaration public ErrorResponse Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description ErrorResponse Deserialize(ref MessagePackReader) Declaration public ErrorResponse Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description ErrorResponse Serialize(ref JsonWriter, ErrorResponse) Declaration public void Serialize(ref JsonWriter writer, ErrorResponse value) Parameters Type Name Description JsonWriter writer ErrorResponse value Serialize(ref JsonWriter, ErrorResponse) Declaration public void Serialize(ref JsonWriter writer, ErrorResponse value) Parameters Type Name Description JsonWriter writer ErrorResponse value Serialize(ref MessagePackWriter, ErrorResponse) Declaration public void Serialize(ref MessagePackWriter writer, ErrorResponse value) Parameters Type Name Description MessagePackWriter writer ErrorResponse value Serialize(ref MessagePackWriter, ErrorResponse) Declaration public void Serialize(ref MessagePackWriter writer, ErrorResponse value) Parameters Type Name Description MessagePackWriter writer ErrorResponse value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.FixedBytesArray-1.html": {
    "href": "api/AlgoSdk.Formatters.FixedBytesArray-1.html",
    "title": "Struct FixedBytesArray<T> | Unity Algorand SDK",
    "keywords": "Struct FixedBytesArray<T> Implements IArray < System.Byte > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public struct FixedBytesArray<T> where T : struct, INativeList<byte> Type Parameters Name Description T Constructors FixedBytesArray(T) Declaration public FixedBytesArray(T bytes) Parameters Type Name Description T bytes FixedBytesArray(T) Declaration public FixedBytesArray(T bytes) Parameters Type Name Description T bytes Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Length Declaration public int Length { get; set; } Property Value Type Description System.Int32 Length Declaration public int Length { get; set; } Property Value Type Description System.Int32 Operators Implicit(T to FixedBytesArray<T>) Declaration public static implicit operator FixedBytesArray<T>(T bytes) Parameters Type Name Description T bytes Returns Type Description FixedBytesArray <T> Implicit(T to FixedBytesArray<T>) Declaration public static implicit operator FixedBytesArray<T>(T bytes) Parameters Type Name Description T bytes Returns Type Description FixedBytesArray <T> Implicit(FixedBytesArray<T> to T) Declaration public static implicit operator T(FixedBytesArray<T> fixedBytesArray) Parameters Type Name Description FixedBytesArray <T> fixedBytesArray Returns Type Description T Implicit(FixedBytesArray<T> to T) Declaration public static implicit operator T(FixedBytesArray<T> fixedBytesArray) Parameters Type Name Description FixedBytesArray <T> fixedBytesArray Returns Type Description T Implements IArray<>"
  },
  "api/AlgoSdk.Formatters.FixedBytesFormatter-1.html": {
    "href": "api/AlgoSdk.Formatters.FixedBytesFormatter-1.html",
    "title": "Class FixedBytesFormatter<T> | Unity Algorand SDK",
    "keywords": "Class FixedBytesFormatter<T> Inheritance System.Object FixedBytesFormatter<T> Implements IAlgoApiFormatter <T> Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class FixedBytesFormatter<T> : IAlgoApiFormatter<T> where T : struct, INativeList<byte> Type Parameters Name Description T Methods Deserialize(ref JsonReader) Declaration public T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref JsonReader) Declaration public T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration public T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration public T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Serialize(ref JsonWriter, T) Declaration public void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref JsonWriter, T) Declaration public void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref MessagePackWriter, T) Declaration public void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value Serialize(ref MessagePackWriter, T) Declaration public void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.FixedStringFormatter-1.html": {
    "href": "api/AlgoSdk.Formatters.FixedStringFormatter-1.html",
    "title": "Class FixedStringFormatter<T> | Unity Algorand SDK",
    "keywords": "Class FixedStringFormatter<T> Inheritance System.Object FixedStringFormatter<T> Implements IAlgoApiFormatter <T> Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public sealed class FixedStringFormatter<T> : IAlgoApiFormatter<T> where T : struct, IUTF8Bytes, INativeList<byte> Type Parameters Name Description T Methods Deserialize(ref JsonReader) Declaration public T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref JsonReader) Declaration public T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration public T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration public T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Serialize(ref JsonWriter, T) Declaration public void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref JsonWriter, T) Declaration public void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref MessagePackWriter, T) Declaration public void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value Serialize(ref MessagePackWriter, T) Declaration public void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.GenesisHashFormatter.html": {
    "href": "api/AlgoSdk.Formatters.GenesisHashFormatter.html",
    "title": "Class GenesisHashFormatter | Unity Algorand SDK",
    "keywords": "Class GenesisHashFormatter Inheritance System.Object GenesisHashFormatter Implements IAlgoApiFormatter < GenesisHash > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public sealed class GenesisHashFormatter : IAlgoApiFormatter<GenesisHash> Methods Deserialize(ref JsonReader) Declaration public GenesisHash Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description GenesisHash Deserialize(ref JsonReader) Declaration public GenesisHash Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description GenesisHash Deserialize(ref MessagePackReader) Declaration public GenesisHash Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description GenesisHash Deserialize(ref MessagePackReader) Declaration public GenesisHash Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description GenesisHash Serialize(ref JsonWriter, GenesisHash) Declaration public void Serialize(ref JsonWriter writer, GenesisHash value) Parameters Type Name Description JsonWriter writer GenesisHash value Serialize(ref JsonWriter, GenesisHash) Declaration public void Serialize(ref JsonWriter writer, GenesisHash value) Parameters Type Name Description JsonWriter writer GenesisHash value Serialize(ref MessagePackWriter, GenesisHash) Declaration public void Serialize(ref MessagePackWriter writer, GenesisHash value) Parameters Type Name Description MessagePackWriter writer GenesisHash value Serialize(ref MessagePackWriter, GenesisHash) Declaration public void Serialize(ref MessagePackWriter writer, GenesisHash value) Parameters Type Name Description MessagePackWriter writer GenesisHash value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.HexFormatter.html": {
    "href": "api/AlgoSdk.Formatters.HexFormatter.html",
    "title": "Class HexFormatter | Unity Algorand SDK",
    "keywords": "Class HexFormatter Inheritance System.Object HexFormatter Implements IAlgoApiFormatter < Hex > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public sealed class HexFormatter : IAlgoApiFormatter<Hex> Methods Deserialize(ref JsonReader) Declaration public Hex Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Hex Deserialize(ref JsonReader) Declaration public Hex Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Hex Deserialize(ref MessagePackReader) Declaration public Hex Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Hex Deserialize(ref MessagePackReader) Declaration public Hex Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Hex Serialize(ref JsonWriter, Hex) Declaration public void Serialize(ref JsonWriter writer, Hex value) Parameters Type Name Description JsonWriter writer Hex value Serialize(ref JsonWriter, Hex) Declaration public void Serialize(ref JsonWriter writer, Hex value) Parameters Type Name Description JsonWriter writer Hex value Serialize(ref MessagePackWriter, Hex) Declaration public void Serialize(ref MessagePackWriter writer, Hex value) Parameters Type Name Description MessagePackWriter writer Hex value Serialize(ref MessagePackWriter, Hex) Declaration public void Serialize(ref MessagePackWriter writer, Hex value) Parameters Type Name Description MessagePackWriter writer Hex value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.html": {
    "href": "api/AlgoSdk.Formatters.html",
    "title": "Namespace AlgoSdk.Formatters | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.Formatters Classes AddressFormatter AddressRoleFormatter ArrayFormatter<T> BoolFormatter ByteArrayFormatter ByteArrayFormatter<TByteArray> ByteEnumFormatter<T> ErrorResponseFormatter FixedBytesFormatter<T> FixedStringFormatter<T> GenesisHashFormatter HexFormatter Int16Formatter Int32Formatter Int64Formatter Int8Formatter KeywordByteEnumFormatter<T> OnCompletionFormatter OptionalFormatter<T> PrivateKeyFormatter SignatureTypeFormatter SignedTransactionFormatter SignedTransactionFormatter<TTransaction> StringFormatter TransactionIdFormatter TransactionTypeFormatter UInt16Formatter UInt32Formatter UInt64Formatter UInt8Formatter Structs FixedBytesArray<T>"
  },
  "api/AlgoSdk.Formatters.Int16Formatter.html": {
    "href": "api/AlgoSdk.Formatters.Int16Formatter.html",
    "title": "Class Int16Formatter | Unity Algorand SDK",
    "keywords": "Class Int16Formatter Inheritance System.Object Int16Formatter Implements IAlgoApiFormatter < System.Int16 > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class Int16Formatter : IAlgoApiFormatter<short> Methods Deserialize(ref JsonReader) Declaration public short Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description System.Int16 Deserialize(ref JsonReader) Declaration public short Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description System.Int16 Deserialize(ref MessagePackReader) Declaration public short Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description System.Int16 Deserialize(ref MessagePackReader) Declaration public short Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description System.Int16 Serialize(ref JsonWriter, Int16) Declaration public void Serialize(ref JsonWriter writer, short value) Parameters Type Name Description JsonWriter writer System.Int16 value Serialize(ref JsonWriter, Int16) Declaration public void Serialize(ref JsonWriter writer, short value) Parameters Type Name Description JsonWriter writer System.Int16 value Serialize(ref MessagePackWriter, Int16) Declaration public void Serialize(ref MessagePackWriter writer, short value) Parameters Type Name Description MessagePackWriter writer System.Int16 value Serialize(ref MessagePackWriter, Int16) Declaration public void Serialize(ref MessagePackWriter writer, short value) Parameters Type Name Description MessagePackWriter writer System.Int16 value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.Int32Formatter.html": {
    "href": "api/AlgoSdk.Formatters.Int32Formatter.html",
    "title": "Class Int32Formatter | Unity Algorand SDK",
    "keywords": "Class Int32Formatter Inheritance System.Object Int32Formatter Implements IAlgoApiFormatter < System.Int32 > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class Int32Formatter : IAlgoApiFormatter<int> Methods Deserialize(ref JsonReader) Declaration public int Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description System.Int32 Deserialize(ref JsonReader) Declaration public int Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description System.Int32 Deserialize(ref MessagePackReader) Declaration public int Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description System.Int32 Deserialize(ref MessagePackReader) Declaration public int Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description System.Int32 Serialize(ref JsonWriter, Int32) Declaration public void Serialize(ref JsonWriter writer, int value) Parameters Type Name Description JsonWriter writer System.Int32 value Serialize(ref JsonWriter, Int32) Declaration public void Serialize(ref JsonWriter writer, int value) Parameters Type Name Description JsonWriter writer System.Int32 value Serialize(ref MessagePackWriter, Int32) Declaration public void Serialize(ref MessagePackWriter writer, int value) Parameters Type Name Description MessagePackWriter writer System.Int32 value Serialize(ref MessagePackWriter, Int32) Declaration public void Serialize(ref MessagePackWriter writer, int value) Parameters Type Name Description MessagePackWriter writer System.Int32 value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.Int64Formatter.html": {
    "href": "api/AlgoSdk.Formatters.Int64Formatter.html",
    "title": "Class Int64Formatter | Unity Algorand SDK",
    "keywords": "Class Int64Formatter Inheritance System.Object Int64Formatter Implements IAlgoApiFormatter < System.Int64 > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class Int64Formatter : IAlgoApiFormatter<long> Methods Deserialize(ref JsonReader) Declaration public long Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description System.Int64 Deserialize(ref JsonReader) Declaration public long Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description System.Int64 Deserialize(ref MessagePackReader) Declaration public long Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description System.Int64 Deserialize(ref MessagePackReader) Declaration public long Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description System.Int64 Serialize(ref JsonWriter, Int64) Declaration public void Serialize(ref JsonWriter writer, long value) Parameters Type Name Description JsonWriter writer System.Int64 value Serialize(ref JsonWriter, Int64) Declaration public void Serialize(ref JsonWriter writer, long value) Parameters Type Name Description JsonWriter writer System.Int64 value Serialize(ref MessagePackWriter, Int64) Declaration public void Serialize(ref MessagePackWriter writer, long value) Parameters Type Name Description MessagePackWriter writer System.Int64 value Serialize(ref MessagePackWriter, Int64) Declaration public void Serialize(ref MessagePackWriter writer, long value) Parameters Type Name Description MessagePackWriter writer System.Int64 value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.Int8Formatter.html": {
    "href": "api/AlgoSdk.Formatters.Int8Formatter.html",
    "title": "Class Int8Formatter | Unity Algorand SDK",
    "keywords": "Class Int8Formatter Inheritance System.Object Int8Formatter Implements IAlgoApiFormatter < System.SByte > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class Int8Formatter : IAlgoApiFormatter<sbyte> Methods Deserialize(ref JsonReader) Declaration public sbyte Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description System.SByte Deserialize(ref JsonReader) Declaration public sbyte Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description System.SByte Deserialize(ref MessagePackReader) Declaration public sbyte Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description System.SByte Deserialize(ref MessagePackReader) Declaration public sbyte Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description System.SByte Serialize(ref JsonWriter, SByte) Declaration public void Serialize(ref JsonWriter writer, sbyte value) Parameters Type Name Description JsonWriter writer System.SByte value Serialize(ref JsonWriter, SByte) Declaration public void Serialize(ref JsonWriter writer, sbyte value) Parameters Type Name Description JsonWriter writer System.SByte value Serialize(ref MessagePackWriter, SByte) Declaration public void Serialize(ref MessagePackWriter writer, sbyte value) Parameters Type Name Description MessagePackWriter writer System.SByte value Serialize(ref MessagePackWriter, SByte) Declaration public void Serialize(ref MessagePackWriter writer, sbyte value) Parameters Type Name Description MessagePackWriter writer System.SByte value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.KeywordByteEnumFormatter-1.html": {
    "href": "api/AlgoSdk.Formatters.KeywordByteEnumFormatter-1.html",
    "title": "Class KeywordByteEnumFormatter<T> | Unity Algorand SDK",
    "keywords": "Class KeywordByteEnumFormatter<T> Inheritance System.Object KeywordByteEnumFormatter<T> AddressRoleFormatter OnCompletionFormatter SignatureTypeFormatter TransactionTypeFormatter Implements IAlgoApiFormatter <T> Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public abstract class KeywordByteEnumFormatter<T> : IAlgoApiFormatter<T> where T : Enum Type Parameters Name Description T Constructors KeywordByteEnumFormatter(String[]) Declaration public KeywordByteEnumFormatter(string[] typeToString) Parameters Type Name Description System.String [] typeToString KeywordByteEnumFormatter(String[]) Declaration public KeywordByteEnumFormatter(string[] typeToString) Parameters Type Name Description System.String [] typeToString Methods Deserialize(ref JsonReader) Declaration public virtual T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref JsonReader) Declaration public virtual T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration public virtual T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration public virtual T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Serialize(ref JsonWriter, T) Declaration public virtual void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref JsonWriter, T) Declaration public virtual void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref MessagePackWriter, T) Declaration public virtual void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value Serialize(ref MessagePackWriter, T) Declaration public virtual void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.OnCompletionFormatter.html": {
    "href": "api/AlgoSdk.Formatters.OnCompletionFormatter.html",
    "title": "Class OnCompletionFormatter | Unity Algorand SDK",
    "keywords": "Class OnCompletionFormatter Inheritance System.Object KeywordByteEnumFormatter < OnCompletion > OnCompletionFormatter Implements IAlgoApiFormatter < OnCompletion > Inherited Members KeywordByteEnumFormatter<OnCompletion>.Deserialize(JsonReader) KeywordByteEnumFormatter<OnCompletion>.Serialize(JsonWriter, OnCompletion) Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public sealed class OnCompletionFormatter : KeywordByteEnumFormatter<OnCompletion>, IAlgoApiFormatter<OnCompletion> Constructors OnCompletionFormatter() Declaration public OnCompletionFormatter() OnCompletionFormatter() Declaration public OnCompletionFormatter() Methods Deserialize(ref MessagePackReader) Declaration public override OnCompletion Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description OnCompletion Overrides AlgoSdk.Formatters.KeywordByteEnumFormatter<AlgoSdk.OnCompletion>.Deserialize(MessagePackReader) Deserialize(ref MessagePackReader) Declaration public override OnCompletion Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description OnCompletion Overrides AlgoSdk.Formatters.KeywordByteEnumFormatter<AlgoSdk.OnCompletion>.Deserialize(MessagePackReader) Serialize(ref MessagePackWriter, OnCompletion) Declaration public override void Serialize(ref MessagePackWriter writer, OnCompletion value) Parameters Type Name Description MessagePackWriter writer OnCompletion value Overrides AlgoSdk.Formatters.KeywordByteEnumFormatter<AlgoSdk.OnCompletion>.Serialize(MessagePackWriter, AlgoSdk.OnCompletion) Serialize(ref MessagePackWriter, OnCompletion) Declaration public override void Serialize(ref MessagePackWriter writer, OnCompletion value) Parameters Type Name Description MessagePackWriter writer OnCompletion value Overrides AlgoSdk.Formatters.KeywordByteEnumFormatter<AlgoSdk.OnCompletion>.Serialize(MessagePackWriter, AlgoSdk.OnCompletion) Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.OptionalFormatter-1.html": {
    "href": "api/AlgoSdk.Formatters.OptionalFormatter-1.html",
    "title": "Class OptionalFormatter<T> | Unity Algorand SDK",
    "keywords": "Class OptionalFormatter<T> Inheritance System.Object OptionalFormatter<T> Implements IAlgoApiFormatter < Optional <T>> Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public sealed class OptionalFormatter<T> : IAlgoApiFormatter<Optional<T>> where T : struct, IEquatable<T> Type Parameters Name Description T Methods Deserialize(ref JsonReader) Declaration public Optional<T> Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Optional <T> Deserialize(ref JsonReader) Declaration public Optional<T> Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Optional <T> Deserialize(ref MessagePackReader) Declaration public Optional<T> Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Optional <T> Deserialize(ref MessagePackReader) Declaration public Optional<T> Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Optional <T> Serialize(ref JsonWriter, Optional<T>) Declaration public void Serialize(ref JsonWriter writer, Optional<T> value) Parameters Type Name Description JsonWriter writer Optional <T> value Serialize(ref JsonWriter, Optional<T>) Declaration public void Serialize(ref JsonWriter writer, Optional<T> value) Parameters Type Name Description JsonWriter writer Optional <T> value Serialize(ref MessagePackWriter, Optional<T>) Declaration public void Serialize(ref MessagePackWriter writer, Optional<T> value) Parameters Type Name Description MessagePackWriter writer Optional <T> value Serialize(ref MessagePackWriter, Optional<T>) Declaration public void Serialize(ref MessagePackWriter writer, Optional<T> value) Parameters Type Name Description MessagePackWriter writer Optional <T> value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.PrivateKeyFormatter.html": {
    "href": "api/AlgoSdk.Formatters.PrivateKeyFormatter.html",
    "title": "Class PrivateKeyFormatter | Unity Algorand SDK",
    "keywords": "Class PrivateKeyFormatter Inheritance System.Object PrivateKeyFormatter Implements IAlgoApiFormatter < PrivateKey > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class PrivateKeyFormatter : IAlgoApiFormatter<PrivateKey> Methods Deserialize(ref JsonReader) Declaration public PrivateKey Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description PrivateKey Deserialize(ref JsonReader) Declaration public PrivateKey Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description PrivateKey Deserialize(ref MessagePackReader) Declaration public PrivateKey Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description PrivateKey Deserialize(ref MessagePackReader) Declaration public PrivateKey Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description PrivateKey Serialize(ref JsonWriter, PrivateKey) Declaration public void Serialize(ref JsonWriter writer, PrivateKey value) Parameters Type Name Description JsonWriter writer PrivateKey value Serialize(ref JsonWriter, PrivateKey) Declaration public void Serialize(ref JsonWriter writer, PrivateKey value) Parameters Type Name Description JsonWriter writer PrivateKey value Serialize(ref MessagePackWriter, PrivateKey) Declaration public void Serialize(ref MessagePackWriter writer, PrivateKey value) Parameters Type Name Description MessagePackWriter writer PrivateKey value Serialize(ref MessagePackWriter, PrivateKey) Declaration public void Serialize(ref MessagePackWriter writer, PrivateKey value) Parameters Type Name Description MessagePackWriter writer PrivateKey value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.SignatureTypeFormatter.html": {
    "href": "api/AlgoSdk.Formatters.SignatureTypeFormatter.html",
    "title": "Class SignatureTypeFormatter | Unity Algorand SDK",
    "keywords": "Class SignatureTypeFormatter Inheritance System.Object KeywordByteEnumFormatter < SignatureType > SignatureTypeFormatter Implements IAlgoApiFormatter < SignatureType > Inherited Members KeywordByteEnumFormatter<SignatureType>.Deserialize(JsonReader) KeywordByteEnumFormatter<SignatureType>.Deserialize(MessagePackReader) KeywordByteEnumFormatter<SignatureType>.Serialize(JsonWriter, SignatureType) KeywordByteEnumFormatter<SignatureType>.Serialize(MessagePackWriter, SignatureType) Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public sealed class SignatureTypeFormatter : KeywordByteEnumFormatter<SignatureType>, IAlgoApiFormatter<SignatureType> Constructors SignatureTypeFormatter() Declaration public SignatureTypeFormatter() SignatureTypeFormatter() Declaration public SignatureTypeFormatter() Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.SignedTransactionFormatter.html": {
    "href": "api/AlgoSdk.Formatters.SignedTransactionFormatter.html",
    "title": "Class SignedTransactionFormatter | Unity Algorand SDK",
    "keywords": "Class SignedTransactionFormatter Inheritance System.Object SignedTransactionFormatter Implements IAlgoApiFormatter < SignedTransaction > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class SignedTransactionFormatter : IAlgoApiFormatter<SignedTransaction> Methods Deserialize(ref JsonReader) Declaration public SignedTransaction Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description SignedTransaction Deserialize(ref JsonReader) Declaration public SignedTransaction Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description SignedTransaction Deserialize(ref MessagePackReader) Declaration public SignedTransaction Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description SignedTransaction Deserialize(ref MessagePackReader) Declaration public SignedTransaction Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description SignedTransaction Serialize(ref JsonWriter, SignedTransaction) Declaration public void Serialize(ref JsonWriter writer, SignedTransaction value) Parameters Type Name Description JsonWriter writer SignedTransaction value Serialize(ref JsonWriter, SignedTransaction) Declaration public void Serialize(ref JsonWriter writer, SignedTransaction value) Parameters Type Name Description JsonWriter writer SignedTransaction value Serialize(ref MessagePackWriter, SignedTransaction) Declaration public void Serialize(ref MessagePackWriter writer, SignedTransaction value) Parameters Type Name Description MessagePackWriter writer SignedTransaction value Serialize(ref MessagePackWriter, SignedTransaction) Declaration public void Serialize(ref MessagePackWriter writer, SignedTransaction value) Parameters Type Name Description MessagePackWriter writer SignedTransaction value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.SignedTransactionFormatter-1.html": {
    "href": "api/AlgoSdk.Formatters.SignedTransactionFormatter-1.html",
    "title": "Class SignedTransactionFormatter<TTransaction> | Unity Algorand SDK",
    "keywords": "Class SignedTransactionFormatter<TTransaction> Inheritance System.Object SignedTransactionFormatter<TTransaction> Implements IAlgoApiFormatter < Signed <TTransaction>> Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class SignedTransactionFormatter<TTransaction> : IAlgoApiFormatter<Signed<TTransaction>> where TTransaction : ITransaction Type Parameters Name Description TTransaction Methods Deserialize(ref JsonReader) Declaration public Signed<TTransaction> Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Signed <TTransaction> Deserialize(ref JsonReader) Declaration public Signed<TTransaction> Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description Signed <TTransaction> Deserialize(ref MessagePackReader) Declaration public Signed<TTransaction> Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Signed <TTransaction> Deserialize(ref MessagePackReader) Declaration public Signed<TTransaction> Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description Signed <TTransaction> Serialize(ref JsonWriter, Signed<TTransaction>) Declaration public void Serialize(ref JsonWriter writer, Signed<TTransaction> value) Parameters Type Name Description JsonWriter writer Signed <TTransaction> value Serialize(ref JsonWriter, Signed<TTransaction>) Declaration public void Serialize(ref JsonWriter writer, Signed<TTransaction> value) Parameters Type Name Description JsonWriter writer Signed <TTransaction> value Serialize(ref MessagePackWriter, Signed<TTransaction>) Declaration public void Serialize(ref MessagePackWriter writer, Signed<TTransaction> value) Parameters Type Name Description MessagePackWriter writer Signed <TTransaction> value Serialize(ref MessagePackWriter, Signed<TTransaction>) Declaration public void Serialize(ref MessagePackWriter writer, Signed<TTransaction> value) Parameters Type Name Description MessagePackWriter writer Signed <TTransaction> value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.StringFormatter.html": {
    "href": "api/AlgoSdk.Formatters.StringFormatter.html",
    "title": "Class StringFormatter | Unity Algorand SDK",
    "keywords": "Class StringFormatter Inheritance System.Object StringFormatter Implements IAlgoApiFormatter < System.String > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class StringFormatter : IAlgoApiFormatter<string> Methods Deserialize(ref JsonReader) Declaration public string Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description System.String Deserialize(ref JsonReader) Declaration public string Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description System.String Deserialize(ref MessagePackReader) Declaration public string Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description System.String Deserialize(ref MessagePackReader) Declaration public string Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description System.String Serialize(ref JsonWriter, String) Declaration public void Serialize(ref JsonWriter writer, string value) Parameters Type Name Description JsonWriter writer System.String value Serialize(ref JsonWriter, String) Declaration public void Serialize(ref JsonWriter writer, string value) Parameters Type Name Description JsonWriter writer System.String value Serialize(ref MessagePackWriter, String) Declaration public void Serialize(ref MessagePackWriter writer, string value) Parameters Type Name Description MessagePackWriter writer System.String value Serialize(ref MessagePackWriter, String) Declaration public void Serialize(ref MessagePackWriter writer, string value) Parameters Type Name Description MessagePackWriter writer System.String value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.TransactionIdFormatter.html": {
    "href": "api/AlgoSdk.Formatters.TransactionIdFormatter.html",
    "title": "Class TransactionIdFormatter | Unity Algorand SDK",
    "keywords": "Class TransactionIdFormatter Inheritance System.Object TransactionIdFormatter Implements IAlgoApiFormatter < TransactionId > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class TransactionIdFormatter : IAlgoApiFormatter<TransactionId> Methods Deserialize(ref JsonReader) Declaration public TransactionId Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description TransactionId Deserialize(ref JsonReader) Declaration public TransactionId Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description TransactionId Deserialize(ref MessagePackReader) Declaration public TransactionId Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description TransactionId Deserialize(ref MessagePackReader) Declaration public TransactionId Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description TransactionId Serialize(ref JsonWriter, TransactionId) Declaration public void Serialize(ref JsonWriter writer, TransactionId value) Parameters Type Name Description JsonWriter writer TransactionId value Serialize(ref JsonWriter, TransactionId) Declaration public void Serialize(ref JsonWriter writer, TransactionId value) Parameters Type Name Description JsonWriter writer TransactionId value Serialize(ref MessagePackWriter, TransactionId) Declaration public void Serialize(ref MessagePackWriter writer, TransactionId value) Parameters Type Name Description MessagePackWriter writer TransactionId value Serialize(ref MessagePackWriter, TransactionId) Declaration public void Serialize(ref MessagePackWriter writer, TransactionId value) Parameters Type Name Description MessagePackWriter writer TransactionId value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.TransactionTypeFormatter.html": {
    "href": "api/AlgoSdk.Formatters.TransactionTypeFormatter.html",
    "title": "Class TransactionTypeFormatter | Unity Algorand SDK",
    "keywords": "Class TransactionTypeFormatter Inheritance System.Object KeywordByteEnumFormatter < TransactionType > TransactionTypeFormatter Implements IAlgoApiFormatter < TransactionType > Inherited Members KeywordByteEnumFormatter<TransactionType>.Deserialize(JsonReader) KeywordByteEnumFormatter<TransactionType>.Deserialize(MessagePackReader) KeywordByteEnumFormatter<TransactionType>.Serialize(JsonWriter, TransactionType) KeywordByteEnumFormatter<TransactionType>.Serialize(MessagePackWriter, TransactionType) Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class TransactionTypeFormatter : KeywordByteEnumFormatter<TransactionType>, IAlgoApiFormatter<TransactionType> Constructors TransactionTypeFormatter() Declaration public TransactionTypeFormatter() TransactionTypeFormatter() Declaration public TransactionTypeFormatter() Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.UInt16Formatter.html": {
    "href": "api/AlgoSdk.Formatters.UInt16Formatter.html",
    "title": "Class UInt16Formatter | Unity Algorand SDK",
    "keywords": "Class UInt16Formatter Inheritance System.Object UInt16Formatter Implements IAlgoApiFormatter < System.UInt16 > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class UInt16Formatter : IAlgoApiFormatter<ushort> Methods Deserialize(ref JsonReader) Declaration public ushort Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description System.UInt16 Deserialize(ref JsonReader) Declaration public ushort Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description System.UInt16 Deserialize(ref MessagePackReader) Declaration public ushort Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description System.UInt16 Deserialize(ref MessagePackReader) Declaration public ushort Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description System.UInt16 Serialize(ref JsonWriter, UInt16) Declaration public void Serialize(ref JsonWriter writer, ushort value) Parameters Type Name Description JsonWriter writer System.UInt16 value Serialize(ref JsonWriter, UInt16) Declaration public void Serialize(ref JsonWriter writer, ushort value) Parameters Type Name Description JsonWriter writer System.UInt16 value Serialize(ref MessagePackWriter, UInt16) Declaration public void Serialize(ref MessagePackWriter writer, ushort value) Parameters Type Name Description MessagePackWriter writer System.UInt16 value Serialize(ref MessagePackWriter, UInt16) Declaration public void Serialize(ref MessagePackWriter writer, ushort value) Parameters Type Name Description MessagePackWriter writer System.UInt16 value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.UInt32Formatter.html": {
    "href": "api/AlgoSdk.Formatters.UInt32Formatter.html",
    "title": "Class UInt32Formatter | Unity Algorand SDK",
    "keywords": "Class UInt32Formatter Inheritance System.Object UInt32Formatter Implements IAlgoApiFormatter < System.UInt32 > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class UInt32Formatter : IAlgoApiFormatter<uint> Methods Deserialize(ref JsonReader) Declaration public uint Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description System.UInt32 Deserialize(ref JsonReader) Declaration public uint Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description System.UInt32 Deserialize(ref MessagePackReader) Declaration public uint Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description System.UInt32 Deserialize(ref MessagePackReader) Declaration public uint Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description System.UInt32 Serialize(ref JsonWriter, UInt32) Declaration public void Serialize(ref JsonWriter writer, uint value) Parameters Type Name Description JsonWriter writer System.UInt32 value Serialize(ref JsonWriter, UInt32) Declaration public void Serialize(ref JsonWriter writer, uint value) Parameters Type Name Description JsonWriter writer System.UInt32 value Serialize(ref MessagePackWriter, UInt32) Declaration public void Serialize(ref MessagePackWriter writer, uint value) Parameters Type Name Description MessagePackWriter writer System.UInt32 value Serialize(ref MessagePackWriter, UInt32) Declaration public void Serialize(ref MessagePackWriter writer, uint value) Parameters Type Name Description MessagePackWriter writer System.UInt32 value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.UInt64Formatter.html": {
    "href": "api/AlgoSdk.Formatters.UInt64Formatter.html",
    "title": "Class UInt64Formatter | Unity Algorand SDK",
    "keywords": "Class UInt64Formatter Inheritance System.Object UInt64Formatter Implements IAlgoApiFormatter < System.UInt64 > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class UInt64Formatter : IAlgoApiFormatter<ulong> Methods Deserialize(ref JsonReader) Declaration public ulong Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description System.UInt64 Deserialize(ref JsonReader) Declaration public ulong Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description System.UInt64 Deserialize(ref MessagePackReader) Declaration public ulong Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description System.UInt64 Deserialize(ref MessagePackReader) Declaration public ulong Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description System.UInt64 Serialize(ref JsonWriter, UInt64) Declaration public void Serialize(ref JsonWriter writer, ulong value) Parameters Type Name Description JsonWriter writer System.UInt64 value Serialize(ref JsonWriter, UInt64) Declaration public void Serialize(ref JsonWriter writer, ulong value) Parameters Type Name Description JsonWriter writer System.UInt64 value Serialize(ref MessagePackWriter, UInt64) Declaration public void Serialize(ref MessagePackWriter writer, ulong value) Parameters Type Name Description MessagePackWriter writer System.UInt64 value Serialize(ref MessagePackWriter, UInt64) Declaration public void Serialize(ref MessagePackWriter writer, ulong value) Parameters Type Name Description MessagePackWriter writer System.UInt64 value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.Formatters.UInt8Formatter.html": {
    "href": "api/AlgoSdk.Formatters.UInt8Formatter.html",
    "title": "Class UInt8Formatter | Unity Algorand SDK",
    "keywords": "Class UInt8Formatter Inheritance System.Object UInt8Formatter Implements IAlgoApiFormatter < System.Byte > Namespace : AlgoSdk.Formatters Assembly : cs.temp.dll.dll Syntax public class UInt8Formatter : IAlgoApiFormatter<byte> Methods Deserialize(ref JsonReader) Declaration public byte Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description System.Byte Deserialize(ref JsonReader) Declaration public byte Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description System.Byte Deserialize(ref MessagePackReader) Declaration public byte Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description System.Byte Deserialize(ref MessagePackReader) Declaration public byte Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description System.Byte Serialize(ref JsonWriter, Byte) Declaration public void Serialize(ref JsonWriter writer, byte value) Parameters Type Name Description JsonWriter writer System.Byte value Serialize(ref JsonWriter, Byte) Declaration public void Serialize(ref JsonWriter writer, byte value) Parameters Type Name Description JsonWriter writer System.Byte value Serialize(ref MessagePackWriter, Byte) Declaration public void Serialize(ref MessagePackWriter writer, byte value) Parameters Type Name Description MessagePackWriter writer System.Byte value Serialize(ref MessagePackWriter, Byte) Declaration public void Serialize(ref MessagePackWriter writer, byte value) Parameters Type Name Description MessagePackWriter writer System.Byte value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.GenerateKeyRequest.html": {
    "href": "api/AlgoSdk.GenerateKeyRequest.html",
    "title": "Struct GenerateKeyRequest | Unity Algorand SDK",
    "keywords": "Struct GenerateKeyRequest Implements System.IEquatable < GenerateKeyRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct GenerateKeyRequest : IEquatable<GenerateKeyRequest> Fields DisplayMnemonic Declaration public Optional<bool> DisplayMnemonic Field Value Type Description Optional < System.Boolean > DisplayMnemonic Declaration public Optional<bool> DisplayMnemonic Field Value Type Description Optional < System.Boolean > WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(GenerateKeyRequest) Declaration public bool Equals(GenerateKeyRequest other) Parameters Type Name Description GenerateKeyRequest other Returns Type Description System.Boolean Equals(GenerateKeyRequest) Declaration public bool Equals(GenerateKeyRequest other) Parameters Type Name Description GenerateKeyRequest other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.GenerateKeyResponse.html": {
    "href": "api/AlgoSdk.GenerateKeyResponse.html",
    "title": "Struct GenerateKeyResponse | Unity Algorand SDK",
    "keywords": "Struct GenerateKeyResponse Implements System.IEquatable < GenerateKeyResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct GenerateKeyResponse : IEquatable<GenerateKeyResponse> Fields Address Declaration public Address Address Field Value Type Description Address Address Declaration public Address Address Field Value Type Description Address Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Message Declaration public string Message Field Value Type Description System.String Message Declaration public string Message Field Value Type Description System.String Methods Equals(GenerateKeyResponse) Declaration public bool Equals(GenerateKeyResponse other) Parameters Type Name Description GenerateKeyResponse other Returns Type Description System.Boolean Equals(GenerateKeyResponse) Declaration public bool Equals(GenerateKeyResponse other) Parameters Type Name Description GenerateKeyResponse other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.GenesisAccountAlloc.html": {
    "href": "api/AlgoSdk.GenesisAccountAlloc.html",
    "title": "Struct GenesisAccountAlloc | Unity Algorand SDK",
    "keywords": "Struct GenesisAccountAlloc Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct GenesisAccountAlloc Fields addr Declaration public string addr Field Value Type Description System.String addr Declaration public string addr Field Value Type Description System.String comment Declaration public string comment Field Value Type Description System.String comment Declaration public string comment Field Value Type Description System.String state Declaration public GenesisAccountAlloc.State state Field Value Type Description GenesisAccountAlloc.State state Declaration public GenesisAccountAlloc.State state Field Value Type Description GenesisAccountAlloc.State"
  },
  "api/AlgoSdk.GenesisAccountAlloc.State.html": {
    "href": "api/AlgoSdk.GenesisAccountAlloc.State.html",
    "title": "Struct GenesisAccountAlloc.State | Unity Algorand SDK",
    "keywords": "Struct GenesisAccountAlloc.State Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct State Fields algo Declaration public ulong algo Field Value Type Description System.UInt64 algo Declaration public ulong algo Field Value Type Description System.UInt64 onl Declaration public ulong onl Field Value Type Description System.UInt64 onl Declaration public ulong onl Field Value Type Description System.UInt64 sel Declaration public string sel Field Value Type Description System.String sel Declaration public string sel Field Value Type Description System.String vote Declaration public string vote Field Value Type Description System.String vote Declaration public string vote Field Value Type Description System.String voteKD Declaration public ulong voteKD Field Value Type Description System.UInt64 voteKD Declaration public ulong voteKD Field Value Type Description System.UInt64 voteLst Declaration public ulong voteLst Field Value Type Description System.UInt64 voteLst Declaration public ulong voteLst Field Value Type Description System.UInt64"
  },
  "api/AlgoSdk.GenesisHash.html": {
    "href": "api/AlgoSdk.GenesisHash.html",
    "title": "Struct GenesisHash | Unity Algorand SDK",
    "keywords": "Struct GenesisHash Genesis hash found of the genesis block. Implements IByteArray System.IEquatable < GenesisHash > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct GenesisHash : IEquatable<GenesisHash> Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Length Declaration public readonly int Length { get; } Property Value Type Description System.Int32 Length Declaration public readonly int Length { get; } Property Value Type Description System.Int32 Methods Equals(GenesisHash) Declaration public bool Equals(GenesisHash other) Parameters Type Name Description GenesisHash other Returns Type Description System.Boolean Equals(GenesisHash) Declaration public bool Equals(GenesisHash other) Parameters Type Name Description GenesisHash other Returns Type Description System.Boolean GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description System.Void * GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description System.Void * Operators Implicit(GenesisHash to Sha512_256_Hash) Declaration public static implicit operator Sha512_256_Hash(GenesisHash genesisHash) Parameters Type Name Description GenesisHash genesisHash Returns Type Description Sha512_256_Hash Implicit(GenesisHash to Sha512_256_Hash) Declaration public static implicit operator Sha512_256_Hash(GenesisHash genesisHash) Parameters Type Name Description GenesisHash genesisHash Returns Type Description Sha512_256_Hash Implicit(Sha512_256_Hash to GenesisHash) Declaration public static implicit operator GenesisHash(Sha512_256_Hash hash) Parameters Type Name Description Sha512_256_Hash hash Returns Type Description GenesisHash Implicit(Sha512_256_Hash to GenesisHash) Declaration public static implicit operator GenesisHash(Sha512_256_Hash hash) Parameters Type Name Description Sha512_256_Hash hash Returns Type Description GenesisHash Implicit(String to GenesisHash) Declaration public static implicit operator GenesisHash(string s) Parameters Type Name Description System.String s Returns Type Description GenesisHash Implicit(String to GenesisHash) Declaration public static implicit operator GenesisHash(string s) Parameters Type Name Description System.String s Returns Type Description GenesisHash Implements IByteArray System.IEquatable<T>"
  },
  "api/AlgoSdk.GenesisInformation.html": {
    "href": "api/AlgoSdk.GenesisInformation.html",
    "title": "Struct GenesisInformation | Unity Algorand SDK",
    "keywords": "Struct GenesisInformation JSON information from GetGenesisInformation() Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct GenesisInformation Fields alloc Genesis account allocations Declaration public GenesisAccountAlloc[] alloc Field Value Type Description GenesisAccountAlloc [] alloc Genesis account allocations Declaration public GenesisAccountAlloc[] alloc Field Value Type Description GenesisAccountAlloc [] fees Declaration public string fees Field Value Type Description System.String fees Declaration public string fees Field Value Type Description System.String id Declaration public string id Field Value Type Description System.String id Declaration public string id Field Value Type Description System.String network Declaration public string network Field Value Type Description System.String network Declaration public string network Field Value Type Description System.String proto Declaration public string proto Field Value Type Description System.String proto Declaration public string proto Field Value Type Description System.String rwd Declaration public string rwd Field Value Type Description System.String rwd Declaration public string rwd Field Value Type Description System.String"
  },
  "api/AlgoSdk.Header.html": {
    "href": "api/AlgoSdk.Header.html",
    "title": "Struct Header | Unity Algorand SDK",
    "keywords": "Struct Header A serializable key-value pair that's used in http request headers. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct Header Constructors Header(String, String) Declaration public Header(string key, string value) Parameters Type Name Description System.String key System.String value Header(String, String) Declaration public Header(string key, string value) Parameters Type Name Description System.String key System.String value Fields Key Declaration public string Key Field Value Type Description System.String Key Declaration public string Key Field Value Type Description System.String Value Declaration public string Value Field Value Type Description System.String Value Declaration public string Value Field Value Type Description System.String Methods Deconstruct(out String, out String) Declaration public void Deconstruct(out string key, out string value) Parameters Type Name Description System.String key System.String value Deconstruct(out String, out String) Declaration public void Deconstruct(out string key, out string value) Parameters Type Name Description System.String key System.String value ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Implicit(Header to (String, String)) Declaration public static implicit operator (string, string)(Header header) Parameters Type Name Description Header header Returns Type Description System.ValueTuple < System.String , System.String > Implicit(Header to (String, String)) Declaration public static implicit operator (string, string)(Header header) Parameters Type Name Description Header header Returns Type Description System.ValueTuple < System.String , System.String > Implicit((String, String) to Header) Declaration public static implicit operator Header((string, string) tuple) Parameters Type Name Description System.ValueTuple < System.String , System.String > tuple Returns Type Description Header Implicit((String, String) to Header) Declaration public static implicit operator Header((string, string) tuple) Parameters Type Name Description System.ValueTuple < System.String , System.String > tuple Returns Type Description Header"
  },
  "api/AlgoSdk.HealthCheck.html": {
    "href": "api/AlgoSdk.HealthCheck.html",
    "title": "Struct HealthCheck | Unity Algorand SDK",
    "keywords": "Struct HealthCheck A health check response from GetHealth() Implements System.IEquatable < HealthCheck > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct HealthCheck : IEquatable<HealthCheck> Fields Data Declaration public AlgoApiObject Data Field Value Type Description AlgoApiObject Data Declaration public AlgoApiObject Data Field Value Type Description AlgoApiObject DatabaseAvailable Declaration public bool DatabaseAvailable Field Value Type Description System.Boolean DatabaseAvailable Declaration public bool DatabaseAvailable Field Value Type Description System.Boolean Errors Declaration public string[] Errors Field Value Type Description System.String [] Errors Declaration public string[] Errors Field Value Type Description System.String [] IsMigrating Declaration public bool IsMigrating Field Value Type Description System.Boolean IsMigrating Declaration public bool IsMigrating Field Value Type Description System.Boolean Message Declaration public string Message Field Value Type Description System.String Message Declaration public string Message Field Value Type Description System.String Round Declaration public ulong Round Field Value Type Description System.UInt64 Round Declaration public ulong Round Field Value Type Description System.UInt64 Version Declaration public string Version Field Value Type Description System.String Version Declaration public string Version Field Value Type Description System.String Methods Equals(HealthCheck) Declaration public bool Equals(HealthCheck other) Parameters Type Name Description HealthCheck other Returns Type Description System.Boolean Equals(HealthCheck) Declaration public bool Equals(HealthCheck other) Parameters Type Name Description HealthCheck other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.Hex.html": {
    "href": "api/AlgoSdk.Hex.html",
    "title": "Struct Hex | Unity Algorand SDK",
    "keywords": "Struct Hex Implements System.IEquatable < Hex > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct Hex : IEquatable<Hex> Properties Data Declaration public readonly byte[] Data { get; } Property Value Type Description System.Byte [] Data Declaration public readonly byte[] Data { get; } Property Value Type Description System.Byte [] Methods Equals(Hex) Declaration public bool Equals(Hex other) Parameters Type Name Description Hex other Returns Type Description System.Boolean Equals(Hex) Declaration public bool Equals(Hex other) Parameters Type Name Description Hex other Returns Type Description System.Boolean FromString(String) Declaration public static Hex FromString(string s) Parameters Type Name Description System.String s Returns Type Description Hex FromString(String) Declaration public static Hex FromString(string s) Parameters Type Name Description System.String s Returns Type Description Hex ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Implicit(Hex to Byte[]) Declaration public static implicit operator byte[](Hex hex) Parameters Type Name Description Hex hex Returns Type Description System.Byte [] Implicit(Hex to Byte[]) Declaration public static implicit operator byte[](Hex hex) Parameters Type Name Description Hex hex Returns Type Description System.Byte [] Implicit(Byte[] to Hex) Declaration public static implicit operator Hex(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description Hex Implicit(Byte[] to Hex) Declaration public static implicit operator Hex(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description Hex Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.html": {
    "href": "api/AlgoSdk.html",
    "title": "Namespace AlgoSdk | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk Classes Account Contains utility functions for generating new accounts (private keys). AddressRoleExtensions AlgoApiField AlgoApiField<TAlgoApiObject> AlgoApiField<TAlgoApiObject>.Map<TKey> AlgoApiFormatterAttribute AlgoApiFormatterCache<T> AlgoApiFormatterLookup AlgoApiObjectAttribute AlgoApiObjectFormatter AlgoApiObjectFormatter<T> AlgoApiSerializer Contains functions for serializing and deserializing AlgoSdk types ArrayComparer Base32Encoding Base64Encoding CompiledTealFormatter ContentTypeExtensions EitherFormatter<T, U> Endianness IntEnumFormatter<T> Logic ProvideSourceInfoAttribute SerializationException SignatureTypeExtensions TokenizedClientExtensions TransactionExtensions TransactionTypeExtensions Utf8StringExtensions Structs AccountInfo Information regarding an Algorand account at a given round. AccountParticipation Describes the parameters used by this account in consensus protocol. AccountResponse AccountsResponse AccountStateDelta Application state delta for an account Address . Address A public key for an Algorand account. Address.CheckSum AlgoApiObject A non-deserialized object from an algorand service. AlgoApiRequest A wrapper around for handling requests to Algorand REST services. AlgoApiRequest.Awaiter A Task Awaiter for AlgoApiRequest.Awaiter<TResponse> A Task Awaiter for AlgoApiRequest.Sent A wrapper around the handling the sent request. AlgoApiRequest.Sent<TResponse> A wrapper around the handling the sent request. AlgoApiRequest.SentWithProgress<TProgress> A wrapper around the handling the sent request. AlgoApiRequest.SentWithProgress<TResponse, TProgress> A wrapper around the handling the sent request. AlgoApiResponse Wrapper class around a completed AlgoApiResponse<T> Wrapper class around a completed . This can be deconstructed into a tuple of (ErrorResponse, Payload) AlgodClient A client for accessing the algod service AppCallTxn AppCallTxn.Params Application Application index and its parameters ApplicationLocalState Stores local state associated with an application. ApplicationParams Stores the global information associated with an application. ApplicationResponse ApplicationsResponse ArrayComparer<T> ArrayComparer<T, TComparer> Asset Specifies both the unique identifier and the parameters for an asset. AssetConfigTxn AssetConfigTxn.Params AssetFreezeTxn AssetFreezeTxn.Params AssetHolding Describes an asset held by an account. AssetParams AssetParams specifies the parameters for an asset. [apar] when part of an AssetConfig transaction. AssetResponse AssetsResponse AssetTransferTxn AssetTransferTxn.Params BalancesResponse Block Block information. BlockResponse A wrapped Block from the GetBlock(UInt64) BlockRewards BlockTransaction A transaction found in a BlockResponse from GetBlock(UInt64) . BlockUpgradeState BlockUpgradeVote BuildVersion Information regarding the algod service's build version. ByteEnumComparer<T> CatchupMessage A response from StartCatchup(String) CompiledTeal A wrapper class around compiled teal bytes. CreateWalletRequest CreateWalletResponse DeleteKeyRequest DeleteMultisigRequest DryrunRequest Request data type for dryrun endpoint. Given the Transactions and simulated ledger state upload, run TEAL scripts and return debugging information. DryrunResults Response from TealDryrun(Optional<DryrunRequest>) DryrunSource DryrunSource is TEAL source text that gets uploaded, compiled, and inserted into transactions or application state. DryrunState Stores the TEAL eval step data DryrunTxnResult DryrunTxnResult contains any LogicSig or ApplicationCall program debug information and state updates from a dryrun. Either<T, U> ErrorResponse An error response from algorand APIs with optional data field. EvalDelta Represents a TEAL value delta. EvalDeltaKeyValue EvalDeltaKeyValue ExportKeyRequest ExportKeyResponse ExportMasterKeyRequest ExportMasterKeyResponse ExportMultisigRequest ExportMultisigResponse GenerateKeyRequest GenerateKeyResponse GenesisAccountAlloc GenesisAccountAlloc.State GenesisHash Genesis hash found of the genesis block. GenesisInformation JSON information from GetGenesisInformation() Header A serializable key-value pair that's used in http request headers. HealthCheck A health check response from GetHealth() Hex ImportKeyRequest ImportKeyResponse ImportMultisigRequest ImportMultisigResponse IndexerClient A client for accessing the indexer service InitWalletHandleTokenRequest InitWalletHandleTokenResponse IntEnumComparer<T> KeyRegTxn KeyRegTxn.Params KmdClient A client for accessing the kmd service LedgerSupply Supply represents the current supply of MicroAlgos in the system. ListKeysRequest ListKeysResponse ListMultisigRequest ListMultisigResponse ListWalletsResponse LogicSig MerkleProof Proof of transaction in a block. MiniAssetHolding A simplified version of AssetHolding Mnemonic Byte struct representing a private key encoded with Length words. Multisig Multisig.Subsig Optional<T> PaymentTxn PaymentTxn.Params PendingTransaction Details about a pending transaction. If the transaction was recently confirmed, includes confirmation details like the round and reward details. PendingTransactions A potentially truncated list of transactions currently in the node's transaction pool. You can compute whether or not the list is truncated if the number of elements in the TopTransactions array is fewer than TotalTransactions . PrivateKey The private key for an Algorand account. ReleaseWalletHandleTokenRequest RenameWalletRequest RenameWalletResponse RenewWalletHandleTokenRequest RenewWalletHandleTokenResponse Sig Signed<TTransaction> A typed signed transaction. SignedTransaction An untyped signed transaction. See Signed<TTransaction> for a typed version. This is used as a wrapper around Transaction for the Algorand API. SignMultisigRequest SignMultisigResponse SignProgramMultisigRequest SignProgramMultisigResponse SignProgramRequest SignProgramResponse SignTransactionRequest SignTransactionResponse StateSchema The StateSchema object is only required for the create application call transaction. The StateSchema object must be fully populated for both the GlobalStateSchema and LocalStateSchema objects. Status The node status from GetCurrentStatus() and GetStatusAfterWaitingForRound(UInt64) StringComparer TealBytes TealCompilationResult Result from TealCompile(String) TealKeyValue Represents a key-value pair in an application store. TealValue Represents a TEAL value. Transaction TransactionGroup A group of transactions used to generate a group id for atomic transactions. TransactionHeader Contains parameters used in all transaction types. TransactionId A SHA512 256-truncated hash of a transaction's bytes. This is usually Base32 encoded with the padding chars trimmed. TransactionIdResponse Response from SendTransaction(Byte[]) . Wraps a TransactionId . TransactionParams Params used for setting all transactions. Contains fee, genesis info, and round constraints. Usually this is retrieved from GetSuggestedParams() then modified. TransactionResponse TransactionSignature An untyped wrapper around different transaction signatures. TransactionsResponse Version algod version information VersionsResponse VrfPubKey 32 byte public key required for SelectionParticipationKey Wallet WalletHandle WalletInfoRequest WalletInfoResponse Interfaces IAlgoApiClient IAlgoApiFormattable<T> IAlgoApiFormatter<T> IAlgoApiResponse IAlgoApiResponse<T> IAlgodClient IAppCallTxn IAssetConfigTxn IAssetFreezeTxn IAssetTransferTxn IBlockRewards IBlockUpgradeState IBlockUpgradeVote IIndexerClient IIndexerResponse IKeyRegTxn IKmdClient IPaginatedResponse IPaymentTxn ISignature ITransaction Enums AddressRole Role of an address for a transaction. AddressRole Role of an address for a transaction. ContentType ContentType EvalDeltaAction Represents the action on the value EvalDeltaAction Represents the action on the value Mnemonic.Word A list of possible words that occur in a Mnemonic Mnemonic.Word A list of possible words that occur in a Mnemonic OnCompletion [apan] defines the what additional actions occur with the transaction. OnCompletion [apan] defines the what additional actions occur with the transaction. SignatureType SignatureType TealValueType TEAL Value Type. Value 1 refers to bytes, value 2 refers to uint. TealValueType TEAL Value Type. Value 1 refers to bytes, value 2 refers to uint. TransactionType An enum representing the type of transaction. TransactionType An enum representing the type of transaction. Delegates AlgoApiField<TAlgoApiObject>.EqualityComparer AlgoApiField<TAlgoApiObject>.EqualityComparer AlgoApiField<TAlgoApiObject>.FieldGetter<T> AlgoApiField<TAlgoApiObject>.FieldGetter<T> AlgoApiField<TAlgoApiObject>.FieldSetter<T> AlgoApiField<TAlgoApiObject>.FieldSetter<T> AlgoApiField<TAlgoApiObject>.JsonDeserializer AlgoApiField<TAlgoApiObject>.JsonDeserializer AlgoApiField<TAlgoApiObject>.JsonSerializer AlgoApiField<TAlgoApiObject>.JsonSerializer AlgoApiField<TAlgoApiObject>.MessagePackDeserializer AlgoApiField<TAlgoApiObject>.MessagePackDeserializer AlgoApiField<TAlgoApiObject>.MessagePackSerializer AlgoApiField<TAlgoApiObject>.MessagePackSerializer AlgoApiField<TAlgoApiObject>.SerializePredicate AlgoApiField<TAlgoApiObject>.SerializePredicate"
  },
  "api/AlgoSdk.IAlgoApiClient.html": {
    "href": "api/AlgoSdk.IAlgoApiClient.html",
    "title": "Interface IAlgoApiClient | Unity Algorand SDK",
    "keywords": "Interface IAlgoApiClient Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAlgoApiClient Properties Address Address of the service, including the port Declaration string Address { get; } Property Value Type Description System.String Remarks e.g. \"http://localhost:4001\" Address Address of the service, including the port Declaration string Address { get; } Property Value Type Description System.String Remarks e.g. \"http://localhost:4001\" Headers Additional headers to add to requests Declaration Header[] Headers { get; } Property Value Type Description Header [] Headers Additional headers to add to requests Declaration Header[] Headers { get; } Property Value Type Description Header [] Token Token used in authenticating to the service Declaration string Token { get; } Property Value Type Description System.String Token Token used in authenticating to the service Declaration string Token { get; } Property Value Type Description System.String TokenHeader Request header to use for the authenticating Token Declaration string TokenHeader { get; } Property Value Type Description System.String TokenHeader Request header to use for the authenticating Token Declaration string TokenHeader { get; } Property Value Type Description System.String"
  },
  "api/AlgoSdk.IAlgoApiFormattable-1.html": {
    "href": "api/AlgoSdk.IAlgoApiFormattable-1.html",
    "title": "Interface IAlgoApiFormattable<T> | Unity Algorand SDK",
    "keywords": "Interface IAlgoApiFormattable<T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAlgoApiFormattable<T> Type Parameters Name Description T Methods GetAlgoApiFormatter() Declaration IAlgoApiFormatter<T> GetAlgoApiFormatter() Returns Type Description IAlgoApiFormatter <T> GetAlgoApiFormatter() Declaration IAlgoApiFormatter<T> GetAlgoApiFormatter() Returns Type Description IAlgoApiFormatter <T>"
  },
  "api/AlgoSdk.IAlgoApiFormatter-1.html": {
    "href": "api/AlgoSdk.IAlgoApiFormatter-1.html",
    "title": "Interface IAlgoApiFormatter<T> | Unity Algorand SDK",
    "keywords": "Interface IAlgoApiFormatter<T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAlgoApiFormatter<T> Type Parameters Name Description T Methods Deserialize(ref JsonReader) Declaration T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref JsonReader) Declaration T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Serialize(ref JsonWriter, T) Declaration void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref JsonWriter, T) Declaration void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref MessagePackWriter, T) Declaration void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value Serialize(ref MessagePackWriter, T) Declaration void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value"
  },
  "api/AlgoSdk.IAlgoApiResponse.html": {
    "href": "api/AlgoSdk.IAlgoApiResponse.html",
    "title": "Interface IAlgoApiResponse | Unity Algorand SDK",
    "keywords": "Interface IAlgoApiResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAlgoApiResponse Properties ContentType The ContentType found in the Response header Declaration ContentType ContentType { get; } Property Value Type Description ContentType ContentType The ContentType found in the Response header Declaration ContentType ContentType { get; } Property Value Type Description ContentType Data Raw downloaded data Declaration byte[] Data { get; } Property Value Type Description System.Byte [] Data Raw downloaded data Declaration byte[] Data { get; } Property Value Type Description System.Byte [] Error An ErrorResponse that is populated if there is an error. Check IsError to see if there was an error. Declaration ErrorResponse Error { get; } Property Value Type Description ErrorResponse Error An ErrorResponse that is populated if there is an error. Check IsError to see if there was an error. Declaration ErrorResponse Error { get; } Property Value Type Description ErrorResponse ResponseCode HTTP status code Declaration long ResponseCode { get; } Property Value Type Description System.Int64 ResponseCode HTTP status code Declaration long ResponseCode { get; } Property Value Type Description System.Int64 Status A status for the request Declaration Result Status { get; } Property Value Type Description Result Status A status for the request Declaration Result Status { get; } Property Value Type Description Result Methods GetText() Parses the Data into a string based on ContentType Declaration string GetText() Returns Type Description System.String A string encoded from Data GetText() Parses the Data into a string based on ContentType Declaration string GetText() Returns Type Description System.String A string encoded from Data"
  },
  "api/AlgoSdk.IAlgoApiResponse-1.html": {
    "href": "api/AlgoSdk.IAlgoApiResponse-1.html",
    "title": "Interface IAlgoApiResponse<T> | Unity Algorand SDK",
    "keywords": "Interface IAlgoApiResponse<T> Inherited Members IAlgoApiResponse.Data IAlgoApiResponse.ResponseCode IAlgoApiResponse.Status IAlgoApiResponse.ContentType IAlgoApiResponse.Error IAlgoApiResponse.GetText() Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAlgoApiResponse<T> : IAlgoApiResponse Type Parameters Name Description T Properties Payload The object deserialized from the response Declaration T Payload { get; } Property Value Type Description T Payload The object deserialized from the response Declaration T Payload { get; } Property Value Type Description T"
  },
  "api/AlgoSdk.IAlgodClient.html": {
    "href": "api/AlgoSdk.IAlgodClient.html",
    "title": "Interface IAlgodClient | Unity Algorand SDK",
    "keywords": "Interface IAlgodClient Inherited Members IAlgoApiClient.Address IAlgoApiClient.Token IAlgoApiClient.TokenHeader IAlgoApiClient.Headers Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAlgodClient : IAlgoApiClient Methods AbortCatchup(String) Aborts a catchpoint catchup. Declaration AlgoApiRequest.Sent<CatchupMessage> AbortCatchup(string catchpoint) Parameters Type Name Description System.String catchpoint A catch point Returns Type Description AlgoApiRequest.Sent < CatchupMessage > Catchup abort response string AbortCatchup(String) Aborts a catchpoint catchup. Declaration AlgoApiRequest.Sent<CatchupMessage> AbortCatchup(string catchpoint) Parameters Type Name Description System.String catchpoint A catch point Returns Type Description AlgoApiRequest.Sent < CatchupMessage > Catchup abort response string GetAccountInformation(Address) Get account information. Declaration AlgoApiRequest.Sent<AccountInfo> GetAccountInformation(Address accountAddress) Parameters Type Name Description Address accountAddress An account public key (address) Returns Type Description AlgoApiRequest.Sent < AccountInfo > an AccountInfo if everything is okay Remarks Given a specific account public key, this call returns the accounts status, balance and spendable amounts. GetAccountInformation(Address) Get account information. Declaration AlgoApiRequest.Sent<AccountInfo> GetAccountInformation(Address accountAddress) Parameters Type Name Description Address accountAddress An account public key (address) Returns Type Description AlgoApiRequest.Sent < AccountInfo > an AccountInfo if everything is okay Remarks Given a specific account public key, this call returns the accounts status, balance and spendable amounts. GetApplication(UInt64) Get application information. Declaration AlgoApiRequest.Sent<Application> GetApplication(ulong applicationId) Parameters Type Name Description System.UInt64 applicationId An application identifier (app index) Returns Type Description AlgoApiRequest.Sent < Application > Application information Remarks Given a application id, it returns application information including creator, approval and clear programs, global and local schemas, and global state. GetApplication(UInt64) Get application information. Declaration AlgoApiRequest.Sent<Application> GetApplication(ulong applicationId) Parameters Type Name Description System.UInt64 applicationId An application identifier (app index) Returns Type Description AlgoApiRequest.Sent < Application > Application information Remarks Given a application id, it returns application information including creator, approval and clear programs, global and local schemas, and global state. GetAsset(UInt64) Get asset information. Declaration AlgoApiRequest.Sent<Asset> GetAsset(ulong assetId) Parameters Type Name Description System.UInt64 assetId An asset identifier (asset index) Returns Type Description AlgoApiRequest.Sent < Asset > Asset information Remarks Given an asset id, it returns asset information including creator, name, total supply and special addresses. GetAsset(UInt64) Get asset information. Declaration AlgoApiRequest.Sent<Asset> GetAsset(ulong assetId) Parameters Type Name Description System.UInt64 assetId An asset identifier (asset index) Returns Type Description AlgoApiRequest.Sent < Asset > Asset information Remarks Given an asset id, it returns asset information including creator, name, total supply and special addresses. GetBlock(UInt64) Get the block for the given round. Declaration AlgoApiRequest.Sent<BlockResponse> GetBlock(ulong round) Parameters Type Name Description System.UInt64 round The round from which to fetch block information. Returns Type Description AlgoApiRequest.Sent < BlockResponse > Encoded block object BlockResponse GetBlock(UInt64) Get the block for the given round. Declaration AlgoApiRequest.Sent<BlockResponse> GetBlock(ulong round) Parameters Type Name Description System.UInt64 round The round from which to fetch block information. Returns Type Description AlgoApiRequest.Sent < BlockResponse > Encoded block object BlockResponse GetCurrentStatus() Gets the current node status. Declaration AlgoApiRequest.Sent<Status> GetCurrentStatus() Returns Type Description AlgoApiRequest.Sent < Status > Status GetCurrentStatus() Gets the current node status. Declaration AlgoApiRequest.Sent<Status> GetCurrentStatus() Returns Type Description AlgoApiRequest.Sent < Status > Status GetGenesisInformation() Get information about the genesis block. Declaration AlgoApiRequest.Sent<AlgoApiObject> GetGenesisInformation() Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > The entire genesis file in JSON GetGenesisInformation() Get information about the genesis block. Declaration AlgoApiRequest.Sent<AlgoApiObject> GetGenesisInformation() Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > The entire genesis file in JSON GetHealth() Check the health of the algod service. Declaration AlgoApiRequest.Sent GetHealth() Returns Type Description AlgoApiRequest.Sent if healthy GetHealth() Check the health of the algod service. Declaration AlgoApiRequest.Sent GetHealth() Returns Type Description AlgoApiRequest.Sent if healthy GetLedgerSupply() Get the current supply reported by the ledger. Declaration AlgoApiRequest.Sent<LedgerSupply> GetLedgerSupply() Returns Type Description AlgoApiRequest.Sent < LedgerSupply > Supply represents the current supply of MicroAlgos in the system. GetLedgerSupply() Get the current supply reported by the ledger. Declaration AlgoApiRequest.Sent<LedgerSupply> GetLedgerSupply() Returns Type Description AlgoApiRequest.Sent < LedgerSupply > Supply represents the current supply of MicroAlgos in the system. GetMerkleProof(UInt64, TransactionId) Get a Merkle proof for a transaction in a block. Declaration AlgoApiRequest.Sent<MerkleProof> GetMerkleProof(ulong round, TransactionId txid) Parameters Type Name Description System.UInt64 round The round in which the transaction appears. TransactionId txid The transaction ID for which to generate a proof. Returns Type Description AlgoApiRequest.Sent < MerkleProof > Proof of transaction in a block MerkleProof . GetMerkleProof(UInt64, TransactionId) Get a Merkle proof for a transaction in a block. Declaration AlgoApiRequest.Sent<MerkleProof> GetMerkleProof(ulong round, TransactionId txid) Parameters Type Name Description System.UInt64 round The round in which the transaction appears. TransactionId txid The transaction ID for which to generate a proof. Returns Type Description AlgoApiRequest.Sent < MerkleProof > Proof of transaction in a block MerkleProof . GetMetrics() Return metrics about algod functioning. Declaration AlgoApiRequest.Sent GetMetrics() Returns Type Description AlgoApiRequest.Sent text with #-comments and key:value lines. GetMetrics() Return metrics about algod functioning. Declaration AlgoApiRequest.Sent GetMetrics() Returns Type Description AlgoApiRequest.Sent text with #-comments and key:value lines. GetPendingTransaction(TransactionId) Get a specific pending transaction. Declaration AlgoApiRequest.Sent<PendingTransaction> GetPendingTransaction(TransactionId txId) Parameters Type Name Description TransactionId txId A transaction id Returns Type Description AlgoApiRequest.Sent < PendingTransaction > Given a transaction id of a recently submitted transaction, it returns information about it. There are several cases when this might succeed: transaction committed (committed round > 0) transaction still in the pool (committed round = 0, pool error = \"\") transaction removed from pool due to error (committed round = 0, pool error != \"\") Or the transaction may have happened sufficiently long ago that the node no longer remembers it, and this will return an error. GetPendingTransaction(TransactionId) Get a specific pending transaction. Declaration AlgoApiRequest.Sent<PendingTransaction> GetPendingTransaction(TransactionId txId) Parameters Type Name Description TransactionId txId A transaction id Returns Type Description AlgoApiRequest.Sent < PendingTransaction > Given a transaction id of a recently submitted transaction, it returns information about it. There are several cases when this might succeed: transaction committed (committed round > 0) transaction still in the pool (committed round = 0, pool error = \"\") transaction removed from pool due to error (committed round = 0, pool error != \"\") Or the transaction may have happened sufficiently long ago that the node no longer remembers it, and this will return an error. GetPendingTransactions(UInt64) Get a list of unconfirmed transactions currently in the transaction pool. Declaration AlgoApiRequest.Sent<PendingTransactions> GetPendingTransactions(ulong max = 0UL) Parameters Type Name Description System.UInt64 max Truncated number of transactions to display. If max=0, returns all pending txns. Returns Type Description AlgoApiRequest.Sent < PendingTransactions > A potentially truncated list of transactions currently in the node's transaction pool. You can compute whether or not the list is truncated if the number of elements in the top-transactions array is fewer than total-transactions. Remarks Get the list of pending transactions, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. GetPendingTransactions(UInt64) Get a list of unconfirmed transactions currently in the transaction pool. Declaration AlgoApiRequest.Sent<PendingTransactions> GetPendingTransactions(ulong max = 0UL) Parameters Type Name Description System.UInt64 max Truncated number of transactions to display. If max=0, returns all pending txns. Returns Type Description AlgoApiRequest.Sent < PendingTransactions > A potentially truncated list of transactions currently in the node's transaction pool. You can compute whether or not the list is truncated if the number of elements in the top-transactions array is fewer than total-transactions. Remarks Get the list of pending transactions, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. GetPendingTransactionsByAccount(Address, UInt64) Get a list of unconfirmed transactions currently in the transaction pool by address. Declaration AlgoApiRequest.Sent<PendingTransactions> GetPendingTransactionsByAccount(Address accountAddress, ulong max = 0UL) Parameters Type Name Description Address accountAddress An account public key (address) System.UInt64 max Truncated number of transactions to display. If max=0, returns all pending txns. Returns Type Description AlgoApiRequest.Sent < PendingTransactions > A potentially truncated list of transactions currently in the node's transaction pool. You can compute whether or not the list is truncated if the number of elements in the top-transactions array is fewer than total-transactions. Remarks Get the list of pending transactions by address, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. GetPendingTransactionsByAccount(Address, UInt64) Get a list of unconfirmed transactions currently in the transaction pool by address. Declaration AlgoApiRequest.Sent<PendingTransactions> GetPendingTransactionsByAccount(Address accountAddress, ulong max = 0UL) Parameters Type Name Description Address accountAddress An account public key (address) System.UInt64 max Truncated number of transactions to display. If max=0, returns all pending txns. Returns Type Description AlgoApiRequest.Sent < PendingTransactions > A potentially truncated list of transactions currently in the node's transaction pool. You can compute whether or not the list is truncated if the number of elements in the top-transactions array is fewer than total-transactions. Remarks Get the list of pending transactions by address, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. GetStatusAfterWaitingForRound(UInt64) Gets the node status after waiting for the given round. Declaration AlgoApiRequest.Sent<Status> GetStatusAfterWaitingForRound(ulong round) Parameters Type Name Description System.UInt64 round The round to wait until returning status Returns Type Description AlgoApiRequest.Sent < Status > Status Remarks Waits for a block to appear after round {round} and returns the node's status at the time. GetStatusAfterWaitingForRound(UInt64) Gets the node status after waiting for the given round. Declaration AlgoApiRequest.Sent<Status> GetStatusAfterWaitingForRound(ulong round) Parameters Type Name Description System.UInt64 round The round to wait until returning status Returns Type Description AlgoApiRequest.Sent < Status > Status Remarks Waits for a block to appear after round {round} and returns the node's status at the time. GetSuggestedParams() Get parameters for constructing a new transaction Declaration AlgoApiRequest.Sent<TransactionParams> GetSuggestedParams() Returns Type Description AlgoApiRequest.Sent < TransactionParams > TransactionParams contains the parameters that help a client construct a new transaction. GetSuggestedParams() Get parameters for constructing a new transaction Declaration AlgoApiRequest.Sent<TransactionParams> GetSuggestedParams() Returns Type Description AlgoApiRequest.Sent < TransactionParams > TransactionParams contains the parameters that help a client construct a new transaction. GetSwaggerSpec() Gets the current swagger spec. Declaration AlgoApiRequest.Sent<AlgoApiObject> GetSwaggerSpec() Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > The entire swagger spec in JSON. GetSwaggerSpec() Gets the current swagger spec. Declaration AlgoApiRequest.Sent<AlgoApiObject> GetSwaggerSpec() Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > The entire swagger spec in JSON. GetVersions() Retrieves the supported API versions, binary build versions, and genesis information. Declaration AlgoApiRequest.Sent<Version> GetVersions() Returns Type Description AlgoApiRequest.Sent < Version > Version is the response to 'GET /versions' GetVersions() Retrieves the supported API versions, binary build versions, and genesis information. Declaration AlgoApiRequest.Sent<Version> GetVersions() Returns Type Description AlgoApiRequest.Sent < Version > Version is the response to 'GET /versions' RegisterParticipationKeys(String, UInt64, Optional<UInt64>, Optional<Boolean>, Optional<Boolean>) Generate (or renew) and register participation keys on the node for a given account address. Declaration AlgoApiRequest.Sent<TransactionIdResponse> RegisterParticipationKeys(string accountAddress, ulong fee = 1000UL, Optional<ulong> keyDilution = default(Optional<ulong>), Optional<bool> noWait = default(Optional<bool>), Optional<bool> roundLastValid = default(Optional<bool>)) Parameters Type Name Description System.String accountAddress The account-id to update, or \"all\" to update all accounts. System.UInt64 fee The fee to use when submitting key registration transactions. Defaults to the suggested fee. Optional < System.UInt64 > keyDilution value to use for two-level participation key. Optional < System.Boolean > noWait Don't wait for transaction to commit before returning response. Optional < System.Boolean > roundLastValid The last round for which the generated participation keys will be valid. Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > Transaction ID of the submission. RegisterParticipationKeys(String, UInt64, Optional<UInt64>, Optional<Boolean>, Optional<Boolean>) Generate (or renew) and register participation keys on the node for a given account address. Declaration AlgoApiRequest.Sent<TransactionIdResponse> RegisterParticipationKeys(string accountAddress, ulong fee = 1000UL, Optional<ulong> keyDilution = default(Optional<ulong>), Optional<bool> noWait = default(Optional<bool>), Optional<bool> roundLastValid = default(Optional<bool>)) Parameters Type Name Description System.String accountAddress The account-id to update, or \"all\" to update all accounts. System.UInt64 fee The fee to use when submitting key registration transactions. Defaults to the suggested fee. Optional < System.UInt64 > keyDilution value to use for two-level participation key. Optional < System.Boolean > noWait Don't wait for transaction to commit before returning response. Optional < System.Boolean > roundLastValid The last round for which the generated participation keys will be valid. Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > Transaction ID of the submission. SendTransaction(Byte[]) Broadcasts a msgpack-encoded, signed transaction to the network. Declaration AlgoApiRequest.Sent<TransactionIdResponse> SendTransaction(byte[] txn) Parameters Type Name Description System.Byte [] txn The byte encoded signed transaction to broadcast to network Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > Transaction ID of the submission. SendTransaction(Byte[]) Broadcasts a msgpack-encoded, signed transaction to the network. Declaration AlgoApiRequest.Sent<TransactionIdResponse> SendTransaction(byte[] txn) Parameters Type Name Description System.Byte [] txn The byte encoded signed transaction to broadcast to network Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > Transaction ID of the submission. SendTransaction<T>(Signed<T>) Broadcasts a signed transaction to the network. Declaration AlgoApiRequest.Sent<TransactionIdResponse> SendTransaction<T>(Signed<T> txn) where T : struct, ITransaction, IEquatable<T> Parameters Type Name Description Signed <T> txn The byte encoded signed transaction to broadcast to network Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > Transaction ID of the submission. Type Parameters Name Description T The type of the transaction; must implement ITransaction SendTransaction<T>(Signed<T>) Broadcasts a signed transaction to the network. Declaration AlgoApiRequest.Sent<TransactionIdResponse> SendTransaction<T>(Signed<T> txn) where T : struct, ITransaction, IEquatable<T> Parameters Type Name Description Signed <T> txn The byte encoded signed transaction to broadcast to network Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > Transaction ID of the submission. Type Parameters Name Description T The type of the transaction; must implement ITransaction SendTransactions(SignedTransaction[]) Broadcasts a group of transactions to the network. Declaration AlgoApiRequest.Sent<TransactionIdResponse> SendTransactions(params SignedTransaction[] signedTxns) Parameters Type Name Description SignedTransaction [] signedTxns The signed transactions in the same order as they were when using GetGroupId(TransactionId[]) Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > Transaction ID of the submission. SendTransactions(SignedTransaction[]) Broadcasts a group of transactions to the network. Declaration AlgoApiRequest.Sent<TransactionIdResponse> SendTransactions(params SignedTransaction[] signedTxns) Parameters Type Name Description SignedTransaction [] signedTxns The signed transactions in the same order as they were when using GetGroupId(TransactionId[]) Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > Transaction ID of the submission. SendTransactions(Byte[][]) Broadcasts a group of msgpack-encoded, signed transactions to the network. Declaration AlgoApiRequest.Sent<TransactionIdResponse> SendTransactions(params byte[][] signedTxns) Parameters Type Name Description System.Byte [][] signedTxns The signed transactions in the same order as they were when using GetGroupId(TransactionId[]) Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > Transaction ID of the submission. SendTransactions(Byte[][]) Broadcasts a group of msgpack-encoded, signed transactions to the network. Declaration AlgoApiRequest.Sent<TransactionIdResponse> SendTransactions(params byte[][] signedTxns) Parameters Type Name Description System.Byte [][] signedTxns The signed transactions in the same order as they were when using GetGroupId(TransactionId[]) Returns Type Description AlgoApiRequest.Sent < TransactionIdResponse > Transaction ID of the submission. ShutDown(Optional<UInt64>) Special management endpoint to shutdown the node. Declaration AlgoApiRequest.Sent ShutDown(Optional<ulong> timeout = default(Optional<ulong>)) Parameters Type Name Description Optional < System.UInt64 > timeout shutdown timeout Returns Type Description AlgoApiRequest.Sent Success if request was successful Remarks Optionally provide a timeout parameter to indicate that the node should begin shutting down after a number of seconds. ShutDown(Optional<UInt64>) Special management endpoint to shutdown the node. Declaration AlgoApiRequest.Sent ShutDown(Optional<ulong> timeout = default(Optional<ulong>)) Parameters Type Name Description Optional < System.UInt64 > timeout shutdown timeout Returns Type Description AlgoApiRequest.Sent Success if request was successful Remarks Optionally provide a timeout parameter to indicate that the node should begin shutting down after a number of seconds. StartCatchup(String) Starts a catchpoint catchup. Declaration AlgoApiRequest.Sent<CatchupMessage> StartCatchup(string catchpoint) Parameters Type Name Description System.String catchpoint A catch point Returns Type Description AlgoApiRequest.Sent < CatchupMessage > Catchup start response string StartCatchup(String) Starts a catchpoint catchup. Declaration AlgoApiRequest.Sent<CatchupMessage> StartCatchup(string catchpoint) Parameters Type Name Description System.String catchpoint A catch point Returns Type Description AlgoApiRequest.Sent < CatchupMessage > Catchup start response string TealCompile(String) Compile TEAL source code to binary, produce its hash Declaration AlgoApiRequest.Sent<TealCompilationResult> TealCompile(string source) Parameters Type Name Description System.String source TEAL source code to be compiled Returns Type Description AlgoApiRequest.Sent < TealCompilationResult > Teal compile Result Remarks Given TEAL source code in plain text, return base64 encoded program bytes and base32 SHA512_256 hash of program bytes (Address style). This endpoint is only enabled when a node's configureation file sets EnableDeveloperAPI to true. TealCompile(String) Compile TEAL source code to binary, produce its hash Declaration AlgoApiRequest.Sent<TealCompilationResult> TealCompile(string source) Parameters Type Name Description System.String source TEAL source code to be compiled Returns Type Description AlgoApiRequest.Sent < TealCompilationResult > Teal compile Result Remarks Given TEAL source code in plain text, return base64 encoded program bytes and base32 SHA512_256 hash of program bytes (Address style). This endpoint is only enabled when a node's configureation file sets EnableDeveloperAPI to true. TealDryrun(Optional<DryrunRequest>) Provide debugging information for a transaction (or group). Declaration AlgoApiRequest.Sent<DryrunResults> TealDryrun(Optional<DryrunRequest> request = default(Optional<DryrunRequest>)) Parameters Type Name Description Optional < DryrunRequest > request Transaction (or group) and any accompanying state-simulation data. Returns Type Description AlgoApiRequest.Sent < DryrunResults > DryrunResponse contains per-txn debug information from a dryrun. Remarks Executes TEAL program(s) in context and returns debugging information about the execution. This endpoint is only enabled when a node's configureation file sets EnableDeveloperAPI to true. TealDryrun(Optional<DryrunRequest>) Provide debugging information for a transaction (or group). Declaration AlgoApiRequest.Sent<DryrunResults> TealDryrun(Optional<DryrunRequest> request = default(Optional<DryrunRequest>)) Parameters Type Name Description Optional < DryrunRequest > request Transaction (or group) and any accompanying state-simulation data. Returns Type Description AlgoApiRequest.Sent < DryrunResults > DryrunResponse contains per-txn debug information from a dryrun. Remarks Executes TEAL program(s) in context and returns debugging information about the execution. This endpoint is only enabled when a node's configureation file sets EnableDeveloperAPI to true."
  },
  "api/AlgoSdk.IAppCallTxn.html": {
    "href": "api/AlgoSdk.IAppCallTxn.html",
    "title": "Interface IAppCallTxn | Unity Algorand SDK",
    "keywords": "Interface IAppCallTxn Inherited Members ITransaction.Fee ITransaction.FirstValidRound ITransaction.GenesisHash ITransaction.LastValidRound ITransaction.Sender ITransaction.TransactionType ITransaction.GenesisId ITransaction.Group ITransaction.Lease ITransaction.Note ITransaction.RekeyTo ITransaction.CopyTo(Transaction) ITransaction.CopyFrom(Transaction) Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAppCallTxn : ITransaction Properties Accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. Declaration Address[] Accounts { get; set; } Property Value Type Description Address [] Accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. Declaration Address[] Accounts { get; set; } Property Value Type Description Address [] AppArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Declaration CompiledTeal AppArguments { get; set; } Property Value Type Description CompiledTeal AppArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Declaration CompiledTeal AppArguments { get; set; } Property Value Type Description CompiledTeal ApplicationId ID of the application being configured or empty if creating. Declaration ulong ApplicationId { get; set; } Property Value Type Description System.UInt64 ApplicationId ID of the application being configured or empty if creating. Declaration ulong ApplicationId { get; set; } Property Value Type Description System.UInt64 ApprovalProgram Logic executed for every application transaction, except when on-completion is set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Approval programs may reject the transaction. Declaration CompiledTeal ApprovalProgram { get; set; } Property Value Type Description CompiledTeal ApprovalProgram Logic executed for every application transaction, except when on-completion is set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Approval programs may reject the transaction. Declaration CompiledTeal ApprovalProgram { get; set; } Property Value Type Description CompiledTeal ClearStateProgram Logic executed for application transactions with on-completion set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Clear state programs cannot reject the transaction. Declaration CompiledTeal ClearStateProgram { get; set; } Property Value Type Description CompiledTeal ClearStateProgram Logic executed for application transactions with on-completion set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Clear state programs cannot reject the transaction. Declaration CompiledTeal ClearStateProgram { get; set; } Property Value Type Description CompiledTeal ExtraProgramPages Number of additional pages allocated to the application's approval and clear state programs. Each ExtraProgramPages is 2048 bytes. The sum of ApprovalProgram and ClearStateProgram may not exceed 2048*(1+ExtraProgramPages) bytes. Declaration ulong ExtraProgramPages { get; set; } Property Value Type Description System.UInt64 ExtraProgramPages Number of additional pages allocated to the application's approval and clear state programs. Each ExtraProgramPages is 2048 bytes. The sum of ApprovalProgram and ClearStateProgram may not exceed 2048*(1+ExtraProgramPages) bytes. Declaration ulong ExtraProgramPages { get; set; } Property Value Type Description System.UInt64 ForeignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. Declaration ulong[] ForeignApps { get; set; } Property Value Type Description System.UInt64 [] ForeignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. Declaration ulong[] ForeignApps { get; set; } Property Value Type Description System.UInt64 [] ForeignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Declaration ulong[] ForeignAssets { get; set; } Property Value Type Description System.UInt64 [] ForeignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Declaration ulong[] ForeignAssets { get; set; } Property Value Type Description System.UInt64 [] GlobalStateSchema Holds the maximum number of global state values defined within a StateSchema object. Declaration StateSchema GlobalStateSchema { get; set; } Property Value Type Description StateSchema GlobalStateSchema Holds the maximum number of global state values defined within a StateSchema object. Declaration StateSchema GlobalStateSchema { get; set; } Property Value Type Description StateSchema LocalStateSchema Holds the maximum number of local state values defined within a StateSchema object. Declaration StateSchema LocalStateSchema { get; set; } Property Value Type Description StateSchema LocalStateSchema Holds the maximum number of local state values defined within a StateSchema object. Declaration StateSchema LocalStateSchema { get; set; } Property Value Type Description StateSchema OnComplete Defines what additional actions occur with the transaction. Declaration OnCompletion OnComplete { get; set; } Property Value Type Description OnCompletion OnComplete Defines what additional actions occur with the transaction. Declaration OnCompletion OnComplete { get; set; } Property Value Type Description OnCompletion"
  },
  "api/AlgoSdk.IAssetConfigTxn.html": {
    "href": "api/AlgoSdk.IAssetConfigTxn.html",
    "title": "Interface IAssetConfigTxn | Unity Algorand SDK",
    "keywords": "Interface IAssetConfigTxn Inherited Members ITransaction.Fee ITransaction.FirstValidRound ITransaction.GenesisHash ITransaction.LastValidRound ITransaction.Sender ITransaction.TransactionType ITransaction.GenesisId ITransaction.Group ITransaction.Lease ITransaction.Note ITransaction.RekeyTo ITransaction.CopyTo(Transaction) ITransaction.CopyFrom(Transaction) Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAssetConfigTxn : ITransaction Properties AssetParams See AssetParams for all available fields. Declaration AssetParams AssetParams { get; set; } Property Value Type Description AssetParams AssetParams See AssetParams for all available fields. Declaration AssetParams AssetParams { get; set; } Property Value Type Description AssetParams ConfigAsset For re-configure or destroy transactions, this is the unique asset ID. On asset creation, the ID is set to zero. Declaration ulong ConfigAsset { get; set; } Property Value Type Description System.UInt64 ConfigAsset For re-configure or destroy transactions, this is the unique asset ID. On asset creation, the ID is set to zero. Declaration ulong ConfigAsset { get; set; } Property Value Type Description System.UInt64"
  },
  "api/AlgoSdk.IAssetFreezeTxn.html": {
    "href": "api/AlgoSdk.IAssetFreezeTxn.html",
    "title": "Interface IAssetFreezeTxn | Unity Algorand SDK",
    "keywords": "Interface IAssetFreezeTxn Inherited Members ITransaction.Fee ITransaction.FirstValidRound ITransaction.GenesisHash ITransaction.LastValidRound ITransaction.Sender ITransaction.TransactionType ITransaction.GenesisId ITransaction.Group ITransaction.Lease ITransaction.Note ITransaction.RekeyTo ITransaction.CopyTo(Transaction) ITransaction.CopyFrom(Transaction) Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAssetFreezeTxn : ITransaction Properties AssetFrozen True to freeze the asset. Declaration Optional<bool> AssetFrozen { get; set; } Property Value Type Description Optional < System.Boolean > AssetFrozen True to freeze the asset. Declaration Optional<bool> AssetFrozen { get; set; } Property Value Type Description Optional < System.Boolean > FreezeAccount The address of the account whose asset is being frozen or unfrozen. Declaration Address FreezeAccount { get; set; } Property Value Type Description Address FreezeAccount The address of the account whose asset is being frozen or unfrozen. Declaration Address FreezeAccount { get; set; } Property Value Type Description Address FreezeAsset The asset ID being frozen or unfrozen. Declaration ulong FreezeAsset { get; set; } Property Value Type Description System.UInt64 FreezeAsset The asset ID being frozen or unfrozen. Declaration ulong FreezeAsset { get; set; } Property Value Type Description System.UInt64"
  },
  "api/AlgoSdk.IAssetTransferTxn.html": {
    "href": "api/AlgoSdk.IAssetTransferTxn.html",
    "title": "Interface IAssetTransferTxn | Unity Algorand SDK",
    "keywords": "Interface IAssetTransferTxn Inherited Members ITransaction.Fee ITransaction.FirstValidRound ITransaction.GenesisHash ITransaction.LastValidRound ITransaction.Sender ITransaction.TransactionType ITransaction.GenesisId ITransaction.Group ITransaction.Lease ITransaction.Note ITransaction.RekeyTo ITransaction.CopyTo(Transaction) ITransaction.CopyFrom(Transaction) Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IAssetTransferTxn : ITransaction Properties AssetAmount The amount of the asset to be transferred. A zero amount transferred to self allocates that asset in the account's Asset map. Declaration ulong AssetAmount { get; set; } Property Value Type Description System.UInt64 AssetAmount The amount of the asset to be transferred. A zero amount transferred to self allocates that asset in the account's Asset map. Declaration ulong AssetAmount { get; set; } Property Value Type Description System.UInt64 AssetCloseTo Specify this field to remove the asset holding from the sender account and reduce the account's minimum balance (i.e. opt-out of the asset). Declaration Address AssetCloseTo { get; set; } Property Value Type Description Address AssetCloseTo Specify this field to remove the asset holding from the sender account and reduce the account's minimum balance (i.e. opt-out of the asset). Declaration Address AssetCloseTo { get; set; } Property Value Type Description Address AssetReceiver The recipient of the asset transfer. Declaration Address AssetReceiver { get; set; } Property Value Type Description Address AssetReceiver The recipient of the asset transfer. Declaration Address AssetReceiver { get; set; } Property Value Type Description Address AssetSender The sender of the transfer. The regular Sender field should be used and this one set to the zero value for regular transfers between accounts. If this value is nonzero, it indicates a clawback transaction where the sender is the asset's clawback address and the asset sender is the address from which the funds will be withdrawn. Declaration Address AssetSender { get; set; } Property Value Type Description Address AssetSender The sender of the transfer. The regular Sender field should be used and this one set to the zero value for regular transfers between accounts. If this value is nonzero, it indicates a clawback transaction where the sender is the asset's clawback address and the asset sender is the address from which the funds will be withdrawn. Declaration Address AssetSender { get; set; } Property Value Type Description Address CloseAmount The amount returned from the close out. Declaration ulong CloseAmount { get; set; } Property Value Type Description System.UInt64 CloseAmount The amount returned from the close out. Declaration ulong CloseAmount { get; set; } Property Value Type Description System.UInt64 XferAsset The unique ID of the asset to be transferred. Declaration ulong XferAsset { get; set; } Property Value Type Description System.UInt64 XferAsset The unique ID of the asset to be transferred. Declaration ulong XferAsset { get; set; } Property Value Type Description System.UInt64"
  },
  "api/AlgoSdk.IBlockRewards.html": {
    "href": "api/AlgoSdk.IBlockRewards.html",
    "title": "Interface IBlockRewards | Unity Algorand SDK",
    "keywords": "Interface IBlockRewards Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IBlockRewards Properties FeeSink [fees] accepts transaction fees, it can only spend to the incentive pool. Declaration Address FeeSink { get; set; } Property Value Type Description Address FeeSink [fees] accepts transaction fees, it can only spend to the incentive pool. Declaration Address FeeSink { get; set; } Property Value Type Description Address RewardsCalculationRound [rwcalr] number of leftover MicroAlgos after the distribution of rewards-rate MicroAlgos for every reward unit in the next round. Declaration ulong RewardsCalculationRound { get; set; } Property Value Type Description System.UInt64 RewardsCalculationRound [rwcalr] number of leftover MicroAlgos after the distribution of rewards-rate MicroAlgos for every reward unit in the next round. Declaration ulong RewardsCalculationRound { get; set; } Property Value Type Description System.UInt64 RewardsLevel [earn] How many rewards, in MicroAlgos, have been distributed to each RewardUnit of MicroAlgos since genesis. Declaration ulong RewardsLevel { get; set; } Property Value Type Description System.UInt64 RewardsLevel [earn] How many rewards, in MicroAlgos, have been distributed to each RewardUnit of MicroAlgos since genesis. Declaration ulong RewardsLevel { get; set; } Property Value Type Description System.UInt64 RewardsPool [rwd] accepts periodic injections from the fee-sink and continually redistributes them as rewards. Declaration Address RewardsPool { get; set; } Property Value Type Description Address RewardsPool [rwd] accepts periodic injections from the fee-sink and continually redistributes them as rewards. Declaration Address RewardsPool { get; set; } Property Value Type Description Address RewardsRate [rate] Number of new MicroAlgos added to the participation stake from rewards at the next round. Declaration ulong RewardsRate { get; set; } Property Value Type Description System.UInt64 RewardsRate [rate] Number of new MicroAlgos added to the participation stake from rewards at the next round. Declaration ulong RewardsRate { get; set; } Property Value Type Description System.UInt64 RewardsResidue [frac] Number of leftover MicroAlgos after the distribution of RewardsRate/rewardUnits MicroAlgos for every reward unit in the next round. Declaration ulong RewardsResidue { get; set; } Property Value Type Description System.UInt64 RewardsResidue [frac] Number of leftover MicroAlgos after the distribution of RewardsRate/rewardUnits MicroAlgos for every reward unit in the next round. Declaration ulong RewardsResidue { get; set; } Property Value Type Description System.UInt64"
  },
  "api/AlgoSdk.IBlockUpgradeState.html": {
    "href": "api/AlgoSdk.IBlockUpgradeState.html",
    "title": "Interface IBlockUpgradeState | Unity Algorand SDK",
    "keywords": "Interface IBlockUpgradeState Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IBlockUpgradeState Properties CurrentProtocol [proto] The current protocol version. Declaration FixedString128Bytes CurrentProtocol { get; set; } Property Value Type Description FixedString128Bytes CurrentProtocol [proto] The current protocol version. Declaration FixedString128Bytes CurrentProtocol { get; set; } Property Value Type Description FixedString128Bytes NextProtocol [nextproto] The next proposed protocol version. Declaration FixedString128Bytes NextProtocol { get; set; } Property Value Type Description FixedString128Bytes NextProtocol [nextproto] The next proposed protocol version. Declaration FixedString128Bytes NextProtocol { get; set; } Property Value Type Description FixedString128Bytes NextProtocolApprovals [nextyes] Number of blocks which approved the protocol upgrade. Declaration ulong NextProtocolApprovals { get; set; } Property Value Type Description System.UInt64 NextProtocolApprovals [nextyes] Number of blocks which approved the protocol upgrade. Declaration ulong NextProtocolApprovals { get; set; } Property Value Type Description System.UInt64 NextProtocolSwitchOn [nextswitch] Round on which the protocol upgrade will take effect. Declaration ulong NextProtocolSwitchOn { get; set; } Property Value Type Description System.UInt64 NextProtocolSwitchOn [nextswitch] Round on which the protocol upgrade will take effect. Declaration ulong NextProtocolSwitchOn { get; set; } Property Value Type Description System.UInt64 NextProtocolVoteBefore [nextbefore] Deadline round for this protocol upgrade (No votes will be consider after this round). Declaration ulong NextProtocolVoteBefore { get; set; } Property Value Type Description System.UInt64 NextProtocolVoteBefore [nextbefore] Deadline round for this protocol upgrade (No votes will be consider after this round). Declaration ulong NextProtocolVoteBefore { get; set; } Property Value Type Description System.UInt64"
  },
  "api/AlgoSdk.IBlockUpgradeVote.html": {
    "href": "api/AlgoSdk.IBlockUpgradeVote.html",
    "title": "Interface IBlockUpgradeVote | Unity Algorand SDK",
    "keywords": "Interface IBlockUpgradeVote Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IBlockUpgradeVote Properties UpgradeApprove [upgradeyes] Indicates a yes vote for the current proposal. Declaration Optional<bool> UpgradeApprove { get; set; } Property Value Type Description Optional < System.Boolean > UpgradeApprove [upgradeyes] Indicates a yes vote for the current proposal. Declaration Optional<bool> UpgradeApprove { get; set; } Property Value Type Description Optional < System.Boolean > UpgradeDelay [upgradedelay] Indicates the time between acceptance and execution. Declaration ulong UpgradeDelay { get; set; } Property Value Type Description System.UInt64 UpgradeDelay [upgradedelay] Indicates the time between acceptance and execution. Declaration ulong UpgradeDelay { get; set; } Property Value Type Description System.UInt64 UpgradePropose [upgradeprop] Indicates a proposed upgrade. Declaration Address UpgradePropose { get; set; } Property Value Type Description Address UpgradePropose [upgradeprop] Indicates a proposed upgrade. Declaration Address UpgradePropose { get; set; } Property Value Type Description Address"
  },
  "api/AlgoSdk.IIndexerClient.html": {
    "href": "api/AlgoSdk.IIndexerClient.html",
    "title": "Interface IIndexerClient | Unity Algorand SDK",
    "keywords": "Interface IIndexerClient Inherited Members IAlgoApiClient.Address IAlgoApiClient.Token IAlgoApiClient.TokenHeader IAlgoApiClient.Headers Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IIndexerClient : IAlgoApiClient Methods GetAccount(Address, Optional<Boolean>, Optional<UInt64>) Lookup account information. Declaration AlgoApiRequest.Sent<AccountResponse> GetAccount(Address accountAddress, Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>)) Parameters Type Name Description Address accountAddress account address Optional < System.Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < System.UInt64 > round Include results for the specified round. Returns Type Description AlgoApiRequest.Sent < AccountResponse > GetAccount(Address, Optional<Boolean>, Optional<UInt64>) Lookup account information. Declaration AlgoApiRequest.Sent<AccountResponse> GetAccount(Address accountAddress, Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>)) Parameters Type Name Description Address accountAddress account address Optional < System.Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < System.UInt64 > round Include results for the specified round. Returns Type Description AlgoApiRequest.Sent < AccountResponse > GetAccounts(Optional<UInt64>, Optional<UInt64>, Address, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>, Optional<UInt64>) Search for accounts. Declaration AlgoApiRequest.Sent<AccountsResponse> GetAccounts(Optional<ulong> applicationId = default(Optional<ulong>), Optional<ulong> assetId = default(Optional<ulong>), Address authAddr = default(Address), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), Optional<ulong> round = default(Optional<ulong>)) Parameters Type Name Description Optional < System.UInt64 > applicationId Application ID Optional < System.UInt64 > assetId Asset ID Address authAddr Include accounts configured to use this spending key. Optional < System.UInt64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < System.UInt64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < System.Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < System.UInt64 > limit Maximum number of results to return. Optional < FixedString128Bytes > next The next page of results. Use the next token provided by the previous results. Optional < System.UInt64 > round Include results for the specified round. For performance reasons, this parameter may be disabled on some configurations. Returns Type Description AlgoApiRequest.Sent < AccountsResponse > GetAccounts(Optional<UInt64>, Optional<UInt64>, Address, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>, Optional<UInt64>) Search for accounts. Declaration AlgoApiRequest.Sent<AccountsResponse> GetAccounts(Optional<ulong> applicationId = default(Optional<ulong>), Optional<ulong> assetId = default(Optional<ulong>), Address authAddr = default(Address), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), Optional<ulong> round = default(Optional<ulong>)) Parameters Type Name Description Optional < System.UInt64 > applicationId Application ID Optional < System.UInt64 > assetId Asset ID Address authAddr Include accounts configured to use this spending key. Optional < System.UInt64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < System.UInt64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < System.Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < System.UInt64 > limit Maximum number of results to return. Optional < FixedString128Bytes > next The next page of results. Use the next token provided by the previous results. Optional < System.UInt64 > round Include results for the specified round. For performance reasons, this parameter may be disabled on some configurations. Returns Type Description AlgoApiRequest.Sent < AccountsResponse > GetAccountTransactions(Address, DateTime, Optional<UInt64>, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId) Lookup account transactions. Declaration AlgoApiRequest.Sent<TransactionsResponse> GetAccountTransactions(Address accountAddress, DateTime afterTime = default(DateTime), Optional<ulong> assetId = default(Optional<ulong>), DateTime beforeTime = default(DateTime), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<ulong> limit = default(Optional<ulong>), Optional<ulong> maxRound = default(Optional<ulong>), Optional<ulong> minRound = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>), SignatureType sigType = null, TransactionType txType = null, TransactionId txid = default(TransactionId)) Parameters Type Name Description Address accountAddress account address System.DateTime afterTime Include results after the given time. Optional < System.UInt64 > assetId Asset ID System.DateTime beforeTime Include results before the given time. Optional < System.UInt64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < System.UInt64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < System.UInt64 > limit Maximum number of results to return. Optional < System.UInt64 > maxRound Include results at or before the specified max-round. Optional < System.UInt64 > minRound Include results at or after the specified min-round. Optional < FixedString128Bytes > next The next page of results. Use the next token provided by the previous results. System.String notePrefix Specifies a prefix which must be contained in the note field. Optional < System.Boolean > rekeyTo Include results which include the rekey-to field. Optional < System.UInt64 > round Include results for the specified round. SignatureType sigType Filter transactions using the given SignatureType TransactionType txType TransactionId txid Lookup the specific transaction by ID. Returns Type Description AlgoApiRequest.Sent < TransactionsResponse > GetAccountTransactions(Address, DateTime, Optional<UInt64>, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId) Lookup account transactions. Declaration AlgoApiRequest.Sent<TransactionsResponse> GetAccountTransactions(Address accountAddress, DateTime afterTime = default(DateTime), Optional<ulong> assetId = default(Optional<ulong>), DateTime beforeTime = default(DateTime), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<ulong> limit = default(Optional<ulong>), Optional<ulong> maxRound = default(Optional<ulong>), Optional<ulong> minRound = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>), SignatureType sigType = null, TransactionType txType = null, TransactionId txid = default(TransactionId)) Parameters Type Name Description Address accountAddress account address System.DateTime afterTime Include results after the given time. Optional < System.UInt64 > assetId Asset ID System.DateTime beforeTime Include results before the given time. Optional < System.UInt64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < System.UInt64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < System.UInt64 > limit Maximum number of results to return. Optional < System.UInt64 > maxRound Include results at or before the specified max-round. Optional < System.UInt64 > minRound Include results at or after the specified min-round. Optional < FixedString128Bytes > next The next page of results. Use the next token provided by the previous results. System.String notePrefix Specifies a prefix which must be contained in the note field. Optional < System.Boolean > rekeyTo Include results which include the rekey-to field. Optional < System.UInt64 > round Include results for the specified round. SignatureType sigType Filter transactions using the given SignatureType TransactionType txType TransactionId txid Lookup the specific transaction by ID. Returns Type Description AlgoApiRequest.Sent < TransactionsResponse > GetApplication(UInt64, Optional<Boolean>) Lookup application. Declaration AlgoApiRequest.Sent<ApplicationResponse> GetApplication(ulong applicationId, Optional<bool> includeAll = default(Optional<bool>)) Parameters Type Name Description System.UInt64 applicationId Optional < System.Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Returns Type Description AlgoApiRequest.Sent < ApplicationResponse > GetApplication(UInt64, Optional<Boolean>) Lookup application. Declaration AlgoApiRequest.Sent<ApplicationResponse> GetApplication(ulong applicationId, Optional<bool> includeAll = default(Optional<bool>)) Parameters Type Name Description System.UInt64 applicationId Optional < System.Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Returns Type Description AlgoApiRequest.Sent < ApplicationResponse > GetApplications(Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>) Search for applications Declaration AlgoApiRequest.Sent<ApplicationsResponse> GetApplications(Optional<ulong> applicationId = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>)) Parameters Type Name Description Optional < System.UInt64 > applicationId Application ID Optional < System.Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < System.UInt64 > limit Maximum number of results to return. Optional < FixedString128Bytes > next The next page of results. Use the next token provided by the previous results. Returns Type Description AlgoApiRequest.Sent < ApplicationsResponse > GetApplications(Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>) Search for applications Declaration AlgoApiRequest.Sent<ApplicationsResponse> GetApplications(Optional<ulong> applicationId = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>)) Parameters Type Name Description Optional < System.UInt64 > applicationId Application ID Optional < System.Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < System.UInt64 > limit Maximum number of results to return. Optional < FixedString128Bytes > next The next page of results. Use the next token provided by the previous results. Returns Type Description AlgoApiRequest.Sent < ApplicationsResponse > GetAsset(UInt64, Optional<Boolean>) Lookup asset information. Declaration AlgoApiRequest.Sent<AssetResponse> GetAsset(ulong assetId, Optional<bool> includeAll = default(Optional<bool>)) Parameters Type Name Description System.UInt64 assetId Optional < System.Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Returns Type Description AlgoApiRequest.Sent < AssetResponse > GetAsset(UInt64, Optional<Boolean>) Lookup asset information. Declaration AlgoApiRequest.Sent<AssetResponse> GetAsset(ulong assetId, Optional<bool> includeAll = default(Optional<bool>)) Parameters Type Name Description System.UInt64 assetId Optional < System.Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Returns Type Description AlgoApiRequest.Sent < AssetResponse > GetAssetBalances(UInt64, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>, Optional<UInt64>) Lookup the list of accounts who hold this asset Declaration AlgoApiRequest.Sent<BalancesResponse> GetAssetBalances(ulong assetId, Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), Optional<ulong> round = default(Optional<ulong>)) Parameters Type Name Description System.UInt64 assetId Optional < System.UInt64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < System.UInt64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < System.Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < System.UInt64 > limit Maximum number of results to return. Optional < FixedString128Bytes > next The next page of results. Use the next token provided by the previous results. Optional < System.UInt64 > round Include results for the specified round. Returns Type Description AlgoApiRequest.Sent < BalancesResponse > GetAssetBalances(UInt64, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>, Optional<UInt64>) Lookup the list of accounts who hold this asset Declaration AlgoApiRequest.Sent<BalancesResponse> GetAssetBalances(ulong assetId, Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), Optional<ulong> round = default(Optional<ulong>)) Parameters Type Name Description System.UInt64 assetId Optional < System.UInt64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < System.UInt64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < System.Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < System.UInt64 > limit Maximum number of results to return. Optional < FixedString128Bytes > next The next page of results. Use the next token provided by the previous results. Optional < System.UInt64 > round Include results for the specified round. Returns Type Description AlgoApiRequest.Sent < BalancesResponse > GetAssets(Optional<UInt64>, Address, Optional<Boolean>, Optional<UInt64>, String, Optional<FixedString128Bytes>, String) Search for assets. Declaration AlgoApiRequest.Sent<AssetsResponse> GetAssets(Optional<ulong> assetId = default(Optional<ulong>), Address creator = default(Address), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), string name = null, Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string unit = null) Parameters Type Name Description Optional < System.UInt64 > assetId Asset ID Address creator Filter just assets with the given creator address. Optional < System.Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < System.UInt64 > limit Maximum number of results to return. System.String name Filter just assets with the given name. Optional < FixedString128Bytes > next The next page of results. Use the next token provided by the previous results. System.String unit Filter just assets with the given unit. Returns Type Description AlgoApiRequest.Sent < AssetsResponse > GetAssets(Optional<UInt64>, Address, Optional<Boolean>, Optional<UInt64>, String, Optional<FixedString128Bytes>, String) Search for assets. Declaration AlgoApiRequest.Sent<AssetsResponse> GetAssets(Optional<ulong> assetId = default(Optional<ulong>), Address creator = default(Address), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), string name = null, Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string unit = null) Parameters Type Name Description Optional < System.UInt64 > assetId Asset ID Address creator Filter just assets with the given creator address. Optional < System.Boolean > includeAll Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates. Optional < System.UInt64 > limit Maximum number of results to return. System.String name Filter just assets with the given name. Optional < FixedString128Bytes > next The next page of results. Use the next token provided by the previous results. System.String unit Filter just assets with the given unit. Returns Type Description AlgoApiRequest.Sent < AssetsResponse > GetAssetTransactions(UInt64, Address, AddressRole, DateTime, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId) Lookup transactions for an asset. Declaration AlgoApiRequest.Sent<TransactionsResponse> GetAssetTransactions(ulong assetId, Address address = default(Address), AddressRole addressRole = null, DateTime afterTime = default(DateTime), DateTime beforeTime = default(DateTime), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> excludeCloseTo = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<ulong> maxRound = default(Optional<ulong>), Optional<ulong> minRound = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>), SignatureType sigType = null, TransactionType txType = null, TransactionId txid = default(TransactionId)) Parameters Type Name Description System.UInt64 assetId Address address Only include transactions with this address in one of the transaction fields. AddressRole addressRole Combine with the address parameter to define what type of address to search for. System.DateTime afterTime Include results after the given time. System.DateTime beforeTime Include results before the given time. Optional < System.UInt64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < System.UInt64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < System.Boolean > excludeCloseTo Combine with address and address-role parameters to define what type of address to search for. The close to fields are normally treated as a receiver, if you would like to exclude them set this parameter to true. Optional < System.UInt64 > limit Maximum number of results to return. Optional < System.UInt64 > maxRound Include results at or before the specified max-round. Optional < System.UInt64 > minRound Include results at or after the specified min-round. Optional < FixedString128Bytes > next The next page of results. Use the next token provided by the previous results. System.String notePrefix Specifies a prefix which must be contained in the note field. Optional < System.Boolean > rekeyTo Include results which include the rekey-to field. Optional < System.UInt64 > round Include results for the specified round. SignatureType sigType SigType filters just results using the specified type of signature. TransactionType txType TransactionId txid Lookup the specific transaction by ID. Returns Type Description AlgoApiRequest.Sent < TransactionsResponse > GetAssetTransactions(UInt64, Address, AddressRole, DateTime, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId) Lookup transactions for an asset. Declaration AlgoApiRequest.Sent<TransactionsResponse> GetAssetTransactions(ulong assetId, Address address = default(Address), AddressRole addressRole = null, DateTime afterTime = default(DateTime), DateTime beforeTime = default(DateTime), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> excludeCloseTo = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<ulong> maxRound = default(Optional<ulong>), Optional<ulong> minRound = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>), SignatureType sigType = null, TransactionType txType = null, TransactionId txid = default(TransactionId)) Parameters Type Name Description System.UInt64 assetId Address address Only include transactions with this address in one of the transaction fields. AddressRole addressRole Combine with the address parameter to define what type of address to search for. System.DateTime afterTime Include results after the given time. System.DateTime beforeTime Include results before the given time. Optional < System.UInt64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < System.UInt64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < System.Boolean > excludeCloseTo Combine with address and address-role parameters to define what type of address to search for. The close to fields are normally treated as a receiver, if you would like to exclude them set this parameter to true. Optional < System.UInt64 > limit Maximum number of results to return. Optional < System.UInt64 > maxRound Include results at or before the specified max-round. Optional < System.UInt64 > minRound Include results at or after the specified min-round. Optional < FixedString128Bytes > next The next page of results. Use the next token provided by the previous results. System.String notePrefix Specifies a prefix which must be contained in the note field. Optional < System.Boolean > rekeyTo Include results which include the rekey-to field. Optional < System.UInt64 > round Include results for the specified round. SignatureType sigType SigType filters just results using the specified type of signature. TransactionType txType TransactionId txid Lookup the specific transaction by ID. Returns Type Description AlgoApiRequest.Sent < TransactionsResponse > GetBlock(UInt64) Lookup block. Declaration AlgoApiRequest.Sent<Block> GetBlock(ulong round) Parameters Type Name Description System.UInt64 round Round number Returns Type Description AlgoApiRequest.Sent < Block > GetBlock(UInt64) Lookup block. Declaration AlgoApiRequest.Sent<Block> GetBlock(ulong round) Parameters Type Name Description System.UInt64 round Round number Returns Type Description AlgoApiRequest.Sent < Block > GetHealth() Get a health status of the indexer service. Declaration AlgoApiRequest.Sent<HealthCheck> GetHealth() Returns Type Description AlgoApiRequest.Sent < HealthCheck > a HealthCheck response detailing the status of the health GetHealth() Get a health status of the indexer service. Declaration AlgoApiRequest.Sent<HealthCheck> GetHealth() Returns Type Description AlgoApiRequest.Sent < HealthCheck > a HealthCheck response detailing the status of the health GetTransaction(TransactionId) Lookup a single transaction. Declaration AlgoApiRequest.Sent<TransactionResponse> GetTransaction(TransactionId txid) Parameters Type Name Description TransactionId txid Returns Type Description AlgoApiRequest.Sent < TransactionResponse > GetTransaction(TransactionId) Lookup a single transaction. Declaration AlgoApiRequest.Sent<TransactionResponse> GetTransaction(TransactionId txid) Parameters Type Name Description TransactionId txid Returns Type Description AlgoApiRequest.Sent < TransactionResponse > GetTransactions(Address, AddressRole, DateTime, Optional<UInt64>, Optional<UInt64>, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId) Search for transactions. Declaration AlgoApiRequest.Sent<TransactionsResponse> GetTransactions(Address address = default(Address), AddressRole addressRole = null, DateTime afterTime = default(DateTime), Optional<ulong> applicationId = default(Optional<ulong>), Optional<ulong> assetId = default(Optional<ulong>), DateTime beforeTime = default(DateTime), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> excludeCloseTo = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<ulong> maxRound = default(Optional<ulong>), Optional<ulong> minRound = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>), SignatureType sigType = null, TransactionType txType = null, TransactionId txid = default(TransactionId)) Parameters Type Name Description Address address Only include transactions with this address in one of the transaction fields. AddressRole addressRole Combine with the address parameter to define what type of address to search for. System.DateTime afterTime Include results after the given time. Optional < System.UInt64 > applicationId Application Id Optional < System.UInt64 > assetId Asset Id System.DateTime beforeTime Include results before the given time. Optional < System.UInt64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < System.UInt64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < System.Boolean > excludeCloseTo Combine with address and address-role parameters to define what type of address to search for. The close to fields are normally treated as a receiver, if you would like to exclude them set this parameter to true. Optional < System.UInt64 > limit Maximum number of results to return. Optional < System.UInt64 > maxRound Include results at or before the specified max-round. Optional < System.UInt64 > minRound Include results at or after the specified min-round. Optional < FixedString128Bytes > next The next page of results. Use the next token provided by the previous results. System.String notePrefix Specifies a prefix which must be contained in the note field. Optional < System.Boolean > rekeyTo Include results which include the rekey-to field. Optional < System.UInt64 > round Include results for the specified round. SignatureType sigType SigType filters just results using the specified type of signature. TransactionType txType TransactionId txid Lookup the specific transaction by ID. Returns Type Description AlgoApiRequest.Sent < TransactionsResponse > GetTransactions(Address, AddressRole, DateTime, Optional<UInt64>, Optional<UInt64>, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId) Search for transactions. Declaration AlgoApiRequest.Sent<TransactionsResponse> GetTransactions(Address address = default(Address), AddressRole addressRole = null, DateTime afterTime = default(DateTime), Optional<ulong> applicationId = default(Optional<ulong>), Optional<ulong> assetId = default(Optional<ulong>), DateTime beforeTime = default(DateTime), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> excludeCloseTo = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<ulong> maxRound = default(Optional<ulong>), Optional<ulong> minRound = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>), SignatureType sigType = null, TransactionType txType = null, TransactionId txid = default(TransactionId)) Parameters Type Name Description Address address Only include transactions with this address in one of the transaction fields. AddressRole addressRole Combine with the address parameter to define what type of address to search for. System.DateTime afterTime Include results after the given time. Optional < System.UInt64 > applicationId Application Id Optional < System.UInt64 > assetId Asset Id System.DateTime beforeTime Include results before the given time. Optional < System.UInt64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < System.UInt64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. Optional < System.Boolean > excludeCloseTo Combine with address and address-role parameters to define what type of address to search for. The close to fields are normally treated as a receiver, if you would like to exclude them set this parameter to true. Optional < System.UInt64 > limit Maximum number of results to return. Optional < System.UInt64 > maxRound Include results at or before the specified max-round. Optional < System.UInt64 > minRound Include results at or after the specified min-round. Optional < FixedString128Bytes > next The next page of results. Use the next token provided by the previous results. System.String notePrefix Specifies a prefix which must be contained in the note field. Optional < System.Boolean > rekeyTo Include results which include the rekey-to field. Optional < System.UInt64 > round Include results for the specified round. SignatureType sigType SigType filters just results using the specified type of signature. TransactionType txType TransactionId txid Lookup the specific transaction by ID. Returns Type Description AlgoApiRequest.Sent < TransactionsResponse >"
  },
  "api/AlgoSdk.IIndexerResponse.html": {
    "href": "api/AlgoSdk.IIndexerResponse.html",
    "title": "Interface IIndexerResponse | Unity Algorand SDK",
    "keywords": "Interface IIndexerResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IIndexerResponse Properties CurrentRound Round at which the results were computed. Declaration ulong CurrentRound { get; } Property Value Type Description System.UInt64 CurrentRound Round at which the results were computed. Declaration ulong CurrentRound { get; } Property Value Type Description System.UInt64"
  },
  "api/AlgoSdk.IKeyRegTxn.html": {
    "href": "api/AlgoSdk.IKeyRegTxn.html",
    "title": "Interface IKeyRegTxn | Unity Algorand SDK",
    "keywords": "Interface IKeyRegTxn Inherited Members ITransaction.Fee ITransaction.FirstValidRound ITransaction.GenesisHash ITransaction.LastValidRound ITransaction.Sender ITransaction.TransactionType ITransaction.GenesisId ITransaction.Group ITransaction.Lease ITransaction.Note ITransaction.RekeyTo ITransaction.CopyTo(Transaction) ITransaction.CopyFrom(Transaction) Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IKeyRegTxn : ITransaction Properties NonParticipation All new Algorand accounts are participating by default. This means that they earn rewards. Mark an account nonparticipating by setting this value to true and this account will no longer earn rewards. It is unlikely that you will ever need to do this and exists mainly for economic-related functions on the network. Declaration Optional<bool> NonParticipation { get; set; } Property Value Type Description Optional < System.Boolean > NonParticipation All new Algorand accounts are participating by default. This means that they earn rewards. Mark an account nonparticipating by setting this value to true and this account will no longer earn rewards. It is unlikely that you will ever need to do this and exists mainly for economic-related functions on the network. Declaration Optional<bool> NonParticipation { get; set; } Property Value Type Description Optional < System.Boolean > SelectionParticipationKey The VRF public key. Declaration VrfPubKey SelectionParticipationKey { get; set; } Property Value Type Description VrfPubKey SelectionParticipationKey The VRF public key. Declaration VrfPubKey SelectionParticipationKey { get; set; } Property Value Type Description VrfPubKey VoteFirst The first round that the participation key is valid. Not to be confused with the FirstValidRound of the keyreg transaction. Declaration ulong VoteFirst { get; set; } Property Value Type Description System.UInt64 VoteFirst The first round that the participation key is valid. Not to be confused with the FirstValidRound of the keyreg transaction. Declaration ulong VoteFirst { get; set; } Property Value Type Description System.UInt64 VoteKeyDilution This is the dilution for the 2-level participation key. Declaration ulong VoteKeyDilution { get; set; } Property Value Type Description System.UInt64 VoteKeyDilution This is the dilution for the 2-level participation key. Declaration ulong VoteKeyDilution { get; set; } Property Value Type Description System.UInt64 VoteLast The last round that the participation key is valid. Not to be confused with the LastValidRound of the keyreg transaction. Declaration ulong VoteLast { get; set; } Property Value Type Description System.UInt64 VoteLast The last round that the participation key is valid. Not to be confused with the LastValidRound of the keyreg transaction. Declaration ulong VoteLast { get; set; } Property Value Type Description System.UInt64 VoteParticipationKey The root participation public key. Declaration Ed25519.PublicKey VoteParticipationKey { get; set; } Property Value Type Description Ed25519.PublicKey VoteParticipationKey The root participation public key. Declaration Ed25519.PublicKey VoteParticipationKey { get; set; } Property Value Type Description Ed25519.PublicKey"
  },
  "api/AlgoSdk.IKmdClient.html": {
    "href": "api/AlgoSdk.IKmdClient.html",
    "title": "Interface IKmdClient | Unity Algorand SDK",
    "keywords": "Interface IKmdClient Inherited Members IAlgoApiClient.Address IAlgoApiClient.Token IAlgoApiClient.TokenHeader IAlgoApiClient.Headers Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IKmdClient : IAlgoApiClient Methods CreateWallet(PrivateKey, FixedString128Bytes, FixedString128Bytes, FixedString128Bytes) Create a wallet Declaration AlgoApiRequest.Sent<CreateWalletResponse> CreateWallet(PrivateKey masterDerivationKey, FixedString128Bytes walletDriverName, FixedString128Bytes walletName, FixedString128Bytes walletPassword) Parameters Type Name Description PrivateKey masterDerivationKey FixedString128Bytes walletDriverName FixedString128Bytes walletName FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < CreateWalletResponse > Remarks Create a new wallet (collection of keys) with the given parameters. CreateWallet(PrivateKey, FixedString128Bytes, FixedString128Bytes, FixedString128Bytes) Create a wallet Declaration AlgoApiRequest.Sent<CreateWalletResponse> CreateWallet(PrivateKey masterDerivationKey, FixedString128Bytes walletDriverName, FixedString128Bytes walletName, FixedString128Bytes walletPassword) Parameters Type Name Description PrivateKey masterDerivationKey FixedString128Bytes walletDriverName FixedString128Bytes walletName FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < CreateWalletResponse > Remarks Create a new wallet (collection of keys) with the given parameters. DeleteKey(Address, FixedString128Bytes, FixedString128Bytes) Deletes the key with the passed public key from the wallet. Declaration AlgoApiRequest.Sent DeleteKey(Address address, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address address public key of the key to delete FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent DeleteKey(Address, FixedString128Bytes, FixedString128Bytes) Deletes the key with the passed public key from the wallet. Declaration AlgoApiRequest.Sent DeleteKey(Address address, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address address public key of the key to delete FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent DeleteMultisig(Address, FixedString128Bytes, FixedString128Bytes) Deletes multisig preimage information for the passed address from the wallet. Declaration AlgoApiRequest.Sent DeleteMultisig(Address address, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address address public key for the key to delete multisig preimage information FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent DeleteMultisig(Address, FixedString128Bytes, FixedString128Bytes) Deletes multisig preimage information for the passed address from the wallet. Declaration AlgoApiRequest.Sent DeleteMultisig(Address address, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address address public key for the key to delete multisig preimage information FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent ExportKey(Address, FixedString128Bytes, FixedString128Bytes) Export the secret key associated with the passed public key. Declaration AlgoApiRequest.Sent<ExportKeyResponse> ExportKey(Address address, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address address public key of the key to export FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < ExportKeyResponse > ExportKey(Address, FixedString128Bytes, FixedString128Bytes) Export the secret key associated with the passed public key. Declaration AlgoApiRequest.Sent<ExportKeyResponse> ExportKey(Address address, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address address public key of the key to export FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < ExportKeyResponse > ExportMasterKey(FixedString128Bytes, FixedString128Bytes) Export the master derivation key from the wallet. This key is a master \"backup\" key for the underlying wallet. With it, you can regenerate all of the wallets that have been generated with this wallet's POST /v1/key endpoint. This key will not allow you to recover keys imported from other wallets, however. Declaration AlgoApiRequest.Sent<ExportMasterKeyResponse> ExportMasterKey(FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < ExportMasterKeyResponse > ExportMasterKey(FixedString128Bytes, FixedString128Bytes) Export the master derivation key from the wallet. This key is a master \"backup\" key for the underlying wallet. With it, you can regenerate all of the wallets that have been generated with this wallet's POST /v1/key endpoint. This key will not allow you to recover keys imported from other wallets, however. Declaration AlgoApiRequest.Sent<ExportMasterKeyResponse> ExportMasterKey(FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < ExportMasterKeyResponse > ExportMultisig(Address, FixedString128Bytes) Given a multisig address whose preimage this wallet stores, returns the information used to generate the address, including public keys, threshold, and multisig version. Declaration AlgoApiRequest.Sent<ExportMultisigResponse> ExportMultisig(Address address, FixedString128Bytes walletHandleToken) Parameters Type Name Description Address address public key for the key to export multisig preimage information FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < ExportMultisigResponse > ExportMultisig(Address, FixedString128Bytes) Given a multisig address whose preimage this wallet stores, returns the information used to generate the address, including public keys, threshold, and multisig version. Declaration AlgoApiRequest.Sent<ExportMultisigResponse> ExportMultisig(Address address, FixedString128Bytes walletHandleToken) Parameters Type Name Description Address address public key for the key to export multisig preimage information FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < ExportMultisigResponse > GenerateKey(FixedString128Bytes, Optional<Boolean>) Generates the next key in the deterministic key sequence (as determined by the master derivation key) and adds it to the wallet, returning the public key. Declaration AlgoApiRequest.Sent<GenerateKeyResponse> GenerateKey(FixedString128Bytes walletHandleToken, Optional<bool> displayMnemonic = default(Optional<bool>)) Parameters Type Name Description FixedString128Bytes walletHandleToken Optional < System.Boolean > displayMnemonic whether or not to display the mnemonic Returns Type Description AlgoApiRequest.Sent < GenerateKeyResponse > GenerateKey(FixedString128Bytes, Optional<Boolean>) Generates the next key in the deterministic key sequence (as determined by the master derivation key) and adds it to the wallet, returning the public key. Declaration AlgoApiRequest.Sent<GenerateKeyResponse> GenerateKey(FixedString128Bytes walletHandleToken, Optional<bool> displayMnemonic = default(Optional<bool>)) Parameters Type Name Description FixedString128Bytes walletHandleToken Optional < System.Boolean > displayMnemonic whether or not to display the mnemonic Returns Type Description AlgoApiRequest.Sent < GenerateKeyResponse > GetSwaggerSpec() Gets the current swagger spec. Declaration AlgoApiRequest.Sent<AlgoApiObject> GetSwaggerSpec() Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > The entire swagger spec in json. GetSwaggerSpec() Gets the current swagger spec. Declaration AlgoApiRequest.Sent<AlgoApiObject> GetSwaggerSpec() Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > The entire swagger spec in json. ImportKey(PrivateKey, FixedString128Bytes) Import an externally generated key into the wallet. Note that if you wish to back up the imported key, you must do so by backing up the entire wallet database, because imported keys were not derived from the wallet's master derivation key. Declaration AlgoApiRequest.Sent<ImportKeyResponse> ImportKey(PrivateKey privateKey, FixedString128Bytes walletPassword) Parameters Type Name Description PrivateKey privateKey key to import FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < ImportKeyResponse > ImportKey(PrivateKey, FixedString128Bytes) Import an externally generated key into the wallet. Note that if you wish to back up the imported key, you must do so by backing up the entire wallet database, because imported keys were not derived from the wallet's master derivation key. Declaration AlgoApiRequest.Sent<ImportKeyResponse> ImportKey(PrivateKey privateKey, FixedString128Bytes walletPassword) Parameters Type Name Description PrivateKey privateKey key to import FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < ImportKeyResponse > ImportMultisig(Ed25519.PublicKey[], Byte, FixedString128Bytes, Byte) Generates a multisig account from the passed public keys array and multisig metadata, and stores all of this in the wallet. Declaration AlgoApiRequest.Sent<ImportMultisigResponse> ImportMultisig(Ed25519.PublicKey[] publicKeys, byte threshold, FixedString128Bytes walletHandleToken, byte version = 1) Parameters Type Name Description Ed25519.PublicKey [] publicKeys Public keys for the accounts used to sign System.Byte threshold Number of valid signatures required FixedString128Bytes walletHandleToken System.Byte version Multisig version. This should always be set to 1. Returns Type Description AlgoApiRequest.Sent < ImportMultisigResponse > ImportMultisig(Ed25519.PublicKey[], Byte, FixedString128Bytes, Byte) Generates a multisig account from the passed public keys array and multisig metadata, and stores all of this in the wallet. Declaration AlgoApiRequest.Sent<ImportMultisigResponse> ImportMultisig(Ed25519.PublicKey[] publicKeys, byte threshold, FixedString128Bytes walletHandleToken, byte version = 1) Parameters Type Name Description Ed25519.PublicKey [] publicKeys Public keys for the accounts used to sign System.Byte threshold Number of valid signatures required FixedString128Bytes walletHandleToken System.Byte version Multisig version. This should always be set to 1. Returns Type Description AlgoApiRequest.Sent < ImportMultisigResponse > InitWalletHandleToken(FixedString128Bytes, FixedString128Bytes) Initialize a wallet handle token Declaration AlgoApiRequest.Sent<InitWalletHandleTokenResponse> InitWalletHandleToken(FixedString128Bytes walletId, FixedString128Bytes walletPassword) Parameters Type Name Description FixedString128Bytes walletId FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < InitWalletHandleTokenResponse > Remarks Unlock the wallet and return a wallet handle token that can be used for subsequent operations. These tokens expire periodically and must be renewed. You can use WalletInfo(FixedString128Bytes) to see how much time remains until expiration, and renew it with RenewWalletHandleToken(FixedString128Bytes) . When you're done, you can invalidate the token with ReleaseWalletHandleToken(FixedString128Bytes) . InitWalletHandleToken(FixedString128Bytes, FixedString128Bytes) Initialize a wallet handle token Declaration AlgoApiRequest.Sent<InitWalletHandleTokenResponse> InitWalletHandleToken(FixedString128Bytes walletId, FixedString128Bytes walletPassword) Parameters Type Name Description FixedString128Bytes walletId FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < InitWalletHandleTokenResponse > Remarks Unlock the wallet and return a wallet handle token that can be used for subsequent operations. These tokens expire periodically and must be renewed. You can use WalletInfo(FixedString128Bytes) to see how much time remains until expiration, and renew it with RenewWalletHandleToken(FixedString128Bytes) . When you're done, you can invalidate the token with ReleaseWalletHandleToken(FixedString128Bytes) . ListKeys(FixedString128Bytes) Lists all of the public keys in this wallet. All of them have a stored private key. Declaration AlgoApiRequest.Sent<ListKeysResponse> ListKeys(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < ListKeysResponse > ListKeys(FixedString128Bytes) Lists all of the public keys in this wallet. All of them have a stored private key. Declaration AlgoApiRequest.Sent<ListKeysResponse> ListKeys(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < ListKeysResponse > ListMultisig(FixedString128Bytes) Lists all of the multisig accounts whose preimages this wallet stores Declaration AlgoApiRequest.Sent<ListMultisigResponse> ListMultisig(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < ListMultisigResponse > ListMultisig(FixedString128Bytes) Lists all of the multisig accounts whose preimages this wallet stores Declaration AlgoApiRequest.Sent<ListMultisigResponse> ListMultisig(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < ListMultisigResponse > ListWallets() List Wallets Declaration AlgoApiRequest.Sent<ListWalletsResponse> ListWallets() Returns Type Description AlgoApiRequest.Sent < ListWalletsResponse > Remarks Lists all of the wallets that kmd is aware of. ListWallets() List Wallets Declaration AlgoApiRequest.Sent<ListWalletsResponse> ListWallets() Returns Type Description AlgoApiRequest.Sent < ListWalletsResponse > Remarks Lists all of the wallets that kmd is aware of. ReleaseWalletHandleToken(FixedString128Bytes) Release a wallet handle token Declaration AlgoApiRequest.Sent ReleaseWalletHandleToken(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent Remarks Invalidate the passed wallet handle token, making it invalid for use in subsequent requests. ReleaseWalletHandleToken(FixedString128Bytes) Release a wallet handle token Declaration AlgoApiRequest.Sent ReleaseWalletHandleToken(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent Remarks Invalidate the passed wallet handle token, making it invalid for use in subsequent requests. RenameWallet(FixedString128Bytes, FixedString128Bytes, FixedString128Bytes) Rename a wallet Declaration AlgoApiRequest.Sent<RenameWalletResponse> RenameWallet(FixedString128Bytes walletId, FixedString128Bytes walletName, FixedString128Bytes walletPassword) Parameters Type Name Description FixedString128Bytes walletId FixedString128Bytes walletName FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < RenameWalletResponse > Remarks Rename the underlying wallet to something else RenameWallet(FixedString128Bytes, FixedString128Bytes, FixedString128Bytes) Rename a wallet Declaration AlgoApiRequest.Sent<RenameWalletResponse> RenameWallet(FixedString128Bytes walletId, FixedString128Bytes walletName, FixedString128Bytes walletPassword) Parameters Type Name Description FixedString128Bytes walletId FixedString128Bytes walletName FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < RenameWalletResponse > Remarks Rename the underlying wallet to something else RenewWalletHandleToken(FixedString128Bytes) Renew a wallet handle token Declaration AlgoApiRequest.Sent<RenewWalletHandleTokenResponse> RenewWalletHandleToken(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < RenewWalletHandleTokenResponse > Remarks Renew a wallet handle token, increasing its expiration duration to its initial value RenewWalletHandleToken(FixedString128Bytes) Renew a wallet handle token Declaration AlgoApiRequest.Sent<RenewWalletHandleTokenResponse> RenewWalletHandleToken(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < RenewWalletHandleTokenResponse > Remarks Renew a wallet handle token, increasing its expiration duration to its initial value SignMultisig(Multisig, Ed25519.PublicKey, Byte[], FixedString128Bytes, FixedString128Bytes) Sign a multisig transaction Declaration AlgoApiRequest.Sent<SignMultisigResponse> SignMultisig(Multisig msig, Ed25519.PublicKey publicKey, byte[] transactionData, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Multisig msig Current multisig signature object Ed25519.PublicKey publicKey public key of the key to use to add a signature to the multisig System.Byte [] transactionData transaction serialized as msgpack FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignMultisigResponse > Remarks Start a multisig signature, or add a signature to a partially completed multisig signature object. SignMultisig(Multisig, Ed25519.PublicKey, Byte[], FixedString128Bytes, FixedString128Bytes) Sign a multisig transaction Declaration AlgoApiRequest.Sent<SignMultisigResponse> SignMultisig(Multisig msig, Ed25519.PublicKey publicKey, byte[] transactionData, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Multisig msig Current multisig signature object Ed25519.PublicKey publicKey public key of the key to use to add a signature to the multisig System.Byte [] transactionData transaction serialized as msgpack FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignMultisigResponse > Remarks Start a multisig signature, or add a signature to a partially completed multisig signature object. SignProgram(Address, Byte[], FixedString128Bytes, FixedString128Bytes) Sign program Declaration AlgoApiRequest.Sent<SignProgramResponse> SignProgram(Address account, byte[] programData, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address account Account to sign the program with System.Byte [] programData compiled program bytes FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignProgramResponse > Remarks Signs the passed program with a key from the wallet, determined by the account named in the request. SignProgram(Address, Byte[], FixedString128Bytes, FixedString128Bytes) Sign program Declaration AlgoApiRequest.Sent<SignProgramResponse> SignProgram(Address account, byte[] programData, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address account Account to sign the program with System.Byte [] programData compiled program bytes FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignProgramResponse > Remarks Signs the passed program with a key from the wallet, determined by the account named in the request. SignProgramMultisig(Address, Byte[], Multisig, Ed25519.PublicKey, FixedString128Bytes, FixedString128Bytes) Sign a program for a multisig account Declaration AlgoApiRequest.Sent<SignProgramMultisigResponse> SignProgramMultisig(Address msigAccount, byte[] programData, Multisig msig, Ed25519.PublicKey publicKey, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address msigAccount The address of the multisig account. See https://developer.algorand.org/docs/get-details/accounts/create/#multisignature System.Byte [] programData compiled program bytes Multisig msig current multisig signature object Ed25519.PublicKey publicKey public key of the key to use to add a signature to the multisig FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignProgramMultisigResponse > Remarks Start a multisig signature, or add a signature to a partially completed multisig signature object. SignProgramMultisig(Address, Byte[], Multisig, Ed25519.PublicKey, FixedString128Bytes, FixedString128Bytes) Sign a program for a multisig account Declaration AlgoApiRequest.Sent<SignProgramMultisigResponse> SignProgramMultisig(Address msigAccount, byte[] programData, Multisig msig, Ed25519.PublicKey publicKey, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address msigAccount The address of the multisig account. See https://developer.algorand.org/docs/get-details/accounts/create/#multisignature System.Byte [] programData compiled program bytes Multisig msig current multisig signature object Ed25519.PublicKey publicKey public key of the key to use to add a signature to the multisig FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignProgramMultisigResponse > Remarks Start a multisig signature, or add a signature to a partially completed multisig signature object. SignTransaction(Address, Byte[], FixedString128Bytes, FixedString128Bytes) Sign a transaction Declaration AlgoApiRequest.Sent<SignTransactionResponse> SignTransaction(Address account, byte[] transactionData, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address account public key of the key to sign the transaction System.Byte [] transactionData transaction serialized as msgpack FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignTransactionResponse > SignTransaction(Address, Byte[], FixedString128Bytes, FixedString128Bytes) Sign a transaction Declaration AlgoApiRequest.Sent<SignTransactionResponse> SignTransaction(Address account, byte[] transactionData, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address account public key of the key to sign the transaction System.Byte [] transactionData transaction serialized as msgpack FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignTransactionResponse > Versions() Retrieves the current version of the kmd service Declaration AlgoApiRequest.Sent<VersionsResponse> Versions() Returns Type Description AlgoApiRequest.Sent < VersionsResponse > Versions() Retrieves the current version of the kmd service Declaration AlgoApiRequest.Sent<VersionsResponse> Versions() Returns Type Description AlgoApiRequest.Sent < VersionsResponse > WalletInfo(FixedString128Bytes) Get wallet info Declaration AlgoApiRequest.Sent<WalletInfoResponse> WalletInfo(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < WalletInfoResponse > Remarks Returns information about the wallet associated with the passed wallet handle token. Additionally returns expiration information about the token itself. WalletInfo(FixedString128Bytes) Get wallet info Declaration AlgoApiRequest.Sent<WalletInfoResponse> WalletInfo(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < WalletInfoResponse > Remarks Returns information about the wallet associated with the passed wallet handle token. Additionally returns expiration information about the token itself."
  },
  "api/AlgoSdk.ImportKeyRequest.html": {
    "href": "api/AlgoSdk.ImportKeyRequest.html",
    "title": "Struct ImportKeyRequest | Unity Algorand SDK",
    "keywords": "Struct ImportKeyRequest Implements System.IEquatable < ImportKeyRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ImportKeyRequest : IEquatable<ImportKeyRequest> Fields PrivateKey Declaration public PrivateKey PrivateKey Field Value Type Description PrivateKey PrivateKey Declaration public PrivateKey PrivateKey Field Value Type Description PrivateKey WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(ImportKeyRequest) Declaration public bool Equals(ImportKeyRequest other) Parameters Type Name Description ImportKeyRequest other Returns Type Description System.Boolean Equals(ImportKeyRequest) Declaration public bool Equals(ImportKeyRequest other) Parameters Type Name Description ImportKeyRequest other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.ImportKeyResponse.html": {
    "href": "api/AlgoSdk.ImportKeyResponse.html",
    "title": "Struct ImportKeyResponse | Unity Algorand SDK",
    "keywords": "Struct ImportKeyResponse Implements System.IEquatable < ImportKeyResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ImportKeyResponse : IEquatable<ImportKeyResponse> Fields Address Declaration public Address Address Field Value Type Description Address Address Declaration public Address Address Field Value Type Description Address Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Message Declaration public string Message Field Value Type Description System.String Message Declaration public string Message Field Value Type Description System.String Methods Equals(ImportKeyResponse) Declaration public bool Equals(ImportKeyResponse other) Parameters Type Name Description ImportKeyResponse other Returns Type Description System.Boolean Equals(ImportKeyResponse) Declaration public bool Equals(ImportKeyResponse other) Parameters Type Name Description ImportKeyResponse other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.ImportMultisigRequest.html": {
    "href": "api/AlgoSdk.ImportMultisigRequest.html",
    "title": "Struct ImportMultisigRequest | Unity Algorand SDK",
    "keywords": "Struct ImportMultisigRequest Implements System.IEquatable < ImportMultisigRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ImportMultisigRequest : IEquatable<ImportMultisigRequest> Fields PublicKeys Declaration public Ed25519.PublicKey[] PublicKeys Field Value Type Description Ed25519.PublicKey [] PublicKeys Declaration public Ed25519.PublicKey[] PublicKeys Field Value Type Description Ed25519.PublicKey [] Threshold Declaration public byte Threshold Field Value Type Description System.Byte Threshold Declaration public byte Threshold Field Value Type Description System.Byte Version Declaration public byte Version Field Value Type Description System.Byte Version Declaration public byte Version Field Value Type Description System.Byte WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(ImportMultisigRequest) Declaration public bool Equals(ImportMultisigRequest other) Parameters Type Name Description ImportMultisigRequest other Returns Type Description System.Boolean Equals(ImportMultisigRequest) Declaration public bool Equals(ImportMultisigRequest other) Parameters Type Name Description ImportMultisigRequest other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.ImportMultisigResponse.html": {
    "href": "api/AlgoSdk.ImportMultisigResponse.html",
    "title": "Struct ImportMultisigResponse | Unity Algorand SDK",
    "keywords": "Struct ImportMultisigResponse Implements System.IEquatable < ImportMultisigResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ImportMultisigResponse : IEquatable<ImportMultisigResponse> Fields Address Declaration public Address Address Field Value Type Description Address Address Declaration public Address Address Field Value Type Description Address Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Message Declaration public string Message Field Value Type Description System.String Message Declaration public string Message Field Value Type Description System.String Methods Equals(ImportMultisigResponse) Declaration public bool Equals(ImportMultisigResponse other) Parameters Type Name Description ImportMultisigResponse other Returns Type Description System.Boolean Equals(ImportMultisigResponse) Declaration public bool Equals(ImportMultisigResponse other) Parameters Type Name Description ImportMultisigResponse other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.IndexerClient.html": {
    "href": "api/AlgoSdk.IndexerClient.html",
    "title": "Struct IndexerClient | Unity Algorand SDK",
    "keywords": "Struct IndexerClient A client for accessing the indexer service Implements IIndexerClient IAlgoApiClient Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct IndexerClient : IIndexerClient, IAlgoApiClient Remarks The indexer service is responsible for querying the blockchain Constructors IndexerClient(String, Header[]) Create a new indexer client Declaration public IndexerClient(string address, params Header[] headers) Parameters Type Name Description System.String address url of the service, including the port, e.g. \"http://localhost:4001\" Header [] headers extra headers to add to the requests. e.g. (\"x-api-key\", \"my-private-key\") IndexerClient(String, Header[]) Create a new indexer client Declaration public IndexerClient(string address, params Header[] headers) Parameters Type Name Description System.String address url of the service, including the port, e.g. \"http://localhost:4001\" Header [] headers extra headers to add to the requests. e.g. (\"x-api-key\", \"my-private-key\") IndexerClient(String, String, Header[]) Create a new indexer client Declaration public IndexerClient(string address, string token = null, params Header[] headers) Parameters Type Name Description System.String address url of the service, including the port, e.g. \"http://localhost:4001\" System.String token token used in authenticating to the service Header [] headers extra headers to add to the requests. e.g. (\"x-api-key\", \"my-private-key\") IndexerClient(String, String, Header[]) Create a new indexer client Declaration public IndexerClient(string address, string token = null, params Header[] headers) Parameters Type Name Description System.String address url of the service, including the port, e.g. \"http://localhost:4001\" System.String token token used in authenticating to the service Header [] headers extra headers to add to the requests. e.g. (\"x-api-key\", \"my-private-key\") Properties Address Declaration public readonly string Address { get; } Property Value Type Description System.String Address Declaration public readonly string Address { get; } Property Value Type Description System.String Headers Declaration public readonly Header[] Headers { get; } Property Value Type Description Header [] Headers Declaration public readonly Header[] Headers { get; } Property Value Type Description Header [] Token Declaration public readonly string Token { get; } Property Value Type Description System.String Token Declaration public readonly string Token { get; } Property Value Type Description System.String TokenHeader Declaration public readonly string TokenHeader { get; } Property Value Type Description System.String TokenHeader Declaration public readonly string TokenHeader { get; } Property Value Type Description System.String Methods GetAccount(Address, Optional<Boolean>, Optional<UInt64>) Declaration public AlgoApiRequest.Sent<AccountResponse> GetAccount(Address accountAddress, Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>)) Parameters Type Name Description Address accountAddress Optional < System.Boolean > includeAll Optional < System.UInt64 > round Returns Type Description AlgoApiRequest.Sent < AccountResponse > GetAccount(Address, Optional<Boolean>, Optional<UInt64>) Declaration public AlgoApiRequest.Sent<AccountResponse> GetAccount(Address accountAddress, Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>)) Parameters Type Name Description Address accountAddress Optional < System.Boolean > includeAll Optional < System.UInt64 > round Returns Type Description AlgoApiRequest.Sent < AccountResponse > GetAccounts(Optional<UInt64>, Optional<UInt64>, Address, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>, Optional<UInt64>) Declaration public AlgoApiRequest.Sent<AccountsResponse> GetAccounts(Optional<ulong> applicationId = default(Optional<ulong>), Optional<ulong> assetId = default(Optional<ulong>), Address authAddr = default(Address), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), Optional<ulong> round = default(Optional<ulong>)) Parameters Type Name Description Optional < System.UInt64 > applicationId Optional < System.UInt64 > assetId Address authAddr Optional < System.UInt64 > currencyGreaterThan Optional < System.UInt64 > currencyLessThan Optional < System.Boolean > includeAll Optional < System.UInt64 > limit Optional < FixedString128Bytes > next Optional < System.UInt64 > round Returns Type Description AlgoApiRequest.Sent < AccountsResponse > GetAccounts(Optional<UInt64>, Optional<UInt64>, Address, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>, Optional<UInt64>) Declaration public AlgoApiRequest.Sent<AccountsResponse> GetAccounts(Optional<ulong> applicationId = default(Optional<ulong>), Optional<ulong> assetId = default(Optional<ulong>), Address authAddr = default(Address), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), Optional<ulong> round = default(Optional<ulong>)) Parameters Type Name Description Optional < System.UInt64 > applicationId Optional < System.UInt64 > assetId Address authAddr Optional < System.UInt64 > currencyGreaterThan Optional < System.UInt64 > currencyLessThan Optional < System.Boolean > includeAll Optional < System.UInt64 > limit Optional < FixedString128Bytes > next Optional < System.UInt64 > round Returns Type Description AlgoApiRequest.Sent < AccountsResponse > GetAccountTransactions(Address, DateTime, Optional<UInt64>, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId) Declaration public AlgoApiRequest.Sent<TransactionsResponse> GetAccountTransactions(Address accountAddress, DateTime afterTime = default(DateTime), Optional<ulong> assetId = default(Optional<ulong>), DateTime beforeTime = default(DateTime), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<ulong> limit = default(Optional<ulong>), Optional<ulong> maxRound = default(Optional<ulong>), Optional<ulong> minRound = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>), SignatureType sigType = null, TransactionType txType = null, TransactionId txid = default(TransactionId)) Parameters Type Name Description Address accountAddress System.DateTime afterTime Optional < System.UInt64 > assetId System.DateTime beforeTime Optional < System.UInt64 > currencyGreaterThan Optional < System.UInt64 > currencyLessThan Optional < System.UInt64 > limit Optional < System.UInt64 > maxRound Optional < System.UInt64 > minRound Optional < FixedString128Bytes > next System.String notePrefix Optional < System.Boolean > rekeyTo Optional < System.UInt64 > round SignatureType sigType TransactionType txType TransactionId txid Returns Type Description AlgoApiRequest.Sent < TransactionsResponse > GetAccountTransactions(Address, DateTime, Optional<UInt64>, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId) Declaration public AlgoApiRequest.Sent<TransactionsResponse> GetAccountTransactions(Address accountAddress, DateTime afterTime = default(DateTime), Optional<ulong> assetId = default(Optional<ulong>), DateTime beforeTime = default(DateTime), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<ulong> limit = default(Optional<ulong>), Optional<ulong> maxRound = default(Optional<ulong>), Optional<ulong> minRound = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>), SignatureType sigType = null, TransactionType txType = null, TransactionId txid = default(TransactionId)) Parameters Type Name Description Address accountAddress System.DateTime afterTime Optional < System.UInt64 > assetId System.DateTime beforeTime Optional < System.UInt64 > currencyGreaterThan Optional < System.UInt64 > currencyLessThan Optional < System.UInt64 > limit Optional < System.UInt64 > maxRound Optional < System.UInt64 > minRound Optional < FixedString128Bytes > next System.String notePrefix Optional < System.Boolean > rekeyTo Optional < System.UInt64 > round SignatureType sigType TransactionType txType TransactionId txid Returns Type Description AlgoApiRequest.Sent < TransactionsResponse > GetApplication(UInt64, Optional<Boolean>) Declaration public AlgoApiRequest.Sent<ApplicationResponse> GetApplication(ulong applicationId, Optional<bool> includeAll = default(Optional<bool>)) Parameters Type Name Description System.UInt64 applicationId Optional < System.Boolean > includeAll Returns Type Description AlgoApiRequest.Sent < ApplicationResponse > GetApplication(UInt64, Optional<Boolean>) Declaration public AlgoApiRequest.Sent<ApplicationResponse> GetApplication(ulong applicationId, Optional<bool> includeAll = default(Optional<bool>)) Parameters Type Name Description System.UInt64 applicationId Optional < System.Boolean > includeAll Returns Type Description AlgoApiRequest.Sent < ApplicationResponse > GetApplications(Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>) Declaration public AlgoApiRequest.Sent<ApplicationsResponse> GetApplications(Optional<ulong> applicationId = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>)) Parameters Type Name Description Optional < System.UInt64 > applicationId Optional < System.Boolean > includeAll Optional < System.UInt64 > limit Optional < FixedString128Bytes > next Returns Type Description AlgoApiRequest.Sent < ApplicationsResponse > GetApplications(Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>) Declaration public AlgoApiRequest.Sent<ApplicationsResponse> GetApplications(Optional<ulong> applicationId = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>)) Parameters Type Name Description Optional < System.UInt64 > applicationId Optional < System.Boolean > includeAll Optional < System.UInt64 > limit Optional < FixedString128Bytes > next Returns Type Description AlgoApiRequest.Sent < ApplicationsResponse > GetAsset(UInt64, Optional<Boolean>) Declaration public AlgoApiRequest.Sent<AssetResponse> GetAsset(ulong assetId, Optional<bool> includeAll = default(Optional<bool>)) Parameters Type Name Description System.UInt64 assetId Optional < System.Boolean > includeAll Returns Type Description AlgoApiRequest.Sent < AssetResponse > GetAsset(UInt64, Optional<Boolean>) Declaration public AlgoApiRequest.Sent<AssetResponse> GetAsset(ulong assetId, Optional<bool> includeAll = default(Optional<bool>)) Parameters Type Name Description System.UInt64 assetId Optional < System.Boolean > includeAll Returns Type Description AlgoApiRequest.Sent < AssetResponse > GetAssetBalances(UInt64, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>, Optional<UInt64>) Declaration public AlgoApiRequest.Sent<BalancesResponse> GetAssetBalances(ulong assetId, Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), Optional<ulong> round = default(Optional<ulong>)) Parameters Type Name Description System.UInt64 assetId Optional < System.UInt64 > currencyGreaterThan Optional < System.UInt64 > currencyLessThan Optional < System.Boolean > includeAll Optional < System.UInt64 > limit Optional < FixedString128Bytes > next Optional < System.UInt64 > round Returns Type Description AlgoApiRequest.Sent < BalancesResponse > GetAssetBalances(UInt64, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<FixedString128Bytes>, Optional<UInt64>) Declaration public AlgoApiRequest.Sent<BalancesResponse> GetAssetBalances(ulong assetId, Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), Optional<ulong> round = default(Optional<ulong>)) Parameters Type Name Description System.UInt64 assetId Optional < System.UInt64 > currencyGreaterThan Optional < System.UInt64 > currencyLessThan Optional < System.Boolean > includeAll Optional < System.UInt64 > limit Optional < FixedString128Bytes > next Optional < System.UInt64 > round Returns Type Description AlgoApiRequest.Sent < BalancesResponse > GetAssets(Optional<UInt64>, Address, Optional<Boolean>, Optional<UInt64>, String, Optional<FixedString128Bytes>, String) Declaration public AlgoApiRequest.Sent<AssetsResponse> GetAssets(Optional<ulong> assetId = default(Optional<ulong>), Address creator = default(Address), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), string name = null, Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string unit = null) Parameters Type Name Description Optional < System.UInt64 > assetId Address creator Optional < System.Boolean > includeAll Optional < System.UInt64 > limit System.String name Optional < FixedString128Bytes > next System.String unit Returns Type Description AlgoApiRequest.Sent < AssetsResponse > GetAssets(Optional<UInt64>, Address, Optional<Boolean>, Optional<UInt64>, String, Optional<FixedString128Bytes>, String) Declaration public AlgoApiRequest.Sent<AssetsResponse> GetAssets(Optional<ulong> assetId = default(Optional<ulong>), Address creator = default(Address), Optional<bool> includeAll = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), string name = null, Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string unit = null) Parameters Type Name Description Optional < System.UInt64 > assetId Address creator Optional < System.Boolean > includeAll Optional < System.UInt64 > limit System.String name Optional < FixedString128Bytes > next System.String unit Returns Type Description AlgoApiRequest.Sent < AssetsResponse > GetAssetTransactions(UInt64, Address, AddressRole, DateTime, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId) Declaration public AlgoApiRequest.Sent<TransactionsResponse> GetAssetTransactions(ulong assetId, Address address = default(Address), AddressRole addressRole = null, DateTime afterTime = default(DateTime), DateTime beforeTime = default(DateTime), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> excludeCloseTo = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<ulong> maxRound = default(Optional<ulong>), Optional<ulong> minRound = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>), SignatureType sigType = null, TransactionType txType = null, TransactionId txid = default(TransactionId)) Parameters Type Name Description System.UInt64 assetId Address address AddressRole addressRole System.DateTime afterTime System.DateTime beforeTime Optional < System.UInt64 > currencyGreaterThan Optional < System.UInt64 > currencyLessThan Optional < System.Boolean > excludeCloseTo Optional < System.UInt64 > limit Optional < System.UInt64 > maxRound Optional < System.UInt64 > minRound Optional < FixedString128Bytes > next System.String notePrefix Optional < System.Boolean > rekeyTo Optional < System.UInt64 > round SignatureType sigType TransactionType txType TransactionId txid Returns Type Description AlgoApiRequest.Sent < TransactionsResponse > GetAssetTransactions(UInt64, Address, AddressRole, DateTime, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId) Declaration public AlgoApiRequest.Sent<TransactionsResponse> GetAssetTransactions(ulong assetId, Address address = default(Address), AddressRole addressRole = null, DateTime afterTime = default(DateTime), DateTime beforeTime = default(DateTime), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> excludeCloseTo = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<ulong> maxRound = default(Optional<ulong>), Optional<ulong> minRound = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>), SignatureType sigType = null, TransactionType txType = null, TransactionId txid = default(TransactionId)) Parameters Type Name Description System.UInt64 assetId Address address AddressRole addressRole System.DateTime afterTime System.DateTime beforeTime Optional < System.UInt64 > currencyGreaterThan Optional < System.UInt64 > currencyLessThan Optional < System.Boolean > excludeCloseTo Optional < System.UInt64 > limit Optional < System.UInt64 > maxRound Optional < System.UInt64 > minRound Optional < FixedString128Bytes > next System.String notePrefix Optional < System.Boolean > rekeyTo Optional < System.UInt64 > round SignatureType sigType TransactionType txType TransactionId txid Returns Type Description AlgoApiRequest.Sent < TransactionsResponse > GetBlock(UInt64) Declaration public AlgoApiRequest.Sent<Block> GetBlock(ulong round) Parameters Type Name Description System.UInt64 round Returns Type Description AlgoApiRequest.Sent < Block > GetBlock(UInt64) Declaration public AlgoApiRequest.Sent<Block> GetBlock(ulong round) Parameters Type Name Description System.UInt64 round Returns Type Description AlgoApiRequest.Sent < Block > GetHealth() Declaration public AlgoApiRequest.Sent<HealthCheck> GetHealth() Returns Type Description AlgoApiRequest.Sent < HealthCheck > GetHealth() Declaration public AlgoApiRequest.Sent<HealthCheck> GetHealth() Returns Type Description AlgoApiRequest.Sent < HealthCheck > GetTransaction(TransactionId) Declaration public AlgoApiRequest.Sent<TransactionResponse> GetTransaction(TransactionId txid) Parameters Type Name Description TransactionId txid Returns Type Description AlgoApiRequest.Sent < TransactionResponse > GetTransaction(TransactionId) Declaration public AlgoApiRequest.Sent<TransactionResponse> GetTransaction(TransactionId txid) Parameters Type Name Description TransactionId txid Returns Type Description AlgoApiRequest.Sent < TransactionResponse > GetTransactions(Address, AddressRole, DateTime, Optional<UInt64>, Optional<UInt64>, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId) Declaration public AlgoApiRequest.Sent<TransactionsResponse> GetTransactions(Address address = default(Address), AddressRole addressRole = null, DateTime afterTime = default(DateTime), Optional<ulong> applicationId = default(Optional<ulong>), Optional<ulong> assetId = default(Optional<ulong>), DateTime beforeTime = default(DateTime), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> excludeCloseTo = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<ulong> maxRound = default(Optional<ulong>), Optional<ulong> minRound = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>), SignatureType sigType = null, TransactionType txType = null, TransactionId txid = default(TransactionId)) Parameters Type Name Description Address address AddressRole addressRole System.DateTime afterTime Optional < System.UInt64 > applicationId Optional < System.UInt64 > assetId System.DateTime beforeTime Optional < System.UInt64 > currencyGreaterThan Optional < System.UInt64 > currencyLessThan Optional < System.Boolean > excludeCloseTo Optional < System.UInt64 > limit Optional < System.UInt64 > maxRound Optional < System.UInt64 > minRound Optional < FixedString128Bytes > next System.String notePrefix Optional < System.Boolean > rekeyTo Optional < System.UInt64 > round SignatureType sigType TransactionType txType TransactionId txid Returns Type Description AlgoApiRequest.Sent < TransactionsResponse > GetTransactions(Address, AddressRole, DateTime, Optional<UInt64>, Optional<UInt64>, DateTime, Optional<UInt64>, Optional<UInt64>, Optional<Boolean>, Optional<UInt64>, Optional<UInt64>, Optional<UInt64>, Optional<FixedString128Bytes>, String, Optional<Boolean>, Optional<UInt64>, SignatureType, TransactionType, TransactionId) Declaration public AlgoApiRequest.Sent<TransactionsResponse> GetTransactions(Address address = default(Address), AddressRole addressRole = null, DateTime afterTime = default(DateTime), Optional<ulong> applicationId = default(Optional<ulong>), Optional<ulong> assetId = default(Optional<ulong>), DateTime beforeTime = default(DateTime), Optional<ulong> currencyGreaterThan = default(Optional<ulong>), Optional<ulong> currencyLessThan = default(Optional<ulong>), Optional<bool> excludeCloseTo = default(Optional<bool>), Optional<ulong> limit = default(Optional<ulong>), Optional<ulong> maxRound = default(Optional<ulong>), Optional<ulong> minRound = default(Optional<ulong>), Optional<FixedString128Bytes> next = default(Optional<FixedString128Bytes>), string notePrefix = null, Optional<bool> rekeyTo = default(Optional<bool>), Optional<ulong> round = default(Optional<ulong>), SignatureType sigType = null, TransactionType txType = null, TransactionId txid = default(TransactionId)) Parameters Type Name Description Address address AddressRole addressRole System.DateTime afterTime Optional < System.UInt64 > applicationId Optional < System.UInt64 > assetId System.DateTime beforeTime Optional < System.UInt64 > currencyGreaterThan Optional < System.UInt64 > currencyLessThan Optional < System.Boolean > excludeCloseTo Optional < System.UInt64 > limit Optional < System.UInt64 > maxRound Optional < System.UInt64 > minRound Optional < FixedString128Bytes > next System.String notePrefix Optional < System.Boolean > rekeyTo Optional < System.UInt64 > round SignatureType sigType TransactionType txType TransactionId txid Returns Type Description AlgoApiRequest.Sent < TransactionsResponse > Implements IIndexerClient IAlgoApiClient"
  },
  "api/AlgoSdk.InitWalletHandleTokenRequest.html": {
    "href": "api/AlgoSdk.InitWalletHandleTokenRequest.html",
    "title": "Struct InitWalletHandleTokenRequest | Unity Algorand SDK",
    "keywords": "Struct InitWalletHandleTokenRequest Implements System.IEquatable < InitWalletHandleTokenRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct InitWalletHandleTokenRequest : IEquatable<InitWalletHandleTokenRequest> Fields WalletId Declaration public FixedString128Bytes WalletId Field Value Type Description FixedString128Bytes WalletId Declaration public FixedString128Bytes WalletId Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(InitWalletHandleTokenRequest) Declaration public bool Equals(InitWalletHandleTokenRequest other) Parameters Type Name Description InitWalletHandleTokenRequest other Returns Type Description System.Boolean Equals(InitWalletHandleTokenRequest) Declaration public bool Equals(InitWalletHandleTokenRequest other) Parameters Type Name Description InitWalletHandleTokenRequest other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.InitWalletHandleTokenResponse.html": {
    "href": "api/AlgoSdk.InitWalletHandleTokenResponse.html",
    "title": "Struct InitWalletHandleTokenResponse | Unity Algorand SDK",
    "keywords": "Struct InitWalletHandleTokenResponse Implements System.IEquatable < InitWalletHandleTokenResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct InitWalletHandleTokenResponse : IEquatable<InitWalletHandleTokenResponse> Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Message Declaration public string Message Field Value Type Description System.String Message Declaration public string Message Field Value Type Description System.String WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(InitWalletHandleTokenResponse) Declaration public bool Equals(InitWalletHandleTokenResponse other) Parameters Type Name Description InitWalletHandleTokenResponse other Returns Type Description System.Boolean Equals(InitWalletHandleTokenResponse) Declaration public bool Equals(InitWalletHandleTokenResponse other) Parameters Type Name Description InitWalletHandleTokenResponse other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.IntEnumComparer-1.html": {
    "href": "api/AlgoSdk.IntEnumComparer-1.html",
    "title": "Struct IntEnumComparer<T> | Unity Algorand SDK",
    "keywords": "Struct IntEnumComparer<T> Implements IEqualityComparer <T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct IntEnumComparer<T> where T : Enum Type Parameters Name Description T Fields Instance Declaration public static readonly IntEnumComparer<T> Instance Field Value Type Description IntEnumComparer <T> Instance Declaration public static readonly IntEnumComparer<T> Instance Field Value Type Description IntEnumComparer <T> Methods Equals(T, T) Declaration public static bool Equals(T x, T y) Parameters Type Name Description T x T y Returns Type Description System.Boolean Equals(T, T) Declaration public static bool Equals(T x, T y) Parameters Type Name Description T x T y Returns Type Description System.Boolean GetHashCode(T) Declaration public static int GetHashCode(T obj) Parameters Type Name Description T obj Returns Type Description System.Int32 GetHashCode(T) Declaration public static int GetHashCode(T obj) Parameters Type Name Description T obj Returns Type Description System.Int32 Implements IEqualityComparer<>"
  },
  "api/AlgoSdk.IntEnumFormatter-1.html": {
    "href": "api/AlgoSdk.IntEnumFormatter-1.html",
    "title": "Class IntEnumFormatter<T> | Unity Algorand SDK",
    "keywords": "Class IntEnumFormatter<T> Inheritance System.Object IntEnumFormatter<T> Implements IAlgoApiFormatter <T> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public sealed class IntEnumFormatter<T> : IAlgoApiFormatter<T> where T : Enum Type Parameters Name Description T Methods Deserialize(ref JsonReader) Declaration public T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref JsonReader) Declaration public T Deserialize(ref JsonReader reader) Parameters Type Name Description JsonReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration public T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Deserialize(ref MessagePackReader) Declaration public T Deserialize(ref MessagePackReader reader) Parameters Type Name Description MessagePackReader reader Returns Type Description T Serialize(ref JsonWriter, T) Declaration public void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref JsonWriter, T) Declaration public void Serialize(ref JsonWriter writer, T value) Parameters Type Name Description JsonWriter writer T value Serialize(ref MessagePackWriter, T) Declaration public void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value Serialize(ref MessagePackWriter, T) Declaration public void Serialize(ref MessagePackWriter writer, T value) Parameters Type Name Description MessagePackWriter writer T value Implements IAlgoApiFormatter<T>"
  },
  "api/AlgoSdk.IPaginatedResponse.html": {
    "href": "api/AlgoSdk.IPaginatedResponse.html",
    "title": "Interface IPaginatedResponse | Unity Algorand SDK",
    "keywords": "Interface IPaginatedResponse Inherited Members IIndexerResponse.CurrentRound Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IPaginatedResponse : IIndexerResponse Properties NextToken Used for pagination, when making another request provide this token with the next parameter. Declaration FixedString128Bytes NextToken { get; } Property Value Type Description FixedString128Bytes NextToken Used for pagination, when making another request provide this token with the next parameter. Declaration FixedString128Bytes NextToken { get; } Property Value Type Description FixedString128Bytes"
  },
  "api/AlgoSdk.IPaymentTxn.html": {
    "href": "api/AlgoSdk.IPaymentTxn.html",
    "title": "Interface IPaymentTxn | Unity Algorand SDK",
    "keywords": "Interface IPaymentTxn Inherited Members ITransaction.Fee ITransaction.FirstValidRound ITransaction.GenesisHash ITransaction.LastValidRound ITransaction.Sender ITransaction.TransactionType ITransaction.GenesisId ITransaction.Group ITransaction.Lease ITransaction.Note ITransaction.RekeyTo ITransaction.CopyTo(Transaction) ITransaction.CopyFrom(Transaction) Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface IPaymentTxn : ITransaction Properties Amount The total amount to be sent in microAlgos. Declaration ulong Amount { get; set; } Property Value Type Description System.UInt64 Amount The total amount to be sent in microAlgos. Declaration ulong Amount { get; set; } Property Value Type Description System.UInt64 CloseRemainderTo When set, it indicates that the transaction is requesting that the Sender account should be closed, and all remaining funds, after the Fee and Amount are paid, be transferred to this address. Declaration Address CloseRemainderTo { get; set; } Property Value Type Description Address CloseRemainderTo When set, it indicates that the transaction is requesting that the Sender account should be closed, and all remaining funds, after the Fee and Amount are paid, be transferred to this address. Declaration Address CloseRemainderTo { get; set; } Property Value Type Description Address Receiver The address of the account that receives the Amount . Declaration Address Receiver { get; set; } Property Value Type Description Address Receiver The address of the account that receives the Amount . Declaration Address Receiver { get; set; } Property Value Type Description Address"
  },
  "api/AlgoSdk.ISignature.html": {
    "href": "api/AlgoSdk.ISignature.html",
    "title": "Interface ISignature | Unity Algorand SDK",
    "keywords": "Interface ISignature Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface ISignature"
  },
  "api/AlgoSdk.ITransaction.html": {
    "href": "api/AlgoSdk.ITransaction.html",
    "title": "Interface ITransaction | Unity Algorand SDK",
    "keywords": "Interface ITransaction Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public interface ITransaction Properties Fee Paid by the sender to the FeeSink to prevent denial-of-service. The minimum fee on Algorand is currently 1000 microAlgos. Declaration ulong Fee { get; } Property Value Type Description System.UInt64 Fee Paid by the sender to the FeeSink to prevent denial-of-service. The minimum fee on Algorand is currently 1000 microAlgos. Declaration ulong Fee { get; } Property Value Type Description System.UInt64 FirstValidRound The first round for when the transaction is valid. If the transaction is sent prior to this round it will be rejected by the network. Declaration ulong FirstValidRound { get; } Property Value Type Description System.UInt64 FirstValidRound The first round for when the transaction is valid. If the transaction is sent prior to this round it will be rejected by the network. Declaration ulong FirstValidRound { get; } Property Value Type Description System.UInt64 GenesisHash The hash of the genesis block of the network for which the transaction is valid. Declaration GenesisHash GenesisHash { get; } Property Value Type Description GenesisHash GenesisHash The hash of the genesis block of the network for which the transaction is valid. Declaration GenesisHash GenesisHash { get; } Property Value Type Description GenesisHash GenesisId The human-readable string that identifies the network for the transaction. The genesis ID is found in the genesis block. Declaration FixedString32Bytes GenesisId { get; } Property Value Type Description FixedString32Bytes GenesisId The human-readable string that identifies the network for the transaction. The genesis ID is found in the genesis block. Declaration FixedString32Bytes GenesisId { get; } Property Value Type Description FixedString32Bytes Group The group specifies that the transaction is part of a group and, if so, specifies the hash of the transaction group. See GetGroupId(Transaction[]) . Declaration Sha512_256_Hash Group { get; } Property Value Type Description Sha512_256_Hash Group The group specifies that the transaction is part of a group and, if so, specifies the hash of the transaction group. See GetGroupId(Transaction[]) . Declaration Sha512_256_Hash Group { get; } Property Value Type Description Sha512_256_Hash LastValidRound The ending round for which the transaction is valid. After this round, the transaction will be rejected by the network. Declaration ulong LastValidRound { get; } Property Value Type Description System.UInt64 LastValidRound The ending round for which the transaction is valid. After this round, the transaction will be rejected by the network. Declaration ulong LastValidRound { get; } Property Value Type Description System.UInt64 Lease A lease enforces mutual exclusion of transactions. If this field is nonzero, then once the transaction is confirmed, it acquires the lease identified by the (Sender, Lease) pair of the transaction until the LastValid round passes. While this transaction possesses the lease, no other transaction specifying this lease can be confirmed. A lease is often used in the context of Algorand Smart Contracts to prevent replay attacks. Declaration Sha512_256_Hash Lease { get; } Property Value Type Description Sha512_256_Hash Lease A lease enforces mutual exclusion of transactions. If this field is nonzero, then once the transaction is confirmed, it acquires the lease identified by the (Sender, Lease) pair of the transaction until the LastValid round passes. While this transaction possesses the lease, no other transaction specifying this lease can be confirmed. A lease is often used in the context of Algorand Smart Contracts to prevent replay attacks. Declaration Sha512_256_Hash Lease { get; } Property Value Type Description Sha512_256_Hash Note Any data up to 1000 bytes. Declaration byte[] Note { get; } Property Value Type Description System.Byte [] Note Any data up to 1000 bytes. Declaration byte[] Note { get; } Property Value Type Description System.Byte [] RekeyTo Specifies the authorized address. This address will be used to authorize all future transactions. Declaration Address RekeyTo { get; } Property Value Type Description Address RekeyTo Specifies the authorized address. This address will be used to authorize all future transactions. Declaration Address RekeyTo { get; } Property Value Type Description Address Sender The address of the account that pays the fee and amount. Declaration Address Sender { get; } Property Value Type Description Address Sender The address of the account that pays the fee and amount. Declaration Address Sender { get; } Property Value Type Description Address TransactionType Specifies the type of transaction. This value is automatically generated using any of the developer tools. Declaration TransactionType TransactionType { get; } Property Value Type Description TransactionType TransactionType Specifies the type of transaction. This value is automatically generated using any of the developer tools. Declaration TransactionType TransactionType { get; } Property Value Type Description TransactionType Methods CopyFrom(Transaction) Copy relevant fields to this transaction. Declaration void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction A raw transaction with all possible transaction fields. CopyFrom(Transaction) Copy relevant fields to this transaction. Declaration void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction A raw transaction with all possible transaction fields. CopyTo(ref Transaction) Copy this transactions fields to a Transaction which contains all possible transaction fields. Declaration void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction A raw transaction with all possible transaction fields. CopyTo(ref Transaction) Copy this transactions fields to a Transaction which contains all possible transaction fields. Declaration void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction A raw transaction with all possible transaction fields."
  },
  "api/AlgoSdk.Json.html": {
    "href": "api/AlgoSdk.Json.html",
    "title": "Namespace AlgoSdk.Json | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.Json Classes JsonReadErrorExtensions JsonReadException JsonTokenExtensions UnicodeExtensions Structs JsonReader JsonWriter Enums JsonReadError JsonReadError JsonToken JsonToken"
  },
  "api/AlgoSdk.Json.JsonReader.html": {
    "href": "api/AlgoSdk.Json.JsonReader.html",
    "title": "Struct JsonReader | Unity Algorand SDK",
    "keywords": "Struct JsonReader Namespace : AlgoSdk.Json Assembly : cs.temp.dll.dll Syntax public ref struct JsonReader Constructors JsonReader(NativeText) Declaration public JsonReader(NativeText text) Parameters Type Name Description NativeText text JsonReader(NativeText) Declaration public JsonReader(NativeText text) Parameters Type Name Description NativeText text Properties Char Declaration public readonly char Char { get; } Property Value Type Description System.Char Char Declaration public readonly char Char { get; } Property Value Type Description System.Char Position Declaration public int Position { get; set; } Property Value Type Description System.Int32 Position Declaration public int Position { get; set; } Property Value Type Description System.Int32 Methods Peek() Declaration public JsonToken Peek() Returns Type Description JsonToken Peek() Declaration public JsonToken Peek() Returns Type Description JsonToken Read() Declaration public JsonToken Read() Returns Type Description JsonToken Read() Declaration public JsonToken Read() Returns Type Description JsonToken ReadBool(out Boolean) Declaration public JsonReadError ReadBool(out bool value) Parameters Type Name Description System.Boolean value Returns Type Description JsonReadError ReadBool(out Boolean) Declaration public JsonReadError ReadBool(out bool value) Parameters Type Name Description System.Boolean value Returns Type Description JsonReadError ReadNull() Declaration public JsonReadError ReadNull() Returns Type Description JsonReadError ReadNull() Declaration public JsonReadError ReadNull() Returns Type Description JsonReadError ReadNumber(out Byte) Declaration public JsonReadError ReadNumber(out byte value) Parameters Type Name Description System.Byte value Returns Type Description JsonReadError ReadNumber(out Byte) Declaration public JsonReadError ReadNumber(out byte value) Parameters Type Name Description System.Byte value Returns Type Description JsonReadError ReadNumber(out Int16) Declaration public JsonReadError ReadNumber(out short value) Parameters Type Name Description System.Int16 value Returns Type Description JsonReadError ReadNumber(out Int16) Declaration public JsonReadError ReadNumber(out short value) Parameters Type Name Description System.Int16 value Returns Type Description JsonReadError ReadNumber(out Int32) Declaration public JsonReadError ReadNumber(out int value) Parameters Type Name Description System.Int32 value Returns Type Description JsonReadError ReadNumber(out Int32) Declaration public JsonReadError ReadNumber(out int value) Parameters Type Name Description System.Int32 value Returns Type Description JsonReadError ReadNumber(out Int64) Declaration public JsonReadError ReadNumber(out long value) Parameters Type Name Description System.Int64 value Returns Type Description JsonReadError ReadNumber(out Int64) Declaration public JsonReadError ReadNumber(out long value) Parameters Type Name Description System.Int64 value Returns Type Description JsonReadError ReadNumber(out SByte) Declaration public JsonReadError ReadNumber(out sbyte value) Parameters Type Name Description System.SByte value Returns Type Description JsonReadError ReadNumber(out SByte) Declaration public JsonReadError ReadNumber(out sbyte value) Parameters Type Name Description System.SByte value Returns Type Description JsonReadError ReadNumber(out Single) Declaration public JsonReadError ReadNumber(out float value) Parameters Type Name Description System.Single value Returns Type Description JsonReadError ReadNumber(out Single) Declaration public JsonReadError ReadNumber(out float value) Parameters Type Name Description System.Single value Returns Type Description JsonReadError ReadNumber(out UInt16) Declaration public JsonReadError ReadNumber(out ushort value) Parameters Type Name Description System.UInt16 value Returns Type Description JsonReadError ReadNumber(out UInt16) Declaration public JsonReadError ReadNumber(out ushort value) Parameters Type Name Description System.UInt16 value Returns Type Description JsonReadError ReadNumber(out UInt32) Declaration public JsonReadError ReadNumber(out uint value) Parameters Type Name Description System.UInt32 value Returns Type Description JsonReadError ReadNumber(out UInt32) Declaration public JsonReadError ReadNumber(out uint value) Parameters Type Name Description System.UInt32 value Returns Type Description JsonReadError ReadNumber(out UInt64) Declaration public JsonReadError ReadNumber(out ulong value) Parameters Type Name Description System.UInt64 value Returns Type Description JsonReadError ReadNumber(out UInt64) Declaration public JsonReadError ReadNumber(out ulong value) Parameters Type Name Description System.UInt64 value Returns Type Description JsonReadError ReadRaw<T>(ref T) Declaration public JsonReadError ReadRaw<T>(ref T value) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T value Returns Type Description JsonReadError Type Parameters Name Description T ReadRaw<T>(ref T) Declaration public JsonReadError ReadRaw<T>(ref T value) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T value Returns Type Description JsonReadError Type Parameters Name Description T ReadString(out String) Declaration public JsonReadError ReadString(out string value) Parameters Type Name Description System.String value Returns Type Description JsonReadError ReadString(out String) Declaration public JsonReadError ReadString(out string value) Parameters Type Name Description System.String value Returns Type Description JsonReadError ReadString<T>(ref T) Declaration public JsonReadError ReadString<T>(ref T value) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T value Returns Type Description JsonReadError Type Parameters Name Description T ReadString<T>(ref T) Declaration public JsonReadError ReadString<T>(ref T value) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T value Returns Type Description JsonReadError Type Parameters Name Description T Skip() Declaration public JsonReadError Skip() Returns Type Description JsonReadError Skip() Declaration public JsonReadError Skip() Returns Type Description JsonReadError SkipBool() Declaration public JsonReadError SkipBool() Returns Type Description JsonReadError SkipBool() Declaration public JsonReadError SkipBool() Returns Type Description JsonReadError SkipNull() Declaration public JsonReadError SkipNull() Returns Type Description JsonReadError SkipNull() Declaration public JsonReadError SkipNull() Returns Type Description JsonReadError SkipString() Declaration public JsonReadError SkipString() Returns Type Description JsonReadError SkipString() Declaration public JsonReadError SkipString() Returns Type Description JsonReadError TryRead(JsonToken) Declaration public bool TryRead(JsonToken token) Parameters Type Name Description JsonToken token Returns Type Description System.Boolean TryRead(JsonToken) Declaration public bool TryRead(JsonToken token) Parameters Type Name Description JsonToken token Returns Type Description System.Boolean TryReadNull() Declaration public bool TryReadNull() Returns Type Description System.Boolean TryReadNull() Declaration public bool TryReadNull() Returns Type Description System.Boolean"
  },
  "api/AlgoSdk.Json.JsonReadError.html": {
    "href": "api/AlgoSdk.Json.JsonReadError.html",
    "title": "Enum JsonReadError | Unity Algorand SDK",
    "keywords": "Enum JsonReadError Namespace : AlgoSdk.Json Assembly : cs.temp.dll.dll Syntax public enum JsonReadError Fields Name Description IncorrectFormat IncorrectType None Overflow ParseError UnknownError"
  },
  "api/AlgoSdk.Json.JsonReadError_1.html": {
    "href": "api/AlgoSdk.Json.JsonReadError_1.html",
    "title": "Enum JsonReadError | Unity Algorand SDK",
    "keywords": "Enum JsonReadError Namespace : AlgoSdk.Json Assembly : cs.temp.dll.dll Syntax public enum JsonReadError Fields Name Description IncorrectFormat IncorrectType None Overflow ParseError UnknownError"
  },
  "api/AlgoSdk.Json.JsonReadErrorExtensions.html": {
    "href": "api/AlgoSdk.Json.JsonReadErrorExtensions.html",
    "title": "Class JsonReadErrorExtensions | Unity Algorand SDK",
    "keywords": "Class JsonReadErrorExtensions Inheritance System.Object JsonReadErrorExtensions Namespace : AlgoSdk.Json Assembly : cs.temp.dll.dll Syntax public static class JsonReadErrorExtensions Methods ThrowIfError(JsonReadError, Char, Int32) Declaration public static void ThrowIfError(this JsonReadError err, char c, int pos) Parameters Type Name Description JsonReadError err System.Char c System.Int32 pos ThrowIfError(JsonReadError, Char, Int32) Declaration public static void ThrowIfError(this JsonReadError err, char c, int pos) Parameters Type Name Description JsonReadError err System.Char c System.Int32 pos"
  },
  "api/AlgoSdk.Json.JsonReadException.html": {
    "href": "api/AlgoSdk.Json.JsonReadException.html",
    "title": "Class JsonReadException | Unity Algorand SDK",
    "keywords": "Class JsonReadException Inheritance System.Object System.Exception JsonReadException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState Namespace : AlgoSdk.Json Assembly : cs.temp.dll.dll Syntax public class JsonReadException : Exception, ISerializable, _Exception Constructors JsonReadException(JsonReadError, Char, Int32) Declaration public JsonReadException(JsonReadError error, char c, int pos) Parameters Type Name Description JsonReadError error System.Char c System.Int32 pos JsonReadException(JsonReadError, Char, Int32) Declaration public JsonReadException(JsonReadError error, char c, int pos) Parameters Type Name Description JsonReadError error System.Char c System.Int32 pos Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/AlgoSdk.Json.JsonToken.html": {
    "href": "api/AlgoSdk.Json.JsonToken.html",
    "title": "Enum JsonToken | Unity Algorand SDK",
    "keywords": "Enum JsonToken Namespace : AlgoSdk.Json Assembly : cs.temp.dll.dll Syntax public enum JsonToken Fields Name Description ArrayBegin ArrayEnd Bool EscapeChar None Null Number ObjectBegin ObjectEnd String"
  },
  "api/AlgoSdk.Json.JsonToken_1.html": {
    "href": "api/AlgoSdk.Json.JsonToken_1.html",
    "title": "Enum JsonToken | Unity Algorand SDK",
    "keywords": "Enum JsonToken Namespace : AlgoSdk.Json Assembly : cs.temp.dll.dll Syntax public enum JsonToken Fields Name Description ArrayBegin ArrayEnd Bool EscapeChar None Null Number ObjectBegin ObjectEnd String"
  },
  "api/AlgoSdk.Json.JsonTokenExtensions.html": {
    "href": "api/AlgoSdk.Json.JsonTokenExtensions.html",
    "title": "Class JsonTokenExtensions | Unity Algorand SDK",
    "keywords": "Class JsonTokenExtensions Inheritance System.Object JsonTokenExtensions Namespace : AlgoSdk.Json Assembly : cs.temp.dll.dll Syntax public static class JsonTokenExtensions Methods ToJsonToken(Char) Declaration public static JsonToken ToJsonToken(this char c) Parameters Type Name Description System.Char c Returns Type Description JsonToken ToJsonToken(Char) Declaration public static JsonToken ToJsonToken(this char c) Parameters Type Name Description System.Char c Returns Type Description JsonToken ToJsonToken(Unicode.Rune) Declaration public static JsonToken ToJsonToken(this Unicode.Rune rune) Parameters Type Name Description Unicode.Rune rune Returns Type Description JsonToken ToJsonToken(Unicode.Rune) Declaration public static JsonToken ToJsonToken(this Unicode.Rune rune) Parameters Type Name Description Unicode.Rune rune Returns Type Description JsonToken"
  },
  "api/AlgoSdk.Json.JsonWriter.html": {
    "href": "api/AlgoSdk.Json.JsonWriter.html",
    "title": "Struct JsonWriter | Unity Algorand SDK",
    "keywords": "Struct JsonWriter Implements INativeDisposable Namespace : AlgoSdk.Json Assembly : cs.temp.dll.dll Syntax public struct JsonWriter Constructors JsonWriter(Allocator) Declaration public JsonWriter(Allocator allocator) Parameters Type Name Description Allocator allocator JsonWriter(Allocator) Declaration public JsonWriter(Allocator allocator) Parameters Type Name Description Allocator allocator Properties Text Declaration public readonly NativeText Text { get; } Property Value Type Description NativeText Text Declaration public readonly NativeText Text { get; } Property Value Type Description NativeText Methods BeginArray() Declaration public JsonWriter BeginArray() Returns Type Description JsonWriter BeginArray() Declaration public JsonWriter BeginArray() Returns Type Description JsonWriter BeginNextItem() Declaration public JsonWriter BeginNextItem() Returns Type Description JsonWriter BeginNextItem() Declaration public JsonWriter BeginNextItem() Returns Type Description JsonWriter BeginObject() Declaration public JsonWriter BeginObject() Returns Type Description JsonWriter BeginObject() Declaration public JsonWriter BeginObject() Returns Type Description JsonWriter Dispose() Declaration public void Dispose() Dispose() Declaration public void Dispose() Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle EndArray() Declaration public JsonWriter EndArray() Returns Type Description JsonWriter EndArray() Declaration public JsonWriter EndArray() Returns Type Description JsonWriter EndObject() Declaration public JsonWriter EndObject() Returns Type Description JsonWriter EndObject() Declaration public JsonWriter EndObject() Returns Type Description JsonWriter WriteBool(Boolean) Declaration public JsonWriter WriteBool(bool value) Parameters Type Name Description System.Boolean value Returns Type Description JsonWriter WriteBool(Boolean) Declaration public JsonWriter WriteBool(bool value) Parameters Type Name Description System.Boolean value Returns Type Description JsonWriter WriteChar(Char) Declaration public JsonWriter WriteChar(char c) Parameters Type Name Description System.Char c Returns Type Description JsonWriter WriteChar(Char) Declaration public JsonWriter WriteChar(char c) Parameters Type Name Description System.Char c Returns Type Description JsonWriter WriteNull() Declaration public JsonWriter WriteNull() Returns Type Description JsonWriter WriteNull() Declaration public JsonWriter WriteNull() Returns Type Description JsonWriter WriteNumber(Int64) Declaration public JsonWriter WriteNumber(long value) Parameters Type Name Description System.Int64 value Returns Type Description JsonWriter WriteNumber(Int64) Declaration public JsonWriter WriteNumber(long value) Parameters Type Name Description System.Int64 value Returns Type Description JsonWriter WriteNumber(Single) Declaration public JsonWriter WriteNumber(float value) Parameters Type Name Description System.Single value Returns Type Description JsonWriter WriteNumber(Single) Declaration public JsonWriter WriteNumber(float value) Parameters Type Name Description System.Single value Returns Type Description JsonWriter WriteNumber(UInt64) Declaration public JsonWriter WriteNumber(ulong value) Parameters Type Name Description System.UInt64 value Returns Type Description JsonWriter WriteNumber(UInt64) Declaration public JsonWriter WriteNumber(ulong value) Parameters Type Name Description System.UInt64 value Returns Type Description JsonWriter WriteObjectKey(String) Declaration public JsonWriter WriteObjectKey(string s) Parameters Type Name Description System.String s Returns Type Description JsonWriter WriteObjectKey(String) Declaration public JsonWriter WriteObjectKey(string s) Parameters Type Name Description System.String s Returns Type Description JsonWriter WriteObjectKey<T>(T) Declaration public JsonWriter WriteObjectKey<T>(T fs) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Returns Type Description JsonWriter Type Parameters Name Description T WriteObjectKey<T>(T) Declaration public JsonWriter WriteObjectKey<T>(T fs) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Returns Type Description JsonWriter Type Parameters Name Description T WriteRaw(NativeArray<Byte>) Declaration public JsonWriter WriteRaw(NativeArray<byte> raw) Parameters Type Name Description NativeArray < System.Byte > raw Returns Type Description JsonWriter WriteRaw(NativeArray<Byte>) Declaration public JsonWriter WriteRaw(NativeArray<byte> raw) Parameters Type Name Description NativeArray < System.Byte > raw Returns Type Description JsonWriter WriteRaw(NativeText) Declaration public JsonWriter WriteRaw(NativeText raw) Parameters Type Name Description NativeText raw Returns Type Description JsonWriter WriteRaw(NativeText) Declaration public JsonWriter WriteRaw(NativeText raw) Parameters Type Name Description NativeText raw Returns Type Description JsonWriter WriteString(String) Declaration public JsonWriter WriteString(string s) Parameters Type Name Description System.String s Returns Type Description JsonWriter WriteString(String) Declaration public JsonWriter WriteString(string s) Parameters Type Name Description System.String s Returns Type Description JsonWriter WriteString<T>(T) Declaration public JsonWriter WriteString<T>(T fs) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Returns Type Description JsonWriter Type Parameters Name Description T WriteString<T>(T) Declaration public JsonWriter WriteString<T>(T fs) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Returns Type Description JsonWriter Type Parameters Name Description T Implements INativeDisposable"
  },
  "api/AlgoSdk.Json.UnicodeExtensions.html": {
    "href": "api/AlgoSdk.Json.UnicodeExtensions.html",
    "title": "Class UnicodeExtensions | Unity Algorand SDK",
    "keywords": "Class UnicodeExtensions Inheritance System.Object UnicodeExtensions Namespace : AlgoSdk.Json Assembly : cs.temp.dll.dll Syntax public static class UnicodeExtensions Methods IsWhiteSpaceOrSeparator(Char) Declaration public static bool IsWhiteSpaceOrSeparator(this char c) Parameters Type Name Description System.Char c Returns Type Description System.Boolean IsWhiteSpaceOrSeparator(Char) Declaration public static bool IsWhiteSpaceOrSeparator(this char c) Parameters Type Name Description System.Char c Returns Type Description System.Boolean IsWhiteSpaceOrSeparator(Unicode.Rune) Declaration public static bool IsWhiteSpaceOrSeparator(this Unicode.Rune rune) Parameters Type Name Description Unicode.Rune rune Returns Type Description System.Boolean IsWhiteSpaceOrSeparator(Unicode.Rune) Declaration public static bool IsWhiteSpaceOrSeparator(this Unicode.Rune rune) Parameters Type Name Description Unicode.Rune rune Returns Type Description System.Boolean ToChar(Unicode.Rune) Declaration public static char ToChar(this Unicode.Rune rune) Parameters Type Name Description Unicode.Rune rune Returns Type Description System.Char ToChar(Unicode.Rune) Declaration public static char ToChar(this Unicode.Rune rune) Parameters Type Name Description Unicode.Rune rune Returns Type Description System.Char ToRune(Char) Declaration public static Unicode.Rune ToRune(this char c) Parameters Type Name Description System.Char c Returns Type Description Unicode.Rune ToRune(Char) Declaration public static Unicode.Rune ToRune(this char c) Parameters Type Name Description System.Char c Returns Type Description Unicode.Rune"
  },
  "api/AlgoSdk.KeyRegTxn.html": {
    "href": "api/AlgoSdk.KeyRegTxn.html",
    "title": "Struct KeyRegTxn | Unity Algorand SDK",
    "keywords": "Struct KeyRegTxn Implements IKeyRegTxn ITransaction System.IEquatable < KeyRegTxn > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct KeyRegTxn : IKeyRegTxn, ITransaction, IEquatable<KeyRegTxn> Properties AccountParticipation Declaration public AccountParticipation AccountParticipation { get; set; } Property Value Type Description AccountParticipation AccountParticipation Declaration public AccountParticipation AccountParticipation { get; set; } Property Value Type Description AccountParticipation Fee Declaration public ulong Fee { get; set; } Property Value Type Description System.UInt64 Fee Declaration public ulong Fee { get; set; } Property Value Type Description System.UInt64 FirstValidRound Declaration public ulong FirstValidRound { get; set; } Property Value Type Description System.UInt64 FirstValidRound Declaration public ulong FirstValidRound { get; set; } Property Value Type Description System.UInt64 GenesisHash Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisHash Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisId Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes GenesisId Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes Group Declaration public Sha512_256_Hash Group { get; set; } Property Value Type Description Sha512_256_Hash Group Declaration public Sha512_256_Hash Group { get; set; } Property Value Type Description Sha512_256_Hash LastValidRound Declaration public ulong LastValidRound { get; set; } Property Value Type Description System.UInt64 LastValidRound Declaration public ulong LastValidRound { get; set; } Property Value Type Description System.UInt64 Lease Declaration public Sha512_256_Hash Lease { get; set; } Property Value Type Description Sha512_256_Hash Lease Declaration public Sha512_256_Hash Lease { get; set; } Property Value Type Description Sha512_256_Hash NonParticipation Declaration public Optional<bool> NonParticipation { get; set; } Property Value Type Description Optional < System.Boolean > NonParticipation Declaration public Optional<bool> NonParticipation { get; set; } Property Value Type Description Optional < System.Boolean > Note Declaration public byte[] Note { get; set; } Property Value Type Description System.Byte [] Note Declaration public byte[] Note { get; set; } Property Value Type Description System.Byte [] RekeyTo Declaration public Address RekeyTo { get; set; } Property Value Type Description Address RekeyTo Declaration public Address RekeyTo { get; set; } Property Value Type Description Address SelectionParticipationKey Declaration public VrfPubKey SelectionParticipationKey { get; set; } Property Value Type Description VrfPubKey SelectionParticipationKey Declaration public VrfPubKey SelectionParticipationKey { get; set; } Property Value Type Description VrfPubKey Sender Declaration public Address Sender { get; set; } Property Value Type Description Address Sender Declaration public Address Sender { get; set; } Property Value Type Description Address TransactionType Declaration public TransactionType TransactionType { get; } Property Value Type Description TransactionType TransactionType Declaration public TransactionType TransactionType { get; } Property Value Type Description TransactionType VoteFirst Declaration public ulong VoteFirst { get; set; } Property Value Type Description System.UInt64 VoteFirst Declaration public ulong VoteFirst { get; set; } Property Value Type Description System.UInt64 VoteKeyDilution Declaration public ulong VoteKeyDilution { get; set; } Property Value Type Description System.UInt64 VoteKeyDilution Declaration public ulong VoteKeyDilution { get; set; } Property Value Type Description System.UInt64 VoteLast Declaration public ulong VoteLast { get; set; } Property Value Type Description System.UInt64 VoteLast Declaration public ulong VoteLast { get; set; } Property Value Type Description System.UInt64 VoteParticipationKey Declaration public Ed25519.PublicKey VoteParticipationKey { get; set; } Property Value Type Description Ed25519.PublicKey VoteParticipationKey Declaration public Ed25519.PublicKey VoteParticipationKey { get; set; } Property Value Type Description Ed25519.PublicKey Methods CopyFrom(Transaction) Declaration public void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction CopyFrom(Transaction) Declaration public void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction CopyTo(ref Transaction) Declaration public void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction CopyTo(ref Transaction) Declaration public void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction Equals(KeyRegTxn) Declaration public bool Equals(KeyRegTxn other) Parameters Type Name Description KeyRegTxn other Returns Type Description System.Boolean Equals(KeyRegTxn) Declaration public bool Equals(KeyRegTxn other) Parameters Type Name Description KeyRegTxn other Returns Type Description System.Boolean Implements IKeyRegTxn ITransaction System.IEquatable<T>"
  },
  "api/AlgoSdk.KeyRegTxn.Params.html": {
    "href": "api/AlgoSdk.KeyRegTxn.Params.html",
    "title": "Struct KeyRegTxn.Params | Unity Algorand SDK",
    "keywords": "Struct KeyRegTxn.Params Implements System.IEquatable < KeyRegTxn.Params > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct Params : IEquatable<KeyRegTxn.Params> Fields AccountParticipation Declaration public AccountParticipation AccountParticipation Field Value Type Description AccountParticipation AccountParticipation Declaration public AccountParticipation AccountParticipation Field Value Type Description AccountParticipation NonParticipation Declaration public Optional<bool> NonParticipation Field Value Type Description Optional < System.Boolean > NonParticipation Declaration public Optional<bool> NonParticipation Field Value Type Description Optional < System.Boolean > Properties SelectionParticipationKey Declaration public VrfPubKey SelectionParticipationKey { get; set; } Property Value Type Description VrfPubKey SelectionParticipationKey Declaration public VrfPubKey SelectionParticipationKey { get; set; } Property Value Type Description VrfPubKey VoteFirst Declaration public ulong VoteFirst { get; set; } Property Value Type Description System.UInt64 VoteFirst Declaration public ulong VoteFirst { get; set; } Property Value Type Description System.UInt64 VoteKeyDilution Declaration public ulong VoteKeyDilution { get; set; } Property Value Type Description System.UInt64 VoteKeyDilution Declaration public ulong VoteKeyDilution { get; set; } Property Value Type Description System.UInt64 VoteLast Declaration public ulong VoteLast { get; set; } Property Value Type Description System.UInt64 VoteLast Declaration public ulong VoteLast { get; set; } Property Value Type Description System.UInt64 VoteParticipationKey Declaration public Ed25519.PublicKey VoteParticipationKey { get; set; } Property Value Type Description Ed25519.PublicKey VoteParticipationKey Declaration public Ed25519.PublicKey VoteParticipationKey { get; set; } Property Value Type Description Ed25519.PublicKey Methods Equals(KeyRegTxn.Params) Declaration public bool Equals(KeyRegTxn.Params other) Parameters Type Name Description KeyRegTxn.Params other Returns Type Description System.Boolean Equals(KeyRegTxn.Params) Declaration public bool Equals(KeyRegTxn.Params other) Parameters Type Name Description KeyRegTxn.Params other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.KmdClient.html": {
    "href": "api/AlgoSdk.KmdClient.html",
    "title": "Struct KmdClient | Unity Algorand SDK",
    "keywords": "Struct KmdClient A client for accessing the kmd service Implements IKmdClient IAlgoApiClient Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct KmdClient : IKmdClient, IAlgoApiClient Remarks The kmd service is responsible for managing keys and wallets Constructors KmdClient(String, Header[]) Create a new kmd client Declaration public KmdClient(string address, params Header[] headers) Parameters Type Name Description System.String address url of the service, including the port, e.g. \"http://localhost:4001\" Header [] headers extra headers to add to the requests. e.g. (\"x-api-key, my-api-key\") KmdClient(String, Header[]) Create a new kmd client Declaration public KmdClient(string address, params Header[] headers) Parameters Type Name Description System.String address url of the service, including the port, e.g. \"http://localhost:4001\" Header [] headers extra headers to add to the requests. e.g. (\"x-api-key, my-api-key\") KmdClient(String, String, Header[]) Create a new kmd client Declaration public KmdClient(string address, string token = null, params Header[] headers) Parameters Type Name Description System.String address url of the service, including the port, e.g. \"http://localhost:4001\" System.String token token used in authenticating to the service Header [] headers extra headers to add to the requests. e.g. (\"x-api-key, my-api-key\") KmdClient(String, String, Header[]) Create a new kmd client Declaration public KmdClient(string address, string token = null, params Header[] headers) Parameters Type Name Description System.String address url of the service, including the port, e.g. \"http://localhost:4001\" System.String token token used in authenticating to the service Header [] headers extra headers to add to the requests. e.g. (\"x-api-key, my-api-key\") Properties Address Declaration public readonly string Address { get; } Property Value Type Description System.String Address Declaration public readonly string Address { get; } Property Value Type Description System.String Headers Declaration public readonly Header[] Headers { get; } Property Value Type Description Header [] Headers Declaration public readonly Header[] Headers { get; } Property Value Type Description Header [] Token Declaration public readonly string Token { get; } Property Value Type Description System.String Token Declaration public readonly string Token { get; } Property Value Type Description System.String TokenHeader Declaration public readonly string TokenHeader { get; } Property Value Type Description System.String TokenHeader Declaration public readonly string TokenHeader { get; } Property Value Type Description System.String Methods CreateWallet(PrivateKey, FixedString128Bytes, FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<CreateWalletResponse> CreateWallet(PrivateKey masterDerivationKey, FixedString128Bytes walletDriverName, FixedString128Bytes walletName, FixedString128Bytes walletPassword) Parameters Type Name Description PrivateKey masterDerivationKey FixedString128Bytes walletDriverName FixedString128Bytes walletName FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < CreateWalletResponse > CreateWallet(PrivateKey, FixedString128Bytes, FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<CreateWalletResponse> CreateWallet(PrivateKey masterDerivationKey, FixedString128Bytes walletDriverName, FixedString128Bytes walletName, FixedString128Bytes walletPassword) Parameters Type Name Description PrivateKey masterDerivationKey FixedString128Bytes walletDriverName FixedString128Bytes walletName FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < CreateWalletResponse > DeleteKey(Address, FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent DeleteKey(Address address, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address address FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent DeleteKey(Address, FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent DeleteKey(Address address, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address address FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent DeleteMultisig(Address, FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent DeleteMultisig(Address address, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address address FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent DeleteMultisig(Address, FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent DeleteMultisig(Address address, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address address FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent ExportKey(Address, FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<ExportKeyResponse> ExportKey(Address address, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address address FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < ExportKeyResponse > ExportKey(Address, FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<ExportKeyResponse> ExportKey(Address address, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address address FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < ExportKeyResponse > ExportMasterKey(FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<ExportMasterKeyResponse> ExportMasterKey(FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < ExportMasterKeyResponse > ExportMasterKey(FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<ExportMasterKeyResponse> ExportMasterKey(FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < ExportMasterKeyResponse > ExportMultisig(Address, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<ExportMultisigResponse> ExportMultisig(Address address, FixedString128Bytes walletHandleToken) Parameters Type Name Description Address address FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < ExportMultisigResponse > ExportMultisig(Address, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<ExportMultisigResponse> ExportMultisig(Address address, FixedString128Bytes walletHandleToken) Parameters Type Name Description Address address FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < ExportMultisigResponse > GenerateKey(FixedString128Bytes, Optional<Boolean>) Declaration public AlgoApiRequest.Sent<GenerateKeyResponse> GenerateKey(FixedString128Bytes walletHandleToken, Optional<bool> displayMnemonic = default(Optional<bool>)) Parameters Type Name Description FixedString128Bytes walletHandleToken Optional < System.Boolean > displayMnemonic Returns Type Description AlgoApiRequest.Sent < GenerateKeyResponse > GenerateKey(FixedString128Bytes, Optional<Boolean>) Declaration public AlgoApiRequest.Sent<GenerateKeyResponse> GenerateKey(FixedString128Bytes walletHandleToken, Optional<bool> displayMnemonic = default(Optional<bool>)) Parameters Type Name Description FixedString128Bytes walletHandleToken Optional < System.Boolean > displayMnemonic Returns Type Description AlgoApiRequest.Sent < GenerateKeyResponse > GetSwaggerSpec() Declaration public AlgoApiRequest.Sent<AlgoApiObject> GetSwaggerSpec() Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > GetSwaggerSpec() Declaration public AlgoApiRequest.Sent<AlgoApiObject> GetSwaggerSpec() Returns Type Description AlgoApiRequest.Sent < AlgoApiObject > ImportKey(PrivateKey, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<ImportKeyResponse> ImportKey(PrivateKey privateKey, FixedString128Bytes walletHandleToken) Parameters Type Name Description PrivateKey privateKey FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < ImportKeyResponse > ImportKey(PrivateKey, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<ImportKeyResponse> ImportKey(PrivateKey privateKey, FixedString128Bytes walletHandleToken) Parameters Type Name Description PrivateKey privateKey FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < ImportKeyResponse > ImportMultisig(Ed25519.PublicKey[], Byte, FixedString128Bytes, Byte) Declaration public AlgoApiRequest.Sent<ImportMultisigResponse> ImportMultisig(Ed25519.PublicKey[] publicKeys, byte threshold, FixedString128Bytes walletHandleToken, byte version = 1) Parameters Type Name Description Ed25519.PublicKey [] publicKeys System.Byte threshold FixedString128Bytes walletHandleToken System.Byte version Returns Type Description AlgoApiRequest.Sent < ImportMultisigResponse > ImportMultisig(Ed25519.PublicKey[], Byte, FixedString128Bytes, Byte) Declaration public AlgoApiRequest.Sent<ImportMultisigResponse> ImportMultisig(Ed25519.PublicKey[] publicKeys, byte threshold, FixedString128Bytes walletHandleToken, byte version = 1) Parameters Type Name Description Ed25519.PublicKey [] publicKeys System.Byte threshold FixedString128Bytes walletHandleToken System.Byte version Returns Type Description AlgoApiRequest.Sent < ImportMultisigResponse > InitWalletHandleToken(FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<InitWalletHandleTokenResponse> InitWalletHandleToken(FixedString128Bytes walletId, FixedString128Bytes walletPassword) Parameters Type Name Description FixedString128Bytes walletId FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < InitWalletHandleTokenResponse > InitWalletHandleToken(FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<InitWalletHandleTokenResponse> InitWalletHandleToken(FixedString128Bytes walletId, FixedString128Bytes walletPassword) Parameters Type Name Description FixedString128Bytes walletId FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < InitWalletHandleTokenResponse > ListKeys(FixedString128Bytes) Declaration public AlgoApiRequest.Sent<ListKeysResponse> ListKeys(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < ListKeysResponse > ListKeys(FixedString128Bytes) Declaration public AlgoApiRequest.Sent<ListKeysResponse> ListKeys(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < ListKeysResponse > ListMultisig(FixedString128Bytes) Declaration public AlgoApiRequest.Sent<ListMultisigResponse> ListMultisig(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < ListMultisigResponse > ListMultisig(FixedString128Bytes) Declaration public AlgoApiRequest.Sent<ListMultisigResponse> ListMultisig(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < ListMultisigResponse > ListWallets() Declaration public AlgoApiRequest.Sent<ListWalletsResponse> ListWallets() Returns Type Description AlgoApiRequest.Sent < ListWalletsResponse > ListWallets() Declaration public AlgoApiRequest.Sent<ListWalletsResponse> ListWallets() Returns Type Description AlgoApiRequest.Sent < ListWalletsResponse > ReleaseWalletHandleToken(FixedString128Bytes) Declaration public AlgoApiRequest.Sent ReleaseWalletHandleToken(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent ReleaseWalletHandleToken(FixedString128Bytes) Declaration public AlgoApiRequest.Sent ReleaseWalletHandleToken(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent RenameWallet(FixedString128Bytes, FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<RenameWalletResponse> RenameWallet(FixedString128Bytes walletId, FixedString128Bytes newName, FixedString128Bytes walletPassword) Parameters Type Name Description FixedString128Bytes walletId FixedString128Bytes newName FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < RenameWalletResponse > RenameWallet(FixedString128Bytes, FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<RenameWalletResponse> RenameWallet(FixedString128Bytes walletId, FixedString128Bytes newName, FixedString128Bytes walletPassword) Parameters Type Name Description FixedString128Bytes walletId FixedString128Bytes newName FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < RenameWalletResponse > RenewWalletHandleToken(FixedString128Bytes) Declaration public AlgoApiRequest.Sent<RenewWalletHandleTokenResponse> RenewWalletHandleToken(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < RenewWalletHandleTokenResponse > RenewWalletHandleToken(FixedString128Bytes) Declaration public AlgoApiRequest.Sent<RenewWalletHandleTokenResponse> RenewWalletHandleToken(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < RenewWalletHandleTokenResponse > SignMultisig(Multisig, Ed25519.PublicKey, Byte[], FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<SignMultisigResponse> SignMultisig(Multisig msig, Ed25519.PublicKey publicKey, byte[] transactionData, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Multisig msig Ed25519.PublicKey publicKey System.Byte [] transactionData FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignMultisigResponse > SignMultisig(Multisig, Ed25519.PublicKey, Byte[], FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<SignMultisigResponse> SignMultisig(Multisig msig, Ed25519.PublicKey publicKey, byte[] transactionData, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Multisig msig Ed25519.PublicKey publicKey System.Byte [] transactionData FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignMultisigResponse > SignProgram(Address, Byte[], FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<SignProgramResponse> SignProgram(Address account, byte[] programData, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address account System.Byte [] programData FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignProgramResponse > SignProgram(Address, Byte[], FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<SignProgramResponse> SignProgram(Address account, byte[] programData, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address account System.Byte [] programData FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignProgramResponse > SignProgramMultisig(Address, Byte[], Multisig, Ed25519.PublicKey, FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<SignProgramMultisigResponse> SignProgramMultisig(Address msigAccount, byte[] programData, Multisig msig, Ed25519.PublicKey publicKey, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address msigAccount System.Byte [] programData Multisig msig Ed25519.PublicKey publicKey FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignProgramMultisigResponse > SignProgramMultisig(Address, Byte[], Multisig, Ed25519.PublicKey, FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<SignProgramMultisigResponse> SignProgramMultisig(Address msigAccount, byte[] programData, Multisig msig, Ed25519.PublicKey publicKey, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address msigAccount System.Byte [] programData Multisig msig Ed25519.PublicKey publicKey FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignProgramMultisigResponse > SignTransaction(Address, Byte[], FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<SignTransactionResponse> SignTransaction(Address account, byte[] transactionData, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address account System.Byte [] transactionData FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignTransactionResponse > SignTransaction(Address, Byte[], FixedString128Bytes, FixedString128Bytes) Declaration public AlgoApiRequest.Sent<SignTransactionResponse> SignTransaction(Address account, byte[] transactionData, FixedString128Bytes walletHandleToken, FixedString128Bytes walletPassword) Parameters Type Name Description Address account System.Byte [] transactionData FixedString128Bytes walletHandleToken FixedString128Bytes walletPassword Returns Type Description AlgoApiRequest.Sent < SignTransactionResponse > Versions() Declaration public AlgoApiRequest.Sent<VersionsResponse> Versions() Returns Type Description AlgoApiRequest.Sent < VersionsResponse > Versions() Declaration public AlgoApiRequest.Sent<VersionsResponse> Versions() Returns Type Description AlgoApiRequest.Sent < VersionsResponse > WalletInfo(FixedString128Bytes) Declaration public AlgoApiRequest.Sent<WalletInfoResponse> WalletInfo(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < WalletInfoResponse > WalletInfo(FixedString128Bytes) Declaration public AlgoApiRequest.Sent<WalletInfoResponse> WalletInfo(FixedString128Bytes walletHandleToken) Parameters Type Name Description FixedString128Bytes walletHandleToken Returns Type Description AlgoApiRequest.Sent < WalletInfoResponse > Implements IKmdClient IAlgoApiClient"
  },
  "api/AlgoSdk.LedgerSupply.html": {
    "href": "api/AlgoSdk.LedgerSupply.html",
    "title": "Struct LedgerSupply | Unity Algorand SDK",
    "keywords": "Struct LedgerSupply Supply represents the current supply of MicroAlgos in the system. Implements System.IEquatable < LedgerSupply > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct LedgerSupply : IEquatable<LedgerSupply> Fields OnlineMoney Declaration public ulong OnlineMoney Field Value Type Description System.UInt64 OnlineMoney Declaration public ulong OnlineMoney Field Value Type Description System.UInt64 Round Declaration public ulong Round Field Value Type Description System.UInt64 Round Declaration public ulong Round Field Value Type Description System.UInt64 TotalMoney Declaration public ulong TotalMoney Field Value Type Description System.UInt64 TotalMoney Declaration public ulong TotalMoney Field Value Type Description System.UInt64 Methods Equals(LedgerSupply) Declaration public bool Equals(LedgerSupply other) Parameters Type Name Description LedgerSupply other Returns Type Description System.Boolean Equals(LedgerSupply) Declaration public bool Equals(LedgerSupply other) Parameters Type Name Description LedgerSupply other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.ListKeysRequest.html": {
    "href": "api/AlgoSdk.ListKeysRequest.html",
    "title": "Struct ListKeysRequest | Unity Algorand SDK",
    "keywords": "Struct ListKeysRequest Implements System.IEquatable < ListKeysRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ListKeysRequest : IEquatable<ListKeysRequest> Fields WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(ListKeysRequest) Declaration public bool Equals(ListKeysRequest other) Parameters Type Name Description ListKeysRequest other Returns Type Description System.Boolean Equals(ListKeysRequest) Declaration public bool Equals(ListKeysRequest other) Parameters Type Name Description ListKeysRequest other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.ListKeysResponse.html": {
    "href": "api/AlgoSdk.ListKeysResponse.html",
    "title": "Struct ListKeysResponse | Unity Algorand SDK",
    "keywords": "Struct ListKeysResponse Implements System.IEquatable < ListKeysResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ListKeysResponse : IEquatable<ListKeysResponse> Fields Addresses Declaration public Address[] Addresses Field Value Type Description Address [] Addresses Declaration public Address[] Addresses Field Value Type Description Address [] Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Message Declaration public string Message Field Value Type Description System.String Message Declaration public string Message Field Value Type Description System.String Methods Equals(ListKeysResponse) Declaration public bool Equals(ListKeysResponse other) Parameters Type Name Description ListKeysResponse other Returns Type Description System.Boolean Equals(ListKeysResponse) Declaration public bool Equals(ListKeysResponse other) Parameters Type Name Description ListKeysResponse other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.ListMultisigRequest.html": {
    "href": "api/AlgoSdk.ListMultisigRequest.html",
    "title": "Struct ListMultisigRequest | Unity Algorand SDK",
    "keywords": "Struct ListMultisigRequest Implements System.IEquatable < ListMultisigRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ListMultisigRequest : IEquatable<ListMultisigRequest> Fields WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(ListMultisigRequest) Declaration public bool Equals(ListMultisigRequest other) Parameters Type Name Description ListMultisigRequest other Returns Type Description System.Boolean Equals(ListMultisigRequest) Declaration public bool Equals(ListMultisigRequest other) Parameters Type Name Description ListMultisigRequest other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.ListMultisigResponse.html": {
    "href": "api/AlgoSdk.ListMultisigResponse.html",
    "title": "Struct ListMultisigResponse | Unity Algorand SDK",
    "keywords": "Struct ListMultisigResponse Implements System.IEquatable < ListMultisigResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ListMultisigResponse : IEquatable<ListMultisigResponse> Fields Addresses Declaration public Address[] Addresses Field Value Type Description Address [] Addresses Declaration public Address[] Addresses Field Value Type Description Address [] Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Message Declaration public string Message Field Value Type Description System.String Message Declaration public string Message Field Value Type Description System.String Methods Equals(ListMultisigResponse) Declaration public bool Equals(ListMultisigResponse other) Parameters Type Name Description ListMultisigResponse other Returns Type Description System.Boolean Equals(ListMultisigResponse) Declaration public bool Equals(ListMultisigResponse other) Parameters Type Name Description ListMultisigResponse other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.ListWalletsResponse.html": {
    "href": "api/AlgoSdk.ListWalletsResponse.html",
    "title": "Struct ListWalletsResponse | Unity Algorand SDK",
    "keywords": "Struct ListWalletsResponse Implements System.IEquatable < ListWalletsResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ListWalletsResponse : IEquatable<ListWalletsResponse> Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Message Declaration public string Message Field Value Type Description System.String Message Declaration public string Message Field Value Type Description System.String Wallets Declaration public Wallet[] Wallets Field Value Type Description Wallet [] Wallets Declaration public Wallet[] Wallets Field Value Type Description Wallet [] Methods Equals(ListWalletsResponse) Declaration public bool Equals(ListWalletsResponse other) Parameters Type Name Description ListWalletsResponse other Returns Type Description System.Boolean Equals(ListWalletsResponse) Declaration public bool Equals(ListWalletsResponse other) Parameters Type Name Description ListWalletsResponse other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.Logic.html": {
    "href": "api/AlgoSdk.Logic.html",
    "title": "Class Logic | Unity Algorand SDK",
    "keywords": "Class Logic Inheritance System.Object Logic Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class Logic Fields SigningPrefix Declaration public static readonly byte[] SigningPrefix Field Value Type Description System.Byte [] SigningPrefix Declaration public static readonly byte[] SigningPrefix Field Value Type Description System.Byte [] Methods GetAddress(Byte[]) Return the Address of a program. Declaration public static Address GetAddress(byte[] program) Parameters Type Name Description System.Byte [] program The stateful or stateless program to get the address of. Returns Type Description Address An Address for a program. GetAddress(Byte[]) Return the Address of a program. Declaration public static Address GetAddress(byte[] program) Parameters Type Name Description System.Byte [] program The stateful or stateless program to get the address of. Returns Type Description Address An Address for a program. GetSignBytes(Byte[], Allocator) Get a message used for signing. Declaration public static NativeByteArray GetSignBytes(byte[] program, Allocator allocator) Parameters Type Name Description System.Byte [] program The program that will be signed. Allocator allocator Defines the memory lifetime used for , which must be disposed. Returns Type Description NativeByteArray A . The caller must manage its lifetime. GetSignBytes(Byte[], Allocator) Get a message used for signing. Declaration public static NativeByteArray GetSignBytes(byte[] program, Allocator allocator) Parameters Type Name Description System.Byte [] program The program that will be signed. Allocator allocator Defines the memory lifetime used for , which must be disposed. Returns Type Description NativeByteArray A . The caller must manage its lifetime. Sign(Byte[], Multisig, PrivateKey) Signs the program with the msig and returns a signature and its index. Declaration public static (Sig, int) Sign(byte[] program, Multisig msig, PrivateKey privateKey) Parameters Type Name Description System.Byte [] program The program to sign. Multisig msig A Multisig that contains the matching privateKey . PrivateKey privateKey The private key to sign with. Its corresponding must be inside of msig . Returns Type Description System.ValueTuple < Sig , System.Int32 > A tuple of the Sig from signing the program and its index in the msig Sign(Byte[], Multisig, PrivateKey) Signs the program with the msig and returns a signature and its index. Declaration public static (Sig, int) Sign(byte[] program, Multisig msig, PrivateKey privateKey) Parameters Type Name Description System.Byte [] program The program to sign. Multisig msig A Multisig that contains the matching privateKey . PrivateKey privateKey The private key to sign with. Its corresponding must be inside of msig . Returns Type Description System.ValueTuple < Sig , System.Int32 > A tuple of the Sig from signing the program and its index in the msig Sign(Byte[], SecretKeyHandle) Signs the given program and returns the signature. Declaration public static Sig Sign(byte[] program, SecretKeyHandle secretKey) Parameters Type Name Description System.Byte [] program Program to sign SecretKeyHandle secretKey Key to sign this program with. Returns Type Description Sig Sig Sign(Byte[], SecretKeyHandle) Signs the given program and returns the signature. Declaration public static Sig Sign(byte[] program, SecretKeyHandle secretKey) Parameters Type Name Description System.Byte [] program Program to sign SecretKeyHandle secretKey Key to sign this program with. Returns Type Description Sig Sig"
  },
  "api/AlgoSdk.LogicSig.html": {
    "href": "api/AlgoSdk.LogicSig.html",
    "title": "Struct LogicSig | Unity Algorand SDK",
    "keywords": "Struct LogicSig Implements ISignature System.IEquatable < LogicSig > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct LogicSig : ISignature, IEquatable<LogicSig> Fields Args Declaration public FixedList128Bytes<byte>[] Args Field Value Type Description FixedList128Bytes < System.Byte >[] Args Declaration public FixedList128Bytes<byte>[] Args Field Value Type Description FixedList128Bytes < System.Byte >[] Multisig Declaration public Multisig Multisig Field Value Type Description Multisig Multisig Declaration public Multisig Multisig Field Value Type Description Multisig Program Declaration public byte[] Program Field Value Type Description System.Byte [] Program Declaration public byte[] Program Field Value Type Description System.Byte [] Sig Declaration public Sig Sig Field Value Type Description Sig Sig Declaration public Sig Sig Field Value Type Description Sig Methods Equals(LogicSig) Declaration public bool Equals(LogicSig other) Parameters Type Name Description LogicSig other Returns Type Description System.Boolean Equals(LogicSig) Declaration public bool Equals(LogicSig other) Parameters Type Name Description LogicSig other Returns Type Description System.Boolean GetAddress() Get the Address of this logicsig. Declaration public Address GetAddress() Returns Type Description Address An Address from the checksum of the logic sig. GetAddress() Get the Address of this logicsig. Declaration public Address GetAddress() Returns Type Description Address An Address from the checksum of the logic sig. IsValid(Address) Determines if transactions from the sender can by signed by this LogicSig . Declaration public bool IsValid(Address sender) Parameters Type Name Description Address sender The Sender Returns Type Description System.Boolean true if this LogicSig can sign for the sender. IsValid(Address) Determines if transactions from the sender can by signed by this LogicSig . Declaration public bool IsValid(Address sender) Parameters Type Name Description Address sender The Sender Returns Type Description System.Boolean true if this LogicSig can sign for the sender. Implements ISignature System.IEquatable<T>"
  },
  "api/AlgoSdk.LowLevel.ByteArray.html": {
    "href": "api/AlgoSdk.LowLevel.ByteArray.html",
    "title": "Class ByteArray | Unity Algorand SDK",
    "keywords": "Class ByteArray Inheritance System.Object ByteArray Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public static class ByteArray Methods CheckElementAccess(Int32, Int32) Declaration public static void CheckElementAccess(int index, int length) Parameters Type Name Description System.Int32 index System.Int32 length CheckElementAccess(Int32, Int32) Declaration public static void CheckElementAccess(int index, int length) Parameters Type Name Description System.Int32 index System.Int32 length CopyFrom<T>(ref T, NativeArray<Byte>, Int32, Int32) Declaration public static void CopyFrom<T>(this ref T target, NativeArray<byte> source, int start, int length = 2147483647) where T : struct, IByteArray Parameters Type Name Description T target NativeArray < System.Byte > source System.Int32 start System.Int32 length Type Parameters Name Description T CopyFrom<T>(ref T, NativeArray<Byte>, Int32, Int32) Declaration public static void CopyFrom<T>(this ref T target, NativeArray<byte> source, int start, int length = 2147483647) where T : struct, IByteArray Parameters Type Name Description T target NativeArray < System.Byte > source System.Int32 start System.Int32 length Type Parameters Name Description T CopyFrom<T>(ref T, Byte[], Int32, Int32) Declaration public static void CopyFrom<T>(this ref T target, byte[] source, int start, int length = 2147483647) where T : struct, IByteArray Parameters Type Name Description T target System.Byte [] source System.Int32 start System.Int32 length Type Parameters Name Description T CopyFrom<T>(ref T, Byte[], Int32, Int32) Declaration public static void CopyFrom<T>(this ref T target, byte[] source, int start, int length = 2147483647) where T : struct, IByteArray Parameters Type Name Description T target System.Byte [] source System.Int32 start System.Int32 length Type Parameters Name Description T CopyFrom<T, U>(ref T, U, Int32, Int32) Declaration public static void CopyFrom<T, U>(this ref T target, U source, int start, int length = 2147483647) where T : struct, IByteArray where U : struct, IByteArray Parameters Type Name Description T target U source System.Int32 start System.Int32 length Type Parameters Name Description T U CopyFrom<T, U>(ref T, U, Int32, Int32) Declaration public static void CopyFrom<T, U>(this ref T target, U source, int start, int length = 2147483647) where T : struct, IByteArray where U : struct, IByteArray Parameters Type Name Description T target U source System.Int32 start System.Int32 length Type Parameters Name Description T U CopyTo<T, U>(T, ref U) Declaration public static void CopyTo<T, U>(this T from, ref U to) where T : struct, IByteArray where U : struct, IByteArray Parameters Type Name Description T from U to Type Parameters Name Description T U CopyTo<T, U>(T, ref U) Declaration public static void CopyTo<T, U>(this T from, ref U to) where T : struct, IByteArray where U : struct, IByteArray Parameters Type Name Description T from U to Type Parameters Name Description T U CopyTo<T, U>(T, ref U, Int32, Int32) Declaration public static void CopyTo<T, U>(this T source, ref U target, int start, int length = 2147483647) where T : struct, IByteArray where U : struct, IByteArray Parameters Type Name Description T source U target System.Int32 start System.Int32 length Type Parameters Name Description T U CopyTo<T, U>(T, ref U, Int32, Int32) Declaration public static void CopyTo<T, U>(this T source, ref U target, int start, int length = 2147483647) where T : struct, IByteArray where U : struct, IByteArray Parameters Type Name Description T source U target System.Int32 start System.Int32 length Type Parameters Name Description T U Equals<TByteArray>(TByteArray, TByteArray) Declaration public static bool Equals<TByteArray>(TByteArray x, TByteArray y) where TByteArray : struct, IByteArray Parameters Type Name Description TByteArray x TByteArray y Returns Type Description System.Boolean Type Parameters Name Description TByteArray Equals<TByteArray>(TByteArray, TByteArray) Declaration public static bool Equals<TByteArray>(TByteArray x, TByteArray y) where TByteArray : struct, IByteArray Parameters Type Name Description TByteArray x TByteArray y Returns Type Description System.Boolean Type Parameters Name Description TByteArray Equals<TByteArray>(TByteArray, Object) Declaration public static bool Equals<TByteArray>(TByteArray x, object obj) where TByteArray : struct, IByteArray Parameters Type Name Description TByteArray x System.Object obj Returns Type Description System.Boolean Type Parameters Name Description TByteArray Equals<TByteArray>(TByteArray, Object) Declaration public static bool Equals<TByteArray>(TByteArray x, object obj) where TByteArray : struct, IByteArray Parameters Type Name Description TByteArray x System.Object obj Returns Type Description System.Boolean Type Parameters Name Description TByteArray EqualsOther<T, U>(T, U) Declaration public static bool EqualsOther<T, U>(T x, U y) where T : struct, IByteArray where U : struct, IByteArray Parameters Type Name Description T x U y Returns Type Description System.Boolean Type Parameters Name Description T U EqualsOther<T, U>(T, U) Declaration public static bool EqualsOther<T, U>(T x, U y) where T : struct, IByteArray where U : struct, IByteArray Parameters Type Name Description T x U y Returns Type Description System.Boolean Type Parameters Name Description T U FromBase64<TByteArray>(String) Declaration public static TByteArray FromBase64<TByteArray>(string b64) where TByteArray : struct, IByteArray Parameters Type Name Description System.String b64 Returns Type Description TByteArray Type Parameters Name Description TByteArray FromBase64<TByteArray>(String) Declaration public static TByteArray FromBase64<TByteArray>(string b64) where TByteArray : struct, IByteArray Parameters Type Name Description System.String b64 Returns Type Description TByteArray Type Parameters Name Description TByteArray GetByteAt<TByteArray>(ref TByteArray, Int32) Declaration public static byte GetByteAt<TByteArray>(this ref TByteArray bytes, int index) where TByteArray : struct, IByteArray Parameters Type Name Description TByteArray bytes System.Int32 index Returns Type Description System.Byte Type Parameters Name Description TByteArray GetByteAt<TByteArray>(ref TByteArray, Int32) Declaration public static byte GetByteAt<TByteArray>(this ref TByteArray bytes, int index) where TByteArray : struct, IByteArray Parameters Type Name Description TByteArray bytes System.Int32 index Returns Type Description System.Byte Type Parameters Name Description TByteArray GetHashCode<TByteArray>(TByteArray) Declaration public static int GetHashCode<TByteArray>(TByteArray bytes) where TByteArray : struct, IByteArray Parameters Type Name Description TByteArray bytes Returns Type Description System.Int32 Type Parameters Name Description TByteArray GetHashCode<TByteArray>(TByteArray) Declaration public static int GetHashCode<TByteArray>(TByteArray bytes) where TByteArray : struct, IByteArray Parameters Type Name Description TByteArray bytes Returns Type Description System.Int32 Type Parameters Name Description TByteArray ReadByteAt<TByteArray>(TByteArray, Int32) Declaration public static byte ReadByteAt<TByteArray>(TByteArray bytes, int index) where TByteArray : struct, IByteArray Parameters Type Name Description TByteArray bytes System.Int32 index Returns Type Description System.Byte Type Parameters Name Description TByteArray ReadByteAt<TByteArray>(TByteArray, Int32) Declaration public static byte ReadByteAt<TByteArray>(TByteArray bytes, int index) where TByteArray : struct, IByteArray Parameters Type Name Description TByteArray bytes System.Int32 index Returns Type Description System.Byte Type Parameters Name Description TByteArray SetByteAt<TByteArray>(ref TByteArray, Int32, Byte) Declaration public static void SetByteAt<TByteArray>(this ref TByteArray bytes, int index, byte value) where TByteArray : struct, IByteArray Parameters Type Name Description TByteArray bytes System.Int32 index System.Byte value Type Parameters Name Description TByteArray SetByteAt<TByteArray>(ref TByteArray, Int32, Byte) Declaration public static void SetByteAt<TByteArray>(this ref TByteArray bytes, int index, byte value) where TByteArray : struct, IByteArray Parameters Type Name Description TByteArray bytes System.Int32 index System.Byte value Type Parameters Name Description TByteArray ToArray<TByteArray>(TByteArray) Declaration public static byte[] ToArray<TByteArray>(this TByteArray bytes) where TByteArray : struct, IArray<byte> Parameters Type Name Description TByteArray bytes Returns Type Description System.Byte [] Type Parameters Name Description TByteArray ToArray<TByteArray>(TByteArray) Declaration public static byte[] ToArray<TByteArray>(this TByteArray bytes) where TByteArray : struct, IArray<byte> Parameters Type Name Description TByteArray bytes Returns Type Description System.Byte [] Type Parameters Name Description TByteArray ToBase64<TByteArray>(TByteArray) Declaration public static string ToBase64<TByteArray>(this TByteArray bytes) where TByteArray : struct, IArray<byte> Parameters Type Name Description TByteArray bytes Returns Type Description System.String Type Parameters Name Description TByteArray ToBase64<TByteArray>(TByteArray) Declaration public static string ToBase64<TByteArray>(this TByteArray bytes) where TByteArray : struct, IArray<byte> Parameters Type Name Description TByteArray bytes Returns Type Description System.String Type Parameters Name Description TByteArray ToNativeArray<TByteArray>(TByteArray, Allocator) Declaration public static NativeArray<byte> ToNativeArray<TByteArray>(this TByteArray bytes, Allocator allocator) where TByteArray : struct, IArray<byte> Parameters Type Name Description TByteArray bytes Allocator allocator Returns Type Description NativeArray < System.Byte > Type Parameters Name Description TByteArray ToNativeArray<TByteArray>(TByteArray, Allocator) Declaration public static NativeArray<byte> ToNativeArray<TByteArray>(this TByteArray bytes, Allocator allocator) where TByteArray : struct, IArray<byte> Parameters Type Name Description TByteArray bytes Allocator allocator Returns Type Description NativeArray < System.Byte > Type Parameters Name Description TByteArray"
  },
  "api/AlgoSdk.LowLevel.ByteArrayComparer-1.html": {
    "href": "api/AlgoSdk.LowLevel.ByteArrayComparer-1.html",
    "title": "Struct ByteArrayComparer<T> | Unity Algorand SDK",
    "keywords": "Struct ByteArrayComparer<T> Implements IEqualityComparer <T> Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public struct ByteArrayComparer<T> where T : struct, IByteArray Type Parameters Name Description T Methods Equals(T, T) Declaration public static bool Equals(T x, T y) Parameters Type Name Description T x T y Returns Type Description System.Boolean Equals(T, T) Declaration public static bool Equals(T x, T y) Parameters Type Name Description T x T y Returns Type Description System.Boolean GetHashCode(T) Declaration public static int GetHashCode(T obj) Parameters Type Name Description T obj Returns Type Description System.Int32 GetHashCode(T) Declaration public static int GetHashCode(T obj) Parameters Type Name Description T obj Returns Type Description System.Int32 Implements IEqualityComparer<>"
  },
  "api/AlgoSdk.LowLevel.FixedBytes128.html": {
    "href": "api/AlgoSdk.LowLevel.FixedBytes128.html",
    "title": "Struct FixedBytes128 | Unity Algorand SDK",
    "keywords": "Struct FixedBytes128 Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct FixedBytes128 Fields byte00126 Declaration public byte byte00126 Field Value Type Description System.Byte byte00126 Declaration public byte byte00126 Field Value Type Description System.Byte byte00127 Declaration public byte byte00127 Field Value Type Description System.Byte byte00127 Declaration public byte byte00127 Field Value Type Description System.Byte offset0000 Declaration public FixedBytes126 offset0000 Field Value Type Description FixedBytes126 offset0000 Declaration public FixedBytes126 offset0000 Field Value Type Description FixedBytes126"
  },
  "api/AlgoSdk.LowLevel.FixedBytes32.html": {
    "href": "api/AlgoSdk.LowLevel.FixedBytes32.html",
    "title": "Struct FixedBytes32 | Unity Algorand SDK",
    "keywords": "Struct FixedBytes32 Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct FixedBytes32 Fields byte0030 Declaration public byte byte0030 Field Value Type Description System.Byte byte0030 Declaration public byte byte0030 Field Value Type Description System.Byte byte0031 Declaration public byte byte0031 Field Value Type Description System.Byte byte0031 Declaration public byte byte0031 Field Value Type Description System.Byte offset0000 Declaration public FixedBytes30 offset0000 Field Value Type Description FixedBytes30 offset0000 Declaration public FixedBytes30 offset0000 Field Value Type Description FixedBytes30"
  },
  "api/AlgoSdk.LowLevel.FixedBytes64.html": {
    "href": "api/AlgoSdk.LowLevel.FixedBytes64.html",
    "title": "Struct FixedBytes64 | Unity Algorand SDK",
    "keywords": "Struct FixedBytes64 Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct FixedBytes64 Fields byte0062 Declaration public byte byte0062 Field Value Type Description System.Byte byte0062 Declaration public byte byte0062 Field Value Type Description System.Byte byte0063 Declaration public byte byte0063 Field Value Type Description System.Byte byte0063 Declaration public byte byte0063 Field Value Type Description System.Byte offset0000 Declaration public FixedBytes62 offset0000 Field Value Type Description FixedBytes62 offset0000 Declaration public FixedBytes62 offset0000 Field Value Type Description FixedBytes62"
  },
  "api/AlgoSdk.LowLevel.html": {
    "href": "api/AlgoSdk.LowLevel.html",
    "title": "Namespace AlgoSdk.LowLevel | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.LowLevel Classes ByteArray NativeArrayExtensions NativeArrayUtil Structs ByteArrayComparer<T> FixedBytes128 FixedBytes32 FixedBytes64 NativeByteArray A wrapper around that implements IByteArray . Interfaces IArray<T> IByteArray IContiguousArray<T>"
  },
  "api/AlgoSdk.LowLevel.IArray-1.html": {
    "href": "api/AlgoSdk.LowLevel.IArray-1.html",
    "title": "Interface IArray<T> | Unity Algorand SDK",
    "keywords": "Interface IArray<T> Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public interface IArray<T> Type Parameters Name Description T Properties Item[Int32] Declaration T this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description T Item[Int32] Declaration T this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description T Length Declaration int Length { get; } Property Value Type Description System.Int32 Length Declaration int Length { get; } Property Value Type Description System.Int32"
  },
  "api/AlgoSdk.LowLevel.IByteArray.html": {
    "href": "api/AlgoSdk.LowLevel.IByteArray.html",
    "title": "Interface IByteArray | Unity Algorand SDK",
    "keywords": "Interface IByteArray Inherited Members IContiguousArray<Byte>.GetUnsafePtr() IArray<Byte>.Length IArray<Byte>.Item[Int32] Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public interface IByteArray : IContiguousArray<byte>, IArray<byte>"
  },
  "api/AlgoSdk.LowLevel.IContiguousArray-1.html": {
    "href": "api/AlgoSdk.LowLevel.IContiguousArray-1.html",
    "title": "Interface IContiguousArray<T> | Unity Algorand SDK",
    "keywords": "Interface IContiguousArray<T> Inherited Members IArray<T>.Length IArray<T>.Item[Int32] Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public interface IContiguousArray<T> : IArray<T> Type Parameters Name Description T Methods GetUnsafePtr() Declaration void *GetUnsafePtr() Returns Type Description System.Void * GetUnsafePtr() Declaration void *GetUnsafePtr() Returns Type Description System.Void *"
  },
  "api/AlgoSdk.LowLevel.NativeArrayExtensions.html": {
    "href": "api/AlgoSdk.LowLevel.NativeArrayExtensions.html",
    "title": "Class NativeArrayExtensions | Unity Algorand SDK",
    "keywords": "Class NativeArrayExtensions Inheritance System.Object NativeArrayExtensions Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public static class NativeArrayExtensions Methods AsUtf8Text(NativeArray<Byte>, Allocator) Declaration public static NativeText AsUtf8Text(this NativeArray<byte> rawBytes, Allocator allocator) Parameters Type Name Description NativeArray < System.Byte > rawBytes Allocator allocator Returns Type Description NativeText AsUtf8Text(NativeArray<Byte>, Allocator) Declaration public static NativeText AsUtf8Text(this NativeArray<byte> rawBytes, Allocator allocator) Parameters Type Name Description NativeArray < System.Byte > rawBytes Allocator allocator Returns Type Description NativeText AsUtf8Text(NativeArray<Byte>.ReadOnly, Allocator) Declaration public static NativeText AsUtf8Text(this NativeArray<byte>.ReadOnly rawBytes, Allocator allocator) Parameters Type Name Description NativeArray.ReadOnly <> rawBytes Allocator allocator Returns Type Description NativeText AsUtf8Text(NativeArray<Byte>.ReadOnly, Allocator) Declaration public static NativeText AsUtf8Text(this NativeArray<byte>.ReadOnly rawBytes, Allocator allocator) Parameters Type Name Description NativeArray.ReadOnly <> rawBytes Allocator allocator Returns Type Description NativeText"
  },
  "api/AlgoSdk.LowLevel.NativeArrayUtil.html": {
    "href": "api/AlgoSdk.LowLevel.NativeArrayUtil.html",
    "title": "Class NativeArrayUtil | Unity Algorand SDK",
    "keywords": "Class NativeArrayUtil Inheritance System.Object NativeArrayUtil Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public static class NativeArrayUtil Methods ConcatAll(Byte[][], Allocator) Declaration public static NativeArray<byte> ConcatAll(byte[][] byteArrays, Allocator allocator) Parameters Type Name Description System.Byte [][] byteArrays Allocator allocator Returns Type Description NativeArray < System.Byte > ConcatAll(Byte[][], Allocator) Declaration public static NativeArray<byte> ConcatAll(byte[][] byteArrays, Allocator allocator) Parameters Type Name Description System.Byte [][] byteArrays Allocator allocator Returns Type Description NativeArray < System.Byte >"
  },
  "api/AlgoSdk.LowLevel.NativeByteArray.html": {
    "href": "api/AlgoSdk.LowLevel.NativeByteArray.html",
    "title": "Struct NativeByteArray | Unity Algorand SDK",
    "keywords": "Struct NativeByteArray A wrapper around that implements IByteArray . Implements IByteArray IContiguousArray < System.Byte > IArray < System.Byte > System.IEquatable < NativeByteArray > INativeDisposable Namespace : AlgoSdk.LowLevel Assembly : cs.temp.dll.dll Syntax public struct NativeByteArray : IByteArray, IContiguousArray<byte>, IArray<byte>, IEquatable<NativeByteArray> Constructors NativeByteArray(NativeArray<Byte>) Declaration public NativeByteArray(NativeArray<byte> data) Parameters Type Name Description NativeArray < System.Byte > data NativeByteArray(NativeArray<Byte>) Declaration public NativeByteArray(NativeArray<byte> data) Parameters Type Name Description NativeArray < System.Byte > data NativeByteArray(Byte[], Allocator) Declaration public NativeByteArray(byte[] arr, Allocator allocator) Parameters Type Name Description System.Byte [] arr Allocator allocator NativeByteArray(Byte[], Allocator) Declaration public NativeByteArray(byte[] arr, Allocator allocator) Parameters Type Name Description System.Byte [] arr Allocator allocator NativeByteArray(Int32, Allocator) Declaration public NativeByteArray(int capacity, Allocator allocator) Parameters Type Name Description System.Int32 capacity Allocator allocator NativeByteArray(Int32, Allocator) Declaration public NativeByteArray(int capacity, Allocator allocator) Parameters Type Name Description System.Int32 capacity Allocator allocator Properties Data Declaration public readonly NativeArray<byte>.ReadOnly Data { get; } Property Value Type Description NativeArray.ReadOnly <> Data Declaration public readonly NativeArray<byte>.ReadOnly Data { get; } Property Value Type Description NativeArray.ReadOnly <> Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Length Declaration public readonly int Length { get; } Property Value Type Description System.Int32 Length Declaration public readonly int Length { get; } Property Value Type Description System.Int32 Methods Dispose() Declaration public void Dispose() Dispose() Declaration public void Dispose() Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle Equals(NativeByteArray) Declaration public bool Equals(NativeByteArray other) Parameters Type Name Description NativeByteArray other Returns Type Description System.Boolean Equals(NativeByteArray) Declaration public bool Equals(NativeByteArray other) Parameters Type Name Description NativeByteArray other Returns Type Description System.Boolean GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description System.Void * GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description System.Void * Implements IByteArray IContiguousArray<T> IArray<T> System.IEquatable<T> INativeDisposable"
  },
  "api/AlgoSdk.MerkleProof.html": {
    "href": "api/AlgoSdk.MerkleProof.html",
    "title": "Struct MerkleProof | Unity Algorand SDK",
    "keywords": "Struct MerkleProof Proof of transaction in a block. Implements System.IEquatable < MerkleProof > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct MerkleProof : IEquatable<MerkleProof> Fields Proof Merkle proof of transaction membership. Declaration public string Proof Field Value Type Description System.String Proof Merkle proof of transaction membership. Declaration public string Proof Field Value Type Description System.String SignedTransactionHash Hash of SignedTxnInBlock for verifying proof. Declaration public string SignedTransactionHash Field Value Type Description System.String SignedTransactionHash Hash of SignedTxnInBlock for verifying proof. Declaration public string SignedTransactionHash Field Value Type Description System.String TransactionIndex Index of the transaction in the block's payset. Declaration public ulong TransactionIndex Field Value Type Description System.UInt64 TransactionIndex Index of the transaction in the block's payset. Declaration public ulong TransactionIndex Field Value Type Description System.UInt64 Methods Equals(MerkleProof) Declaration public bool Equals(MerkleProof other) Parameters Type Name Description MerkleProof other Returns Type Description System.Boolean Equals(MerkleProof) Declaration public bool Equals(MerkleProof other) Parameters Type Name Description MerkleProof other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.MessagePack.BinaryUtils.html": {
    "href": "api/AlgoSdk.MessagePack.BinaryUtils.html",
    "title": "Class BinaryUtils | Unity Algorand SDK",
    "keywords": "Class BinaryUtils Inheritance System.Object BinaryUtils Namespace : AlgoSdk.MessagePack Assembly : cs.temp.dll.dll Syntax public static class BinaryUtils Methods ReverseEndianness(Byte) Declaration public static byte ReverseEndianness(byte value) Parameters Type Name Description System.Byte value Returns Type Description System.Byte ReverseEndianness(Byte) Declaration public static byte ReverseEndianness(byte value) Parameters Type Name Description System.Byte value Returns Type Description System.Byte ReverseEndianness(Int16) Declaration public static short ReverseEndianness(short value) Parameters Type Name Description System.Int16 value Returns Type Description System.Int16 ReverseEndianness(Int16) Declaration public static short ReverseEndianness(short value) Parameters Type Name Description System.Int16 value Returns Type Description System.Int16 ReverseEndianness(Int32) Declaration public static int ReverseEndianness(int value) Parameters Type Name Description System.Int32 value Returns Type Description System.Int32 ReverseEndianness(Int32) Declaration public static int ReverseEndianness(int value) Parameters Type Name Description System.Int32 value Returns Type Description System.Int32 ReverseEndianness(Int64) Declaration public static long ReverseEndianness(long value) Parameters Type Name Description System.Int64 value Returns Type Description System.Int64 ReverseEndianness(Int64) Declaration public static long ReverseEndianness(long value) Parameters Type Name Description System.Int64 value Returns Type Description System.Int64 ReverseEndianness(SByte) Declaration public static sbyte ReverseEndianness(sbyte value) Parameters Type Name Description System.SByte value Returns Type Description System.SByte ReverseEndianness(SByte) Declaration public static sbyte ReverseEndianness(sbyte value) Parameters Type Name Description System.SByte value Returns Type Description System.SByte ReverseEndianness(UInt16) Declaration public static ushort ReverseEndianness(ushort value) Parameters Type Name Description System.UInt16 value Returns Type Description System.UInt16 ReverseEndianness(UInt16) Declaration public static ushort ReverseEndianness(ushort value) Parameters Type Name Description System.UInt16 value Returns Type Description System.UInt16 ReverseEndianness(UInt32) Declaration public static uint ReverseEndianness(uint value) Parameters Type Name Description System.UInt32 value Returns Type Description System.UInt32 ReverseEndianness(UInt32) Declaration public static uint ReverseEndianness(uint value) Parameters Type Name Description System.UInt32 value Returns Type Description System.UInt32 ReverseEndianness(UInt64) Declaration public static ulong ReverseEndianness(ulong value) Parameters Type Name Description System.UInt64 value Returns Type Description System.UInt64 ReverseEndianness(UInt64) Declaration public static ulong ReverseEndianness(ulong value) Parameters Type Name Description System.UInt64 value Returns Type Description System.UInt64"
  },
  "api/AlgoSdk.MessagePack.ExtensionHeader.html": {
    "href": "api/AlgoSdk.MessagePack.ExtensionHeader.html",
    "title": "Struct ExtensionHeader | Unity Algorand SDK",
    "keywords": "Struct ExtensionHeader Implements System.IEquatable < ExtensionHeader > Namespace : AlgoSdk.MessagePack Assembly : cs.temp.dll.dll Syntax public struct ExtensionHeader : IEquatable<ExtensionHeader> Constructors ExtensionHeader(SByte, Int32) Declaration public ExtensionHeader(sbyte typeCode, int length) Parameters Type Name Description System.SByte typeCode System.Int32 length ExtensionHeader(SByte, Int32) Declaration public ExtensionHeader(sbyte typeCode, int length) Parameters Type Name Description System.SByte typeCode System.Int32 length ExtensionHeader(SByte, UInt32) Declaration public ExtensionHeader(sbyte typeCode, uint length) Parameters Type Name Description System.SByte typeCode System.UInt32 length ExtensionHeader(SByte, UInt32) Declaration public ExtensionHeader(sbyte typeCode, uint length) Parameters Type Name Description System.SByte typeCode System.UInt32 length Fields Length Declaration public readonly uint Length Field Value Type Description System.UInt32 Length Declaration public readonly uint Length Field Value Type Description System.UInt32 TypeCode Declaration public readonly sbyte TypeCode Field Value Type Description System.SByte TypeCode Declaration public readonly sbyte TypeCode Field Value Type Description System.SByte Methods Equals(ExtensionHeader) Declaration public bool Equals(ExtensionHeader other) Parameters Type Name Description ExtensionHeader other Returns Type Description System.Boolean Equals(ExtensionHeader) Declaration public bool Equals(ExtensionHeader other) Parameters Type Name Description ExtensionHeader other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.MessagePack.html": {
    "href": "api/AlgoSdk.MessagePack.html",
    "title": "Namespace AlgoSdk.MessagePack | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.MessagePack Classes BinaryUtils MessagePackCode MessagePackRange ReservedMessagePackExtensionTypeCode Structs ExtensionHeader MessagePackReader MessagePackWriter Enums MessagePackType MessagePackType"
  },
  "api/AlgoSdk.MessagePack.MessagePackCode.html": {
    "href": "api/AlgoSdk.MessagePack.MessagePackCode.html",
    "title": "Class MessagePackCode | Unity Algorand SDK",
    "keywords": "Class MessagePackCode Inheritance System.Object MessagePackCode Namespace : AlgoSdk.MessagePack Assembly : cs.temp.dll.dll Syntax public static class MessagePackCode Fields Array16 Declaration public const byte Array16 = 220 Field Value Type Description System.Byte Array16 Declaration public const byte Array16 = 220 Field Value Type Description System.Byte Array32 Declaration public const byte Array32 = 221 Field Value Type Description System.Byte Array32 Declaration public const byte Array32 = 221 Field Value Type Description System.Byte Bin16 Declaration public const byte Bin16 = 197 Field Value Type Description System.Byte Bin16 Declaration public const byte Bin16 = 197 Field Value Type Description System.Byte Bin32 Declaration public const byte Bin32 = 198 Field Value Type Description System.Byte Bin32 Declaration public const byte Bin32 = 198 Field Value Type Description System.Byte Bin8 Declaration public const byte Bin8 = 196 Field Value Type Description System.Byte Bin8 Declaration public const byte Bin8 = 196 Field Value Type Description System.Byte Ext16 Declaration public const byte Ext16 = 200 Field Value Type Description System.Byte Ext16 Declaration public const byte Ext16 = 200 Field Value Type Description System.Byte Ext32 Declaration public const byte Ext32 = 201 Field Value Type Description System.Byte Ext32 Declaration public const byte Ext32 = 201 Field Value Type Description System.Byte Ext8 Declaration public const byte Ext8 = 199 Field Value Type Description System.Byte Ext8 Declaration public const byte Ext8 = 199 Field Value Type Description System.Byte False Declaration public const byte False = 194 Field Value Type Description System.Byte False Declaration public const byte False = 194 Field Value Type Description System.Byte FixExt1 Declaration public const byte FixExt1 = 212 Field Value Type Description System.Byte FixExt1 Declaration public const byte FixExt1 = 212 Field Value Type Description System.Byte FixExt16 Declaration public const byte FixExt16 = 216 Field Value Type Description System.Byte FixExt16 Declaration public const byte FixExt16 = 216 Field Value Type Description System.Byte FixExt2 Declaration public const byte FixExt2 = 213 Field Value Type Description System.Byte FixExt2 Declaration public const byte FixExt2 = 213 Field Value Type Description System.Byte FixExt4 Declaration public const byte FixExt4 = 214 Field Value Type Description System.Byte FixExt4 Declaration public const byte FixExt4 = 214 Field Value Type Description System.Byte FixExt8 Declaration public const byte FixExt8 = 215 Field Value Type Description System.Byte FixExt8 Declaration public const byte FixExt8 = 215 Field Value Type Description System.Byte Float32 Declaration public const byte Float32 = 202 Field Value Type Description System.Byte Float32 Declaration public const byte Float32 = 202 Field Value Type Description System.Byte Float64 Declaration public const byte Float64 = 203 Field Value Type Description System.Byte Float64 Declaration public const byte Float64 = 203 Field Value Type Description System.Byte Int16 Declaration public const byte Int16 = 209 Field Value Type Description System.Byte Int16 Declaration public const byte Int16 = 209 Field Value Type Description System.Byte Int32 Declaration public const byte Int32 = 210 Field Value Type Description System.Byte Int32 Declaration public const byte Int32 = 210 Field Value Type Description System.Byte Int64 Declaration public const byte Int64 = 211 Field Value Type Description System.Byte Int64 Declaration public const byte Int64 = 211 Field Value Type Description System.Byte Int8 Declaration public const byte Int8 = 208 Field Value Type Description System.Byte Int8 Declaration public const byte Int8 = 208 Field Value Type Description System.Byte Map16 Declaration public const byte Map16 = 222 Field Value Type Description System.Byte Map16 Declaration public const byte Map16 = 222 Field Value Type Description System.Byte Map32 Declaration public const byte Map32 = 223 Field Value Type Description System.Byte Map32 Declaration public const byte Map32 = 223 Field Value Type Description System.Byte MaxFixArray Declaration public const byte MaxFixArray = 159 Field Value Type Description System.Byte MaxFixArray Declaration public const byte MaxFixArray = 159 Field Value Type Description System.Byte MaxFixInt Declaration public const byte MaxFixInt = 127 Field Value Type Description System.Byte MaxFixInt Declaration public const byte MaxFixInt = 127 Field Value Type Description System.Byte MaxFixMap Declaration public const byte MaxFixMap = 143 Field Value Type Description System.Byte MaxFixMap Declaration public const byte MaxFixMap = 143 Field Value Type Description System.Byte MaxFixStr Declaration public const byte MaxFixStr = 191 Field Value Type Description System.Byte MaxFixStr Declaration public const byte MaxFixStr = 191 Field Value Type Description System.Byte MaxNegativeFixInt Declaration public const byte MaxNegativeFixInt = 255 Field Value Type Description System.Byte MaxNegativeFixInt Declaration public const byte MaxNegativeFixInt = 255 Field Value Type Description System.Byte MinFixArray Declaration public const byte MinFixArray = 144 Field Value Type Description System.Byte MinFixArray Declaration public const byte MinFixArray = 144 Field Value Type Description System.Byte MinFixInt Declaration public const byte MinFixInt = 0 Field Value Type Description System.Byte MinFixInt Declaration public const byte MinFixInt = 0 Field Value Type Description System.Byte MinFixMap Declaration public const byte MinFixMap = 128 Field Value Type Description System.Byte MinFixMap Declaration public const byte MinFixMap = 128 Field Value Type Description System.Byte MinFixStr Declaration public const byte MinFixStr = 160 Field Value Type Description System.Byte MinFixStr Declaration public const byte MinFixStr = 160 Field Value Type Description System.Byte MinNegativeFixInt Declaration public const byte MinNegativeFixInt = 224 Field Value Type Description System.Byte MinNegativeFixInt Declaration public const byte MinNegativeFixInt = 224 Field Value Type Description System.Byte NeverUsed Declaration public const byte NeverUsed = 193 Field Value Type Description System.Byte NeverUsed Declaration public const byte NeverUsed = 193 Field Value Type Description System.Byte Nil Declaration public const byte Nil = 192 Field Value Type Description System.Byte Nil Declaration public const byte Nil = 192 Field Value Type Description System.Byte Str16 Declaration public const byte Str16 = 218 Field Value Type Description System.Byte Str16 Declaration public const byte Str16 = 218 Field Value Type Description System.Byte Str32 Declaration public const byte Str32 = 219 Field Value Type Description System.Byte Str32 Declaration public const byte Str32 = 219 Field Value Type Description System.Byte Str8 Declaration public const byte Str8 = 217 Field Value Type Description System.Byte Str8 Declaration public const byte Str8 = 217 Field Value Type Description System.Byte True Declaration public const byte True = 195 Field Value Type Description System.Byte True Declaration public const byte True = 195 Field Value Type Description System.Byte UInt16 Declaration public const byte UInt16 = 205 Field Value Type Description System.Byte UInt16 Declaration public const byte UInt16 = 205 Field Value Type Description System.Byte UInt32 Declaration public const byte UInt32 = 206 Field Value Type Description System.Byte UInt32 Declaration public const byte UInt32 = 206 Field Value Type Description System.Byte UInt64 Declaration public const byte UInt64 = 207 Field Value Type Description System.Byte UInt64 Declaration public const byte UInt64 = 207 Field Value Type Description System.Byte UInt8 Declaration public const byte UInt8 = 204 Field Value Type Description System.Byte UInt8 Declaration public const byte UInt8 = 204 Field Value Type Description System.Byte Methods ToFormatName(Byte) Declaration public static string ToFormatName(byte code) Parameters Type Name Description System.Byte code Returns Type Description System.String ToFormatName(Byte) Declaration public static string ToFormatName(byte code) Parameters Type Name Description System.Byte code Returns Type Description System.String ToMessagePackType(Byte) Declaration public static MessagePackType ToMessagePackType(this byte code) Parameters Type Name Description System.Byte code Returns Type Description MessagePackType ToMessagePackType(Byte) Declaration public static MessagePackType ToMessagePackType(this byte code) Parameters Type Name Description System.Byte code Returns Type Description MessagePackType"
  },
  "api/AlgoSdk.MessagePack.MessagePackRange.html": {
    "href": "api/AlgoSdk.MessagePack.MessagePackRange.html",
    "title": "Class MessagePackRange | Unity Algorand SDK",
    "keywords": "Class MessagePackRange Inheritance System.Object MessagePackRange Namespace : AlgoSdk.MessagePack Assembly : cs.temp.dll.dll Syntax public static class MessagePackRange Fields MaxFixArrayCount Declaration public const int MaxFixArrayCount = 15 Field Value Type Description System.Int32 MaxFixArrayCount Declaration public const int MaxFixArrayCount = 15 Field Value Type Description System.Int32 MaxFixMapCount Declaration public const int MaxFixMapCount = 15 Field Value Type Description System.Int32 MaxFixMapCount Declaration public const int MaxFixMapCount = 15 Field Value Type Description System.Int32 MaxFixNegativeInt Declaration public const int MaxFixNegativeInt = -1 Field Value Type Description System.Int32 MaxFixNegativeInt Declaration public const int MaxFixNegativeInt = -1 Field Value Type Description System.Int32 MaxFixPositiveInt Declaration public const int MaxFixPositiveInt = 127 Field Value Type Description System.Int32 MaxFixPositiveInt Declaration public const int MaxFixPositiveInt = 127 Field Value Type Description System.Int32 MaxFixStringLength Declaration public const int MaxFixStringLength = 31 Field Value Type Description System.Int32 MaxFixStringLength Declaration public const int MaxFixStringLength = 31 Field Value Type Description System.Int32 MinFixNegativeInt Declaration public const int MinFixNegativeInt = -32 Field Value Type Description System.Int32 MinFixNegativeInt Declaration public const int MinFixNegativeInt = -32 Field Value Type Description System.Int32 MinFixStringLength Declaration public const int MinFixStringLength = 0 Field Value Type Description System.Int32 MinFixStringLength Declaration public const int MinFixStringLength = 0 Field Value Type Description System.Int32"
  },
  "api/AlgoSdk.MessagePack.MessagePackReader.html": {
    "href": "api/AlgoSdk.MessagePack.MessagePackReader.html",
    "title": "Struct MessagePackReader | Unity Algorand SDK",
    "keywords": "Struct MessagePackReader Namespace : AlgoSdk.MessagePack Assembly : cs.temp.dll.dll Syntax public ref struct MessagePackReader Constructors MessagePackReader(NativeArray<Byte>) Declaration public MessagePackReader(NativeArray<byte> data) Parameters Type Name Description NativeArray < System.Byte > data MessagePackReader(NativeArray<Byte>) Declaration public MessagePackReader(NativeArray<byte> data) Parameters Type Name Description NativeArray < System.Byte > data Properties Position Declaration public int Position { get; set; } Property Value Type Description System.Int32 Position Declaration public int Position { get; set; } Property Value Type Description System.Int32 Methods Peek() Declaration public byte Peek() Returns Type Description System.Byte Peek() Declaration public byte Peek() Returns Type Description System.Byte ReadArrayHeader() Declaration public int ReadArrayHeader() Returns Type Description System.Int32 ReadArrayHeader() Declaration public int ReadArrayHeader() Returns Type Description System.Int32 ReadBool() Declaration public bool ReadBool() Returns Type Description System.Boolean ReadBool() Declaration public bool ReadBool() Returns Type Description System.Boolean ReadByte() Declaration public byte ReadByte() Returns Type Description System.Byte ReadByte() Declaration public byte ReadByte() Returns Type Description System.Byte ReadBytes() Declaration public NativeSlice<byte> ReadBytes() Returns Type Description NativeSlice < System.Byte > ReadBytes() Declaration public NativeSlice<byte> ReadBytes() Returns Type Description NativeSlice < System.Byte > ReadBytes<T>() Declaration public T ReadBytes<T>() where T : struct, IByteArray Returns Type Description T Type Parameters Name Description T ReadBytes<T>() Declaration public T ReadBytes<T>() where T : struct, IByteArray Returns Type Description T Type Parameters Name Description T ReadInt16() Declaration public short ReadInt16() Returns Type Description System.Int16 ReadInt16() Declaration public short ReadInt16() Returns Type Description System.Int16 ReadInt32() Declaration public int ReadInt32() Returns Type Description System.Int32 ReadInt32() Declaration public int ReadInt32() Returns Type Description System.Int32 ReadInt64() Declaration public long ReadInt64() Returns Type Description System.Int64 ReadInt64() Declaration public long ReadInt64() Returns Type Description System.Int64 ReadInt8() Declaration public sbyte ReadInt8() Returns Type Description System.SByte ReadInt8() Declaration public sbyte ReadInt8() Returns Type Description System.SByte ReadMapHeader() Declaration public int ReadMapHeader() Returns Type Description System.Int32 ReadMapHeader() Declaration public int ReadMapHeader() Returns Type Description System.Int32 ReadRaw(NativeList<Byte>) Declaration public void ReadRaw(NativeList<byte> bytes) Parameters Type Name Description NativeList < System.Byte > bytes ReadRaw(NativeList<Byte>) Declaration public void ReadRaw(NativeList<byte> bytes) Parameters Type Name Description NativeList < System.Byte > bytes ReadSByte() Declaration public sbyte ReadSByte() Returns Type Description System.SByte ReadSByte() Declaration public sbyte ReadSByte() Returns Type Description System.SByte ReadString(out String) Declaration public void ReadString(out string s) Parameters Type Name Description System.String s ReadString(out String) Declaration public void ReadString(out string s) Parameters Type Name Description System.String s ReadString<T>(ref T) Declaration public void ReadString<T>(ref T fs) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Type Parameters Name Description T ReadString<T>(ref T) Declaration public void ReadString<T>(ref T fs) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Type Parameters Name Description T ReadUInt16() Declaration public ushort ReadUInt16() Returns Type Description System.UInt16 ReadUInt16() Declaration public ushort ReadUInt16() Returns Type Description System.UInt16 ReadUInt32() Declaration public uint ReadUInt32() Returns Type Description System.UInt32 ReadUInt32() Declaration public uint ReadUInt32() Returns Type Description System.UInt32 ReadUInt64() Declaration public ulong ReadUInt64() Returns Type Description System.UInt64 ReadUInt64() Declaration public ulong ReadUInt64() Returns Type Description System.UInt64 ReadUInt8() Declaration public byte ReadUInt8() Returns Type Description System.Byte ReadUInt8() Declaration public byte ReadUInt8() Returns Type Description System.Byte Skip() Declaration public void Skip() Skip() Declaration public void Skip() TryPeek(out Byte) Declaration public bool TryPeek(out byte code) Parameters Type Name Description System.Byte code Returns Type Description System.Boolean TryPeek(out Byte) Declaration public bool TryPeek(out byte code) Parameters Type Name Description System.Byte code Returns Type Description System.Boolean TryRead(out Byte) Declaration public bool TryRead(out byte code) Parameters Type Name Description System.Byte code Returns Type Description System.Boolean TryRead(out Byte) Declaration public bool TryRead(out byte code) Parameters Type Name Description System.Byte code Returns Type Description System.Boolean TryRead(out SByte) Declaration public bool TryRead(out sbyte value) Parameters Type Name Description System.SByte value Returns Type Description System.Boolean TryRead(out SByte) Declaration public bool TryRead(out sbyte value) Parameters Type Name Description System.SByte value Returns Type Description System.Boolean TryReadArrayHeader(out Int32) Declaration public bool TryReadArrayHeader(out int count) Parameters Type Name Description System.Int32 count Returns Type Description System.Boolean TryReadArrayHeader(out Int32) Declaration public bool TryReadArrayHeader(out int count) Parameters Type Name Description System.Int32 count Returns Type Description System.Boolean TryReadBigEndian(out Int16) Declaration public bool TryReadBigEndian(out short value) Parameters Type Name Description System.Int16 value Returns Type Description System.Boolean TryReadBigEndian(out Int16) Declaration public bool TryReadBigEndian(out short value) Parameters Type Name Description System.Int16 value Returns Type Description System.Boolean TryReadBigEndian(out Int32) Declaration public bool TryReadBigEndian(out int value) Parameters Type Name Description System.Int32 value Returns Type Description System.Boolean TryReadBigEndian(out Int32) Declaration public bool TryReadBigEndian(out int value) Parameters Type Name Description System.Int32 value Returns Type Description System.Boolean TryReadBigEndian(out Int64) Declaration public bool TryReadBigEndian(out long value) Parameters Type Name Description System.Int64 value Returns Type Description System.Boolean TryReadBigEndian(out Int64) Declaration public bool TryReadBigEndian(out long value) Parameters Type Name Description System.Int64 value Returns Type Description System.Boolean TryReadBigEndian(out UInt16) Declaration public bool TryReadBigEndian(out ushort value) Parameters Type Name Description System.UInt16 value Returns Type Description System.Boolean TryReadBigEndian(out UInt16) Declaration public bool TryReadBigEndian(out ushort value) Parameters Type Name Description System.UInt16 value Returns Type Description System.Boolean TryReadBigEndian(out UInt32) Declaration public bool TryReadBigEndian(out uint value) Parameters Type Name Description System.UInt32 value Returns Type Description System.Boolean TryReadBigEndian(out UInt32) Declaration public bool TryReadBigEndian(out uint value) Parameters Type Name Description System.UInt32 value Returns Type Description System.Boolean TryReadBigEndian(out UInt64) Declaration public bool TryReadBigEndian(out ulong value) Parameters Type Name Description System.UInt64 value Returns Type Description System.Boolean TryReadBigEndian(out UInt64) Declaration public bool TryReadBigEndian(out ulong value) Parameters Type Name Description System.UInt64 value Returns Type Description System.Boolean TryReadBytes(out NativeSlice<Byte>) Declaration public bool TryReadBytes(out NativeSlice<byte> bytes) Parameters Type Name Description NativeSlice < System.Byte > bytes Returns Type Description System.Boolean TryReadBytes(out NativeSlice<Byte>) Declaration public bool TryReadBytes(out NativeSlice<byte> bytes) Parameters Type Name Description NativeSlice < System.Byte > bytes Returns Type Description System.Boolean TryReadExtensionFormatHeader(out ExtensionHeader) Declaration public bool TryReadExtensionFormatHeader(out ExtensionHeader header) Parameters Type Name Description ExtensionHeader header Returns Type Description System.Boolean TryReadExtensionFormatHeader(out ExtensionHeader) Declaration public bool TryReadExtensionFormatHeader(out ExtensionHeader header) Parameters Type Name Description ExtensionHeader header Returns Type Description System.Boolean TryReadMapHeader(out Int32) Declaration public bool TryReadMapHeader(out int count) Parameters Type Name Description System.Int32 count Returns Type Description System.Boolean TryReadMapHeader(out Int32) Declaration public bool TryReadMapHeader(out int count) Parameters Type Name Description System.Int32 count Returns Type Description System.Boolean TryReadNil() Declaration public bool TryReadNil() Returns Type Description System.Boolean TryReadNil() Declaration public bool TryReadNil() Returns Type Description System.Boolean TryReadRaw(NativeList<Byte>) Declaration public bool TryReadRaw(NativeList<byte> bytes) Parameters Type Name Description NativeList < System.Byte > bytes Returns Type Description System.Boolean TryReadRaw(NativeList<Byte>) Declaration public bool TryReadRaw(NativeList<byte> bytes) Parameters Type Name Description NativeList < System.Byte > bytes Returns Type Description System.Boolean TryReadString<T>(ref T) Declaration public bool TryReadString<T>(ref T fs) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Returns Type Description System.Boolean Type Parameters Name Description T TryReadString<T>(ref T) Declaration public bool TryReadString<T>(ref T fs) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Returns Type Description System.Boolean Type Parameters Name Description T TrySkip() Declaration public bool TrySkip() Returns Type Description System.Boolean TrySkip() Declaration public bool TrySkip() Returns Type Description System.Boolean UnsafeReadBytes(Void*, Int32) Declaration public void UnsafeReadBytes(void *ptr, int length) Parameters Type Name Description System.Void * ptr System.Int32 length UnsafeReadBytes(Void*, Int32) Declaration public void UnsafeReadBytes(void *ptr, int length) Parameters Type Name Description System.Void * ptr System.Int32 length"
  },
  "api/AlgoSdk.MessagePack.MessagePackType.html": {
    "href": "api/AlgoSdk.MessagePack.MessagePackType.html",
    "title": "Enum MessagePackType | Unity Algorand SDK",
    "keywords": "Enum MessagePackType Namespace : AlgoSdk.MessagePack Assembly : cs.temp.dll.dll Syntax public enum MessagePackType : byte Fields Name Description Array Binary Boolean Extension Float Integer Map Nil String Unknown"
  },
  "api/AlgoSdk.MessagePack.MessagePackType_1.html": {
    "href": "api/AlgoSdk.MessagePack.MessagePackType_1.html",
    "title": "Enum MessagePackType | Unity Algorand SDK",
    "keywords": "Enum MessagePackType Namespace : AlgoSdk.MessagePack Assembly : cs.temp.dll.dll Syntax public enum MessagePackType : byte Fields Name Description Array Binary Boolean Extension Float Integer Map Nil String Unknown"
  },
  "api/AlgoSdk.MessagePack.MessagePackWriter.html": {
    "href": "api/AlgoSdk.MessagePack.MessagePackWriter.html",
    "title": "Struct MessagePackWriter | Unity Algorand SDK",
    "keywords": "Struct MessagePackWriter Implements INativeDisposable Namespace : AlgoSdk.MessagePack Assembly : cs.temp.dll.dll Syntax public struct MessagePackWriter Constructors MessagePackWriter(Allocator) Declaration public MessagePackWriter(Allocator allocator) Parameters Type Name Description Allocator allocator MessagePackWriter(Allocator) Declaration public MessagePackWriter(Allocator allocator) Parameters Type Name Description Allocator allocator Properties Data Declaration public readonly NativeList<byte> Data { get; } Property Value Type Description NativeList < System.Byte > Data Declaration public readonly NativeList<byte> Data { get; } Property Value Type Description NativeList < System.Byte > Methods Dispose() Declaration public void Dispose() Dispose() Declaration public void Dispose() Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle Dispose(JobHandle) Declaration public JobHandle Dispose(JobHandle inputDeps) Parameters Type Name Description JobHandle inputDeps Returns Type Description JobHandle Write(Boolean) Declaration public void Write(bool value) Parameters Type Name Description System.Boolean value Write(Boolean) Declaration public void Write(bool value) Parameters Type Name Description System.Boolean value Write(Byte) Declaration public void Write(byte value) Parameters Type Name Description System.Byte value Write(Byte) Declaration public void Write(byte value) Parameters Type Name Description System.Byte value Write(Int16) Declaration public void Write(short value) Parameters Type Name Description System.Int16 value Write(Int16) Declaration public void Write(short value) Parameters Type Name Description System.Int16 value Write(Int32) Declaration public void Write(int value) Parameters Type Name Description System.Int32 value Write(Int32) Declaration public void Write(int value) Parameters Type Name Description System.Int32 value Write(Int64) Declaration public void Write(long value) Parameters Type Name Description System.Int64 value Write(Int64) Declaration public void Write(long value) Parameters Type Name Description System.Int64 value Write(SByte) Declaration public void Write(sbyte value) Parameters Type Name Description System.SByte value Write(SByte) Declaration public void Write(sbyte value) Parameters Type Name Description System.SByte value Write(UInt16) Declaration public void Write(ushort value) Parameters Type Name Description System.UInt16 value Write(UInt16) Declaration public void Write(ushort value) Parameters Type Name Description System.UInt16 value Write(UInt32) Declaration public void Write(uint value) Parameters Type Name Description System.UInt32 value Write(UInt32) Declaration public void Write(uint value) Parameters Type Name Description System.UInt32 value Write(UInt64) Declaration public void Write(ulong value) Parameters Type Name Description System.UInt64 value Write(UInt64) Declaration public void Write(ulong value) Parameters Type Name Description System.UInt64 value WriteArrayHeader(Int32) Declaration public void WriteArrayHeader(int count) Parameters Type Name Description System.Int32 count WriteArrayHeader(Int32) Declaration public void WriteArrayHeader(int count) Parameters Type Name Description System.Int32 count WriteArrayHeader(UInt32) Declaration public void WriteArrayHeader(uint count) Parameters Type Name Description System.UInt32 count WriteArrayHeader(UInt32) Declaration public void WriteArrayHeader(uint count) Parameters Type Name Description System.UInt32 count WriteBigEndian(Int16) Declaration public void WriteBigEndian(short value) Parameters Type Name Description System.Int16 value WriteBigEndian(Int16) Declaration public void WriteBigEndian(short value) Parameters Type Name Description System.Int16 value WriteBigEndian(Int32) Declaration public void WriteBigEndian(int value) Parameters Type Name Description System.Int32 value WriteBigEndian(Int32) Declaration public void WriteBigEndian(int value) Parameters Type Name Description System.Int32 value WriteBigEndian(Int64) Declaration public void WriteBigEndian(long value) Parameters Type Name Description System.Int64 value WriteBigEndian(Int64) Declaration public void WriteBigEndian(long value) Parameters Type Name Description System.Int64 value WriteBigEndian(UInt16) Declaration public void WriteBigEndian(ushort value) Parameters Type Name Description System.UInt16 value WriteBigEndian(UInt16) Declaration public void WriteBigEndian(ushort value) Parameters Type Name Description System.UInt16 value WriteBigEndian(UInt32) Declaration public void WriteBigEndian(uint value) Parameters Type Name Description System.UInt32 value WriteBigEndian(UInt32) Declaration public void WriteBigEndian(uint value) Parameters Type Name Description System.UInt32 value WriteBigEndian(UInt64) Declaration public void WriteBigEndian(ulong value) Parameters Type Name Description System.UInt64 value WriteBigEndian(UInt64) Declaration public void WriteBigEndian(ulong value) Parameters Type Name Description System.UInt64 value WriteBytes(Byte[]) Declaration public void WriteBytes(byte[] arr) Parameters Type Name Description System.Byte [] arr WriteBytes(Byte[]) Declaration public void WriteBytes(byte[] arr) Parameters Type Name Description System.Byte [] arr WriteBytes(Void*, Int32) Declaration public void WriteBytes(void *buffer, int length) Parameters Type Name Description System.Void * buffer System.Int32 length WriteBytes(Void*, Int32) Declaration public void WriteBytes(void *buffer, int length) Parameters Type Name Description System.Void * buffer System.Int32 length WriteBytesHeader(Int32) Declaration public void WriteBytesHeader(int length) Parameters Type Name Description System.Int32 length WriteBytesHeader(Int32) Declaration public void WriteBytesHeader(int length) Parameters Type Name Description System.Int32 length WriteMapHeader(Int32) Declaration public void WriteMapHeader(int length) Parameters Type Name Description System.Int32 length WriteMapHeader(Int32) Declaration public void WriteMapHeader(int length) Parameters Type Name Description System.Int32 length WriteMapHeader(UInt32) Declaration public void WriteMapHeader(uint length) Parameters Type Name Description System.UInt32 length WriteMapHeader(UInt32) Declaration public void WriteMapHeader(uint length) Parameters Type Name Description System.UInt32 length WriteNil() Declaration public void WriteNil() WriteNil() Declaration public void WriteNil() WriteRaw(NativeArray<Byte>) Declaration public void WriteRaw(NativeArray<byte> bytes) Parameters Type Name Description NativeArray < System.Byte > bytes WriteRaw(NativeArray<Byte>) Declaration public void WriteRaw(NativeArray<byte> bytes) Parameters Type Name Description NativeArray < System.Byte > bytes WriteString(String) Declaration public void WriteString(string s) Parameters Type Name Description System.String s WriteString(String) Declaration public void WriteString(string s) Parameters Type Name Description System.String s WriteString<T>(T) Declaration public void WriteString<T>(T fs) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Type Parameters Name Description T WriteString<T>(T) Declaration public void WriteString<T>(T fs) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Type Parameters Name Description T WriteStringHeader(Int32) Declaration public void WriteStringHeader(int length) Parameters Type Name Description System.Int32 length WriteStringHeader(Int32) Declaration public void WriteStringHeader(int length) Parameters Type Name Description System.Int32 length Implements INativeDisposable"
  },
  "api/AlgoSdk.MessagePack.ReservedMessagePackExtensionTypeCode.html": {
    "href": "api/AlgoSdk.MessagePack.ReservedMessagePackExtensionTypeCode.html",
    "title": "Class ReservedMessagePackExtensionTypeCode | Unity Algorand SDK",
    "keywords": "Class ReservedMessagePackExtensionTypeCode Inheritance System.Object ReservedMessagePackExtensionTypeCode Namespace : AlgoSdk.MessagePack Assembly : cs.temp.dll.dll Syntax public static class ReservedMessagePackExtensionTypeCode Fields DateTime Declaration public const sbyte DateTime = -1 Field Value Type Description System.SByte DateTime Declaration public const sbyte DateTime = -1 Field Value Type Description System.SByte"
  },
  "api/AlgoSdk.MiniAssetHolding.html": {
    "href": "api/AlgoSdk.MiniAssetHolding.html",
    "title": "Struct MiniAssetHolding | Unity Algorand SDK",
    "keywords": "Struct MiniAssetHolding A simplified version of AssetHolding Implements System.IEquatable < MiniAssetHolding > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct MiniAssetHolding : IEquatable<MiniAssetHolding> Fields Address Declaration public Address Address Field Value Type Description Address Address Declaration public Address Address Field Value Type Description Address Amount Declaration public ulong Amount Field Value Type Description System.UInt64 Amount Declaration public ulong Amount Field Value Type Description System.UInt64 Deleted Whether or not this asset holding is currently deleted from its account. Declaration public Optional<bool> Deleted Field Value Type Description Optional < System.Boolean > Deleted Whether or not this asset holding is currently deleted from its account. Declaration public Optional<bool> Deleted Field Value Type Description Optional < System.Boolean > IsFrozen Declaration public Optional<bool> IsFrozen Field Value Type Description Optional < System.Boolean > IsFrozen Declaration public Optional<bool> IsFrozen Field Value Type Description Optional < System.Boolean > OptedInAtRound Round during which the account opted into the asset. Declaration public ulong OptedInAtRound Field Value Type Description System.UInt64 OptedInAtRound Round during which the account opted into the asset. Declaration public ulong OptedInAtRound Field Value Type Description System.UInt64 OptedOutAtRound Round during which the account opted out of the asset. Declaration public ulong OptedOutAtRound Field Value Type Description System.UInt64 OptedOutAtRound Round during which the account opted out of the asset. Declaration public ulong OptedOutAtRound Field Value Type Description System.UInt64 Methods Equals(MiniAssetHolding) Declaration public bool Equals(MiniAssetHolding other) Parameters Type Name Description MiniAssetHolding other Returns Type Description System.Boolean Equals(MiniAssetHolding) Declaration public bool Equals(MiniAssetHolding other) Parameters Type Name Description MiniAssetHolding other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.Mnemonic.html": {
    "href": "api/AlgoSdk.Mnemonic.html",
    "title": "Struct Mnemonic | Unity Algorand SDK",
    "keywords": "Struct Mnemonic Byte struct representing a private key encoded with Length words. Implements System.IEquatable < Mnemonic > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct Mnemonic : IEquatable<Mnemonic> Fields BitsPerWord The number of bits encoded by each word. Declaration public const int BitsPerWord = 11 Field Value Type Description System.Int32 BitsPerWord The number of bits encoded by each word. Declaration public const int BitsPerWord = 11 Field Value Type Description System.Int32 ChecksumIndex Index of the word used for the checksum. Declaration public const int ChecksumIndex = default(int) Field Value Type Description System.Int32 ChecksumIndex Index of the word used for the checksum. Declaration public const int ChecksumIndex = default(int) Field Value Type Description System.Int32 Length Number of words contained in the mnemonic. Declaration public const int Length = 25 Field Value Type Description System.Int32 Length Number of words contained in the mnemonic. Declaration public const int Length = 25 Field Value Type Description System.Int32 SizeBytes Size of Mnemonic in bytes. Declaration public const int SizeBytes = 50 Field Value Type Description System.Int32 SizeBytes Size of Mnemonic in bytes. Declaration public const int SizeBytes = 50 Field Value Type Description System.Int32 Properties Item[Int32] The word at a given index. Declaration public Mnemonic.Word this[int index] { get; set; } Parameters Type Name Description System.Int32 index The index of the word. Property Value Type Description Mnemonic.Word A word in the set of possible mnemonic words. Item[Int32] The word at a given index. Declaration public Mnemonic.Word this[int index] { get; set; } Parameters Type Name Description System.Int32 index The index of the word. Property Value Type Description Mnemonic.Word A word in the set of possible mnemonic words. Methods Equals(Mnemonic) Declaration public bool Equals(Mnemonic other) Parameters Type Name Description Mnemonic other Returns Type Description System.Boolean Equals(Mnemonic) Declaration public bool Equals(Mnemonic other) Parameters Type Name Description Mnemonic other Returns Type Description System.Boolean FromKey(PrivateKey) Declaration public static Mnemonic FromKey(PrivateKey key) Parameters Type Name Description PrivateKey key Returns Type Description Mnemonic FromKey(PrivateKey) Declaration public static Mnemonic FromKey(PrivateKey key) Parameters Type Name Description PrivateKey key Returns Type Description Mnemonic FromString(String) Declaration public static Mnemonic FromString(string mnemonicString) Parameters Type Name Description System.String mnemonicString Returns Type Description Mnemonic FromString(String) Declaration public static Mnemonic FromString(string mnemonicString) Parameters Type Name Description System.String mnemonicString Returns Type Description Mnemonic GetUnsafePtr() Get the byte pointer at the start of this struct. Declaration public byte *GetUnsafePtr() Returns Type Description System.Byte * An unsafe byte pointer. GetUnsafePtr() Get the byte pointer at the start of this struct. Declaration public byte *GetUnsafePtr() Returns Type Description System.Byte * An unsafe byte pointer. ToPrivateKey() Get the PrivateKey from this mnemonic encodes. Declaration public PrivateKey ToPrivateKey() Returns Type Description PrivateKey ToPrivateKey() Get the PrivateKey from this mnemonic encodes. Declaration public PrivateKey ToPrivateKey() Returns Type Description PrivateKey ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Implicit(Mnemonic to String) Declaration public static implicit operator string (Mnemonic mnemonic) Parameters Type Name Description Mnemonic mnemonic Returns Type Description System.String Implicit(Mnemonic to String) Declaration public static implicit operator string (Mnemonic mnemonic) Parameters Type Name Description Mnemonic mnemonic Returns Type Description System.String Implicit(String to Mnemonic) Declaration public static implicit operator Mnemonic(string mnemonicString) Parameters Type Name Description System.String mnemonicString Returns Type Description Mnemonic Implicit(String to Mnemonic) Declaration public static implicit operator Mnemonic(string mnemonicString) Parameters Type Name Description System.String mnemonicString Returns Type Description Mnemonic Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.Mnemonic.Word.html": {
    "href": "api/AlgoSdk.Mnemonic.Word.html",
    "title": "Enum Mnemonic.Word | Unity Algorand SDK",
    "keywords": "Enum Mnemonic.Word A list of possible words that occur in a Mnemonic Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum Word : ushort Fields Name Description abandon ability able about above absent absorb abstract absurd abuse access accident account accuse achieve acid acoustic acquire across act action actor actress actual adapt add addict address adjust admit adult advance advice aerobic affair afford afraid again age agent agree ahead aim air airport aisle alarm album alcohol alert alien all alley allow almost alone alpha already also alter always amateur amazing among amount amused analyst anchor ancient anger angle angry animal ankle announce annual another answer antenna antique anxiety any apart apology appear apple approve april arch arctic area arena argue arm armed armor army around arrange arrest arrive arrow art artefact artist artwork ask aspect assault asset assist assume asthma athlete atom attack attend attitude attract auction audit august aunt author auto autumn average avocado avoid awake aware away awesome awful awkward axis baby bachelor bacon badge bag balance balcony ball bamboo banana banner bar barely bargain barrel base basic basket battle beach bean beauty because become beef before begin behave behind believe below belt bench benefit best betray better between beyond bicycle bid bike bind biology bird birth bitter black blade blame blanket blast bleak bless blind blood blossom blouse blue blur blush board boat body boil bomb bone bonus book boost border boring borrow boss bottom bounce box boy bracket brain brand brass brave bread breeze brick bridge brief bright bring brisk broccoli broken bronze broom brother brown brush bubble buddy budget buffalo build bulb bulk bullet bundle bunker burden burger burst bus business busy butter buyer buzz cabbage cabin cable cactus cage cake call calm camera camp can canal cancel candy cannon canoe canvas canyon capable capital captain car carbon card cargo carpet carry cart case cash casino castle casual cat catalog catch category cattle caught cause caution cave ceiling celery cement census century cereal certain chair chalk champion change chaos chapter charge chase chat cheap check cheese chef cherry chest chicken chief child chimney choice choose chronic chuckle chunk churn cigar cinnamon circle citizen city civil claim clap clarify claw clay clean clerk clever click client cliff climb clinic clip clock clog close cloth cloud clown club clump cluster clutch coach coast coconut code coffee coil coin collect color column combine come comfort comic common company concert conduct confirm congress connect consider control convince cook cool copper copy coral core corn correct cost cotton couch country couple course cousin cover coyote crack cradle craft cram crane crash crater crawl crazy cream credit creek crew cricket crime crisp critic crop cross crouch crowd crucial cruel cruise crumble crunch crush cry crystal cube culture cup cupboard curious current curtain curve cushion custom cute cycle dad damage damp dance danger daring dash daughter dawn day deal debate debris decade december decide decline decorate decrease deer defense define defy degree delay deliver demand demise denial dentist deny depart depend deposit depth deputy derive describe desert design desk despair destroy detail detect develop device devote diagram dial diamond diary dice diesel diet differ digital dignity dilemma dinner dinosaur direct dirt disagree discover disease dish dismiss disorder display distance divert divide divorce dizzy doctor document dog doll dolphin domain donate donkey donor door dose double dove draft dragon drama drastic draw dream dress drift drill drink drip drive drop drum dry duck dumb dune during dust dutch duty dwarf dynamic eager eagle early earn earth easily east easy echo ecology economy edge edit educate effort egg eight either elbow elder electric elegant element elephant elevator elite else embark embody embrace emerge emotion employ empower empty enable enact end endless endorse enemy energy enforce engage engine enhance enjoy enlist enough enrich enroll ensure enter entire entry envelope episode equal equip era erase erode erosion error erupt escape essay essence estate eternal ethics evidence evil evoke evolve exact example excess exchange excite exclude excuse execute exercise exhaust exhibit exile exist exit exotic expand expect expire explain expose express extend extra eye eyebrow fabric face faculty fade faint faith fall false fame family famous fan fancy fantasy farm fashion fat fatal father fatigue fault favorite feature february federal fee feed feel female fence festival fetch fever few fiber fiction field figure file film filter final find fine finger finish fire firm first fiscal fish fit fitness fix flag flame flash flat flavor flee flight flip float flock floor flower fluid flush fly foam focus fog foil fold follow food foot force forest forget fork fortune forum forward fossil foster found fox fragile frame frequent fresh friend fringe frog front frost frown frozen fruit fuel fun funny furnace fury future gadget gain galaxy gallery game gap garage garbage garden garlic garment gas gasp gate gather gauge gaze general genius genre gentle genuine gesture ghost giant gift giggle ginger giraffe girl give glad glance glare glass glide glimpse globe gloom glory glove glow glue goat goddess gold good goose gorilla gospel gossip govern gown grab grace grain grant grape grass gravity great green grid grief grit grocery group grow grunt guard guess guide guilt guitar gun gym habit hair half hammer hamster hand happy harbor hard harsh harvest hat have hawk hazard head health heart heavy hedgehog height hello helmet help hen hero hidden high hill hint hip hire history hobby hockey hold hole holiday hollow home honey hood hope horn horror horse hospital host hotel hour hover hub huge human humble humor hundred hungry hunt hurdle hurry hurt husband hybrid ice icon idea identify idle ignore ill illegal illness image imitate immense immune impact impose improve impulse inch include income increase index indicate indoor industry infant inflict inform inhale inherit initial inject injury inmate inner innocent input inquiry insane insect inside inspire install intact interest into invest invite involve iron island isolate issue item ivory jacket jaguar jar jazz jealous jeans jelly jewel job join joke journey joy judge juice jump jungle junior junk just kangaroo keen keep ketchup key kick kid kidney kind kingdom kiss kit kitchen kite kitten kiwi knee knife knock know lab label labor ladder lady lake lamp language laptop large later latin laugh laundry lava law lawn lawsuit layer lazy leader leaf learn leave lecture left leg legal legend leisure lemon lend length LENGTH lens leopard lesson letter level liar liberty library license life lift light like limb limit link lion liquid list little live lizard load loan lobster local lock logic lonely long loop lottery loud lounge love loyal lucky luggage lumber lunar lunch luxury lyrics machine mad magic magnet maid mail main major make mammal man manage mandate mango mansion manual maple marble march margin marine market marriage mask mass master match material math matrix matter maximum maze meadow mean measure meat mechanic medal media melody melt member memory mention menu mercy merge merit merry mesh message metal method middle midnight milk million mimic mind minimum minor minute miracle mirror misery miss mistake mix mixed mixture mobile model modify mom moment monitor monkey monster month moon moral more morning mosquito mother motion motor mountain mouse move movie much muffin mule multiply muscle museum mushroom music must mutual myself mystery myth naive name napkin narrow nasty nation nature near neck need negative neglect neither nephew nerve nest net network neutral never news next nice night noble noise nominee noodle normal north nose notable note nothing notice novel now nuclear number nurse nut oak obey object oblige obscure observe obtain obvious occur ocean october odor off offer office often oil okay old olive olympic omit once one onion online only open opera opinion oppose option orange orbit orchard order ordinary organ orient original orphan ostrich other outdoor outer output outside oval oven over own owner oxygen oyster ozone pact paddle page pair palace palm panda panel panic panther paper parade parent park parrot party pass patch path patient patrol pattern pause pave payment peace peanut pear peasant pelican pen penalty pencil people pepper perfect permit person pet phone photo phrase physical piano picnic picture piece pig pigeon pill pilot pink pioneer pipe pistol pitch pizza place planet plastic plate play please pledge pluck plug plunge poem poet point polar pole police pond pony pool popular portion position possible post potato pottery poverty powder power practice praise predict prefer prepare present pretty prevent price pride primary print priority prison private prize problem process produce profit program project promote proof property prosper protect proud provide public pudding pull pulp pulse pumpkin punch pupil puppy purchase purity purpose purse push put puzzle pyramid quality quantum quarter question quick quit quiz quote rabbit raccoon race rack radar radio rail rain raise rally ramp ranch random range rapid rare rate rather raven raw razor ready real reason rebel rebuild recall receive recipe record recycle reduce reflect reform refuse region regret regular reject relax release relief rely remain remember remind remove render renew rent reopen repair repeat replace report require rescue resemble resist resource response result retire retreat return reunion reveal review reward rhythm rib ribbon rice rich ride ridge rifle right rigid ring riot ripple risk ritual rival river road roast robot robust rocket romance roof rookie room rose rotate rough round route royal rubber rude rug rule run runway rural sad saddle sadness safe sail salad salmon salon salt salute same sample sand satisfy satoshi sauce sausage save say scale scan scare scatter scene scheme school science scissors scorpion scout scrap screen script scrub sea search season seat second secret section security seed seek segment select sell seminar senior sense sentence series service session settle setup seven shadow shaft shallow share shed shell sheriff shield shift shine ship shiver shock shoe shoot shop short shoulder shove shrimp shrug shuffle shy sibling sick side siege sight sign silent silk silly silver similar simple since sing siren sister situate six size skate sketch ski skill skin skirt skull slab slam sleep slender slice slide slight slim slogan slot slow slush small smart smile smoke smooth snack snake snap sniff snow soap soccer social sock soda soft solar soldier solid solution solve someone song soon sorry sort soul sound soup source south space spare spatial spawn speak special speed spell spend sphere spice spider spike spin spirit split spoil sponsor spoon sport spot spray spread spring spy square squeeze squirrel stable stadium staff stage stairs stamp stand start state stay steak steel stem step stereo stick still sting stock stomach stone stool story stove strategy street strike strong struggle student stuff stumble style subject submit subway success such sudden suffer sugar suggest suit summer sun sunny sunset super supply supreme sure surface surge surprise surround survey suspect sustain swallow swamp swap swarm swear sweet swift swim swing switch sword symbol symptom syrup system table tackle tag tail talent talk tank tape target task taste tattoo taxi teach team tell ten tenant tennis tent term test text thank that theme then theory there they thing this thought three thrive throw thumb thunder ticket tide tiger tilt timber time tiny tip tired tissue title toast tobacco today toddler toe together toilet token tomato tomorrow tone tongue tonight tool tooth top topic topple torch tornado tortoise toss total tourist toward tower town toy track trade traffic tragic train transfer trap trash travel tray treat tree trend trial tribe trick trigger trim trip trophy trouble truck true truly trumpet trust truth try tube tuition tumble tuna tunnel turkey turn turtle twelve twenty twice twin twist two type typical ugly umbrella unable unaware uncle uncover under undo unfair unfold unhappy uniform unique unit universe unknown unlock until unusual unveil update upgrade uphold upon upper upset urban urge usage use used useful useless usual utility vacant vacuum vague valid valley valve van vanish vapor various vast vault vehicle velvet vendor venture venue verb verify version very vessel veteran viable vibrant vicious victory video view village vintage violin virtual virus visa visit visual vital vivid vocal voice void volcano volume vote voyage wage wagon wait walk wall walnut want warfare warm warrior wash wasp waste water wave way wealth weapon wear weasel weather web wedding weekend weird welcome west wet whale what wheat wheel when where whip whisper wide width wife wild will win window wine wing wink winner winter wire wisdom wise wish witness wolf woman wonder wood wool word work world worry worth wrap wreck wrestle wrist write wrong yard year yellow you young youth zebra zero zone zoo"
  },
  "api/AlgoSdk.Mnemonic.Word_1.html": {
    "href": "api/AlgoSdk.Mnemonic.Word_1.html",
    "title": "Enum Mnemonic.Word | Unity Algorand SDK",
    "keywords": "Enum Mnemonic.Word A list of possible words that occur in a Mnemonic Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum Word : ushort Fields Name Description abandon ability able about above absent absorb abstract absurd abuse access accident account accuse achieve acid acoustic acquire across act action actor actress actual adapt add addict address adjust admit adult advance advice aerobic affair afford afraid again age agent agree ahead aim air airport aisle alarm album alcohol alert alien all alley allow almost alone alpha already also alter always amateur amazing among amount amused analyst anchor ancient anger angle angry animal ankle announce annual another answer antenna antique anxiety any apart apology appear apple approve april arch arctic area arena argue arm armed armor army around arrange arrest arrive arrow art artefact artist artwork ask aspect assault asset assist assume asthma athlete atom attack attend attitude attract auction audit august aunt author auto autumn average avocado avoid awake aware away awesome awful awkward axis baby bachelor bacon badge bag balance balcony ball bamboo banana banner bar barely bargain barrel base basic basket battle beach bean beauty because become beef before begin behave behind believe below belt bench benefit best betray better between beyond bicycle bid bike bind biology bird birth bitter black blade blame blanket blast bleak bless blind blood blossom blouse blue blur blush board boat body boil bomb bone bonus book boost border boring borrow boss bottom bounce box boy bracket brain brand brass brave bread breeze brick bridge brief bright bring brisk broccoli broken bronze broom brother brown brush bubble buddy budget buffalo build bulb bulk bullet bundle bunker burden burger burst bus business busy butter buyer buzz cabbage cabin cable cactus cage cake call calm camera camp can canal cancel candy cannon canoe canvas canyon capable capital captain car carbon card cargo carpet carry cart case cash casino castle casual cat catalog catch category cattle caught cause caution cave ceiling celery cement census century cereal certain chair chalk champion change chaos chapter charge chase chat cheap check cheese chef cherry chest chicken chief child chimney choice choose chronic chuckle chunk churn cigar cinnamon circle citizen city civil claim clap clarify claw clay clean clerk clever click client cliff climb clinic clip clock clog close cloth cloud clown club clump cluster clutch coach coast coconut code coffee coil coin collect color column combine come comfort comic common company concert conduct confirm congress connect consider control convince cook cool copper copy coral core corn correct cost cotton couch country couple course cousin cover coyote crack cradle craft cram crane crash crater crawl crazy cream credit creek crew cricket crime crisp critic crop cross crouch crowd crucial cruel cruise crumble crunch crush cry crystal cube culture cup cupboard curious current curtain curve cushion custom cute cycle dad damage damp dance danger daring dash daughter dawn day deal debate debris decade december decide decline decorate decrease deer defense define defy degree delay deliver demand demise denial dentist deny depart depend deposit depth deputy derive describe desert design desk despair destroy detail detect develop device devote diagram dial diamond diary dice diesel diet differ digital dignity dilemma dinner dinosaur direct dirt disagree discover disease dish dismiss disorder display distance divert divide divorce dizzy doctor document dog doll dolphin domain donate donkey donor door dose double dove draft dragon drama drastic draw dream dress drift drill drink drip drive drop drum dry duck dumb dune during dust dutch duty dwarf dynamic eager eagle early earn earth easily east easy echo ecology economy edge edit educate effort egg eight either elbow elder electric elegant element elephant elevator elite else embark embody embrace emerge emotion employ empower empty enable enact end endless endorse enemy energy enforce engage engine enhance enjoy enlist enough enrich enroll ensure enter entire entry envelope episode equal equip era erase erode erosion error erupt escape essay essence estate eternal ethics evidence evil evoke evolve exact example excess exchange excite exclude excuse execute exercise exhaust exhibit exile exist exit exotic expand expect expire explain expose express extend extra eye eyebrow fabric face faculty fade faint faith fall false fame family famous fan fancy fantasy farm fashion fat fatal father fatigue fault favorite feature february federal fee feed feel female fence festival fetch fever few fiber fiction field figure file film filter final find fine finger finish fire firm first fiscal fish fit fitness fix flag flame flash flat flavor flee flight flip float flock floor flower fluid flush fly foam focus fog foil fold follow food foot force forest forget fork fortune forum forward fossil foster found fox fragile frame frequent fresh friend fringe frog front frost frown frozen fruit fuel fun funny furnace fury future gadget gain galaxy gallery game gap garage garbage garden garlic garment gas gasp gate gather gauge gaze general genius genre gentle genuine gesture ghost giant gift giggle ginger giraffe girl give glad glance glare glass glide glimpse globe gloom glory glove glow glue goat goddess gold good goose gorilla gospel gossip govern gown grab grace grain grant grape grass gravity great green grid grief grit grocery group grow grunt guard guess guide guilt guitar gun gym habit hair half hammer hamster hand happy harbor hard harsh harvest hat have hawk hazard head health heart heavy hedgehog height hello helmet help hen hero hidden high hill hint hip hire history hobby hockey hold hole holiday hollow home honey hood hope horn horror horse hospital host hotel hour hover hub huge human humble humor hundred hungry hunt hurdle hurry hurt husband hybrid ice icon idea identify idle ignore ill illegal illness image imitate immense immune impact impose improve impulse inch include income increase index indicate indoor industry infant inflict inform inhale inherit initial inject injury inmate inner innocent input inquiry insane insect inside inspire install intact interest into invest invite involve iron island isolate issue item ivory jacket jaguar jar jazz jealous jeans jelly jewel job join joke journey joy judge juice jump jungle junior junk just kangaroo keen keep ketchup key kick kid kidney kind kingdom kiss kit kitchen kite kitten kiwi knee knife knock know lab label labor ladder lady lake lamp language laptop large later latin laugh laundry lava law lawn lawsuit layer lazy leader leaf learn leave lecture left leg legal legend leisure lemon lend length LENGTH lens leopard lesson letter level liar liberty library license life lift light like limb limit link lion liquid list little live lizard load loan lobster local lock logic lonely long loop lottery loud lounge love loyal lucky luggage lumber lunar lunch luxury lyrics machine mad magic magnet maid mail main major make mammal man manage mandate mango mansion manual maple marble march margin marine market marriage mask mass master match material math matrix matter maximum maze meadow mean measure meat mechanic medal media melody melt member memory mention menu mercy merge merit merry mesh message metal method middle midnight milk million mimic mind minimum minor minute miracle mirror misery miss mistake mix mixed mixture mobile model modify mom moment monitor monkey monster month moon moral more morning mosquito mother motion motor mountain mouse move movie much muffin mule multiply muscle museum mushroom music must mutual myself mystery myth naive name napkin narrow nasty nation nature near neck need negative neglect neither nephew nerve nest net network neutral never news next nice night noble noise nominee noodle normal north nose notable note nothing notice novel now nuclear number nurse nut oak obey object oblige obscure observe obtain obvious occur ocean october odor off offer office often oil okay old olive olympic omit once one onion online only open opera opinion oppose option orange orbit orchard order ordinary organ orient original orphan ostrich other outdoor outer output outside oval oven over own owner oxygen oyster ozone pact paddle page pair palace palm panda panel panic panther paper parade parent park parrot party pass patch path patient patrol pattern pause pave payment peace peanut pear peasant pelican pen penalty pencil people pepper perfect permit person pet phone photo phrase physical piano picnic picture piece pig pigeon pill pilot pink pioneer pipe pistol pitch pizza place planet plastic plate play please pledge pluck plug plunge poem poet point polar pole police pond pony pool popular portion position possible post potato pottery poverty powder power practice praise predict prefer prepare present pretty prevent price pride primary print priority prison private prize problem process produce profit program project promote proof property prosper protect proud provide public pudding pull pulp pulse pumpkin punch pupil puppy purchase purity purpose purse push put puzzle pyramid quality quantum quarter question quick quit quiz quote rabbit raccoon race rack radar radio rail rain raise rally ramp ranch random range rapid rare rate rather raven raw razor ready real reason rebel rebuild recall receive recipe record recycle reduce reflect reform refuse region regret regular reject relax release relief rely remain remember remind remove render renew rent reopen repair repeat replace report require rescue resemble resist resource response result retire retreat return reunion reveal review reward rhythm rib ribbon rice rich ride ridge rifle right rigid ring riot ripple risk ritual rival river road roast robot robust rocket romance roof rookie room rose rotate rough round route royal rubber rude rug rule run runway rural sad saddle sadness safe sail salad salmon salon salt salute same sample sand satisfy satoshi sauce sausage save say scale scan scare scatter scene scheme school science scissors scorpion scout scrap screen script scrub sea search season seat second secret section security seed seek segment select sell seminar senior sense sentence series service session settle setup seven shadow shaft shallow share shed shell sheriff shield shift shine ship shiver shock shoe shoot shop short shoulder shove shrimp shrug shuffle shy sibling sick side siege sight sign silent silk silly silver similar simple since sing siren sister situate six size skate sketch ski skill skin skirt skull slab slam sleep slender slice slide slight slim slogan slot slow slush small smart smile smoke smooth snack snake snap sniff snow soap soccer social sock soda soft solar soldier solid solution solve someone song soon sorry sort soul sound soup source south space spare spatial spawn speak special speed spell spend sphere spice spider spike spin spirit split spoil sponsor spoon sport spot spray spread spring spy square squeeze squirrel stable stadium staff stage stairs stamp stand start state stay steak steel stem step stereo stick still sting stock stomach stone stool story stove strategy street strike strong struggle student stuff stumble style subject submit subway success such sudden suffer sugar suggest suit summer sun sunny sunset super supply supreme sure surface surge surprise surround survey suspect sustain swallow swamp swap swarm swear sweet swift swim swing switch sword symbol symptom syrup system table tackle tag tail talent talk tank tape target task taste tattoo taxi teach team tell ten tenant tennis tent term test text thank that theme then theory there they thing this thought three thrive throw thumb thunder ticket tide tiger tilt timber time tiny tip tired tissue title toast tobacco today toddler toe together toilet token tomato tomorrow tone tongue tonight tool tooth top topic topple torch tornado tortoise toss total tourist toward tower town toy track trade traffic tragic train transfer trap trash travel tray treat tree trend trial tribe trick trigger trim trip trophy trouble truck true truly trumpet trust truth try tube tuition tumble tuna tunnel turkey turn turtle twelve twenty twice twin twist two type typical ugly umbrella unable unaware uncle uncover under undo unfair unfold unhappy uniform unique unit universe unknown unlock until unusual unveil update upgrade uphold upon upper upset urban urge usage use used useful useless usual utility vacant vacuum vague valid valley valve van vanish vapor various vast vault vehicle velvet vendor venture venue verb verify version very vessel veteran viable vibrant vicious victory video view village vintage violin virtual virus visa visit visual vital vivid vocal voice void volcano volume vote voyage wage wagon wait walk wall walnut want warfare warm warrior wash wasp waste water wave way wealth weapon wear weasel weather web wedding weekend weird welcome west wet whale what wheat wheel when where whip whisper wide width wife wild will win window wine wing wink winner winter wire wisdom wise wish witness wolf woman wonder wood wool word work world worry worth wrap wreck wrestle wrist write wrong yard year yellow you young youth zebra zero zone zoo"
  },
  "api/AlgoSdk.Multisig.html": {
    "href": "api/AlgoSdk.Multisig.html",
    "title": "Struct Multisig | Unity Algorand SDK",
    "keywords": "Struct Multisig Implements ISignature System.IEquatable < Multisig > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Multisig : ISignature, IEquatable<Multisig> Constructors Multisig(Byte, Byte, Address[]) Create a new multisig Declaration public Multisig(byte version, byte threshold, Address[] addresses) Parameters Type Name Description System.Byte version The version of the msig protocol. The latest version is version 1. System.Byte threshold The number of signatures required for this msig to be valid. Address [] addresses The addresses or public keys composing this msig. Order matters! Multisig(Byte, Byte, Address[]) Create a new multisig Declaration public Multisig(byte version, byte threshold, Address[] addresses) Parameters Type Name Description System.Byte version The version of the msig protocol. The latest version is version 1. System.Byte threshold The number of signatures required for this msig to be valid. Address [] addresses The addresses or public keys composing this msig. Order matters! Fields AddressPrefix Declaration public static readonly byte[] AddressPrefix Field Value Type Description System.Byte [] AddressPrefix Declaration public static readonly byte[] AddressPrefix Field Value Type Description System.Byte [] Subsigs Subsignatures representing this multisig. Declaration public Multisig.Subsig[] Subsigs Field Value Type Description Multisig.Subsig [] Subsigs Subsignatures representing this multisig. Declaration public Multisig.Subsig[] Subsigs Field Value Type Description Multisig.Subsig [] Threshold Number of signatures required for the multisig to be valid. Declaration public byte Threshold Field Value Type Description System.Byte Threshold Number of signatures required for the multisig to be valid. Declaration public byte Threshold Field Value Type Description System.Byte Version Version of the multisig. Declaration public byte Version Field Value Type Description System.Byte Version Version of the multisig. Declaration public byte Version Field Value Type Description System.Byte Methods Equals(Multisig) Declaration public bool Equals(Multisig other) Parameters Type Name Description Multisig other Returns Type Description System.Boolean Equals(Multisig) Declaration public bool Equals(Multisig other) Parameters Type Name Description Multisig other Returns Type Description System.Boolean GetAddress() Generate the address for this Multisig . Declaration public Address GetAddress() Returns Type Description Address An Address made from hashing the addresses in this subsig. GetAddress() Generate the address for this Multisig . Declaration public Address GetAddress() Returns Type Description Address An Address made from hashing the addresses in this subsig. Verify<TMessage>(TMessage) Verify this msig against the message. Declaration public bool Verify<TMessage>(TMessage message) where TMessage : IByteArray Parameters Type Name Description TMessage message The message that was signed. Returns Type Description System.Boolean true if a threshold of signatures were valid, fals otherwise Type Parameters Name Description TMessage The type of the bytearray the message is contained in. Verify<TMessage>(TMessage) Verify this msig against the message. Declaration public bool Verify<TMessage>(TMessage message) where TMessage : IByteArray Parameters Type Name Description TMessage message The message that was signed. Returns Type Description System.Boolean true if a threshold of signatures were valid, fals otherwise Type Parameters Name Description TMessage The type of the bytearray the message is contained in. Implements ISignature System.IEquatable<T>"
  },
  "api/AlgoSdk.Multisig.Subsig.html": {
    "href": "api/AlgoSdk.Multisig.Subsig.html",
    "title": "Struct Multisig.Subsig | Unity Algorand SDK",
    "keywords": "Struct Multisig.Subsig Implements System.IEquatable < Multisig.Subsig > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Subsig : IEquatable<Multisig.Subsig> Fields PublicKey The address for this subsig. Declaration public Ed25519.PublicKey PublicKey Field Value Type Description Ed25519.PublicKey PublicKey The address for this subsig. Declaration public Ed25519.PublicKey PublicKey Field Value Type Description Ed25519.PublicKey Sig The signed message if it exists. Declaration public Sig Sig Field Value Type Description Sig Sig The signed message if it exists. Declaration public Sig Sig Field Value Type Description Sig Methods Equals(Multisig.Subsig) Declaration public bool Equals(Multisig.Subsig other) Parameters Type Name Description Multisig.Subsig other Returns Type Description System.Boolean Equals(Multisig.Subsig) Declaration public bool Equals(Multisig.Subsig other) Parameters Type Name Description Multisig.Subsig other Returns Type Description System.Boolean Operators Implicit(Address to Multisig.Subsig) Declaration public static implicit operator Multisig.Subsig(Address address) Parameters Type Name Description Address address Returns Type Description Multisig.Subsig Implicit(Address to Multisig.Subsig) Declaration public static implicit operator Multisig.Subsig(Address address) Parameters Type Name Description Address address Returns Type Description Multisig.Subsig Implicit(Multisig.Subsig to Address) Declaration public static implicit operator Address(Multisig.Subsig subsig) Parameters Type Name Description Multisig.Subsig subsig Returns Type Description Address Implicit(Multisig.Subsig to Address) Declaration public static implicit operator Address(Multisig.Subsig subsig) Parameters Type Name Description Multisig.Subsig subsig Returns Type Description Address Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.OnCompletion.html": {
    "href": "api/AlgoSdk.OnCompletion.html",
    "title": "Enum OnCompletion | Unity Algorand SDK",
    "keywords": "Enum OnCompletion [apan] defines the what additional actions occur with the transaction. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum OnCompletion : byte Fields Name Description Clear Similar to CloseOut, but the transaction will always clear a contract from the account’s balance record whether the program succeeds or fails. CloseOut Accounts use this transaction to close out their participation in the contract. This call can fail based on the TEAL logic, preventing the account from removing the contract from its balance record. Delete Transaction to delete the application. NoOp Generic application calls to execute the ApprovalProgram OptIn Accounts use this transaction to opt into the smart contract to participate (local storage usage). Update Transaction to update TEAL Programs for a contract."
  },
  "api/AlgoSdk.OnCompletion_1.html": {
    "href": "api/AlgoSdk.OnCompletion_1.html",
    "title": "Enum OnCompletion | Unity Algorand SDK",
    "keywords": "Enum OnCompletion [apan] defines the what additional actions occur with the transaction. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum OnCompletion : byte Fields Name Description Clear Similar to CloseOut, but the transaction will always clear a contract from the account’s balance record whether the program succeeds or fails. CloseOut Accounts use this transaction to close out their participation in the contract. This call can fail based on the TEAL logic, preventing the account from removing the contract from its balance record. Delete Transaction to delete the application. NoOp Generic application calls to execute the ApprovalProgram OptIn Accounts use this transaction to opt into the smart contract to participate (local storage usage). Update Transaction to update TEAL Programs for a contract."
  },
  "api/AlgoSdk.Optional-1.html": {
    "href": "api/AlgoSdk.Optional-1.html",
    "title": "Struct Optional<T> | Unity Algorand SDK",
    "keywords": "Struct Optional<T> Implements System.IEquatable < Optional <T>> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct Optional<T> : IEquatable<Optional<T>> where T : struct, IEquatable<T> Type Parameters Name Description T Constructors Optional(T) Declaration public Optional(T value) Parameters Type Name Description T value Optional(T) Declaration public Optional(T value) Parameters Type Name Description T value Fields HasValue Declaration public bool HasValue Field Value Type Description System.Boolean HasValue Declaration public bool HasValue Field Value Type Description System.Boolean Value Declaration public T Value Field Value Type Description T Value Declaration public T Value Field Value Type Description T Properties Empty Declaration public static readonly Optional<T> Empty { get; } Property Value Type Description Optional <T> Empty Declaration public static readonly Optional<T> Empty { get; } Property Value Type Description Optional <T> Methods Equals(Optional<T>) Declaration public bool Equals(Optional<T> other) Parameters Type Name Description Optional <T> other Returns Type Description System.Boolean Equals(Optional<T>) Declaration public bool Equals(Optional<T> other) Parameters Type Name Description Optional <T> other Returns Type Description System.Boolean Operators Implicit(T to Optional<T>) Declaration public static implicit operator Optional<T>(T value) Parameters Type Name Description T value Returns Type Description Optional <T> Implicit(T to Optional<T>) Declaration public static implicit operator Optional<T>(T value) Parameters Type Name Description T value Returns Type Description Optional <T> Implicit(Optional<T> to T) Declaration public static implicit operator T(Optional<T> optional) Parameters Type Name Description Optional <T> optional Returns Type Description T Implicit(Optional<T> to T) Declaration public static implicit operator T(Optional<T> optional) Parameters Type Name Description Optional <T> optional Returns Type Description T Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.PaymentTxn.html": {
    "href": "api/AlgoSdk.PaymentTxn.html",
    "title": "Struct PaymentTxn | Unity Algorand SDK",
    "keywords": "Struct PaymentTxn Implements IPaymentTxn ITransaction System.IEquatable < PaymentTxn > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct PaymentTxn : IPaymentTxn, ITransaction, IEquatable<PaymentTxn> Properties Amount Declaration public ulong Amount { get; set; } Property Value Type Description System.UInt64 Amount Declaration public ulong Amount { get; set; } Property Value Type Description System.UInt64 CloseAmount Declaration public ulong CloseAmount { get; set; } Property Value Type Description System.UInt64 CloseAmount Declaration public ulong CloseAmount { get; set; } Property Value Type Description System.UInt64 CloseRemainderTo Declaration public Address CloseRemainderTo { get; set; } Property Value Type Description Address CloseRemainderTo Declaration public Address CloseRemainderTo { get; set; } Property Value Type Description Address Fee Declaration public ulong Fee { get; set; } Property Value Type Description System.UInt64 Fee Declaration public ulong Fee { get; set; } Property Value Type Description System.UInt64 FirstValidRound Declaration public ulong FirstValidRound { get; set; } Property Value Type Description System.UInt64 FirstValidRound Declaration public ulong FirstValidRound { get; set; } Property Value Type Description System.UInt64 GenesisHash Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisHash Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisId Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes GenesisId Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes Group Declaration public Sha512_256_Hash Group { get; set; } Property Value Type Description Sha512_256_Hash Group Declaration public Sha512_256_Hash Group { get; set; } Property Value Type Description Sha512_256_Hash LastValidRound Declaration public ulong LastValidRound { get; set; } Property Value Type Description System.UInt64 LastValidRound Declaration public ulong LastValidRound { get; set; } Property Value Type Description System.UInt64 Lease Declaration public Sha512_256_Hash Lease { get; set; } Property Value Type Description Sha512_256_Hash Lease Declaration public Sha512_256_Hash Lease { get; set; } Property Value Type Description Sha512_256_Hash Note Declaration public byte[] Note { get; set; } Property Value Type Description System.Byte [] Note Declaration public byte[] Note { get; set; } Property Value Type Description System.Byte [] Receiver Declaration public Address Receiver { get; set; } Property Value Type Description Address Receiver Declaration public Address Receiver { get; set; } Property Value Type Description Address RekeyTo Declaration public Address RekeyTo { get; set; } Property Value Type Description Address RekeyTo Declaration public Address RekeyTo { get; set; } Property Value Type Description Address Sender Declaration public Address Sender { get; set; } Property Value Type Description Address Sender Declaration public Address Sender { get; set; } Property Value Type Description Address TransactionType Declaration public TransactionType TransactionType { get; } Property Value Type Description TransactionType TransactionType Declaration public TransactionType TransactionType { get; } Property Value Type Description TransactionType Methods CopyFrom(Transaction) Declaration public void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction CopyFrom(Transaction) Declaration public void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction CopyTo(ref Transaction) Declaration public void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction CopyTo(ref Transaction) Declaration public void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction Equals(PaymentTxn) Declaration public bool Equals(PaymentTxn other) Parameters Type Name Description PaymentTxn other Returns Type Description System.Boolean Equals(PaymentTxn) Declaration public bool Equals(PaymentTxn other) Parameters Type Name Description PaymentTxn other Returns Type Description System.Boolean Implements IPaymentTxn ITransaction System.IEquatable<T>"
  },
  "api/AlgoSdk.PaymentTxn.Params.html": {
    "href": "api/AlgoSdk.PaymentTxn.Params.html",
    "title": "Struct PaymentTxn.Params | Unity Algorand SDK",
    "keywords": "Struct PaymentTxn.Params Implements System.IEquatable < PaymentTxn.Params > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct Params : IEquatable<PaymentTxn.Params> Fields Amount Declaration public ulong Amount Field Value Type Description System.UInt64 Amount Declaration public ulong Amount Field Value Type Description System.UInt64 CloseAmount Declaration [NonSerialized] public ulong CloseAmount Field Value Type Description System.UInt64 CloseAmount Declaration [NonSerialized] public ulong CloseAmount Field Value Type Description System.UInt64 CloseRemainderTo Declaration public Address CloseRemainderTo Field Value Type Description Address CloseRemainderTo Declaration public Address CloseRemainderTo Field Value Type Description Address Receiver Declaration public Address Receiver Field Value Type Description Address Receiver Declaration public Address Receiver Field Value Type Description Address Methods Equals(PaymentTxn.Params) Declaration public bool Equals(PaymentTxn.Params other) Parameters Type Name Description PaymentTxn.Params other Returns Type Description System.Boolean Equals(PaymentTxn.Params) Declaration public bool Equals(PaymentTxn.Params other) Parameters Type Name Description PaymentTxn.Params other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.PendingTransaction.html": {
    "href": "api/AlgoSdk.PendingTransaction.html",
    "title": "Struct PendingTransaction | Unity Algorand SDK",
    "keywords": "Struct PendingTransaction Details about a pending transaction. If the transaction was recently confirmed, includes confirmation details like the round and reward details. Implements System.IEquatable < PendingTransaction > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct PendingTransaction : IEquatable<PendingTransaction> Fields ApplicationIndex The application index if the transaction was found and it created an application. Declaration public ulong ApplicationIndex Field Value Type Description System.UInt64 ApplicationIndex The application index if the transaction was found and it created an application. Declaration public ulong ApplicationIndex Field Value Type Description System.UInt64 AssetClosingAmount The number of the asset's unit that were transferred to the close-to address. Declaration public ulong AssetClosingAmount Field Value Type Description System.UInt64 AssetClosingAmount The number of the asset's unit that were transferred to the close-to address. Declaration public ulong AssetClosingAmount Field Value Type Description System.UInt64 AssetIndex The asset index if the transaction was found and it created an asset. Declaration public ulong AssetIndex Field Value Type Description System.UInt64 AssetIndex The asset index if the transaction was found and it created an asset. Declaration public ulong AssetIndex Field Value Type Description System.UInt64 CloseRewards Rewards in microalgos applied to the close remainder to account. Declaration public ulong CloseRewards Field Value Type Description System.UInt64 CloseRewards Rewards in microalgos applied to the close remainder to account. Declaration public ulong CloseRewards Field Value Type Description System.UInt64 ClosingAmount Closing amount for the transaction. Declaration public ulong ClosingAmount Field Value Type Description System.UInt64 ClosingAmount Closing amount for the transaction. Declaration public ulong ClosingAmount Field Value Type Description System.UInt64 ConfirmedRound The round where this transaction was confirmed, if present. Declaration public ulong ConfirmedRound Field Value Type Description System.UInt64 ConfirmedRound The round where this transaction was confirmed, if present. Declaration public ulong ConfirmedRound Field Value Type Description System.UInt64 GlobalStateDelta [gd] Global state key/value changes for the application being executed by this transaction. Declaration public EvalDeltaKeyValue[] GlobalStateDelta Field Value Type Description EvalDeltaKeyValue [] GlobalStateDelta [gd] Global state key/value changes for the application being executed by this transaction. Declaration public EvalDeltaKeyValue[] GlobalStateDelta Field Value Type Description EvalDeltaKeyValue [] InnerTransactions Inner transactions produced by application execution. Declaration public PendingTransaction[] InnerTransactions Field Value Type Description PendingTransaction [] InnerTransactions Inner transactions produced by application execution. Declaration public PendingTransaction[] InnerTransactions Field Value Type Description PendingTransaction [] LocalStateDelta [ld] Local state key/value changes for the application being executed by this transaction. Declaration public AccountStateDelta[] LocalStateDelta Field Value Type Description AccountStateDelta [] LocalStateDelta [ld] Local state key/value changes for the application being executed by this transaction. Declaration public AccountStateDelta[] LocalStateDelta Field Value Type Description AccountStateDelta [] Logs [lg] Logs for the application being executed by this transaction. Declaration public string[] Logs Field Value Type Description System.String [] Logs [lg] Logs for the application being executed by this transaction. Declaration public string[] Logs Field Value Type Description System.String [] PoolError Indicates that the transaction was kicked out of this node's transaction pool (and specifies why that happened). An empty string indicates the transaction wasn't kicked out of this node's txpool due to an error. Declaration public FixedString128Bytes PoolError Field Value Type Description FixedString128Bytes PoolError Indicates that the transaction was kicked out of this node's transaction pool (and specifies why that happened). An empty string indicates the transaction wasn't kicked out of this node's txpool due to an error. Declaration public FixedString128Bytes PoolError Field Value Type Description FixedString128Bytes ReceiverRewards Rewards in microalgos applied to the receiver account. Declaration public ulong ReceiverRewards Field Value Type Description System.UInt64 ReceiverRewards Rewards in microalgos applied to the receiver account. Declaration public ulong ReceiverRewards Field Value Type Description System.UInt64 SenderRewards Rewards in microalgos applied to the sender account. Declaration public ulong SenderRewards Field Value Type Description System.UInt64 SenderRewards Rewards in microalgos applied to the sender account. Declaration public ulong SenderRewards Field Value Type Description System.UInt64 Transaction The raw signed transaction. Declaration public SignedTransaction Transaction Field Value Type Description SignedTransaction Transaction The raw signed transaction. Declaration public SignedTransaction Transaction Field Value Type Description SignedTransaction Methods Equals(PendingTransaction) Declaration public bool Equals(PendingTransaction other) Parameters Type Name Description PendingTransaction other Returns Type Description System.Boolean Equals(PendingTransaction) Declaration public bool Equals(PendingTransaction other) Parameters Type Name Description PendingTransaction other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.PendingTransactions.html": {
    "href": "api/AlgoSdk.PendingTransactions.html",
    "title": "Struct PendingTransactions | Unity Algorand SDK",
    "keywords": "Struct PendingTransactions A potentially truncated list of transactions currently in the node's transaction pool. You can compute whether or not the list is truncated if the number of elements in the TopTransactions array is fewer than TotalTransactions . Implements System.IEquatable < PendingTransactions > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct PendingTransactions : IEquatable<PendingTransactions> Fields TopTransactions An array of signed transaction objects. Declaration public SignedTransaction[] TopTransactions Field Value Type Description SignedTransaction [] TopTransactions An array of signed transaction objects. Declaration public SignedTransaction[] TopTransactions Field Value Type Description SignedTransaction [] TotalTransactions Total number of transactions in the pool. Declaration public ulong TotalTransactions Field Value Type Description System.UInt64 TotalTransactions Total number of transactions in the pool. Declaration public ulong TotalTransactions Field Value Type Description System.UInt64 Methods Equals(PendingTransactions) Declaration public bool Equals(PendingTransactions other) Parameters Type Name Description PendingTransactions other Returns Type Description System.Boolean Equals(PendingTransactions) Declaration public bool Equals(PendingTransactions other) Parameters Type Name Description PendingTransactions other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.PrivateKey.html": {
    "href": "api/AlgoSdk.PrivateKey.html",
    "title": "Struct PrivateKey | Unity Algorand SDK",
    "keywords": "Struct PrivateKey The private key for an Algorand account. Implements System.IEquatable < PrivateKey > IByteArray Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct PrivateKey : IEquatable<PrivateKey> Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Length Declaration public readonly int Length { get; } Property Value Type Description System.Int32 Length Declaration public readonly int Length { get; } Property Value Type Description System.Int32 Methods Equals(PrivateKey) Declaration public bool Equals(PrivateKey other) Parameters Type Name Description PrivateKey other Returns Type Description System.Boolean Equals(PrivateKey) Declaration public bool Equals(PrivateKey other) Parameters Type Name Description PrivateKey other Returns Type Description System.Boolean FromString(String) Declaration public static PrivateKey FromString(string keyString) Parameters Type Name Description System.String keyString Returns Type Description PrivateKey FromString(String) Declaration public static PrivateKey FromString(string keyString) Parameters Type Name Description System.String keyString Returns Type Description PrivateKey GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description System.Void * GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description System.Void * ToAddress() Declaration public Address ToAddress() Returns Type Description Address ToAddress() Declaration public Address ToAddress() Returns Type Description Address ToKeyPair() Declaration public Ed25519.KeyPair ToKeyPair() Returns Type Description Ed25519.KeyPair ToKeyPair() Declaration public Ed25519.KeyPair ToKeyPair() Returns Type Description Ed25519.KeyPair ToMnemonic() Declaration public Mnemonic ToMnemonic() Returns Type Description Mnemonic ToMnemonic() Declaration public Mnemonic ToMnemonic() Returns Type Description Mnemonic ToPublicKey() Declaration public Ed25519.PublicKey ToPublicKey() Returns Type Description Ed25519.PublicKey ToPublicKey() Declaration public Ed25519.PublicKey ToPublicKey() Returns Type Description Ed25519.PublicKey ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Implements System.IEquatable<T> IByteArray"
  },
  "api/AlgoSdk.ProvideSourceInfoAttribute.html": {
    "href": "api/AlgoSdk.ProvideSourceInfoAttribute.html",
    "title": "Class ProvideSourceInfoAttribute | Unity Algorand SDK",
    "keywords": "Class ProvideSourceInfoAttribute Inheritance System.Object System.Attribute ProvideSourceInfoAttribute AlgoApiFormatterAttribute AlgoApiObjectAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.All, AllowMultiple = false, Inherited = false)] [AttributeUsage(AttributeTargets.All, AllowMultiple = false, Inherited = false)] public class ProvideSourceInfoAttribute : Attribute, _Attribute Constructors ProvideSourceInfoAttribute(String, String, Int32) Declaration public ProvideSourceInfoAttribute(string member = \"\", string filePath = \"\", int lineNumber = 0) Parameters Type Name Description System.String member System.String filePath System.Int32 lineNumber ProvideSourceInfoAttribute(String, String, Int32) Declaration public ProvideSourceInfoAttribute(string member = \"\", string filePath = \"\", int lineNumber = 0) Parameters Type Name Description System.String member System.String filePath System.Int32 lineNumber Properties AbsoluteFilePath Declaration public string AbsoluteFilePath { get; } Property Value Type Description System.String AbsoluteFilePath Declaration public string AbsoluteFilePath { get; } Property Value Type Description System.String AssetPath Declaration public string AssetPath { get; } Property Value Type Description System.String AssetPath Declaration public string AssetPath { get; } Property Value Type Description System.String LineNumber Declaration public int LineNumber { get; } Property Value Type Description System.Int32 LineNumber Declaration public int LineNumber { get; } Property Value Type Description System.Int32 Member Declaration public string Member { get; } Property Value Type Description System.String Member Declaration public string Member { get; } Property Value Type Description System.String Implements System.Runtime.InteropServices._Attribute"
  },
  "api/AlgoSdk.ReleaseWalletHandleTokenRequest.html": {
    "href": "api/AlgoSdk.ReleaseWalletHandleTokenRequest.html",
    "title": "Struct ReleaseWalletHandleTokenRequest | Unity Algorand SDK",
    "keywords": "Struct ReleaseWalletHandleTokenRequest Implements System.IEquatable < ReleaseWalletHandleTokenRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct ReleaseWalletHandleTokenRequest : IEquatable<ReleaseWalletHandleTokenRequest> Fields WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(ReleaseWalletHandleTokenRequest) Declaration public bool Equals(ReleaseWalletHandleTokenRequest other) Parameters Type Name Description ReleaseWalletHandleTokenRequest other Returns Type Description System.Boolean Equals(ReleaseWalletHandleTokenRequest) Declaration public bool Equals(ReleaseWalletHandleTokenRequest other) Parameters Type Name Description ReleaseWalletHandleTokenRequest other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.RenameWalletRequest.html": {
    "href": "api/AlgoSdk.RenameWalletRequest.html",
    "title": "Struct RenameWalletRequest | Unity Algorand SDK",
    "keywords": "Struct RenameWalletRequest Implements System.IEquatable < RenameWalletRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct RenameWalletRequest : IEquatable<RenameWalletRequest> Fields WalletId Declaration public FixedString128Bytes WalletId Field Value Type Description FixedString128Bytes WalletId Declaration public FixedString128Bytes WalletId Field Value Type Description FixedString128Bytes WalletName Declaration public FixedString128Bytes WalletName Field Value Type Description FixedString128Bytes WalletName Declaration public FixedString128Bytes WalletName Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(RenameWalletRequest) Declaration public bool Equals(RenameWalletRequest other) Parameters Type Name Description RenameWalletRequest other Returns Type Description System.Boolean Equals(RenameWalletRequest) Declaration public bool Equals(RenameWalletRequest other) Parameters Type Name Description RenameWalletRequest other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.RenameWalletResponse.html": {
    "href": "api/AlgoSdk.RenameWalletResponse.html",
    "title": "Struct RenameWalletResponse | Unity Algorand SDK",
    "keywords": "Struct RenameWalletResponse Implements System.IEquatable < RenameWalletResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct RenameWalletResponse : IEquatable<RenameWalletResponse> Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Message Declaration public string Message Field Value Type Description System.String Message Declaration public string Message Field Value Type Description System.String Wallet Declaration public Wallet Wallet Field Value Type Description Wallet Wallet Declaration public Wallet Wallet Field Value Type Description Wallet Methods Equals(RenameWalletResponse) Declaration public bool Equals(RenameWalletResponse other) Parameters Type Name Description RenameWalletResponse other Returns Type Description System.Boolean Equals(RenameWalletResponse) Declaration public bool Equals(RenameWalletResponse other) Parameters Type Name Description RenameWalletResponse other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.RenewWalletHandleTokenRequest.html": {
    "href": "api/AlgoSdk.RenewWalletHandleTokenRequest.html",
    "title": "Struct RenewWalletHandleTokenRequest | Unity Algorand SDK",
    "keywords": "Struct RenewWalletHandleTokenRequest Implements System.IEquatable < RenewWalletHandleTokenRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct RenewWalletHandleTokenRequest : IEquatable<RenewWalletHandleTokenRequest> Fields WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(RenewWalletHandleTokenRequest) Declaration public bool Equals(RenewWalletHandleTokenRequest other) Parameters Type Name Description RenewWalletHandleTokenRequest other Returns Type Description System.Boolean Equals(RenewWalletHandleTokenRequest) Declaration public bool Equals(RenewWalletHandleTokenRequest other) Parameters Type Name Description RenewWalletHandleTokenRequest other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.RenewWalletHandleTokenResponse.html": {
    "href": "api/AlgoSdk.RenewWalletHandleTokenResponse.html",
    "title": "Struct RenewWalletHandleTokenResponse | Unity Algorand SDK",
    "keywords": "Struct RenewWalletHandleTokenResponse Implements System.IEquatable < RenewWalletHandleTokenResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct RenewWalletHandleTokenResponse : IEquatable<RenewWalletHandleTokenResponse> Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Message Declaration public string Message Field Value Type Description System.String Message Declaration public string Message Field Value Type Description System.String WalletHandle Declaration public WalletHandle WalletHandle Field Value Type Description WalletHandle WalletHandle Declaration public WalletHandle WalletHandle Field Value Type Description WalletHandle Methods Equals(RenewWalletHandleTokenResponse) Declaration public bool Equals(RenewWalletHandleTokenResponse other) Parameters Type Name Description RenewWalletHandleTokenResponse other Returns Type Description System.Boolean Equals(RenewWalletHandleTokenResponse) Declaration public bool Equals(RenewWalletHandleTokenResponse other) Parameters Type Name Description RenewWalletHandleTokenResponse other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.SerializationException.html": {
    "href": "api/AlgoSdk.SerializationException.html",
    "title": "Class SerializationException | Unity Algorand SDK",
    "keywords": "Class SerializationException Inheritance System.Object System.Exception SerializationException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public class SerializationException : Exception, ISerializable, _Exception Constructors SerializationException(String) Declaration public SerializationException(string message) Parameters Type Name Description System.String message SerializationException(String) Declaration public SerializationException(string message) Parameters Type Name Description System.String message SerializationException(String, Exception) Declaration public SerializationException(string message, Exception cause) Parameters Type Name Description System.String message System.Exception cause SerializationException(String, Exception) Declaration public SerializationException(string message, Exception cause) Parameters Type Name Description System.String message System.Exception cause Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/AlgoSdk.Sig.html": {
    "href": "api/AlgoSdk.Sig.html",
    "title": "Struct Sig | Unity Algorand SDK",
    "keywords": "Struct Sig Implements ISignature System.IEquatable < Sig > IByteArray Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct Sig : ISignature, IEquatable<Sig> Constructors Sig(in Ed25519.Signature) Declaration public Sig(in Ed25519.Signature sig) Parameters Type Name Description Ed25519.Signature sig Sig(in Ed25519.Signature) Declaration public Sig(in Ed25519.Signature sig) Parameters Type Name Description Ed25519.Signature sig Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Length Declaration public readonly int Length { get; } Property Value Type Description System.Int32 Length Declaration public readonly int Length { get; } Property Value Type Description System.Int32 Methods Equals(Sig) Declaration public bool Equals(Sig other) Parameters Type Name Description Sig other Returns Type Description System.Boolean Equals(Sig) Declaration public bool Equals(Sig other) Parameters Type Name Description Sig other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description System.Void * GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description System.Void * Verify<TMessage>(TMessage, Ed25519.PublicKey) Declaration public bool Verify<TMessage>(TMessage message, Ed25519.PublicKey pk) where TMessage : IByteArray Parameters Type Name Description TMessage message Ed25519.PublicKey pk Returns Type Description System.Boolean Type Parameters Name Description TMessage Verify<TMessage>(TMessage, Ed25519.PublicKey) Declaration public bool Verify<TMessage>(TMessage message, Ed25519.PublicKey pk) where TMessage : IByteArray Parameters Type Name Description TMessage message Ed25519.PublicKey pk Returns Type Description System.Boolean Type Parameters Name Description TMessage Operators Equality(in Sig, in Sig) Declaration public static bool operator ==(in Sig x, in Sig y) Parameters Type Name Description Sig x Sig y Returns Type Description System.Boolean Equality(in Sig, in Sig) Declaration public static bool operator ==(in Sig x, in Sig y) Parameters Type Name Description Sig x Sig y Returns Type Description System.Boolean Implicit(Sig to Ed25519.Signature) Declaration public static implicit operator Ed25519.Signature(Sig signature) Parameters Type Name Description Sig signature Returns Type Description Ed25519.Signature Implicit(Sig to Ed25519.Signature) Declaration public static implicit operator Ed25519.Signature(Sig signature) Parameters Type Name Description Sig signature Returns Type Description Ed25519.Signature Implicit(Ed25519.Signature to Sig) Declaration public static implicit operator Sig(Ed25519.Signature sig) Parameters Type Name Description Ed25519.Signature sig Returns Type Description Sig Implicit(Ed25519.Signature to Sig) Declaration public static implicit operator Sig(Ed25519.Signature sig) Parameters Type Name Description Ed25519.Signature sig Returns Type Description Sig Inequality(in Sig, in Sig) Declaration public static bool operator !=(in Sig x, in Sig y) Parameters Type Name Description Sig x Sig y Returns Type Description System.Boolean Inequality(in Sig, in Sig) Declaration public static bool operator !=(in Sig x, in Sig y) Parameters Type Name Description Sig x Sig y Returns Type Description System.Boolean Implements ISignature System.IEquatable<T> IByteArray"
  },
  "api/AlgoSdk.SignatureType.html": {
    "href": "api/AlgoSdk.SignatureType.html",
    "title": "Enum SignatureType | Unity Algorand SDK",
    "keywords": "Enum SignatureType Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum SignatureType : byte Fields Name Description LogicSig Multisig None Sig"
  },
  "api/AlgoSdk.SignatureType_1.html": {
    "href": "api/AlgoSdk.SignatureType_1.html",
    "title": "Enum SignatureType | Unity Algorand SDK",
    "keywords": "Enum SignatureType Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum SignatureType : byte Fields Name Description LogicSig Multisig None Sig"
  },
  "api/AlgoSdk.SignatureTypeExtensions.html": {
    "href": "api/AlgoSdk.SignatureTypeExtensions.html",
    "title": "Class SignatureTypeExtensions | Unity Algorand SDK",
    "keywords": "Class SignatureTypeExtensions Inheritance System.Object SignatureTypeExtensions Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class SignatureTypeExtensions Fields TypeToString Declaration public static readonly string[] TypeToString Field Value Type Description System.String [] TypeToString Declaration public static readonly string[] TypeToString Field Value Type Description System.String [] Methods ToFixedString(SignatureType) Declaration public static FixedString32Bytes ToFixedString(this SignatureType sigType) Parameters Type Name Description SignatureType sigType Returns Type Description FixedString32Bytes ToFixedString(SignatureType) Declaration public static FixedString32Bytes ToFixedString(this SignatureType sigType) Parameters Type Name Description SignatureType sigType Returns Type Description FixedString32Bytes ToOptionalFixedString(SignatureType) Declaration public static Optional<FixedString32Bytes> ToOptionalFixedString(this SignatureType sigType) Parameters Type Name Description SignatureType sigType Returns Type Description Optional < FixedString32Bytes > ToOptionalFixedString(SignatureType) Declaration public static Optional<FixedString32Bytes> ToOptionalFixedString(this SignatureType sigType) Parameters Type Name Description SignatureType sigType Returns Type Description Optional < FixedString32Bytes >"
  },
  "api/AlgoSdk.Signed-1.html": {
    "href": "api/AlgoSdk.Signed-1.html",
    "title": "Struct Signed<TTransaction> | Unity Algorand SDK",
    "keywords": "Struct Signed<TTransaction> A typed signed transaction. Implements System.IEquatable < Signed <TTransaction>> Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct Signed<TTransaction> : IEquatable<Signed<TTransaction>> where TTransaction : ITransaction Type Parameters Name Description TTransaction The type of the transaction backing this struct. Fields Signature The signature this transaction was signed with. Declaration public TransactionSignature Signature Field Value Type Description TransactionSignature Signature The signature this transaction was signed with. Declaration public TransactionSignature Signature Field Value Type Description TransactionSignature Transaction The typed transaction that was signed. Declaration public TTransaction Transaction Field Value Type Description TTransaction Transaction The typed transaction that was signed. Declaration public TTransaction Transaction Field Value Type Description TTransaction Methods Equals(Signed<TTransaction>) Declaration public bool Equals(Signed<TTransaction> other) Parameters Type Name Description Signed <TTransaction> other Returns Type Description System.Boolean Equals(Signed<TTransaction>) Declaration public bool Equals(Signed<TTransaction> other) Parameters Type Name Description Signed <TTransaction> other Returns Type Description System.Boolean ToUntyped() Declaration public SignedTransaction ToUntyped() Returns Type Description SignedTransaction ToUntyped() Declaration public SignedTransaction ToUntyped() Returns Type Description SignedTransaction Operators Implicit(Signed<TTransaction> to SignedTransaction) Declaration public static implicit operator SignedTransaction(Signed<TTransaction> typedSignedTxn) Parameters Type Name Description Signed <TTransaction> typedSignedTxn Returns Type Description SignedTransaction Implicit(Signed<TTransaction> to SignedTransaction) Declaration public static implicit operator SignedTransaction(Signed<TTransaction> typedSignedTxn) Parameters Type Name Description Signed <TTransaction> typedSignedTxn Returns Type Description SignedTransaction Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.SignedTransaction.html": {
    "href": "api/AlgoSdk.SignedTransaction.html",
    "title": "Struct SignedTransaction | Unity Algorand SDK",
    "keywords": "Struct SignedTransaction An untyped signed transaction. See Signed<TTransaction> for a typed version. This is used as a wrapper around Transaction for the Algorand API. Implements System.IEquatable < SignedTransaction > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct SignedTransaction : IEquatable<SignedTransaction> Fields Transaction The untyped Transaction backing this struct. Declaration public Transaction Transaction Field Value Type Description Transaction Transaction The untyped Transaction backing this struct. Declaration public Transaction Transaction Field Value Type Description Transaction Properties Signature The signatured this transaction is signed with. Declaration public TransactionSignature Signature { get; set; } Property Value Type Description TransactionSignature Signature The signatured this transaction is signed with. Declaration public TransactionSignature Signature { get; set; } Property Value Type Description TransactionSignature Methods Equals(SignedTransaction) Declaration public bool Equals(SignedTransaction other) Parameters Type Name Description SignedTransaction other Returns Type Description System.Boolean Equals(SignedTransaction) Declaration public bool Equals(SignedTransaction other) Parameters Type Name Description SignedTransaction other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.SignMultisigRequest.html": {
    "href": "api/AlgoSdk.SignMultisigRequest.html",
    "title": "Struct SignMultisigRequest | Unity Algorand SDK",
    "keywords": "Struct SignMultisigRequest Implements System.IEquatable < SignMultisigRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct SignMultisigRequest : IEquatable<SignMultisigRequest> Fields Multisig Declaration public Multisig Multisig Field Value Type Description Multisig Multisig Declaration public Multisig Multisig Field Value Type Description Multisig PublicKey Declaration public Ed25519.PublicKey PublicKey Field Value Type Description Ed25519.PublicKey PublicKey Declaration public Ed25519.PublicKey PublicKey Field Value Type Description Ed25519.PublicKey Signer Declaration public Address Signer Field Value Type Description Address Signer Declaration public Address Signer Field Value Type Description Address Transaction Declaration public byte[] Transaction Field Value Type Description System.Byte [] Transaction Declaration public byte[] Transaction Field Value Type Description System.Byte [] WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(SignMultisigRequest) Declaration public bool Equals(SignMultisigRequest other) Parameters Type Name Description SignMultisigRequest other Returns Type Description System.Boolean Equals(SignMultisigRequest) Declaration public bool Equals(SignMultisigRequest other) Parameters Type Name Description SignMultisigRequest other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.SignMultisigResponse.html": {
    "href": "api/AlgoSdk.SignMultisigResponse.html",
    "title": "Struct SignMultisigResponse | Unity Algorand SDK",
    "keywords": "Struct SignMultisigResponse Implements System.IEquatable < SignMultisigResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct SignMultisigResponse : IEquatable<SignMultisigResponse> Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Message Declaration public string Message Field Value Type Description System.String Message Declaration public string Message Field Value Type Description System.String SignedTransaction Declaration public byte[] SignedTransaction Field Value Type Description System.Byte [] SignedTransaction Declaration public byte[] SignedTransaction Field Value Type Description System.Byte [] Methods Equals(SignMultisigResponse) Declaration public bool Equals(SignMultisigResponse other) Parameters Type Name Description SignMultisigResponse other Returns Type Description System.Boolean Equals(SignMultisigResponse) Declaration public bool Equals(SignMultisigResponse other) Parameters Type Name Description SignMultisigResponse other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.SignProgramMultisigRequest.html": {
    "href": "api/AlgoSdk.SignProgramMultisigRequest.html",
    "title": "Struct SignProgramMultisigRequest | Unity Algorand SDK",
    "keywords": "Struct SignProgramMultisigRequest Implements System.IEquatable < SignProgramMultisigRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct SignProgramMultisigRequest : IEquatable<SignProgramMultisigRequest> Fields Address Declaration public Address Address Field Value Type Description Address Address Declaration public Address Address Field Value Type Description Address Data Declaration public byte[] Data Field Value Type Description System.Byte [] Data Declaration public byte[] Data Field Value Type Description System.Byte [] Multisig Declaration public Multisig Multisig Field Value Type Description Multisig Multisig Declaration public Multisig Multisig Field Value Type Description Multisig PublicKey Declaration public Ed25519.PublicKey PublicKey Field Value Type Description Ed25519.PublicKey PublicKey Declaration public Ed25519.PublicKey PublicKey Field Value Type Description Ed25519.PublicKey WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(SignProgramMultisigRequest) Declaration public bool Equals(SignProgramMultisigRequest other) Parameters Type Name Description SignProgramMultisigRequest other Returns Type Description System.Boolean Equals(SignProgramMultisigRequest) Declaration public bool Equals(SignProgramMultisigRequest other) Parameters Type Name Description SignProgramMultisigRequest other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.SignProgramMultisigResponse.html": {
    "href": "api/AlgoSdk.SignProgramMultisigResponse.html",
    "title": "Struct SignProgramMultisigResponse | Unity Algorand SDK",
    "keywords": "Struct SignProgramMultisigResponse Implements System.IEquatable < SignProgramMultisigResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct SignProgramMultisigResponse : IEquatable<SignProgramMultisigResponse> Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Message Declaration public string Message Field Value Type Description System.String Message Declaration public string Message Field Value Type Description System.String SignedProgram Declaration public byte[] SignedProgram Field Value Type Description System.Byte [] SignedProgram Declaration public byte[] SignedProgram Field Value Type Description System.Byte [] Methods Equals(SignProgramMultisigResponse) Declaration public bool Equals(SignProgramMultisigResponse other) Parameters Type Name Description SignProgramMultisigResponse other Returns Type Description System.Boolean Equals(SignProgramMultisigResponse) Declaration public bool Equals(SignProgramMultisigResponse other) Parameters Type Name Description SignProgramMultisigResponse other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.SignProgramRequest.html": {
    "href": "api/AlgoSdk.SignProgramRequest.html",
    "title": "Struct SignProgramRequest | Unity Algorand SDK",
    "keywords": "Struct SignProgramRequest Implements System.IEquatable < SignProgramRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct SignProgramRequest : IEquatable<SignProgramRequest> Fields Address Declaration public Address Address Field Value Type Description Address Address Declaration public Address Address Field Value Type Description Address Data Declaration public byte[] Data Field Value Type Description System.Byte [] Data Declaration public byte[] Data Field Value Type Description System.Byte [] WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(SignProgramRequest) Declaration public bool Equals(SignProgramRequest other) Parameters Type Name Description SignProgramRequest other Returns Type Description System.Boolean Equals(SignProgramRequest) Declaration public bool Equals(SignProgramRequest other) Parameters Type Name Description SignProgramRequest other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.SignProgramResponse.html": {
    "href": "api/AlgoSdk.SignProgramResponse.html",
    "title": "Struct SignProgramResponse | Unity Algorand SDK",
    "keywords": "Struct SignProgramResponse Implements System.IEquatable < SignProgramResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct SignProgramResponse : IEquatable<SignProgramResponse> Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Message Declaration public string Message Field Value Type Description System.String Message Declaration public string Message Field Value Type Description System.String SignedProgram Declaration public Sig SignedProgram Field Value Type Description Sig SignedProgram Declaration public Sig SignedProgram Field Value Type Description Sig Methods Equals(SignProgramResponse) Declaration public bool Equals(SignProgramResponse other) Parameters Type Name Description SignProgramResponse other Returns Type Description System.Boolean Equals(SignProgramResponse) Declaration public bool Equals(SignProgramResponse other) Parameters Type Name Description SignProgramResponse other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.SignTransactionRequest.html": {
    "href": "api/AlgoSdk.SignTransactionRequest.html",
    "title": "Struct SignTransactionRequest | Unity Algorand SDK",
    "keywords": "Struct SignTransactionRequest Implements System.IEquatable < SignTransactionRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct SignTransactionRequest : IEquatable<SignTransactionRequest> Fields PublicKey Declaration public Ed25519.PublicKey PublicKey Field Value Type Description Ed25519.PublicKey PublicKey Declaration public Ed25519.PublicKey PublicKey Field Value Type Description Ed25519.PublicKey Transaction Declaration public byte[] Transaction Field Value Type Description System.Byte [] Transaction Declaration public byte[] Transaction Field Value Type Description System.Byte [] WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes WalletPassword Declaration public FixedString128Bytes WalletPassword Field Value Type Description FixedString128Bytes Methods Equals(SignTransactionRequest) Declaration public bool Equals(SignTransactionRequest other) Parameters Type Name Description SignTransactionRequest other Returns Type Description System.Boolean Equals(SignTransactionRequest) Declaration public bool Equals(SignTransactionRequest other) Parameters Type Name Description SignTransactionRequest other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.SignTransactionResponse.html": {
    "href": "api/AlgoSdk.SignTransactionResponse.html",
    "title": "Struct SignTransactionResponse | Unity Algorand SDK",
    "keywords": "Struct SignTransactionResponse Implements System.IEquatable < SignTransactionResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct SignTransactionResponse : IEquatable<SignTransactionResponse> Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Message Declaration public string Message Field Value Type Description System.String Message Declaration public string Message Field Value Type Description System.String SignedTransaction Declaration public byte[] SignedTransaction Field Value Type Description System.Byte [] SignedTransaction Declaration public byte[] SignedTransaction Field Value Type Description System.Byte [] Methods Equals(SignTransactionResponse) Declaration public bool Equals(SignTransactionResponse other) Parameters Type Name Description SignTransactionResponse other Returns Type Description System.Boolean Equals(SignTransactionResponse) Declaration public bool Equals(SignTransactionResponse other) Parameters Type Name Description SignTransactionResponse other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.StateSchema.html": {
    "href": "api/AlgoSdk.StateSchema.html",
    "title": "Struct StateSchema | Unity Algorand SDK",
    "keywords": "Struct StateSchema The StateSchema object is only required for the create application call transaction. The StateSchema object must be fully populated for both the GlobalStateSchema and LocalStateSchema objects. Implements System.IEquatable < StateSchema > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct StateSchema : IEquatable<StateSchema> Fields NumByteSlices Maximum number of integer values that may be stored in the [global || local] application key/value store. Immutable. Declaration public ulong NumByteSlices Field Value Type Description System.UInt64 NumByteSlices Maximum number of integer values that may be stored in the [global || local] application key/value store. Immutable. Declaration public ulong NumByteSlices Field Value Type Description System.UInt64 NumUints Maximum number of byte slices values that may be stored in the [global || local] application key/value store. Immutable. Declaration public ulong NumUints Field Value Type Description System.UInt64 NumUints Maximum number of byte slices values that may be stored in the [global || local] application key/value store. Immutable. Declaration public ulong NumUints Field Value Type Description System.UInt64 Methods Equals(StateSchema) Declaration public bool Equals(StateSchema other) Parameters Type Name Description StateSchema other Returns Type Description System.Boolean Equals(StateSchema) Declaration public bool Equals(StateSchema other) Parameters Type Name Description StateSchema other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.Status.html": {
    "href": "api/AlgoSdk.Status.html",
    "title": "Struct Status | Unity Algorand SDK",
    "keywords": "Struct Status The node status from GetCurrentStatus() and GetStatusAfterWaitingForRound(UInt64) Implements System.IEquatable < Status > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct Status : IEquatable<Status> Fields Catchpoint The current catchpoint that is being caught up to Declaration public string Catchpoint Field Value Type Description System.String Catchpoint The current catchpoint that is being caught up to Declaration public string Catchpoint Field Value Type Description System.String CatchpointAcquiredBlocks The number of blocks that have already been obtained by the node as part of the catchup Declaration public ulong CatchpointAcquiredBlocks Field Value Type Description System.UInt64 CatchpointAcquiredBlocks The number of blocks that have already been obtained by the node as part of the catchup Declaration public ulong CatchpointAcquiredBlocks Field Value Type Description System.UInt64 CatchpointProcessedAmounts The number of accounts from the current catchpoint that have been processed so far as part of the catchup Declaration public ulong CatchpointProcessedAmounts Field Value Type Description System.UInt64 CatchpointProcessedAmounts The number of accounts from the current catchpoint that have been processed so far as part of the catchup Declaration public ulong CatchpointProcessedAmounts Field Value Type Description System.UInt64 CatchpointTotalAccounts The total number of accounts included in the current catchpoint Declaration public ulong CatchpointTotalAccounts Field Value Type Description System.UInt64 CatchpointTotalAccounts The total number of accounts included in the current catchpoint Declaration public ulong CatchpointTotalAccounts Field Value Type Description System.UInt64 CatchpointTotalBlocks The total number of blocks that are required to complete the current catchpoint catchup Declaration public ulong CatchpointTotalBlocks Field Value Type Description System.UInt64 CatchpointTotalBlocks The total number of blocks that are required to complete the current catchpoint catchup Declaration public ulong CatchpointTotalBlocks Field Value Type Description System.UInt64 CatchpointVerifiedAccounts The number of accounts from the current catchpoint that have been verified so far as part of the catchup Declaration public ulong CatchpointVerifiedAccounts Field Value Type Description System.UInt64 CatchpointVerifiedAccounts The number of accounts from the current catchpoint that have been verified so far as part of the catchup Declaration public ulong CatchpointVerifiedAccounts Field Value Type Description System.UInt64 CatchupTime CatchupTime in nanoseconds Declaration public ulong CatchupTime Field Value Type Description System.UInt64 CatchupTime CatchupTime in nanoseconds Declaration public ulong CatchupTime Field Value Type Description System.UInt64 LastCatchpoint The last catchpoint seen by the node Declaration public string LastCatchpoint Field Value Type Description System.String LastCatchpoint The last catchpoint seen by the node Declaration public string LastCatchpoint Field Value Type Description System.String LastRound indicates the last round seen Declaration public ulong LastRound Field Value Type Description System.UInt64 LastRound indicates the last round seen Declaration public ulong LastRound Field Value Type Description System.UInt64 LastVersion indicates the last consensus version supported Declaration public string LastVersion Field Value Type Description System.String LastVersion indicates the last consensus version supported Declaration public string LastVersion Field Value Type Description System.String NextVersion NextVersion of consensus protocol to use Declaration public string NextVersion Field Value Type Description System.String NextVersion NextVersion of consensus protocol to use Declaration public string NextVersion Field Value Type Description System.String NextVersionRound NextVersionRound is the round at which the next consensus version will apply Declaration public ulong NextVersionRound Field Value Type Description System.UInt64 NextVersionRound NextVersionRound is the round at which the next consensus version will apply Declaration public ulong NextVersionRound Field Value Type Description System.UInt64 NextVersionSupported NextVersionSupported indicates whether the next consensus version is supported by this node Declaration public bool NextVersionSupported Field Value Type Description System.Boolean NextVersionSupported NextVersionSupported indicates whether the next consensus version is supported by this node Declaration public bool NextVersionSupported Field Value Type Description System.Boolean StoppedAtUnsupportedRound StoppedAtUnsupportedRound indicates that the node does not support the new rounds and has stopped making progress Declaration public bool StoppedAtUnsupportedRound Field Value Type Description System.Boolean StoppedAtUnsupportedRound StoppedAtUnsupportedRound indicates that the node does not support the new rounds and has stopped making progress Declaration public bool StoppedAtUnsupportedRound Field Value Type Description System.Boolean TimeSinceLastRound TimeSinceLastRound in nanoseconds Declaration public ulong TimeSinceLastRound Field Value Type Description System.UInt64 TimeSinceLastRound TimeSinceLastRound in nanoseconds Declaration public ulong TimeSinceLastRound Field Value Type Description System.UInt64 Methods Equals(Status) Declaration public bool Equals(Status other) Parameters Type Name Description Status other Returns Type Description System.Boolean Equals(Status) Declaration public bool Equals(Status other) Parameters Type Name Description Status other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.StringComparer.html": {
    "href": "api/AlgoSdk.StringComparer.html",
    "title": "Struct StringComparer | Unity Algorand SDK",
    "keywords": "Struct StringComparer Implements IEqualityComparer < System.String > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct StringComparer Fields Instance Declaration public static readonly StringComparer Instance Field Value Type Description StringComparer Instance Declaration public static readonly StringComparer Instance Field Value Type Description StringComparer Methods Equals(String, String) Declaration public static bool Equals(string x, string y) Parameters Type Name Description System.String x System.String y Returns Type Description System.Boolean Equals(String, String) Declaration public static bool Equals(string x, string y) Parameters Type Name Description System.String x System.String y Returns Type Description System.Boolean Implements IEqualityComparer<>"
  },
  "api/AlgoSdk.TealBytes.html": {
    "href": "api/AlgoSdk.TealBytes.html",
    "title": "Struct TealBytes | Unity Algorand SDK",
    "keywords": "Struct TealBytes Implements System.IEquatable < TealBytes > IByteArray Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct TealBytes : IEquatable<TealBytes> Fields Bytes Declaration public FixedBytes128 Bytes Field Value Type Description FixedBytes128 Bytes Declaration public FixedBytes128 Bytes Field Value Type Description FixedBytes128 SizeBytes Declaration public const int SizeBytes = 128 Field Value Type Description System.Int32 SizeBytes Declaration public const int SizeBytes = 128 Field Value Type Description System.Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Length Declaration public readonly int Length { get; } Property Value Type Description System.Int32 Length Declaration public readonly int Length { get; } Property Value Type Description System.Int32 Methods Equals(TealBytes) Declaration public bool Equals(TealBytes other) Parameters Type Name Description TealBytes other Returns Type Description System.Boolean Equals(TealBytes) Declaration public bool Equals(TealBytes other) Parameters Type Name Description TealBytes other Returns Type Description System.Boolean GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description System.Void * GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description System.Void * Implements System.IEquatable<T> IByteArray"
  },
  "api/AlgoSdk.TealCompilationResult.html": {
    "href": "api/AlgoSdk.TealCompilationResult.html",
    "title": "Struct TealCompilationResult | Unity Algorand SDK",
    "keywords": "Struct TealCompilationResult Result from TealCompile(String) Implements System.IEquatable < TealCompilationResult > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct TealCompilationResult : IEquatable<TealCompilationResult> Fields CompiledBytesBase64 base64 encoded program bytes Declaration public string CompiledBytesBase64 Field Value Type Description System.String CompiledBytesBase64 base64 encoded program bytes Declaration public string CompiledBytesBase64 Field Value Type Description System.String Hash base32 SHA512_256 of program bytes (Address style) Declaration public string Hash Field Value Type Description System.String Hash base32 SHA512_256 of program bytes (Address style) Declaration public string Hash Field Value Type Description System.String Methods Equals(TealCompilationResult) Declaration public bool Equals(TealCompilationResult other) Parameters Type Name Description TealCompilationResult other Returns Type Description System.Boolean Equals(TealCompilationResult) Declaration public bool Equals(TealCompilationResult other) Parameters Type Name Description TealCompilationResult other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.TealKeyValue.html": {
    "href": "api/AlgoSdk.TealKeyValue.html",
    "title": "Struct TealKeyValue | Unity Algorand SDK",
    "keywords": "Struct TealKeyValue Represents a key-value pair in an application store. Implements System.IEquatable < TealKeyValue > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct TealKeyValue : IEquatable<TealKeyValue> Fields Key Declaration public FixedString128Bytes Key Field Value Type Description FixedString128Bytes Key Declaration public FixedString128Bytes Key Field Value Type Description FixedString128Bytes Value Declaration public TealValue Value Field Value Type Description TealValue Value Declaration public TealValue Value Field Value Type Description TealValue Methods Equals(TealKeyValue) Declaration public bool Equals(TealKeyValue other) Parameters Type Name Description TealKeyValue other Returns Type Description System.Boolean Equals(TealKeyValue) Declaration public bool Equals(TealKeyValue other) Parameters Type Name Description TealKeyValue other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.TealValue.html": {
    "href": "api/AlgoSdk.TealValue.html",
    "title": "Struct TealValue | Unity Algorand SDK",
    "keywords": "Struct TealValue Represents a TEAL value. Implements System.IEquatable < TealValue > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct TealValue : IEquatable<TealValue> Fields Bytes [tb] bytes value. Declaration public TealBytes Bytes Field Value Type Description TealBytes Bytes [tb] bytes value. Declaration public TealBytes Bytes Field Value Type Description TealBytes Type See TealValueType Declaration public TealValueType Type Field Value Type Description TealValueType Type See TealValueType Declaration public TealValueType Type Field Value Type Description TealValueType UintValue [ui] uint value. Declaration public ulong UintValue Field Value Type Description System.UInt64 UintValue [ui] uint value. Declaration public ulong UintValue Field Value Type Description System.UInt64 Methods Equals(TealValue) Declaration public bool Equals(TealValue other) Parameters Type Name Description TealValue other Returns Type Description System.Boolean Equals(TealValue) Declaration public bool Equals(TealValue other) Parameters Type Name Description TealValue other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.TealValueType.html": {
    "href": "api/AlgoSdk.TealValueType.html",
    "title": "Enum TealValueType | Unity Algorand SDK",
    "keywords": "Enum TealValueType TEAL Value Type. Value 1 refers to bytes, value 2 refers to uint. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum TealValueType : byte Fields Name Description Bytes None Uint"
  },
  "api/AlgoSdk.TealValueType_1.html": {
    "href": "api/AlgoSdk.TealValueType_1.html",
    "title": "Enum TealValueType | Unity Algorand SDK",
    "keywords": "Enum TealValueType TEAL Value Type. Value 1 refers to bytes, value 2 refers to uint. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum TealValueType : byte Fields Name Description Bytes None Uint"
  },
  "api/AlgoSdk.TokenizedClientExtensions.html": {
    "href": "api/AlgoSdk.TokenizedClientExtensions.html",
    "title": "Class TokenizedClientExtensions | Unity Algorand SDK",
    "keywords": "Class TokenizedClientExtensions Inheritance System.Object TokenizedClientExtensions Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class TokenizedClientExtensions Methods Delete<T>(T, String) Declaration public static AlgoApiRequest Delete<T>(this T client, string endpoint) where T : IAlgoApiClient Parameters Type Name Description T client System.String endpoint Returns Type Description AlgoApiRequest Type Parameters Name Description T Delete<T>(T, String) Declaration public static AlgoApiRequest Delete<T>(this T client, string endpoint) where T : IAlgoApiClient Parameters Type Name Description T client System.String endpoint Returns Type Description AlgoApiRequest Type Parameters Name Description T Get<T>(T, String) Declaration public static AlgoApiRequest Get<T>(this T client, string endpoint) where T : IAlgoApiClient Parameters Type Name Description T client System.String endpoint Returns Type Description AlgoApiRequest Type Parameters Name Description T Get<T>(T, String) Declaration public static AlgoApiRequest Get<T>(this T client, string endpoint) where T : IAlgoApiClient Parameters Type Name Description T client System.String endpoint Returns Type Description AlgoApiRequest Type Parameters Name Description T GetUrl<T>(T, String) Declaration public static string GetUrl<T>(this T client, string endpoint) where T : IAlgoApiClient Parameters Type Name Description T client System.String endpoint Returns Type Description System.String Type Parameters Name Description T GetUrl<T>(T, String) Declaration public static string GetUrl<T>(this T client, string endpoint) where T : IAlgoApiClient Parameters Type Name Description T client System.String endpoint Returns Type Description System.String Type Parameters Name Description T Post<T>(T, String) Declaration public static AlgoApiRequest Post<T>(this T client, string endpoint) where T : IAlgoApiClient Parameters Type Name Description T client System.String endpoint Returns Type Description AlgoApiRequest Type Parameters Name Description T Post<T>(T, String) Declaration public static AlgoApiRequest Post<T>(this T client, string endpoint) where T : IAlgoApiClient Parameters Type Name Description T client System.String endpoint Returns Type Description AlgoApiRequest Type Parameters Name Description T"
  },
  "api/AlgoSdk.Transaction.html": {
    "href": "api/AlgoSdk.Transaction.html",
    "title": "Struct Transaction | Unity Algorand SDK",
    "keywords": "Struct Transaction Implements IAppCallTxn IAssetConfigTxn IAssetFreezeTxn System.IEquatable < Transaction > ITransaction Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct Transaction : IAppCallTxn, IAssetConfigTxn, IAssetFreezeTxn, IEquatable<Transaction>, ITransaction Fields ApplicationCallParams Params found in Application Call Transactions. Declaration public AppCallTxn.Params ApplicationCallParams Field Value Type Description AppCallTxn.Params ApplicationCallParams Params found in Application Call Transactions. Declaration public AppCallTxn.Params ApplicationCallParams Field Value Type Description AppCallTxn.Params AssetConfigurationParams Params found in Asset Configuration Transactions. Declaration public AssetConfigTxn.Params AssetConfigurationParams Field Value Type Description AssetConfigTxn.Params AssetConfigurationParams Params found in Asset Configuration Transactions. Declaration public AssetConfigTxn.Params AssetConfigurationParams Field Value Type Description AssetConfigTxn.Params AssetFreezeParams Params found in Asset Freeze Transactions. Declaration public AssetFreezeTxn.Params AssetFreezeParams Field Value Type Description AssetFreezeTxn.Params AssetFreezeParams Params found in Asset Freeze Transactions. Declaration public AssetFreezeTxn.Params AssetFreezeParams Field Value Type Description AssetFreezeTxn.Params AssetTransferParams Params found in Asset Transfer Transactions. Declaration public AssetTransferTxn.Params AssetTransferParams Field Value Type Description AssetTransferTxn.Params AssetTransferParams Params found in Asset Transfer Transactions. Declaration public AssetTransferTxn.Params AssetTransferParams Field Value Type Description AssetTransferTxn.Params HeaderParams Params found in all transactions. Declaration public TransactionHeader HeaderParams Field Value Type Description TransactionHeader HeaderParams Params found in all transactions. Declaration public TransactionHeader HeaderParams Field Value Type Description TransactionHeader KeyRegistrationParams Params found in Key Registration Transactions. Declaration public KeyRegTxn.Params KeyRegistrationParams Field Value Type Description KeyRegTxn.Params KeyRegistrationParams Params found in Key Registration Transactions. Declaration public KeyRegTxn.Params KeyRegistrationParams Field Value Type Description KeyRegTxn.Params PaymentParams Params found in Payment Transactions. Declaration public PaymentTxn.Params PaymentParams Field Value Type Description PaymentTxn.Params PaymentParams Params found in Payment Transactions. Declaration public PaymentTxn.Params PaymentParams Field Value Type Description PaymentTxn.Params Signature The signature used for this Transaction. Declaration public TransactionSignature Signature Field Value Type Description TransactionSignature Signature The signature used for this Transaction. Declaration public TransactionSignature Signature Field Value Type Description TransactionSignature SignaturePrefix Prefix bytes for signing transaction bytes. Declaration public static readonly byte[] SignaturePrefix Field Value Type Description System.Byte [] SignaturePrefix Prefix bytes for signing transaction bytes. Declaration public static readonly byte[] SignaturePrefix Field Value Type Description System.Byte [] Properties Accounts Declaration public Address[] Accounts { get; set; } Property Value Type Description Address [] Accounts Declaration public Address[] Accounts { get; set; } Property Value Type Description Address [] Amount Declaration public ulong Amount { get; set; } Property Value Type Description System.UInt64 Amount Declaration public ulong Amount { get; set; } Property Value Type Description System.UInt64 AppArguments Declaration public CompiledTeal AppArguments { get; set; } Property Value Type Description CompiledTeal AppArguments Declaration public CompiledTeal AppArguments { get; set; } Property Value Type Description CompiledTeal ApplicationId Declaration public ulong ApplicationId { get; set; } Property Value Type Description System.UInt64 ApplicationId Declaration public ulong ApplicationId { get; set; } Property Value Type Description System.UInt64 ApprovalProgram Declaration public CompiledTeal ApprovalProgram { get; set; } Property Value Type Description CompiledTeal ApprovalProgram Declaration public CompiledTeal ApprovalProgram { get; set; } Property Value Type Description CompiledTeal AssetAmount Declaration public ulong AssetAmount { get; set; } Property Value Type Description System.UInt64 AssetAmount Declaration public ulong AssetAmount { get; set; } Property Value Type Description System.UInt64 AssetCloseTo Declaration public Address AssetCloseTo { get; set; } Property Value Type Description Address AssetCloseTo Declaration public Address AssetCloseTo { get; set; } Property Value Type Description Address AssetFrozen Declaration public Optional<bool> AssetFrozen { get; set; } Property Value Type Description Optional < System.Boolean > AssetFrozen Declaration public Optional<bool> AssetFrozen { get; set; } Property Value Type Description Optional < System.Boolean > AssetParams Declaration public AssetParams AssetParams { get; set; } Property Value Type Description AssetParams AssetParams Declaration public AssetParams AssetParams { get; set; } Property Value Type Description AssetParams AssetReceiver Declaration public Address AssetReceiver { get; set; } Property Value Type Description Address AssetReceiver Declaration public Address AssetReceiver { get; set; } Property Value Type Description Address AssetSender Declaration public Address AssetSender { get; set; } Property Value Type Description Address AssetSender Declaration public Address AssetSender { get; set; } Property Value Type Description Address AuthAddress Declaration public Address AuthAddress { get; set; } Property Value Type Description Address AuthAddress Declaration public Address AuthAddress { get; set; } Property Value Type Description Address ClearStateProgram Declaration public CompiledTeal ClearStateProgram { get; set; } Property Value Type Description CompiledTeal ClearStateProgram Declaration public CompiledTeal ClearStateProgram { get; set; } Property Value Type Description CompiledTeal CloseRemainderTo Declaration public Address CloseRemainderTo { get; set; } Property Value Type Description Address CloseRemainderTo Declaration public Address CloseRemainderTo { get; set; } Property Value Type Description Address CloseRewards Declaration public ulong CloseRewards { get; set; } Property Value Type Description System.UInt64 CloseRewards Declaration public ulong CloseRewards { get; set; } Property Value Type Description System.UInt64 ClosingAmount Declaration public ulong ClosingAmount { get; set; } Property Value Type Description System.UInt64 ClosingAmount Declaration public ulong ClosingAmount { get; set; } Property Value Type Description System.UInt64 ConfigAsset Declaration public ulong ConfigAsset { get; set; } Property Value Type Description System.UInt64 ConfigAsset Declaration public ulong ConfigAsset { get; set; } Property Value Type Description System.UInt64 ConfirmedRound Declaration public ulong ConfirmedRound { get; set; } Property Value Type Description System.UInt64 ConfirmedRound Declaration public ulong ConfirmedRound { get; set; } Property Value Type Description System.UInt64 CreatedApplicationIndex Declaration public ulong CreatedApplicationIndex { get; set; } Property Value Type Description System.UInt64 CreatedApplicationIndex Declaration public ulong CreatedApplicationIndex { get; set; } Property Value Type Description System.UInt64 CreatedAssetIndex Declaration public ulong CreatedAssetIndex { get; set; } Property Value Type Description System.UInt64 CreatedAssetIndex Declaration public ulong CreatedAssetIndex { get; set; } Property Value Type Description System.UInt64 ExtraProgramPages Declaration public ulong ExtraProgramPages { get; set; } Property Value Type Description System.UInt64 ExtraProgramPages Declaration public ulong ExtraProgramPages { get; set; } Property Value Type Description System.UInt64 Fee Declaration public ulong Fee { get; set; } Property Value Type Description System.UInt64 Fee Declaration public ulong Fee { get; set; } Property Value Type Description System.UInt64 FirstValidRound Declaration public ulong FirstValidRound { get; set; } Property Value Type Description System.UInt64 FirstValidRound Declaration public ulong FirstValidRound { get; set; } Property Value Type Description System.UInt64 ForeignApps Declaration public ulong[] ForeignApps { get; set; } Property Value Type Description System.UInt64 [] ForeignApps Declaration public ulong[] ForeignApps { get; set; } Property Value Type Description System.UInt64 [] ForeignAssets Declaration public ulong[] ForeignAssets { get; set; } Property Value Type Description System.UInt64 [] ForeignAssets Declaration public ulong[] ForeignAssets { get; set; } Property Value Type Description System.UInt64 [] FreezeAccount Declaration public Address FreezeAccount { get; set; } Property Value Type Description Address FreezeAccount Declaration public Address FreezeAccount { get; set; } Property Value Type Description Address FreezeAsset Declaration public ulong FreezeAsset { get; set; } Property Value Type Description System.UInt64 FreezeAsset Declaration public ulong FreezeAsset { get; set; } Property Value Type Description System.UInt64 GenesisHash Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisHash Declaration public GenesisHash GenesisHash { get; set; } Property Value Type Description GenesisHash GenesisId Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes GenesisId Declaration public FixedString32Bytes GenesisId { get; set; } Property Value Type Description FixedString32Bytes GlobalStateDelta Declaration public EvalDeltaKeyValue[] GlobalStateDelta { get; set; } Property Value Type Description EvalDeltaKeyValue [] GlobalStateDelta Declaration public EvalDeltaKeyValue[] GlobalStateDelta { get; set; } Property Value Type Description EvalDeltaKeyValue [] GlobalStateSchema Declaration public StateSchema GlobalStateSchema { get; set; } Property Value Type Description StateSchema GlobalStateSchema Declaration public StateSchema GlobalStateSchema { get; set; } Property Value Type Description StateSchema Group Declaration public Sha512_256_Hash Group { get; set; } Property Value Type Description Sha512_256_Hash Group Declaration public Sha512_256_Hash Group { get; set; } Property Value Type Description Sha512_256_Hash Id Declaration public TransactionId Id { get; set; } Property Value Type Description TransactionId Id Declaration public TransactionId Id { get; set; } Property Value Type Description TransactionId IntraRoundOffset Declaration public ulong IntraRoundOffset { get; set; } Property Value Type Description System.UInt64 IntraRoundOffset Declaration public ulong IntraRoundOffset { get; set; } Property Value Type Description System.UInt64 LastValidRound Declaration public ulong LastValidRound { get; set; } Property Value Type Description System.UInt64 LastValidRound Declaration public ulong LastValidRound { get; set; } Property Value Type Description System.UInt64 Lease Declaration public Sha512_256_Hash Lease { get; set; } Property Value Type Description Sha512_256_Hash Lease Declaration public Sha512_256_Hash Lease { get; set; } Property Value Type Description Sha512_256_Hash LocalStateDelta Declaration public AccountStateDelta[] LocalStateDelta { get; set; } Property Value Type Description AccountStateDelta [] LocalStateDelta Declaration public AccountStateDelta[] LocalStateDelta { get; set; } Property Value Type Description AccountStateDelta [] LocalStateSchema Declaration public StateSchema LocalStateSchema { get; set; } Property Value Type Description StateSchema LocalStateSchema Declaration public StateSchema LocalStateSchema { get; set; } Property Value Type Description StateSchema NonParticipation Declaration public Optional<bool> NonParticipation { get; set; } Property Value Type Description Optional < System.Boolean > NonParticipation Declaration public Optional<bool> NonParticipation { get; set; } Property Value Type Description Optional < System.Boolean > Note Declaration public byte[] Note { get; set; } Property Value Type Description System.Byte [] Note Declaration public byte[] Note { get; set; } Property Value Type Description System.Byte [] OnComplete Declaration public OnCompletion OnComplete { get; set; } Property Value Type Description OnCompletion OnComplete Declaration public OnCompletion OnComplete { get; set; } Property Value Type Description OnCompletion Receiver Declaration public Address Receiver { get; set; } Property Value Type Description Address Receiver Declaration public Address Receiver { get; set; } Property Value Type Description Address ReceiverRewards Declaration public ulong ReceiverRewards { get; set; } Property Value Type Description System.UInt64 ReceiverRewards Declaration public ulong ReceiverRewards { get; set; } Property Value Type Description System.UInt64 RekeyTo Declaration public Address RekeyTo { get; set; } Property Value Type Description Address RekeyTo Declaration public Address RekeyTo { get; set; } Property Value Type Description Address RoundTime Declaration public ulong RoundTime { get; set; } Property Value Type Description System.UInt64 RoundTime Declaration public ulong RoundTime { get; set; } Property Value Type Description System.UInt64 SelectionParticipationKey Declaration public VrfPubKey SelectionParticipationKey { get; set; } Property Value Type Description VrfPubKey SelectionParticipationKey Declaration public VrfPubKey SelectionParticipationKey { get; set; } Property Value Type Description VrfPubKey Sender Declaration public Address Sender { get; set; } Property Value Type Description Address Sender Declaration public Address Sender { get; set; } Property Value Type Description Address SenderRewards Declaration public ulong SenderRewards { get; set; } Property Value Type Description System.UInt64 SenderRewards Declaration public ulong SenderRewards { get; set; } Property Value Type Description System.UInt64 TransactionType Declaration public TransactionType TransactionType { get; set; } Property Value Type Description TransactionType TransactionType Declaration public TransactionType TransactionType { get; set; } Property Value Type Description TransactionType VoteFirst Declaration public ulong VoteFirst { get; set; } Property Value Type Description System.UInt64 VoteFirst Declaration public ulong VoteFirst { get; set; } Property Value Type Description System.UInt64 VoteKeyDilution Declaration public ulong VoteKeyDilution { get; set; } Property Value Type Description System.UInt64 VoteKeyDilution Declaration public ulong VoteKeyDilution { get; set; } Property Value Type Description System.UInt64 VoteLast Declaration public ulong VoteLast { get; set; } Property Value Type Description System.UInt64 VoteLast Declaration public ulong VoteLast { get; set; } Property Value Type Description System.UInt64 VoteParticipationKey Declaration public Ed25519.PublicKey VoteParticipationKey { get; set; } Property Value Type Description Ed25519.PublicKey VoteParticipationKey Declaration public Ed25519.PublicKey VoteParticipationKey { get; set; } Property Value Type Description Ed25519.PublicKey XferAsset Declaration public ulong XferAsset { get; set; } Property Value Type Description System.UInt64 XferAsset Declaration public ulong XferAsset { get; set; } Property Value Type Description System.UInt64 Methods AppCall(Address, TransactionParams, UInt64, OnCompletion, Byte[], Address[], UInt64[], UInt64[]) Create an AppCallTxn used to call an application. Declaration public static AppCallTxn AppCall(Address sender, TransactionParams txnParams, ulong applicationId, OnCompletion onComplete = null, byte[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams System.UInt64 applicationId ID of the application being configured. OnCompletion onComplete Defines what additional actions occur with the transaction. System.Byte [] appArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Address [] accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. System.UInt64 [] foreignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. System.UInt64 [] foreignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Returns Type Description AppCallTxn An AppCallTxn used to call an application. AppCall(Address, TransactionParams, UInt64, OnCompletion, Byte[], Address[], UInt64[], UInt64[]) Create an AppCallTxn used to call an application. Declaration public static AppCallTxn AppCall(Address sender, TransactionParams txnParams, ulong applicationId, OnCompletion onComplete = null, byte[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams System.UInt64 applicationId ID of the application being configured. OnCompletion onComplete Defines what additional actions occur with the transaction. System.Byte [] appArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Address [] accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. System.UInt64 [] foreignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. System.UInt64 [] foreignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Returns Type Description AppCallTxn An AppCallTxn used to call an application. AppClearState(Address, TransactionParams, UInt64, Byte[], Address[], UInt64[], UInt64[]) Create an AppCallTxn with params to clear state with your account. Declaration public static AppCallTxn AppClearState(Address sender, TransactionParams txnParams, ulong applicationId, byte[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams System.UInt64 applicationId ID of the application being configured. System.Byte [] appArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Address [] accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. System.UInt64 [] foreignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. System.UInt64 [] foreignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Returns Type Description AppCallTxn An AppCallTxn with params to clear app state with your account. AppClearState(Address, TransactionParams, UInt64, Byte[], Address[], UInt64[], UInt64[]) Create an AppCallTxn with params to clear state with your account. Declaration public static AppCallTxn AppClearState(Address sender, TransactionParams txnParams, ulong applicationId, byte[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams System.UInt64 applicationId ID of the application being configured. System.Byte [] appArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Address [] accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. System.UInt64 [] foreignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. System.UInt64 [] foreignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Returns Type Description AppCallTxn An AppCallTxn with params to clear app state with your account. AppCloseOut(Address, TransactionParams, UInt64, Byte[], Address[], UInt64[], UInt64[]) Create an AppCallTxn with params to close out state with your account. Declaration public static AppCallTxn AppCloseOut(Address sender, TransactionParams txnParams, ulong applicationId, byte[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams System.UInt64 applicationId ID of the application being configured. System.Byte [] appArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Address [] accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. System.UInt64 [] foreignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. System.UInt64 [] foreignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Returns Type Description AppCallTxn An AppCallTxn with params set to close out state with your account. AppCloseOut(Address, TransactionParams, UInt64, Byte[], Address[], UInt64[], UInt64[]) Create an AppCallTxn with params to close out state with your account. Declaration public static AppCallTxn AppCloseOut(Address sender, TransactionParams txnParams, ulong applicationId, byte[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams System.UInt64 applicationId ID of the application being configured. System.Byte [] appArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Address [] accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. System.UInt64 [] foreignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. System.UInt64 [] foreignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Returns Type Description AppCallTxn An AppCallTxn with params set to close out state with your account. AppCreate(Address, TransactionParams, Byte[], Byte[], StateSchema, StateSchema, UInt64) Create an AppCallTxn with params to create apps. Declaration public static AppCallTxn AppCreate(Address sender, TransactionParams txnParams, byte[] approvalProgram, byte[] clearStateProgram, StateSchema globalStateSchema = default(StateSchema), StateSchema localStateSchema = default(StateSchema), ulong extraProgramPages = 0UL) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams System.Byte [] approvalProgram Logic executed for every application transaction, except when on-completion is set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Approval programs may reject the transaction. System.Byte [] clearStateProgram Logic executed for application transactions with on-completion set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Clear state programs cannot reject the transaction. StateSchema globalStateSchema Holds the maximum number of global state values defined within a StateSchema object. StateSchema localStateSchema Holds the maximum number of local state values defined within a StateSchema object. System.UInt64 extraProgramPages Number of additional pages allocated to the application's approval and clear state programs. Each ExtraProgramPages is 2048 bytes. The sum of ApprovalProgram and ClearStateProgram may not exceed 2048*(1+ExtraProgramPages) bytes. Returns Type Description AppCallTxn An AppCallTxn with params set to create apps AppCreate(Address, TransactionParams, Byte[], Byte[], StateSchema, StateSchema, UInt64) Create an AppCallTxn with params to create apps. Declaration public static AppCallTxn AppCreate(Address sender, TransactionParams txnParams, byte[] approvalProgram, byte[] clearStateProgram, StateSchema globalStateSchema = default(StateSchema), StateSchema localStateSchema = default(StateSchema), ulong extraProgramPages = 0UL) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams System.Byte [] approvalProgram Logic executed for every application transaction, except when on-completion is set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Approval programs may reject the transaction. System.Byte [] clearStateProgram Logic executed for application transactions with on-completion set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Clear state programs cannot reject the transaction. StateSchema globalStateSchema Holds the maximum number of global state values defined within a StateSchema object. StateSchema localStateSchema Holds the maximum number of local state values defined within a StateSchema object. System.UInt64 extraProgramPages Number of additional pages allocated to the application's approval and clear state programs. Each ExtraProgramPages is 2048 bytes. The sum of ApprovalProgram and ClearStateProgram may not exceed 2048*(1+ExtraProgramPages) bytes. Returns Type Description AppCallTxn An AppCallTxn with params set to create apps AppDelete(Address, TransactionParams, UInt64, Byte[], Address[], UInt64[], UInt64[]) Create an AppCallTxn used to delete an application. Declaration public static AppCallTxn AppDelete(Address sender, TransactionParams txnParams, ulong applicationId, byte[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams System.UInt64 applicationId ID of the application being configured. System.Byte [] appArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Address [] accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. System.UInt64 [] foreignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. System.UInt64 [] foreignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Returns Type Description AppCallTxn An AppCallTxn with params to delete an application. AppDelete(Address, TransactionParams, UInt64, Byte[], Address[], UInt64[], UInt64[]) Create an AppCallTxn used to delete an application. Declaration public static AppCallTxn AppDelete(Address sender, TransactionParams txnParams, ulong applicationId, byte[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams System.UInt64 applicationId ID of the application being configured. System.Byte [] appArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Address [] accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. System.UInt64 [] foreignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. System.UInt64 [] foreignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Returns Type Description AppCallTxn An AppCallTxn with params to delete an application. AppOptIn(Address, TransactionParams, UInt64, Byte[], Address[], UInt64[], UInt64[]) Create an AppCallTxn used to opt in to an application. Declaration public static AppCallTxn AppOptIn(Address sender, TransactionParams txnParams, ulong applicationId, byte[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams System.UInt64 applicationId ID of the application being configured. System.Byte [] appArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Address [] accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. System.UInt64 [] foreignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. System.UInt64 [] foreignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Returns Type Description AppCallTxn An AppCallTxn with params to opt in to an application. AppOptIn(Address, TransactionParams, UInt64, Byte[], Address[], UInt64[], UInt64[]) Create an AppCallTxn used to opt in to an application. Declaration public static AppCallTxn AppOptIn(Address sender, TransactionParams txnParams, ulong applicationId, byte[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams System.UInt64 applicationId ID of the application being configured. System.Byte [] appArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Address [] accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. System.UInt64 [] foreignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. System.UInt64 [] foreignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Returns Type Description AppCallTxn An AppCallTxn with params to opt in to an application. AppUpdateTxn(Address, TransactionParams, UInt64, Byte[], Byte[], UInt64, Byte[], Address[], UInt64[], UInt64[]) Create an AppCallTxn used to update an application. Declaration public static AppCallTxn AppUpdateTxn(Address sender, TransactionParams txnParams, ulong applicationId, byte[] approvalProgram = null, byte[] clearStateProgram = null, ulong extraProgramPages = 0UL, byte[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams System.UInt64 applicationId ID of the application being configured. System.Byte [] approvalProgram Logic executed for every application transaction, except when on-completion is set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Approval programs may reject the transaction. System.Byte [] clearStateProgram Logic executed for application transactions with on-completion set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Clear state programs cannot reject the transaction. System.UInt64 extraProgramPages Number of additional pages allocated to the application's approval and clear state programs. Each ExtraProgramPages is 2048 bytes. The sum of ApprovalProgram and ClearStateProgram may not exceed 2048*(1+ExtraProgramPages) bytes. System.Byte [] appArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Address [] accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. System.UInt64 [] foreignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. System.UInt64 [] foreignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Returns Type Description AppCallTxn An AppCallTxn with params to update an application. AppUpdateTxn(Address, TransactionParams, UInt64, Byte[], Byte[], UInt64, Byte[], Address[], UInt64[], UInt64[]) Create an AppCallTxn used to update an application. Declaration public static AppCallTxn AppUpdateTxn(Address sender, TransactionParams txnParams, ulong applicationId, byte[] approvalProgram = null, byte[] clearStateProgram = null, ulong extraProgramPages = 0UL, byte[] appArguments = null, Address[] accounts = null, ulong[] foreignApps = null, ulong[] foreignAssets = null) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams System.UInt64 applicationId ID of the application being configured. System.Byte [] approvalProgram Logic executed for every application transaction, except when on-completion is set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Approval programs may reject the transaction. System.Byte [] clearStateProgram Logic executed for application transactions with on-completion set to \"clear\". It can read and write global state for the application, as well as account-specific local state. Clear state programs cannot reject the transaction. System.UInt64 extraProgramPages Number of additional pages allocated to the application's approval and clear state programs. Each ExtraProgramPages is 2048 bytes. The sum of ApprovalProgram and ClearStateProgram may not exceed 2048*(1+ExtraProgramPages) bytes. System.Byte [] appArguments Transaction specific arguments accessed from the application's approval-program and clear-state-program. Address [] accounts List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. System.UInt64 [] foreignApps Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. System.UInt64 [] foreignAssets Lists the assets whose AssetParams may be accessed by this application's approval-program and clear-state-program. The access is read-only. Returns Type Description AppCallTxn An AppCallTxn with params to update an application. AssetAccept(Address, TransactionParams, UInt64) Create an AssetTransferTxn for opting in to an asset. Declaration public static AssetTransferTxn AssetAccept(Address sender, TransactionParams txnParams, ulong xferAsset) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams System.UInt64 xferAsset The unique ID of the asset to opt-in to. Returns Type Description AssetTransferTxn An AssetTransferTxn for opting in to an asset. AssetAccept(Address, TransactionParams, UInt64) Create an AssetTransferTxn for opting in to an asset. Declaration public static AssetTransferTxn AssetAccept(Address sender, TransactionParams txnParams, ulong xferAsset) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams System.UInt64 xferAsset The unique ID of the asset to opt-in to. Returns Type Description AssetTransferTxn An AssetTransferTxn for opting in to an asset. AssetClawback(Address, TransactionParams, UInt64, UInt64, Address, Address) Creates a form of AssetTransferTxn to clawback assets from an account. Declaration public static AssetTransferTxn AssetClawback(Address sender, TransactionParams txnParams, ulong xferAsset, ulong assetAmount, Address assetSender, Address assetReceiver) Parameters Type Name Description Address sender The sender of this transaction must be the clawback account specified in the asset configuration. TransactionParams txnParams See TransactionParams System.UInt64 xferAsset The unique ID of the asset to be transferred. System.UInt64 assetAmount The amount of the asset to be transferred. Address assetSender The address from which the funds will be withdrawn. Address assetReceiver The recipient of the asset transfer. Returns Type Description AssetTransferTxn A form of AssetTransferTxn to clawback assets from an account AssetClawback(Address, TransactionParams, UInt64, UInt64, Address, Address) Creates a form of AssetTransferTxn to clawback assets from an account. Declaration public static AssetTransferTxn AssetClawback(Address sender, TransactionParams txnParams, ulong xferAsset, ulong assetAmount, Address assetSender, Address assetReceiver) Parameters Type Name Description Address sender The sender of this transaction must be the clawback account specified in the asset configuration. TransactionParams txnParams See TransactionParams System.UInt64 xferAsset The unique ID of the asset to be transferred. System.UInt64 assetAmount The amount of the asset to be transferred. Address assetSender The address from which the funds will be withdrawn. Address assetReceiver The recipient of the asset transfer. Returns Type Description AssetTransferTxn A form of AssetTransferTxn to clawback assets from an account AssetConfigure(Address, TransactionParams, UInt64, AssetParams) Create an AssetConfigTxn that will configure an asset. Declaration public static AssetConfigTxn AssetConfigure(Address sender, TransactionParams txnParams, ulong assetId, AssetParams assetParams) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams System.UInt64 assetId The unique asset id. AssetParams assetParams See AssetParams for all available fields. Returns Type Description AssetConfigTxn An AssetConfigTxn that will configure an asset. AssetConfigure(Address, TransactionParams, UInt64, AssetParams) Create an AssetConfigTxn that will configure an asset. Declaration public static AssetConfigTxn AssetConfigure(Address sender, TransactionParams txnParams, ulong assetId, AssetParams assetParams) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams System.UInt64 assetId The unique asset id. AssetParams assetParams See AssetParams for all available fields. Returns Type Description AssetConfigTxn An AssetConfigTxn that will configure an asset. AssetCreate(Address, TransactionParams, AssetParams) Create an AssetConfigTxn that will create an asset. Declaration public static AssetConfigTxn AssetCreate(Address sender, TransactionParams txnParams, AssetParams assetParams) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams AssetParams assetParams See AssetParams for all available fields. Returns Type Description AssetConfigTxn An AssetConfigTxn that will create an asset. AssetCreate(Address, TransactionParams, AssetParams) Create an AssetConfigTxn that will create an asset. Declaration public static AssetConfigTxn AssetCreate(Address sender, TransactionParams txnParams, AssetParams assetParams) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams AssetParams assetParams See AssetParams for all available fields. Returns Type Description AssetConfigTxn An AssetConfigTxn that will create an asset. AssetDelete(Address, TransactionParams, UInt64) Create an AssetConfigTxn that will delete an asset. Declaration public static AssetConfigTxn AssetDelete(Address sender, TransactionParams txnParams, ulong assetId) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams System.UInt64 assetId The unique asset id. Returns Type Description AssetConfigTxn An AssetConfigTxn that will delete an asset. AssetDelete(Address, TransactionParams, UInt64) Create an AssetConfigTxn that will delete an asset. Declaration public static AssetConfigTxn AssetDelete(Address sender, TransactionParams txnParams, ulong assetId) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams System.UInt64 assetId The unique asset id. Returns Type Description AssetConfigTxn An AssetConfigTxn that will delete an asset. AssetFreeze(Address, TransactionParams, Address, UInt64, Boolean) Create an AssetFreezeTxn which is used to freeze or unfreeze an asset from transfers. Declaration public static AssetFreezeTxn AssetFreeze(Address sender, TransactionParams txnParams, Address freezeAccount, ulong freezeAsset, bool assetFrozen) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams Address freezeAccount The address of the account whose asset is being frozen or unfrozen. System.UInt64 freezeAsset The asset ID being frozen or unfrozen. System.Boolean assetFrozen True to freeze the asset. Returns Type Description AssetFreezeTxn An AssetFreezeTxn . AssetFreeze(Address, TransactionParams, Address, UInt64, Boolean) Create an AssetFreezeTxn which is used to freeze or unfreeze an asset from transfers. Declaration public static AssetFreezeTxn AssetFreeze(Address sender, TransactionParams txnParams, Address freezeAccount, ulong freezeAsset, bool assetFrozen) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams Address freezeAccount The address of the account whose asset is being frozen or unfrozen. System.UInt64 freezeAsset The asset ID being frozen or unfrozen. System.Boolean assetFrozen True to freeze the asset. Returns Type Description AssetFreezeTxn An AssetFreezeTxn . AssetTransfer(Address, TransactionParams, UInt64, UInt64, Address) Create an AssetTransferTxn for transferring an asset to another account. Declaration public static AssetTransferTxn AssetTransfer(Address sender, TransactionParams txnParams, ulong xferAsset, ulong assetAmount, Address assetReceiver) Parameters Type Name Description Address sender The address of the account that pays the fee and sends the asset amount. TransactionParams txnParams See TransactionParams System.UInt64 xferAsset The unique ID of the asset to be transferred. System.UInt64 assetAmount The amount of the asset to be transferred. A zero amount transferred to self allocates that asset in the account's Asset map. Address assetReceiver Returns Type Description AssetTransferTxn An AssetTransferTxn for transferring an asset to another account. AssetTransfer(Address, TransactionParams, UInt64, UInt64, Address) Create an AssetTransferTxn for transferring an asset to another account. Declaration public static AssetTransferTxn AssetTransfer(Address sender, TransactionParams txnParams, ulong xferAsset, ulong assetAmount, Address assetReceiver) Parameters Type Name Description Address sender The address of the account that pays the fee and sends the asset amount. TransactionParams txnParams See TransactionParams System.UInt64 xferAsset The unique ID of the asset to be transferred. System.UInt64 assetAmount The amount of the asset to be transferred. A zero amount transferred to self allocates that asset in the account's Asset map. Address assetReceiver Returns Type Description AssetTransferTxn An AssetTransferTxn for transferring an asset to another account. CopyFrom(Transaction) Declaration public void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction CopyFrom(Transaction) Declaration public void CopyFrom(Transaction transaction) Parameters Type Name Description Transaction transaction CopyTo(ref Transaction) Declaration public void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction CopyTo(ref Transaction) Declaration public void CopyTo(ref Transaction transaction) Parameters Type Name Description Transaction transaction Equals(Transaction) Declaration public bool Equals(Transaction other) Parameters Type Name Description Transaction other Returns Type Description System.Boolean Equals(Transaction) Declaration public bool Equals(Transaction other) Parameters Type Name Description Transaction other Returns Type Description System.Boolean EstimateBlockSizeBytes() Estimate the size this transaction will take up in a block in bytes. Declaration public int EstimateBlockSizeBytes() Returns Type Description System.Int32 Size in bytes. EstimateBlockSizeBytes() Estimate the size this transaction will take up in a block in bytes. Declaration public int EstimateBlockSizeBytes() Returns Type Description System.Int32 Size in bytes. GetGroupId(Transaction[]) Calculates the group id for atomic transfers. Declaration public static TransactionId GetGroupId(params Transaction[] txns) Parameters Type Name Description Transaction [] txns The transactions belonging to this group. Cannot be more than MaxSize transactions. Returns Type Description TransactionId A TransactionId GetGroupId(Transaction[]) Calculates the group id for atomic transfers. Declaration public static TransactionId GetGroupId(params Transaction[] txns) Parameters Type Name Description Transaction [] txns The transactions belonging to this group. Cannot be more than MaxSize transactions. Returns Type Description TransactionId A TransactionId GetGroupId(TransactionId[]) Calculates the group id for atomic transfers. Declaration public static TransactionId GetGroupId(params TransactionId[] txids) Parameters Type Name Description TransactionId [] txids The transaction ids belonging to this group. Cannot be more than MaxSize transactions. Returns Type Description TransactionId A TransactionId GetGroupId(TransactionId[]) Calculates the group id for atomic transfers. Declaration public static TransactionId GetGroupId(params TransactionId[] txids) Parameters Type Name Description TransactionId [] txids The transaction ids belonging to this group. Cannot be more than MaxSize transactions. Returns Type Description TransactionId A TransactionId GetId() Calculate the ID for this transaction. Declaration public TransactionId GetId() Returns Type Description TransactionId A TransactionId calculated from its current parameters. GetId() Calculate the ID for this transaction. Declaration public TransactionId GetId() Returns Type Description TransactionId A TransactionId calculated from its current parameters. GetSignature(Ed25519.SecretKeyHandle) Get the signature of this transaction using a private key. Declaration public Sig GetSignature(Ed25519.SecretKeyHandle secretKey) Parameters Type Name Description Ed25519.SecretKeyHandle secretKey The private key to use to sign this transaction. Returns Type Description Sig A Sig . GetSignature(Ed25519.SecretKeyHandle) Get the signature of this transaction using a private key. Declaration public Sig GetSignature(Ed25519.SecretKeyHandle secretKey) Parameters Type Name Description Ed25519.SecretKeyHandle secretKey The private key to use to sign this transaction. Returns Type Description Sig A Sig . KeyRegOffline(Address, TransactionParams) Register account offline for participation. Declaration public static KeyRegTxn KeyRegOffline(Address account, TransactionParams txnParams) Parameters Type Name Description Address account Account to register offline. This is the sender of the transaction. TransactionParams txnParams See TransactionParams Returns Type Description KeyRegTxn A KeyRegTxn . KeyRegOffline(Address, TransactionParams) Register account offline for participation. Declaration public static KeyRegTxn KeyRegOffline(Address account, TransactionParams txnParams) Parameters Type Name Description Address account Account to register offline. This is the sender of the transaction. TransactionParams txnParams See TransactionParams Returns Type Description KeyRegTxn A KeyRegTxn . KeyRegOnline(Address, TransactionParams, AccountParticipation) Register account online for participation. Declaration public static KeyRegTxn KeyRegOnline(Address account, TransactionParams txnParams, AccountParticipation accountParticipation) Parameters Type Name Description Address account Account to register online. This is the sender of the transaction. TransactionParams txnParams See TransactionParams AccountParticipation accountParticipation See AccountParticipation Returns Type Description KeyRegTxn A KeyRegTxn . KeyRegOnline(Address, TransactionParams, AccountParticipation) Register account online for participation. Declaration public static KeyRegTxn KeyRegOnline(Address account, TransactionParams txnParams, AccountParticipation accountParticipation) Parameters Type Name Description Address account Account to register online. This is the sender of the transaction. TransactionParams txnParams See TransactionParams AccountParticipation accountParticipation See AccountParticipation Returns Type Description KeyRegTxn A KeyRegTxn . Payment(Address, TransactionParams, Address, UInt64, Address) Create a PaymentTxn Declaration public static PaymentTxn Payment(Address sender, TransactionParams txnParams, Address receiver, ulong amount, Address closeRemainderTo = default(Address)) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams Address receiver The address of the account that receives the amount. System.UInt64 amount The total amount to be sent in microAlgos. Address closeRemainderTo When set, it indicates that the transaction is requesting that the Sender account should be closed, and all remaining funds, after the fee and amount are paid, be transferred to this address. Returns Type Description PaymentTxn A PaymentTxn Payment(Address, TransactionParams, Address, UInt64, Address) Create a PaymentTxn Declaration public static PaymentTxn Payment(Address sender, TransactionParams txnParams, Address receiver, ulong amount, Address closeRemainderTo = default(Address)) Parameters Type Name Description Address sender The address of the account that pays the fee and amount. TransactionParams txnParams See TransactionParams Address receiver The address of the account that receives the amount. System.UInt64 amount The total amount to be sent in microAlgos. Address closeRemainderTo When set, it indicates that the transaction is requesting that the Sender account should be closed, and all remaining funds, after the fee and amount are paid, be transferred to this address. Returns Type Description PaymentTxn A PaymentTxn Sign(Ed25519.SecretKeyHandle) Sign this transaction with a private key. Declaration public SignedTransaction Sign(Ed25519.SecretKeyHandle secretKey) Parameters Type Name Description Ed25519.SecretKeyHandle secretKey The account private key to use to sign this transaction. Returns Type Description SignedTransaction A SignedTransaction . Sign(Ed25519.SecretKeyHandle) Sign this transaction with a private key. Declaration public SignedTransaction Sign(Ed25519.SecretKeyHandle secretKey) Parameters Type Name Description Ed25519.SecretKeyHandle secretKey The account private key to use to sign this transaction. Returns Type Description SignedTransaction A SignedTransaction . ToSignatureMessage(Allocator) Serializes this transaction to a message to use for signing. Declaration public NativeByteArray ToSignatureMessage(Allocator allocator) Parameters Type Name Description Allocator allocator How memory should be allocated for the returned byte array. Returns Type Description NativeByteArray A ToSignatureMessage(Allocator) Serializes this transaction to a message to use for signing. Declaration public NativeByteArray ToSignatureMessage(Allocator allocator) Parameters Type Name Description Allocator allocator How memory should be allocated for the returned byte array. Returns Type Description NativeByteArray A ToTypedTxn<T>() Converts this transaction to a specific transaction type implementing ITransaction . Declaration public T ToTypedTxn<T>() where T : struct, ITransaction Returns Type Description T A typed transaction implementing ITransaction . Type Parameters Name Description T The type of the transaction to convert to. ToTypedTxn<T>() Converts this transaction to a specific transaction type implementing ITransaction . Declaration public T ToTypedTxn<T>() where T : struct, ITransaction Returns Type Description T A typed transaction implementing ITransaction . Type Parameters Name Description T The type of the transaction to convert to. Implements IAppCallTxn IAssetConfigTxn IAssetFreezeTxn System.IEquatable<T> ITransaction"
  },
  "api/AlgoSdk.TransactionExtensions.html": {
    "href": "api/AlgoSdk.TransactionExtensions.html",
    "title": "Class TransactionExtensions | Unity Algorand SDK",
    "keywords": "Class TransactionExtensions Inheritance System.Object TransactionExtensions Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class TransactionExtensions Methods EstimateBlockSizeBytes<T>(T) Declaration public static int EstimateBlockSizeBytes<T>(this T txn) where T : ITransaction Parameters Type Name Description T txn Returns Type Description System.Int32 Type Parameters Name Description T EstimateBlockSizeBytes<T>(T) Declaration public static int EstimateBlockSizeBytes<T>(this T txn) where T : ITransaction Parameters Type Name Description T txn Returns Type Description System.Int32 Type Parameters Name Description T GetId<T>(T) Declaration public static TransactionId GetId<T>(this T txn) where T : ITransaction Parameters Type Name Description T txn Returns Type Description TransactionId Type Parameters Name Description T GetId<T>(T) Declaration public static TransactionId GetId<T>(this T txn) where T : ITransaction Parameters Type Name Description T txn Returns Type Description TransactionId Type Parameters Name Description T GetSignature<T>(T, Ed25519.SecretKeyHandle) Declaration public static Sig GetSignature<T>(this T txn, Ed25519.SecretKeyHandle secretKey) where T : ITransaction Parameters Type Name Description T txn Ed25519.SecretKeyHandle secretKey Returns Type Description Sig Type Parameters Name Description T GetSignature<T>(T, Ed25519.SecretKeyHandle) Declaration public static Sig GetSignature<T>(this T txn, Ed25519.SecretKeyHandle secretKey) where T : ITransaction Parameters Type Name Description T txn Ed25519.SecretKeyHandle secretKey Returns Type Description Sig Type Parameters Name Description T GetSuggestedFee<T>(T, TransactionParams) Declaration public static ulong GetSuggestedFee<T>(this T txn, TransactionParams txnParams) where T : ITransaction Parameters Type Name Description T txn TransactionParams txnParams Returns Type Description System.UInt64 Type Parameters Name Description T GetSuggestedFee<T>(T, TransactionParams) Declaration public static ulong GetSuggestedFee<T>(this T txn, TransactionParams txnParams) where T : ITransaction Parameters Type Name Description T txn TransactionParams txnParams Returns Type Description System.UInt64 Type Parameters Name Description T Sign<T>(T, Ed25519.SecretKeyHandle) Declaration public static Signed<T> Sign<T>(this T txn, Ed25519.SecretKeyHandle secretKey) where T : ITransaction Parameters Type Name Description T txn Ed25519.SecretKeyHandle secretKey Returns Type Description Signed <T> Type Parameters Name Description T Sign<T>(T, Ed25519.SecretKeyHandle) Declaration public static Signed<T> Sign<T>(this T txn, Ed25519.SecretKeyHandle secretKey) where T : ITransaction Parameters Type Name Description T txn Ed25519.SecretKeyHandle secretKey Returns Type Description Signed <T> Type Parameters Name Description T ToSignatureMessage<T>(T, Allocator) Declaration public static NativeByteArray ToSignatureMessage<T>(this T txn, Allocator allocator) where T : ITransaction Parameters Type Name Description T txn Allocator allocator Returns Type Description NativeByteArray Type Parameters Name Description T ToSignatureMessage<T>(T, Allocator) Declaration public static NativeByteArray ToSignatureMessage<T>(this T txn, Allocator allocator) where T : ITransaction Parameters Type Name Description T txn Allocator allocator Returns Type Description NativeByteArray Type Parameters Name Description T"
  },
  "api/AlgoSdk.TransactionGroup.html": {
    "href": "api/AlgoSdk.TransactionGroup.html",
    "title": "Struct TransactionGroup | Unity Algorand SDK",
    "keywords": "Struct TransactionGroup A group of transactions used to generate a group id for atomic transactions. Implements System.IEquatable < TransactionGroup > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct TransactionGroup : IEquatable<TransactionGroup> Fields IdPrefix The prefix to use when converting this group of transactions to bytes. Declaration public static readonly byte[] IdPrefix Field Value Type Description System.Byte [] IdPrefix The prefix to use when converting this group of transactions to bytes. Declaration public static readonly byte[] IdPrefix Field Value Type Description System.Byte [] MaxSize Max number of allowed transactions in an atomic transaction. Declaration public const int MaxSize = 16 Field Value Type Description System.Int32 MaxSize Max number of allowed transactions in an atomic transaction. Declaration public const int MaxSize = 16 Field Value Type Description System.Int32 Txns The list of transaction ids belonging to this group. Declaration public TransactionId[] Txns Field Value Type Description TransactionId [] Txns The list of transaction ids belonging to this group. Declaration public TransactionId[] Txns Field Value Type Description TransactionId [] Methods Equals(TransactionGroup) Declaration public bool Equals(TransactionGroup other) Parameters Type Name Description TransactionGroup other Returns Type Description System.Boolean Equals(TransactionGroup) Declaration public bool Equals(TransactionGroup other) Parameters Type Name Description TransactionGroup other Returns Type Description System.Boolean GetId() Hash the transaction ids contained in this group. Declaration public TransactionId GetId() Returns Type Description TransactionId A TransactionId GetId() Hash the transaction ids contained in this group. Declaration public TransactionId GetId() Returns Type Description TransactionId A TransactionId Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.TransactionHeader.html": {
    "href": "api/AlgoSdk.TransactionHeader.html",
    "title": "Struct TransactionHeader | Unity Algorand SDK",
    "keywords": "Struct TransactionHeader Contains parameters used in all transaction types. Implements System.IEquatable < TransactionHeader > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct TransactionHeader : IEquatable<TransactionHeader> Remarks For the most part, this is used internally in the sdk and shouldn't be used directly. Constructors TransactionHeader(Address, TransactionType, TransactionParams) Declaration public TransactionHeader(Address sender, TransactionType transactionType, TransactionParams transactionParams) Parameters Type Name Description Address sender TransactionType transactionType TransactionParams transactionParams TransactionHeader(Address, TransactionType, TransactionParams) Declaration public TransactionHeader(Address sender, TransactionType transactionType, TransactionParams transactionParams) Parameters Type Name Description Address sender TransactionType transactionType TransactionParams transactionParams Fields AuthAddress Declaration [NonSerialized] public Address AuthAddress Field Value Type Description Address AuthAddress Declaration [NonSerialized] public Address AuthAddress Field Value Type Description Address CloseRewards Declaration [NonSerialized] public ulong CloseRewards Field Value Type Description System.UInt64 CloseRewards Declaration [NonSerialized] public ulong CloseRewards Field Value Type Description System.UInt64 ClosingAmount Declaration [NonSerialized] public ulong ClosingAmount Field Value Type Description System.UInt64 ClosingAmount Declaration [NonSerialized] public ulong ClosingAmount Field Value Type Description System.UInt64 ConfirmedRound Declaration [NonSerialized] public ulong ConfirmedRound Field Value Type Description System.UInt64 ConfirmedRound Declaration [NonSerialized] public ulong ConfirmedRound Field Value Type Description System.UInt64 CreatedApplicationIndex Declaration [NonSerialized] public ulong CreatedApplicationIndex Field Value Type Description System.UInt64 CreatedApplicationIndex Declaration [NonSerialized] public ulong CreatedApplicationIndex Field Value Type Description System.UInt64 CreatedAssetIndex Declaration [NonSerialized] public ulong CreatedAssetIndex Field Value Type Description System.UInt64 CreatedAssetIndex Declaration [NonSerialized] public ulong CreatedAssetIndex Field Value Type Description System.UInt64 Fee Declaration public ulong Fee Field Value Type Description System.UInt64 Fee Declaration public ulong Fee Field Value Type Description System.UInt64 FirstValidRound Declaration public ulong FirstValidRound Field Value Type Description System.UInt64 FirstValidRound Declaration public ulong FirstValidRound Field Value Type Description System.UInt64 GenesisHash Declaration public GenesisHash GenesisHash Field Value Type Description GenesisHash GenesisHash Declaration public GenesisHash GenesisHash Field Value Type Description GenesisHash GenesisId Declaration public FixedString32Bytes GenesisId Field Value Type Description FixedString32Bytes GenesisId Declaration public FixedString32Bytes GenesisId Field Value Type Description FixedString32Bytes GlobalStateDelta Declaration [NonSerialized] public EvalDeltaKeyValue[] GlobalStateDelta Field Value Type Description EvalDeltaKeyValue [] GlobalStateDelta Declaration [NonSerialized] public EvalDeltaKeyValue[] GlobalStateDelta Field Value Type Description EvalDeltaKeyValue [] Group Declaration public Sha512_256_Hash Group Field Value Type Description Sha512_256_Hash Group Declaration public Sha512_256_Hash Group Field Value Type Description Sha512_256_Hash Id Declaration [NonSerialized] public TransactionId Id Field Value Type Description TransactionId Id Declaration [NonSerialized] public TransactionId Id Field Value Type Description TransactionId IntraRoundOffset Declaration [NonSerialized] public ulong IntraRoundOffset Field Value Type Description System.UInt64 IntraRoundOffset Declaration [NonSerialized] public ulong IntraRoundOffset Field Value Type Description System.UInt64 LastValidRound Declaration public ulong LastValidRound Field Value Type Description System.UInt64 LastValidRound Declaration public ulong LastValidRound Field Value Type Description System.UInt64 Lease Declaration public Sha512_256_Hash Lease Field Value Type Description Sha512_256_Hash Lease Declaration public Sha512_256_Hash Lease Field Value Type Description Sha512_256_Hash LocalStateDelta Declaration [NonSerialized] public AccountStateDelta[] LocalStateDelta Field Value Type Description AccountStateDelta [] LocalStateDelta Declaration [NonSerialized] public AccountStateDelta[] LocalStateDelta Field Value Type Description AccountStateDelta [] Note Declaration public byte[] Note Field Value Type Description System.Byte [] Note Declaration public byte[] Note Field Value Type Description System.Byte [] OnCompletion Declaration [NonSerialized] public OnCompletion OnCompletion Field Value Type Description OnCompletion OnCompletion Declaration [NonSerialized] public OnCompletion OnCompletion Field Value Type Description OnCompletion ReceiverRewards Declaration [NonSerialized] public ulong ReceiverRewards Field Value Type Description System.UInt64 ReceiverRewards Declaration [NonSerialized] public ulong ReceiverRewards Field Value Type Description System.UInt64 RekeyTo Declaration public Address RekeyTo Field Value Type Description Address RekeyTo Declaration public Address RekeyTo Field Value Type Description Address RoundTime Declaration [NonSerialized] public ulong RoundTime Field Value Type Description System.UInt64 RoundTime Declaration [NonSerialized] public ulong RoundTime Field Value Type Description System.UInt64 Sender Declaration public Address Sender Field Value Type Description Address Sender Declaration public Address Sender Field Value Type Description Address SenderRewards Declaration [NonSerialized] public ulong SenderRewards Field Value Type Description System.UInt64 SenderRewards Declaration [NonSerialized] public ulong SenderRewards Field Value Type Description System.UInt64 TransactionType Declaration public TransactionType TransactionType Field Value Type Description TransactionType TransactionType Declaration public TransactionType TransactionType Field Value Type Description TransactionType Methods Equals(TransactionHeader) Declaration public bool Equals(TransactionHeader other) Parameters Type Name Description TransactionHeader other Returns Type Description System.Boolean Equals(TransactionHeader) Declaration public bool Equals(TransactionHeader other) Parameters Type Name Description TransactionHeader other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.TransactionId.html": {
    "href": "api/AlgoSdk.TransactionId.html",
    "title": "Struct TransactionId | Unity Algorand SDK",
    "keywords": "Struct TransactionId A SHA512 256-truncated hash of a transaction's bytes. This is usually Base32 encoded with the padding chars trimmed. Implements IByteArray System.IEquatable < TransactionId > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct TransactionId : IEquatable<TransactionId> Fields SizeBytes Declaration public const int SizeBytes = default(int) Field Value Type Description System.Int32 SizeBytes Declaration public const int SizeBytes = default(int) Field Value Type Description System.Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Length Declaration public readonly int Length { get; } Property Value Type Description System.Int32 Length Declaration public readonly int Length { get; } Property Value Type Description System.Int32 Methods Equals(TransactionId) Declaration public bool Equals(TransactionId other) Parameters Type Name Description TransactionId other Returns Type Description System.Boolean Equals(TransactionId) Declaration public bool Equals(TransactionId other) Parameters Type Name Description TransactionId other Returns Type Description System.Boolean FromString(String) Declaration public static TransactionId FromString(string s) Parameters Type Name Description System.String s Returns Type Description TransactionId FromString(String) Declaration public static TransactionId FromString(string s) Parameters Type Name Description System.String s Returns Type Description TransactionId FromString<T>(T) Declaration public static TransactionId FromString<T>(T fs) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Returns Type Description TransactionId Type Parameters Name Description T FromString<T>(T) Declaration public static TransactionId FromString<T>(T fs) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs Returns Type Description TransactionId Type Parameters Name Description T GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description System.Void * GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description System.Void * ToFixedString() Declaration public FixedString64Bytes ToFixedString() Returns Type Description FixedString64Bytes ToFixedString() Declaration public FixedString64Bytes ToFixedString() Returns Type Description FixedString64Bytes ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Implicit(TransactionId to Sha512_256_Hash) Declaration public static implicit operator Sha512_256_Hash(TransactionId txid) Parameters Type Name Description TransactionId txid Returns Type Description Sha512_256_Hash Implicit(TransactionId to Sha512_256_Hash) Declaration public static implicit operator Sha512_256_Hash(TransactionId txid) Parameters Type Name Description TransactionId txid Returns Type Description Sha512_256_Hash Implicit(Sha512_256_Hash to TransactionId) Declaration public static implicit operator TransactionId(Sha512_256_Hash hash) Parameters Type Name Description Sha512_256_Hash hash Returns Type Description TransactionId Implicit(Sha512_256_Hash to TransactionId) Declaration public static implicit operator TransactionId(Sha512_256_Hash hash) Parameters Type Name Description Sha512_256_Hash hash Returns Type Description TransactionId Implements IByteArray System.IEquatable<T>"
  },
  "api/AlgoSdk.TransactionIdResponse.html": {
    "href": "api/AlgoSdk.TransactionIdResponse.html",
    "title": "Struct TransactionIdResponse | Unity Algorand SDK",
    "keywords": "Struct TransactionIdResponse Response from SendTransaction(Byte[]) . Wraps a TransactionId . Implements System.IEquatable < TransactionIdResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct TransactionIdResponse : IEquatable<TransactionIdResponse> Fields TxId The returned TransactionId Declaration public TransactionId TxId Field Value Type Description TransactionId TxId The returned TransactionId Declaration public TransactionId TxId Field Value Type Description TransactionId Methods Equals(TransactionIdResponse) Declaration public bool Equals(TransactionIdResponse other) Parameters Type Name Description TransactionIdResponse other Returns Type Description System.Boolean Equals(TransactionIdResponse) Declaration public bool Equals(TransactionIdResponse other) Parameters Type Name Description TransactionIdResponse other Returns Type Description System.Boolean Operators Implicit(TransactionIdResponse to TransactionId) Declaration public static implicit operator TransactionId(TransactionIdResponse resp) Parameters Type Name Description TransactionIdResponse resp Returns Type Description TransactionId Implicit(TransactionIdResponse to TransactionId) Declaration public static implicit operator TransactionId(TransactionIdResponse resp) Parameters Type Name Description TransactionIdResponse resp Returns Type Description TransactionId Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.TransactionParams.html": {
    "href": "api/AlgoSdk.TransactionParams.html",
    "title": "Struct TransactionParams | Unity Algorand SDK",
    "keywords": "Struct TransactionParams Params used for setting all transactions. Contains fee, genesis info, and round constraints. Usually this is retrieved from GetSuggestedParams() then modified. Implements System.IEquatable < TransactionParams > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct TransactionParams : IEquatable<TransactionParams> Fields ConsensusVersion Indicates the consensus protocol version as of LastRound . Declaration public string ConsensusVersion Field Value Type Description System.String ConsensusVersion Indicates the consensus protocol version as of LastRound . Declaration public string ConsensusVersion Field Value Type Description System.String Fee Fee is the suggested transaction fee in units of micro-Algos per byte. Fee may fall to zero but transactions must still have a fee of at least MinFee for the current network protocol. Declaration public ulong Fee Field Value Type Description System.UInt64 Fee Fee is the suggested transaction fee in units of micro-Algos per byte. Fee may fall to zero but transactions must still have a fee of at least MinFee for the current network protocol. Declaration public ulong Fee Field Value Type Description System.UInt64 FirstValidRound The last valid round for a transaction. Declaration public ulong FirstValidRound Field Value Type Description System.UInt64 FirstValidRound The last valid round for a transaction. Declaration public ulong FirstValidRound Field Value Type Description System.UInt64 GenesisHash The hash of the genesis block. Declaration public GenesisHash GenesisHash Field Value Type Description GenesisHash GenesisHash The hash of the genesis block. Declaration public GenesisHash GenesisHash Field Value Type Description GenesisHash GenesisId An ID listed in the genesis block. Declaration public FixedString32Bytes GenesisId Field Value Type Description FixedString32Bytes GenesisId An ID listed in the genesis block. Declaration public FixedString32Bytes GenesisId Field Value Type Description FixedString32Bytes LastValidRound The first valid round for a transaction. Declaration public ulong LastValidRound Field Value Type Description System.UInt64 LastValidRound The first valid round for a transaction. Declaration public ulong LastValidRound Field Value Type Description System.UInt64 MinFee The minimum transaction fee (not per byte) required for the txn to validate for the current network protocol. Declaration public ulong MinFee Field Value Type Description System.UInt64 MinFee The minimum transaction fee (not per byte) required for the txn to validate for the current network protocol. Declaration public ulong MinFee Field Value Type Description System.UInt64 Properties FlatFee Whether to interpret Fee as microalgos per byte, or as a flat amount of microalgos. Declaration public bool FlatFee { get; set; } Property Value Type Description System.Boolean FlatFee Whether to interpret Fee as microalgos per byte, or as a flat amount of microalgos. Declaration public bool FlatFee { get; set; } Property Value Type Description System.Boolean LastRound Indicates the last round seen by the node Declaration public ulong LastRound { get; set; } Property Value Type Description System.UInt64 LastRound Indicates the last round seen by the node Declaration public ulong LastRound { get; set; } Property Value Type Description System.UInt64 Methods Equals(TransactionParams) Declaration public bool Equals(TransactionParams other) Parameters Type Name Description TransactionParams other Returns Type Description System.Boolean Equals(TransactionParams) Declaration public bool Equals(TransactionParams other) Parameters Type Name Description TransactionParams other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.TransactionResponse.html": {
    "href": "api/AlgoSdk.TransactionResponse.html",
    "title": "Struct TransactionResponse | Unity Algorand SDK",
    "keywords": "Struct TransactionResponse Implements System.IEquatable < TransactionResponse > IIndexerResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct TransactionResponse : IEquatable<TransactionResponse>, IIndexerResponse Properties CurrentRound Declaration public ulong CurrentRound { readonly get; set; } Property Value Type Description System.UInt64 CurrentRound Declaration public ulong CurrentRound { readonly get; set; } Property Value Type Description System.UInt64 Transaction Declaration public Transaction Transaction { readonly get; set; } Property Value Type Description Transaction Transaction Declaration public Transaction Transaction { readonly get; set; } Property Value Type Description Transaction Methods Equals(TransactionResponse) Declaration public bool Equals(TransactionResponse other) Parameters Type Name Description TransactionResponse other Returns Type Description System.Boolean Equals(TransactionResponse) Declaration public bool Equals(TransactionResponse other) Parameters Type Name Description TransactionResponse other Returns Type Description System.Boolean Implements System.IEquatable<T> IIndexerResponse"
  },
  "api/AlgoSdk.TransactionSignature.html": {
    "href": "api/AlgoSdk.TransactionSignature.html",
    "title": "Struct TransactionSignature | Unity Algorand SDK",
    "keywords": "Struct TransactionSignature An untyped wrapper around different transaction signatures. Implements System.IEquatable < TransactionSignature > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct TransactionSignature : IEquatable<TransactionSignature> Fields LogicSig Declaration public LogicSig LogicSig Field Value Type Description LogicSig LogicSig Declaration public LogicSig LogicSig Field Value Type Description LogicSig Multisig Declaration public Multisig Multisig Field Value Type Description Multisig Multisig Declaration public Multisig Multisig Field Value Type Description Multisig Sig Declaration public Sig Sig Field Value Type Description Sig Sig Declaration public Sig Sig Field Value Type Description Sig Methods Equals(TransactionSignature) Declaration public bool Equals(TransactionSignature other) Parameters Type Name Description TransactionSignature other Returns Type Description System.Boolean Equals(TransactionSignature) Declaration public bool Equals(TransactionSignature other) Parameters Type Name Description TransactionSignature other Returns Type Description System.Boolean Operators Implicit(LogicSig to TransactionSignature) Declaration public static implicit operator TransactionSignature(LogicSig lsig) Parameters Type Name Description LogicSig lsig Returns Type Description TransactionSignature Implicit(LogicSig to TransactionSignature) Declaration public static implicit operator TransactionSignature(LogicSig lsig) Parameters Type Name Description LogicSig lsig Returns Type Description TransactionSignature Implicit(Multisig to TransactionSignature) Declaration public static implicit operator TransactionSignature(Multisig msig) Parameters Type Name Description Multisig msig Returns Type Description TransactionSignature Implicit(Multisig to TransactionSignature) Declaration public static implicit operator TransactionSignature(Multisig msig) Parameters Type Name Description Multisig msig Returns Type Description TransactionSignature Implicit(Sig to TransactionSignature) Declaration public static implicit operator TransactionSignature(Sig sig) Parameters Type Name Description Sig sig Returns Type Description TransactionSignature Implicit(Sig to TransactionSignature) Declaration public static implicit operator TransactionSignature(Sig sig) Parameters Type Name Description Sig sig Returns Type Description TransactionSignature Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.TransactionsResponse.html": {
    "href": "api/AlgoSdk.TransactionsResponse.html",
    "title": "Struct TransactionsResponse | Unity Algorand SDK",
    "keywords": "Struct TransactionsResponse Implements System.IEquatable < TransactionsResponse > IPaginatedResponse IIndexerResponse Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct TransactionsResponse : IEquatable<TransactionsResponse>, IPaginatedResponse, IIndexerResponse Properties CurrentRound Declaration public ulong CurrentRound { readonly get; set; } Property Value Type Description System.UInt64 CurrentRound Declaration public ulong CurrentRound { readonly get; set; } Property Value Type Description System.UInt64 NextToken Declaration public FixedString128Bytes NextToken { readonly get; set; } Property Value Type Description FixedString128Bytes NextToken Declaration public FixedString128Bytes NextToken { readonly get; set; } Property Value Type Description FixedString128Bytes Transactions Declaration public Transaction[] Transactions { readonly get; set; } Property Value Type Description Transaction [] Transactions Declaration public Transaction[] Transactions { readonly get; set; } Property Value Type Description Transaction [] Methods Equals(TransactionsResponse) Declaration public bool Equals(TransactionsResponse other) Parameters Type Name Description TransactionsResponse other Returns Type Description System.Boolean Equals(TransactionsResponse) Declaration public bool Equals(TransactionsResponse other) Parameters Type Name Description TransactionsResponse other Returns Type Description System.Boolean Implements System.IEquatable<T> IPaginatedResponse IIndexerResponse"
  },
  "api/AlgoSdk.TransactionType.html": {
    "href": "api/AlgoSdk.TransactionType.html",
    "title": "Enum TransactionType | Unity Algorand SDK",
    "keywords": "Enum TransactionType An enum representing the type of transaction. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum TransactionType : byte Fields Name Description ApplicationCall AssetConfiguration AssetFreeze AssetTransfer Count KeyRegistration None Payment"
  },
  "api/AlgoSdk.TransactionType_1.html": {
    "href": "api/AlgoSdk.TransactionType_1.html",
    "title": "Enum TransactionType | Unity Algorand SDK",
    "keywords": "Enum TransactionType An enum representing the type of transaction. Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public enum TransactionType : byte Fields Name Description ApplicationCall AssetConfiguration AssetFreeze AssetTransfer Count KeyRegistration None Payment"
  },
  "api/AlgoSdk.TransactionTypeExtensions.html": {
    "href": "api/AlgoSdk.TransactionTypeExtensions.html",
    "title": "Class TransactionTypeExtensions | Unity Algorand SDK",
    "keywords": "Class TransactionTypeExtensions Inheritance System.Object TransactionTypeExtensions Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class TransactionTypeExtensions Fields TypeToString Declaration public static readonly string[] TypeToString Field Value Type Description System.String [] TypeToString Declaration public static readonly string[] TypeToString Field Value Type Description System.String [] Methods ToFixedString(TransactionType) Declaration public static FixedString32Bytes ToFixedString(this TransactionType txType) Parameters Type Name Description TransactionType txType Returns Type Description FixedString32Bytes ToFixedString(TransactionType) Declaration public static FixedString32Bytes ToFixedString(this TransactionType txType) Parameters Type Name Description TransactionType txType Returns Type Description FixedString32Bytes ToOptionalFixedString(TransactionType) Declaration public static Optional<FixedString32Bytes> ToOptionalFixedString(this TransactionType txType) Parameters Type Name Description TransactionType txType Returns Type Description Optional < FixedString32Bytes > ToOptionalFixedString(TransactionType) Declaration public static Optional<FixedString32Bytes> ToOptionalFixedString(this TransactionType txType) Parameters Type Name Description TransactionType txType Returns Type Description Optional < FixedString32Bytes >"
  },
  "api/AlgoSdk.Utf8StringExtensions.html": {
    "href": "api/AlgoSdk.Utf8StringExtensions.html",
    "title": "Class Utf8StringExtensions | Unity Algorand SDK",
    "keywords": "Class Utf8StringExtensions Inheritance System.Object Utf8StringExtensions Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public static class Utf8StringExtensions Methods Append<T>(ref T, Boolean) Declaration public static FormatError Append<T>(this ref T fs, bool input) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs System.Boolean input Returns Type Description FormatError Type Parameters Name Description T Append<T>(ref T, Boolean) Declaration public static FormatError Append<T>(this ref T fs, bool input) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs System.Boolean input Returns Type Description FormatError Type Parameters Name Description T Append<T>(ref T, UInt64) Declaration public static FormatError Append<T>(this ref T fs, ulong input) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs System.UInt64 input Returns Type Description FormatError Type Parameters Name Description T Append<T>(ref T, UInt64) Declaration public static FormatError Append<T>(this ref T fs, ulong input) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs System.UInt64 input Returns Type Description FormatError Type Parameters Name Description T"
  },
  "api/AlgoSdk.Version.html": {
    "href": "api/AlgoSdk.Version.html",
    "title": "Struct Version | Unity Algorand SDK",
    "keywords": "Struct Version algod version information Implements System.IEquatable < Version > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct Version : IEquatable<Version> Fields Build See BuildVersion Declaration public BuildVersion Build Field Value Type Description BuildVersion Build See BuildVersion Declaration public BuildVersion Build Field Value Type Description BuildVersion GenesisHashBase64 Declaration public FixedString64Bytes GenesisHashBase64 Field Value Type Description FixedString64Bytes GenesisHashBase64 Declaration public FixedString64Bytes GenesisHashBase64 Field Value Type Description FixedString64Bytes GenesisId Declaration public FixedString32Bytes GenesisId Field Value Type Description FixedString32Bytes GenesisId Declaration public FixedString32Bytes GenesisId Field Value Type Description FixedString32Bytes Versions Declaration public FixedString32Bytes[] Versions Field Value Type Description FixedString32Bytes [] Versions Declaration public FixedString32Bytes[] Versions Field Value Type Description FixedString32Bytes [] Methods Equals(Version) Declaration public bool Equals(Version other) Parameters Type Name Description Version other Returns Type Description System.Boolean Equals(Version) Declaration public bool Equals(Version other) Parameters Type Name Description Version other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.VersionsResponse.html": {
    "href": "api/AlgoSdk.VersionsResponse.html",
    "title": "Struct VersionsResponse | Unity Algorand SDK",
    "keywords": "Struct VersionsResponse Implements System.IEquatable < VersionsResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct VersionsResponse : IEquatable<VersionsResponse> Fields Versions Declaration public FixedString64Bytes[] Versions Field Value Type Description FixedString64Bytes [] Versions Declaration public FixedString64Bytes[] Versions Field Value Type Description FixedString64Bytes [] Methods Equals(VersionsResponse) Declaration public bool Equals(VersionsResponse other) Parameters Type Name Description VersionsResponse other Returns Type Description System.Boolean Equals(VersionsResponse) Declaration public bool Equals(VersionsResponse other) Parameters Type Name Description VersionsResponse other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.VrfPubKey.html": {
    "href": "api/AlgoSdk.VrfPubKey.html",
    "title": "Struct VrfPubKey | Unity Algorand SDK",
    "keywords": "Struct VrfPubKey 32 byte public key required for SelectionParticipationKey Implements System.IEquatable < VrfPubKey > IByteArray Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct VrfPubKey : IEquatable<VrfPubKey> Fields SizeBytes Declaration public const int SizeBytes = 32 Field Value Type Description System.Int32 SizeBytes Declaration public const int SizeBytes = 32 Field Value Type Description System.Int32 Properties Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Item[Int32] Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description System.Byte Length Declaration public readonly int Length { get; } Property Value Type Description System.Int32 Length Declaration public readonly int Length { get; } Property Value Type Description System.Int32 Methods Equals(VrfPubKey) Declaration public bool Equals(VrfPubKey other) Parameters Type Name Description VrfPubKey other Returns Type Description System.Boolean Equals(VrfPubKey) Declaration public bool Equals(VrfPubKey other) Parameters Type Name Description VrfPubKey other Returns Type Description System.Boolean GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description System.Void * GetUnsafePtr() Declaration public void *GetUnsafePtr() Returns Type Description System.Void * Implements System.IEquatable<T> IByteArray"
  },
  "api/AlgoSdk.Wallet.html": {
    "href": "api/AlgoSdk.Wallet.html",
    "title": "Struct Wallet | Unity Algorand SDK",
    "keywords": "Struct Wallet Implements System.IEquatable < Wallet > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct Wallet : IEquatable<Wallet> Fields DriverName Declaration public FixedString64Bytes DriverName Field Value Type Description FixedString64Bytes DriverName Declaration public FixedString64Bytes DriverName Field Value Type Description FixedString64Bytes DriverVersion Declaration public uint DriverVersion Field Value Type Description System.UInt32 DriverVersion Declaration public uint DriverVersion Field Value Type Description System.UInt32 Id Declaration public FixedString128Bytes Id Field Value Type Description FixedString128Bytes Id Declaration public FixedString128Bytes Id Field Value Type Description FixedString128Bytes MnemonicUx Declaration public Optional<bool> MnemonicUx Field Value Type Description Optional < System.Boolean > MnemonicUx Declaration public Optional<bool> MnemonicUx Field Value Type Description Optional < System.Boolean > Name Declaration public FixedString64Bytes Name Field Value Type Description FixedString64Bytes Name Declaration public FixedString64Bytes Name Field Value Type Description FixedString64Bytes SupportedTransactions Declaration public TransactionType[] SupportedTransactions Field Value Type Description TransactionType [] SupportedTransactions Declaration public TransactionType[] SupportedTransactions Field Value Type Description TransactionType [] Methods Equals(Wallet) Declaration public bool Equals(Wallet other) Parameters Type Name Description Wallet other Returns Type Description System.Boolean Equals(Wallet) Declaration public bool Equals(Wallet other) Parameters Type Name Description Wallet other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.WalletConnect.AesCipher.html": {
    "href": "api/AlgoSdk.WalletConnect.AesCipher.html",
    "title": "Class AesCipher | Unity Algorand SDK",
    "keywords": "Class AesCipher Inheritance System.Object AesCipher Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public static class AesCipher Methods DecryptWithKey(Byte[], EncryptedPayload) Declaration public static byte[] DecryptWithKey(byte[] key, EncryptedPayload encryptedData) Parameters Type Name Description System.Byte [] key EncryptedPayload encryptedData Returns Type Description System.Byte [] DecryptWithKey(Byte[], EncryptedPayload) Declaration public static byte[] DecryptWithKey(byte[] key, EncryptedPayload encryptedData) Parameters Type Name Description System.Byte [] key EncryptedPayload encryptedData Returns Type Description System.Byte [] EncryptWithKey(Byte[], Byte[]) Declaration public static EncryptedPayload EncryptWithKey(byte[] key, byte[] data) Parameters Type Name Description System.Byte [] key System.Byte [] data Returns Type Description EncryptedPayload EncryptWithKey(Byte[], Byte[]) Declaration public static EncryptedPayload EncryptWithKey(byte[] key, byte[] data) Parameters Type Name Description System.Byte [] key System.Byte [] data Returns Type Description EncryptedPayload"
  },
  "api/AlgoSdk.WalletConnect.AlgorandWalletConnectSession.html": {
    "href": "api/AlgoSdk.WalletConnect.AlgorandWalletConnectSession.html",
    "title": "Class AlgorandWalletConnectSession | Unity Algorand SDK",
    "keywords": "Class AlgorandWalletConnectSession Inheritance System.Object AlgorandWalletConnectSession Implements IActiveWalletConnectSession < AlgorandWalletConnectSession > IWalletConnectSessionData System.IDisposable Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public class AlgorandWalletConnectSession : IActiveWalletConnectSession<AlgorandWalletConnectSession>, IWalletConnectSessionData, IDisposable Constructors AlgorandWalletConnectSession(ClientMeta, String) Create a new session. Declaration public AlgorandWalletConnectSession(ClientMeta clientMeta, string bridgeUrl = null) Parameters Type Name Description ClientMeta clientMeta The metadata of the Dapp. System.String bridgeUrl An optional wallet connect bridgeurl. e.g. https://bridge.walletconnect.org AlgorandWalletConnectSession(ClientMeta, String) Create a new session. Declaration public AlgorandWalletConnectSession(ClientMeta clientMeta, string bridgeUrl = null) Parameters Type Name Description ClientMeta clientMeta The metadata of the Dapp. System.String bridgeUrl An optional wallet connect bridgeurl. e.g. https://bridge.walletconnect.org AlgorandWalletConnectSession(SavedSession) Continue an existing session. Declaration public AlgorandWalletConnectSession(SavedSession savedSession) Parameters Type Name Description SavedSession savedSession A previously existing session. AlgorandWalletConnectSession(SavedSession) Continue an existing session. Declaration public AlgorandWalletConnectSession(SavedSession savedSession) Parameters Type Name Description SavedSession savedSession A previously existing session. Properties Accounts Declaration public Address[] Accounts { get; } Property Value Type Description Address [] Accounts Declaration public Address[] Accounts { get; } Property Value Type Description Address [] BridgeUrl Declaration public string BridgeUrl { get; } Property Value Type Description System.String BridgeUrl Declaration public string BridgeUrl { get; } Property Value Type Description System.String ChainId Declaration public int ChainId { get; } Property Value Type Description System.Int32 ChainId Declaration public int ChainId { get; } Property Value Type Description System.Int32 ClientId Declaration public string ClientId { get; } Property Value Type Description System.String ClientId Declaration public string ClientId { get; } Property Value Type Description System.String ConnectionStatus Declaration public AlgorandWalletConnectSession.Status ConnectionStatus { get; } Property Value Type Description AlgorandWalletConnectSession.Status ConnectionStatus Declaration public AlgorandWalletConnectSession.Status ConnectionStatus { get; } Property Value Type Description AlgorandWalletConnectSession.Status DappMeta Declaration public ClientMeta DappMeta { get; } Property Value Type Description ClientMeta DappMeta Declaration public ClientMeta DappMeta { get; } Property Value Type Description ClientMeta HandshakeId Declaration public ulong HandshakeId { get; } Property Value Type Description System.UInt64 HandshakeId Declaration public ulong HandshakeId { get; } Property Value Type Description System.UInt64 HandshakeTopic Declaration public string HandshakeTopic { get; set; } Property Value Type Description System.String HandshakeTopic Declaration public string HandshakeTopic { get; set; } Property Value Type Description System.String Key Declaration public Hex Key { get; } Property Value Type Description Hex Key Declaration public Hex Key { get; } Property Value Type Description Hex NetworkId Declaration public int NetworkId { get; } Property Value Type Description System.Int32 NetworkId Declaration public int NetworkId { get; } Property Value Type Description System.Int32 OnResponseReceived Declaration public UnityEvent<JsonRpcResponse> OnResponseReceived { get; } Property Value Type Description UnityEvent < JsonRpcResponse > OnResponseReceived Declaration public UnityEvent<JsonRpcResponse> OnResponseReceived { get; } Property Value Type Description UnityEvent < JsonRpcResponse > OnSessionConnect Declaration public UnityEvent<AlgorandWalletConnectSession> OnSessionConnect { get; } Property Value Type Description UnityEvent < AlgorandWalletConnectSession > OnSessionConnect Declaration public UnityEvent<AlgorandWalletConnectSession> OnSessionConnect { get; } Property Value Type Description UnityEvent < AlgorandWalletConnectSession > OnSessionDisconnect Declaration public UnityEvent<string> OnSessionDisconnect { get; } Property Value Type Description UnityEvent < System.String > OnSessionDisconnect Declaration public UnityEvent<string> OnSessionDisconnect { get; } Property Value Type Description UnityEvent < System.String > OnSessionUpdate Declaration public UnityEvent<WalletConnectSessionData> OnSessionUpdate { get; } Property Value Type Description UnityEvent < WalletConnectSessionData > OnSessionUpdate Declaration public UnityEvent<WalletConnectSessionData> OnSessionUpdate { get; } Property Value Type Description UnityEvent < WalletConnectSessionData > PeerId Declaration public string PeerId { get; } Property Value Type Description System.String PeerId Declaration public string PeerId { get; } Property Value Type Description System.String Version Declaration public string Version { get; } Property Value Type Description System.String Version Declaration public string Version { get; } Property Value Type Description System.String WalletMeta Declaration public ClientMeta WalletMeta { get; } Property Value Type Description ClientMeta WalletMeta Declaration public ClientMeta WalletMeta { get; } Property Value Type Description ClientMeta Methods Disconnect(String) Disconnect from a or session. Declaration public void Disconnect(string reason = null) Parameters Type Name Description System.String reason An optional reason to inform the web socket client. Disconnect(String) Disconnect from a or session. Declaration public void Disconnect(string reason = null) Parameters Type Name Description System.String reason An optional reason to inform the web socket client. Dispose() Declaration public void Dispose() Dispose() Declaration public void Dispose() Save() Save the current session's state. Declaration public SavedSession Save() Returns Type Description SavedSession A SavedSession that can be used for continuing an existing session later. Save() Save the current session's state. Declaration public SavedSession Save() Returns Type Description SavedSession A SavedSession that can be used for continuing an existing session later. SignTransactions(WalletTransaction[], SignTxnsOpts, CancellationToken) Sign a group of transactions. Declaration public async UniTask<Either<SignTxnsError, byte[][]>> SignTransactions(WalletTransaction[] transactions, SignTxnsOpts options = default(SignTxnsOpts), CancellationToken cancellationToken = null) Parameters Type Name Description WalletTransaction [] transactions The atomic transaction group of [1,16] transactions. Contains information about how to sign each transaction, and which ones to sign. SignTxnsOpts options Optional sign transaction options. CancellationToken cancellationToken Optional cancellation token used for interrupting this request. It's recommended to use for UniTask. https://github.com/Cysharp/UniTask#timeout-handling Returns Type Description UniTask < Either < SignTxnsError , System.Byte [][]>> Either the result of the request or a IJsonRpcError if the request was invalid. The result is an array of the same length as the number of transactions provided in . For every index in this result, the value is SignTransactions(WalletTransaction[], SignTxnsOpts, CancellationToken) Sign a group of transactions. Declaration public async UniTask<Either<SignTxnsError, byte[][]>> SignTransactions(WalletTransaction[] transactions, SignTxnsOpts options = default(SignTxnsOpts), CancellationToken cancellationToken = null) Parameters Type Name Description WalletTransaction [] transactions The atomic transaction group of [1,16] transactions. Contains information about how to sign each transaction, and which ones to sign. SignTxnsOpts options Optional sign transaction options. CancellationToken cancellationToken Optional cancellation token used for interrupting this request. It's recommended to use for UniTask. https://github.com/Cysharp/UniTask#timeout-handling Returns Type Description UniTask < Either < SignTxnsError , System.Byte [][]>> Either the result of the request or a IJsonRpcError if the request was invalid. The result is an array of the same length as the number of transactions provided in . For every index in this result, the value is StartConnection(CancellationToken) Begin the handshake process for a new WalletConnect session. Declaration public async UniTask<string> StartConnection(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken An optional for cancelling this request early. Returns Type Description UniTask < System.String > A WalletConnect Standard URI format (EIP-1328) used for handshaking. StartConnection(CancellationToken) Begin the handshake process for a new WalletConnect session. Declaration public async UniTask<string> StartConnection(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken An optional for cancelling this request early. Returns Type Description UniTask < System.String > A WalletConnect Standard URI format (EIP-1328) used for handshaking. WaitForConnectionApproval(CancellationToken) Wait for an approval response from the handshake. Declaration public async UniTask WaitForConnectionApproval(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken An optional that can be used for things like timeouts. Returns Type Description UniTask WaitForConnectionApproval(CancellationToken) Wait for an approval response from the handshake. Declaration public async UniTask WaitForConnectionApproval(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken An optional that can be used for things like timeouts. Returns Type Description UniTask Implements IActiveWalletConnectSession<TSession> IWalletConnectSessionData System.IDisposable"
  },
  "api/AlgoSdk.WalletConnect.AlgorandWalletConnectSession.Status.html": {
    "href": "api/AlgoSdk.WalletConnect.AlgorandWalletConnectSession.Status.html",
    "title": "Enum AlgorandWalletConnectSession.Status | Unity Algorand SDK",
    "keywords": "Enum AlgorandWalletConnectSession.Status Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public enum Status Fields Name Description Connected NoConnection RequestingConnection Unknown"
  },
  "api/AlgoSdk.WalletConnect.AlgorandWalletConnectSession.Status_1.html": {
    "href": "api/AlgoSdk.WalletConnect.AlgorandWalletConnectSession.Status_1.html",
    "title": "Enum AlgorandWalletConnectSession.Status | Unity Algorand SDK",
    "keywords": "Enum AlgorandWalletConnectSession.Status Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public enum Status Fields Name Description Connected NoConnection RequestingConnection Unknown"
  },
  "api/AlgoSdk.WalletConnect.ClientMeta.html": {
    "href": "api/AlgoSdk.WalletConnect.ClientMeta.html",
    "title": "Struct ClientMeta | Unity Algorand SDK",
    "keywords": "Struct ClientMeta Implements System.IEquatable < ClientMeta > Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct ClientMeta : IEquatable<ClientMeta> Fields Description Declaration public string Description Field Value Type Description System.String Description Declaration public string Description Field Value Type Description System.String IconUrls Declaration public string[] IconUrls Field Value Type Description System.String [] IconUrls Declaration public string[] IconUrls Field Value Type Description System.String [] Name Declaration public string Name Field Value Type Description System.String Name Declaration public string Name Field Value Type Description System.String Url Declaration public string Url Field Value Type Description System.String Url Declaration public string Url Field Value Type Description System.String Methods Equals(ClientMeta) Declaration public bool Equals(ClientMeta other) Parameters Type Name Description ClientMeta other Returns Type Description System.Boolean Equals(ClientMeta) Declaration public bool Equals(ClientMeta other) Parameters Type Name Description ClientMeta other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.WalletConnect.DefaultBridge.html": {
    "href": "api/AlgoSdk.WalletConnect.DefaultBridge.html",
    "title": "Class DefaultBridge | Unity Algorand SDK",
    "keywords": "Class DefaultBridge Inheritance System.Object DefaultBridge Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public static class DefaultBridge Fields BridgeUrls Declaration public static readonly string[] BridgeUrls Field Value Type Description System.String [] BridgeUrls Declaration public static readonly string[] BridgeUrls Field Value Type Description System.String [] Domain Declaration public const string Domain = \"walletconnect.org\" Field Value Type Description System.String Domain Declaration public const string Domain = \"walletconnect.org\" Field Value Type Description System.String MainBridge Declaration public static string MainBridge Field Value Type Description System.String MainBridge Declaration public static string MainBridge Field Value Type Description System.String Methods GetRandomBridgeUrl() Declaration public static string GetRandomBridgeUrl() Returns Type Description System.String GetRandomBridgeUrl() Declaration public static string GetRandomBridgeUrl() Returns Type Description System.String"
  },
  "api/AlgoSdk.WalletConnect.EncryptedPayload.html": {
    "href": "api/AlgoSdk.WalletConnect.EncryptedPayload.html",
    "title": "Struct EncryptedPayload | Unity Algorand SDK",
    "keywords": "Struct EncryptedPayload Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct EncryptedPayload Fields Data Declaration public Hex Data Field Value Type Description Hex Data Declaration public Hex Data Field Value Type Description Hex Iv Declaration public Hex Iv Field Value Type Description Hex Iv Declaration public Hex Iv Field Value Type Description Hex Signature Declaration public Hex Signature Field Value Type Description Hex Signature Declaration public Hex Signature Field Value Type Description Hex Methods Sign(Byte[]) Declaration public byte[] Sign(byte[] key) Parameters Type Name Description System.Byte [] key Returns Type Description System.Byte [] Sign(Byte[]) Declaration public byte[] Sign(byte[] key) Parameters Type Name Description System.Byte [] key Returns Type Description System.Byte [] ValidateHmac(Byte[]) Declaration public void ValidateHmac(byte[] key) Parameters Type Name Description System.Byte [] key ValidateHmac(Byte[]) Declaration public void ValidateHmac(byte[] key) Parameters Type Name Description System.Byte [] key Operators Implicit((Byte[] iv, Byte[] encryptedData) to EncryptedPayload) Declaration public static implicit operator EncryptedPayload((byte[] iv, byte[] encryptedData) encryptResult) Parameters Type Name Description System.ValueTuple < System.Byte [], System.Byte []> encryptResult Returns Type Description EncryptedPayload Implicit((Byte[] iv, Byte[] encryptedData) to EncryptedPayload) Declaration public static implicit operator EncryptedPayload((byte[] iv, byte[] encryptedData) encryptResult) Parameters Type Name Description System.ValueTuple < System.Byte [], System.Byte []> encryptResult Returns Type Description EncryptedPayload"
  },
  "api/AlgoSdk.WalletConnect.html": {
    "href": "api/AlgoSdk.WalletConnect.html",
    "title": "Namespace AlgoSdk.WalletConnect | Unity Algorand SDK",
    "keywords": "Namespace AlgoSdk.WalletConnect Classes AesCipher AlgorandWalletConnectSession DefaultBridge JsonRpc QrCode RpcPayload WalletConnectRpc WalletConnectRpc.Algorand WebSocketExtensions Structs ClientMeta EncryptedPayload JsonRpcError JsonRpcRequest JsonRpcResponse MultisigMetadata This struct represents metadata required for signing transactions sent by multisig accounts via WalletConnect. See Multisig for more information. NetworkMessage SavedSession SignTxnsError Error obtained from a SignTxnsOpts Options for an . WalletConnectSessionData WalletConnectSessionRequest WalletTransaction A struct representing the serialized data for a WalletConnect Transaction see https://developer.algorand.org/docs/get-details/walletconnect/walletconnect-schema/ WebSocketTransport Interfaces IActiveWalletConnectSession<TSession> IJsonRpcError IJsonRpcRequest IJsonRpcRequest<T> IJsonRpcResponse IJsonRpcResponse<T> IWalletConnectSessionData Enums AlgorandWalletConnectSession.Status AlgorandWalletConnectSession.Status SignTxnsErrorCode SignTxnsErrorCode WalletConnectError WalletConnectError"
  },
  "api/AlgoSdk.WalletConnect.IActiveWalletConnectSession-1.html": {
    "href": "api/AlgoSdk.WalletConnect.IActiveWalletConnectSession-1.html",
    "title": "Interface IActiveWalletConnectSession<TSession> | Unity Algorand SDK",
    "keywords": "Interface IActiveWalletConnectSession<TSession> Inherited Members IWalletConnectSessionData.ClientId IWalletConnectSessionData.BridgeUrl IWalletConnectSessionData.Key IWalletConnectSessionData.PeerId IWalletConnectSessionData.HandshakeId IWalletConnectSessionData.NetworkId IWalletConnectSessionData.Accounts IWalletConnectSessionData.ChainId IWalletConnectSessionData.DappMeta IWalletConnectSessionData.WalletMeta System.IDisposable.Dispose() Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public interface IActiveWalletConnectSession<TSession> : IWalletConnectSessionData, IDisposable where TSession : IActiveWalletConnectSession<TSession> Type Parameters Name Description TSession Properties OnSessionConnect Declaration UnityEvent<TSession> OnSessionConnect { get; } Property Value Type Description UnityEvent <TSession> OnSessionConnect Declaration UnityEvent<TSession> OnSessionConnect { get; } Property Value Type Description UnityEvent <TSession> OnSessionDisconnect Declaration UnityEvent<string> OnSessionDisconnect { get; } Property Value Type Description UnityEvent < System.String > OnSessionDisconnect Declaration UnityEvent<string> OnSessionDisconnect { get; } Property Value Type Description UnityEvent < System.String > OnSessionUpdate Declaration UnityEvent<WalletConnectSessionData> OnSessionUpdate { get; } Property Value Type Description UnityEvent < WalletConnectSessionData > OnSessionUpdate Declaration UnityEvent<WalletConnectSessionData> OnSessionUpdate { get; } Property Value Type Description UnityEvent < WalletConnectSessionData >"
  },
  "api/AlgoSdk.WalletConnect.IJsonRpcError.html": {
    "href": "api/AlgoSdk.WalletConnect.IJsonRpcError.html",
    "title": "Interface IJsonRpcError | Unity Algorand SDK",
    "keywords": "Interface IJsonRpcError Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public interface IJsonRpcError Properties Code A Number that indicates the error type that occurred. Declaration int Code { get; set; } Property Value Type Description System.Int32 Code A Number that indicates the error type that occurred. Declaration int Code { get; set; } Property Value Type Description System.Int32 Data A Primitive or Structured value that contains additional information about the error. Declaration AlgoApiObject Data { get; set; } Property Value Type Description AlgoApiObject Data A Primitive or Structured value that contains additional information about the error. Declaration AlgoApiObject Data { get; set; } Property Value Type Description AlgoApiObject Message A String providing a short description of the error. Declaration string Message { get; set; } Property Value Type Description System.String Message A String providing a short description of the error. Declaration string Message { get; set; } Property Value Type Description System.String"
  },
  "api/AlgoSdk.WalletConnect.IJsonRpcRequest.html": {
    "href": "api/AlgoSdk.WalletConnect.IJsonRpcRequest.html",
    "title": "Interface IJsonRpcRequest | Unity Algorand SDK",
    "keywords": "Interface IJsonRpcRequest Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public interface IJsonRpcRequest Properties Id The id of this request. Used to keep track of the correct response. Declaration ulong Id { get; set; } Property Value Type Description System.UInt64 Id The id of this request. Used to keep track of the correct response. Declaration ulong Id { get; set; } Property Value Type Description System.UInt64 JsonRpc The JsonRpc version of this request. Declaration string JsonRpc { get; set; } Property Value Type Description System.String JsonRpc The JsonRpc version of this request. Declaration string JsonRpc { get; set; } Property Value Type Description System.String Method The method name to call in this request. Declaration string Method { get; set; } Property Value Type Description System.String Method The method name to call in this request. Declaration string Method { get; set; } Property Value Type Description System.String"
  },
  "api/AlgoSdk.WalletConnect.IJsonRpcRequest-1.html": {
    "href": "api/AlgoSdk.WalletConnect.IJsonRpcRequest-1.html",
    "title": "Interface IJsonRpcRequest<T> | Unity Algorand SDK",
    "keywords": "Interface IJsonRpcRequest<T> Inherited Members IJsonRpcRequest.Id IJsonRpcRequest.JsonRpc IJsonRpcRequest.Method Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public interface IJsonRpcRequest<T> : IJsonRpcRequest Type Parameters Name Description T Properties Params Parameters for this request. Declaration T Params { get; set; } Property Value Type Description T Params Parameters for this request. Declaration T Params { get; set; } Property Value Type Description T"
  },
  "api/AlgoSdk.WalletConnect.IJsonRpcResponse.html": {
    "href": "api/AlgoSdk.WalletConnect.IJsonRpcResponse.html",
    "title": "Interface IJsonRpcResponse | Unity Algorand SDK",
    "keywords": "Interface IJsonRpcResponse Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public interface IJsonRpcResponse Properties Error An error object if an error occurred. Declaration JsonRpcError Error { get; set; } Property Value Type Description JsonRpcError Error An error object if an error occurred. Declaration JsonRpcError Error { get; set; } Property Value Type Description JsonRpcError Id The Id of the response. It should be the same as the ID of the corresponding IJsonRpcRequest . Declaration ulong Id { get; set; } Property Value Type Description System.UInt64 Id The Id of the response. It should be the same as the ID of the corresponding IJsonRpcRequest . Declaration ulong Id { get; set; } Property Value Type Description System.UInt64 IsError Returns true if this is an error response. Declaration bool IsError { get; } Property Value Type Description System.Boolean IsError Returns true if this is an error response. Declaration bool IsError { get; } Property Value Type Description System.Boolean JsonRpc The JsonRpc version. Declaration string JsonRpc { get; set; } Property Value Type Description System.String JsonRpc The JsonRpc version. Declaration string JsonRpc { get; set; } Property Value Type Description System.String"
  },
  "api/AlgoSdk.WalletConnect.IJsonRpcResponse-1.html": {
    "href": "api/AlgoSdk.WalletConnect.IJsonRpcResponse-1.html",
    "title": "Interface IJsonRpcResponse<T> | Unity Algorand SDK",
    "keywords": "Interface IJsonRpcResponse<T> Inherited Members IJsonRpcResponse.Id IJsonRpcResponse.JsonRpc IJsonRpcResponse.Error IJsonRpcResponse.IsError Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public interface IJsonRpcResponse<T> : IJsonRpcResponse Type Parameters Name Description T Properties Result The result of the corresponding IJsonRpcRequest . Declaration T Result { get; set; } Property Value Type Description T Result The result of the corresponding IJsonRpcRequest . Declaration T Result { get; set; } Property Value Type Description T"
  },
  "api/AlgoSdk.WalletConnect.IWalletConnectSessionData.html": {
    "href": "api/AlgoSdk.WalletConnect.IWalletConnectSessionData.html",
    "title": "Interface IWalletConnectSessionData | Unity Algorand SDK",
    "keywords": "Interface IWalletConnectSessionData Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public interface IWalletConnectSessionData Properties Accounts The accounts that the Wallet manages. Declaration Address[] Accounts { get; } Property Value Type Description Address [] Accounts The accounts that the Wallet manages. Declaration Address[] Accounts { get; } Property Value Type Description Address [] BridgeUrl The bridge used to communicate with the session. Declaration string BridgeUrl { get; } Property Value Type Description System.String BridgeUrl The bridge used to communicate with the session. Declaration string BridgeUrl { get; } Property Value Type Description System.String ChainId The Identifier of the blockchain connected. Declaration int ChainId { get; } Property Value Type Description System.Int32 ChainId The Identifier of the blockchain connected. Declaration int ChainId { get; } Property Value Type Description System.Int32 ClientId The UUID of this client. Declaration string ClientId { get; } Property Value Type Description System.String ClientId The UUID of this client. Declaration string ClientId { get; } Property Value Type Description System.String DappMeta Meta information about the Dapp connected in this session. Declaration ClientMeta DappMeta { get; } Property Value Type Description ClientMeta DappMeta Meta information about the Dapp connected in this session. Declaration ClientMeta DappMeta { get; } Property Value Type Description ClientMeta HandshakeId Declaration ulong HandshakeId { get; } Property Value Type Description System.UInt64 HandshakeId Declaration ulong HandshakeId { get; } Property Value Type Description System.UInt64 Key The key used to encrypt/decrypt the payloads. Declaration Hex Key { get; } Property Value Type Description Hex Key The key used to encrypt/decrypt the payloads. Declaration Hex Key { get; } Property Value Type Description Hex NetworkId The ID of the network connected (test, beta, main, ...) Declaration int NetworkId { get; } Property Value Type Description System.Int32 NetworkId The ID of the network connected (test, beta, main, ...) Declaration int NetworkId { get; } Property Value Type Description System.Int32 PeerId The UUID of the connecting peer. Declaration string PeerId { get; } Property Value Type Description System.String PeerId The UUID of the connecting peer. Declaration string PeerId { get; } Property Value Type Description System.String WalletMeta Meta information about the Wallet connected in this session. Declaration ClientMeta WalletMeta { get; } Property Value Type Description ClientMeta WalletMeta Meta information about the Wallet connected in this session. Declaration ClientMeta WalletMeta { get; } Property Value Type Description ClientMeta"
  },
  "api/AlgoSdk.WalletConnect.JsonRpc.html": {
    "href": "api/AlgoSdk.WalletConnect.JsonRpc.html",
    "title": "Class JsonRpc | Unity Algorand SDK",
    "keywords": "Class JsonRpc Inheritance System.Object JsonRpc Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public static class JsonRpc Methods ReadJsonRpcPayload(WebSocketEvent, Hex) Declaration public static Either<JsonRpcResponse, JsonRpcRequest> ReadJsonRpcPayload(this WebSocketEvent response, Hex encryptionKey) Parameters Type Name Description WebSocketEvent response Hex encryptionKey Returns Type Description Either < JsonRpcResponse , JsonRpcRequest > ReadJsonRpcPayload(WebSocketEvent, Hex) Declaration public static Either<JsonRpcResponse, JsonRpcRequest> ReadJsonRpcPayload(this WebSocketEvent response, Hex encryptionKey) Parameters Type Name Description WebSocketEvent response Hex encryptionKey Returns Type Description Either < JsonRpcResponse , JsonRpcRequest > ToNetworkMessage<T>(T, Hex, String) Declaration public static NetworkMessage ToNetworkMessage<T>(this T request, Hex encryptionKey, string topic) where T : IJsonRpcRequest Parameters Type Name Description T request Hex encryptionKey System.String topic Returns Type Description NetworkMessage Type Parameters Name Description T ToNetworkMessage<T>(T, Hex, String) Declaration public static NetworkMessage ToNetworkMessage<T>(this T request, Hex encryptionKey, string topic) where T : IJsonRpcRequest Parameters Type Name Description T request Hex encryptionKey System.String topic Returns Type Description NetworkMessage Type Parameters Name Description T"
  },
  "api/AlgoSdk.WalletConnect.JsonRpcError.html": {
    "href": "api/AlgoSdk.WalletConnect.JsonRpcError.html",
    "title": "Struct JsonRpcError | Unity Algorand SDK",
    "keywords": "Struct JsonRpcError Implements System.IEquatable < JsonRpcError > Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct JsonRpcError : IEquatable<JsonRpcError> Properties Code Declaration public int Code { readonly get; set; } Property Value Type Description System.Int32 Code Declaration public int Code { readonly get; set; } Property Value Type Description System.Int32 Data Declaration public AlgoApiObject Data { readonly get; set; } Property Value Type Description AlgoApiObject Data Declaration public AlgoApiObject Data { readonly get; set; } Property Value Type Description AlgoApiObject Message Declaration public string Message { readonly get; set; } Property Value Type Description System.String Message Declaration public string Message { readonly get; set; } Property Value Type Description System.String Methods Equals(JsonRpcError) Declaration public bool Equals(JsonRpcError other) Parameters Type Name Description JsonRpcError other Returns Type Description System.Boolean Equals(JsonRpcError) Declaration public bool Equals(JsonRpcError other) Parameters Type Name Description JsonRpcError other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.WalletConnect.JsonRpcRequest.html": {
    "href": "api/AlgoSdk.WalletConnect.JsonRpcRequest.html",
    "title": "Struct JsonRpcRequest | Unity Algorand SDK",
    "keywords": "Struct JsonRpcRequest Implements IJsonRpcRequest < AlgoApiObject []> IJsonRpcRequest System.IEquatable < JsonRpcRequest > Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct JsonRpcRequest : IJsonRpcRequest<AlgoApiObject[]>, IJsonRpcRequest, IEquatable<JsonRpcRequest> Properties Id Declaration public ulong Id { readonly get; set; } Property Value Type Description System.UInt64 Id Declaration public ulong Id { readonly get; set; } Property Value Type Description System.UInt64 JsonRpc Declaration public string JsonRpc { readonly get; set; } Property Value Type Description System.String JsonRpc Declaration public string JsonRpc { readonly get; set; } Property Value Type Description System.String Method Declaration public string Method { readonly get; set; } Property Value Type Description System.String Method Declaration public string Method { readonly get; set; } Property Value Type Description System.String Params Declaration public AlgoApiObject[] Params { readonly get; set; } Property Value Type Description AlgoApiObject [] Params Declaration public AlgoApiObject[] Params { readonly get; set; } Property Value Type Description AlgoApiObject [] Methods Equals(JsonRpcRequest) Declaration public bool Equals(JsonRpcRequest other) Parameters Type Name Description JsonRpcRequest other Returns Type Description System.Boolean Equals(JsonRpcRequest) Declaration public bool Equals(JsonRpcRequest other) Parameters Type Name Description JsonRpcRequest other Returns Type Description System.Boolean Implements IJsonRpcRequest<T> IJsonRpcRequest System.IEquatable<T>"
  },
  "api/AlgoSdk.WalletConnect.JsonRpcResponse.html": {
    "href": "api/AlgoSdk.WalletConnect.JsonRpcResponse.html",
    "title": "Struct JsonRpcResponse | Unity Algorand SDK",
    "keywords": "Struct JsonRpcResponse Implements IJsonRpcResponse < AlgoApiObject > IJsonRpcResponse System.IEquatable < JsonRpcResponse > Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct JsonRpcResponse : IJsonRpcResponse<AlgoApiObject>, IJsonRpcResponse, IEquatable<JsonRpcResponse> Properties Error Declaration public JsonRpcError Error { readonly get; set; } Property Value Type Description JsonRpcError Error Declaration public JsonRpcError Error { readonly get; set; } Property Value Type Description JsonRpcError Id Declaration public ulong Id { readonly get; set; } Property Value Type Description System.UInt64 Id Declaration public ulong Id { readonly get; set; } Property Value Type Description System.UInt64 IsError Declaration public readonly bool IsError { get; } Property Value Type Description System.Boolean IsError Declaration public readonly bool IsError { get; } Property Value Type Description System.Boolean JsonRpc Declaration public string JsonRpc { readonly get; set; } Property Value Type Description System.String JsonRpc Declaration public string JsonRpc { readonly get; set; } Property Value Type Description System.String Result Declaration public AlgoApiObject Result { readonly get; set; } Property Value Type Description AlgoApiObject Result Declaration public AlgoApiObject Result { readonly get; set; } Property Value Type Description AlgoApiObject Methods Equals(JsonRpcResponse) Declaration public bool Equals(JsonRpcResponse other) Parameters Type Name Description JsonRpcResponse other Returns Type Description System.Boolean Equals(JsonRpcResponse) Declaration public bool Equals(JsonRpcResponse other) Parameters Type Name Description JsonRpcResponse other Returns Type Description System.Boolean Implements IJsonRpcResponse<T> IJsonRpcResponse System.IEquatable<T>"
  },
  "api/AlgoSdk.WalletConnect.MultisigMetadata.html": {
    "href": "api/AlgoSdk.WalletConnect.MultisigMetadata.html",
    "title": "Struct MultisigMetadata | Unity Algorand SDK",
    "keywords": "Struct MultisigMetadata This struct represents metadata required for signing transactions sent by multisig accounts via WalletConnect. See Multisig for more information. Implements System.IEquatable < MultisigMetadata > Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct MultisigMetadata : IEquatable<MultisigMetadata> Fields Addresses The signers of this multisig. Declaration public Address[] Addresses Field Value Type Description Address [] Addresses The signers of this multisig. Declaration public Address[] Addresses Field Value Type Description Address [] Threshold Number of signatures required for valid transaction. Declaration public byte Threshold Field Value Type Description System.Byte Threshold Number of signatures required for valid transaction. Declaration public byte Threshold Field Value Type Description System.Byte Version Version of the multisig. Declaration public byte Version Field Value Type Description System.Byte Version Version of the multisig. Declaration public byte Version Field Value Type Description System.Byte Methods Equals(MultisigMetadata) Declaration public bool Equals(MultisigMetadata other) Parameters Type Name Description MultisigMetadata other Returns Type Description System.Boolean Equals(MultisigMetadata) Declaration public bool Equals(MultisigMetadata other) Parameters Type Name Description MultisigMetadata other Returns Type Description System.Boolean Operators Implicit(Multisig to MultisigMetadata) Declaration public static implicit operator MultisigMetadata(Multisig msig) Parameters Type Name Description Multisig msig Returns Type Description MultisigMetadata Implicit(Multisig to MultisigMetadata) Declaration public static implicit operator MultisigMetadata(Multisig msig) Parameters Type Name Description Multisig msig Returns Type Description MultisigMetadata Implicit(MultisigMetadata to Multisig) Declaration public static implicit operator Multisig(MultisigMetadata msigMeta) Parameters Type Name Description MultisigMetadata msigMeta Returns Type Description Multisig Implicit(MultisigMetadata to Multisig) Declaration public static implicit operator Multisig(MultisigMetadata msigMeta) Parameters Type Name Description MultisigMetadata msigMeta Returns Type Description Multisig Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.WalletConnect.NetworkMessage.html": {
    "href": "api/AlgoSdk.WalletConnect.NetworkMessage.html",
    "title": "Struct NetworkMessage | Unity Algorand SDK",
    "keywords": "Struct NetworkMessage Implements System.IEquatable < NetworkMessage > Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct NetworkMessage : IEquatable<NetworkMessage> Fields IsSilent Declaration public Optional<bool> IsSilent Field Value Type Description Optional < System.Boolean > IsSilent Declaration public Optional<bool> IsSilent Field Value Type Description Optional < System.Boolean > Payload Declaration public string Payload Field Value Type Description System.String Payload Declaration public string Payload Field Value Type Description System.String Topic Declaration public string Topic Field Value Type Description System.String Topic Declaration public string Topic Field Value Type Description System.String Type Declaration public string Type Field Value Type Description System.String Type Declaration public string Type Field Value Type Description System.String Methods Equals(NetworkMessage) Declaration public bool Equals(NetworkMessage other) Parameters Type Name Description NetworkMessage other Returns Type Description System.Boolean Equals(NetworkMessage) Declaration public bool Equals(NetworkMessage other) Parameters Type Name Description NetworkMessage other Returns Type Description System.Boolean PublishToTopic<T>(T, String) Declaration public static NetworkMessage PublishToTopic<T>(T payload, string topic) Parameters Type Name Description T payload System.String topic Returns Type Description NetworkMessage Type Parameters Name Description T PublishToTopic<T>(T, String) Declaration public static NetworkMessage PublishToTopic<T>(T payload, string topic) Parameters Type Name Description T payload System.String topic Returns Type Description NetworkMessage Type Parameters Name Description T PublishToTopicEncrypted<T>(T, Hex, String) Declaration public static NetworkMessage PublishToTopicEncrypted<T>(T payload, Hex encryptionKey, string topic) Parameters Type Name Description T payload Hex encryptionKey System.String topic Returns Type Description NetworkMessage Type Parameters Name Description T PublishToTopicEncrypted<T>(T, Hex, String) Declaration public static NetworkMessage PublishToTopicEncrypted<T>(T payload, Hex encryptionKey, string topic) Parameters Type Name Description T payload Hex encryptionKey System.String topic Returns Type Description NetworkMessage Type Parameters Name Description T SubscribeToTopic(String) Declaration public static NetworkMessage SubscribeToTopic(string topic) Parameters Type Name Description System.String topic Returns Type Description NetworkMessage SubscribeToTopic(String) Declaration public static NetworkMessage SubscribeToTopic(string topic) Parameters Type Name Description System.String topic Returns Type Description NetworkMessage Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.WalletConnect.QrCode.html": {
    "href": "api/AlgoSdk.WalletConnect.QrCode.html",
    "title": "Class QrCode | Unity Algorand SDK",
    "keywords": "Class QrCode Inheritance System.Object QrCode Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public static class QrCode Methods Generate(String) Generates a 256x256 QR-Code Declaration public static Texture2D Generate(string text) Parameters Type Name Description System.String text The text to use to generate the QR-Code Returns Type Description Texture2D A with width=256 and height=256. Generate(String) Generates a 256x256 QR-Code Declaration public static Texture2D Generate(string text) Parameters Type Name Description System.String text The text to use to generate the QR-Code Returns Type Description Texture2D A with width=256 and height=256."
  },
  "api/AlgoSdk.WalletConnect.RpcPayload.html": {
    "href": "api/AlgoSdk.WalletConnect.RpcPayload.html",
    "title": "Class RpcPayload | Unity Algorand SDK",
    "keywords": "Class RpcPayload Inheritance System.Object RpcPayload Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public static class RpcPayload Fields IdRandomPartSize Declaration public const int IdRandomPartSize = 1000 Field Value Type Description System.Int32 IdRandomPartSize Declaration public const int IdRandomPartSize = 1000 Field Value Type Description System.Int32 Methods GenerateId() Declaration public static long GenerateId() Returns Type Description System.Int64 GenerateId() Declaration public static long GenerateId() Returns Type Description System.Int64"
  },
  "api/AlgoSdk.WalletConnect.SavedSession.html": {
    "href": "api/AlgoSdk.WalletConnect.SavedSession.html",
    "title": "Struct SavedSession | Unity Algorand SDK",
    "keywords": "Struct SavedSession Implements IWalletConnectSessionData Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public struct SavedSession : IWalletConnectSessionData Properties Accounts Declaration public Address[] Accounts { get; set; } Property Value Type Description Address [] Accounts Declaration public Address[] Accounts { get; set; } Property Value Type Description Address [] BridgeUrl Declaration public string BridgeUrl { get; set; } Property Value Type Description System.String BridgeUrl Declaration public string BridgeUrl { get; set; } Property Value Type Description System.String ChainId Declaration public int ChainId { get; set; } Property Value Type Description System.Int32 ChainId Declaration public int ChainId { get; set; } Property Value Type Description System.Int32 ClientId Declaration public string ClientId { get; set; } Property Value Type Description System.String ClientId Declaration public string ClientId { get; set; } Property Value Type Description System.String DappMeta Declaration public ClientMeta DappMeta { get; set; } Property Value Type Description ClientMeta DappMeta Declaration public ClientMeta DappMeta { get; set; } Property Value Type Description ClientMeta HandshakeId Declaration public ulong HandshakeId { get; set; } Property Value Type Description System.UInt64 HandshakeId Declaration public ulong HandshakeId { get; set; } Property Value Type Description System.UInt64 Key Declaration public Hex Key { get; set; } Property Value Type Description Hex Key Declaration public Hex Key { get; set; } Property Value Type Description Hex NetworkId Declaration public int NetworkId { get; set; } Property Value Type Description System.Int32 NetworkId Declaration public int NetworkId { get; set; } Property Value Type Description System.Int32 PeerId Declaration public string PeerId { get; set; } Property Value Type Description System.String PeerId Declaration public string PeerId { get; set; } Property Value Type Description System.String WalletMeta Declaration public ClientMeta WalletMeta { get; set; } Property Value Type Description ClientMeta WalletMeta Declaration public ClientMeta WalletMeta { get; set; } Property Value Type Description ClientMeta Implements IWalletConnectSessionData"
  },
  "api/AlgoSdk.WalletConnect.SignTxnsError.html": {
    "href": "api/AlgoSdk.WalletConnect.SignTxnsError.html",
    "title": "Struct SignTxnsError | Unity Algorand SDK",
    "keywords": "Struct SignTxnsError Error obtained from a Implements IJsonRpcError System.IEquatable < SignTxnsError > Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct SignTxnsError : IJsonRpcError, IEquatable<SignTxnsError> Properties Code The integer error code of the error. Declaration public int Code { readonly get; set; } Property Value Type Description System.Int32 Code The integer error code of the error. Declaration public int Code { readonly get; set; } Property Value Type Description System.Int32 Data Any other useful information about the error. Declaration public AlgoApiObject Data { readonly get; set; } Property Value Type Description AlgoApiObject Data Any other useful information about the error. Declaration public AlgoApiObject Data { readonly get; set; } Property Value Type Description AlgoApiObject ErrorCode The standard error code parsed from Code . Declaration public readonly SignTxnsErrorCode ErrorCode { get; } Property Value Type Description SignTxnsErrorCode Code cast to SignTxnsErrorCode if known, else . ErrorCode The standard error code parsed from Code . Declaration public readonly SignTxnsErrorCode ErrorCode { get; } Property Value Type Description SignTxnsErrorCode Code cast to SignTxnsErrorCode if known, else . Message Declaration public string Message { readonly get; set; } Property Value Type Description System.String Message Declaration public string Message { readonly get; set; } Property Value Type Description System.String Methods Equals(SignTxnsError) Declaration public bool Equals(SignTxnsError other) Parameters Type Name Description SignTxnsError other Returns Type Description System.Boolean Equals(SignTxnsError) Declaration public bool Equals(SignTxnsError other) Parameters Type Name Description SignTxnsError other Returns Type Description System.Boolean ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Implicit(JsonRpcError to SignTxnsError) Declaration public static implicit operator SignTxnsError(JsonRpcError err) Parameters Type Name Description JsonRpcError err Returns Type Description SignTxnsError Implicit(JsonRpcError to SignTxnsError) Declaration public static implicit operator SignTxnsError(JsonRpcError err) Parameters Type Name Description JsonRpcError err Returns Type Description SignTxnsError Implicit(SignTxnsError to Boolean) Declaration public static implicit operator bool (SignTxnsError err) Parameters Type Name Description SignTxnsError err Returns Type Description System.Boolean Implicit(SignTxnsError to Boolean) Declaration public static implicit operator bool (SignTxnsError err) Parameters Type Name Description SignTxnsError err Returns Type Description System.Boolean Implicit(SignTxnsError to String) Declaration public static implicit operator string (SignTxnsError err) Parameters Type Name Description SignTxnsError err Returns Type Description System.String Implicit(SignTxnsError to String) Declaration public static implicit operator string (SignTxnsError err) Parameters Type Name Description SignTxnsError err Returns Type Description System.String Implements IJsonRpcError System.IEquatable<T>"
  },
  "api/AlgoSdk.WalletConnect.SignTxnsErrorCode.html": {
    "href": "api/AlgoSdk.WalletConnect.SignTxnsErrorCode.html",
    "title": "Enum SignTxnsErrorCode | Unity Algorand SDK",
    "keywords": "Enum SignTxnsErrorCode Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public enum SignTxnsErrorCode Fields Name Description InvalidInput The input provided is invalid. TooManyTransactions The wallet does not support signing that many transactions at a time. Unauthorized The requested operation and/or account has not been authorized by the user. UninitializedWallet The wallet was not initialized properly beforehand. Unknown Represents an unknown error code. UnsupportedOperation The wallet does not support the requested operation. UserRejectedRequest The user rejected the request."
  },
  "api/AlgoSdk.WalletConnect.SignTxnsErrorCode_1.html": {
    "href": "api/AlgoSdk.WalletConnect.SignTxnsErrorCode_1.html",
    "title": "Enum SignTxnsErrorCode | Unity Algorand SDK",
    "keywords": "Enum SignTxnsErrorCode Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public enum SignTxnsErrorCode Fields Name Description InvalidInput The input provided is invalid. TooManyTransactions The wallet does not support signing that many transactions at a time. Unauthorized The requested operation and/or account has not been authorized by the user. UninitializedWallet The wallet was not initialized properly beforehand. Unknown Represents an unknown error code. UnsupportedOperation The wallet does not support the requested operation. UserRejectedRequest The user rejected the request."
  },
  "api/AlgoSdk.WalletConnect.SignTxnsOpts.html": {
    "href": "api/AlgoSdk.WalletConnect.SignTxnsOpts.html",
    "title": "Struct SignTxnsOpts | Unity Algorand SDK",
    "keywords": "Struct SignTxnsOpts Options for an . Implements System.IEquatable < SignTxnsOpts > Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct SignTxnsOpts : IEquatable<SignTxnsOpts> Fields Message An optional message describing the group of transactions in the . Declaration public string Message Field Value Type Description System.String Message An optional message describing the group of transactions in the . Declaration public string Message Field Value Type Description System.String Methods Equals(SignTxnsOpts) Declaration public bool Equals(SignTxnsOpts other) Parameters Type Name Description SignTxnsOpts other Returns Type Description System.Boolean Equals(SignTxnsOpts) Declaration public bool Equals(SignTxnsOpts other) Parameters Type Name Description SignTxnsOpts other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.WalletConnect.WalletConnectError.html": {
    "href": "api/AlgoSdk.WalletConnect.WalletConnectError.html",
    "title": "Enum WalletConnectError | Unity Algorand SDK",
    "keywords": "Enum WalletConnectError Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public enum WalletConnectError"
  },
  "api/AlgoSdk.WalletConnect.WalletConnectError_1.html": {
    "href": "api/AlgoSdk.WalletConnect.WalletConnectError_1.html",
    "title": "Enum WalletConnectError | Unity Algorand SDK",
    "keywords": "Enum WalletConnectError Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public enum WalletConnectError"
  },
  "api/AlgoSdk.WalletConnect.WalletConnectRpc.Algorand.html": {
    "href": "api/AlgoSdk.WalletConnect.WalletConnectRpc.Algorand.html",
    "title": "Class WalletConnectRpc.Algorand | Unity Algorand SDK",
    "keywords": "Class WalletConnectRpc.Algorand Inheritance System.Object WalletConnectRpc.Algorand Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public static class Algorand Fields ChainId Declaration public const int ChainId = 4160 Field Value Type Description System.Int32 ChainId Declaration public const int ChainId = 4160 Field Value Type Description System.Int32 Methods SignTransactions(WalletTransaction[], SignTxnsOpts) Builds a JsonRpcRequest used for signing transactions. Declaration public static JsonRpcRequest SignTransactions(WalletTransaction[] transactions, SignTxnsOpts options = default(SignTxnsOpts)) Parameters Type Name Description WalletTransaction [] transactions The atomic transaction group of [1,16] transactions. Contains information about how to sign each transaction, and which ones to sign. SignTxnsOpts options Optional options for signing the transactions, e.g. adding a message to the transaction group. Returns Type Description JsonRpcRequest A JsonRpcRequest used for signing Algorand transactions. SignTransactions(WalletTransaction[], SignTxnsOpts) Builds a JsonRpcRequest used for signing transactions. Declaration public static JsonRpcRequest SignTransactions(WalletTransaction[] transactions, SignTxnsOpts options = default(SignTxnsOpts)) Parameters Type Name Description WalletTransaction [] transactions The atomic transaction group of [1,16] transactions. Contains information about how to sign each transaction, and which ones to sign. SignTxnsOpts options Optional options for signing the transactions, e.g. adding a message to the transaction group. Returns Type Description JsonRpcRequest A JsonRpcRequest used for signing Algorand transactions."
  },
  "api/AlgoSdk.WalletConnect.WalletConnectRpc.html": {
    "href": "api/AlgoSdk.WalletConnect.WalletConnectRpc.html",
    "title": "Class WalletConnectRpc | Unity Algorand SDK",
    "keywords": "Class WalletConnectRpc Inheritance System.Object WalletConnectRpc Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public static class WalletConnectRpc Methods GetRandomId() Gets a random, valid JsonRpcRequest id. Declaration public static ulong GetRandomId() Returns Type Description System.UInt64 a System.UInt64 in the range [1, System.Int32.MaxValue ] GetRandomId() Gets a random, valid JsonRpcRequest id. Declaration public static ulong GetRandomId() Returns Type Description System.UInt64 a System.UInt64 in the range [1, System.Int32.MaxValue ] SessionRequest(WalletConnectSessionRequest, UInt64) Utility function for building a JsonRpcRequest used to start a new WalletConnect session. Declaration public static JsonRpcRequest SessionRequest(WalletConnectSessionRequest sessionRequest, ulong id = 0UL) Parameters Type Name Description WalletConnectSessionRequest sessionRequest Parameters required to create the request. System.UInt64 id Returns Type Description JsonRpcRequest A JsonRpcRequest that can be used to start a new WalletConnect session. SessionRequest(WalletConnectSessionRequest, UInt64) Utility function for building a JsonRpcRequest used to start a new WalletConnect session. Declaration public static JsonRpcRequest SessionRequest(WalletConnectSessionRequest sessionRequest, ulong id = 0UL) Parameters Type Name Description WalletConnectSessionRequest sessionRequest Parameters required to create the request. System.UInt64 id Returns Type Description JsonRpcRequest A JsonRpcRequest that can be used to start a new WalletConnect session. SessionRequest(String, ClientMeta, Optional<Int32>, UInt64) Utility function for building a JsonRpcRequest used to start a new WalletConnect session. Declaration public static JsonRpcRequest SessionRequest(string peerId, ClientMeta peerMeta, Optional<int> chainId = default(Optional<int>), ulong id = 0UL) Parameters Type Name Description System.String peerId The UUID of the client. ClientMeta peerMeta The metadata of the client. Optional < System.Int32 > chainId The id of the blockchain this request is for. System.UInt64 id Returns Type Description JsonRpcRequest A JsonRpcRequest that can be used to start a new WalletConnect session. SessionRequest(String, ClientMeta, Optional<Int32>, UInt64) Utility function for building a JsonRpcRequest used to start a new WalletConnect session. Declaration public static JsonRpcRequest SessionRequest(string peerId, ClientMeta peerMeta, Optional<int> chainId = default(Optional<int>), ulong id = 0UL) Parameters Type Name Description System.String peerId The UUID of the client. ClientMeta peerMeta The metadata of the client. Optional < System.Int32 > chainId The id of the blockchain this request is for. System.UInt64 id Returns Type Description JsonRpcRequest A JsonRpcRequest that can be used to start a new WalletConnect session."
  },
  "api/AlgoSdk.WalletConnect.WalletConnectSessionData.html": {
    "href": "api/AlgoSdk.WalletConnect.WalletConnectSessionData.html",
    "title": "Struct WalletConnectSessionData | Unity Algorand SDK",
    "keywords": "Struct WalletConnectSessionData Implements System.IEquatable < WalletConnectSessionData > Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct WalletConnectSessionData : IEquatable<WalletConnectSessionData> Fields Accounts Declaration public Address[] Accounts Field Value Type Description Address [] Accounts Declaration public Address[] Accounts Field Value Type Description Address [] ChainId Declaration public int ChainId Field Value Type Description System.Int32 ChainId Declaration public int ChainId Field Value Type Description System.Int32 IsApproved Declaration public bool IsApproved Field Value Type Description System.Boolean IsApproved Declaration public bool IsApproved Field Value Type Description System.Boolean PeerId Declaration public string PeerId Field Value Type Description System.String PeerId Declaration public string PeerId Field Value Type Description System.String PeerMeta Declaration public ClientMeta PeerMeta Field Value Type Description ClientMeta PeerMeta Declaration public ClientMeta PeerMeta Field Value Type Description ClientMeta Methods Equals(WalletConnectSessionData) Declaration public bool Equals(WalletConnectSessionData other) Parameters Type Name Description WalletConnectSessionData other Returns Type Description System.Boolean Equals(WalletConnectSessionData) Declaration public bool Equals(WalletConnectSessionData other) Parameters Type Name Description WalletConnectSessionData other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.WalletConnect.WalletConnectSessionRequest.html": {
    "href": "api/AlgoSdk.WalletConnect.WalletConnectSessionRequest.html",
    "title": "Struct WalletConnectSessionRequest | Unity Algorand SDK",
    "keywords": "Struct WalletConnectSessionRequest Implements System.IEquatable < WalletConnectSessionRequest > Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct WalletConnectSessionRequest : IEquatable<WalletConnectSessionRequest> Fields ChainId Declaration public Optional<int> ChainId Field Value Type Description Optional < System.Int32 > ChainId Declaration public Optional<int> ChainId Field Value Type Description Optional < System.Int32 > PeerId Declaration public string PeerId Field Value Type Description System.String PeerId Declaration public string PeerId Field Value Type Description System.String PeerMeta Declaration public ClientMeta PeerMeta Field Value Type Description ClientMeta PeerMeta Declaration public ClientMeta PeerMeta Field Value Type Description ClientMeta Methods Equals(WalletConnectSessionRequest) Declaration public bool Equals(WalletConnectSessionRequest other) Parameters Type Name Description WalletConnectSessionRequest other Returns Type Description System.Boolean Equals(WalletConnectSessionRequest) Declaration public bool Equals(WalletConnectSessionRequest other) Parameters Type Name Description WalletConnectSessionRequest other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.WalletConnect.WalletTransaction.html": {
    "href": "api/AlgoSdk.WalletConnect.WalletTransaction.html",
    "title": "Struct WalletTransaction | Unity Algorand SDK",
    "keywords": "Struct WalletTransaction A struct representing the serialized data for a WalletConnect Transaction see https://developer.algorand.org/docs/get-details/walletconnect/walletconnect-schema/ Implements System.IEquatable < WalletTransaction > Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct WalletTransaction : IEquatable<WalletTransaction> Fields AuthAddr Optional Address used to sign the transaction when the account is rekeyed. Also called the signor/sgnr. Declaration public Address AuthAddr Field Value Type Description Address AuthAddr Optional Address used to sign the transaction when the account is rekeyed. Also called the signor/sgnr. Declaration public Address AuthAddr Field Value Type Description Address Message Optional message explaining the reason of the transaction. Declaration public string Message Field Value Type Description System.String Message Optional message explaining the reason of the transaction. Declaration public string Message Field Value Type Description System.String Msig Optional multisig metadata used to sign the transaction. Declaration public MultisigMetadata Msig Field Value Type Description MultisigMetadata Msig Optional multisig metadata used to sign the transaction. Declaration public MultisigMetadata Msig Field Value Type Description MultisigMetadata Signers Optional list of addresses that must sign the transactions. Declaration public Address[] Signers Field Value Type Description Address [] Signers Optional list of addresses that must sign the transactions. Declaration public Address[] Signers Field Value Type Description Address [] Txn A transaction in canonical messagepack format. Declaration public byte[] Txn Field Value Type Description System.Byte [] Remarks Does not contain the txn prefix that is used when signing a transaction. See SerializeMessagePack<T>(T, Allocator) for serializing the transaction. Txn A transaction in canonical messagepack format. Declaration public byte[] Txn Field Value Type Description System.Byte [] Remarks Does not contain the txn prefix that is used when signing a transaction. See SerializeMessagePack<T>(T, Allocator) for serializing the transaction. Methods Equals(WalletTransaction) Declaration public bool Equals(WalletTransaction other) Parameters Type Name Description WalletTransaction other Returns Type Description System.Boolean Equals(WalletTransaction) Declaration public bool Equals(WalletTransaction other) Parameters Type Name Description WalletTransaction other Returns Type Description System.Boolean New<T>(T, String, Address, MultisigMetadata, Address[]) Serialize a transaction and prepare it for WalletConnect. Declaration public static WalletTransaction New<T>(T txn, string message = null, Address authAddr = default(Address), MultisigMetadata msig = default(MultisigMetadata), Address[] signers = null) where T : struct, ITransaction, IEquatable<T> Parameters Type Name Description T txn The transaction to prepare. System.String message Optional message explaining the reason of the transaction. Address authAddr Optional Address used to sign the transaction when the account is rekeyed. Also called the signor/sgnr. MultisigMetadata msig Optional multisig metadata used to sign the transaction. Address [] signers Optional list of addresses that must sign the transactions. Returns Type Description WalletTransaction A transaction struct usable with WalletConnect. See SignTransactions(WalletTransaction[], SignTxnsOpts, CancellationToken) Type Parameters Name Description T The transaction type. New<T>(T, String, Address, MultisigMetadata, Address[]) Serialize a transaction and prepare it for WalletConnect. Declaration public static WalletTransaction New<T>(T txn, string message = null, Address authAddr = default(Address), MultisigMetadata msig = default(MultisigMetadata), Address[] signers = null) where T : struct, ITransaction, IEquatable<T> Parameters Type Name Description T txn The transaction to prepare. System.String message Optional message explaining the reason of the transaction. Address authAddr Optional Address used to sign the transaction when the account is rekeyed. Also called the signor/sgnr. MultisigMetadata msig Optional multisig metadata used to sign the transaction. Address [] signers Optional list of addresses that must sign the transactions. Returns Type Description WalletTransaction A transaction struct usable with WalletConnect. See SignTransactions(WalletTransaction[], SignTxnsOpts, CancellationToken) Type Parameters Name Description T The transaction type. Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.WalletConnect.WebSocketExtensions.html": {
    "href": "api/AlgoSdk.WalletConnect.WebSocketExtensions.html",
    "title": "Class WebSocketExtensions | Unity Algorand SDK",
    "keywords": "Class WebSocketExtensions Inheritance System.Object WebSocketExtensions Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public static class WebSocketExtensions Methods PollUntilOpen(IWebSocketClient, CancellationToken) Declaration public static UniTask<WebSocketEvent> PollUntilOpen(this IWebSocketClient client, CancellationToken cancellationToken = null) Parameters Type Name Description IWebSocketClient client CancellationToken cancellationToken Returns Type Description UniTask < WebSocketEvent > PollUntilOpen(IWebSocketClient, CancellationToken) Declaration public static UniTask<WebSocketEvent> PollUntilOpen(this IWebSocketClient client, CancellationToken cancellationToken = null) Parameters Type Name Description IWebSocketClient client CancellationToken cancellationToken Returns Type Description UniTask < WebSocketEvent > PollUntilPayload(IWebSocketClient, CancellationToken) Declaration public static UniTask<WebSocketEvent> PollUntilPayload(this IWebSocketClient client, CancellationToken cancellationToken = null) Parameters Type Name Description IWebSocketClient client CancellationToken cancellationToken Returns Type Description UniTask < WebSocketEvent > PollUntilPayload(IWebSocketClient, CancellationToken) Declaration public static UniTask<WebSocketEvent> PollUntilPayload(this IWebSocketClient client, CancellationToken cancellationToken = null) Parameters Type Name Description IWebSocketClient client CancellationToken cancellationToken Returns Type Description UniTask < WebSocketEvent > Send(IWebSocketClient, NetworkMessage) Declaration public static void Send(this IWebSocketClient client, NetworkMessage networkMessage) Parameters Type Name Description IWebSocketClient client NetworkMessage networkMessage Send(IWebSocketClient, NetworkMessage) Declaration public static void Send(this IWebSocketClient client, NetworkMessage networkMessage) Parameters Type Name Description IWebSocketClient client NetworkMessage networkMessage"
  },
  "api/AlgoSdk.WalletConnect.WebSocketTransport.html": {
    "href": "api/AlgoSdk.WalletConnect.WebSocketTransport.html",
    "title": "Struct WebSocketTransport | Unity Algorand SDK",
    "keywords": "Struct WebSocketTransport Implements System.IDisposable Namespace : AlgoSdk.WalletConnect Assembly : cs.temp.dll.dll Syntax public struct WebSocketTransport : IDisposable Constructors WebSocketTransport(String) Declaration public WebSocketTransport(string url) Parameters Type Name Description System.String url WebSocketTransport(String) Declaration public WebSocketTransport(string url) Parameters Type Name Description System.String url Properties Connected Declaration public readonly bool Connected { get; } Property Value Type Description System.Boolean Connected Declaration public readonly bool Connected { get; } Property Value Type Description System.Boolean Methods Dispose() Declaration public void Dispose() Dispose() Declaration public void Dispose() Open() Declaration public void Open() Open() Declaration public void Open() Implements System.IDisposable"
  },
  "api/AlgoSdk.WalletHandle.html": {
    "href": "api/AlgoSdk.WalletHandle.html",
    "title": "Struct WalletHandle | Unity Algorand SDK",
    "keywords": "Struct WalletHandle Implements System.IEquatable < WalletHandle > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct WalletHandle : IEquatable<WalletHandle> Fields ExpiresSeconds Declaration public ulong ExpiresSeconds Field Value Type Description System.UInt64 ExpiresSeconds Declaration public ulong ExpiresSeconds Field Value Type Description System.UInt64 Wallet Declaration public Wallet Wallet Field Value Type Description Wallet Wallet Declaration public Wallet Wallet Field Value Type Description Wallet Methods Equals(WalletHandle) Declaration public bool Equals(WalletHandle other) Parameters Type Name Description WalletHandle other Returns Type Description System.Boolean Equals(WalletHandle) Declaration public bool Equals(WalletHandle other) Parameters Type Name Description WalletHandle other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.WalletInfoRequest.html": {
    "href": "api/AlgoSdk.WalletInfoRequest.html",
    "title": "Struct WalletInfoRequest | Unity Algorand SDK",
    "keywords": "Struct WalletInfoRequest Implements System.IEquatable < WalletInfoRequest > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct WalletInfoRequest : IEquatable<WalletInfoRequest> Fields WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes WalletHandleToken Declaration public FixedString128Bytes WalletHandleToken Field Value Type Description FixedString128Bytes Methods Equals(WalletInfoRequest) Declaration public bool Equals(WalletInfoRequest other) Parameters Type Name Description WalletInfoRequest other Returns Type Description System.Boolean Equals(WalletInfoRequest) Declaration public bool Equals(WalletInfoRequest other) Parameters Type Name Description WalletInfoRequest other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/AlgoSdk.WalletInfoResponse.html": {
    "href": "api/AlgoSdk.WalletInfoResponse.html",
    "title": "Struct WalletInfoResponse | Unity Algorand SDK",
    "keywords": "Struct WalletInfoResponse Implements System.IEquatable < WalletInfoResponse > Namespace : AlgoSdk Assembly : cs.temp.dll.dll Syntax public struct WalletInfoResponse : IEquatable<WalletInfoResponse> Fields Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Error Declaration public Optional<bool> Error Field Value Type Description Optional < System.Boolean > Message Declaration public string Message Field Value Type Description System.String Message Declaration public string Message Field Value Type Description System.String WalletHandle Declaration public WalletHandle WalletHandle Field Value Type Description WalletHandle WalletHandle Declaration public WalletHandle WalletHandle Field Value Type Description WalletHandle Methods Equals(WalletInfoResponse) Declaration public bool Equals(WalletInfoResponse other) Parameters Type Name Description WalletInfoResponse other Returns Type Description System.Boolean Equals(WalletInfoResponse) Declaration public bool Equals(WalletInfoResponse other) Parameters Type Name Description WalletInfoResponse other Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/Netcode.Transports.WebSocket.html": {
    "href": "api/Netcode.Transports.WebSocket.html",
    "title": "Namespace Netcode.Transports.WebSocket | Unity Algorand SDK",
    "keywords": "Namespace Netcode.Transports.WebSocket Classes NativeWebSocketClient WebSocketClientFactory WebSocketEvent Interfaces IWebSocketClient Enums WebSocketEvent.WebSocketEventType WebSocketEvent.WebSocketEventType"
  },
  "api/Netcode.Transports.WebSocket.IWebSocketClient.html": {
    "href": "api/Netcode.Transports.WebSocket.IWebSocketClient.html",
    "title": "Interface IWebSocketClient | Unity Algorand SDK",
    "keywords": "Interface IWebSocketClient Namespace : Netcode.Transports.WebSocket Assembly : cs.temp.dll.dll Syntax public interface IWebSocketClient Properties EventQueue Declaration Queue<WebSocketEvent> EventQueue { get; } Property Value Type Description Queue < WebSocketEvent > EventQueue Declaration Queue<WebSocketEvent> EventQueue { get; } Property Value Type Description Queue < WebSocketEvent > ReadyState Declaration WebSocketState ReadyState { get; } Property Value Type Description WebSocketState ReadyState Declaration WebSocketState ReadyState { get; } Property Value Type Description WebSocketState WaitTime Declaration ulong WaitTime { get; } Property Value Type Description System.UInt64 WaitTime Declaration ulong WaitTime { get; } Property Value Type Description System.UInt64 Methods Close(CloseStatusCode, String) Declaration void Close(CloseStatusCode code = null, string reason = null) Parameters Type Name Description CloseStatusCode code System.String reason Close(CloseStatusCode, String) Declaration void Close(CloseStatusCode code = null, string reason = null) Parameters Type Name Description CloseStatusCode code System.String reason Connect() Declaration void Connect() Connect() Declaration void Connect() Poll() Declaration WebSocketEvent Poll() Returns Type Description WebSocketEvent Poll() Declaration WebSocketEvent Poll() Returns Type Description WebSocketEvent Send(ArraySegment<Byte>) Declaration void Send(ArraySegment<byte> data) Parameters Type Name Description System.ArraySegment < System.Byte > data Send(ArraySegment<Byte>) Declaration void Send(ArraySegment<byte> data) Parameters Type Name Description System.ArraySegment < System.Byte > data"
  },
  "api/Netcode.Transports.WebSocket.NativeWebSocketClient.html": {
    "href": "api/Netcode.Transports.WebSocket.NativeWebSocketClient.html",
    "title": "Class NativeWebSocketClient | Unity Algorand SDK",
    "keywords": "Class NativeWebSocketClient Inheritance System.Object NativeWebSocketClient Implements IWebSocketClient Namespace : Netcode.Transports.WebSocket Assembly : cs.temp.dll.dll Syntax public class NativeWebSocketClient : IWebSocketClient Constructors NativeWebSocketClient(String) Declaration public NativeWebSocketClient(string url) Parameters Type Name Description System.String url NativeWebSocketClient(String) Declaration public NativeWebSocketClient(string url) Parameters Type Name Description System.String url Properties EventQueue Declaration public Queue<WebSocketEvent> EventQueue { get; } Property Value Type Description Queue < WebSocketEvent > EventQueue Declaration public Queue<WebSocketEvent> EventQueue { get; } Property Value Type Description Queue < WebSocketEvent > ReadyState Declaration public WebSocketState ReadyState { get; } Property Value Type Description WebSocketState ReadyState Declaration public WebSocketState ReadyState { get; } Property Value Type Description WebSocketState WaitTime Declaration public ulong WaitTime { get; } Property Value Type Description System.UInt64 WaitTime Declaration public ulong WaitTime { get; } Property Value Type Description System.UInt64 Methods Close(CloseStatusCode, String) Declaration public void Close(CloseStatusCode code = null, string reason = null) Parameters Type Name Description CloseStatusCode code System.String reason Close(CloseStatusCode, String) Declaration public void Close(CloseStatusCode code = null, string reason = null) Parameters Type Name Description CloseStatusCode code System.String reason Connect() Declaration public void Connect() Connect() Declaration public void Connect() OnClose(Object, CloseEventArgs) Declaration public void OnClose(object sender, CloseEventArgs e) Parameters Type Name Description System.Object sender CloseEventArgs e OnClose(Object, CloseEventArgs) Declaration public void OnClose(object sender, CloseEventArgs e) Parameters Type Name Description System.Object sender CloseEventArgs e OnError(Object, ErrorEventArgs) Declaration public void OnError(object sender, ErrorEventArgs e) Parameters Type Name Description System.Object sender ErrorEventArgs e OnError(Object, ErrorEventArgs) Declaration public void OnError(object sender, ErrorEventArgs e) Parameters Type Name Description System.Object sender ErrorEventArgs e OnMessage(Object, MessageEventArgs) Declaration public void OnMessage(object sender, MessageEventArgs e) Parameters Type Name Description System.Object sender MessageEventArgs e OnMessage(Object, MessageEventArgs) Declaration public void OnMessage(object sender, MessageEventArgs e) Parameters Type Name Description System.Object sender MessageEventArgs e OnOpen(Object, EventArgs) Declaration public void OnOpen(object sender, EventArgs e) Parameters Type Name Description System.Object sender System.EventArgs e OnOpen(Object, EventArgs) Declaration public void OnOpen(object sender, EventArgs e) Parameters Type Name Description System.Object sender System.EventArgs e Poll() Declaration public WebSocketEvent Poll() Returns Type Description WebSocketEvent Poll() Declaration public WebSocketEvent Poll() Returns Type Description WebSocketEvent Send(ArraySegment<Byte>) Declaration public void Send(ArraySegment<byte> data) Parameters Type Name Description System.ArraySegment < System.Byte > data Send(ArraySegment<Byte>) Declaration public void Send(ArraySegment<byte> data) Parameters Type Name Description System.ArraySegment < System.Byte > data Implements IWebSocketClient"
  },
  "api/Netcode.Transports.WebSocket.WebSocketClientFactory.html": {
    "href": "api/Netcode.Transports.WebSocket.WebSocketClientFactory.html",
    "title": "Class WebSocketClientFactory | Unity Algorand SDK",
    "keywords": "Class WebSocketClientFactory Inheritance System.Object WebSocketClientFactory Namespace : Netcode.Transports.WebSocket Assembly : cs.temp.dll.dll Syntax public class WebSocketClientFactory Methods Create(String) Declaration public static IWebSocketClient Create(string url) Parameters Type Name Description System.String url Returns Type Description IWebSocketClient Create(String) Declaration public static IWebSocketClient Create(string url) Parameters Type Name Description System.String url Returns Type Description IWebSocketClient"
  },
  "api/Netcode.Transports.WebSocket.WebSocketEvent.html": {
    "href": "api/Netcode.Transports.WebSocket.WebSocketEvent.html",
    "title": "Class WebSocketEvent | Unity Algorand SDK",
    "keywords": "Class WebSocketEvent Inheritance System.Object WebSocketEvent Namespace : Netcode.Transports.WebSocket Assembly : cs.temp.dll.dll Syntax public class WebSocketEvent Fields ClientId Declaration public ulong ClientId Field Value Type Description System.UInt64 ClientId Declaration public ulong ClientId Field Value Type Description System.UInt64 Error Declaration public string Error Field Value Type Description System.String Error Declaration public string Error Field Value Type Description System.String Payload Declaration public byte[] Payload Field Value Type Description System.Byte [] Payload Declaration public byte[] Payload Field Value Type Description System.Byte [] Reason Declaration public string Reason Field Value Type Description System.String Reason Declaration public string Reason Field Value Type Description System.String Type Declaration public WebSocketEvent.WebSocketEventType Type Field Value Type Description WebSocketEvent.WebSocketEventType Type Declaration public WebSocketEvent.WebSocketEventType Type Field Value Type Description WebSocketEvent.WebSocketEventType"
  },
  "api/Netcode.Transports.WebSocket.WebSocketEvent.WebSocketEventType.html": {
    "href": "api/Netcode.Transports.WebSocket.WebSocketEvent.WebSocketEventType.html",
    "title": "Enum WebSocketEvent.WebSocketEventType | Unity Algorand SDK",
    "keywords": "Enum WebSocketEvent.WebSocketEventType Namespace : Netcode.Transports.WebSocket Assembly : cs.temp.dll.dll Syntax public enum WebSocketEventType Fields Name Description Close Error Nothing Open Payload"
  },
  "api/Netcode.Transports.WebSocket.WebSocketEvent.WebSocketEventType_1.html": {
    "href": "api/Netcode.Transports.WebSocket.WebSocketEvent.WebSocketEventType_1.html",
    "title": "Enum WebSocketEvent.WebSocketEventType | Unity Algorand SDK",
    "keywords": "Enum WebSocketEvent.WebSocketEventType Namespace : Netcode.Transports.WebSocket Assembly : cs.temp.dll.dll Syntax public enum WebSocketEventType Fields Name Description Close Error Nothing Open Payload"
  },
  "api/Unity.Collections.FixedStringParseExtensions.html": {
    "href": "api/Unity.Collections.FixedStringParseExtensions.html",
    "title": "Class FixedStringParseExtensions | Unity Algorand SDK",
    "keywords": "Class FixedStringParseExtensions Inheritance System.Object FixedStringParseExtensions Namespace : Unity.Collections Assembly : cs.temp.dll.dll Syntax public static class FixedStringParseExtensions Methods Found<T>(ref T, ref Int32, Char, Char, Char, Char) Declaration public static bool Found<T>(this ref T fs, ref int offset, char a, char b, char c, char d) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs System.Int32 offset System.Char a System.Char b System.Char c System.Char d Returns Type Description System.Boolean Type Parameters Name Description T Found<T>(ref T, ref Int32, Char, Char, Char, Char) Declaration public static bool Found<T>(this ref T fs, ref int offset, char a, char b, char c, char d) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs System.Int32 offset System.Char a System.Char b System.Char c System.Char d Returns Type Description System.Boolean Type Parameters Name Description T Found<T>(ref T, ref Int32, Char, Char, Char, Char, Char) Declaration public static bool Found<T>(this ref T fs, ref int offset, char a, char b, char c, char d, char e) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs System.Int32 offset System.Char a System.Char b System.Char c System.Char d System.Char e Returns Type Description System.Boolean Type Parameters Name Description T Found<T>(ref T, ref Int32, Char, Char, Char, Char, Char) Declaration public static bool Found<T>(this ref T fs, ref int offset, char a, char b, char c, char d, char e) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs System.Int32 offset System.Char a System.Char b System.Char c System.Char d System.Char e Returns Type Description System.Boolean Type Parameters Name Description T Parse<T>(ref T, ref Int32, ref Int64) Declaration public static ParseError Parse<T>(this ref T fs, ref int offset, ref long output) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs System.Int32 offset System.Int64 output Returns Type Description ParseError Type Parameters Name Description T Parse<T>(ref T, ref Int32, ref Int64) Declaration public static ParseError Parse<T>(this ref T fs, ref int offset, ref long output) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs System.Int32 offset System.Int64 output Returns Type Description ParseError Type Parameters Name Description T Parse<T>(ref T, ref Int32, ref UInt64) Declaration public static ParseError Parse<T>(this ref T fs, ref int offset, ref ulong output) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs System.Int32 offset System.UInt64 output Returns Type Description ParseError Type Parameters Name Description T Parse<T>(ref T, ref Int32, ref UInt64) Declaration public static ParseError Parse<T>(this ref T fs, ref int offset, ref ulong output) where T : struct, INativeList<byte>, IUTF8Bytes Parameters Type Name Description T fs System.Int32 offset System.UInt64 output Returns Type Description ParseError Type Parameters Name Description T"
  },
  "api/Unity.Collections.html": {
    "href": "api/Unity.Collections.html",
    "title": "Namespace Unity.Collections | Unity Algorand SDK",
    "keywords": "Namespace Unity.Collections Classes FixedStringParseExtensions"
  },
  "api/WebSocketSharp.ByteOrder.html": {
    "href": "api/WebSocketSharp.ByteOrder.html",
    "title": "Enum ByteOrder | Unity Algorand SDK",
    "keywords": "Enum ByteOrder Specifies the byte order. Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public enum ByteOrder Fields Name Description Big Specifies Big-endian. Little Specifies Little-endian."
  },
  "api/WebSocketSharp.ByteOrder_1.html": {
    "href": "api/WebSocketSharp.ByteOrder_1.html",
    "title": "Enum ByteOrder | Unity Algorand SDK",
    "keywords": "Enum ByteOrder Specifies the byte order. Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public enum ByteOrder Fields Name Description Big Specifies Big-endian. Little Specifies Little-endian."
  },
  "api/WebSocketSharp.CloseEventArgs.html": {
    "href": "api/WebSocketSharp.CloseEventArgs.html",
    "title": "Class CloseEventArgs | Unity Algorand SDK",
    "keywords": "Class CloseEventArgs Represents the event data for the OnClose event. Inheritance System.Object System.EventArgs CloseEventArgs Inherited Members System.EventArgs.Empty Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public class CloseEventArgs : EventArgs Remarks That event occurs when the WebSocket connection has been closed. If you would like to get the reason for the connection close, you should access the Code or Reason property. Properties Code Gets the status code for the connection close. Declaration public ushort Code { get; } Property Value Type Description System.UInt16 A System.UInt16 that represents the status code for the connection close if present. Code Gets the status code for the connection close. Declaration public ushort Code { get; } Property Value Type Description System.UInt16 A System.UInt16 that represents the status code for the connection close if present. Reason Gets the reason for the connection close. Declaration public string Reason { get; } Property Value Type Description System.String A System.String that represents the reason for the connection close if present. Reason Gets the reason for the connection close. Declaration public string Reason { get; } Property Value Type Description System.String A System.String that represents the reason for the connection close if present. WasClean Gets a value indicating whether the connection has been closed cleanly. Declaration public bool WasClean { get; } Property Value Type Description System.Boolean true if the connection has been closed cleanly; otherwise, false . WasClean Gets a value indicating whether the connection has been closed cleanly. Declaration public bool WasClean { get; } Property Value Type Description System.Boolean true if the connection has been closed cleanly; otherwise, false ."
  },
  "api/WebSocketSharp.CloseStatusCode.html": {
    "href": "api/WebSocketSharp.CloseStatusCode.html",
    "title": "Enum CloseStatusCode | Unity Algorand SDK",
    "keywords": "Enum CloseStatusCode Indicates the status code for the WebSocket connection close. Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public enum CloseStatusCode : ushort Remarks The values of this enumeration are defined in Section 7.4 of RFC 6455. \"Reserved value\" cannot be sent as a status code in closing handshake by an endpoint. Fields Name Description Abnormal Equivalent to close status 1006. Indicates that the connection was closed abnormally. A Reserved value. Away Equivalent to close status 1001. Indicates that an endpoint is going away. InvalidData Equivalent to close status 1007. Indicates that an endpoint is terminating the connection because it has received a message that contains data that is not consistent with the type of the message. MandatoryExtension Equivalent to close status 1010. Indicates that a client is terminating the connection because it has expected the server to negotiate one or more extension, but the server did not return them in the handshake response. Normal Equivalent to close status 1000. Indicates normal close. NoStatus Equivalent to close status 1005. Indicates that no status code was actually present. A Reserved value. PolicyViolation Equivalent to close status 1008. Indicates that an endpoint is terminating the connection because it has received a message that violates its policy. ProtocolError Equivalent to close status 1002. Indicates that an endpoint is terminating the connection due to a protocol error. ServerError Equivalent to close status 1011. Indicates that a server is terminating the connection because it has encountered an unexpected condition that prevented it from fulfilling the request. TlsHandshakeFailure Equivalent to close status 1015. Indicates that the connection was closed due to a failure to perform a TLS handshake. A Reserved value. TooBig Equivalent to close status 1009. Indicates that an endpoint is terminating the connection because it has received a message that is too big to process. Undefined Equivalent to close status 1004. Still undefined. A Reserved value. UnsupportedData Equivalent to close status 1003. Indicates that an endpoint is terminating the connection because it has received a type of data that it cannot accept."
  },
  "api/WebSocketSharp.CloseStatusCode_1.html": {
    "href": "api/WebSocketSharp.CloseStatusCode_1.html",
    "title": "Enum CloseStatusCode | Unity Algorand SDK",
    "keywords": "Enum CloseStatusCode Indicates the status code for the WebSocket connection close. Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public enum CloseStatusCode : ushort Remarks The values of this enumeration are defined in Section 7.4 of RFC 6455. \"Reserved value\" cannot be sent as a status code in closing handshake by an endpoint. Fields Name Description Abnormal Equivalent to close status 1006. Indicates that the connection was closed abnormally. A Reserved value. Away Equivalent to close status 1001. Indicates that an endpoint is going away. InvalidData Equivalent to close status 1007. Indicates that an endpoint is terminating the connection because it has received a message that contains data that is not consistent with the type of the message. MandatoryExtension Equivalent to close status 1010. Indicates that a client is terminating the connection because it has expected the server to negotiate one or more extension, but the server did not return them in the handshake response. Normal Equivalent to close status 1000. Indicates normal close. NoStatus Equivalent to close status 1005. Indicates that no status code was actually present. A Reserved value. PolicyViolation Equivalent to close status 1008. Indicates that an endpoint is terminating the connection because it has received a message that violates its policy. ProtocolError Equivalent to close status 1002. Indicates that an endpoint is terminating the connection due to a protocol error. ServerError Equivalent to close status 1011. Indicates that a server is terminating the connection because it has encountered an unexpected condition that prevented it from fulfilling the request. TlsHandshakeFailure Equivalent to close status 1015. Indicates that the connection was closed due to a failure to perform a TLS handshake. A Reserved value. TooBig Equivalent to close status 1009. Indicates that an endpoint is terminating the connection because it has received a message that is too big to process. Undefined Equivalent to close status 1004. Still undefined. A Reserved value. UnsupportedData Equivalent to close status 1003. Indicates that an endpoint is terminating the connection because it has received a type of data that it cannot accept."
  },
  "api/WebSocketSharp.CompressionMethod.html": {
    "href": "api/WebSocketSharp.CompressionMethod.html",
    "title": "Enum CompressionMethod | Unity Algorand SDK",
    "keywords": "Enum CompressionMethod Specifies the method for compression. Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public enum CompressionMethod : byte Remarks The methods are defined in Compression Extensions for WebSocket . Fields Name Description Deflate Specifies DEFLATE. None Specifies no compression."
  },
  "api/WebSocketSharp.CompressionMethod_1.html": {
    "href": "api/WebSocketSharp.CompressionMethod_1.html",
    "title": "Enum CompressionMethod | Unity Algorand SDK",
    "keywords": "Enum CompressionMethod Specifies the method for compression. Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public enum CompressionMethod : byte Remarks The methods are defined in Compression Extensions for WebSocket . Fields Name Description Deflate Specifies DEFLATE. None Specifies no compression."
  },
  "api/WebSocketSharp.ErrorEventArgs.html": {
    "href": "api/WebSocketSharp.ErrorEventArgs.html",
    "title": "Class ErrorEventArgs | Unity Algorand SDK",
    "keywords": "Class ErrorEventArgs Represents the event data for the OnError event. Inheritance System.Object System.EventArgs ErrorEventArgs Inherited Members System.EventArgs.Empty Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public class ErrorEventArgs : EventArgs Remarks That event occurs when the WebSocket gets an error. If you would like to get the error message, you should access the Message property. And if the error is due to an exception, you can get it by accessing the Exception property. Properties Exception Gets the exception that caused the error. Declaration public Exception Exception { get; } Property Value Type Description System.Exception An System.Exception instance that represents the cause of the error if it is due to an exception; otherwise, null . Exception Gets the exception that caused the error. Declaration public Exception Exception { get; } Property Value Type Description System.Exception An System.Exception instance that represents the cause of the error if it is due to an exception; otherwise, null . Message Gets the error message. Declaration public string Message { get; } Property Value Type Description System.String A System.String that represents the error message. Message Gets the error message. Declaration public string Message { get; } Property Value Type Description System.String A System.String that represents the error message."
  },
  "api/WebSocketSharp.Ext.html": {
    "href": "api/WebSocketSharp.Ext.html",
    "title": "Class Ext | Unity Algorand SDK",
    "keywords": "Class Ext Provides a set of static methods for websocket-sharp. Inheritance System.Object Ext Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public static class Ext Methods GetDescription(HttpStatusCode) Gets the description of the specified HTTP status code. Declaration public static string GetDescription(this HttpStatusCode code) Parameters Type Name Description HttpStatusCode code One of the enum values. It specifies the HTTP status code. Returns Type Description System.String A System.String that represents the description of the HTTP status code. GetDescription(HttpStatusCode) Gets the description of the specified HTTP status code. Declaration public static string GetDescription(this HttpStatusCode code) Parameters Type Name Description HttpStatusCode code One of the enum values. It specifies the HTTP status code. Returns Type Description System.String A System.String that represents the description of the HTTP status code. GetStatusDescription(Int32) Gets the description of the specified HTTP status code. Declaration public static string GetStatusDescription(this int code) Parameters Type Name Description System.Int32 code An System.Int32 that specifies the HTTP status code. Returns Type Description System.String A System.String that represents the description of the HTTP status code. An empty string if the description is not present. GetStatusDescription(Int32) Gets the description of the specified HTTP status code. Declaration public static string GetStatusDescription(this int code) Parameters Type Name Description System.Int32 code An System.Int32 that specifies the HTTP status code. Returns Type Description System.String A System.String that represents the description of the HTTP status code. An empty string if the description is not present. IsCloseStatusCode(UInt16) Determines whether the specified ushort is in the range of the status code for the WebSocket connection close. Declaration public static bool IsCloseStatusCode(this ushort value) Parameters Type Name Description System.UInt16 value A System.UInt16 to test. Returns Type Description System.Boolean true if value is in the range of the status code for the close; otherwise, false . Remarks The ranges are the following: 1000-2999: These numbers are reserved for definition by the WebSocket protocol. 3000-3999: These numbers are reserved for use by libraries, frameworks, and applications. 4000-4999: These numbers are reserved for private use. IsCloseStatusCode(UInt16) Determines whether the specified ushort is in the range of the status code for the WebSocket connection close. Declaration public static bool IsCloseStatusCode(this ushort value) Parameters Type Name Description System.UInt16 value A System.UInt16 to test. Returns Type Description System.Boolean true if value is in the range of the status code for the close; otherwise, false . Remarks The ranges are the following: 1000-2999: These numbers are reserved for definition by the WebSocket protocol. 3000-3999: These numbers are reserved for use by libraries, frameworks, and applications. 4000-4999: These numbers are reserved for private use. IsEnclosedIn(String, Char) Determines whether the specified string is enclosed in the specified character. Declaration public static bool IsEnclosedIn(this string value, char c) Parameters Type Name Description System.String value A System.String to test. System.Char c A System.Char to find. Returns Type Description System.Boolean true if value is enclosed in c ; otherwise, false . IsEnclosedIn(String, Char) Determines whether the specified string is enclosed in the specified character. Declaration public static bool IsEnclosedIn(this string value, char c) Parameters Type Name Description System.String value A System.String to test. System.Char c A System.Char to find. Returns Type Description System.Boolean true if value is enclosed in c ; otherwise, false . IsHostOrder(ByteOrder) Determines whether the specified byte order is host (this computer architecture) byte order. Declaration public static bool IsHostOrder(this ByteOrder order) Parameters Type Name Description ByteOrder order One of the ByteOrder enum values to test. Returns Type Description System.Boolean true if order is host byte order; otherwise, false . IsHostOrder(ByteOrder) Determines whether the specified byte order is host (this computer architecture) byte order. Declaration public static bool IsHostOrder(this ByteOrder order) Parameters Type Name Description ByteOrder order One of the ByteOrder enum values to test. Returns Type Description System.Boolean true if order is host byte order; otherwise, false . IsLocal(IPAddress) Determines whether the specified IP address is a local IP address. Declaration public static bool IsLocal(this IPAddress address) Parameters Type Name Description System.Net.IPAddress address A System.Net.IPAddress to test. Returns Type Description System.Boolean true if address is a local IP address; otherwise, false . Remarks This local means NOT REMOTE for the current host. Exceptions Type Condition System.ArgumentNullException address is null . IsLocal(IPAddress) Determines whether the specified IP address is a local IP address. Declaration public static bool IsLocal(this IPAddress address) Parameters Type Name Description System.Net.IPAddress address A System.Net.IPAddress to test. Returns Type Description System.Boolean true if address is a local IP address; otherwise, false . Remarks This local means NOT REMOTE for the current host. Exceptions Type Condition System.ArgumentNullException address is null . IsNullOrEmpty(String) Determines whether the specified string is null or an empty string. Declaration public static bool IsNullOrEmpty(this string value) Parameters Type Name Description System.String value A System.String to test. Returns Type Description System.Boolean true if value is null or an empty string; otherwise, false . IsNullOrEmpty(String) Determines whether the specified string is null or an empty string. Declaration public static bool IsNullOrEmpty(this string value) Parameters Type Name Description System.String value A System.String to test. Returns Type Description System.Boolean true if value is null or an empty string; otherwise, false . IsPredefinedScheme(String) Determines whether the specified string is a predefined scheme. Declaration public static bool IsPredefinedScheme(this string value) Parameters Type Name Description System.String value A System.String to test. Returns Type Description System.Boolean true if value is a predefined scheme; otherwise, false . IsPredefinedScheme(String) Determines whether the specified string is a predefined scheme. Declaration public static bool IsPredefinedScheme(this string value) Parameters Type Name Description System.String value A System.String to test. Returns Type Description System.Boolean true if value is a predefined scheme; otherwise, false . MaybeUri(String) Determines whether the specified string is a URI string. Declaration public static bool MaybeUri(this string value) Parameters Type Name Description System.String value A System.String to test. Returns Type Description System.Boolean true if value may be a URI string; otherwise, false . MaybeUri(String) Determines whether the specified string is a URI string. Declaration public static bool MaybeUri(this string value) Parameters Type Name Description System.String value A System.String to test. Returns Type Description System.Boolean true if value may be a URI string; otherwise, false . SubArray<T>(T[], Int32, Int32) Retrieves a sub-array from the specified array. A sub-array starts at the specified index in the array. Declaration public static T[] SubArray<T>(this T[] array, int startIndex, int length) Parameters Type Name Description T[] array An array of T from which to retrieve a sub-array. System.Int32 startIndex An System.Int32 that represents the zero-based index in the array at which retrieving starts. System.Int32 length An System.Int32 that represents the number of elements to retrieve. Returns Type Description T[] An array of T that receives a sub-array. Type Parameters Name Description T The type of elements in the array. Exceptions Type Condition System.ArgumentNullException array is null . System.ArgumentOutOfRangeException startIndex is less than zero. -or- startIndex is greater than the end of the array. -or- length is less than zero. -or- length is greater than the number of elements from startIndex to the end of the array. SubArray<T>(T[], Int32, Int32) Retrieves a sub-array from the specified array. A sub-array starts at the specified index in the array. Declaration public static T[] SubArray<T>(this T[] array, int startIndex, int length) Parameters Type Name Description T[] array An array of T from which to retrieve a sub-array. System.Int32 startIndex An System.Int32 that represents the zero-based index in the array at which retrieving starts. System.Int32 length An System.Int32 that represents the number of elements to retrieve. Returns Type Description T[] An array of T that receives a sub-array. Type Parameters Name Description T The type of elements in the array. Exceptions Type Condition System.ArgumentNullException array is null . System.ArgumentOutOfRangeException startIndex is less than zero. -or- startIndex is greater than the end of the array. -or- length is less than zero. -or- length is greater than the number of elements from startIndex to the end of the array. SubArray<T>(T[], Int64, Int64) Retrieves a sub-array from the specified array. A sub-array starts at the specified index in the array. Declaration public static T[] SubArray<T>(this T[] array, long startIndex, long length) Parameters Type Name Description T[] array An array of T from which to retrieve a sub-array. System.Int64 startIndex A System.Int64 that represents the zero-based index in the array at which retrieving starts. System.Int64 length A System.Int64 that represents the number of elements to retrieve. Returns Type Description T[] An array of T that receives a sub-array. Type Parameters Name Description T The type of elements in the array. Exceptions Type Condition System.ArgumentNullException array is null . System.ArgumentOutOfRangeException startIndex is less than zero. -or- startIndex is greater than the end of the array. -or- length is less than zero. -or- length is greater than the number of elements from startIndex to the end of the array. SubArray<T>(T[], Int64, Int64) Retrieves a sub-array from the specified array. A sub-array starts at the specified index in the array. Declaration public static T[] SubArray<T>(this T[] array, long startIndex, long length) Parameters Type Name Description T[] array An array of T from which to retrieve a sub-array. System.Int64 startIndex A System.Int64 that represents the zero-based index in the array at which retrieving starts. System.Int64 length A System.Int64 that represents the number of elements to retrieve. Returns Type Description T[] An array of T that receives a sub-array. Type Parameters Name Description T The type of elements in the array. Exceptions Type Condition System.ArgumentNullException array is null . System.ArgumentOutOfRangeException startIndex is less than zero. -or- startIndex is greater than the end of the array. -or- length is less than zero. -or- length is greater than the number of elements from startIndex to the end of the array. Times(Int32, Action) Executes the specified delegate n times. Declaration public static void Times(this int n, Action action) Parameters Type Name Description System.Int32 n An System.Int32 that specifies the number of times to execute. System.Action action An System.Action delegate to execute. Times(Int32, Action) Executes the specified delegate n times. Declaration public static void Times(this int n, Action action) Parameters Type Name Description System.Int32 n An System.Int32 that specifies the number of times to execute. System.Action action An System.Action delegate to execute. Times(Int32, Action<Int32>) Executes the specified delegate n times. Declaration public static void Times(this int n, Action<int> action) Parameters Type Name Description System.Int32 n An System.Int32 that specifies the number of times to execute. System.Action < System.Int32 > action An Action<int> delegate to execute. The System.Int32 parameter is the zero-based count of iteration. Times(Int32, Action<Int32>) Executes the specified delegate n times. Declaration public static void Times(this int n, Action<int> action) Parameters Type Name Description System.Int32 n An System.Int32 that specifies the number of times to execute. System.Action < System.Int32 > action An Action<int> delegate to execute. The System.Int32 parameter is the zero-based count of iteration. Times(Int64, Action) Executes the specified delegate n times. Declaration public static void Times(this long n, Action action) Parameters Type Name Description System.Int64 n A System.Int64 that specifies the number of times to execute. System.Action action An System.Action delegate to execute. Times(Int64, Action) Executes the specified delegate n times. Declaration public static void Times(this long n, Action action) Parameters Type Name Description System.Int64 n A System.Int64 that specifies the number of times to execute. System.Action action An System.Action delegate to execute. Times(Int64, Action<Int64>) Executes the specified delegate n times. Declaration public static void Times(this long n, Action<long> action) Parameters Type Name Description System.Int64 n A System.Int64 that specifies the number of times to execute. System.Action < System.Int64 > action An Action<long> delegate to execute. The System.Int64 parameter is the zero-based count of iteration. Times(Int64, Action<Int64>) Executes the specified delegate n times. Declaration public static void Times(this long n, Action<long> action) Parameters Type Name Description System.Int64 n A System.Int64 that specifies the number of times to execute. System.Action < System.Int64 > action An Action<long> delegate to execute. The System.Int64 parameter is the zero-based count of iteration. Times(UInt32, Action) Executes the specified delegate n times. Declaration public static void Times(this uint n, Action action) Parameters Type Name Description System.UInt32 n A System.UInt32 that specifies the number of times to execute. System.Action action An System.Action delegate to execute. Times(UInt32, Action) Executes the specified delegate n times. Declaration public static void Times(this uint n, Action action) Parameters Type Name Description System.UInt32 n A System.UInt32 that specifies the number of times to execute. System.Action action An System.Action delegate to execute. Times(UInt32, Action<UInt32>) Executes the specified delegate n times. Declaration public static void Times(this uint n, Action<uint> action) Parameters Type Name Description System.UInt32 n A System.UInt32 that specifies the number of times to execute. System.Action < System.UInt32 > action An Action<uint> delegate to execute. The System.UInt32 parameter is the zero-based count of iteration. Times(UInt32, Action<UInt32>) Executes the specified delegate n times. Declaration public static void Times(this uint n, Action<uint> action) Parameters Type Name Description System.UInt32 n A System.UInt32 that specifies the number of times to execute. System.Action < System.UInt32 > action An Action<uint> delegate to execute. The System.UInt32 parameter is the zero-based count of iteration. Times(UInt64, Action) Executes the specified delegate n times. Declaration public static void Times(this ulong n, Action action) Parameters Type Name Description System.UInt64 n A System.UInt64 that specifies the number of times to execute. System.Action action An System.Action delegate to execute. Times(UInt64, Action) Executes the specified delegate n times. Declaration public static void Times(this ulong n, Action action) Parameters Type Name Description System.UInt64 n A System.UInt64 that specifies the number of times to execute. System.Action action An System.Action delegate to execute. Times(UInt64, Action<UInt64>) Executes the specified delegate n times. Declaration public static void Times(this ulong n, Action<ulong> action) Parameters Type Name Description System.UInt64 n A System.UInt64 that specifies the number of times to execute. System.Action < System.UInt64 > action An Action<ulong> delegate to execute. The System.UInt64 parameter is the zero-based count of iteration. Times(UInt64, Action<UInt64>) Executes the specified delegate n times. Declaration public static void Times(this ulong n, Action<ulong> action) Parameters Type Name Description System.UInt64 n A System.UInt64 that specifies the number of times to execute. System.Action < System.UInt64 > action An Action<ulong> delegate to execute. The System.UInt64 parameter is the zero-based count of iteration. ToHostOrder(Byte[], ByteOrder) Converts the order of elements in the specified byte array to host (this computer architecture) byte order. Declaration public static byte[] ToHostOrder(this byte[] source, ByteOrder sourceOrder) Parameters Type Name Description System.Byte [] source An array of System.Byte to convert. ByteOrder sourceOrder One of the ByteOrder enum values. It specifies the order of elements in source . Returns Type Description System.Byte [] An array of System.Byte converted from source . source if the number of elements in it is less than 2 or sourceOrder is same as host byte order. Exceptions Type Condition System.ArgumentNullException source is null . ToHostOrder(Byte[], ByteOrder) Converts the order of elements in the specified byte array to host (this computer architecture) byte order. Declaration public static byte[] ToHostOrder(this byte[] source, ByteOrder sourceOrder) Parameters Type Name Description System.Byte [] source An array of System.Byte to convert. ByteOrder sourceOrder One of the ByteOrder enum values. It specifies the order of elements in source . Returns Type Description System.Byte [] An array of System.Byte converted from source . source if the number of elements in it is less than 2 or sourceOrder is same as host byte order. Exceptions Type Condition System.ArgumentNullException source is null . ToString<T>(T[], String) Converts the specified array to a string. Declaration public static string ToString<T>(this T[] array, string separator) Parameters Type Name Description T[] array An array of T to convert. System.String separator A System.String used to separate each element of array . Returns Type Description System.String A System.String converted by concatenating each element of array across separator . An empty string if array is an empty array. Type Parameters Name Description T The type of elements in array . Exceptions Type Condition System.ArgumentNullException array is null . ToString<T>(T[], String) Converts the specified array to a string. Declaration public static string ToString<T>(this T[] array, string separator) Parameters Type Name Description T[] array An array of T to convert. System.String separator A System.String used to separate each element of array . Returns Type Description System.String A System.String converted by concatenating each element of array across separator . An empty string if array is an empty array. Type Parameters Name Description T The type of elements in array . Exceptions Type Condition System.ArgumentNullException array is null . ToUri(String) Converts the specified string to a System.Uri . Declaration public static Uri ToUri(this string value) Parameters Type Name Description System.String value A System.String to convert. Returns Type Description System.Uri A System.Uri converted from value . null if the conversion has failed. ToUri(String) Converts the specified string to a System.Uri . Declaration public static Uri ToUri(this string value) Parameters Type Name Description System.String value A System.String to convert. Returns Type Description System.Uri A System.Uri converted from value . null if the conversion has failed."
  },
  "api/WebSocketSharp.html": {
    "href": "api/WebSocketSharp.html",
    "title": "Namespace WebSocketSharp | Unity Algorand SDK",
    "keywords": "Namespace WebSocketSharp Classes CloseEventArgs Represents the event data for the OnClose event. ErrorEventArgs Represents the event data for the OnError event. Ext Provides a set of static methods for websocket-sharp. LogData Represents a log data used by the Logger class. Logger Provides a set of methods and properties for logging. MessageEventArgs Represents the event data for the OnMessage event. WebSocket Implements the WebSocket interface. WebSocketException The exception that is thrown when a fatal error occurs in the WebSocket communication. Enums ByteOrder Specifies the byte order. ByteOrder Specifies the byte order. CloseStatusCode Indicates the status code for the WebSocket connection close. CloseStatusCode Indicates the status code for the WebSocket connection close. CompressionMethod Specifies the method for compression. CompressionMethod Specifies the method for compression. LogLevel Specifies the logging level. LogLevel Specifies the logging level. WebSocketState Indicates the state of a WebSocket connection. WebSocketState Indicates the state of a WebSocket connection."
  },
  "api/WebSocketSharp.LogData.html": {
    "href": "api/WebSocketSharp.LogData.html",
    "title": "Class LogData | Unity Algorand SDK",
    "keywords": "Class LogData Represents a log data used by the Logger class. Inheritance System.Object LogData Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public class LogData Properties Caller Gets the information of the logging method caller. Declaration public StackFrame Caller { get; } Property Value Type Description StackFrame A that provides the information of the logging method caller. Caller Gets the information of the logging method caller. Declaration public StackFrame Caller { get; } Property Value Type Description StackFrame A that provides the information of the logging method caller. Date Gets the date and time when the log data was created. Declaration public DateTime Date { get; } Property Value Type Description System.DateTime A System.DateTime that represents the date and time when the log data was created. Date Gets the date and time when the log data was created. Declaration public DateTime Date { get; } Property Value Type Description System.DateTime A System.DateTime that represents the date and time when the log data was created. Level Gets the logging level of the log data. Declaration public LogLevel Level { get; } Property Value Type Description LogLevel One of the LogLevel enum values, indicates the logging level of the log data. Level Gets the logging level of the log data. Declaration public LogLevel Level { get; } Property Value Type Description LogLevel One of the LogLevel enum values, indicates the logging level of the log data. Message Gets the message of the log data. Declaration public string Message { get; } Property Value Type Description System.String A System.String that represents the message of the log data. Message Gets the message of the log data. Declaration public string Message { get; } Property Value Type Description System.String A System.String that represents the message of the log data. Methods ToString() Returns a System.String that represents the current LogData . Declaration public override string ToString() Returns Type Description System.String A System.String that represents the current LogData . Overrides System.Object.ToString() ToString() Returns a System.String that represents the current LogData . Declaration public override string ToString() Returns Type Description System.String A System.String that represents the current LogData . Overrides System.Object.ToString()"
  },
  "api/WebSocketSharp.Logger.html": {
    "href": "api/WebSocketSharp.Logger.html",
    "title": "Class Logger | Unity Algorand SDK",
    "keywords": "Class Logger Provides a set of methods and properties for logging. Inheritance System.Object Logger Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public class Logger Remarks If you output a log with lower than the value of the Level property, it cannot be outputted. The default output action writes a log to the standard output stream and the log file if the File property has a valid path to it. If you would like to use the custom output action, you should set the Output property to any Action<LogData, string> delegate. Constructors Logger() Initializes a new instance of the Logger class. Declaration public Logger() Remarks This constructor initializes the current logging level with . Logger() Initializes a new instance of the Logger class. Declaration public Logger() Remarks This constructor initializes the current logging level with . Logger(LogLevel) Initializes a new instance of the Logger class with the specified logging level . Declaration public Logger(LogLevel level) Parameters Type Name Description LogLevel level One of the LogLevel enum values. Logger(LogLevel) Initializes a new instance of the Logger class with the specified logging level . Declaration public Logger(LogLevel level) Parameters Type Name Description LogLevel level One of the LogLevel enum values. Logger(LogLevel, String, Action<LogData, String>) Initializes a new instance of the Logger class with the specified logging level , path to the log file , and output action. Declaration public Logger(LogLevel level, string file, Action<LogData, string> output) Parameters Type Name Description LogLevel level One of the LogLevel enum values. System.String file A System.String that represents the path to the log file. System.Action < LogData , System.String > output An Action<LogData, string> delegate that references the method(s) used to output a log. A System.String parameter passed to this delegate is file . Logger(LogLevel, String, Action<LogData, String>) Initializes a new instance of the Logger class with the specified logging level , path to the log file , and output action. Declaration public Logger(LogLevel level, string file, Action<LogData, string> output) Parameters Type Name Description LogLevel level One of the LogLevel enum values. System.String file A System.String that represents the path to the log file. System.Action < LogData , System.String > output An Action<LogData, string> delegate that references the method(s) used to output a log. A System.String parameter passed to this delegate is file . Properties File Gets or sets the current path to the log file. Declaration public string File { get; set; } Property Value Type Description System.String A System.String that represents the current path to the log file if any. File Gets or sets the current path to the log file. Declaration public string File { get; set; } Property Value Type Description System.String A System.String that represents the current path to the log file if any. Level Gets or sets the current logging level. Declaration public LogLevel Level { get; set; } Property Value Type Description LogLevel One of the LogLevel enum values, specifies the current logging level. Remarks A log with lower than the value of this property cannot be outputted. Level Gets or sets the current logging level. Declaration public LogLevel Level { get; set; } Property Value Type Description LogLevel One of the LogLevel enum values, specifies the current logging level. Remarks A log with lower than the value of this property cannot be outputted. Output Gets or sets the current output action used to output a log. Declaration public Action<LogData, string> Output { get; set; } Property Value Type Description System.Action < LogData , System.String > An Action<LogData, string> delegate that references the method(s) used to output a log. A System.String parameter passed to this delegate is the value of the File property. If the value to set is null , the current output action is changed to the default output action. Output Gets or sets the current output action used to output a log. Declaration public Action<LogData, string> Output { get; set; } Property Value Type Description System.Action < LogData , System.String > An Action<LogData, string> delegate that references the method(s) used to output a log. A System.String parameter passed to this delegate is the value of the File property. If the value to set is null , the current output action is changed to the default output action. Methods Debug(String) Outputs message as a log with . Declaration public void Debug(string message) Parameters Type Name Description System.String message A System.String that represents the message to output as a log. Remarks If the current logging level is higher than , this method doesn't output message as a log. Debug(String) Outputs message as a log with . Declaration public void Debug(string message) Parameters Type Name Description System.String message A System.String that represents the message to output as a log. Remarks If the current logging level is higher than , this method doesn't output message as a log. Error(String) Outputs message as a log with . Declaration public void Error(string message) Parameters Type Name Description System.String message A System.String that represents the message to output as a log. Remarks If the current logging level is higher than , this method doesn't output message as a log. Error(String) Outputs message as a log with . Declaration public void Error(string message) Parameters Type Name Description System.String message A System.String that represents the message to output as a log. Remarks If the current logging level is higher than , this method doesn't output message as a log. Fatal(String) Outputs message as a log with . Declaration public void Fatal(string message) Parameters Type Name Description System.String message A System.String that represents the message to output as a log. Fatal(String) Outputs message as a log with . Declaration public void Fatal(string message) Parameters Type Name Description System.String message A System.String that represents the message to output as a log. Info(String) Outputs message as a log with . Declaration public void Info(string message) Parameters Type Name Description System.String message A System.String that represents the message to output as a log. Remarks If the current logging level is higher than , this method doesn't output message as a log. Info(String) Outputs message as a log with . Declaration public void Info(string message) Parameters Type Name Description System.String message A System.String that represents the message to output as a log. Remarks If the current logging level is higher than , this method doesn't output message as a log. Trace(String) Outputs message as a log with . Declaration public void Trace(string message) Parameters Type Name Description System.String message A System.String that represents the message to output as a log. Remarks If the current logging level is higher than , this method doesn't output message as a log. Trace(String) Outputs message as a log with . Declaration public void Trace(string message) Parameters Type Name Description System.String message A System.String that represents the message to output as a log. Remarks If the current logging level is higher than , this method doesn't output message as a log. Warn(String) Outputs message as a log with . Declaration public void Warn(string message) Parameters Type Name Description System.String message A System.String that represents the message to output as a log. Remarks If the current logging level is higher than , this method doesn't output message as a log. Warn(String) Outputs message as a log with . Declaration public void Warn(string message) Parameters Type Name Description System.String message A System.String that represents the message to output as a log. Remarks If the current logging level is higher than , this method doesn't output message as a log."
  },
  "api/WebSocketSharp.LogLevel.html": {
    "href": "api/WebSocketSharp.LogLevel.html",
    "title": "Enum LogLevel | Unity Algorand SDK",
    "keywords": "Enum LogLevel Specifies the logging level. Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public enum LogLevel Fields Name Description Debug Specifies the 2nd logging level from the bottom. Error Specifies the 2nd logging level from the top. Fatal Specifies the top logging level. Info Specifies the 3rd logging level from the bottom. Trace Specifies the bottom logging level. Warn Specifies the 3rd logging level from the top."
  },
  "api/WebSocketSharp.LogLevel_1.html": {
    "href": "api/WebSocketSharp.LogLevel_1.html",
    "title": "Enum LogLevel | Unity Algorand SDK",
    "keywords": "Enum LogLevel Specifies the logging level. Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public enum LogLevel Fields Name Description Debug Specifies the 2nd logging level from the bottom. Error Specifies the 2nd logging level from the top. Fatal Specifies the top logging level. Info Specifies the 3rd logging level from the bottom. Trace Specifies the bottom logging level. Warn Specifies the 3rd logging level from the top."
  },
  "api/WebSocketSharp.MessageEventArgs.html": {
    "href": "api/WebSocketSharp.MessageEventArgs.html",
    "title": "Class MessageEventArgs | Unity Algorand SDK",
    "keywords": "Class MessageEventArgs Represents the event data for the OnMessage event. Inheritance System.Object System.EventArgs MessageEventArgs Inherited Members System.EventArgs.Empty Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public class MessageEventArgs : EventArgs Remarks That event occurs when the WebSocket receives a message or a ping if the EmitOnPing property is set to true . If you would like to get the message data, you should access the Data or RawData property. Properties Data Gets the message data as a System.String . Declaration public string Data { get; } Property Value Type Description System.String A System.String that represents the message data if its type is text or ping and if decoding it to a string has successfully done; otherwise, null . Data Gets the message data as a System.String . Declaration public string Data { get; } Property Value Type Description System.String A System.String that represents the message data if its type is text or ping and if decoding it to a string has successfully done; otherwise, null . IsBinary Gets a value indicating whether the message type is binary. Declaration public bool IsBinary { get; } Property Value Type Description System.Boolean true if the message type is binary; otherwise, false . IsBinary Gets a value indicating whether the message type is binary. Declaration public bool IsBinary { get; } Property Value Type Description System.Boolean true if the message type is binary; otherwise, false . IsPing Gets a value indicating whether the message type is ping. Declaration public bool IsPing { get; } Property Value Type Description System.Boolean true if the message type is ping; otherwise, false . IsPing Gets a value indicating whether the message type is ping. Declaration public bool IsPing { get; } Property Value Type Description System.Boolean true if the message type is ping; otherwise, false . IsText Gets a value indicating whether the message type is text. Declaration public bool IsText { get; } Property Value Type Description System.Boolean true if the message type is text; otherwise, false . IsText Gets a value indicating whether the message type is text. Declaration public bool IsText { get; } Property Value Type Description System.Boolean true if the message type is text; otherwise, false . RawData Gets the message data as an array of System.Byte . Declaration public byte[] RawData { get; } Property Value Type Description System.Byte [] An array of System.Byte that represents the message data. RawData Gets the message data as an array of System.Byte . Declaration public byte[] RawData { get; } Property Value Type Description System.Byte [] An array of System.Byte that represents the message data."
  },
  "api/WebSocketSharp.Net.AuthenticationSchemes.html": {
    "href": "api/WebSocketSharp.Net.AuthenticationSchemes.html",
    "title": "Enum AuthenticationSchemes | Unity Algorand SDK",
    "keywords": "Enum AuthenticationSchemes Specifies the scheme for authentication. Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public enum AuthenticationSchemes Fields Name Description Anonymous Specifies anonymous authentication. Basic Specifies basic authentication. Digest Specifies digest authentication. None No authentication is allowed."
  },
  "api/WebSocketSharp.Net.AuthenticationSchemes_1.html": {
    "href": "api/WebSocketSharp.Net.AuthenticationSchemes_1.html",
    "title": "Enum AuthenticationSchemes | Unity Algorand SDK",
    "keywords": "Enum AuthenticationSchemes Specifies the scheme for authentication. Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public enum AuthenticationSchemes Fields Name Description Anonymous Specifies anonymous authentication. Basic Specifies basic authentication. Digest Specifies digest authentication. None No authentication is allowed."
  },
  "api/WebSocketSharp.Net.ClientSslConfiguration.html": {
    "href": "api/WebSocketSharp.Net.ClientSslConfiguration.html",
    "title": "Class ClientSslConfiguration | Unity Algorand SDK",
    "keywords": "Class ClientSslConfiguration Stores the parameters for the used by clients. Inheritance System.Object ClientSslConfiguration Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public class ClientSslConfiguration Constructors ClientSslConfiguration(String) Initializes a new instance of the ClientSslConfiguration class with the specified target host server name. Declaration public ClientSslConfiguration(string targetHost) Parameters Type Name Description System.String targetHost A System.String that specifies the target host server name. Exceptions Type Condition System.ArgumentNullException targetHost is null . System.ArgumentException targetHost is an empty string. ClientSslConfiguration(String) Initializes a new instance of the ClientSslConfiguration class with the specified target host server name. Declaration public ClientSslConfiguration(string targetHost) Parameters Type Name Description System.String targetHost A System.String that specifies the target host server name. Exceptions Type Condition System.ArgumentNullException targetHost is null . System.ArgumentException targetHost is an empty string. ClientSslConfiguration(ClientSslConfiguration) Initializes a new instance of the ClientSslConfiguration class that stores the parameters copied from the specified configuration. Declaration public ClientSslConfiguration(ClientSslConfiguration configuration) Parameters Type Name Description ClientSslConfiguration configuration A ClientSslConfiguration from which to copy. Exceptions Type Condition System.ArgumentNullException configuration is null . ClientSslConfiguration(ClientSslConfiguration) Initializes a new instance of the ClientSslConfiguration class that stores the parameters copied from the specified configuration. Declaration public ClientSslConfiguration(ClientSslConfiguration configuration) Parameters Type Name Description ClientSslConfiguration configuration A ClientSslConfiguration from which to copy. Exceptions Type Condition System.ArgumentNullException configuration is null . Properties CheckCertificateRevocation Gets or sets a value indicating whether the certificate revocation list is checked during authentication. Declaration public bool CheckCertificateRevocation { get; set; } Property Value Type Description System.Boolean true if the certificate revocation list is checked during authentication; otherwise, false . The default value is false . CheckCertificateRevocation Gets or sets a value indicating whether the certificate revocation list is checked during authentication. Declaration public bool CheckCertificateRevocation { get; set; } Property Value Type Description System.Boolean true if the certificate revocation list is checked during authentication; otherwise, false . The default value is false . ClientCertificates Gets or sets the collection of client certificates from which to select one to supply to the server. Declaration public X509CertificateCollection ClientCertificates { get; set; } Property Value Type Description X509CertificateCollection A or null . The collection contains client certificates from which to select. The default value is null . ClientCertificates Gets or sets the collection of client certificates from which to select one to supply to the server. Declaration public X509CertificateCollection ClientCertificates { get; set; } Property Value Type Description X509CertificateCollection A or null . The collection contains client certificates from which to select. The default value is null . ClientCertificateSelectionCallback Gets or sets the callback used to select the certificate to supply to the server. Declaration public LocalCertificateSelectionCallback ClientCertificateSelectionCallback { get; set; } Property Value Type Description LocalCertificateSelectionCallback A delegate that invokes the method called for selecting the certificate. The default value is a delegate that invokes a method that only returns null . Remarks No certificate is supplied if the callback returns null . ClientCertificateSelectionCallback Gets or sets the callback used to select the certificate to supply to the server. Declaration public LocalCertificateSelectionCallback ClientCertificateSelectionCallback { get; set; } Property Value Type Description LocalCertificateSelectionCallback A delegate that invokes the method called for selecting the certificate. The default value is a delegate that invokes a method that only returns null . Remarks No certificate is supplied if the callback returns null . EnabledSslProtocols Gets or sets the protocols used for authentication. Declaration public SslProtocols EnabledSslProtocols { get; set; } Property Value Type Description SslProtocols Any of the enum values. It represents the protocols used for authentication. The default value is . EnabledSslProtocols Gets or sets the protocols used for authentication. Declaration public SslProtocols EnabledSslProtocols { get; set; } Property Value Type Description SslProtocols Any of the enum values. It represents the protocols used for authentication. The default value is . ServerCertificateValidationCallback Gets or sets the callback used to validate the certificate supplied by the server. Declaration public RemoteCertificateValidationCallback ServerCertificateValidationCallback { get; set; } Property Value Type Description RemoteCertificateValidationCallback A delegate that invokes the method called for validating the certificate. The default value is a delegate that invokes a method that only returns true . Remarks The certificate is valid if the callback returns true . ServerCertificateValidationCallback Gets or sets the callback used to validate the certificate supplied by the server. Declaration public RemoteCertificateValidationCallback ServerCertificateValidationCallback { get; set; } Property Value Type Description RemoteCertificateValidationCallback A delegate that invokes the method called for validating the certificate. The default value is a delegate that invokes a method that only returns true . Remarks The certificate is valid if the callback returns true . TargetHost Gets or sets the target host server name. Declaration public string TargetHost { get; set; } Property Value Type Description System.String A System.String that represents the name of the server that will share a secure connection with a client. Exceptions Type Condition System.ArgumentNullException The value specified for a set operation is null . System.ArgumentException The value specified for a set operation is an empty string. TargetHost Gets or sets the target host server name. Declaration public string TargetHost { get; set; } Property Value Type Description System.String A System.String that represents the name of the server that will share a secure connection with a client. Exceptions Type Condition System.ArgumentNullException The value specified for a set operation is null . System.ArgumentException The value specified for a set operation is an empty string."
  },
  "api/WebSocketSharp.Net.Cookie.html": {
    "href": "api/WebSocketSharp.Net.Cookie.html",
    "title": "Class Cookie | Unity Algorand SDK",
    "keywords": "Class Cookie Provides a set of methods and properties used to manage an HTTP cookie. Inheritance System.Object Cookie Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public sealed class Cookie Remarks This class refers to the following specifications: Netscape specification RFC 2109 RFC 2965 RFC 6265 This class cannot be inherited. Constructors Cookie(String, String) Initializes a new instance of the Cookie class with the specified name and value. Declaration public Cookie(string name, string value) Parameters Type Name Description System.String name A System.String that specifies the name of the cookie. The name must be a token defined in RFC 2616 . System.String value A System.String that specifies the value of the cookie. Exceptions Type Condition System.ArgumentNullException name is null . System.ArgumentException name is an empty string. - or - name starts with a dollar sign. - or - name contains an invalid character. - or - value is a string not enclosed in double quotes that contains an invalid character. Cookie(String, String) Initializes a new instance of the Cookie class with the specified name and value. Declaration public Cookie(string name, string value) Parameters Type Name Description System.String name A System.String that specifies the name of the cookie. The name must be a token defined in RFC 2616 . System.String value A System.String that specifies the value of the cookie. Exceptions Type Condition System.ArgumentNullException name is null . System.ArgumentException name is an empty string. - or - name starts with a dollar sign. - or - name contains an invalid character. - or - value is a string not enclosed in double quotes that contains an invalid character. Cookie(String, String, String) Initializes a new instance of the Cookie class with the specified name, value, and path. Declaration public Cookie(string name, string value, string path) Parameters Type Name Description System.String name A System.String that specifies the name of the cookie. The name must be a token defined in RFC 2616 . System.String value A System.String that specifies the value of the cookie. System.String path A System.String that specifies the value of the Path attribute of the cookie. Exceptions Type Condition System.ArgumentNullException name is null . System.ArgumentException name is an empty string. - or - name starts with a dollar sign. - or - name contains an invalid character. - or - value is a string not enclosed in double quotes that contains an invalid character. Cookie(String, String, String) Initializes a new instance of the Cookie class with the specified name, value, and path. Declaration public Cookie(string name, string value, string path) Parameters Type Name Description System.String name A System.String that specifies the name of the cookie. The name must be a token defined in RFC 2616 . System.String value A System.String that specifies the value of the cookie. System.String path A System.String that specifies the value of the Path attribute of the cookie. Exceptions Type Condition System.ArgumentNullException name is null . System.ArgumentException name is an empty string. - or - name starts with a dollar sign. - or - name contains an invalid character. - or - value is a string not enclosed in double quotes that contains an invalid character. Cookie(String, String, String, String) Initializes a new instance of the Cookie class with the specified name, value, path, and domain. Declaration public Cookie(string name, string value, string path, string domain) Parameters Type Name Description System.String name A System.String that specifies the name of the cookie. The name must be a token defined in RFC 2616 . System.String value A System.String that specifies the value of the cookie. System.String path A System.String that specifies the value of the Path attribute of the cookie. System.String domain A System.String that specifies the value of the Domain attribute of the cookie. Exceptions Type Condition System.ArgumentNullException name is null . System.ArgumentException name is an empty string. - or - name starts with a dollar sign. - or - name contains an invalid character. - or - value is a string not enclosed in double quotes that contains an invalid character. Cookie(String, String, String, String) Initializes a new instance of the Cookie class with the specified name, value, path, and domain. Declaration public Cookie(string name, string value, string path, string domain) Parameters Type Name Description System.String name A System.String that specifies the name of the cookie. The name must be a token defined in RFC 2616 . System.String value A System.String that specifies the value of the cookie. System.String path A System.String that specifies the value of the Path attribute of the cookie. System.String domain A System.String that specifies the value of the Domain attribute of the cookie. Exceptions Type Condition System.ArgumentNullException name is null . System.ArgumentException name is an empty string. - or - name starts with a dollar sign. - or - name contains an invalid character. - or - value is a string not enclosed in double quotes that contains an invalid character. Properties Comment Gets the value of the Comment attribute of the cookie. Declaration public string Comment { get; } Property Value Type Description System.String A System.String that represents the comment to document intended use of the cookie. null if not present. The default value is null . Comment Gets the value of the Comment attribute of the cookie. Declaration public string Comment { get; } Property Value Type Description System.String A System.String that represents the comment to document intended use of the cookie. null if not present. The default value is null . CommentUri Gets the value of the CommentURL attribute of the cookie. Declaration public Uri CommentUri { get; } Property Value Type Description System.Uri A System.Uri that represents the URI that provides the comment to document intended use of the cookie. null if not present. The default value is null . CommentUri Gets the value of the CommentURL attribute of the cookie. Declaration public Uri CommentUri { get; } Property Value Type Description System.Uri A System.Uri that represents the URI that provides the comment to document intended use of the cookie. null if not present. The default value is null . Discard Gets a value indicating whether the client discards the cookie unconditionally when the client terminates. Declaration public bool Discard { get; } Property Value Type Description System.Boolean true if the client discards the cookie unconditionally when the client terminates; otherwise, false . The default value is false . Discard Gets a value indicating whether the client discards the cookie unconditionally when the client terminates. Declaration public bool Discard { get; } Property Value Type Description System.Boolean true if the client discards the cookie unconditionally when the client terminates; otherwise, false . The default value is false . Domain Gets or sets the value of the Domain attribute of the cookie. Declaration public string Domain { get; set; } Property Value Type Description System.String A System.String that represents the domain name that the cookie is valid for. An empty string if this attribute is not needed. Domain Gets or sets the value of the Domain attribute of the cookie. Declaration public string Domain { get; set; } Property Value Type Description System.String A System.String that represents the domain name that the cookie is valid for. An empty string if this attribute is not needed. Expired Gets or sets a value indicating whether the cookie has expired. Declaration public bool Expired { get; set; } Property Value Type Description System.Boolean true if the cookie has expired; otherwise, false . The default value is false . Expired Gets or sets a value indicating whether the cookie has expired. Declaration public bool Expired { get; set; } Property Value Type Description System.Boolean true if the cookie has expired; otherwise, false . The default value is false . Expires Gets or sets the value of the Expires attribute of the cookie. Declaration public DateTime Expires { get; set; } Property Value Type Description System.DateTime A System.DateTime that represents the date and time that the cookie expires on. System.DateTime.MinValue if this attribute is not needed. The default value is System.DateTime.MinValue . Expires Gets or sets the value of the Expires attribute of the cookie. Declaration public DateTime Expires { get; set; } Property Value Type Description System.DateTime A System.DateTime that represents the date and time that the cookie expires on. System.DateTime.MinValue if this attribute is not needed. The default value is System.DateTime.MinValue . HttpOnly Gets or sets a value indicating whether non-HTTP APIs can access the cookie. Declaration public bool HttpOnly { get; set; } Property Value Type Description System.Boolean true if non-HTTP APIs cannot access the cookie; otherwise, false . The default value is false . HttpOnly Gets or sets a value indicating whether non-HTTP APIs can access the cookie. Declaration public bool HttpOnly { get; set; } Property Value Type Description System.Boolean true if non-HTTP APIs cannot access the cookie; otherwise, false . The default value is false . Name Gets or sets the name of the cookie. Declaration public string Name { get; set; } Property Value Type Description System.String A System.String that represents the name of the cookie. The name must be a token defined in RFC 2616 . Exceptions Type Condition System.ArgumentNullException The value specified for a set operation is null . System.ArgumentException The value specified for a set operation is an empty string. - or - The value specified for a set operation starts with a dollar sign. - or - The value specified for a set operation contains an invalid character. Name Gets or sets the name of the cookie. Declaration public string Name { get; set; } Property Value Type Description System.String A System.String that represents the name of the cookie. The name must be a token defined in RFC 2616 . Exceptions Type Condition System.ArgumentNullException The value specified for a set operation is null . System.ArgumentException The value specified for a set operation is an empty string. - or - The value specified for a set operation starts with a dollar sign. - or - The value specified for a set operation contains an invalid character. Path Gets or sets the value of the Path attribute of the cookie. Declaration public string Path { get; set; } Property Value Type Description System.String A System.String that represents the subset of URI on the origin server that the cookie applies to. Path Gets or sets the value of the Path attribute of the cookie. Declaration public string Path { get; set; } Property Value Type Description System.String A System.String that represents the subset of URI on the origin server that the cookie applies to. Port Gets the value of the Port attribute of the cookie. Declaration public string Port { get; } Property Value Type Description System.String A System.String that represents the list of TCP ports that the cookie applies to. null if not present. The default value is null . Port Gets the value of the Port attribute of the cookie. Declaration public string Port { get; } Property Value Type Description System.String A System.String that represents the list of TCP ports that the cookie applies to. null if not present. The default value is null . Secure Gets or sets a value indicating whether the security level of the cookie is secure. Declaration public bool Secure { get; set; } Property Value Type Description System.Boolean true if the security level of the cookie is secure; otherwise, false . The default value is false . Remarks When this property is true , the cookie may be included in the request only if the request is transmitted over HTTPS. Secure Gets or sets a value indicating whether the security level of the cookie is secure. Declaration public bool Secure { get; set; } Property Value Type Description System.Boolean true if the security level of the cookie is secure; otherwise, false . The default value is false . Remarks When this property is true , the cookie may be included in the request only if the request is transmitted over HTTPS. TimeStamp Gets the time when the cookie was issued. Declaration public DateTime TimeStamp { get; } Property Value Type Description System.DateTime A System.DateTime that represents the time when the cookie was issued. TimeStamp Gets the time when the cookie was issued. Declaration public DateTime TimeStamp { get; } Property Value Type Description System.DateTime A System.DateTime that represents the time when the cookie was issued. Value Gets or sets the value of the cookie. Declaration public string Value { get; set; } Property Value Type Description System.String A System.String that represents the value of the cookie. Exceptions Type Condition System.ArgumentException The value specified for a set operation is a string not enclosed in double quotes that contains an invalid character. Value Gets or sets the value of the cookie. Declaration public string Value { get; set; } Property Value Type Description System.String A System.String that represents the value of the cookie. Exceptions Type Condition System.ArgumentException The value specified for a set operation is a string not enclosed in double quotes that contains an invalid character. Version Gets the value of the Version attribute of the cookie. Declaration public int Version { get; } Property Value Type Description System.Int32 An System.Int32 that represents the version of HTTP state management that the cookie conforms to. 0 or 1. 0 if not present. The default value is 0. Version Gets the value of the Version attribute of the cookie. Declaration public int Version { get; } Property Value Type Description System.Int32 An System.Int32 that represents the version of HTTP state management that the cookie conforms to. 0 or 1. 0 if not present. The default value is 0. Methods Equals(Object) Determines whether the current cookie instance is equal to the specified System.Object instance. Declaration public override bool Equals(object comparand) Parameters Type Name Description System.Object comparand An System.Object instance to compare with the current cookie instance. An reference to a Cookie instance. Returns Type Description System.Boolean true if the current cookie instance is equal to comparand ; otherwise, false . Overrides System.Object.Equals(System.Object) Equals(Object) Determines whether the current cookie instance is equal to the specified System.Object instance. Declaration public override bool Equals(object comparand) Parameters Type Name Description System.Object comparand An System.Object instance to compare with the current cookie instance. An reference to a Cookie instance. Returns Type Description System.Boolean true if the current cookie instance is equal to comparand ; otherwise, false . Overrides System.Object.Equals(System.Object) GetHashCode() Gets a hash code for the current cookie instance. Declaration public override int GetHashCode() Returns Type Description System.Int32 An System.Int32 that represents the hash code. Overrides System.Object.GetHashCode() GetHashCode() Gets a hash code for the current cookie instance. Declaration public override int GetHashCode() Returns Type Description System.Int32 An System.Int32 that represents the hash code. Overrides System.Object.GetHashCode() ToString() Returns a string that represents the current cookie instance. Declaration public override string ToString() Returns Type Description System.String A System.String that is suitable for the Cookie request header. Overrides System.Object.ToString() ToString() Returns a string that represents the current cookie instance. Declaration public override string ToString() Returns Type Description System.String A System.String that is suitable for the Cookie request header. Overrides System.Object.ToString()"
  },
  "api/WebSocketSharp.Net.CookieCollection.html": {
    "href": "api/WebSocketSharp.Net.CookieCollection.html",
    "title": "Class CookieCollection | Unity Algorand SDK",
    "keywords": "Class CookieCollection Provides a collection of instances of the Cookie class. Inheritance System.Object CookieCollection Implements ICollection < Cookie > Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public class CookieCollection : ICollection<Cookie> Constructors CookieCollection() Initializes a new instance of the CookieCollection class. Declaration public CookieCollection() CookieCollection() Initializes a new instance of the CookieCollection class. Declaration public CookieCollection() Properties Count Gets the number of cookies in the collection. Declaration public int Count { get; } Property Value Type Description System.Int32 An System.Int32 that represents the number of cookies in the collection. Count Gets the number of cookies in the collection. Declaration public int Count { get; } Property Value Type Description System.Int32 An System.Int32 that represents the number of cookies in the collection. IsReadOnly Gets a value indicating whether the collection is read-only. Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean true if the collection is read-only; otherwise, false . The default value is false . IsReadOnly Gets a value indicating whether the collection is read-only. Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean true if the collection is read-only; otherwise, false . The default value is false . IsSynchronized Gets a value indicating whether the access to the collection is thread safe. Declaration public bool IsSynchronized { get; } Property Value Type Description System.Boolean true if the access to the collection is thread safe; otherwise, false . The default value is false . IsSynchronized Gets a value indicating whether the access to the collection is thread safe. Declaration public bool IsSynchronized { get; } Property Value Type Description System.Boolean true if the access to the collection is thread safe; otherwise, false . The default value is false . Item[Int32] Gets the cookie at the specified index from the collection. Declaration public Cookie this[int index] { get; } Parameters Type Name Description System.Int32 index An System.Int32 that specifies the zero-based index of the cookie to find. Property Value Type Description Cookie A Cookie at the specified index in the collection. Exceptions Type Condition System.ArgumentOutOfRangeException index is out of allowable range for the collection. Item[Int32] Gets the cookie at the specified index from the collection. Declaration public Cookie this[int index] { get; } Parameters Type Name Description System.Int32 index An System.Int32 that specifies the zero-based index of the cookie to find. Property Value Type Description Cookie A Cookie at the specified index in the collection. Exceptions Type Condition System.ArgumentOutOfRangeException index is out of allowable range for the collection. Item[String] Gets the cookie with the specified name from the collection. Declaration public Cookie this[string name] { get; } Parameters Type Name Description System.String name A System.String that specifies the name of the cookie to find. Property Value Type Description Cookie A Cookie with the specified name in the collection. null if not found. Exceptions Type Condition System.ArgumentNullException name is null . Item[String] Gets the cookie with the specified name from the collection. Declaration public Cookie this[string name] { get; } Parameters Type Name Description System.String name A System.String that specifies the name of the cookie to find. Property Value Type Description Cookie A Cookie with the specified name in the collection. null if not found. Exceptions Type Condition System.ArgumentNullException name is null . SyncRoot Gets an object used to synchronize access to the collection. Declaration public object SyncRoot { get; } Property Value Type Description System.Object An System.Object used to synchronize access to the collection. SyncRoot Gets an object used to synchronize access to the collection. Declaration public object SyncRoot { get; } Property Value Type Description System.Object An System.Object used to synchronize access to the collection. Methods Add(Cookie) Adds the specified cookie to the collection. Declaration public void Add(Cookie cookie) Parameters Type Name Description Cookie cookie A Cookie to add. Exceptions Type Condition System.InvalidOperationException The collection is read-only. System.ArgumentNullException cookie is null . Add(Cookie) Adds the specified cookie to the collection. Declaration public void Add(Cookie cookie) Parameters Type Name Description Cookie cookie A Cookie to add. Exceptions Type Condition System.InvalidOperationException The collection is read-only. System.ArgumentNullException cookie is null . Add(CookieCollection) Adds the specified cookies to the collection. Declaration public void Add(CookieCollection cookies) Parameters Type Name Description CookieCollection cookies A CookieCollection that contains the cookies to add. Exceptions Type Condition System.InvalidOperationException The collection is read-only. System.ArgumentNullException cookies is null . Add(CookieCollection) Adds the specified cookies to the collection. Declaration public void Add(CookieCollection cookies) Parameters Type Name Description CookieCollection cookies A CookieCollection that contains the cookies to add. Exceptions Type Condition System.InvalidOperationException The collection is read-only. System.ArgumentNullException cookies is null . Clear() Removes all cookies from the collection. Declaration public void Clear() Exceptions Type Condition System.InvalidOperationException The collection is read-only. Clear() Removes all cookies from the collection. Declaration public void Clear() Exceptions Type Condition System.InvalidOperationException The collection is read-only. Contains(Cookie) Determines whether the collection contains the specified cookie. Declaration public bool Contains(Cookie cookie) Parameters Type Name Description Cookie cookie A Cookie to find. Returns Type Description System.Boolean true if the cookie is found in the collection; otherwise, false . Exceptions Type Condition System.ArgumentNullException cookie is null . Contains(Cookie) Determines whether the collection contains the specified cookie. Declaration public bool Contains(Cookie cookie) Parameters Type Name Description Cookie cookie A Cookie to find. Returns Type Description System.Boolean true if the cookie is found in the collection; otherwise, false . Exceptions Type Condition System.ArgumentNullException cookie is null . CopyTo(Cookie[], Int32) Copies the elements of the collection to the specified array, starting at the specified index. Declaration public void CopyTo(Cookie[] array, int index) Parameters Type Name Description Cookie [] array An array of Cookie that specifies the destination of the elements copied from the collection. System.Int32 index An System.Int32 that specifies the zero-based index in the array at which copying starts. Exceptions Type Condition System.ArgumentNullException array is null . System.ArgumentOutOfRangeException index is less than zero. System.ArgumentException The space from index to the end of array is not enough to copy to. CopyTo(Cookie[], Int32) Copies the elements of the collection to the specified array, starting at the specified index. Declaration public void CopyTo(Cookie[] array, int index) Parameters Type Name Description Cookie [] array An array of Cookie that specifies the destination of the elements copied from the collection. System.Int32 index An System.Int32 that specifies the zero-based index in the array at which copying starts. Exceptions Type Condition System.ArgumentNullException array is null . System.ArgumentOutOfRangeException index is less than zero. System.ArgumentException The space from index to the end of array is not enough to copy to. GetEnumerator() Gets the enumerator that iterates through the collection. Declaration public IEnumerator<Cookie> GetEnumerator() Returns Type Description IEnumerator < Cookie > An System.Collections.Generic.IEnumerator{Cookie} instance that can be used to iterate through the collection. GetEnumerator() Gets the enumerator that iterates through the collection. Declaration public IEnumerator<Cookie> GetEnumerator() Returns Type Description IEnumerator < Cookie > An System.Collections.Generic.IEnumerator{Cookie} instance that can be used to iterate through the collection. Remove(Cookie) Removes the specified cookie from the collection. Declaration public bool Remove(Cookie cookie) Parameters Type Name Description Cookie cookie A Cookie to remove. Returns Type Description System.Boolean true if the cookie is successfully removed; otherwise, false . false if the cookie is not found in the collection. Exceptions Type Condition System.InvalidOperationException The collection is read-only. System.ArgumentNullException cookie is null . Remove(Cookie) Removes the specified cookie from the collection. Declaration public bool Remove(Cookie cookie) Parameters Type Name Description Cookie cookie A Cookie to remove. Returns Type Description System.Boolean true if the cookie is successfully removed; otherwise, false . false if the cookie is not found in the collection. Exceptions Type Condition System.InvalidOperationException The collection is read-only. System.ArgumentNullException cookie is null . Implements ICollection<>"
  },
  "api/WebSocketSharp.Net.CookieException.html": {
    "href": "api/WebSocketSharp.Net.CookieException.html",
    "title": "Class CookieException | Unity Algorand SDK",
    "keywords": "Class CookieException The exception that is thrown when a Cookie gets an error. Inheritance System.Object System.Exception System.SystemException System.FormatException CookieException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public class CookieException : FormatException, ISerializable, _Exception Constructors CookieException() Initializes a new instance of the CookieException class. Declaration public CookieException() CookieException() Initializes a new instance of the CookieException class. Declaration public CookieException() CookieException(SerializationInfo, StreamingContext) Initializes a new instance of the CookieException class with the serialized data. Declaration protected CookieException(SerializationInfo serializationInfo, StreamingContext streamingContext) Parameters Type Name Description SerializationInfo serializationInfo A that holds the serialized object data. StreamingContext streamingContext A that specifies the source for the deserialization. Exceptions Type Condition System.ArgumentNullException serializationInfo is null . CookieException(SerializationInfo, StreamingContext) Initializes a new instance of the CookieException class with the serialized data. Declaration protected CookieException(SerializationInfo serializationInfo, StreamingContext streamingContext) Parameters Type Name Description SerializationInfo serializationInfo A that holds the serialized object data. StreamingContext streamingContext A that specifies the source for the deserialization. Exceptions Type Condition System.ArgumentNullException serializationInfo is null . Methods GetObjectData(SerializationInfo, StreamingContext) Populates the specified instance with the data needed to serialize the current instance. Declaration public override void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext) Parameters Type Name Description SerializationInfo serializationInfo A that holds the serialized object data. StreamingContext streamingContext A that specifies the destination for the serialization. Exceptions Type Condition System.ArgumentNullException serializationInfo is null . GetObjectData(SerializationInfo, StreamingContext) Populates the specified instance with the data needed to serialize the current instance. Declaration public override void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext) Parameters Type Name Description SerializationInfo serializationInfo A that holds the serialized object data. StreamingContext streamingContext A that specifies the destination for the serialization. Exceptions Type Condition System.ArgumentNullException serializationInfo is null . Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception ISerializable"
  },
  "api/WebSocketSharp.Net.html": {
    "href": "api/WebSocketSharp.Net.html",
    "title": "Namespace WebSocketSharp.Net | Unity Algorand SDK",
    "keywords": "Namespace WebSocketSharp.Net Classes ClientSslConfiguration Stores the parameters for the used by clients. Cookie Provides a set of methods and properties used to manage an HTTP cookie. CookieCollection Provides a collection of instances of the Cookie class. CookieException The exception that is thrown when a Cookie gets an error. HttpBasicIdentity Holds the username and password from an HTTP Basic authentication attempt. HttpDigestIdentity Holds the username and other parameters from an HTTP Digest authentication attempt. HttpListener Provides a simple, programmatically controlled HTTP listener. HttpListenerContext Provides the access to the HTTP request and response objects used by the HttpListener class. HttpListenerException The exception that is thrown when an error occurs processing an HTTP request. HttpListenerPrefixCollection Provides a collection used to store the URI prefixes for a instance of the HttpListener class. HttpListenerRequest Represents an incoming HTTP request to a HttpListener instance. HttpListenerResponse Represents an HTTP response to an HTTP request received by a HttpListener instance. HttpVersion Provides the HTTP version numbers. NetworkCredential Provides the credentials for the password-based authentication. ServerSslConfiguration Stores the parameters for the used by servers. WebHeaderCollection Provides a collection of the HTTP headers associated with a request or response. Enums AuthenticationSchemes Specifies the scheme for authentication. AuthenticationSchemes Specifies the scheme for authentication. HttpRequestHeader Indicates the HTTP header that may be specified in a client request. HttpRequestHeader Indicates the HTTP header that may be specified in a client request. HttpResponseHeader Indicates the HTTP header that can be specified in a server response. HttpResponseHeader Indicates the HTTP header that can be specified in a server response. HttpStatusCode Indicates the HTTP status code that can be specified in a server response. HttpStatusCode Indicates the HTTP status code that can be specified in a server response."
  },
  "api/WebSocketSharp.Net.HttpBasicIdentity.html": {
    "href": "api/WebSocketSharp.Net.HttpBasicIdentity.html",
    "title": "Class HttpBasicIdentity | Unity Algorand SDK",
    "keywords": "Class HttpBasicIdentity Holds the username and password from an HTTP Basic authentication attempt. Inheritance System.Object HttpBasicIdentity Implements GenericIdentity Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public class HttpBasicIdentity : GenericIdentity Properties Password Gets the password from a basic authentication attempt. Declaration public virtual string Password { get; } Property Value Type Description System.String A System.String that represents the password. Password Gets the password from a basic authentication attempt. Declaration public virtual string Password { get; } Property Value Type Description System.String A System.String that represents the password. Implements GenericIdentity"
  },
  "api/WebSocketSharp.Net.HttpDigestIdentity.html": {
    "href": "api/WebSocketSharp.Net.HttpDigestIdentity.html",
    "title": "Class HttpDigestIdentity | Unity Algorand SDK",
    "keywords": "Class HttpDigestIdentity Holds the username and other parameters from an HTTP Digest authentication attempt. Inheritance System.Object HttpDigestIdentity Implements GenericIdentity Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public class HttpDigestIdentity : GenericIdentity Properties Algorithm Gets the algorithm parameter from a digest authentication attempt. Declaration public string Algorithm { get; } Property Value Type Description System.String A System.String that represents the algorithm parameter. Algorithm Gets the algorithm parameter from a digest authentication attempt. Declaration public string Algorithm { get; } Property Value Type Description System.String A System.String that represents the algorithm parameter. Cnonce Gets the cnonce parameter from a digest authentication attempt. Declaration public string Cnonce { get; } Property Value Type Description System.String A System.String that represents the cnonce parameter. Cnonce Gets the cnonce parameter from a digest authentication attempt. Declaration public string Cnonce { get; } Property Value Type Description System.String A System.String that represents the cnonce parameter. Nc Gets the nc parameter from a digest authentication attempt. Declaration public string Nc { get; } Property Value Type Description System.String A System.String that represents the nc parameter. Nc Gets the nc parameter from a digest authentication attempt. Declaration public string Nc { get; } Property Value Type Description System.String A System.String that represents the nc parameter. Nonce Gets the nonce parameter from a digest authentication attempt. Declaration public string Nonce { get; } Property Value Type Description System.String A System.String that represents the nonce parameter. Nonce Gets the nonce parameter from a digest authentication attempt. Declaration public string Nonce { get; } Property Value Type Description System.String A System.String that represents the nonce parameter. Opaque Gets the opaque parameter from a digest authentication attempt. Declaration public string Opaque { get; } Property Value Type Description System.String A System.String that represents the opaque parameter. Opaque Gets the opaque parameter from a digest authentication attempt. Declaration public string Opaque { get; } Property Value Type Description System.String A System.String that represents the opaque parameter. Qop Gets the qop parameter from a digest authentication attempt. Declaration public string Qop { get; } Property Value Type Description System.String A System.String that represents the qop parameter. Qop Gets the qop parameter from a digest authentication attempt. Declaration public string Qop { get; } Property Value Type Description System.String A System.String that represents the qop parameter. Realm Gets the realm parameter from a digest authentication attempt. Declaration public string Realm { get; } Property Value Type Description System.String A System.String that represents the realm parameter. Realm Gets the realm parameter from a digest authentication attempt. Declaration public string Realm { get; } Property Value Type Description System.String A System.String that represents the realm parameter. Response Gets the response parameter from a digest authentication attempt. Declaration public string Response { get; } Property Value Type Description System.String A System.String that represents the response parameter. Response Gets the response parameter from a digest authentication attempt. Declaration public string Response { get; } Property Value Type Description System.String A System.String that represents the response parameter. Uri Gets the uri parameter from a digest authentication attempt. Declaration public string Uri { get; } Property Value Type Description System.String A System.String that represents the uri parameter. Uri Gets the uri parameter from a digest authentication attempt. Declaration public string Uri { get; } Property Value Type Description System.String A System.String that represents the uri parameter. Implements GenericIdentity"
  },
  "api/WebSocketSharp.Net.HttpListener.html": {
    "href": "api/WebSocketSharp.Net.HttpListener.html",
    "title": "Class HttpListener | Unity Algorand SDK",
    "keywords": "Class HttpListener Provides a simple, programmatically controlled HTTP listener. Inheritance System.Object HttpListener Implements System.IDisposable Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public sealed class HttpListener : IDisposable Constructors HttpListener() Initializes a new instance of the HttpListener class. Declaration public HttpListener() HttpListener() Initializes a new instance of the HttpListener class. Declaration public HttpListener() Properties AuthenticationSchemes Gets or sets the scheme used to authenticate the clients. Declaration public AuthenticationSchemes AuthenticationSchemes { get; set; } Property Value Type Description AuthenticationSchemes One of the AuthenticationSchemes enum values. It represents the scheme used to authenticate the clients. The default value is . Exceptions Type Condition System.ObjectDisposedException This listener has been closed. AuthenticationSchemes Gets or sets the scheme used to authenticate the clients. Declaration public AuthenticationSchemes AuthenticationSchemes { get; set; } Property Value Type Description AuthenticationSchemes One of the AuthenticationSchemes enum values. It represents the scheme used to authenticate the clients. The default value is . Exceptions Type Condition System.ObjectDisposedException This listener has been closed. AuthenticationSchemeSelector Gets or sets the delegate called to select the scheme used to authenticate the clients. Declaration public Func<HttpListenerRequest, AuthenticationSchemes> AuthenticationSchemeSelector { get; set; } Property Value Type Description System.Func < HttpListenerRequest , AuthenticationSchemes > A Func< HttpListenerRequest , AuthenticationSchemes > delegate or null if not needed. The delegate references the method used to select an authentication scheme. The default value is null . Remarks If this property is set, the listener uses the authentication scheme selected by the delegate for each request. Or if this property is not set, the listener uses the value of the AuthenticationSchemes property as the authentication scheme for all requests. Exceptions Type Condition System.ObjectDisposedException This listener has been closed. AuthenticationSchemeSelector Gets or sets the delegate called to select the scheme used to authenticate the clients. Declaration public Func<HttpListenerRequest, AuthenticationSchemes> AuthenticationSchemeSelector { get; set; } Property Value Type Description System.Func < HttpListenerRequest , AuthenticationSchemes > A Func< HttpListenerRequest , AuthenticationSchemes > delegate or null if not needed. The delegate references the method used to select an authentication scheme. The default value is null . Remarks If this property is set, the listener uses the authentication scheme selected by the delegate for each request. Or if this property is not set, the listener uses the value of the AuthenticationSchemes property as the authentication scheme for all requests. Exceptions Type Condition System.ObjectDisposedException This listener has been closed. CertificateFolderPath Gets or sets the path to the folder in which stores the certificate files used to authenticate the server on the secure connection. Declaration public string CertificateFolderPath { get; set; } Property Value Type Description System.String A System.String that represents the path to the folder in which stores the certificate files. The default value is null . Remarks This property represents the path to the folder in which stores the certificate files associated with each port number of added URI prefixes. A set of the certificate files is a pair of <port number>.cer (DER) and <port number>.key (DER, RSA Private Key). If this property is null or an empty string, the result of System.Environment.GetFolderPath ( System.Environment.SpecialFolder.ApplicationData ) is used as the default path. Exceptions Type Condition System.ObjectDisposedException This listener has been closed. CertificateFolderPath Gets or sets the path to the folder in which stores the certificate files used to authenticate the server on the secure connection. Declaration public string CertificateFolderPath { get; set; } Property Value Type Description System.String A System.String that represents the path to the folder in which stores the certificate files. The default value is null . Remarks This property represents the path to the folder in which stores the certificate files associated with each port number of added URI prefixes. A set of the certificate files is a pair of <port number>.cer (DER) and <port number>.key (DER, RSA Private Key). If this property is null or an empty string, the result of System.Environment.GetFolderPath ( System.Environment.SpecialFolder.ApplicationData ) is used as the default path. Exceptions Type Condition System.ObjectDisposedException This listener has been closed. IgnoreWriteExceptions Gets or sets a value indicating whether the listener returns exceptions that occur when sending the response to the client. Declaration public bool IgnoreWriteExceptions { get; set; } Property Value Type Description System.Boolean true if the listener should not return those exceptions; otherwise, false . The default value is false . Exceptions Type Condition System.ObjectDisposedException This listener has been closed. IgnoreWriteExceptions Gets or sets a value indicating whether the listener returns exceptions that occur when sending the response to the client. Declaration public bool IgnoreWriteExceptions { get; set; } Property Value Type Description System.Boolean true if the listener should not return those exceptions; otherwise, false . The default value is false . Exceptions Type Condition System.ObjectDisposedException This listener has been closed. IsListening Gets a value indicating whether the listener has been started. Declaration public bool IsListening { get; } Property Value Type Description System.Boolean true if the listener has been started; otherwise, false . IsListening Gets a value indicating whether the listener has been started. Declaration public bool IsListening { get; } Property Value Type Description System.Boolean true if the listener has been started; otherwise, false . IsSupported Gets a value indicating whether the listener can be used with the current operating system. Declaration public static bool IsSupported { get; } Property Value Type Description System.Boolean true . IsSupported Gets a value indicating whether the listener can be used with the current operating system. Declaration public static bool IsSupported { get; } Property Value Type Description System.Boolean true . Log Gets the logging functions. Declaration public Logger Log { get; } Property Value Type Description Logger A Logger that provides the logging functions. Remarks The default logging level is . If you would like to change it, you should set the Log.Level property to any of the LogLevel enum values. Log Gets the logging functions. Declaration public Logger Log { get; } Property Value Type Description Logger A Logger that provides the logging functions. Remarks The default logging level is . If you would like to change it, you should set the Log.Level property to any of the LogLevel enum values. Prefixes Gets the URI prefixes handled by the listener. Declaration public HttpListenerPrefixCollection Prefixes { get; } Property Value Type Description HttpListenerPrefixCollection A HttpListenerPrefixCollection that contains the URI prefixes. Exceptions Type Condition System.ObjectDisposedException This listener has been closed. Prefixes Gets the URI prefixes handled by the listener. Declaration public HttpListenerPrefixCollection Prefixes { get; } Property Value Type Description HttpListenerPrefixCollection A HttpListenerPrefixCollection that contains the URI prefixes. Exceptions Type Condition System.ObjectDisposedException This listener has been closed. Realm Gets or sets the name of the realm associated with the listener. Declaration public string Realm { get; set; } Property Value Type Description System.String A System.String that represents the name of the realm. The default value is null . Remarks If this property is null or an empty string, \"SECRET AREA\" will be used as the name of the realm. Exceptions Type Condition System.ObjectDisposedException This listener has been closed. Realm Gets or sets the name of the realm associated with the listener. Declaration public string Realm { get; set; } Property Value Type Description System.String A System.String that represents the name of the realm. The default value is null . Remarks If this property is null or an empty string, \"SECRET AREA\" will be used as the name of the realm. Exceptions Type Condition System.ObjectDisposedException This listener has been closed. SslConfiguration Gets the SSL configuration used to authenticate the server and optionally the client for secure connection. Declaration public ServerSslConfiguration SslConfiguration { get; } Property Value Type Description ServerSslConfiguration A ServerSslConfiguration that represents the SSL configuration for secure connection. Exceptions Type Condition System.ObjectDisposedException This listener has been closed. SslConfiguration Gets the SSL configuration used to authenticate the server and optionally the client for secure connection. Declaration public ServerSslConfiguration SslConfiguration { get; } Property Value Type Description ServerSslConfiguration A ServerSslConfiguration that represents the SSL configuration for secure connection. Exceptions Type Condition System.ObjectDisposedException This listener has been closed. UnsafeConnectionNtlmAuthentication Gets or sets a value indicating whether, when NTLM authentication is used, the authentication information of first request is used to authenticate additional requests on the same connection. Declaration public bool UnsafeConnectionNtlmAuthentication { get; set; } Property Value Type Description System.Boolean true if the authentication information of first request is used; otherwise, false . Remarks This property is not currently supported and always throws a System.NotSupportedException . Exceptions Type Condition System.NotSupportedException Any use of this property. UnsafeConnectionNtlmAuthentication Gets or sets a value indicating whether, when NTLM authentication is used, the authentication information of first request is used to authenticate additional requests on the same connection. Declaration public bool UnsafeConnectionNtlmAuthentication { get; set; } Property Value Type Description System.Boolean true if the authentication information of first request is used; otherwise, false . Remarks This property is not currently supported and always throws a System.NotSupportedException . Exceptions Type Condition System.NotSupportedException Any use of this property. UserCredentialsFinder Gets or sets the delegate called to find the credentials for an identity used to authenticate a client. Declaration public Func<IIdentity, NetworkCredential> UserCredentialsFinder { get; set; } Property Value Type Description System.Func < IIdentity , NetworkCredential > A Func< , NetworkCredential > delegate or null if not needed. It references the method used to find the credentials. The default value is null . Exceptions Type Condition System.ObjectDisposedException This listener has been closed. UserCredentialsFinder Gets or sets the delegate called to find the credentials for an identity used to authenticate a client. Declaration public Func<IIdentity, NetworkCredential> UserCredentialsFinder { get; set; } Property Value Type Description System.Func < IIdentity , NetworkCredential > A Func< , NetworkCredential > delegate or null if not needed. It references the method used to find the credentials. The default value is null . Exceptions Type Condition System.ObjectDisposedException This listener has been closed. Methods Abort() Shuts down the listener immediately. Declaration public void Abort() Abort() Shuts down the listener immediately. Declaration public void Abort() BeginGetContext(AsyncCallback, Object) Begins getting an incoming request asynchronously. Declaration public IAsyncResult BeginGetContext(AsyncCallback callback, object state) Parameters Type Name Description System.AsyncCallback callback An System.AsyncCallback delegate that references the method to invoke when the asynchronous operation completes. System.Object state An System.Object that represents a user defined object to pass to callback . Returns Type Description System.IAsyncResult An System.IAsyncResult that represents the status of the asynchronous operation. Remarks This asynchronous operation must be completed by calling the EndGetContext method. Typically, the EndGetContext method is called by callback . Exceptions Type Condition System.InvalidOperationException This listener has no URI prefix on which listens. -or- This listener has not been started or is currently stopped. HttpListenerException This method is canceled. System.ObjectDisposedException This listener has been closed. BeginGetContext(AsyncCallback, Object) Begins getting an incoming request asynchronously. Declaration public IAsyncResult BeginGetContext(AsyncCallback callback, object state) Parameters Type Name Description System.AsyncCallback callback An System.AsyncCallback delegate that references the method to invoke when the asynchronous operation completes. System.Object state An System.Object that represents a user defined object to pass to callback . Returns Type Description System.IAsyncResult An System.IAsyncResult that represents the status of the asynchronous operation. Remarks This asynchronous operation must be completed by calling the EndGetContext method. Typically, the EndGetContext method is called by callback . Exceptions Type Condition System.InvalidOperationException This listener has no URI prefix on which listens. -or- This listener has not been started or is currently stopped. HttpListenerException This method is canceled. System.ObjectDisposedException This listener has been closed. Close() Shuts down the listener. Declaration public void Close() Close() Shuts down the listener. Declaration public void Close() EndGetContext(IAsyncResult) Ends an asynchronous operation to get an incoming request. Declaration public HttpListenerContext EndGetContext(IAsyncResult asyncResult) Parameters Type Name Description System.IAsyncResult asyncResult An System.IAsyncResult instance obtained by calling the BeginGetContext method. Returns Type Description HttpListenerContext A HttpListenerContext that represents a request. Remarks This method completes an asynchronous operation started by calling the BeginGetContext method. Exceptions Type Condition System.ArgumentNullException asyncResult is null . System.ArgumentException asyncResult was not obtained by calling the BeginGetContext method. System.InvalidOperationException This method was already called for asyncResult . HttpListenerException This method is canceled. System.ObjectDisposedException This listener has been closed. EndGetContext(IAsyncResult) Ends an asynchronous operation to get an incoming request. Declaration public HttpListenerContext EndGetContext(IAsyncResult asyncResult) Parameters Type Name Description System.IAsyncResult asyncResult An System.IAsyncResult instance obtained by calling the BeginGetContext method. Returns Type Description HttpListenerContext A HttpListenerContext that represents a request. Remarks This method completes an asynchronous operation started by calling the BeginGetContext method. Exceptions Type Condition System.ArgumentNullException asyncResult is null . System.ArgumentException asyncResult was not obtained by calling the BeginGetContext method. System.InvalidOperationException This method was already called for asyncResult . HttpListenerException This method is canceled. System.ObjectDisposedException This listener has been closed. GetContext() Gets an incoming request. Declaration public HttpListenerContext GetContext() Returns Type Description HttpListenerContext A HttpListenerContext that represents a request. Remarks This method waits for an incoming request and returns when a request is received. Exceptions Type Condition System.InvalidOperationException This listener has no URI prefix on which listens. -or- This listener has not been started or is currently stopped. HttpListenerException This method is canceled. System.ObjectDisposedException This listener has been closed. GetContext() Gets an incoming request. Declaration public HttpListenerContext GetContext() Returns Type Description HttpListenerContext A HttpListenerContext that represents a request. Remarks This method waits for an incoming request and returns when a request is received. Exceptions Type Condition System.InvalidOperationException This listener has no URI prefix on which listens. -or- This listener has not been started or is currently stopped. HttpListenerException This method is canceled. System.ObjectDisposedException This listener has been closed. Start() Starts receiving incoming requests. Declaration public void Start() Exceptions Type Condition System.ObjectDisposedException This listener has been closed. Start() Starts receiving incoming requests. Declaration public void Start() Exceptions Type Condition System.ObjectDisposedException This listener has been closed. Stop() Stops receiving incoming requests. Declaration public void Stop() Exceptions Type Condition System.ObjectDisposedException This listener has been closed. Stop() Stops receiving incoming requests. Declaration public void Stop() Exceptions Type Condition System.ObjectDisposedException This listener has been closed. Explicit Interface Implementations IDisposable.Dispose() Releases all resources used by the listener. Declaration void IDisposable.Dispose() IDisposable.Dispose() Releases all resources used by the listener. Declaration void IDisposable.Dispose() Implements System.IDisposable"
  },
  "api/WebSocketSharp.Net.HttpListenerContext.html": {
    "href": "api/WebSocketSharp.Net.HttpListenerContext.html",
    "title": "Class HttpListenerContext | Unity Algorand SDK",
    "keywords": "Class HttpListenerContext Provides the access to the HTTP request and response objects used by the HttpListener class. Inheritance System.Object HttpListenerContext Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public sealed class HttpListenerContext Remarks This class cannot be inherited. Properties Request Gets the HTTP request object that represents a client request. Declaration public HttpListenerRequest Request { get; } Property Value Type Description HttpListenerRequest A HttpListenerRequest that represents the client request. Request Gets the HTTP request object that represents a client request. Declaration public HttpListenerRequest Request { get; } Property Value Type Description HttpListenerRequest A HttpListenerRequest that represents the client request. Response Gets the HTTP response object used to send a response to the client. Declaration public HttpListenerResponse Response { get; } Property Value Type Description HttpListenerResponse A HttpListenerResponse that represents a response to the client request. Response Gets the HTTP response object used to send a response to the client. Declaration public HttpListenerResponse Response { get; } Property Value Type Description HttpListenerResponse A HttpListenerResponse that represents a response to the client request. User Gets the client information (identity, authentication, and security roles). Declaration public IPrincipal User { get; } Property Value Type Description IPrincipal A instance or null if not authenticated. The instance describes the client. User Gets the client information (identity, authentication, and security roles). Declaration public IPrincipal User { get; } Property Value Type Description IPrincipal A instance or null if not authenticated. The instance describes the client. Methods AcceptWebSocket(String) Accepts a WebSocket handshake request. Declaration public HttpListenerWebSocketContext AcceptWebSocket(string protocol) Parameters Type Name Description System.String protocol A System.String that specifies the subprotocol supported on the WebSocket connection. Returns Type Description HttpListenerWebSocketContext A that represents the WebSocket handshake request. Exceptions Type Condition System.ArgumentException protocol is empty. -or- protocol contains an invalid character. System.InvalidOperationException This method has already been called. AcceptWebSocket(String) Accepts a WebSocket handshake request. Declaration public HttpListenerWebSocketContext AcceptWebSocket(string protocol) Parameters Type Name Description System.String protocol A System.String that specifies the subprotocol supported on the WebSocket connection. Returns Type Description HttpListenerWebSocketContext A that represents the WebSocket handshake request. Exceptions Type Condition System.ArgumentException protocol is empty. -or- protocol contains an invalid character. System.InvalidOperationException This method has already been called."
  },
  "api/WebSocketSharp.Net.HttpListenerException.html": {
    "href": "api/WebSocketSharp.Net.HttpListenerException.html",
    "title": "Class HttpListenerException | Unity Algorand SDK",
    "keywords": "Class HttpListenerException The exception that is thrown when an error occurs processing an HTTP request. Inheritance System.Object HttpListenerException Implements Win32Exception Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public class HttpListenerException : Win32Exception Constructors HttpListenerException() Initializes a new instance of the HttpListenerException class. Declaration public HttpListenerException() HttpListenerException() Initializes a new instance of the HttpListenerException class. Declaration public HttpListenerException() HttpListenerException(SerializationInfo, StreamingContext) Initializes a new instance of the HttpListenerException class from the specified instances of the and classes. Declaration protected HttpListenerException(SerializationInfo serializationInfo, StreamingContext streamingContext) Parameters Type Name Description SerializationInfo serializationInfo A that contains the serialized object data. StreamingContext streamingContext A that specifies the source for the deserialization. HttpListenerException(SerializationInfo, StreamingContext) Initializes a new instance of the HttpListenerException class from the specified instances of the and classes. Declaration protected HttpListenerException(SerializationInfo serializationInfo, StreamingContext streamingContext) Parameters Type Name Description SerializationInfo serializationInfo A that contains the serialized object data. StreamingContext streamingContext A that specifies the source for the deserialization. HttpListenerException(Int32) Initializes a new instance of the HttpListenerException class with the specified error code. Declaration public HttpListenerException(int errorCode) Parameters Type Name Description System.Int32 errorCode An System.Int32 that specifies the error code. HttpListenerException(Int32) Initializes a new instance of the HttpListenerException class with the specified error code. Declaration public HttpListenerException(int errorCode) Parameters Type Name Description System.Int32 errorCode An System.Int32 that specifies the error code. HttpListenerException(Int32, String) Initializes a new instance of the HttpListenerException class with the specified error code and message. Declaration public HttpListenerException(int errorCode, string message) Parameters Type Name Description System.Int32 errorCode An System.Int32 that specifies the error code. System.String message A System.String that specifies the message. HttpListenerException(Int32, String) Initializes a new instance of the HttpListenerException class with the specified error code and message. Declaration public HttpListenerException(int errorCode, string message) Parameters Type Name Description System.Int32 errorCode An System.Int32 that specifies the error code. System.String message A System.String that specifies the message. Properties ErrorCode Gets the error code that identifies the error that occurred. Declaration public override int ErrorCode { get; } Property Value Type Description System.Int32 An System.Int32 that represents the error code. It is any of the Win32 error codes. ErrorCode Gets the error code that identifies the error that occurred. Declaration public override int ErrorCode { get; } Property Value Type Description System.Int32 An System.Int32 that represents the error code. It is any of the Win32 error codes. Implements Win32Exception"
  },
  "api/WebSocketSharp.Net.HttpListenerPrefixCollection.html": {
    "href": "api/WebSocketSharp.Net.HttpListenerPrefixCollection.html",
    "title": "Class HttpListenerPrefixCollection | Unity Algorand SDK",
    "keywords": "Class HttpListenerPrefixCollection Provides a collection used to store the URI prefixes for a instance of the HttpListener class. Inheritance System.Object HttpListenerPrefixCollection Implements ICollection < System.String > Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public class HttpListenerPrefixCollection : ICollection<string> Remarks The HttpListener instance responds to the request which has a requested URI that the prefixes most closely match. Properties Count Gets the number of prefixes in the collection. Declaration public int Count { get; } Property Value Type Description System.Int32 An System.Int32 that represents the number of prefixes. Count Gets the number of prefixes in the collection. Declaration public int Count { get; } Property Value Type Description System.Int32 An System.Int32 that represents the number of prefixes. IsReadOnly Gets a value indicating whether the access to the collection is read-only. Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean Always returns false . IsReadOnly Gets a value indicating whether the access to the collection is read-only. Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean Always returns false . IsSynchronized Gets a value indicating whether the access to the collection is synchronized. Declaration public bool IsSynchronized { get; } Property Value Type Description System.Boolean Always returns false . IsSynchronized Gets a value indicating whether the access to the collection is synchronized. Declaration public bool IsSynchronized { get; } Property Value Type Description System.Boolean Always returns false . Methods Add(String) Adds the specified URI prefix to the collection. Declaration public void Add(string uriPrefix) Parameters Type Name Description System.String uriPrefix A System.String that specifies the URI prefix to add. It must be a well-formed URI prefix with http or https scheme, and must end with a '/'. Exceptions Type Condition System.ArgumentNullException uriPrefix is null . System.ArgumentException uriPrefix is invalid. System.ObjectDisposedException The HttpListener instance associated with this collection is closed. Add(String) Adds the specified URI prefix to the collection. Declaration public void Add(string uriPrefix) Parameters Type Name Description System.String uriPrefix A System.String that specifies the URI prefix to add. It must be a well-formed URI prefix with http or https scheme, and must end with a '/'. Exceptions Type Condition System.ArgumentNullException uriPrefix is null . System.ArgumentException uriPrefix is invalid. System.ObjectDisposedException The HttpListener instance associated with this collection is closed. Clear() Removes all URI prefixes from the collection. Declaration public void Clear() Exceptions Type Condition System.ObjectDisposedException The HttpListener instance associated with this collection is closed. Clear() Removes all URI prefixes from the collection. Declaration public void Clear() Exceptions Type Condition System.ObjectDisposedException The HttpListener instance associated with this collection is closed. Contains(String) Returns a value indicating whether the collection contains the specified URI prefix. Declaration public bool Contains(string uriPrefix) Parameters Type Name Description System.String uriPrefix A System.String that specifies the URI prefix to test. Returns Type Description System.Boolean true if the collection contains the URI prefix; otherwise, false . Exceptions Type Condition System.ArgumentNullException uriPrefix is null . System.ObjectDisposedException The HttpListener instance associated with this collection is closed. Contains(String) Returns a value indicating whether the collection contains the specified URI prefix. Declaration public bool Contains(string uriPrefix) Parameters Type Name Description System.String uriPrefix A System.String that specifies the URI prefix to test. Returns Type Description System.Boolean true if the collection contains the URI prefix; otherwise, false . Exceptions Type Condition System.ArgumentNullException uriPrefix is null . System.ObjectDisposedException The HttpListener instance associated with this collection is closed. CopyTo(String[], Int32) Copies the contents of the collection to the specified array of string. Declaration public void CopyTo(string[] array, int offset) Parameters Type Name Description System.String [] array An array of System.String that specifies the destination of the URI prefix strings copied from the collection. System.Int32 offset An System.Int32 that specifies the zero-based index in the array at which copying begins. Exceptions Type Condition System.ArgumentNullException array is null . System.ArgumentOutOfRangeException offset is less than zero. System.ArgumentException The space from offset to the end of array is not enough to copy to. System.ObjectDisposedException The HttpListener instance associated with this collection is closed. CopyTo(String[], Int32) Copies the contents of the collection to the specified array of string. Declaration public void CopyTo(string[] array, int offset) Parameters Type Name Description System.String [] array An array of System.String that specifies the destination of the URI prefix strings copied from the collection. System.Int32 offset An System.Int32 that specifies the zero-based index in the array at which copying begins. Exceptions Type Condition System.ArgumentNullException array is null . System.ArgumentOutOfRangeException offset is less than zero. System.ArgumentException The space from offset to the end of array is not enough to copy to. System.ObjectDisposedException The HttpListener instance associated with this collection is closed. GetEnumerator() Gets the enumerator that iterates through the collection. Declaration public IEnumerator<string> GetEnumerator() Returns Type Description IEnumerator < System.String > An System.Collections.Generic.IEnumerator{string} instance that can be used to iterate through the collection. GetEnumerator() Gets the enumerator that iterates through the collection. Declaration public IEnumerator<string> GetEnumerator() Returns Type Description IEnumerator < System.String > An System.Collections.Generic.IEnumerator{string} instance that can be used to iterate through the collection. Remove(String) Removes the specified URI prefix from the collection. Declaration public bool Remove(string uriPrefix) Parameters Type Name Description System.String uriPrefix A System.String that specifies the URI prefix to remove. Returns Type Description System.Boolean true if the URI prefix is successfully removed; otherwise, false . Exceptions Type Condition System.ArgumentNullException uriPrefix is null . System.ObjectDisposedException The HttpListener instance associated with this collection is closed. Remove(String) Removes the specified URI prefix from the collection. Declaration public bool Remove(string uriPrefix) Parameters Type Name Description System.String uriPrefix A System.String that specifies the URI prefix to remove. Returns Type Description System.Boolean true if the URI prefix is successfully removed; otherwise, false . Exceptions Type Condition System.ArgumentNullException uriPrefix is null . System.ObjectDisposedException The HttpListener instance associated with this collection is closed. Implements ICollection<>"
  },
  "api/WebSocketSharp.Net.HttpListenerRequest.html": {
    "href": "api/WebSocketSharp.Net.HttpListenerRequest.html",
    "title": "Class HttpListenerRequest | Unity Algorand SDK",
    "keywords": "Class HttpListenerRequest Represents an incoming HTTP request to a HttpListener instance. Inheritance System.Object HttpListenerRequest Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public sealed class HttpListenerRequest Remarks This class cannot be inherited. Properties AcceptTypes Gets the media types that are acceptable for the client. Declaration public string[] AcceptTypes { get; } Property Value Type Description System.String [] An array of System.String that contains the names of the media types specified in the value of the Accept header. null if the header is not present. AcceptTypes Gets the media types that are acceptable for the client. Declaration public string[] AcceptTypes { get; } Property Value Type Description System.String [] An array of System.String that contains the names of the media types specified in the value of the Accept header. null if the header is not present. ClientCertificateError Gets an error code that identifies a problem with the certificate provided by the client. Declaration public int ClientCertificateError { get; } Property Value Type Description System.Int32 An System.Int32 that represents an error code. Exceptions Type Condition System.NotSupportedException This property is not supported. ClientCertificateError Gets an error code that identifies a problem with the certificate provided by the client. Declaration public int ClientCertificateError { get; } Property Value Type Description System.Int32 An System.Int32 that represents an error code. Exceptions Type Condition System.NotSupportedException This property is not supported. ContentEncoding Gets the encoding for the entity body data included in the request. Declaration public Encoding ContentEncoding { get; } Property Value Type Description Encoding A converted from the charset value of the Content-Type header. if the charset value is not available. ContentEncoding Gets the encoding for the entity body data included in the request. Declaration public Encoding ContentEncoding { get; } Property Value Type Description Encoding A converted from the charset value of the Content-Type header. if the charset value is not available. ContentLength64 Gets the length in bytes of the entity body data included in the request. Declaration public long ContentLength64 { get; } Property Value Type Description System.Int64 A System.Int64 converted from the value of the Content-Length header. -1 if the header is not present. ContentLength64 Gets the length in bytes of the entity body data included in the request. Declaration public long ContentLength64 { get; } Property Value Type Description System.Int64 A System.Int64 converted from the value of the Content-Length header. -1 if the header is not present. ContentType Gets the media type of the entity body data included in the request. Declaration public string ContentType { get; } Property Value Type Description System.String A System.String that represents the value of the Content-Type header. null if the header is not present. ContentType Gets the media type of the entity body data included in the request. Declaration public string ContentType { get; } Property Value Type Description System.String A System.String that represents the value of the Content-Type header. null if the header is not present. Cookies Gets the cookies included in the request. Declaration public CookieCollection Cookies { get; } Property Value Type Description CookieCollection A CookieCollection that contains the cookies. An empty collection if not included. Cookies Gets the cookies included in the request. Declaration public CookieCollection Cookies { get; } Property Value Type Description CookieCollection A CookieCollection that contains the cookies. An empty collection if not included. HasEntityBody Gets a value indicating whether the request has the entity body data. Declaration public bool HasEntityBody { get; } Property Value Type Description System.Boolean true if the request has the entity body data; otherwise, false . HasEntityBody Gets a value indicating whether the request has the entity body data. Declaration public bool HasEntityBody { get; } Property Value Type Description System.Boolean true if the request has the entity body data; otherwise, false . Headers Gets the headers included in the request. Declaration public NameValueCollection Headers { get; } Property Value Type Description NameValueCollection A that contains the headers. Headers Gets the headers included in the request. Declaration public NameValueCollection Headers { get; } Property Value Type Description NameValueCollection A that contains the headers. HttpMethod Gets the HTTP method specified by the client. Declaration public string HttpMethod { get; } Property Value Type Description System.String A System.String that represents the HTTP method specified in the request line. HttpMethod Gets the HTTP method specified by the client. Declaration public string HttpMethod { get; } Property Value Type Description System.String A System.String that represents the HTTP method specified in the request line. InputStream Gets a stream that contains the entity body data included in the request. Declaration public Stream InputStream { get; } Property Value Type Description Stream A that contains the entity body data. if the entity body data is not available. InputStream Gets a stream that contains the entity body data included in the request. Declaration public Stream InputStream { get; } Property Value Type Description Stream A that contains the entity body data. if the entity body data is not available. IsAuthenticated Gets a value indicating whether the client is authenticated. Declaration public bool IsAuthenticated { get; } Property Value Type Description System.Boolean true if the client is authenticated; otherwise, false . IsAuthenticated Gets a value indicating whether the client is authenticated. Declaration public bool IsAuthenticated { get; } Property Value Type Description System.Boolean true if the client is authenticated; otherwise, false . IsLocal Gets a value indicating whether the request is sent from the local computer. Declaration public bool IsLocal { get; } Property Value Type Description System.Boolean true if the request is sent from the same computer as the server; otherwise, false . IsLocal Gets a value indicating whether the request is sent from the local computer. Declaration public bool IsLocal { get; } Property Value Type Description System.Boolean true if the request is sent from the same computer as the server; otherwise, false . IsSecureConnection Gets a value indicating whether a secure connection is used to send the request. Declaration public bool IsSecureConnection { get; } Property Value Type Description System.Boolean true if the connection is secure; otherwise, false . IsSecureConnection Gets a value indicating whether a secure connection is used to send the request. Declaration public bool IsSecureConnection { get; } Property Value Type Description System.Boolean true if the connection is secure; otherwise, false . IsWebSocketRequest Gets a value indicating whether the request is a WebSocket handshake request. Declaration public bool IsWebSocketRequest { get; } Property Value Type Description System.Boolean true if the request is a WebSocket handshake request; otherwise, false . IsWebSocketRequest Gets a value indicating whether the request is a WebSocket handshake request. Declaration public bool IsWebSocketRequest { get; } Property Value Type Description System.Boolean true if the request is a WebSocket handshake request; otherwise, false . KeepAlive Gets a value indicating whether a persistent connection is requested. Declaration public bool KeepAlive { get; } Property Value Type Description System.Boolean true if the request specifies that the connection is kept open; otherwise, false . KeepAlive Gets a value indicating whether a persistent connection is requested. Declaration public bool KeepAlive { get; } Property Value Type Description System.Boolean true if the request specifies that the connection is kept open; otherwise, false . LocalEndPoint Gets the endpoint to which the request is sent. Declaration public IPEndPoint LocalEndPoint { get; } Property Value Type Description System.Net.IPEndPoint A System.Net.IPEndPoint that represents the server IP address and port number. LocalEndPoint Gets the endpoint to which the request is sent. Declaration public IPEndPoint LocalEndPoint { get; } Property Value Type Description System.Net.IPEndPoint A System.Net.IPEndPoint that represents the server IP address and port number. ProtocolVersion Gets the HTTP version specified by the client. Declaration public Version ProtocolVersion { get; } Property Value Type Description System.Version A System.Version that represents the HTTP version specified in the request line. ProtocolVersion Gets the HTTP version specified by the client. Declaration public Version ProtocolVersion { get; } Property Value Type Description System.Version A System.Version that represents the HTTP version specified in the request line. QueryString Gets the query string included in the request. Declaration public NameValueCollection QueryString { get; } Property Value Type Description NameValueCollection A that contains the query parameters. An empty collection if not included. QueryString Gets the query string included in the request. Declaration public NameValueCollection QueryString { get; } Property Value Type Description NameValueCollection A that contains the query parameters. An empty collection if not included. RawUrl Gets the raw URL specified by the client. Declaration public string RawUrl { get; } Property Value Type Description System.String A System.String that represents the request target specified in the request line. RawUrl Gets the raw URL specified by the client. Declaration public string RawUrl { get; } Property Value Type Description System.String A System.String that represents the request target specified in the request line. RemoteEndPoint Gets the endpoint from which the request is sent. Declaration public IPEndPoint RemoteEndPoint { get; } Property Value Type Description System.Net.IPEndPoint A System.Net.IPEndPoint that represents the client IP address and port number. RemoteEndPoint Gets the endpoint from which the request is sent. Declaration public IPEndPoint RemoteEndPoint { get; } Property Value Type Description System.Net.IPEndPoint A System.Net.IPEndPoint that represents the client IP address and port number. RequestTraceIdentifier Gets the trace identifier of the request. Declaration public Guid RequestTraceIdentifier { get; } Property Value Type Description System.Guid A System.Guid that represents the trace identifier. RequestTraceIdentifier Gets the trace identifier of the request. Declaration public Guid RequestTraceIdentifier { get; } Property Value Type Description System.Guid A System.Guid that represents the trace identifier. Url Gets the URL requested by the client. Declaration public Uri Url { get; } Property Value Type Description System.Uri A System.Uri that represents the URL parsed from the request. null if the URL cannot be parsed. Url Gets the URL requested by the client. Declaration public Uri Url { get; } Property Value Type Description System.Uri A System.Uri that represents the URL parsed from the request. null if the URL cannot be parsed. UrlReferrer Gets the URI of the resource from which the requested URL was obtained. Declaration public Uri UrlReferrer { get; } Property Value Type Description System.Uri A System.Uri converted from the value of the Referer header. null if the header value is not available. UrlReferrer Gets the URI of the resource from which the requested URL was obtained. Declaration public Uri UrlReferrer { get; } Property Value Type Description System.Uri A System.Uri converted from the value of the Referer header. null if the header value is not available. UserAgent Gets the user agent from which the request is originated. Declaration public string UserAgent { get; } Property Value Type Description System.String A System.String that represents the value of the User-Agent header. null if the header is not present. UserAgent Gets the user agent from which the request is originated. Declaration public string UserAgent { get; } Property Value Type Description System.String A System.String that represents the value of the User-Agent header. null if the header is not present. UserHostAddress Gets the IP address and port number to which the request is sent. Declaration public string UserHostAddress { get; } Property Value Type Description System.String A System.String that represents the server IP address and port number. UserHostAddress Gets the IP address and port number to which the request is sent. Declaration public string UserHostAddress { get; } Property Value Type Description System.String A System.String that represents the server IP address and port number. UserHostName Gets the server host name requested by the client. Declaration public string UserHostName { get; } Property Value Type Description System.String A System.String that represents the value of the Host header. It includes the port number if provided. null if the header is not present. UserHostName Gets the server host name requested by the client. Declaration public string UserHostName { get; } Property Value Type Description System.String A System.String that represents the value of the Host header. It includes the port number if provided. null if the header is not present. UserLanguages Gets the natural languages that are acceptable for the client. Declaration public string[] UserLanguages { get; } Property Value Type Description System.String [] An array of System.String that contains the names of the natural languages specified in the value of the Accept-Language header. null if the header is not present. UserLanguages Gets the natural languages that are acceptable for the client. Declaration public string[] UserLanguages { get; } Property Value Type Description System.String [] An array of System.String that contains the names of the natural languages specified in the value of the Accept-Language header. null if the header is not present. Methods BeginGetClientCertificate(AsyncCallback, Object) Begins getting the certificate provided by the client asynchronously. Declaration public IAsyncResult BeginGetClientCertificate(AsyncCallback requestCallback, object state) Parameters Type Name Description System.AsyncCallback requestCallback An System.AsyncCallback delegate that invokes the method called when the operation is complete. System.Object state An System.Object that represents a user defined object to pass to the callback delegate. Returns Type Description System.IAsyncResult An System.IAsyncResult instance that indicates the status of the operation. Exceptions Type Condition System.NotSupportedException This method is not supported. BeginGetClientCertificate(AsyncCallback, Object) Begins getting the certificate provided by the client asynchronously. Declaration public IAsyncResult BeginGetClientCertificate(AsyncCallback requestCallback, object state) Parameters Type Name Description System.AsyncCallback requestCallback An System.AsyncCallback delegate that invokes the method called when the operation is complete. System.Object state An System.Object that represents a user defined object to pass to the callback delegate. Returns Type Description System.IAsyncResult An System.IAsyncResult instance that indicates the status of the operation. Exceptions Type Condition System.NotSupportedException This method is not supported. EndGetClientCertificate(IAsyncResult) Ends an asynchronous operation to get the certificate provided by the client. Declaration public X509Certificate2 EndGetClientCertificate(IAsyncResult asyncResult) Parameters Type Name Description System.IAsyncResult asyncResult An System.IAsyncResult instance returned when the operation started. Returns Type Description X509Certificate2 A that represents an X.509 certificate provided by the client. Exceptions Type Condition System.NotSupportedException This method is not supported. EndGetClientCertificate(IAsyncResult) Ends an asynchronous operation to get the certificate provided by the client. Declaration public X509Certificate2 EndGetClientCertificate(IAsyncResult asyncResult) Parameters Type Name Description System.IAsyncResult asyncResult An System.IAsyncResult instance returned when the operation started. Returns Type Description X509Certificate2 A that represents an X.509 certificate provided by the client. Exceptions Type Condition System.NotSupportedException This method is not supported. GetClientCertificate() Gets the certificate provided by the client. Declaration public X509Certificate2 GetClientCertificate() Returns Type Description X509Certificate2 A that represents an X.509 certificate provided by the client. Exceptions Type Condition System.NotSupportedException This method is not supported. GetClientCertificate() Gets the certificate provided by the client. Declaration public X509Certificate2 GetClientCertificate() Returns Type Description X509Certificate2 A that represents an X.509 certificate provided by the client. Exceptions Type Condition System.NotSupportedException This method is not supported. ToString() Returns a string that represents the current instance. Declaration public override string ToString() Returns Type Description System.String A System.String that contains the request line and headers included in the request. Overrides System.Object.ToString() ToString() Returns a string that represents the current instance. Declaration public override string ToString() Returns Type Description System.String A System.String that contains the request line and headers included in the request. Overrides System.Object.ToString()"
  },
  "api/WebSocketSharp.Net.HttpListenerResponse.html": {
    "href": "api/WebSocketSharp.Net.HttpListenerResponse.html",
    "title": "Class HttpListenerResponse | Unity Algorand SDK",
    "keywords": "Class HttpListenerResponse Represents an HTTP response to an HTTP request received by a HttpListener instance. Inheritance System.Object HttpListenerResponse Implements System.IDisposable Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public sealed class HttpListenerResponse : IDisposable Remarks This class cannot be inherited. Properties ContentEncoding Gets or sets the encoding for the entity body data included in the response. Declaration public Encoding ContentEncoding { get; set; } Property Value Type Description Encoding A that represents the encoding for the entity body data. null if no encoding is specified. The default value is null . Exceptions Type Condition System.InvalidOperationException The response is already being sent. System.ObjectDisposedException This instance is closed. ContentEncoding Gets or sets the encoding for the entity body data included in the response. Declaration public Encoding ContentEncoding { get; set; } Property Value Type Description Encoding A that represents the encoding for the entity body data. null if no encoding is specified. The default value is null . Exceptions Type Condition System.InvalidOperationException The response is already being sent. System.ObjectDisposedException This instance is closed. ContentLength64 Gets or sets the number of bytes in the entity body data included in the response. Declaration public long ContentLength64 { get; set; } Property Value Type Description System.Int64 A System.Int64 that represents the number of bytes in the entity body data. It is used for the value of the Content-Length header. The default value is zero. Exceptions Type Condition System.ArgumentOutOfRangeException The value specified for a set operation is less than zero. System.InvalidOperationException The response is already being sent. System.ObjectDisposedException This instance is closed. ContentLength64 Gets or sets the number of bytes in the entity body data included in the response. Declaration public long ContentLength64 { get; set; } Property Value Type Description System.Int64 A System.Int64 that represents the number of bytes in the entity body data. It is used for the value of the Content-Length header. The default value is zero. Exceptions Type Condition System.ArgumentOutOfRangeException The value specified for a set operation is less than zero. System.InvalidOperationException The response is already being sent. System.ObjectDisposedException This instance is closed. ContentType Gets or sets the media type of the entity body included in the response. Declaration public string ContentType { get; set; } Property Value Type Description System.String A System.String that represents the media type of the entity body. It is used for the value of the Content-Type header. null if no media type is specified. The default value is null . Exceptions Type Condition System.ArgumentException The value specified for a set operation is an empty string. -or- The value specified for a set operation contains an invalid character. System.InvalidOperationException The response is already being sent. System.ObjectDisposedException This instance is closed. ContentType Gets or sets the media type of the entity body included in the response. Declaration public string ContentType { get; set; } Property Value Type Description System.String A System.String that represents the media type of the entity body. It is used for the value of the Content-Type header. null if no media type is specified. The default value is null . Exceptions Type Condition System.ArgumentException The value specified for a set operation is an empty string. -or- The value specified for a set operation contains an invalid character. System.InvalidOperationException The response is already being sent. System.ObjectDisposedException This instance is closed. Cookies Gets or sets the collection of cookies sent with the response. Declaration public CookieCollection Cookies { get; set; } Property Value Type Description CookieCollection A CookieCollection that contains the cookies sent with the response. Cookies Gets or sets the collection of cookies sent with the response. Declaration public CookieCollection Cookies { get; set; } Property Value Type Description CookieCollection A CookieCollection that contains the cookies sent with the response. Headers Gets or sets the collection of the HTTP headers sent to the client. Declaration public WebHeaderCollection Headers { get; set; } Property Value Type Description WebHeaderCollection A WebHeaderCollection that contains the headers sent to the client. Exceptions Type Condition System.InvalidOperationException The value specified for a set operation is not valid for a response. Headers Gets or sets the collection of the HTTP headers sent to the client. Declaration public WebHeaderCollection Headers { get; set; } Property Value Type Description WebHeaderCollection A WebHeaderCollection that contains the headers sent to the client. Exceptions Type Condition System.InvalidOperationException The value specified for a set operation is not valid for a response. KeepAlive Gets or sets a value indicating whether the server requests a persistent connection. Declaration public bool KeepAlive { get; set; } Property Value Type Description System.Boolean true if the server requests a persistent connection; otherwise, false . The default value is true . Exceptions Type Condition System.InvalidOperationException The response is already being sent. System.ObjectDisposedException This instance is closed. KeepAlive Gets or sets a value indicating whether the server requests a persistent connection. Declaration public bool KeepAlive { get; set; } Property Value Type Description System.Boolean true if the server requests a persistent connection; otherwise, false . The default value is true . Exceptions Type Condition System.InvalidOperationException The response is already being sent. System.ObjectDisposedException This instance is closed. OutputStream Gets a stream instance to which the entity body data can be written. Declaration public Stream OutputStream { get; } Property Value Type Description Stream A instance to which the entity body data can be written. Exceptions Type Condition System.ObjectDisposedException This instance is closed. OutputStream Gets a stream instance to which the entity body data can be written. Declaration public Stream OutputStream { get; } Property Value Type Description Stream A instance to which the entity body data can be written. Exceptions Type Condition System.ObjectDisposedException This instance is closed. ProtocolVersion Gets the HTTP version used for the response. Declaration public Version ProtocolVersion { get; } Property Value Type Description System.Version A System.Version that represents the HTTP version used for the response. Always returns same as 1.1. ProtocolVersion Gets the HTTP version used for the response. Declaration public Version ProtocolVersion { get; } Property Value Type Description System.Version A System.Version that represents the HTTP version used for the response. Always returns same as 1.1. RedirectLocation Gets or sets the URL to which the client is redirected to locate a requested resource. Declaration public string RedirectLocation { get; set; } Property Value Type Description System.String A System.String that represents the absolute URL for the redirect location. It is used for the value of the Location header. null if no redirect location is specified. The default value is null . Exceptions Type Condition System.ArgumentException The value specified for a set operation is an empty string. -or- The value specified for a set operation is not an absolute URL. System.InvalidOperationException The response is already being sent. System.ObjectDisposedException This instance is closed. RedirectLocation Gets or sets the URL to which the client is redirected to locate a requested resource. Declaration public string RedirectLocation { get; set; } Property Value Type Description System.String A System.String that represents the absolute URL for the redirect location. It is used for the value of the Location header. null if no redirect location is specified. The default value is null . Exceptions Type Condition System.ArgumentException The value specified for a set operation is an empty string. -or- The value specified for a set operation is not an absolute URL. System.InvalidOperationException The response is already being sent. System.ObjectDisposedException This instance is closed. SendChunked Gets or sets a value indicating whether the response uses the chunked transfer encoding. Declaration public bool SendChunked { get; set; } Property Value Type Description System.Boolean true if the response uses the chunked transfer encoding; otherwise, false . The default value is false . Exceptions Type Condition System.InvalidOperationException The response is already being sent. System.ObjectDisposedException This instance is closed. SendChunked Gets or sets a value indicating whether the response uses the chunked transfer encoding. Declaration public bool SendChunked { get; set; } Property Value Type Description System.Boolean true if the response uses the chunked transfer encoding; otherwise, false . The default value is false . Exceptions Type Condition System.InvalidOperationException The response is already being sent. System.ObjectDisposedException This instance is closed. StatusCode Gets or sets the HTTP status code returned to the client. Declaration public int StatusCode { get; set; } Property Value Type Description System.Int32 An System.Int32 that represents the HTTP status code for the response to the request. The default value is 200. It indicates that the request has succeeded. Exceptions Type Condition System.InvalidOperationException The response is already being sent. System.ObjectDisposedException This instance is closed. System.Net.ProtocolViolationException The value specified for a set operation is invalid. Valid values are between 100 and 999 inclusive. StatusCode Gets or sets the HTTP status code returned to the client. Declaration public int StatusCode { get; set; } Property Value Type Description System.Int32 An System.Int32 that represents the HTTP status code for the response to the request. The default value is 200. It indicates that the request has succeeded. Exceptions Type Condition System.InvalidOperationException The response is already being sent. System.ObjectDisposedException This instance is closed. System.Net.ProtocolViolationException The value specified for a set operation is invalid. Valid values are between 100 and 999 inclusive. StatusDescription Gets or sets the description of the HTTP status code returned to the client. Declaration public string StatusDescription { get; set; } Property Value Type Description System.String A System.String that represents the description of the HTTP status code for the response to the request. The default value is the RFC 2616 description for the StatusCode property value. An empty string if an RFC 2616 description does not exist. Exceptions Type Condition System.ArgumentNullException The value specified for a set operation is null . System.ArgumentException The value specified for a set operation contains an invalid character. System.InvalidOperationException The response is already being sent. System.ObjectDisposedException This instance is closed. StatusDescription Gets or sets the description of the HTTP status code returned to the client. Declaration public string StatusDescription { get; set; } Property Value Type Description System.String A System.String that represents the description of the HTTP status code for the response to the request. The default value is the RFC 2616 description for the StatusCode property value. An empty string if an RFC 2616 description does not exist. Exceptions Type Condition System.ArgumentNullException The value specified for a set operation is null . System.ArgumentException The value specified for a set operation contains an invalid character. System.InvalidOperationException The response is already being sent. System.ObjectDisposedException This instance is closed. Methods Abort() Closes the connection to the client without sending a response. Declaration public void Abort() Abort() Closes the connection to the client without sending a response. Declaration public void Abort() AppendCookie(Cookie) Appends the specified cookie to the cookies sent with the response. Declaration public void AppendCookie(Cookie cookie) Parameters Type Name Description Cookie cookie A Cookie to append. Exceptions Type Condition System.ArgumentNullException cookie is null . AppendCookie(Cookie) Appends the specified cookie to the cookies sent with the response. Declaration public void AppendCookie(Cookie cookie) Parameters Type Name Description Cookie cookie A Cookie to append. Exceptions Type Condition System.ArgumentNullException cookie is null . AppendHeader(String, String) Appends an HTTP header with the specified name and value to the headers for the response. Declaration public void AppendHeader(string name, string value) Parameters Type Name Description System.String name A System.String that specifies the name of the header to append. System.String value A System.String that specifies the value of the header to append. Exceptions Type Condition System.ArgumentNullException name is null . System.ArgumentException name is an empty string. -or- name is a string of spaces. -or- name contains an invalid character. -or- value contains an invalid character. -or- name is a restricted header name. System.ArgumentOutOfRangeException The length of value is greater than 65,535 characters. System.InvalidOperationException The current headers do not allow the header. AppendHeader(String, String) Appends an HTTP header with the specified name and value to the headers for the response. Declaration public void AppendHeader(string name, string value) Parameters Type Name Description System.String name A System.String that specifies the name of the header to append. System.String value A System.String that specifies the value of the header to append. Exceptions Type Condition System.ArgumentNullException name is null . System.ArgumentException name is an empty string. -or- name is a string of spaces. -or- name contains an invalid character. -or- value contains an invalid character. -or- name is a restricted header name. System.ArgumentOutOfRangeException The length of value is greater than 65,535 characters. System.InvalidOperationException The current headers do not allow the header. Close() Sends the response to the client and releases the resources used by this instance. Declaration public void Close() Close() Sends the response to the client and releases the resources used by this instance. Declaration public void Close() Close(Byte[], Boolean) Sends the response with the specified entity body data to the client and releases the resources used by this instance. Declaration public void Close(byte[] responseEntity, bool willBlock) Parameters Type Name Description System.Byte [] responseEntity An array of System.Byte that contains the entity body data. System.Boolean willBlock A System.Boolean : true if this method blocks execution while flushing the stream to the client; otherwise, false . Exceptions Type Condition System.ArgumentNullException responseEntity is null . System.ObjectDisposedException This instance is closed. Close(Byte[], Boolean) Sends the response with the specified entity body data to the client and releases the resources used by this instance. Declaration public void Close(byte[] responseEntity, bool willBlock) Parameters Type Name Description System.Byte [] responseEntity An array of System.Byte that contains the entity body data. System.Boolean willBlock A System.Boolean : true if this method blocks execution while flushing the stream to the client; otherwise, false . Exceptions Type Condition System.ArgumentNullException responseEntity is null . System.ObjectDisposedException This instance is closed. CopyFrom(HttpListenerResponse) Copies some properties from the specified response instance to this instance. Declaration public void CopyFrom(HttpListenerResponse templateResponse) Parameters Type Name Description HttpListenerResponse templateResponse A HttpListenerResponse to copy. Exceptions Type Condition System.ArgumentNullException templateResponse is null . CopyFrom(HttpListenerResponse) Copies some properties from the specified response instance to this instance. Declaration public void CopyFrom(HttpListenerResponse templateResponse) Parameters Type Name Description HttpListenerResponse templateResponse A HttpListenerResponse to copy. Exceptions Type Condition System.ArgumentNullException templateResponse is null . Redirect(String) Configures the response to redirect the client's request to the specified URL. Declaration public void Redirect(string url) Parameters Type Name Description System.String url A System.String that specifies the absolute URL to which the client is redirected to locate a requested resource. Remarks This method sets the RedirectLocation property to url , the StatusCode property to 302, and the StatusDescription property to \"Found\". Exceptions Type Condition System.ArgumentNullException url is null . System.ArgumentException url is an empty string. -or- url is not an absolute URL. System.InvalidOperationException The response is already being sent. System.ObjectDisposedException This instance is closed. Redirect(String) Configures the response to redirect the client's request to the specified URL. Declaration public void Redirect(string url) Parameters Type Name Description System.String url A System.String that specifies the absolute URL to which the client is redirected to locate a requested resource. Remarks This method sets the RedirectLocation property to url , the StatusCode property to 302, and the StatusDescription property to \"Found\". Exceptions Type Condition System.ArgumentNullException url is null . System.ArgumentException url is an empty string. -or- url is not an absolute URL. System.InvalidOperationException The response is already being sent. System.ObjectDisposedException This instance is closed. SetCookie(Cookie) Adds or updates a cookie in the cookies sent with the response. Declaration public void SetCookie(Cookie cookie) Parameters Type Name Description Cookie cookie A Cookie to set. Exceptions Type Condition System.ArgumentNullException cookie is null . System.ArgumentException cookie already exists in the cookies but it cannot be updated. SetCookie(Cookie) Adds or updates a cookie in the cookies sent with the response. Declaration public void SetCookie(Cookie cookie) Parameters Type Name Description Cookie cookie A Cookie to set. Exceptions Type Condition System.ArgumentNullException cookie is null . System.ArgumentException cookie already exists in the cookies but it cannot be updated. SetHeader(String, String) Adds or updates an HTTP header with the specified name and value in the headers for the response. Declaration public void SetHeader(string name, string value) Parameters Type Name Description System.String name A System.String that specifies the name of the header to set. System.String value A System.String that specifies the value of the header to set. Exceptions Type Condition System.ArgumentNullException name is null . System.ArgumentException name is an empty string. -or- name is a string of spaces. -or- name contains an invalid character. -or- value contains an invalid character. -or- name is a restricted header name. System.ArgumentOutOfRangeException The length of value is greater than 65,535 characters. System.InvalidOperationException The current headers do not allow the header. SetHeader(String, String) Adds or updates an HTTP header with the specified name and value in the headers for the response. Declaration public void SetHeader(string name, string value) Parameters Type Name Description System.String name A System.String that specifies the name of the header to set. System.String value A System.String that specifies the value of the header to set. Exceptions Type Condition System.ArgumentNullException name is null . System.ArgumentException name is an empty string. -or- name is a string of spaces. -or- name contains an invalid character. -or- value contains an invalid character. -or- name is a restricted header name. System.ArgumentOutOfRangeException The length of value is greater than 65,535 characters. System.InvalidOperationException The current headers do not allow the header. Explicit Interface Implementations IDisposable.Dispose() Releases all resources used by this instance. Declaration void IDisposable.Dispose() IDisposable.Dispose() Releases all resources used by this instance. Declaration void IDisposable.Dispose() Implements System.IDisposable"
  },
  "api/WebSocketSharp.Net.HttpRequestHeader.html": {
    "href": "api/WebSocketSharp.Net.HttpRequestHeader.html",
    "title": "Enum HttpRequestHeader | Unity Algorand SDK",
    "keywords": "Enum HttpRequestHeader Indicates the HTTP header that may be specified in a client request. Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public enum HttpRequestHeader Remarks The headers of this enumeration are defined in RFC 2616 or RFC 6455 . Fields Name Description Accept Indicates the Accept header. AcceptCharset Indicates the Accept-Charset header. AcceptEncoding Indicates the Accept-Encoding header. AcceptLanguage Indicates the Accept-Language header. Allow Indicates the Allow header. Authorization Indicates the Authorization header. CacheControl Indicates the Cache-Control header. Connection Indicates the Connection header. ContentEncoding Indicates the Content-Encoding header. ContentLanguage Indicates the Content-Language header. ContentLength Indicates the Content-Length header. ContentLocation Indicates the Content-Location header. ContentMd5 Indicates the Content-MD5 header. ContentRange Indicates the Content-Range header. ContentType Indicates the Content-Type header. Cookie Indicates the Cookie header. Date Indicates the Date header. Expect Indicates the Expect header. Expires Indicates the Expires header. From Indicates the From header. Host Indicates the Host header. IfMatch Indicates the If-Match header. IfModifiedSince Indicates the If-Modified-Since header. IfNoneMatch Indicates the If-None-Match header. IfRange Indicates the If-Range header. IfUnmodifiedSince Indicates the If-Unmodified-Since header. KeepAlive Indicates the Keep-Alive header. LastModified Indicates the Last-Modified header. MaxForwards Indicates the Max-Forwards header. Pragma Indicates the Pragma header. ProxyAuthorization Indicates the Proxy-Authorization header. Range Indicates the Range header. Referer Indicates the Referer header. SecWebSocketExtensions Indicates the Sec-WebSocket-Extensions header. SecWebSocketKey Indicates the Sec-WebSocket-Key header. SecWebSocketProtocol Indicates the Sec-WebSocket-Protocol header. SecWebSocketVersion Indicates the Sec-WebSocket-Version header. Te Indicates the TE header. Trailer Indicates the Trailer header. TransferEncoding Indicates the Transfer-Encoding header. Translate Indicates the Translate header. Upgrade Indicates the Upgrade header. UserAgent Indicates the User-Agent header. Via Indicates the Via header. Warning Indicates the Warning header."
  },
  "api/WebSocketSharp.Net.HttpRequestHeader_1.html": {
    "href": "api/WebSocketSharp.Net.HttpRequestHeader_1.html",
    "title": "Enum HttpRequestHeader | Unity Algorand SDK",
    "keywords": "Enum HttpRequestHeader Indicates the HTTP header that may be specified in a client request. Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public enum HttpRequestHeader Remarks The headers of this enumeration are defined in RFC 2616 or RFC 6455 . Fields Name Description Accept Indicates the Accept header. AcceptCharset Indicates the Accept-Charset header. AcceptEncoding Indicates the Accept-Encoding header. AcceptLanguage Indicates the Accept-Language header. Allow Indicates the Allow header. Authorization Indicates the Authorization header. CacheControl Indicates the Cache-Control header. Connection Indicates the Connection header. ContentEncoding Indicates the Content-Encoding header. ContentLanguage Indicates the Content-Language header. ContentLength Indicates the Content-Length header. ContentLocation Indicates the Content-Location header. ContentMd5 Indicates the Content-MD5 header. ContentRange Indicates the Content-Range header. ContentType Indicates the Content-Type header. Cookie Indicates the Cookie header. Date Indicates the Date header. Expect Indicates the Expect header. Expires Indicates the Expires header. From Indicates the From header. Host Indicates the Host header. IfMatch Indicates the If-Match header. IfModifiedSince Indicates the If-Modified-Since header. IfNoneMatch Indicates the If-None-Match header. IfRange Indicates the If-Range header. IfUnmodifiedSince Indicates the If-Unmodified-Since header. KeepAlive Indicates the Keep-Alive header. LastModified Indicates the Last-Modified header. MaxForwards Indicates the Max-Forwards header. Pragma Indicates the Pragma header. ProxyAuthorization Indicates the Proxy-Authorization header. Range Indicates the Range header. Referer Indicates the Referer header. SecWebSocketExtensions Indicates the Sec-WebSocket-Extensions header. SecWebSocketKey Indicates the Sec-WebSocket-Key header. SecWebSocketProtocol Indicates the Sec-WebSocket-Protocol header. SecWebSocketVersion Indicates the Sec-WebSocket-Version header. Te Indicates the TE header. Trailer Indicates the Trailer header. TransferEncoding Indicates the Transfer-Encoding header. Translate Indicates the Translate header. Upgrade Indicates the Upgrade header. UserAgent Indicates the User-Agent header. Via Indicates the Via header. Warning Indicates the Warning header."
  },
  "api/WebSocketSharp.Net.HttpResponseHeader.html": {
    "href": "api/WebSocketSharp.Net.HttpResponseHeader.html",
    "title": "Enum HttpResponseHeader | Unity Algorand SDK",
    "keywords": "Enum HttpResponseHeader Indicates the HTTP header that can be specified in a server response. Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public enum HttpResponseHeader Remarks The headers of this enumeration are defined in RFC 2616 or RFC 6455 . Fields Name Description AcceptRanges Indicates the Accept-Ranges header. Age Indicates the Age header. Allow Indicates the Allow header. CacheControl Indicates the Cache-Control header. Connection Indicates the Connection header. ContentEncoding Indicates the Content-Encoding header. ContentLanguage Indicates the Content-Language header. ContentLength Indicates the Content-Length header. ContentLocation Indicates the Content-Location header. ContentMd5 Indicates the Content-MD5 header. ContentRange Indicates the Content-Range header. ContentType Indicates the Content-Type header. Date Indicates the Date header. ETag Indicates the ETag header. Expires Indicates the Expires header. KeepAlive Indicates the Keep-Alive header. LastModified Indicates the Last-Modified header. Location Indicates the Location header. Pragma Indicates the Pragma header. ProxyAuthenticate Indicates the Proxy-Authenticate header. RetryAfter Indicates the Retry-After header. SecWebSocketAccept Indicates the Sec-WebSocket-Accept header. SecWebSocketExtensions Indicates the Sec-WebSocket-Extensions header. SecWebSocketProtocol Indicates the Sec-WebSocket-Protocol header. SecWebSocketVersion Indicates the Sec-WebSocket-Version header. Server Indicates the Server header. SetCookie Indicates the Set-Cookie header. Trailer Indicates the Trailer header. TransferEncoding Indicates the Transfer-Encoding header. Upgrade Indicates the Upgrade header. Vary Indicates the Vary header. Via Indicates the Via header. Warning Indicates the Warning header. WwwAuthenticate Indicates the WWW-Authenticate header."
  },
  "api/WebSocketSharp.Net.HttpResponseHeader_1.html": {
    "href": "api/WebSocketSharp.Net.HttpResponseHeader_1.html",
    "title": "Enum HttpResponseHeader | Unity Algorand SDK",
    "keywords": "Enum HttpResponseHeader Indicates the HTTP header that can be specified in a server response. Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public enum HttpResponseHeader Remarks The headers of this enumeration are defined in RFC 2616 or RFC 6455 . Fields Name Description AcceptRanges Indicates the Accept-Ranges header. Age Indicates the Age header. Allow Indicates the Allow header. CacheControl Indicates the Cache-Control header. Connection Indicates the Connection header. ContentEncoding Indicates the Content-Encoding header. ContentLanguage Indicates the Content-Language header. ContentLength Indicates the Content-Length header. ContentLocation Indicates the Content-Location header. ContentMd5 Indicates the Content-MD5 header. ContentRange Indicates the Content-Range header. ContentType Indicates the Content-Type header. Date Indicates the Date header. ETag Indicates the ETag header. Expires Indicates the Expires header. KeepAlive Indicates the Keep-Alive header. LastModified Indicates the Last-Modified header. Location Indicates the Location header. Pragma Indicates the Pragma header. ProxyAuthenticate Indicates the Proxy-Authenticate header. RetryAfter Indicates the Retry-After header. SecWebSocketAccept Indicates the Sec-WebSocket-Accept header. SecWebSocketExtensions Indicates the Sec-WebSocket-Extensions header. SecWebSocketProtocol Indicates the Sec-WebSocket-Protocol header. SecWebSocketVersion Indicates the Sec-WebSocket-Version header. Server Indicates the Server header. SetCookie Indicates the Set-Cookie header. Trailer Indicates the Trailer header. TransferEncoding Indicates the Transfer-Encoding header. Upgrade Indicates the Upgrade header. Vary Indicates the Vary header. Via Indicates the Via header. Warning Indicates the Warning header. WwwAuthenticate Indicates the WWW-Authenticate header."
  },
  "api/WebSocketSharp.Net.HttpStatusCode.html": {
    "href": "api/WebSocketSharp.Net.HttpStatusCode.html",
    "title": "Enum HttpStatusCode | Unity Algorand SDK",
    "keywords": "Enum HttpStatusCode Indicates the HTTP status code that can be specified in a server response. Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public enum HttpStatusCode Remarks The values of this enumeration are defined in RFC 2616 . Fields Name Description Accepted Equivalent to status code 202. Indicates that the client's request has been accepted for processing, but the processing has not been completed. Ambiguous Equivalent to status code 300. Indicates that the requested resource corresponds to any of multiple representations. Ambiguous is a synonym for MultipleChoices. BadGateway Equivalent to status code 502. Indicates that a gateway or proxy server received an invalid response from the upstream server. BadRequest Equivalent to status code 400. Indicates that the client's request could not be understood by the server due to malformed syntax. Conflict Equivalent to status code 409. Indicates that the client's request could not be completed due to a conflict on the server. Continue Equivalent to status code 100. Indicates that the client should continue with its request. Created Equivalent to status code 201. Indicates that the client's request has been fulfilled and resulted in a new resource being created. ExpectationFailed Equivalent to status code 417. Indicates that the expectation given in an Expect request header could not be met by the server. Forbidden Equivalent to status code 403. Indicates that the server understood the client's request but is refusing to fulfill it. Found Equivalent to status code 302. Indicates that the requested resource is located temporarily under a different URI. Found is a synonym for Redirect. GatewayTimeout Equivalent to status code 504. Indicates that a gateway or proxy server did not receive a timely response from the upstream server or some other auxiliary server. Gone Equivalent to status code 410. Indicates that the requested resource is no longer available at the server and no forwarding address is known. HttpVersionNotSupported Equivalent to status code 505. Indicates that the server does not support the HTTP version used in the client's request. InternalServerError Equivalent to status code 500. Indicates that the server encountered an unexpected condition which prevented it from fulfilling the client's request. LengthRequired Equivalent to status code 411. Indicates that the server refuses to accept the client's request without a defined Content-Length. MethodNotAllowed Equivalent to status code 405. Indicates that the method specified in the request line is not allowed for the resource identified by the request URI. Moved Equivalent to status code 301. Indicates that the requested resource has been assigned a new permanent URI and any future references to this resource should use one of the returned URIs. Moved is a synonym for MovedPermanently. MovedPermanently Equivalent to status code 301. Indicates that the requested resource has been assigned a new permanent URI and any future references to this resource should use one of the returned URIs. MovedPermanently is a synonym for Moved. MultipleChoices Equivalent to status code 300. Indicates that the requested resource corresponds to any of multiple representations. MultipleChoices is a synonym for Ambiguous. NoContent Equivalent to status code 204. Indicates that the server has fulfilled the client's request but does not need to return an entity-body. NonAuthoritativeInformation Equivalent to status code 203. Indicates that the returned metainformation is from a local or a third-party copy instead of the origin server. NotAcceptable Equivalent to status code 406. Indicates that the server does not have the appropriate resource to respond to the Accept headers in the client's request. NotFound Equivalent to status code 404. Indicates that the server has not found anything matching the request URI. NotImplemented Equivalent to status code 501. Indicates that the server does not support the functionality required to fulfill the client's request. NotModified Equivalent to status code 304. Indicates that the client has performed a conditional GET request and access is allowed, but the document has not been modified. OK Equivalent to status code 200. Indicates that the client's request has succeeded. PartialContent Equivalent to status code 206. Indicates that the server has fulfilled the partial GET request for the resource. PaymentRequired Equivalent to status code 402. This status code is reserved for future use. PreconditionFailed Equivalent to status code 412. Indicates that the precondition given in one or more of the request headers evaluated to false when it was tested on the server. ProxyAuthenticationRequired Equivalent to status code 407. Indicates that the client must first authenticate itself with the proxy. Redirect Equivalent to status code 302. Indicates that the requested resource is located temporarily under a different URI. Redirect is a synonym for Found. RedirectKeepVerb Equivalent to status code 307. Indicates that the requested resource is located temporarily under a different URI. RedirectKeepVerb is a synonym for TemporaryRedirect. RedirectMethod Equivalent to status code 303. Indicates that the response to the request can be found under a different URI and should be retrieved using a GET method on that resource. RedirectMethod is a synonym for SeeOther. RequestedRangeNotSatisfiable Equivalent to status code 416. Indicates that none of the range specifier values in a Range request header overlap the current extent of the selected resource. RequestEntityTooLarge Equivalent to status code 413. Indicates that the entity of the client's request is larger than the server is willing or able to process. RequestTimeout Equivalent to status code 408. Indicates that the client did not produce a request within the time that the server was prepared to wait. RequestUriTooLong Equivalent to status code 414. Indicates that the request URI is longer than the server is willing to interpret. ResetContent Equivalent to status code 205. Indicates that the server has fulfilled the client's request, and the user agent should reset the document view which caused the request to be sent. SeeOther Equivalent to status code 303. Indicates that the response to the request can be found under a different URI and should be retrieved using a GET method on that resource. SeeOther is a synonym for RedirectMethod. ServiceUnavailable Equivalent to status code 503. Indicates that the server is currently unable to handle the client's request due to a temporary overloading or maintenance of the server. SwitchingProtocols Equivalent to status code 101. Indicates that the server is switching the HTTP version or protocol on the connection. TemporaryRedirect Equivalent to status code 307. Indicates that the requested resource is located temporarily under a different URI. TemporaryRedirect is a synonym for RedirectKeepVerb. Unauthorized Equivalent to status code 401. Indicates that the client's request requires user authentication. UnsupportedMediaType Equivalent to status code 415. Indicates that the entity of the client's request is in a format not supported by the requested resource for the requested method. Unused Equivalent to status code 306. This status code was used in a previous version of the specification, is no longer used, and is reserved for future use. UseProxy Equivalent to status code 305. Indicates that the requested resource must be accessed through the proxy given by the Location field."
  },
  "api/WebSocketSharp.Net.HttpStatusCode_1.html": {
    "href": "api/WebSocketSharp.Net.HttpStatusCode_1.html",
    "title": "Enum HttpStatusCode | Unity Algorand SDK",
    "keywords": "Enum HttpStatusCode Indicates the HTTP status code that can be specified in a server response. Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public enum HttpStatusCode Remarks The values of this enumeration are defined in RFC 2616 . Fields Name Description Accepted Equivalent to status code 202. Indicates that the client's request has been accepted for processing, but the processing has not been completed. Ambiguous Equivalent to status code 300. Indicates that the requested resource corresponds to any of multiple representations. Ambiguous is a synonym for MultipleChoices. BadGateway Equivalent to status code 502. Indicates that a gateway or proxy server received an invalid response from the upstream server. BadRequest Equivalent to status code 400. Indicates that the client's request could not be understood by the server due to malformed syntax. Conflict Equivalent to status code 409. Indicates that the client's request could not be completed due to a conflict on the server. Continue Equivalent to status code 100. Indicates that the client should continue with its request. Created Equivalent to status code 201. Indicates that the client's request has been fulfilled and resulted in a new resource being created. ExpectationFailed Equivalent to status code 417. Indicates that the expectation given in an Expect request header could not be met by the server. Forbidden Equivalent to status code 403. Indicates that the server understood the client's request but is refusing to fulfill it. Found Equivalent to status code 302. Indicates that the requested resource is located temporarily under a different URI. Found is a synonym for Redirect. GatewayTimeout Equivalent to status code 504. Indicates that a gateway or proxy server did not receive a timely response from the upstream server or some other auxiliary server. Gone Equivalent to status code 410. Indicates that the requested resource is no longer available at the server and no forwarding address is known. HttpVersionNotSupported Equivalent to status code 505. Indicates that the server does not support the HTTP version used in the client's request. InternalServerError Equivalent to status code 500. Indicates that the server encountered an unexpected condition which prevented it from fulfilling the client's request. LengthRequired Equivalent to status code 411. Indicates that the server refuses to accept the client's request without a defined Content-Length. MethodNotAllowed Equivalent to status code 405. Indicates that the method specified in the request line is not allowed for the resource identified by the request URI. Moved Equivalent to status code 301. Indicates that the requested resource has been assigned a new permanent URI and any future references to this resource should use one of the returned URIs. Moved is a synonym for MovedPermanently. MovedPermanently Equivalent to status code 301. Indicates that the requested resource has been assigned a new permanent URI and any future references to this resource should use one of the returned URIs. MovedPermanently is a synonym for Moved. MultipleChoices Equivalent to status code 300. Indicates that the requested resource corresponds to any of multiple representations. MultipleChoices is a synonym for Ambiguous. NoContent Equivalent to status code 204. Indicates that the server has fulfilled the client's request but does not need to return an entity-body. NonAuthoritativeInformation Equivalent to status code 203. Indicates that the returned metainformation is from a local or a third-party copy instead of the origin server. NotAcceptable Equivalent to status code 406. Indicates that the server does not have the appropriate resource to respond to the Accept headers in the client's request. NotFound Equivalent to status code 404. Indicates that the server has not found anything matching the request URI. NotImplemented Equivalent to status code 501. Indicates that the server does not support the functionality required to fulfill the client's request. NotModified Equivalent to status code 304. Indicates that the client has performed a conditional GET request and access is allowed, but the document has not been modified. OK Equivalent to status code 200. Indicates that the client's request has succeeded. PartialContent Equivalent to status code 206. Indicates that the server has fulfilled the partial GET request for the resource. PaymentRequired Equivalent to status code 402. This status code is reserved for future use. PreconditionFailed Equivalent to status code 412. Indicates that the precondition given in one or more of the request headers evaluated to false when it was tested on the server. ProxyAuthenticationRequired Equivalent to status code 407. Indicates that the client must first authenticate itself with the proxy. Redirect Equivalent to status code 302. Indicates that the requested resource is located temporarily under a different URI. Redirect is a synonym for Found. RedirectKeepVerb Equivalent to status code 307. Indicates that the requested resource is located temporarily under a different URI. RedirectKeepVerb is a synonym for TemporaryRedirect. RedirectMethod Equivalent to status code 303. Indicates that the response to the request can be found under a different URI and should be retrieved using a GET method on that resource. RedirectMethod is a synonym for SeeOther. RequestedRangeNotSatisfiable Equivalent to status code 416. Indicates that none of the range specifier values in a Range request header overlap the current extent of the selected resource. RequestEntityTooLarge Equivalent to status code 413. Indicates that the entity of the client's request is larger than the server is willing or able to process. RequestTimeout Equivalent to status code 408. Indicates that the client did not produce a request within the time that the server was prepared to wait. RequestUriTooLong Equivalent to status code 414. Indicates that the request URI is longer than the server is willing to interpret. ResetContent Equivalent to status code 205. Indicates that the server has fulfilled the client's request, and the user agent should reset the document view which caused the request to be sent. SeeOther Equivalent to status code 303. Indicates that the response to the request can be found under a different URI and should be retrieved using a GET method on that resource. SeeOther is a synonym for RedirectMethod. ServiceUnavailable Equivalent to status code 503. Indicates that the server is currently unable to handle the client's request due to a temporary overloading or maintenance of the server. SwitchingProtocols Equivalent to status code 101. Indicates that the server is switching the HTTP version or protocol on the connection. TemporaryRedirect Equivalent to status code 307. Indicates that the requested resource is located temporarily under a different URI. TemporaryRedirect is a synonym for RedirectKeepVerb. Unauthorized Equivalent to status code 401. Indicates that the client's request requires user authentication. UnsupportedMediaType Equivalent to status code 415. Indicates that the entity of the client's request is in a format not supported by the requested resource for the requested method. Unused Equivalent to status code 306. This status code was used in a previous version of the specification, is no longer used, and is reserved for future use. UseProxy Equivalent to status code 305. Indicates that the requested resource must be accessed through the proxy given by the Location field."
  },
  "api/WebSocketSharp.Net.HttpVersion.html": {
    "href": "api/WebSocketSharp.Net.HttpVersion.html",
    "title": "Class HttpVersion | Unity Algorand SDK",
    "keywords": "Class HttpVersion Provides the HTTP version numbers. Inheritance System.Object HttpVersion Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public class HttpVersion Constructors HttpVersion() Initializes a new instance of the HttpVersion class. Declaration public HttpVersion() HttpVersion() Initializes a new instance of the HttpVersion class. Declaration public HttpVersion() Fields Version10 Provides a System.Version instance for the HTTP/1.0. Declaration public static readonly Version Version10 Field Value Type Description System.Version Version10 Provides a System.Version instance for the HTTP/1.0. Declaration public static readonly Version Version10 Field Value Type Description System.Version Version11 Provides a System.Version instance for the HTTP/1.1. Declaration public static readonly Version Version11 Field Value Type Description System.Version Version11 Provides a System.Version instance for the HTTP/1.1. Declaration public static readonly Version Version11 Field Value Type Description System.Version"
  },
  "api/WebSocketSharp.Net.NetworkCredential.html": {
    "href": "api/WebSocketSharp.Net.NetworkCredential.html",
    "title": "Class NetworkCredential | Unity Algorand SDK",
    "keywords": "Class NetworkCredential Provides the credentials for the password-based authentication. Inheritance System.Object NetworkCredential Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public class NetworkCredential Constructors NetworkCredential(String, String) Initializes a new instance of the NetworkCredential class with the specified username and password . Declaration public NetworkCredential(string username, string password) Parameters Type Name Description System.String username A System.String that represents the username associated with the credentials. System.String password A System.String that represents the password for the username associated with the credentials. Exceptions Type Condition System.ArgumentNullException username is null . System.ArgumentException username is empty. NetworkCredential(String, String) Initializes a new instance of the NetworkCredential class with the specified username and password . Declaration public NetworkCredential(string username, string password) Parameters Type Name Description System.String username A System.String that represents the username associated with the credentials. System.String password A System.String that represents the password for the username associated with the credentials. Exceptions Type Condition System.ArgumentNullException username is null . System.ArgumentException username is empty. NetworkCredential(String, String, String, String[]) Initializes a new instance of the NetworkCredential class with the specified username , password , domain and roles . Declaration public NetworkCredential(string username, string password, string domain, params string[] roles) Parameters Type Name Description System.String username A System.String that represents the username associated with the credentials. System.String password A System.String that represents the password for the username associated with the credentials. System.String domain A System.String that represents the domain associated with the credentials. System.String [] roles An array of System.String that represents the roles associated with the credentials if any. Exceptions Type Condition System.ArgumentNullException username is null . System.ArgumentException username is empty. NetworkCredential(String, String, String, String[]) Initializes a new instance of the NetworkCredential class with the specified username , password , domain and roles . Declaration public NetworkCredential(string username, string password, string domain, params string[] roles) Parameters Type Name Description System.String username A System.String that represents the username associated with the credentials. System.String password A System.String that represents the password for the username associated with the credentials. System.String domain A System.String that represents the domain associated with the credentials. System.String [] roles An array of System.String that represents the roles associated with the credentials if any. Exceptions Type Condition System.ArgumentNullException username is null . System.ArgumentException username is empty. Properties Domain Gets the domain associated with the credentials. Declaration public string Domain { get; } Property Value Type Description System.String A System.String that represents the domain name to which the username belongs. Remarks This property returns an empty string if the domain was initialized with null . Domain Gets the domain associated with the credentials. Declaration public string Domain { get; } Property Value Type Description System.String A System.String that represents the domain name to which the username belongs. Remarks This property returns an empty string if the domain was initialized with null . Password Gets the password for the username associated with the credentials. Declaration public string Password { get; } Property Value Type Description System.String A System.String that represents the password. Remarks This property returns an empty string if the password was initialized with null . Password Gets the password for the username associated with the credentials. Declaration public string Password { get; } Property Value Type Description System.String A System.String that represents the password. Remarks This property returns an empty string if the password was initialized with null . Roles Gets the roles associated with the credentials. Declaration public string[] Roles { get; } Property Value Type Description System.String [] An array of System.String that represents the role names to which the username belongs. Remarks This property returns an empty array if the roles were initialized with null . Roles Gets the roles associated with the credentials. Declaration public string[] Roles { get; } Property Value Type Description System.String [] An array of System.String that represents the role names to which the username belongs. Remarks This property returns an empty array if the roles were initialized with null . Username Gets the username associated with the credentials. Declaration public string Username { get; } Property Value Type Description System.String A System.String that represents the username. Username Gets the username associated with the credentials. Declaration public string Username { get; } Property Value Type Description System.String A System.String that represents the username."
  },
  "api/WebSocketSharp.Net.ServerSslConfiguration.html": {
    "href": "api/WebSocketSharp.Net.ServerSslConfiguration.html",
    "title": "Class ServerSslConfiguration | Unity Algorand SDK",
    "keywords": "Class ServerSslConfiguration Stores the parameters for the used by servers. Inheritance System.Object ServerSslConfiguration Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax public class ServerSslConfiguration Constructors ServerSslConfiguration() Initializes a new instance of the ServerSslConfiguration class. Declaration public ServerSslConfiguration() ServerSslConfiguration() Initializes a new instance of the ServerSslConfiguration class. Declaration public ServerSslConfiguration() ServerSslConfiguration(ServerSslConfiguration) Initializes a new instance of the ServerSslConfiguration class that stores the parameters copied from the specified configuration. Declaration public ServerSslConfiguration(ServerSslConfiguration configuration) Parameters Type Name Description ServerSslConfiguration configuration A ServerSslConfiguration from which to copy. Exceptions Type Condition System.ArgumentNullException configuration is null . ServerSslConfiguration(ServerSslConfiguration) Initializes a new instance of the ServerSslConfiguration class that stores the parameters copied from the specified configuration. Declaration public ServerSslConfiguration(ServerSslConfiguration configuration) Parameters Type Name Description ServerSslConfiguration configuration A ServerSslConfiguration from which to copy. Exceptions Type Condition System.ArgumentNullException configuration is null . Properties CheckCertificateRevocation Gets or sets a value indicating whether the certificate revocation list is checked during authentication. Declaration public bool CheckCertificateRevocation { get; set; } Property Value Type Description System.Boolean true if the certificate revocation list is checked during authentication; otherwise, false . The default value is false . CheckCertificateRevocation Gets or sets a value indicating whether the certificate revocation list is checked during authentication. Declaration public bool CheckCertificateRevocation { get; set; } Property Value Type Description System.Boolean true if the certificate revocation list is checked during authentication; otherwise, false . The default value is false . ClientCertificateRequired Gets or sets a value indicating whether the client is asked for a certificate for authentication. Declaration public bool ClientCertificateRequired { get; set; } Property Value Type Description System.Boolean true if the client is asked for a certificate for authentication; otherwise, false . The default value is false . ClientCertificateRequired Gets or sets a value indicating whether the client is asked for a certificate for authentication. Declaration public bool ClientCertificateRequired { get; set; } Property Value Type Description System.Boolean true if the client is asked for a certificate for authentication; otherwise, false . The default value is false . ClientCertificateValidationCallback Gets or sets the callback used to validate the certificate supplied by the client. Declaration public RemoteCertificateValidationCallback ClientCertificateValidationCallback { get; set; } Property Value Type Description RemoteCertificateValidationCallback A delegate that invokes the method called for validating the certificate. The default value is a delegate that invokes a method that only returns true . Remarks The certificate is valid if the callback returns true . ClientCertificateValidationCallback Gets or sets the callback used to validate the certificate supplied by the client. Declaration public RemoteCertificateValidationCallback ClientCertificateValidationCallback { get; set; } Property Value Type Description RemoteCertificateValidationCallback A delegate that invokes the method called for validating the certificate. The default value is a delegate that invokes a method that only returns true . Remarks The certificate is valid if the callback returns true . EnabledSslProtocols Gets or sets the protocols used for authentication. Declaration public SslProtocols EnabledSslProtocols { get; set; } Property Value Type Description SslProtocols Any of the enum values. It represents the protocols used for authentication. The default value is . EnabledSslProtocols Gets or sets the protocols used for authentication. Declaration public SslProtocols EnabledSslProtocols { get; set; } Property Value Type Description SslProtocols Any of the enum values. It represents the protocols used for authentication. The default value is . ServerCertificate Gets or sets the certificate used to authenticate the server. Declaration public X509Certificate2 ServerCertificate { get; set; } Property Value Type Description X509Certificate2 A or null . The certificate represents an X.509 certificate. The default value is null . ServerCertificate Gets or sets the certificate used to authenticate the server. Declaration public X509Certificate2 ServerCertificate { get; set; } Property Value Type Description X509Certificate2 A or null . The certificate represents an X.509 certificate. The default value is null ."
  },
  "api/WebSocketSharp.Net.WebHeaderCollection.html": {
    "href": "api/WebSocketSharp.Net.WebHeaderCollection.html",
    "title": "Class WebHeaderCollection | Unity Algorand SDK",
    "keywords": "Class WebHeaderCollection Provides a collection of the HTTP headers associated with a request or response. Inheritance System.Object WebHeaderCollection Implements ISerializable NameValueCollection Namespace : WebSocketSharp.Net Assembly : cs.temp.dll.dll Syntax [Serializable] [Serializable] public class WebHeaderCollection : NameValueCollection Constructors WebHeaderCollection() Initializes a new instance of the WebHeaderCollection class. Declaration public WebHeaderCollection() WebHeaderCollection() Initializes a new instance of the WebHeaderCollection class. Declaration public WebHeaderCollection() WebHeaderCollection(SerializationInfo, StreamingContext) Initializes a new instance of the WebHeaderCollection class from the specified instances of the and classes. Declaration protected WebHeaderCollection(SerializationInfo serializationInfo, StreamingContext streamingContext) Parameters Type Name Description SerializationInfo serializationInfo A that contains the serialized object data. StreamingContext streamingContext A that specifies the source for the deserialization. Exceptions Type Condition System.ArgumentNullException serializationInfo is null . System.ArgumentException An element with the specified name is not found in serializationInfo . WebHeaderCollection(SerializationInfo, StreamingContext) Initializes a new instance of the WebHeaderCollection class from the specified instances of the and classes. Declaration protected WebHeaderCollection(SerializationInfo serializationInfo, StreamingContext streamingContext) Parameters Type Name Description SerializationInfo serializationInfo A that contains the serialized object data. StreamingContext streamingContext A that specifies the source for the deserialization. Exceptions Type Condition System.ArgumentNullException serializationInfo is null . System.ArgumentException An element with the specified name is not found in serializationInfo . Properties AllKeys Gets all header names in the collection. Declaration public override string[] AllKeys { get; } Property Value Type Description System.String [] An array of System.String that contains all header names in the collection. AllKeys Gets all header names in the collection. Declaration public override string[] AllKeys { get; } Property Value Type Description System.String [] An array of System.String that contains all header names in the collection. Count Gets the number of headers in the collection. Declaration public override int Count { get; } Property Value Type Description System.Int32 An System.Int32 that represents the number of headers in the collection. Count Gets the number of headers in the collection. Declaration public override int Count { get; } Property Value Type Description System.Int32 An System.Int32 that represents the number of headers in the collection. Item[HttpRequestHeader] Gets or sets the specified request header. Declaration public string this[HttpRequestHeader header] { get; set; } Parameters Type Name Description HttpRequestHeader header One of the HttpRequestHeader enum values. It specifies the request header to get or set. Property Value Type Description System.String A System.String that represents the value of the request header. Exceptions Type Condition System.ArgumentException header is a restricted header. -or- value contains an invalid character. System.ArgumentOutOfRangeException The length of value is greater than 65,535 characters. System.InvalidOperationException This instance does not allow the request header. Item[HttpRequestHeader] Gets or sets the specified request header. Declaration public string this[HttpRequestHeader header] { get; set; } Parameters Type Name Description HttpRequestHeader header One of the HttpRequestHeader enum values. It specifies the request header to get or set. Property Value Type Description System.String A System.String that represents the value of the request header. Exceptions Type Condition System.ArgumentException header is a restricted header. -or- value contains an invalid character. System.ArgumentOutOfRangeException The length of value is greater than 65,535 characters. System.InvalidOperationException This instance does not allow the request header. Item[HttpResponseHeader] Gets or sets the specified response header. Declaration public string this[HttpResponseHeader header] { get; set; } Parameters Type Name Description HttpResponseHeader header One of the HttpResponseHeader enum values. It specifies the response header to get or set. Property Value Type Description System.String A System.String that represents the value of the response header. Exceptions Type Condition System.ArgumentException header is a restricted header. -or- value contains an invalid character. System.ArgumentOutOfRangeException The length of value is greater than 65,535 characters. System.InvalidOperationException This instance does not allow the response header. Item[HttpResponseHeader] Gets or sets the specified response header. Declaration public string this[HttpResponseHeader header] { get; set; } Parameters Type Name Description HttpResponseHeader header One of the HttpResponseHeader enum values. It specifies the response header to get or set. Property Value Type Description System.String A System.String that represents the value of the response header. Exceptions Type Condition System.ArgumentException header is a restricted header. -or- value contains an invalid character. System.ArgumentOutOfRangeException The length of value is greater than 65,535 characters. System.InvalidOperationException This instance does not allow the response header. Keys Gets a collection of header names in the collection. Declaration public override NameObjectCollectionBase.KeysCollection Keys { get; } Property Value Type Description NameObjectCollectionBase.KeysCollection A that contains all header names in the collection. Keys Gets a collection of header names in the collection. Declaration public override NameObjectCollectionBase.KeysCollection Keys { get; } Property Value Type Description NameObjectCollectionBase.KeysCollection A that contains all header names in the collection. Methods Add(String) Adds the specified header to the collection. Declaration public void Add(string header) Parameters Type Name Description System.String header A System.String that specifies the header to add, with the name and value separated by a colon character (':'). Exceptions Type Condition System.ArgumentNullException header is null . System.ArgumentException header is an empty string. -or- header does not contain a colon character. -or- The name part of header is an empty string. -or- The name part of header is a string of spaces. -or- The name part of header contains an invalid character. -or- The value part of header contains an invalid character. -or- header is a restricted header. System.ArgumentOutOfRangeException The length of the value part of header is greater than 65,535 characters. System.InvalidOperationException This instance does not allow the header. Add(String) Adds the specified header to the collection. Declaration public void Add(string header) Parameters Type Name Description System.String header A System.String that specifies the header to add, with the name and value separated by a colon character (':'). Exceptions Type Condition System.ArgumentNullException header is null . System.ArgumentException header is an empty string. -or- header does not contain a colon character. -or- The name part of header is an empty string. -or- The name part of header is a string of spaces. -or- The name part of header contains an invalid character. -or- The value part of header contains an invalid character. -or- header is a restricted header. System.ArgumentOutOfRangeException The length of the value part of header is greater than 65,535 characters. System.InvalidOperationException This instance does not allow the header. Add(String, String) Adds a header with the specified name and value to the collection. Declaration public override void Add(string name, string value) Parameters Type Name Description System.String name A System.String that specifies the name of the header to add. System.String value A System.String that specifies the value of the header to add. Exceptions Type Condition System.ArgumentNullException name is null . System.ArgumentException name is an empty string. -or- name is a string of spaces. -or- name contains an invalid character. -or- value contains an invalid character. -or- name is a restricted header name. System.ArgumentOutOfRangeException The length of value is greater than 65,535 characters. System.InvalidOperationException This instance does not allow the header. Add(String, String) Adds a header with the specified name and value to the collection. Declaration public override void Add(string name, string value) Parameters Type Name Description System.String name A System.String that specifies the name of the header to add. System.String value A System.String that specifies the value of the header to add. Exceptions Type Condition System.ArgumentNullException name is null . System.ArgumentException name is an empty string. -or- name is a string of spaces. -or- name contains an invalid character. -or- value contains an invalid character. -or- name is a restricted header name. System.ArgumentOutOfRangeException The length of value is greater than 65,535 characters. System.InvalidOperationException This instance does not allow the header. Add(HttpRequestHeader, String) Adds the specified request header with the specified value to the collection. Declaration public void Add(HttpRequestHeader header, string value) Parameters Type Name Description HttpRequestHeader header One of the HttpRequestHeader enum values. It specifies the request header to add. System.String value A System.String that specifies the value of the header to add. Exceptions Type Condition System.ArgumentException value contains an invalid character. -or- header is a restricted header. System.ArgumentOutOfRangeException The length of value is greater than 65,535 characters. System.InvalidOperationException This instance does not allow the request header. Add(HttpRequestHeader, String) Adds the specified request header with the specified value to the collection. Declaration public void Add(HttpRequestHeader header, string value) Parameters Type Name Description HttpRequestHeader header One of the HttpRequestHeader enum values. It specifies the request header to add. System.String value A System.String that specifies the value of the header to add. Exceptions Type Condition System.ArgumentException value contains an invalid character. -or- header is a restricted header. System.ArgumentOutOfRangeException The length of value is greater than 65,535 characters. System.InvalidOperationException This instance does not allow the request header. Add(HttpResponseHeader, String) Adds the specified response header with the specified value to the collection. Declaration public void Add(HttpResponseHeader header, string value) Parameters Type Name Description HttpResponseHeader header One of the HttpResponseHeader enum values. It specifies the response header to add. System.String value A System.String that specifies the value of the header to add. Exceptions Type Condition System.ArgumentException value contains an invalid character. -or- header is a restricted header. System.ArgumentOutOfRangeException The length of value is greater than 65,535 characters. System.InvalidOperationException This instance does not allow the response header. Add(HttpResponseHeader, String) Adds the specified response header with the specified value to the collection. Declaration public void Add(HttpResponseHeader header, string value) Parameters Type Name Description HttpResponseHeader header One of the HttpResponseHeader enum values. It specifies the response header to add. System.String value A System.String that specifies the value of the header to add. Exceptions Type Condition System.ArgumentException value contains an invalid character. -or- header is a restricted header. System.ArgumentOutOfRangeException The length of value is greater than 65,535 characters. System.InvalidOperationException This instance does not allow the response header. AddWithoutValidate(String, String) Adds a header to the collection without checking if the header is on the restricted header list. Declaration protected void AddWithoutValidate(string headerName, string headerValue) Parameters Type Name Description System.String headerName A System.String that specifies the name of the header to add. System.String headerValue A System.String that specifies the value of the header to add. Exceptions Type Condition System.ArgumentNullException headerName is null . System.ArgumentException headerName is an empty string. -or- headerName is a string of spaces. -or- headerName contains an invalid character. -or- headerValue contains an invalid character. System.ArgumentOutOfRangeException The length of headerValue is greater than 65,535 characters. System.InvalidOperationException This instance does not allow the header. AddWithoutValidate(String, String) Adds a header to the collection without checking if the header is on the restricted header list. Declaration protected void AddWithoutValidate(string headerName, string headerValue) Parameters Type Name Description System.String headerName A System.String that specifies the name of the header to add. System.String headerValue A System.String that specifies the value of the header to add. Exceptions Type Condition System.ArgumentNullException headerName is null . System.ArgumentException headerName is an empty string. -or- headerName is a string of spaces. -or- headerName contains an invalid character. -or- headerValue contains an invalid character. System.ArgumentOutOfRangeException The length of headerValue is greater than 65,535 characters. System.InvalidOperationException This instance does not allow the header. Clear() Removes all headers from the collection. Declaration public override void Clear() Clear() Removes all headers from the collection. Declaration public override void Clear() Get(Int32) Get the value of the header at the specified index in the collection. Declaration public override string Get(int index) Parameters Type Name Description System.Int32 index An System.Int32 that specifies the zero-based index of the header to find. Returns Type Description System.String A System.String that receives the value of the header. Exceptions Type Condition System.ArgumentOutOfRangeException index is out of allowable range of indexes for the collection. Get(Int32) Get the value of the header at the specified index in the collection. Declaration public override string Get(int index) Parameters Type Name Description System.Int32 index An System.Int32 that specifies the zero-based index of the header to find. Returns Type Description System.String A System.String that receives the value of the header. Exceptions Type Condition System.ArgumentOutOfRangeException index is out of allowable range of indexes for the collection. Get(String) Get the value of the header with the specified name in the collection. Declaration public override string Get(string name) Parameters Type Name Description System.String name A System.String that specifies the name of the header to find. Returns Type Description System.String A System.String that receives the value of the header. null if not found. Get(String) Get the value of the header with the specified name in the collection. Declaration public override string Get(string name) Parameters Type Name Description System.String name A System.String that specifies the name of the header to find. Returns Type Description System.String A System.String that receives the value of the header. null if not found. GetEnumerator() Gets the enumerator used to iterate through the collection. Declaration public override IEnumerator GetEnumerator() Returns Type Description IEnumerator An instance used to iterate through the collection. GetEnumerator() Gets the enumerator used to iterate through the collection. Declaration public override IEnumerator GetEnumerator() Returns Type Description IEnumerator An instance used to iterate through the collection. GetKey(Int32) Get the name of the header at the specified index in the collection. Declaration public override string GetKey(int index) Parameters Type Name Description System.Int32 index An System.Int32 that specifies the zero-based index of the header to find. Returns Type Description System.String A System.String that receives the name of the header. Exceptions Type Condition System.ArgumentOutOfRangeException index is out of allowable range of indexes for the collection. GetKey(Int32) Get the name of the header at the specified index in the collection. Declaration public override string GetKey(int index) Parameters Type Name Description System.Int32 index An System.Int32 that specifies the zero-based index of the header to find. Returns Type Description System.String A System.String that receives the name of the header. Exceptions Type Condition System.ArgumentOutOfRangeException index is out of allowable range of indexes for the collection. GetObjectData(SerializationInfo, StreamingContext) Populates a instance with the data needed to serialize this instance. Declaration public override void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext) Parameters Type Name Description SerializationInfo serializationInfo A to populate with the data. StreamingContext streamingContext A that specifies the destination for the serialization. Exceptions Type Condition System.ArgumentNullException serializationInfo is null . GetObjectData(SerializationInfo, StreamingContext) Populates a instance with the data needed to serialize this instance. Declaration public override void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext) Parameters Type Name Description SerializationInfo serializationInfo A to populate with the data. StreamingContext streamingContext A that specifies the destination for the serialization. Exceptions Type Condition System.ArgumentNullException serializationInfo is null . GetValues(Int32) Get the values of the header at the specified index in the collection. Declaration public override string[] GetValues(int index) Parameters Type Name Description System.Int32 index An System.Int32 that specifies the zero-based index of the header to find. Returns Type Description System.String [] An array of System.String that receives the values of the header. null if not present. Exceptions Type Condition System.ArgumentOutOfRangeException index is out of allowable range of indexes for the collection. GetValues(Int32) Get the values of the header at the specified index in the collection. Declaration public override string[] GetValues(int index) Parameters Type Name Description System.Int32 index An System.Int32 that specifies the zero-based index of the header to find. Returns Type Description System.String [] An array of System.String that receives the values of the header. null if not present. Exceptions Type Condition System.ArgumentOutOfRangeException index is out of allowable range of indexes for the collection. GetValues(String) Get the values of the header with the specified name in the collection. Declaration public override string[] GetValues(string name) Parameters Type Name Description System.String name A System.String that specifies the name of the header to find. Returns Type Description System.String [] An array of System.String that receives the values of the header. null if not present. GetValues(String) Get the values of the header with the specified name in the collection. Declaration public override string[] GetValues(string name) Parameters Type Name Description System.String name A System.String that specifies the name of the header to find. Returns Type Description System.String [] An array of System.String that receives the values of the header. null if not present. IsRestricted(String) Determines whether the specified HTTP header can be set for the request. Declaration public static bool IsRestricted(string headerName) Parameters Type Name Description System.String headerName A System.String that specifies the name of the header to test. Returns Type Description System.Boolean true if the header cannot be set; otherwise, false . Exceptions Type Condition System.ArgumentNullException headerName is null . System.ArgumentException headerName is an empty string. -or- headerName is a string of spaces. -or- headerName contains an invalid character. IsRestricted(String) Determines whether the specified HTTP header can be set for the request. Declaration public static bool IsRestricted(string headerName) Parameters Type Name Description System.String headerName A System.String that specifies the name of the header to test. Returns Type Description System.Boolean true if the header cannot be set; otherwise, false . Exceptions Type Condition System.ArgumentNullException headerName is null . System.ArgumentException headerName is an empty string. -or- headerName is a string of spaces. -or- headerName contains an invalid character. IsRestricted(String, Boolean) Determines whether the specified HTTP header can be set for the request or the response. Declaration public static bool IsRestricted(string headerName, bool response) Parameters Type Name Description System.String headerName A System.String that specifies the name of the header to test. System.Boolean response A System.Boolean : true if the test is for the response; otherwise, false . Returns Type Description System.Boolean true if the header cannot be set; otherwise, false . Exceptions Type Condition System.ArgumentNullException headerName is null . System.ArgumentException headerName is an empty string. -or- headerName is a string of spaces. -or- headerName contains an invalid character. IsRestricted(String, Boolean) Determines whether the specified HTTP header can be set for the request or the response. Declaration public static bool IsRestricted(string headerName, bool response) Parameters Type Name Description System.String headerName A System.String that specifies the name of the header to test. System.Boolean response A System.Boolean : true if the test is for the response; otherwise, false . Returns Type Description System.Boolean true if the header cannot be set; otherwise, false . Exceptions Type Condition System.ArgumentNullException headerName is null . System.ArgumentException headerName is an empty string. -or- headerName is a string of spaces. -or- headerName contains an invalid character. OnDeserialization(Object) Implements the interface and raises the deserialization event when the deserialization is complete. Declaration public override void OnDeserialization(object sender) Parameters Type Name Description System.Object sender An System.Object instance that represents the source of the deserialization event. OnDeserialization(Object) Implements the interface and raises the deserialization event when the deserialization is complete. Declaration public override void OnDeserialization(object sender) Parameters Type Name Description System.Object sender An System.Object instance that represents the source of the deserialization event. Remove(String) Removes the specified header from the collection. Declaration public override void Remove(string name) Parameters Type Name Description System.String name A System.String that specifies the name of the header to remove. Exceptions Type Condition System.ArgumentNullException name is null . System.ArgumentException name is an empty string. -or- name is a string of spaces. -or- name contains an invalid character. -or- name is a restricted header name. System.InvalidOperationException This instance does not allow the header. Remove(String) Removes the specified header from the collection. Declaration public override void Remove(string name) Parameters Type Name Description System.String name A System.String that specifies the name of the header to remove. Exceptions Type Condition System.ArgumentNullException name is null . System.ArgumentException name is an empty string. -or- name is a string of spaces. -or- name contains an invalid character. -or- name is a restricted header name. System.InvalidOperationException This instance does not allow the header. Remove(HttpRequestHeader) Removes the specified request header from the collection. Declaration public void Remove(HttpRequestHeader header) Parameters Type Name Description HttpRequestHeader header One of the HttpRequestHeader enum values. It specifies the request header to remove. Exceptions Type Condition System.ArgumentException header is a restricted header. System.InvalidOperationException This instance does not allow the request header. Remove(HttpRequestHeader) Removes the specified request header from the collection. Declaration public void Remove(HttpRequestHeader header) Parameters Type Name Description HttpRequestHeader header One of the HttpRequestHeader enum values. It specifies the request header to remove. Exceptions Type Condition System.ArgumentException header is a restricted header. System.InvalidOperationException This instance does not allow the request header. Remove(HttpResponseHeader) Removes the specified response header from the collection. Declaration public void Remove(HttpResponseHeader header) Parameters Type Name Description HttpResponseHeader header One of the HttpResponseHeader enum values. It specifies the response header to remove. Exceptions Type Condition System.ArgumentException header is a restricted header. System.InvalidOperationException This instance does not allow the response header. Remove(HttpResponseHeader) Removes the specified response header from the collection. Declaration public void Remove(HttpResponseHeader header) Parameters Type Name Description HttpResponseHeader header One of the HttpResponseHeader enum values. It specifies the response header to remove. Exceptions Type Condition System.ArgumentException header is a restricted header. System.InvalidOperationException This instance does not allow the response header. Set(String, String) Sets the specified header to the specified value. Declaration public override void Set(string name, string value) Parameters Type Name Description System.String name A System.String that specifies the name of the header to set. System.String value A System.String that specifies the value of the header to set. Exceptions Type Condition System.ArgumentNullException name is null . System.ArgumentException name is an empty string. -or- name is a string of spaces. -or- name contains an invalid character. -or- value contains an invalid character. -or- name is a restricted header name. System.ArgumentOutOfRangeException The length of value is greater than 65,535 characters. System.InvalidOperationException This instance does not allow the header. Set(String, String) Sets the specified header to the specified value. Declaration public override void Set(string name, string value) Parameters Type Name Description System.String name A System.String that specifies the name of the header to set. System.String value A System.String that specifies the value of the header to set. Exceptions Type Condition System.ArgumentNullException name is null . System.ArgumentException name is an empty string. -or- name is a string of spaces. -or- name contains an invalid character. -or- value contains an invalid character. -or- name is a restricted header name. System.ArgumentOutOfRangeException The length of value is greater than 65,535 characters. System.InvalidOperationException This instance does not allow the header. Set(HttpRequestHeader, String) Sets the specified request header to the specified value. Declaration public void Set(HttpRequestHeader header, string value) Parameters Type Name Description HttpRequestHeader header One of the HttpRequestHeader enum values. It specifies the request header to set. System.String value A System.String that specifies the value of the request header to set. Exceptions Type Condition System.ArgumentException value contains an invalid character. -or- header is a restricted header. System.ArgumentOutOfRangeException The length of value is greater than 65,535 characters. System.InvalidOperationException This instance does not allow the request header. Set(HttpRequestHeader, String) Sets the specified request header to the specified value. Declaration public void Set(HttpRequestHeader header, string value) Parameters Type Name Description HttpRequestHeader header One of the HttpRequestHeader enum values. It specifies the request header to set. System.String value A System.String that specifies the value of the request header to set. Exceptions Type Condition System.ArgumentException value contains an invalid character. -or- header is a restricted header. System.ArgumentOutOfRangeException The length of value is greater than 65,535 characters. System.InvalidOperationException This instance does not allow the request header. Set(HttpResponseHeader, String) Sets the specified response header to the specified value. Declaration public void Set(HttpResponseHeader header, string value) Parameters Type Name Description HttpResponseHeader header One of the HttpResponseHeader enum values. It specifies the response header to set. System.String value A System.String that specifies the value of the response header to set. Exceptions Type Condition System.ArgumentException value contains an invalid character. -or- header is a restricted header. System.ArgumentOutOfRangeException The length of value is greater than 65,535 characters. System.InvalidOperationException This instance does not allow the response header. Set(HttpResponseHeader, String) Sets the specified response header to the specified value. Declaration public void Set(HttpResponseHeader header, string value) Parameters Type Name Description HttpResponseHeader header One of the HttpResponseHeader enum values. It specifies the response header to set. System.String value A System.String that specifies the value of the response header to set. Exceptions Type Condition System.ArgumentException value contains an invalid character. -or- header is a restricted header. System.ArgumentOutOfRangeException The length of value is greater than 65,535 characters. System.InvalidOperationException This instance does not allow the response header. ToByteArray() Converts the current instance to an array of byte. Declaration public byte[] ToByteArray() Returns Type Description System.Byte [] An array of System.Byte converted from a string that represents the current instance. ToByteArray() Converts the current instance to an array of byte. Declaration public byte[] ToByteArray() Returns Type Description System.Byte [] An array of System.Byte converted from a string that represents the current instance. ToString() Returns a string that represents the current instance. Declaration public override string ToString() Returns Type Description System.String A System.String that represents all headers in the collection. ToString() Returns a string that represents the current instance. Declaration public override string ToString() Returns Type Description System.String A System.String that represents all headers in the collection. Implements ISerializable NameValueCollection"
  },
  "api/WebSocketSharp.Net.WebSockets.html": {
    "href": "api/WebSocketSharp.Net.WebSockets.html",
    "title": "Namespace WebSocketSharp.Net.WebSockets | Unity Algorand SDK",
    "keywords": "Namespace WebSocketSharp.Net.WebSockets Classes HttpListenerWebSocketContext Provides the access to the information in a WebSocket handshake request to a HttpListener instance. WebSocketContext Exposes the access to the information in a WebSocket handshake request."
  },
  "api/WebSocketSharp.Net.WebSockets.HttpListenerWebSocketContext.html": {
    "href": "api/WebSocketSharp.Net.WebSockets.HttpListenerWebSocketContext.html",
    "title": "Class HttpListenerWebSocketContext | Unity Algorand SDK",
    "keywords": "Class HttpListenerWebSocketContext Provides the access to the information in a WebSocket handshake request to a HttpListener instance. Inheritance System.Object WebSocketContext HttpListenerWebSocketContext Namespace : WebSocketSharp.Net.WebSockets Assembly : cs.temp.dll.dll Syntax public class HttpListenerWebSocketContext : WebSocketContext Properties CookieCollection Gets the HTTP cookies included in the handshake request. Declaration public override CookieCollection CookieCollection { get; } Property Value Type Description CookieCollection A CookieCollection that contains the cookies. An empty collection if not included. Overrides WebSocketContext.CookieCollection CookieCollection Gets the HTTP cookies included in the handshake request. Declaration public override CookieCollection CookieCollection { get; } Property Value Type Description CookieCollection A CookieCollection that contains the cookies. An empty collection if not included. Overrides WebSocketContext.CookieCollection Headers Gets the HTTP headers included in the handshake request. Declaration public override NameValueCollection Headers { get; } Property Value Type Description NameValueCollection A that contains the headers. Overrides WebSocketContext.Headers Headers Gets the HTTP headers included in the handshake request. Declaration public override NameValueCollection Headers { get; } Property Value Type Description NameValueCollection A that contains the headers. Overrides WebSocketContext.Headers Host Gets the value of the Host header included in the handshake request. Declaration public override string Host { get; } Property Value Type Description System.String A System.String that represents the server host name requested by the client. It includes the port number if provided. Overrides WebSocketContext.Host Host Gets the value of the Host header included in the handshake request. Declaration public override string Host { get; } Property Value Type Description System.String A System.String that represents the server host name requested by the client. It includes the port number if provided. Overrides WebSocketContext.Host IsAuthenticated Gets a value indicating whether the client is authenticated. Declaration public override bool IsAuthenticated { get; } Property Value Type Description System.Boolean true if the client is authenticated; otherwise, false . Overrides WebSocketContext.IsAuthenticated IsAuthenticated Gets a value indicating whether the client is authenticated. Declaration public override bool IsAuthenticated { get; } Property Value Type Description System.Boolean true if the client is authenticated; otherwise, false . Overrides WebSocketContext.IsAuthenticated IsLocal Gets a value indicating whether the handshake request is sent from the local computer. Declaration public override bool IsLocal { get; } Property Value Type Description System.Boolean true if the handshake request is sent from the same computer as the server; otherwise, false . Overrides WebSocketContext.IsLocal IsLocal Gets a value indicating whether the handshake request is sent from the local computer. Declaration public override bool IsLocal { get; } Property Value Type Description System.Boolean true if the handshake request is sent from the same computer as the server; otherwise, false . Overrides WebSocketContext.IsLocal IsSecureConnection Gets a value indicating whether a secure connection is used to send the handshake request. Declaration public override bool IsSecureConnection { get; } Property Value Type Description System.Boolean true if the connection is secure; otherwise, false . Overrides WebSocketContext.IsSecureConnection IsSecureConnection Gets a value indicating whether a secure connection is used to send the handshake request. Declaration public override bool IsSecureConnection { get; } Property Value Type Description System.Boolean true if the connection is secure; otherwise, false . Overrides WebSocketContext.IsSecureConnection IsWebSocketRequest Gets a value indicating whether the request is a WebSocket handshake request. Declaration public override bool IsWebSocketRequest { get; } Property Value Type Description System.Boolean true if the request is a WebSocket handshake request; otherwise, false . Overrides WebSocketContext.IsWebSocketRequest IsWebSocketRequest Gets a value indicating whether the request is a WebSocket handshake request. Declaration public override bool IsWebSocketRequest { get; } Property Value Type Description System.Boolean true if the request is a WebSocket handshake request; otherwise, false . Overrides WebSocketContext.IsWebSocketRequest Origin Gets the value of the Origin header included in the handshake request. Declaration public override string Origin { get; } Property Value Type Description System.String A System.String that represents the value of the Origin header. null if the header is not present. Overrides WebSocketContext.Origin Origin Gets the value of the Origin header included in the handshake request. Declaration public override string Origin { get; } Property Value Type Description System.String A System.String that represents the value of the Origin header. null if the header is not present. Overrides WebSocketContext.Origin QueryString Gets the query string included in the handshake request. Declaration public override NameValueCollection QueryString { get; } Property Value Type Description NameValueCollection A that contains the query parameters. An empty collection if not included. Overrides WebSocketContext.QueryString QueryString Gets the query string included in the handshake request. Declaration public override NameValueCollection QueryString { get; } Property Value Type Description NameValueCollection A that contains the query parameters. An empty collection if not included. Overrides WebSocketContext.QueryString RequestUri Gets the URI requested by the client. Declaration public override Uri RequestUri { get; } Property Value Type Description System.Uri A System.Uri that represents the URI parsed from the request. null if the URI cannot be parsed. Overrides WebSocketContext.RequestUri RequestUri Gets the URI requested by the client. Declaration public override Uri RequestUri { get; } Property Value Type Description System.Uri A System.Uri that represents the URI parsed from the request. null if the URI cannot be parsed. Overrides WebSocketContext.RequestUri SecWebSocketKey Gets the value of the Sec-WebSocket-Key header included in the handshake request. Declaration public override string SecWebSocketKey { get; } Property Value Type Description System.String A System.String that represents the value of the Sec-WebSocket-Key header. The value is used to prove that the server received a valid WebSocket handshake request. null if the header is not present. Overrides WebSocketContext.SecWebSocketKey SecWebSocketKey Gets the value of the Sec-WebSocket-Key header included in the handshake request. Declaration public override string SecWebSocketKey { get; } Property Value Type Description System.String A System.String that represents the value of the Sec-WebSocket-Key header. The value is used to prove that the server received a valid WebSocket handshake request. null if the header is not present. Overrides WebSocketContext.SecWebSocketKey SecWebSocketProtocols Gets the names of the subprotocols from the Sec-WebSocket-Protocol header included in the handshake request. Declaration public override IEnumerable<string> SecWebSocketProtocols { get; } Property Value Type Description IEnumerable < System.String > An System.Collections.Generic.IEnumerable{string} instance. It provides an enumerator which supports the iteration over the collection of the names of the subprotocols. Overrides WebSocketContext.SecWebSocketProtocols SecWebSocketProtocols Gets the names of the subprotocols from the Sec-WebSocket-Protocol header included in the handshake request. Declaration public override IEnumerable<string> SecWebSocketProtocols { get; } Property Value Type Description IEnumerable < System.String > An System.Collections.Generic.IEnumerable{string} instance. It provides an enumerator which supports the iteration over the collection of the names of the subprotocols. Overrides WebSocketContext.SecWebSocketProtocols SecWebSocketVersion Gets the value of the Sec-WebSocket-Version header included in the handshake request. Declaration public override string SecWebSocketVersion { get; } Property Value Type Description System.String A System.String that represents the WebSocket protocol version specified by the client. null if the header is not present. Overrides WebSocketContext.SecWebSocketVersion SecWebSocketVersion Gets the value of the Sec-WebSocket-Version header included in the handshake request. Declaration public override string SecWebSocketVersion { get; } Property Value Type Description System.String A System.String that represents the WebSocket protocol version specified by the client. null if the header is not present. Overrides WebSocketContext.SecWebSocketVersion ServerEndPoint Gets the endpoint to which the handshake request is sent. Declaration public override IPEndPoint ServerEndPoint { get; } Property Value Type Description System.Net.IPEndPoint A System.Net.IPEndPoint that represents the server IP address and port number. Overrides WebSocketContext.ServerEndPoint ServerEndPoint Gets the endpoint to which the handshake request is sent. Declaration public override IPEndPoint ServerEndPoint { get; } Property Value Type Description System.Net.IPEndPoint A System.Net.IPEndPoint that represents the server IP address and port number. Overrides WebSocketContext.ServerEndPoint User Gets the client information. Declaration public override IPrincipal User { get; } Property Value Type Description IPrincipal A instance that represents identity, authentication, and security roles for the client. null if the client is not authenticated. Overrides WebSocketContext.User User Gets the client information. Declaration public override IPrincipal User { get; } Property Value Type Description IPrincipal A instance that represents identity, authentication, and security roles for the client. null if the client is not authenticated. Overrides WebSocketContext.User UserEndPoint Gets the endpoint from which the handshake request is sent. Declaration public override IPEndPoint UserEndPoint { get; } Property Value Type Description System.Net.IPEndPoint A System.Net.IPEndPoint that represents the client IP address and port number. Overrides WebSocketContext.UserEndPoint UserEndPoint Gets the endpoint from which the handshake request is sent. Declaration public override IPEndPoint UserEndPoint { get; } Property Value Type Description System.Net.IPEndPoint A System.Net.IPEndPoint that represents the client IP address and port number. Overrides WebSocketContext.UserEndPoint WebSocket Gets the WebSocket instance used for two-way communication between the client and server. Declaration public override WebSocket WebSocket { get; } Property Value Type Description WebSocket A WebSocket . Overrides WebSocketContext.WebSocket WebSocket Gets the WebSocket instance used for two-way communication between the client and server. Declaration public override WebSocket WebSocket { get; } Property Value Type Description WebSocket A WebSocket . Overrides WebSocketContext.WebSocket Methods ToString() Returns a string that represents the current instance. Declaration public override string ToString() Returns Type Description System.String A System.String that contains the request line and headers included in the handshake request. Overrides System.Object.ToString() ToString() Returns a string that represents the current instance. Declaration public override string ToString() Returns Type Description System.String A System.String that contains the request line and headers included in the handshake request. Overrides System.Object.ToString()"
  },
  "api/WebSocketSharp.Net.WebSockets.WebSocketContext.html": {
    "href": "api/WebSocketSharp.Net.WebSockets.WebSocketContext.html",
    "title": "Class WebSocketContext | Unity Algorand SDK",
    "keywords": "Class WebSocketContext Exposes the access to the information in a WebSocket handshake request. Inheritance System.Object WebSocketContext HttpListenerWebSocketContext Namespace : WebSocketSharp.Net.WebSockets Assembly : cs.temp.dll.dll Syntax public abstract class WebSocketContext Remarks This class is an abstract class. Constructors WebSocketContext() Initializes a new instance of the WebSocketContext class. Declaration protected WebSocketContext() WebSocketContext() Initializes a new instance of the WebSocketContext class. Declaration protected WebSocketContext() Properties CookieCollection Gets the HTTP cookies included in the handshake request. Declaration public abstract CookieCollection CookieCollection { get; } Property Value Type Description CookieCollection A CookieCollection that contains the cookies. CookieCollection Gets the HTTP cookies included in the handshake request. Declaration public abstract CookieCollection CookieCollection { get; } Property Value Type Description CookieCollection A CookieCollection that contains the cookies. Headers Gets the HTTP headers included in the handshake request. Declaration public abstract NameValueCollection Headers { get; } Property Value Type Description NameValueCollection A that contains the headers. Headers Gets the HTTP headers included in the handshake request. Declaration public abstract NameValueCollection Headers { get; } Property Value Type Description NameValueCollection A that contains the headers. Host Gets the value of the Host header included in the handshake request. Declaration public abstract string Host { get; } Property Value Type Description System.String A System.String that represents the server host name requested by the client. Host Gets the value of the Host header included in the handshake request. Declaration public abstract string Host { get; } Property Value Type Description System.String A System.String that represents the server host name requested by the client. IsAuthenticated Gets a value indicating whether the client is authenticated. Declaration public abstract bool IsAuthenticated { get; } Property Value Type Description System.Boolean true if the client is authenticated; otherwise, false . IsAuthenticated Gets a value indicating whether the client is authenticated. Declaration public abstract bool IsAuthenticated { get; } Property Value Type Description System.Boolean true if the client is authenticated; otherwise, false . IsLocal Gets a value indicating whether the handshake request is sent from the local computer. Declaration public abstract bool IsLocal { get; } Property Value Type Description System.Boolean true if the handshake request is sent from the same computer as the server; otherwise, false . IsLocal Gets a value indicating whether the handshake request is sent from the local computer. Declaration public abstract bool IsLocal { get; } Property Value Type Description System.Boolean true if the handshake request is sent from the same computer as the server; otherwise, false . IsSecureConnection Gets a value indicating whether a secure connection is used to send the handshake request. Declaration public abstract bool IsSecureConnection { get; } Property Value Type Description System.Boolean true if the connection is secure; otherwise, false . IsSecureConnection Gets a value indicating whether a secure connection is used to send the handshake request. Declaration public abstract bool IsSecureConnection { get; } Property Value Type Description System.Boolean true if the connection is secure; otherwise, false . IsWebSocketRequest Gets a value indicating whether the request is a WebSocket handshake request. Declaration public abstract bool IsWebSocketRequest { get; } Property Value Type Description System.Boolean true if the request is a WebSocket handshake request; otherwise, false . IsWebSocketRequest Gets a value indicating whether the request is a WebSocket handshake request. Declaration public abstract bool IsWebSocketRequest { get; } Property Value Type Description System.Boolean true if the request is a WebSocket handshake request; otherwise, false . Origin Gets the value of the Origin header included in the handshake request. Declaration public abstract string Origin { get; } Property Value Type Description System.String A System.String that represents the value of the Origin header. Origin Gets the value of the Origin header included in the handshake request. Declaration public abstract string Origin { get; } Property Value Type Description System.String A System.String that represents the value of the Origin header. QueryString Gets the query string included in the handshake request. Declaration public abstract NameValueCollection QueryString { get; } Property Value Type Description NameValueCollection A that contains the query parameters. QueryString Gets the query string included in the handshake request. Declaration public abstract NameValueCollection QueryString { get; } Property Value Type Description NameValueCollection A that contains the query parameters. RequestUri Gets the URI requested by the client. Declaration public abstract Uri RequestUri { get; } Property Value Type Description System.Uri A System.Uri that represents the URI parsed from the request. RequestUri Gets the URI requested by the client. Declaration public abstract Uri RequestUri { get; } Property Value Type Description System.Uri A System.Uri that represents the URI parsed from the request. SecWebSocketKey Gets the value of the Sec-WebSocket-Key header included in the handshake request. Declaration public abstract string SecWebSocketKey { get; } Property Value Type Description System.String A System.String that represents the value of the Sec-WebSocket-Key header. The value is used to prove that the server received a valid WebSocket handshake request. SecWebSocketKey Gets the value of the Sec-WebSocket-Key header included in the handshake request. Declaration public abstract string SecWebSocketKey { get; } Property Value Type Description System.String A System.String that represents the value of the Sec-WebSocket-Key header. The value is used to prove that the server received a valid WebSocket handshake request. SecWebSocketProtocols Gets the names of the subprotocols from the Sec-WebSocket-Protocol header included in the handshake request. Declaration public abstract IEnumerable<string> SecWebSocketProtocols { get; } Property Value Type Description IEnumerable < System.String > An System.Collections.Generic.IEnumerable{string} instance. It provides an enumerator which supports the iteration over the collection of the names of the subprotocols. SecWebSocketProtocols Gets the names of the subprotocols from the Sec-WebSocket-Protocol header included in the handshake request. Declaration public abstract IEnumerable<string> SecWebSocketProtocols { get; } Property Value Type Description IEnumerable < System.String > An System.Collections.Generic.IEnumerable{string} instance. It provides an enumerator which supports the iteration over the collection of the names of the subprotocols. SecWebSocketVersion Gets the value of the Sec-WebSocket-Version header included in the handshake request. Declaration public abstract string SecWebSocketVersion { get; } Property Value Type Description System.String A System.String that represents the WebSocket protocol version specified by the client. SecWebSocketVersion Gets the value of the Sec-WebSocket-Version header included in the handshake request. Declaration public abstract string SecWebSocketVersion { get; } Property Value Type Description System.String A System.String that represents the WebSocket protocol version specified by the client. ServerEndPoint Gets the endpoint to which the handshake request is sent. Declaration public abstract IPEndPoint ServerEndPoint { get; } Property Value Type Description System.Net.IPEndPoint A System.Net.IPEndPoint that represents the server IP address and port number. ServerEndPoint Gets the endpoint to which the handshake request is sent. Declaration public abstract IPEndPoint ServerEndPoint { get; } Property Value Type Description System.Net.IPEndPoint A System.Net.IPEndPoint that represents the server IP address and port number. User Gets the client information. Declaration public abstract IPrincipal User { get; } Property Value Type Description IPrincipal A instance that represents identity, authentication, and security roles for the client. User Gets the client information. Declaration public abstract IPrincipal User { get; } Property Value Type Description IPrincipal A instance that represents identity, authentication, and security roles for the client. UserEndPoint Gets the endpoint from which the handshake request is sent. Declaration public abstract IPEndPoint UserEndPoint { get; } Property Value Type Description System.Net.IPEndPoint A System.Net.IPEndPoint that represents the client IP address and port number. UserEndPoint Gets the endpoint from which the handshake request is sent. Declaration public abstract IPEndPoint UserEndPoint { get; } Property Value Type Description System.Net.IPEndPoint A System.Net.IPEndPoint that represents the client IP address and port number. WebSocket Gets the WebSocket instance used for two-way communication between the client and server. Declaration public abstract WebSocket WebSocket { get; } Property Value Type Description WebSocket A WebSocket . WebSocket Gets the WebSocket instance used for two-way communication between the client and server. Declaration public abstract WebSocket WebSocket { get; } Property Value Type Description WebSocket A WebSocket ."
  },
  "api/WebSocketSharp.Server.html": {
    "href": "api/WebSocketSharp.Server.html",
    "title": "Namespace WebSocketSharp.Server | Unity Algorand SDK",
    "keywords": "Namespace WebSocketSharp.Server Classes HttpRequestEventArgs Represents the event data for the HTTP request events of the HttpServer class. HttpServer Provides a simple HTTP server. WebSocketBehavior Exposes a set of methods and properties used to define the behavior of a WebSocket service provided by the WebSocketServer or HttpServer . WebSocketServer Provides a WebSocket protocol server. WebSocketServiceHost Exposes the methods and properties used to access the information in a WebSocket service provided by the WebSocketServer or HttpServer . WebSocketServiceManager Provides the management function for the WebSocket services. WebSocketSessionManager Provides the management function for the sessions in a WebSocket service. Interfaces IWebSocketSession Exposes the access to the information in a WebSocket session."
  },
  "api/WebSocketSharp.Server.HttpRequestEventArgs.html": {
    "href": "api/WebSocketSharp.Server.HttpRequestEventArgs.html",
    "title": "Class HttpRequestEventArgs | Unity Algorand SDK",
    "keywords": "Class HttpRequestEventArgs Represents the event data for the HTTP request events of the HttpServer class. Inheritance System.Object System.EventArgs HttpRequestEventArgs Inherited Members System.EventArgs.Empty Namespace : WebSocketSharp.Server Assembly : cs.temp.dll.dll Syntax public class HttpRequestEventArgs : EventArgs Remarks An HTTP request event occurs when the HttpServer instance receives an HTTP request. You should access the Request property if you would like to get the request data sent from a client. And you should access the Response property if you would like to get the response data to return to the client. Properties Request Gets the request data sent from a client. Declaration public HttpListenerRequest Request { get; } Property Value Type Description HttpListenerRequest A that provides the methods and properties for the request data. Request Gets the request data sent from a client. Declaration public HttpListenerRequest Request { get; } Property Value Type Description HttpListenerRequest A that provides the methods and properties for the request data. Response Gets the response data to return to the client. Declaration public HttpListenerResponse Response { get; } Property Value Type Description HttpListenerResponse A that provides the methods and properties for the response data. Response Gets the response data to return to the client. Declaration public HttpListenerResponse Response { get; } Property Value Type Description HttpListenerResponse A that provides the methods and properties for the response data. User Gets the information for the client. Declaration public IPrincipal User { get; } Property Value Type Description IPrincipal A instance or null if not authenticated. That instance describes the identity, authentication scheme, and security roles for the client. User Gets the information for the client. Declaration public IPrincipal User { get; } Property Value Type Description IPrincipal A instance or null if not authenticated. That instance describes the identity, authentication scheme, and security roles for the client. Methods ReadFile(String) Reads the specified file from the document folder of the HttpServer class. Declaration public byte[] ReadFile(string path) Parameters Type Name Description System.String path A System.String that specifies a virtual path to find the file from the document folder. Returns Type Description System.Byte [] An array of System.Byte or null if it fails. That array receives the contents of the file. Exceptions Type Condition System.ArgumentNullException path is null . System.ArgumentException path is an empty string. -or- path contains \"..\". ReadFile(String) Reads the specified file from the document folder of the HttpServer class. Declaration public byte[] ReadFile(string path) Parameters Type Name Description System.String path A System.String that specifies a virtual path to find the file from the document folder. Returns Type Description System.Byte [] An array of System.Byte or null if it fails. That array receives the contents of the file. Exceptions Type Condition System.ArgumentNullException path is null . System.ArgumentException path is an empty string. -or- path contains \"..\". TryReadFile(String, out Byte[]) Tries to read the specified file from the document folder of the HttpServer class. Declaration public bool TryReadFile(string path, out byte[] contents) Parameters Type Name Description System.String path A System.String that specifies a virtual path to find the file from the document folder. System.Byte [] contents When this method returns, an array of System.Byte or null if it fails. That array receives the contents of the file. Returns Type Description System.Boolean true if it succeeds to read; otherwise, false . Exceptions Type Condition System.ArgumentNullException path is null . System.ArgumentException path is an empty string. -or- path contains \"..\". TryReadFile(String, out Byte[]) Tries to read the specified file from the document folder of the HttpServer class. Declaration public bool TryReadFile(string path, out byte[] contents) Parameters Type Name Description System.String path A System.String that specifies a virtual path to find the file from the document folder. System.Byte [] contents When this method returns, an array of System.Byte or null if it fails. That array receives the contents of the file. Returns Type Description System.Boolean true if it succeeds to read; otherwise, false . Exceptions Type Condition System.ArgumentNullException path is null . System.ArgumentException path is an empty string. -or- path contains \"..\"."
  },
  "api/WebSocketSharp.Server.HttpServer.html": {
    "href": "api/WebSocketSharp.Server.HttpServer.html",
    "title": "Class HttpServer | Unity Algorand SDK",
    "keywords": "Class HttpServer Provides a simple HTTP server. Inheritance System.Object HttpServer Namespace : WebSocketSharp.Server Assembly : cs.temp.dll.dll Syntax public class HttpServer Remarks The server supports HTTP/1.1 version request and response. And the server allows to accept WebSocket handshake requests. This class can provide multiple WebSocket services. Constructors HttpServer() Initializes a new instance of the HttpServer class. Declaration public HttpServer() Remarks The new instance listens for incoming requests on System.Net.IPAddress.Any and port 80. HttpServer() Initializes a new instance of the HttpServer class. Declaration public HttpServer() Remarks The new instance listens for incoming requests on System.Net.IPAddress.Any and port 80. HttpServer(Int32) Initializes a new instance of the HttpServer class with the specified port. Declaration public HttpServer(int port) Parameters Type Name Description System.Int32 port An System.Int32 that specifies the number of the port on which to listen. Remarks The new instance listens for incoming requests on System.Net.IPAddress.Any and port . It provides secure connections if port is 443. Exceptions Type Condition System.ArgumentOutOfRangeException port is less than 1 or greater than 65535. HttpServer(Int32) Initializes a new instance of the HttpServer class with the specified port. Declaration public HttpServer(int port) Parameters Type Name Description System.Int32 port An System.Int32 that specifies the number of the port on which to listen. Remarks The new instance listens for incoming requests on System.Net.IPAddress.Any and port . It provides secure connections if port is 443. Exceptions Type Condition System.ArgumentOutOfRangeException port is less than 1 or greater than 65535. HttpServer(Int32, Boolean) Initializes a new instance of the HttpServer class with the specified port and boolean if secure or not. Declaration public HttpServer(int port, bool secure) Parameters Type Name Description System.Int32 port An System.Int32 that specifies the number of the port on which to listen. System.Boolean secure A System.Boolean : true if the new instance provides secure connections; otherwise, false . Remarks The new instance listens for incoming requests on System.Net.IPAddress.Any and port . Exceptions Type Condition System.ArgumentOutOfRangeException port is less than 1 or greater than 65535. HttpServer(Int32, Boolean) Initializes a new instance of the HttpServer class with the specified port and boolean if secure or not. Declaration public HttpServer(int port, bool secure) Parameters Type Name Description System.Int32 port An System.Int32 that specifies the number of the port on which to listen. System.Boolean secure A System.Boolean : true if the new instance provides secure connections; otherwise, false . Remarks The new instance listens for incoming requests on System.Net.IPAddress.Any and port . Exceptions Type Condition System.ArgumentOutOfRangeException port is less than 1 or greater than 65535. HttpServer(IPAddress, Int32) Initializes a new instance of the HttpServer class with the specified IP address and port. Declaration public HttpServer(IPAddress address, int port) Parameters Type Name Description System.Net.IPAddress address A System.Net.IPAddress that specifies the local IP address on which to listen. System.Int32 port An System.Int32 that specifies the number of the port on which to listen. Remarks The new instance listens for incoming requests on address and port . It provides secure connections if port is 443. Exceptions Type Condition System.ArgumentNullException address is null . System.ArgumentException address is not a local IP address. System.ArgumentOutOfRangeException port is less than 1 or greater than 65535. HttpServer(IPAddress, Int32) Initializes a new instance of the HttpServer class with the specified IP address and port. Declaration public HttpServer(IPAddress address, int port) Parameters Type Name Description System.Net.IPAddress address A System.Net.IPAddress that specifies the local IP address on which to listen. System.Int32 port An System.Int32 that specifies the number of the port on which to listen. Remarks The new instance listens for incoming requests on address and port . It provides secure connections if port is 443. Exceptions Type Condition System.ArgumentNullException address is null . System.ArgumentException address is not a local IP address. System.ArgumentOutOfRangeException port is less than 1 or greater than 65535. HttpServer(IPAddress, Int32, Boolean) Initializes a new instance of the HttpServer class with the specified IP address, port, and boolean if secure or not. Declaration public HttpServer(IPAddress address, int port, bool secure) Parameters Type Name Description System.Net.IPAddress address A System.Net.IPAddress that specifies the local IP address on which to listen. System.Int32 port An System.Int32 that specifies the number of the port on which to listen. System.Boolean secure A System.Boolean : true if the new instance provides secure connections; otherwise, false . Remarks The new instance listens for incoming requests on address and port . Exceptions Type Condition System.ArgumentNullException address is null . System.ArgumentException address is not a local IP address. System.ArgumentOutOfRangeException port is less than 1 or greater than 65535. HttpServer(IPAddress, Int32, Boolean) Initializes a new instance of the HttpServer class with the specified IP address, port, and boolean if secure or not. Declaration public HttpServer(IPAddress address, int port, bool secure) Parameters Type Name Description System.Net.IPAddress address A System.Net.IPAddress that specifies the local IP address on which to listen. System.Int32 port An System.Int32 that specifies the number of the port on which to listen. System.Boolean secure A System.Boolean : true if the new instance provides secure connections; otherwise, false . Remarks The new instance listens for incoming requests on address and port . Exceptions Type Condition System.ArgumentNullException address is null . System.ArgumentException address is not a local IP address. System.ArgumentOutOfRangeException port is less than 1 or greater than 65535. HttpServer(String) Initializes a new instance of the HttpServer class with the specified URL. Declaration public HttpServer(string url) Parameters Type Name Description System.String url A System.String that specifies the HTTP URL of the server. Remarks The new instance listens for incoming requests on the IP address and port of url . Either port 80 or 443 is used if url includes no port. Port 443 is used if the scheme of url is https; otherwise, port 80 is used. The new instance provides secure connections if the scheme of url is https. Exceptions Type Condition System.ArgumentNullException url is null . System.ArgumentException url is an empty string. -or- url is invalid. HttpServer(String) Initializes a new instance of the HttpServer class with the specified URL. Declaration public HttpServer(string url) Parameters Type Name Description System.String url A System.String that specifies the HTTP URL of the server. Remarks The new instance listens for incoming requests on the IP address and port of url . Either port 80 or 443 is used if url includes no port. Port 443 is used if the scheme of url is https; otherwise, port 80 is used. The new instance provides secure connections if the scheme of url is https. Exceptions Type Condition System.ArgumentNullException url is null . System.ArgumentException url is an empty string. -or- url is invalid. Properties Address Gets the IP address of the server. Declaration public IPAddress Address { get; } Property Value Type Description System.Net.IPAddress A System.Net.IPAddress that represents the local IP address on which to listen for incoming requests. Address Gets the IP address of the server. Declaration public IPAddress Address { get; } Property Value Type Description System.Net.IPAddress A System.Net.IPAddress that represents the local IP address on which to listen for incoming requests. AuthenticationSchemes Gets or sets the scheme used to authenticate the clients. Declaration public AuthenticationSchemes AuthenticationSchemes { get; set; } Property Value Type Description AuthenticationSchemes One of the AuthenticationSchemes enum values. It represents the scheme used to authenticate the clients. The default value is . Remarks The set operation does nothing if the server has already started or it is shutting down. AuthenticationSchemes Gets or sets the scheme used to authenticate the clients. Declaration public AuthenticationSchemes AuthenticationSchemes { get; set; } Property Value Type Description AuthenticationSchemes One of the AuthenticationSchemes enum values. It represents the scheme used to authenticate the clients. The default value is . Remarks The set operation does nothing if the server has already started or it is shutting down. DocumentRootPath Gets or sets the path to the document folder of the server. Declaration public string DocumentRootPath { get; set; } Property Value Type Description System.String A System.String that represents a path to the folder from which to find the requested file. The default value is \"./Public\". Remarks '/' or '&apos; is trimmed from the end of the value if any. The set operation does nothing if the server has already started or it is shutting down. Exceptions Type Condition System.ArgumentNullException The value specified for a set operation is null . System.ArgumentException The value specified for a set operation is an empty string. -or- The value specified for a set operation is an absolute root. -or- The value specified for a set operation is an invalid path string. DocumentRootPath Gets or sets the path to the document folder of the server. Declaration public string DocumentRootPath { get; set; } Property Value Type Description System.String A System.String that represents a path to the folder from which to find the requested file. The default value is \"./Public\". Remarks '/' or '&apos; is trimmed from the end of the value if any. The set operation does nothing if the server has already started or it is shutting down. Exceptions Type Condition System.ArgumentNullException The value specified for a set operation is null . System.ArgumentException The value specified for a set operation is an empty string. -or- The value specified for a set operation is an absolute root. -or- The value specified for a set operation is an invalid path string. IsListening Gets a value indicating whether the server has started. Declaration public bool IsListening { get; } Property Value Type Description System.Boolean true if the server has started; otherwise, false . IsListening Gets a value indicating whether the server has started. Declaration public bool IsListening { get; } Property Value Type Description System.Boolean true if the server has started; otherwise, false . IsSecure Gets a value indicating whether secure connections are provided. Declaration public bool IsSecure { get; } Property Value Type Description System.Boolean true if this instance provides secure connections; otherwise, false . IsSecure Gets a value indicating whether secure connections are provided. Declaration public bool IsSecure { get; } Property Value Type Description System.Boolean true if this instance provides secure connections; otherwise, false . KeepClean Gets or sets a value indicating whether the server cleans up the inactive sessions periodically. Declaration public bool KeepClean { get; set; } Property Value Type Description System.Boolean true if the server cleans up the inactive sessions every 60 seconds; otherwise, false . The default value is true . Remarks The set operation does nothing if the server has already started or it is shutting down. KeepClean Gets or sets a value indicating whether the server cleans up the inactive sessions periodically. Declaration public bool KeepClean { get; set; } Property Value Type Description System.Boolean true if the server cleans up the inactive sessions every 60 seconds; otherwise, false . The default value is true . Remarks The set operation does nothing if the server has already started or it is shutting down. Log Gets the logging function for the server. Declaration public Logger Log { get; } Property Value Type Description Logger A Logger that provides the logging function. Remarks The default logging level is . Log Gets the logging function for the server. Declaration public Logger Log { get; } Property Value Type Description Logger A Logger that provides the logging function. Remarks The default logging level is . Port Gets the port of the server. Declaration public int Port { get; } Property Value Type Description System.Int32 An System.Int32 that represents the number of the port on which to listen for incoming requests. Port Gets the port of the server. Declaration public int Port { get; } Property Value Type Description System.Int32 An System.Int32 that represents the number of the port on which to listen for incoming requests. Realm Gets or sets the realm used for authentication. Declaration public string Realm { get; set; } Property Value Type Description System.String A System.String that represents the name of the realm or null . The default value is null . Remarks \"SECRET AREA\" is used as the realm if the value is null or an empty string. The set operation does nothing if the server has already started or it is shutting down. Realm Gets or sets the realm used for authentication. Declaration public string Realm { get; set; } Property Value Type Description System.String A System.String that represents the name of the realm or null . The default value is null . Remarks \"SECRET AREA\" is used as the realm if the value is null or an empty string. The set operation does nothing if the server has already started or it is shutting down. ReuseAddress Gets or sets a value indicating whether the server is allowed to be bound to an address that is already in use. Declaration public bool ReuseAddress { get; set; } Property Value Type Description System.Boolean true if the server is allowed to be bound to an address that is already in use; otherwise, false . The default value is false . Remarks You should set this property to true if you would like to resolve to wait for socket in TIME_WAIT state. The set operation does nothing if the server has already started or it is shutting down. ReuseAddress Gets or sets a value indicating whether the server is allowed to be bound to an address that is already in use. Declaration public bool ReuseAddress { get; set; } Property Value Type Description System.Boolean true if the server is allowed to be bound to an address that is already in use; otherwise, false . The default value is false . Remarks You should set this property to true if you would like to resolve to wait for socket in TIME_WAIT state. The set operation does nothing if the server has already started or it is shutting down. SslConfiguration Gets the configuration for secure connection. Declaration public ServerSslConfiguration SslConfiguration { get; } Property Value Type Description ServerSslConfiguration A that represents the configuration used to provide secure connections. Remarks The configuration will be referenced when attempts to start, so it must be configured before the start method is called. Exceptions Type Condition System.InvalidOperationException This server does not provide secure connections. SslConfiguration Gets the configuration for secure connection. Declaration public ServerSslConfiguration SslConfiguration { get; } Property Value Type Description ServerSslConfiguration A that represents the configuration used to provide secure connections. Remarks The configuration will be referenced when attempts to start, so it must be configured before the start method is called. Exceptions Type Condition System.InvalidOperationException This server does not provide secure connections. UserCredentialsFinder Gets or sets the delegate used to find the credentials for an identity. Declaration public Func<IIdentity, NetworkCredential> UserCredentialsFinder { get; set; } Property Value Type Description System.Func < IIdentity , NetworkCredential > A Func< , > delegate or null if not needed. The delegate invokes the method called for finding the credentials used to authenticate a client. The default value is null . Remarks No credentials are found if the method invoked by the delegate returns null or the value is null . The set operation does nothing if the server has already started or it is shutting down. UserCredentialsFinder Gets or sets the delegate used to find the credentials for an identity. Declaration public Func<IIdentity, NetworkCredential> UserCredentialsFinder { get; set; } Property Value Type Description System.Func < IIdentity , NetworkCredential > A Func< , > delegate or null if not needed. The delegate invokes the method called for finding the credentials used to authenticate a client. The default value is null . Remarks No credentials are found if the method invoked by the delegate returns null or the value is null . The set operation does nothing if the server has already started or it is shutting down. WaitTime Gets or sets the time to wait for the response to the WebSocket Ping or Close. Declaration public TimeSpan WaitTime { get; set; } Property Value Type Description System.TimeSpan A System.TimeSpan to wait for the response. The default value is the same as 1 second. Remarks The set operation does nothing if the server has already started or it is shutting down. Exceptions Type Condition System.ArgumentOutOfRangeException The value specified for a set operation is zero or less. WaitTime Gets or sets the time to wait for the response to the WebSocket Ping or Close. Declaration public TimeSpan WaitTime { get; set; } Property Value Type Description System.TimeSpan A System.TimeSpan to wait for the response. The default value is the same as 1 second. Remarks The set operation does nothing if the server has already started or it is shutting down. Exceptions Type Condition System.ArgumentOutOfRangeException The value specified for a set operation is zero or less. WebSocketServices Gets the management function for the WebSocket services provided by the server. Declaration public WebSocketServiceManager WebSocketServices { get; } Property Value Type Description WebSocketServiceManager A WebSocketServiceManager that manages the WebSocket services provided by the server. WebSocketServices Gets the management function for the WebSocket services provided by the server. Declaration public WebSocketServiceManager WebSocketServices { get; } Property Value Type Description WebSocketServiceManager A WebSocketServiceManager that manages the WebSocket services provided by the server. Methods AddWebSocketService<TBehaviorWithNew>(String) Adds a WebSocket service with the specified behavior and path. Declaration public void AddWebSocketService<TBehaviorWithNew>(string path) where TBehaviorWithNew : WebSocketBehavior, new() Parameters Type Name Description System.String path A System.String that represents an absolute path to the service to add. / is trimmed from the end of the string if present. Type Parameters Name Description TBehaviorWithNew The type of the behavior for the service. It must inherit the WebSocketBehavior class. And also, it must have a public parameterless constructor. Exceptions Type Condition System.ArgumentNullException path is null . System.ArgumentException path is an empty string. -or- path is not an absolute path. -or- path includes either or both query and fragment components. -or- path is already in use. AddWebSocketService<TBehaviorWithNew>(String) Adds a WebSocket service with the specified behavior and path. Declaration public void AddWebSocketService<TBehaviorWithNew>(string path) where TBehaviorWithNew : WebSocketBehavior, new() Parameters Type Name Description System.String path A System.String that represents an absolute path to the service to add. / is trimmed from the end of the string if present. Type Parameters Name Description TBehaviorWithNew The type of the behavior for the service. It must inherit the WebSocketBehavior class. And also, it must have a public parameterless constructor. Exceptions Type Condition System.ArgumentNullException path is null . System.ArgumentException path is an empty string. -or- path is not an absolute path. -or- path includes either or both query and fragment components. -or- path is already in use. AddWebSocketService<TBehaviorWithNew>(String, Action<TBehaviorWithNew>) Adds a WebSocket service with the specified behavior, path, and delegate. Declaration public void AddWebSocketService<TBehaviorWithNew>(string path, Action<TBehaviorWithNew> initializer) where TBehaviorWithNew : WebSocketBehavior, new() Parameters Type Name Description System.String path A System.String that represents an absolute path to the service to add. / is trimmed from the end of the string if present. System.Action <TBehaviorWithNew> initializer An Action<TBehaviorWithNew> delegate or null if not needed. The delegate invokes the method called when initializing a new session instance for the service. Type Parameters Name Description TBehaviorWithNew The type of the behavior for the service. It must inherit the WebSocketBehavior class. And also, it must have a public parameterless constructor. Exceptions Type Condition System.ArgumentNullException path is null . System.ArgumentException path is an empty string. -or- path is not an absolute path. -or- path includes either or both query and fragment components. -or- path is already in use. AddWebSocketService<TBehaviorWithNew>(String, Action<TBehaviorWithNew>) Adds a WebSocket service with the specified behavior, path, and delegate. Declaration public void AddWebSocketService<TBehaviorWithNew>(string path, Action<TBehaviorWithNew> initializer) where TBehaviorWithNew : WebSocketBehavior, new() Parameters Type Name Description System.String path A System.String that represents an absolute path to the service to add. / is trimmed from the end of the string if present. System.Action <TBehaviorWithNew> initializer An Action<TBehaviorWithNew> delegate or null if not needed. The delegate invokes the method called when initializing a new session instance for the service. Type Parameters Name Description TBehaviorWithNew The type of the behavior for the service. It must inherit the WebSocketBehavior class. And also, it must have a public parameterless constructor. Exceptions Type Condition System.ArgumentNullException path is null . System.ArgumentException path is an empty string. -or- path is not an absolute path. -or- path includes either or both query and fragment components. -or- path is already in use. RemoveWebSocketService(String) Removes a WebSocket service with the specified path. Declaration public bool RemoveWebSocketService(string path) Parameters Type Name Description System.String path A System.String that represents an absolute path to the service to remove. / is trimmed from the end of the string if present. Returns Type Description System.Boolean true if the service is successfully found and removed; otherwise, false . Remarks The service is stopped with close status 1001 (going away) if it has already started. Exceptions Type Condition System.ArgumentNullException path is null . System.ArgumentException path is an empty string. -or- path is not an absolute path. -or- path includes either or both query and fragment components. RemoveWebSocketService(String) Removes a WebSocket service with the specified path. Declaration public bool RemoveWebSocketService(string path) Parameters Type Name Description System.String path A System.String that represents an absolute path to the service to remove. / is trimmed from the end of the string if present. Returns Type Description System.Boolean true if the service is successfully found and removed; otherwise, false . Remarks The service is stopped with close status 1001 (going away) if it has already started. Exceptions Type Condition System.ArgumentNullException path is null . System.ArgumentException path is an empty string. -or- path is not an absolute path. -or- path includes either or both query and fragment components. Start() Starts receiving incoming requests. Declaration public void Start() Remarks This method does nothing if the server has already started or it is shutting down. Exceptions Type Condition System.InvalidOperationException There is no server certificate for secure connection. -or- The underlying has failed to start. Start() Starts receiving incoming requests. Declaration public void Start() Remarks This method does nothing if the server has already started or it is shutting down. Exceptions Type Condition System.InvalidOperationException There is no server certificate for secure connection. -or- The underlying has failed to start. Stop() Stops receiving incoming requests. Declaration public void Stop() Stop() Stops receiving incoming requests. Declaration public void Stop() Events OnConnect Occurs when the server receives an HTTP CONNECT request. Declaration public event EventHandler<HttpRequestEventArgs> OnConnect Event Type Type Description System.EventHandler < HttpRequestEventArgs > OnConnect Occurs when the server receives an HTTP CONNECT request. Declaration public event EventHandler<HttpRequestEventArgs> OnConnect Event Type Type Description System.EventHandler < HttpRequestEventArgs > OnDelete Occurs when the server receives an HTTP DELETE request. Declaration public event EventHandler<HttpRequestEventArgs> OnDelete Event Type Type Description System.EventHandler < HttpRequestEventArgs > OnDelete Occurs when the server receives an HTTP DELETE request. Declaration public event EventHandler<HttpRequestEventArgs> OnDelete Event Type Type Description System.EventHandler < HttpRequestEventArgs > OnGet Occurs when the server receives an HTTP GET request. Declaration public event EventHandler<HttpRequestEventArgs> OnGet Event Type Type Description System.EventHandler < HttpRequestEventArgs > OnGet Occurs when the server receives an HTTP GET request. Declaration public event EventHandler<HttpRequestEventArgs> OnGet Event Type Type Description System.EventHandler < HttpRequestEventArgs > OnHead Occurs when the server receives an HTTP HEAD request. Declaration public event EventHandler<HttpRequestEventArgs> OnHead Event Type Type Description System.EventHandler < HttpRequestEventArgs > OnHead Occurs when the server receives an HTTP HEAD request. Declaration public event EventHandler<HttpRequestEventArgs> OnHead Event Type Type Description System.EventHandler < HttpRequestEventArgs > OnOptions Occurs when the server receives an HTTP OPTIONS request. Declaration public event EventHandler<HttpRequestEventArgs> OnOptions Event Type Type Description System.EventHandler < HttpRequestEventArgs > OnOptions Occurs when the server receives an HTTP OPTIONS request. Declaration public event EventHandler<HttpRequestEventArgs> OnOptions Event Type Type Description System.EventHandler < HttpRequestEventArgs > OnPost Occurs when the server receives an HTTP POST request. Declaration public event EventHandler<HttpRequestEventArgs> OnPost Event Type Type Description System.EventHandler < HttpRequestEventArgs > OnPost Occurs when the server receives an HTTP POST request. Declaration public event EventHandler<HttpRequestEventArgs> OnPost Event Type Type Description System.EventHandler < HttpRequestEventArgs > OnPut Occurs when the server receives an HTTP PUT request. Declaration public event EventHandler<HttpRequestEventArgs> OnPut Event Type Type Description System.EventHandler < HttpRequestEventArgs > OnPut Occurs when the server receives an HTTP PUT request. Declaration public event EventHandler<HttpRequestEventArgs> OnPut Event Type Type Description System.EventHandler < HttpRequestEventArgs > OnTrace Occurs when the server receives an HTTP TRACE request. Declaration public event EventHandler<HttpRequestEventArgs> OnTrace Event Type Type Description System.EventHandler < HttpRequestEventArgs > OnTrace Occurs when the server receives an HTTP TRACE request. Declaration public event EventHandler<HttpRequestEventArgs> OnTrace Event Type Type Description System.EventHandler < HttpRequestEventArgs >"
  },
  "api/WebSocketSharp.Server.IWebSocketSession.html": {
    "href": "api/WebSocketSharp.Server.IWebSocketSession.html",
    "title": "Interface IWebSocketSession | Unity Algorand SDK",
    "keywords": "Interface IWebSocketSession Exposes the access to the information in a WebSocket session. Namespace : WebSocketSharp.Server Assembly : cs.temp.dll.dll Syntax public interface IWebSocketSession Properties ConnectionState Gets the current state of the WebSocket connection for the session. Declaration WebSocketState ConnectionState { get; } Property Value Type Description WebSocketState One of the WebSocketState enum values. It indicates the current state of the connection. ConnectionState Gets the current state of the WebSocket connection for the session. Declaration WebSocketState ConnectionState { get; } Property Value Type Description WebSocketState One of the WebSocketState enum values. It indicates the current state of the connection. Context Gets the information in the WebSocket handshake request. Declaration WebSocketContext Context { get; } Property Value Type Description WebSocketContext A instance that provides the access to the information in the handshake request. Context Gets the information in the WebSocket handshake request. Declaration WebSocketContext Context { get; } Property Value Type Description WebSocketContext A instance that provides the access to the information in the handshake request. ID Gets the unique ID of the session. Declaration string ID { get; } Property Value Type Description System.String A System.String that represents the unique ID of the session. ID Gets the unique ID of the session. Declaration string ID { get; } Property Value Type Description System.String A System.String that represents the unique ID of the session. Protocol Gets the name of the WebSocket subprotocol for the session. Declaration string Protocol { get; } Property Value Type Description System.String A System.String that represents the name of the subprotocol if present. Protocol Gets the name of the WebSocket subprotocol for the session. Declaration string Protocol { get; } Property Value Type Description System.String A System.String that represents the name of the subprotocol if present. StartTime Gets the time that the session has started. Declaration DateTime StartTime { get; } Property Value Type Description System.DateTime A System.DateTime that represents the time that the session has started. StartTime Gets the time that the session has started. Declaration DateTime StartTime { get; } Property Value Type Description System.DateTime A System.DateTime that represents the time that the session has started."
  },
  "api/WebSocketSharp.Server.WebSocketBehavior.html": {
    "href": "api/WebSocketSharp.Server.WebSocketBehavior.html",
    "title": "Class WebSocketBehavior | Unity Algorand SDK",
    "keywords": "Class WebSocketBehavior Exposes a set of methods and properties used to define the behavior of a WebSocket service provided by the WebSocketServer or HttpServer . Inheritance System.Object WebSocketBehavior Implements IWebSocketSession Namespace : WebSocketSharp.Server Assembly : cs.temp.dll.dll Syntax public abstract class WebSocketBehavior : IWebSocketSession Remarks This class is an abstract class. Constructors WebSocketBehavior() Initializes a new instance of the WebSocketBehavior class. Declaration protected WebSocketBehavior() WebSocketBehavior() Initializes a new instance of the WebSocketBehavior class. Declaration protected WebSocketBehavior() Properties ConnectionState Gets the current state of the WebSocket connection for a session. Declaration public WebSocketState ConnectionState { get; } Property Value Type Description WebSocketState One of the WebSocketState enum values. It indicates the current state of the connection. if the session has not started yet. ConnectionState Gets the current state of the WebSocket connection for a session. Declaration public WebSocketState ConnectionState { get; } Property Value Type Description WebSocketState One of the WebSocketState enum values. It indicates the current state of the connection. if the session has not started yet. Context Gets the information in a WebSocket handshake request to the service. Declaration public WebSocketContext Context { get; } Property Value Type Description WebSocketContext A instance that provides the access to the information in the handshake request. null if the session has not started yet. Context Gets the information in a WebSocket handshake request to the service. Declaration public WebSocketContext Context { get; } Property Value Type Description WebSocketContext A instance that provides the access to the information in the handshake request. null if the session has not started yet. CookiesValidator Gets or sets the delegate used to validate the HTTP cookies included in a WebSocket handshake request to the service. Declaration public Func<CookieCollection, CookieCollection, bool> CookiesValidator { get; set; } Property Value Type Description System.Func < CookieCollection , CookieCollection , System.Boolean > A Func<CookieCollection, CookieCollection, bool> delegate or null if not needed. The delegate invokes the method called when the WebSocket instance for a session validates the handshake request. 1st parameter passed to the method contains the cookies to validate if present. 2nd parameter passed to the method receives the cookies to send to the client. The method must return true if the cookies are valid. The default value is null . CookiesValidator Gets or sets the delegate used to validate the HTTP cookies included in a WebSocket handshake request to the service. Declaration public Func<CookieCollection, CookieCollection, bool> CookiesValidator { get; set; } Property Value Type Description System.Func < CookieCollection , CookieCollection , System.Boolean > A Func<CookieCollection, CookieCollection, bool> delegate or null if not needed. The delegate invokes the method called when the WebSocket instance for a session validates the handshake request. 1st parameter passed to the method contains the cookies to validate if present. 2nd parameter passed to the method receives the cookies to send to the client. The method must return true if the cookies are valid. The default value is null . EmitOnPing Gets or sets a value indicating whether the WebSocket instance for a session emits the message event when receives a ping. Declaration public bool EmitOnPing { get; set; } Property Value Type Description System.Boolean true if the WebSocket instance emits the message event when receives a ping; otherwise, false . The default value is false . EmitOnPing Gets or sets a value indicating whether the WebSocket instance for a session emits the message event when receives a ping. Declaration public bool EmitOnPing { get; set; } Property Value Type Description System.Boolean true if the WebSocket instance emits the message event when receives a ping; otherwise, false . The default value is false . Headers Gets the HTTP headers included in a WebSocket handshake request. Declaration protected NameValueCollection Headers { get; } Property Value Type Description NameValueCollection A that contains the headers. null if the session has not started yet. Headers Gets the HTTP headers included in a WebSocket handshake request. Declaration protected NameValueCollection Headers { get; } Property Value Type Description NameValueCollection A that contains the headers. null if the session has not started yet. ID Gets the unique ID of a session. Declaration public string ID { get; } Property Value Type Description System.String A System.String that represents the unique ID of the session. null if the session has not started yet. ID Gets the unique ID of a session. Declaration public string ID { get; } Property Value Type Description System.String A System.String that represents the unique ID of the session. null if the session has not started yet. IgnoreExtensions Gets or sets a value indicating whether the service ignores the Sec-WebSocket-Extensions header included in a WebSocket handshake request. Declaration public bool IgnoreExtensions { get; set; } Property Value Type Description System.Boolean true if the service ignores the extensions requested from a client; otherwise, false . The default value is false . IgnoreExtensions Gets or sets a value indicating whether the service ignores the Sec-WebSocket-Extensions header included in a WebSocket handshake request. Declaration public bool IgnoreExtensions { get; set; } Property Value Type Description System.Boolean true if the service ignores the extensions requested from a client; otherwise, false . The default value is false . OriginValidator Gets or sets the delegate used to validate the Origin header included in a WebSocket handshake request to the service. Declaration public Func<string, bool> OriginValidator { get; set; } Property Value Type Description System.Func < System.String , System.Boolean > A Func<string, bool> delegate or null if not needed. The delegate invokes the method called when the WebSocket instance for a session validates the handshake request. The System.String parameter passed to the method is the value of the Origin header or null if the header is not present. The method must return true if the header value is valid. The default value is null . OriginValidator Gets or sets the delegate used to validate the Origin header included in a WebSocket handshake request to the service. Declaration public Func<string, bool> OriginValidator { get; set; } Property Value Type Description System.Func < System.String , System.Boolean > A Func<string, bool> delegate or null if not needed. The delegate invokes the method called when the WebSocket instance for a session validates the handshake request. The System.String parameter passed to the method is the value of the Origin header or null if the header is not present. The method must return true if the header value is valid. The default value is null . Protocol Gets or sets the name of the WebSocket subprotocol for the service. Declaration public string Protocol { get; set; } Property Value Type Description System.String A System.String that represents the name of the subprotocol. The value specified for a set must be a token defined in RFC 2616 . The default value is an empty string. Exceptions Type Condition System.InvalidOperationException The set operation is not available if the session has already started. System.ArgumentException The value specified for a set operation is not a token. Protocol Gets or sets the name of the WebSocket subprotocol for the service. Declaration public string Protocol { get; set; } Property Value Type Description System.String A System.String that represents the name of the subprotocol. The value specified for a set must be a token defined in RFC 2616 . The default value is an empty string. Exceptions Type Condition System.InvalidOperationException The set operation is not available if the session has already started. System.ArgumentException The value specified for a set operation is not a token. QueryString Gets the query string included in a WebSocket handshake request. Declaration protected NameValueCollection QueryString { get; } Property Value Type Description NameValueCollection A that contains the query parameters. An empty collection if not included. null if the session has not started yet. QueryString Gets the query string included in a WebSocket handshake request. Declaration protected NameValueCollection QueryString { get; } Property Value Type Description NameValueCollection A that contains the query parameters. An empty collection if not included. null if the session has not started yet. Sessions Gets the management function for the sessions in the service. Declaration protected WebSocketSessionManager Sessions { get; } Property Value Type Description WebSocketSessionManager A WebSocketSessionManager that manages the sessions in the service. null if the session has not started yet. Sessions Gets the management function for the sessions in the service. Declaration protected WebSocketSessionManager Sessions { get; } Property Value Type Description WebSocketSessionManager A WebSocketSessionManager that manages the sessions in the service. null if the session has not started yet. StartTime Gets the time that a session has started. Declaration public DateTime StartTime { get; } Property Value Type Description System.DateTime A System.DateTime that represents the time that the session has started. System.DateTime.MaxValue if the session has not started yet. StartTime Gets the time that a session has started. Declaration public DateTime StartTime { get; } Property Value Type Description System.DateTime A System.DateTime that represents the time that the session has started. System.DateTime.MaxValue if the session has not started yet. Methods Close() Closes the WebSocket connection for a session. Declaration protected void Close() Remarks This method does nothing if the current state of the connection is Closing or Closed. Exceptions Type Condition System.InvalidOperationException The session has not started yet. Close() Closes the WebSocket connection for a session. Declaration protected void Close() Remarks This method does nothing if the current state of the connection is Closing or Closed. Exceptions Type Condition System.InvalidOperationException The session has not started yet. Close(UInt16, String) Closes the WebSocket connection for a session with the specified code and reason. Declaration protected void Close(ushort code, string reason) Parameters Type Name Description System.UInt16 code A System.UInt16 that represents the status code indicating the reason for the close. The status codes are defined in Section 7.4 of RFC 6455. System.String reason A System.String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Remarks This method does nothing if the current state of the connection is Closing or Closed. Exceptions Type Condition System.InvalidOperationException The session has not started yet. System.ArgumentOutOfRangeException code is less than 1000 or greater than 4999. -or- The size of reason is greater than 123 bytes. System.ArgumentException code is 1010 (mandatory extension). -or- code is 1005 (no status) and there is reason. -or- reason could not be UTF-8-encoded. Close(UInt16, String) Closes the WebSocket connection for a session with the specified code and reason. Declaration protected void Close(ushort code, string reason) Parameters Type Name Description System.UInt16 code A System.UInt16 that represents the status code indicating the reason for the close. The status codes are defined in Section 7.4 of RFC 6455. System.String reason A System.String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Remarks This method does nothing if the current state of the connection is Closing or Closed. Exceptions Type Condition System.InvalidOperationException The session has not started yet. System.ArgumentOutOfRangeException code is less than 1000 or greater than 4999. -or- The size of reason is greater than 123 bytes. System.ArgumentException code is 1010 (mandatory extension). -or- code is 1005 (no status) and there is reason. -or- reason could not be UTF-8-encoded. Close(CloseStatusCode, String) Closes the WebSocket connection for a session with the specified code and reason. Declaration protected void Close(CloseStatusCode code, string reason) Parameters Type Name Description CloseStatusCode code One of the CloseStatusCode enum values. It represents the status code indicating the reason for the close. System.String reason A System.String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Remarks This method does nothing if the current state of the connection is Closing or Closed. Exceptions Type Condition System.InvalidOperationException The session has not started yet. System.ArgumentOutOfRangeException The size of reason is greater than 123 bytes. System.ArgumentException code is . -or- code is and there is reason. -or- reason could not be UTF-8-encoded. Close(CloseStatusCode, String) Closes the WebSocket connection for a session with the specified code and reason. Declaration protected void Close(CloseStatusCode code, string reason) Parameters Type Name Description CloseStatusCode code One of the CloseStatusCode enum values. It represents the status code indicating the reason for the close. System.String reason A System.String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Remarks This method does nothing if the current state of the connection is Closing or Closed. Exceptions Type Condition System.InvalidOperationException The session has not started yet. System.ArgumentOutOfRangeException The size of reason is greater than 123 bytes. System.ArgumentException code is . -or- code is and there is reason. -or- reason could not be UTF-8-encoded. CloseAsync() Closes the WebSocket connection for a session asynchronously. Declaration protected void CloseAsync() Remarks This method does not wait for the close to be complete. This method does nothing if the current state of the connection is Closing or Closed. Exceptions Type Condition System.InvalidOperationException The session has not started yet. CloseAsync() Closes the WebSocket connection for a session asynchronously. Declaration protected void CloseAsync() Remarks This method does not wait for the close to be complete. This method does nothing if the current state of the connection is Closing or Closed. Exceptions Type Condition System.InvalidOperationException The session has not started yet. CloseAsync(UInt16, String) Closes the WebSocket connection for a session asynchronously with the specified code and reason. Declaration protected void CloseAsync(ushort code, string reason) Parameters Type Name Description System.UInt16 code A System.UInt16 that represents the status code indicating the reason for the close. The status codes are defined in Section 7.4 of RFC 6455. System.String reason A System.String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Remarks This method does not wait for the close to be complete. This method does nothing if the current state of the connection is Closing or Closed. Exceptions Type Condition System.InvalidOperationException The session has not started yet. System.ArgumentOutOfRangeException code is less than 1000 or greater than 4999. -or- The size of reason is greater than 123 bytes. System.ArgumentException code is 1010 (mandatory extension). -or- code is 1005 (no status) and there is reason. -or- reason could not be UTF-8-encoded. CloseAsync(UInt16, String) Closes the WebSocket connection for a session asynchronously with the specified code and reason. Declaration protected void CloseAsync(ushort code, string reason) Parameters Type Name Description System.UInt16 code A System.UInt16 that represents the status code indicating the reason for the close. The status codes are defined in Section 7.4 of RFC 6455. System.String reason A System.String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Remarks This method does not wait for the close to be complete. This method does nothing if the current state of the connection is Closing or Closed. Exceptions Type Condition System.InvalidOperationException The session has not started yet. System.ArgumentOutOfRangeException code is less than 1000 or greater than 4999. -or- The size of reason is greater than 123 bytes. System.ArgumentException code is 1010 (mandatory extension). -or- code is 1005 (no status) and there is reason. -or- reason could not be UTF-8-encoded. CloseAsync(CloseStatusCode, String) Closes the WebSocket connection for a session asynchronously with the specified code and reason. Declaration protected void CloseAsync(CloseStatusCode code, string reason) Parameters Type Name Description CloseStatusCode code One of the CloseStatusCode enum values. It represents the status code indicating the reason for the close. System.String reason A System.String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Remarks This method does not wait for the close to be complete. This method does nothing if the current state of the connection is Closing or Closed. Exceptions Type Condition System.InvalidOperationException The session has not started yet. System.ArgumentException code is . -or- code is and there is reason. -or- reason could not be UTF-8-encoded. System.ArgumentOutOfRangeException The size of reason is greater than 123 bytes. CloseAsync(CloseStatusCode, String) Closes the WebSocket connection for a session asynchronously with the specified code and reason. Declaration protected void CloseAsync(CloseStatusCode code, string reason) Parameters Type Name Description CloseStatusCode code One of the CloseStatusCode enum values. It represents the status code indicating the reason for the close. System.String reason A System.String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Remarks This method does not wait for the close to be complete. This method does nothing if the current state of the connection is Closing or Closed. Exceptions Type Condition System.InvalidOperationException The session has not started yet. System.ArgumentException code is . -or- code is and there is reason. -or- reason could not be UTF-8-encoded. System.ArgumentOutOfRangeException The size of reason is greater than 123 bytes. OnClose(CloseEventArgs) Called when the WebSocket connection for a session has been closed. Declaration protected virtual void OnClose(CloseEventArgs e) Parameters Type Name Description CloseEventArgs e A CloseEventArgs that represents the event data passed from a OnClose event. OnClose(CloseEventArgs) Called when the WebSocket connection for a session has been closed. Declaration protected virtual void OnClose(CloseEventArgs e) Parameters Type Name Description CloseEventArgs e A CloseEventArgs that represents the event data passed from a OnClose event. OnError(ErrorEventArgs) Called when the WebSocket instance for a session gets an error. Declaration protected virtual void OnError(ErrorEventArgs e) Parameters Type Name Description ErrorEventArgs e A ErrorEventArgs that represents the event data passed from a OnError event. OnError(ErrorEventArgs) Called when the WebSocket instance for a session gets an error. Declaration protected virtual void OnError(ErrorEventArgs e) Parameters Type Name Description ErrorEventArgs e A ErrorEventArgs that represents the event data passed from a OnError event. OnMessage(MessageEventArgs) Called when the WebSocket instance for a session receives a message. Declaration protected virtual void OnMessage(MessageEventArgs e) Parameters Type Name Description MessageEventArgs e A MessageEventArgs that represents the event data passed from a OnMessage event. OnMessage(MessageEventArgs) Called when the WebSocket instance for a session receives a message. Declaration protected virtual void OnMessage(MessageEventArgs e) Parameters Type Name Description MessageEventArgs e A MessageEventArgs that represents the event data passed from a OnMessage event. OnOpen() Called when the WebSocket connection for a session has been established. Declaration protected virtual void OnOpen() OnOpen() Called when the WebSocket connection for a session has been established. Declaration protected virtual void OnOpen() Send(FileInfo) Sends the specified file to a client using the WebSocket connection. Declaration protected void Send(FileInfo fileInfo) Parameters Type Name Description FileInfo fileInfo A that specifies the file to send. The file is sent as the binary data. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException fileInfo is null . System.ArgumentException The file does not exist. -or- The file could not be opened. Send(FileInfo) Sends the specified file to a client using the WebSocket connection. Declaration protected void Send(FileInfo fileInfo) Parameters Type Name Description FileInfo fileInfo A that specifies the file to send. The file is sent as the binary data. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException fileInfo is null . System.ArgumentException The file does not exist. -or- The file could not be opened. Send(Stream, Int32) Sends the data from the specified stream to a client using the WebSocket connection. Declaration protected void Send(Stream stream, int length) Parameters Type Name Description Stream stream A instance from which to read the data to send. The data is sent as the binary data. System.Int32 length An System.Int32 that specifies the number of bytes to send. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException stream is null . System.ArgumentException stream cannot be read. -or- length is less than 1. -or- No data could be read from stream . Send(Stream, Int32) Sends the data from the specified stream to a client using the WebSocket connection. Declaration protected void Send(Stream stream, int length) Parameters Type Name Description Stream stream A instance from which to read the data to send. The data is sent as the binary data. System.Int32 length An System.Int32 that specifies the number of bytes to send. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException stream is null . System.ArgumentException stream cannot be read. -or- length is less than 1. -or- No data could be read from stream . Send(Byte[]) Sends the specified data to a client using the WebSocket connection. Declaration protected void Send(byte[] data) Parameters Type Name Description System.Byte [] data An array of System.Byte that represents the binary data to send. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException data is null . Send(Byte[]) Sends the specified data to a client using the WebSocket connection. Declaration protected void Send(byte[] data) Parameters Type Name Description System.Byte [] data An array of System.Byte that represents the binary data to send. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException data is null . Send(String) Sends the specified data to a client using the WebSocket connection. Declaration protected void Send(string data) Parameters Type Name Description System.String data A System.String that represents the text data to send. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException data is null . System.ArgumentException data could not be UTF-8-encoded. Send(String) Sends the specified data to a client using the WebSocket connection. Declaration protected void Send(string data) Parameters Type Name Description System.String data A System.String that represents the text data to send. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException data is null . System.ArgumentException data could not be UTF-8-encoded. SendAsync(FileInfo, Action<Boolean>) Sends the specified file to a client asynchronously using the WebSocket connection. Declaration protected void SendAsync(FileInfo fileInfo, Action<bool> completed) Parameters Type Name Description FileInfo fileInfo A that specifies the file to send. The file is sent as the binary data. System.Action < System.Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException fileInfo is null . System.ArgumentException The file does not exist. -or- The file could not be opened. SendAsync(FileInfo, Action<Boolean>) Sends the specified file to a client asynchronously using the WebSocket connection. Declaration protected void SendAsync(FileInfo fileInfo, Action<bool> completed) Parameters Type Name Description FileInfo fileInfo A that specifies the file to send. The file is sent as the binary data. System.Action < System.Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException fileInfo is null . System.ArgumentException The file does not exist. -or- The file could not be opened. SendAsync(Stream, Int32, Action<Boolean>) Sends the data from the specified stream to a client asynchronously using the WebSocket connection. Declaration protected void SendAsync(Stream stream, int length, Action<bool> completed) Parameters Type Name Description Stream stream A instance from which to read the data to send. The data is sent as the binary data. System.Int32 length An System.Int32 that specifies the number of bytes to send. System.Action < System.Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException stream is null . System.ArgumentException stream cannot be read. -or- length is less than 1. -or- No data could be read from stream . SendAsync(Stream, Int32, Action<Boolean>) Sends the data from the specified stream to a client asynchronously using the WebSocket connection. Declaration protected void SendAsync(Stream stream, int length, Action<bool> completed) Parameters Type Name Description Stream stream A instance from which to read the data to send. The data is sent as the binary data. System.Int32 length An System.Int32 that specifies the number of bytes to send. System.Action < System.Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException stream is null . System.ArgumentException stream cannot be read. -or- length is less than 1. -or- No data could be read from stream . SendAsync(Byte[], Action<Boolean>) Sends the specified data to a client asynchronously using the WebSocket connection. Declaration protected void SendAsync(byte[] data, Action<bool> completed) Parameters Type Name Description System.Byte [] data An array of System.Byte that represents the binary data to send. System.Action < System.Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException data is null . SendAsync(Byte[], Action<Boolean>) Sends the specified data to a client asynchronously using the WebSocket connection. Declaration protected void SendAsync(byte[] data, Action<bool> completed) Parameters Type Name Description System.Byte [] data An array of System.Byte that represents the binary data to send. System.Action < System.Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException data is null . SendAsync(String, Action<Boolean>) Sends the specified data to a client asynchronously using the WebSocket connection. Declaration protected void SendAsync(string data, Action<bool> completed) Parameters Type Name Description System.String data A System.String that represents the text data to send. System.Action < System.Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException data is null . System.ArgumentException data could not be UTF-8-encoded. SendAsync(String, Action<Boolean>) Sends the specified data to a client asynchronously using the WebSocket connection. Declaration protected void SendAsync(string data, Action<bool> completed) Parameters Type Name Description System.String data A System.String that represents the text data to send. System.Action < System.Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException data is null . System.ArgumentException data could not be UTF-8-encoded. Implements IWebSocketSession"
  },
  "api/WebSocketSharp.Server.WebSocketServer.html": {
    "href": "api/WebSocketSharp.Server.WebSocketServer.html",
    "title": "Class WebSocketServer | Unity Algorand SDK",
    "keywords": "Class WebSocketServer Provides a WebSocket protocol server. Inheritance System.Object WebSocketServer Namespace : WebSocketSharp.Server Assembly : cs.temp.dll.dll Syntax public class WebSocketServer Remarks This class can provide multiple WebSocket services. Constructors WebSocketServer() Initializes a new instance of the WebSocketServer class. Declaration public WebSocketServer() Remarks The new instance listens for incoming handshake requests on System.Net.IPAddress.Any and port 80. WebSocketServer() Initializes a new instance of the WebSocketServer class. Declaration public WebSocketServer() Remarks The new instance listens for incoming handshake requests on System.Net.IPAddress.Any and port 80. WebSocketServer(Int32) Initializes a new instance of the WebSocketServer class with the specified port . Declaration public WebSocketServer(int port) Parameters Type Name Description System.Int32 port An System.Int32 that represents the number of the port on which to listen. Remarks The new instance listens for incoming handshake requests on System.Net.IPAddress.Any and port . It provides secure connections if port is 443. Exceptions Type Condition System.ArgumentOutOfRangeException port is less than 1 or greater than 65535. WebSocketServer(Int32) Initializes a new instance of the WebSocketServer class with the specified port . Declaration public WebSocketServer(int port) Parameters Type Name Description System.Int32 port An System.Int32 that represents the number of the port on which to listen. Remarks The new instance listens for incoming handshake requests on System.Net.IPAddress.Any and port . It provides secure connections if port is 443. Exceptions Type Condition System.ArgumentOutOfRangeException port is less than 1 or greater than 65535. WebSocketServer(Int32, Boolean) Initializes a new instance of the WebSocketServer class with the specified port and secure . Declaration public WebSocketServer(int port, bool secure) Parameters Type Name Description System.Int32 port An System.Int32 that represents the number of the port on which to listen. System.Boolean secure A System.Boolean : true if the new instance provides secure connections; otherwise, false . Remarks The new instance listens for incoming handshake requests on System.Net.IPAddress.Any and port . Exceptions Type Condition System.ArgumentOutOfRangeException port is less than 1 or greater than 65535. WebSocketServer(Int32, Boolean) Initializes a new instance of the WebSocketServer class with the specified port and secure . Declaration public WebSocketServer(int port, bool secure) Parameters Type Name Description System.Int32 port An System.Int32 that represents the number of the port on which to listen. System.Boolean secure A System.Boolean : true if the new instance provides secure connections; otherwise, false . Remarks The new instance listens for incoming handshake requests on System.Net.IPAddress.Any and port . Exceptions Type Condition System.ArgumentOutOfRangeException port is less than 1 or greater than 65535. WebSocketServer(IPAddress, Int32) Initializes a new instance of the WebSocketServer class with the specified address and port . Declaration public WebSocketServer(IPAddress address, int port) Parameters Type Name Description System.Net.IPAddress address A System.Net.IPAddress that represents the local IP address on which to listen. System.Int32 port An System.Int32 that represents the number of the port on which to listen. Remarks The new instance listens for incoming handshake requests on address and port . It provides secure connections if port is 443. Exceptions Type Condition System.ArgumentNullException address is null . System.ArgumentException address is not a local IP address. System.ArgumentOutOfRangeException port is less than 1 or greater than 65535. WebSocketServer(IPAddress, Int32) Initializes a new instance of the WebSocketServer class with the specified address and port . Declaration public WebSocketServer(IPAddress address, int port) Parameters Type Name Description System.Net.IPAddress address A System.Net.IPAddress that represents the local IP address on which to listen. System.Int32 port An System.Int32 that represents the number of the port on which to listen. Remarks The new instance listens for incoming handshake requests on address and port . It provides secure connections if port is 443. Exceptions Type Condition System.ArgumentNullException address is null . System.ArgumentException address is not a local IP address. System.ArgumentOutOfRangeException port is less than 1 or greater than 65535. WebSocketServer(IPAddress, Int32, Boolean) Initializes a new instance of the WebSocketServer class with the specified address , port , and secure . Declaration public WebSocketServer(IPAddress address, int port, bool secure) Parameters Type Name Description System.Net.IPAddress address A System.Net.IPAddress that represents the local IP address on which to listen. System.Int32 port An System.Int32 that represents the number of the port on which to listen. System.Boolean secure A System.Boolean : true if the new instance provides secure connections; otherwise, false . Remarks The new instance listens for incoming handshake requests on address and port . Exceptions Type Condition System.ArgumentNullException address is null . System.ArgumentException address is not a local IP address. System.ArgumentOutOfRangeException port is less than 1 or greater than 65535. WebSocketServer(IPAddress, Int32, Boolean) Initializes a new instance of the WebSocketServer class with the specified address , port , and secure . Declaration public WebSocketServer(IPAddress address, int port, bool secure) Parameters Type Name Description System.Net.IPAddress address A System.Net.IPAddress that represents the local IP address on which to listen. System.Int32 port An System.Int32 that represents the number of the port on which to listen. System.Boolean secure A System.Boolean : true if the new instance provides secure connections; otherwise, false . Remarks The new instance listens for incoming handshake requests on address and port . Exceptions Type Condition System.ArgumentNullException address is null . System.ArgumentException address is not a local IP address. System.ArgumentOutOfRangeException port is less than 1 or greater than 65535. WebSocketServer(String) Initializes a new instance of the WebSocketServer class with the specified url . Declaration public WebSocketServer(string url) Parameters Type Name Description System.String url A System.String that represents the WebSocket URL of the server. Remarks The new instance listens for incoming handshake requests on the IP address of the host of url and the port of url . Either port 80 or 443 is used if url includes no port. Port 443 is used if the scheme of url is wss; otherwise, port 80 is used. The new instance provides secure connections if the scheme of url is wss. Exceptions Type Condition System.ArgumentNullException url is null . System.ArgumentException url is an empty string. -or- url is invalid. WebSocketServer(String) Initializes a new instance of the WebSocketServer class with the specified url . Declaration public WebSocketServer(string url) Parameters Type Name Description System.String url A System.String that represents the WebSocket URL of the server. Remarks The new instance listens for incoming handshake requests on the IP address of the host of url and the port of url . Either port 80 or 443 is used if url includes no port. Port 443 is used if the scheme of url is wss; otherwise, port 80 is used. The new instance provides secure connections if the scheme of url is wss. Exceptions Type Condition System.ArgumentNullException url is null . System.ArgumentException url is an empty string. -or- url is invalid. Properties Address Gets the IP address of the server. Declaration public IPAddress Address { get; } Property Value Type Description System.Net.IPAddress A System.Net.IPAddress that represents the local IP address on which to listen for incoming handshake requests. Address Gets the IP address of the server. Declaration public IPAddress Address { get; } Property Value Type Description System.Net.IPAddress A System.Net.IPAddress that represents the local IP address on which to listen for incoming handshake requests. AllowForwardedRequest Gets or sets a value indicating whether the server accepts every handshake request without checking the request URI. Declaration public bool AllowForwardedRequest { get; set; } Property Value Type Description System.Boolean true if the server accepts every handshake request without checking the request URI; otherwise, false . The default value is false . Remarks The set operation does nothing if the server has already started or it is shutting down. AllowForwardedRequest Gets or sets a value indicating whether the server accepts every handshake request without checking the request URI. Declaration public bool AllowForwardedRequest { get; set; } Property Value Type Description System.Boolean true if the server accepts every handshake request without checking the request URI; otherwise, false . The default value is false . Remarks The set operation does nothing if the server has already started or it is shutting down. AuthenticationSchemes Gets or sets the scheme used to authenticate the clients. Declaration public AuthenticationSchemes AuthenticationSchemes { get; set; } Property Value Type Description AuthenticationSchemes One of the AuthenticationSchemes enum values. It represents the scheme used to authenticate the clients. The default value is . Remarks The set operation does nothing if the server has already started or it is shutting down. AuthenticationSchemes Gets or sets the scheme used to authenticate the clients. Declaration public AuthenticationSchemes AuthenticationSchemes { get; set; } Property Value Type Description AuthenticationSchemes One of the AuthenticationSchemes enum values. It represents the scheme used to authenticate the clients. The default value is . Remarks The set operation does nothing if the server has already started or it is shutting down. IsListening Gets a value indicating whether the server has started. Declaration public bool IsListening { get; } Property Value Type Description System.Boolean true if the server has started; otherwise, false . IsListening Gets a value indicating whether the server has started. Declaration public bool IsListening { get; } Property Value Type Description System.Boolean true if the server has started; otherwise, false . IsSecure Gets a value indicating whether secure connections are provided. Declaration public bool IsSecure { get; } Property Value Type Description System.Boolean true if this instance provides secure connections; otherwise, false . IsSecure Gets a value indicating whether secure connections are provided. Declaration public bool IsSecure { get; } Property Value Type Description System.Boolean true if this instance provides secure connections; otherwise, false . KeepClean Gets or sets a value indicating whether the server cleans up the inactive sessions periodically. Declaration public bool KeepClean { get; set; } Property Value Type Description System.Boolean true if the server cleans up the inactive sessions every 60 seconds; otherwise, false . The default value is true . Remarks The set operation does nothing if the server has already started or it is shutting down. KeepClean Gets or sets a value indicating whether the server cleans up the inactive sessions periodically. Declaration public bool KeepClean { get; set; } Property Value Type Description System.Boolean true if the server cleans up the inactive sessions every 60 seconds; otherwise, false . The default value is true . Remarks The set operation does nothing if the server has already started or it is shutting down. Log Gets the logging function for the server. Declaration public Logger Log { get; } Property Value Type Description Logger A Logger that provides the logging function. Remarks The default logging level is . Log Gets the logging function for the server. Declaration public Logger Log { get; } Property Value Type Description Logger A Logger that provides the logging function. Remarks The default logging level is . Port Gets the port of the server. Declaration public int Port { get; } Property Value Type Description System.Int32 An System.Int32 that represents the number of the port on which to listen for incoming handshake requests. Port Gets the port of the server. Declaration public int Port { get; } Property Value Type Description System.Int32 An System.Int32 that represents the number of the port on which to listen for incoming handshake requests. Realm Gets or sets the realm used for authentication. Declaration public string Realm { get; set; } Property Value Type Description System.String A System.String or null by default. That string represents the name of the realm. Remarks \"SECRET AREA\" is used as the realm if the value is null or an empty string. The set operation does nothing if the server has already started or it is shutting down. Realm Gets or sets the realm used for authentication. Declaration public string Realm { get; set; } Property Value Type Description System.String A System.String or null by default. That string represents the name of the realm. Remarks \"SECRET AREA\" is used as the realm if the value is null or an empty string. The set operation does nothing if the server has already started or it is shutting down. ReuseAddress Gets or sets a value indicating whether the server is allowed to be bound to an address that is already in use. Declaration public bool ReuseAddress { get; set; } Property Value Type Description System.Boolean true if the server is allowed to be bound to an address that is already in use; otherwise, false . The default value is false . Remarks You should set this property to true if you would like to resolve to wait for socket in TIME_WAIT state. The set operation does nothing if the server has already started or it is shutting down. ReuseAddress Gets or sets a value indicating whether the server is allowed to be bound to an address that is already in use. Declaration public bool ReuseAddress { get; set; } Property Value Type Description System.Boolean true if the server is allowed to be bound to an address that is already in use; otherwise, false . The default value is false . Remarks You should set this property to true if you would like to resolve to wait for socket in TIME_WAIT state. The set operation does nothing if the server has already started or it is shutting down. SslConfiguration Gets the configuration for secure connection. Declaration public ServerSslConfiguration SslConfiguration { get; } Property Value Type Description ServerSslConfiguration A that represents the configuration used to provide secure connections. Remarks This configuration will be referenced when attempts to start, so it must be configured before the start method is called. Exceptions Type Condition System.InvalidOperationException This instance does not provide secure connections. SslConfiguration Gets the configuration for secure connection. Declaration public ServerSslConfiguration SslConfiguration { get; } Property Value Type Description ServerSslConfiguration A that represents the configuration used to provide secure connections. Remarks This configuration will be referenced when attempts to start, so it must be configured before the start method is called. Exceptions Type Condition System.InvalidOperationException This instance does not provide secure connections. UserCredentialsFinder Gets or sets the delegate used to find the credentials for an identity. Declaration public Func<IIdentity, NetworkCredential> UserCredentialsFinder { get; set; } Property Value Type Description System.Func < IIdentity , NetworkCredential > A Func< , > delegate or null if not needed. That delegate invokes the method called for finding the credentials used to authenticate a client. The default value is null . Remarks No credentials are found if the method invoked by the delegate returns null or the value is null . The set operation does nothing if the server has already started or it is shutting down. UserCredentialsFinder Gets or sets the delegate used to find the credentials for an identity. Declaration public Func<IIdentity, NetworkCredential> UserCredentialsFinder { get; set; } Property Value Type Description System.Func < IIdentity , NetworkCredential > A Func< , > delegate or null if not needed. That delegate invokes the method called for finding the credentials used to authenticate a client. The default value is null . Remarks No credentials are found if the method invoked by the delegate returns null or the value is null . The set operation does nothing if the server has already started or it is shutting down. WaitTime Gets or sets the time to wait for the response to the WebSocket Ping or Close. Declaration public TimeSpan WaitTime { get; set; } Property Value Type Description System.TimeSpan A System.TimeSpan to wait for the response. The default value is the same as 1 second. Remarks The set operation does nothing if the server has already started or it is shutting down. Exceptions Type Condition System.ArgumentOutOfRangeException The value specified for a set operation is zero or less. WaitTime Gets or sets the time to wait for the response to the WebSocket Ping or Close. Declaration public TimeSpan WaitTime { get; set; } Property Value Type Description System.TimeSpan A System.TimeSpan to wait for the response. The default value is the same as 1 second. Remarks The set operation does nothing if the server has already started or it is shutting down. Exceptions Type Condition System.ArgumentOutOfRangeException The value specified for a set operation is zero or less. WebSocketServices Gets the management function for the WebSocket services provided by the server. Declaration public WebSocketServiceManager WebSocketServices { get; } Property Value Type Description WebSocketServiceManager A WebSocketServiceManager that manages the WebSocket services provided by the server. WebSocketServices Gets the management function for the WebSocket services provided by the server. Declaration public WebSocketServiceManager WebSocketServices { get; } Property Value Type Description WebSocketServiceManager A WebSocketServiceManager that manages the WebSocket services provided by the server. Methods AddWebSocketService<TBehaviorWithNew>(String) Adds a WebSocket service with the specified behavior and path. Declaration public void AddWebSocketService<TBehaviorWithNew>(string path) where TBehaviorWithNew : WebSocketBehavior, new() Parameters Type Name Description System.String path A System.String that represents an absolute path to the service to add. / is trimmed from the end of the string if present. Type Parameters Name Description TBehaviorWithNew The type of the behavior for the service. It must inherit the WebSocketBehavior class. And also, it must have a public parameterless constructor. Exceptions Type Condition System.ArgumentNullException path is null . System.ArgumentException path is an empty string. -or- path is not an absolute path. -or- path includes either or both query and fragment components. -or- path is already in use. AddWebSocketService<TBehaviorWithNew>(String) Adds a WebSocket service with the specified behavior and path. Declaration public void AddWebSocketService<TBehaviorWithNew>(string path) where TBehaviorWithNew : WebSocketBehavior, new() Parameters Type Name Description System.String path A System.String that represents an absolute path to the service to add. / is trimmed from the end of the string if present. Type Parameters Name Description TBehaviorWithNew The type of the behavior for the service. It must inherit the WebSocketBehavior class. And also, it must have a public parameterless constructor. Exceptions Type Condition System.ArgumentNullException path is null . System.ArgumentException path is an empty string. -or- path is not an absolute path. -or- path includes either or both query and fragment components. -or- path is already in use. AddWebSocketService<TBehaviorWithNew>(String, Action<TBehaviorWithNew>) Adds a WebSocket service with the specified behavior, path, and delegate. Declaration public void AddWebSocketService<TBehaviorWithNew>(string path, Action<TBehaviorWithNew> initializer) where TBehaviorWithNew : WebSocketBehavior, new() Parameters Type Name Description System.String path A System.String that represents an absolute path to the service to add. / is trimmed from the end of the string if present. System.Action <TBehaviorWithNew> initializer An Action<TBehaviorWithNew> delegate or null if not needed. The delegate invokes the method called when initializing a new session instance for the service. Type Parameters Name Description TBehaviorWithNew The type of the behavior for the service. It must inherit the WebSocketBehavior class. And also, it must have a public parameterless constructor. Exceptions Type Condition System.ArgumentNullException path is null . System.ArgumentException path is an empty string. -or- path is not an absolute path. -or- path includes either or both query and fragment components. -or- path is already in use. AddWebSocketService<TBehaviorWithNew>(String, Action<TBehaviorWithNew>) Adds a WebSocket service with the specified behavior, path, and delegate. Declaration public void AddWebSocketService<TBehaviorWithNew>(string path, Action<TBehaviorWithNew> initializer) where TBehaviorWithNew : WebSocketBehavior, new() Parameters Type Name Description System.String path A System.String that represents an absolute path to the service to add. / is trimmed from the end of the string if present. System.Action <TBehaviorWithNew> initializer An Action<TBehaviorWithNew> delegate or null if not needed. The delegate invokes the method called when initializing a new session instance for the service. Type Parameters Name Description TBehaviorWithNew The type of the behavior for the service. It must inherit the WebSocketBehavior class. And also, it must have a public parameterless constructor. Exceptions Type Condition System.ArgumentNullException path is null . System.ArgumentException path is an empty string. -or- path is not an absolute path. -or- path includes either or both query and fragment components. -or- path is already in use. RemoveWebSocketService(String) Removes a WebSocket service with the specified path. Declaration public bool RemoveWebSocketService(string path) Parameters Type Name Description System.String path A System.String that represents an absolute path to the service to remove. / is trimmed from the end of the string if present. Returns Type Description System.Boolean true if the service is successfully found and removed; otherwise, false . Remarks The service is stopped with close status 1001 (going away) if it has already started. Exceptions Type Condition System.ArgumentNullException path is null . System.ArgumentException path is an empty string. -or- path is not an absolute path. -or- path includes either or both query and fragment components. RemoveWebSocketService(String) Removes a WebSocket service with the specified path. Declaration public bool RemoveWebSocketService(string path) Parameters Type Name Description System.String path A System.String that represents an absolute path to the service to remove. / is trimmed from the end of the string if present. Returns Type Description System.Boolean true if the service is successfully found and removed; otherwise, false . Remarks The service is stopped with close status 1001 (going away) if it has already started. Exceptions Type Condition System.ArgumentNullException path is null . System.ArgumentException path is an empty string. -or- path is not an absolute path. -or- path includes either or both query and fragment components. Start() Starts receiving incoming handshake requests. Declaration public void Start() Remarks This method does nothing if the server has already started or it is shutting down. Exceptions Type Condition System.InvalidOperationException There is no server certificate for secure connection. -or- The underlying has failed to start. Start() Starts receiving incoming handshake requests. Declaration public void Start() Remarks This method does nothing if the server has already started or it is shutting down. Exceptions Type Condition System.InvalidOperationException There is no server certificate for secure connection. -or- The underlying has failed to start. Stop() Stops receiving incoming handshake requests. Declaration public void Stop() Exceptions Type Condition System.InvalidOperationException The underlying has failed to stop. Stop() Stops receiving incoming handshake requests. Declaration public void Stop() Exceptions Type Condition System.InvalidOperationException The underlying has failed to stop."
  },
  "api/WebSocketSharp.Server.WebSocketServiceHost.html": {
    "href": "api/WebSocketSharp.Server.WebSocketServiceHost.html",
    "title": "Class WebSocketServiceHost | Unity Algorand SDK",
    "keywords": "Class WebSocketServiceHost Exposes the methods and properties used to access the information in a WebSocket service provided by the WebSocketServer or HttpServer . Inheritance System.Object WebSocketServiceHost Namespace : WebSocketSharp.Server Assembly : cs.temp.dll.dll Syntax public abstract class WebSocketServiceHost Remarks This class is an abstract class. Constructors WebSocketServiceHost(String, Logger) Initializes a new instance of the WebSocketServiceHost class with the specified path and log . Declaration protected WebSocketServiceHost(string path, Logger log) Parameters Type Name Description System.String path A System.String that represents the absolute path to the service. Logger log A Logger that represents the logging function for the service. WebSocketServiceHost(String, Logger) Initializes a new instance of the WebSocketServiceHost class with the specified path and log . Declaration protected WebSocketServiceHost(string path, Logger log) Parameters Type Name Description System.String path A System.String that represents the absolute path to the service. Logger log A Logger that represents the logging function for the service. Properties BehaviorType Gets the System.Type of the behavior of the service. Declaration public abstract Type BehaviorType { get; } Property Value Type Description System.Type A System.Type that represents the type of the behavior of the service. BehaviorType Gets the System.Type of the behavior of the service. Declaration public abstract Type BehaviorType { get; } Property Value Type Description System.Type A System.Type that represents the type of the behavior of the service. KeepClean Gets or sets a value indicating whether the service cleans up the inactive sessions periodically. Declaration public bool KeepClean { get; set; } Property Value Type Description System.Boolean true if the service cleans up the inactive sessions every 60 seconds; otherwise, false . Remarks The set operation does nothing if the service has already started or it is shutting down. KeepClean Gets or sets a value indicating whether the service cleans up the inactive sessions periodically. Declaration public bool KeepClean { get; set; } Property Value Type Description System.Boolean true if the service cleans up the inactive sessions every 60 seconds; otherwise, false . Remarks The set operation does nothing if the service has already started or it is shutting down. Log Gets the logging function for the service. Declaration protected Logger Log { get; } Property Value Type Description Logger A Logger that provides the logging function. Log Gets the logging function for the service. Declaration protected Logger Log { get; } Property Value Type Description Logger A Logger that provides the logging function. Path Gets the path to the service. Declaration public string Path { get; } Property Value Type Description System.String A System.String that represents the absolute path to the service. Path Gets the path to the service. Declaration public string Path { get; } Property Value Type Description System.String A System.String that represents the absolute path to the service. Sessions Gets the management function for the sessions in the service. Declaration public WebSocketSessionManager Sessions { get; } Property Value Type Description WebSocketSessionManager A WebSocketSessionManager that manages the sessions in the service. Sessions Gets the management function for the sessions in the service. Declaration public WebSocketSessionManager Sessions { get; } Property Value Type Description WebSocketSessionManager A WebSocketSessionManager that manages the sessions in the service. WaitTime Gets or sets the time to wait for the response to the WebSocket Ping or Close. Declaration public TimeSpan WaitTime { get; set; } Property Value Type Description System.TimeSpan A System.TimeSpan to wait for the response. Remarks The set operation does nothing if the service has already started or it is shutting down. Exceptions Type Condition System.ArgumentOutOfRangeException The value specified for a set operation is zero or less. WaitTime Gets or sets the time to wait for the response to the WebSocket Ping or Close. Declaration public TimeSpan WaitTime { get; set; } Property Value Type Description System.TimeSpan A System.TimeSpan to wait for the response. Remarks The set operation does nothing if the service has already started or it is shutting down. Exceptions Type Condition System.ArgumentOutOfRangeException The value specified for a set operation is zero or less. Methods CreateSession() Creates a new session for the service. Declaration protected abstract WebSocketBehavior CreateSession() Returns Type Description WebSocketBehavior A WebSocketBehavior instance that represents the new session. CreateSession() Creates a new session for the service. Declaration protected abstract WebSocketBehavior CreateSession() Returns Type Description WebSocketBehavior A WebSocketBehavior instance that represents the new session."
  },
  "api/WebSocketSharp.Server.WebSocketServiceManager.html": {
    "href": "api/WebSocketSharp.Server.WebSocketServiceManager.html",
    "title": "Class WebSocketServiceManager | Unity Algorand SDK",
    "keywords": "Class WebSocketServiceManager Provides the management function for the WebSocket services. Inheritance System.Object WebSocketServiceManager Namespace : WebSocketSharp.Server Assembly : cs.temp.dll.dll Syntax public class WebSocketServiceManager Remarks This class manages the WebSocket services provided by the WebSocketServer or HttpServer . Properties Count Gets the number of the WebSocket services. Declaration public int Count { get; } Property Value Type Description System.Int32 An System.Int32 that represents the number of the services. Count Gets the number of the WebSocket services. Declaration public int Count { get; } Property Value Type Description System.Int32 An System.Int32 that represents the number of the services. Hosts Gets the host instances for the WebSocket services. Declaration public IEnumerable<WebSocketServiceHost> Hosts { get; } Property Value Type Description IEnumerable < WebSocketServiceHost > An IEnumerable<WebSocketServiceHost> instance. It provides an enumerator which supports the iteration over the collection of the host instances. Hosts Gets the host instances for the WebSocket services. Declaration public IEnumerable<WebSocketServiceHost> Hosts { get; } Property Value Type Description IEnumerable < WebSocketServiceHost > An IEnumerable<WebSocketServiceHost> instance. It provides an enumerator which supports the iteration over the collection of the host instances. Item[String] Gets the host instance for a WebSocket service with the specified path. Declaration public WebSocketServiceHost this[string path] { get; } Parameters Type Name Description System.String path A System.String that represents an absolute path to the service to find. / is trimmed from the end of the string if present. Property Value Type Description WebSocketServiceHost A WebSocketServiceHost instance or null if not found. The host instance provides the function to access the information in the service. Exceptions Type Condition System.ArgumentNullException path is null . System.ArgumentException path is empty. -or- path is not an absolute path. -or- path includes either or both query and fragment components. Item[String] Gets the host instance for a WebSocket service with the specified path. Declaration public WebSocketServiceHost this[string path] { get; } Parameters Type Name Description System.String path A System.String that represents an absolute path to the service to find. / is trimmed from the end of the string if present. Property Value Type Description WebSocketServiceHost A WebSocketServiceHost instance or null if not found. The host instance provides the function to access the information in the service. Exceptions Type Condition System.ArgumentNullException path is null . System.ArgumentException path is empty. -or- path is not an absolute path. -or- path includes either or both query and fragment components. KeepClean Gets or sets a value indicating whether the inactive sessions in the WebSocket services are cleaned up periodically. Declaration public bool KeepClean { get; set; } Property Value Type Description System.Boolean true if the inactive sessions are cleaned up every 60 seconds; otherwise, false . Remarks The set operation does nothing if the server has already started or it is shutting down. KeepClean Gets or sets a value indicating whether the inactive sessions in the WebSocket services are cleaned up periodically. Declaration public bool KeepClean { get; set; } Property Value Type Description System.Boolean true if the inactive sessions are cleaned up every 60 seconds; otherwise, false . Remarks The set operation does nothing if the server has already started or it is shutting down. Paths Gets the paths for the WebSocket services. Declaration public IEnumerable<string> Paths { get; } Property Value Type Description IEnumerable < System.String > An IEnumerable<string> instance. It provides an enumerator which supports the iteration over the collection of the paths. Paths Gets the paths for the WebSocket services. Declaration public IEnumerable<string> Paths { get; } Property Value Type Description IEnumerable < System.String > An IEnumerable<string> instance. It provides an enumerator which supports the iteration over the collection of the paths. WaitTime Gets or sets the time to wait for the response to the WebSocket Ping or Close. Declaration public TimeSpan WaitTime { get; set; } Property Value Type Description System.TimeSpan A System.TimeSpan to wait for the response. Remarks The set operation does nothing if the server has already started or it is shutting down. Exceptions Type Condition System.ArgumentOutOfRangeException The value specified for a set operation is zero or less. WaitTime Gets or sets the time to wait for the response to the WebSocket Ping or Close. Declaration public TimeSpan WaitTime { get; set; } Property Value Type Description System.TimeSpan A System.TimeSpan to wait for the response. Remarks The set operation does nothing if the server has already started or it is shutting down. Exceptions Type Condition System.ArgumentOutOfRangeException The value specified for a set operation is zero or less. Methods AddService<TBehavior>(String, Action<TBehavior>) Adds a WebSocket service with the specified behavior, path, and delegate. Declaration public void AddService<TBehavior>(string path, Action<TBehavior> initializer) where TBehavior : WebSocketBehavior, new() Parameters Type Name Description System.String path A System.String that represents an absolute path to the service to add. / is trimmed from the end of the string if present. System.Action <TBehavior> initializer An Action<TBehavior> delegate or null if not needed. The delegate invokes the method called when initializing a new session instance for the service. Type Parameters Name Description TBehavior The type of the behavior for the service. It must inherit the WebSocketBehavior class. And also, it must have a public parameterless constructor. Exceptions Type Condition System.ArgumentNullException path is null . System.ArgumentException path is empty. -or- path is not an absolute path. -or- path includes either or both query and fragment components. -or- path is already in use. AddService<TBehavior>(String, Action<TBehavior>) Adds a WebSocket service with the specified behavior, path, and delegate. Declaration public void AddService<TBehavior>(string path, Action<TBehavior> initializer) where TBehavior : WebSocketBehavior, new() Parameters Type Name Description System.String path A System.String that represents an absolute path to the service to add. / is trimmed from the end of the string if present. System.Action <TBehavior> initializer An Action<TBehavior> delegate or null if not needed. The delegate invokes the method called when initializing a new session instance for the service. Type Parameters Name Description TBehavior The type of the behavior for the service. It must inherit the WebSocketBehavior class. And also, it must have a public parameterless constructor. Exceptions Type Condition System.ArgumentNullException path is null . System.ArgumentException path is empty. -or- path is not an absolute path. -or- path includes either or both query and fragment components. -or- path is already in use. Clear() Removes all WebSocket services managed by the manager. Declaration public void Clear() Remarks A service is stopped with close status 1001 (going away) if it has already started. Clear() Removes all WebSocket services managed by the manager. Declaration public void Clear() Remarks A service is stopped with close status 1001 (going away) if it has already started. RemoveService(String) Removes a WebSocket service with the specified path. Declaration public bool RemoveService(string path) Parameters Type Name Description System.String path A System.String that represents an absolute path to the service to remove. / is trimmed from the end of the string if present. Returns Type Description System.Boolean true if the service is successfully found and removed; otherwise, false . Remarks The service is stopped with close status 1001 (going away) if it has already started. Exceptions Type Condition System.ArgumentNullException path is null . System.ArgumentException path is empty. -or- path is not an absolute path. -or- path includes either or both query and fragment components. RemoveService(String) Removes a WebSocket service with the specified path. Declaration public bool RemoveService(string path) Parameters Type Name Description System.String path A System.String that represents an absolute path to the service to remove. / is trimmed from the end of the string if present. Returns Type Description System.Boolean true if the service is successfully found and removed; otherwise, false . Remarks The service is stopped with close status 1001 (going away) if it has already started. Exceptions Type Condition System.ArgumentNullException path is null . System.ArgumentException path is empty. -or- path is not an absolute path. -or- path includes either or both query and fragment components. TryGetServiceHost(String, out WebSocketServiceHost) Tries to get the host instance for a WebSocket service with the specified path. Declaration public bool TryGetServiceHost(string path, out WebSocketServiceHost host) Parameters Type Name Description System.String path A System.String that represents an absolute path to the service to find. / is trimmed from the end of the string if present. WebSocketServiceHost host When this method returns, a WebSocketServiceHost instance or null if not found. The host instance provides the function to access the information in the service. Returns Type Description System.Boolean true if the service is successfully found; otherwise, false . Exceptions Type Condition System.ArgumentNullException path is null . System.ArgumentException path is empty. -or- path is not an absolute path. -or- path includes either or both query and fragment components. TryGetServiceHost(String, out WebSocketServiceHost) Tries to get the host instance for a WebSocket service with the specified path. Declaration public bool TryGetServiceHost(string path, out WebSocketServiceHost host) Parameters Type Name Description System.String path A System.String that represents an absolute path to the service to find. / is trimmed from the end of the string if present. WebSocketServiceHost host When this method returns, a WebSocketServiceHost instance or null if not found. The host instance provides the function to access the information in the service. Returns Type Description System.Boolean true if the service is successfully found; otherwise, false . Exceptions Type Condition System.ArgumentNullException path is null . System.ArgumentException path is empty. -or- path is not an absolute path. -or- path includes either or both query and fragment components."
  },
  "api/WebSocketSharp.Server.WebSocketSessionManager.html": {
    "href": "api/WebSocketSharp.Server.WebSocketSessionManager.html",
    "title": "Class WebSocketSessionManager | Unity Algorand SDK",
    "keywords": "Class WebSocketSessionManager Provides the management function for the sessions in a WebSocket service. Inheritance System.Object WebSocketSessionManager Namespace : WebSocketSharp.Server Assembly : cs.temp.dll.dll Syntax public class WebSocketSessionManager Remarks This class manages the sessions in a WebSocket service provided by the WebSocketServer or HttpServer . Properties ActiveIDs Gets the IDs for the active sessions in the WebSocket service. Declaration public IEnumerable<string> ActiveIDs { get; } Property Value Type Description IEnumerable < System.String > An IEnumerable<string> instance. It provides an enumerator which supports the iteration over the collection of the IDs for the active sessions. ActiveIDs Gets the IDs for the active sessions in the WebSocket service. Declaration public IEnumerable<string> ActiveIDs { get; } Property Value Type Description IEnumerable < System.String > An IEnumerable<string> instance. It provides an enumerator which supports the iteration over the collection of the IDs for the active sessions. Count Gets the number of the sessions in the WebSocket service. Declaration public int Count { get; } Property Value Type Description System.Int32 An System.Int32 that represents the number of the sessions. Count Gets the number of the sessions in the WebSocket service. Declaration public int Count { get; } Property Value Type Description System.Int32 An System.Int32 that represents the number of the sessions. IDs Gets the IDs for the sessions in the WebSocket service. Declaration public IEnumerable<string> IDs { get; } Property Value Type Description IEnumerable < System.String > An IEnumerable<string> instance. It provides an enumerator which supports the iteration over the collection of the IDs for the sessions. IDs Gets the IDs for the sessions in the WebSocket service. Declaration public IEnumerable<string> IDs { get; } Property Value Type Description IEnumerable < System.String > An IEnumerable<string> instance. It provides an enumerator which supports the iteration over the collection of the IDs for the sessions. InactiveIDs Gets the IDs for the inactive sessions in the WebSocket service. Declaration public IEnumerable<string> InactiveIDs { get; } Property Value Type Description IEnumerable < System.String > An IEnumerable<string> instance. It provides an enumerator which supports the iteration over the collection of the IDs for the inactive sessions. InactiveIDs Gets the IDs for the inactive sessions in the WebSocket service. Declaration public IEnumerable<string> InactiveIDs { get; } Property Value Type Description IEnumerable < System.String > An IEnumerable<string> instance. It provides an enumerator which supports the iteration over the collection of the IDs for the inactive sessions. Item[String] Gets the session instance with id . Declaration public IWebSocketSession this[string id] { get; } Parameters Type Name Description System.String id A System.String that represents the ID of the session to find. Property Value Type Description IWebSocketSession A IWebSocketSession instance or null if not found. The session instance provides the function to access the information in the session. Exceptions Type Condition System.ArgumentNullException id is null . System.ArgumentException id is an empty string. Item[String] Gets the session instance with id . Declaration public IWebSocketSession this[string id] { get; } Parameters Type Name Description System.String id A System.String that represents the ID of the session to find. Property Value Type Description IWebSocketSession A IWebSocketSession instance or null if not found. The session instance provides the function to access the information in the session. Exceptions Type Condition System.ArgumentNullException id is null . System.ArgumentException id is an empty string. KeepClean Gets or sets a value indicating whether the inactive sessions in the WebSocket service are cleaned up periodically. Declaration public bool KeepClean { get; set; } Property Value Type Description System.Boolean true if the inactive sessions are cleaned up every 60 seconds; otherwise, false . Remarks The set operation does nothing if the service has already started or it is shutting down. KeepClean Gets or sets a value indicating whether the inactive sessions in the WebSocket service are cleaned up periodically. Declaration public bool KeepClean { get; set; } Property Value Type Description System.Boolean true if the inactive sessions are cleaned up every 60 seconds; otherwise, false . Remarks The set operation does nothing if the service has already started or it is shutting down. Sessions Gets the session instances in the WebSocket service. Declaration public IEnumerable<IWebSocketSession> Sessions { get; } Property Value Type Description IEnumerable < IWebSocketSession > An IEnumerable<IWebSocketSession> instance. It provides an enumerator which supports the iteration over the collection of the session instances. Sessions Gets the session instances in the WebSocket service. Declaration public IEnumerable<IWebSocketSession> Sessions { get; } Property Value Type Description IEnumerable < IWebSocketSession > An IEnumerable<IWebSocketSession> instance. It provides an enumerator which supports the iteration over the collection of the session instances. WaitTime Gets or sets the time to wait for the response to the WebSocket Ping or Close. Declaration public TimeSpan WaitTime { get; set; } Property Value Type Description System.TimeSpan A System.TimeSpan to wait for the response. Remarks The set operation does nothing if the service has already started or it is shutting down. Exceptions Type Condition System.ArgumentOutOfRangeException The value specified for a set operation is zero or less. WaitTime Gets or sets the time to wait for the response to the WebSocket Ping or Close. Declaration public TimeSpan WaitTime { get; set; } Property Value Type Description System.TimeSpan A System.TimeSpan to wait for the response. Remarks The set operation does nothing if the service has already started or it is shutting down. Exceptions Type Condition System.ArgumentOutOfRangeException The value specified for a set operation is zero or less. Methods Broadcast(Stream, Int32) Sends the data from stream to every client in the WebSocket service. Declaration public void Broadcast(Stream stream, int length) Parameters Type Name Description Stream stream A instance from which to read the data to send. System.Int32 length An System.Int32 that specifies the number of bytes to send. Remarks The data is sent as the binary data. Exceptions Type Condition System.InvalidOperationException The current state of the manager is not Start. System.ArgumentNullException stream is null . System.ArgumentException stream cannot be read. -or- length is less than 1. -or- No data could be read from stream . Broadcast(Stream, Int32) Sends the data from stream to every client in the WebSocket service. Declaration public void Broadcast(Stream stream, int length) Parameters Type Name Description Stream stream A instance from which to read the data to send. System.Int32 length An System.Int32 that specifies the number of bytes to send. Remarks The data is sent as the binary data. Exceptions Type Condition System.InvalidOperationException The current state of the manager is not Start. System.ArgumentNullException stream is null . System.ArgumentException stream cannot be read. -or- length is less than 1. -or- No data could be read from stream . Broadcast(Byte[]) Sends data to every client in the WebSocket service. Declaration public void Broadcast(byte[] data) Parameters Type Name Description System.Byte [] data An array of System.Byte that represents the binary data to send. Exceptions Type Condition System.InvalidOperationException The current state of the manager is not Start. System.ArgumentNullException data is null . Broadcast(Byte[]) Sends data to every client in the WebSocket service. Declaration public void Broadcast(byte[] data) Parameters Type Name Description System.Byte [] data An array of System.Byte that represents the binary data to send. Exceptions Type Condition System.InvalidOperationException The current state of the manager is not Start. System.ArgumentNullException data is null . Broadcast(String) Sends data to every client in the WebSocket service. Declaration public void Broadcast(string data) Parameters Type Name Description System.String data A System.String that represents the text data to send. Exceptions Type Condition System.InvalidOperationException The current state of the manager is not Start. System.ArgumentNullException data is null . System.ArgumentException data could not be UTF-8-encoded. Broadcast(String) Sends data to every client in the WebSocket service. Declaration public void Broadcast(string data) Parameters Type Name Description System.String data A System.String that represents the text data to send. Exceptions Type Condition System.InvalidOperationException The current state of the manager is not Start. System.ArgumentNullException data is null . System.ArgumentException data could not be UTF-8-encoded. BroadcastAsync(Stream, Int32, Action) Sends the data from stream asynchronously to every client in the WebSocket service. Declaration public void BroadcastAsync(Stream stream, int length, Action completed) Parameters Type Name Description Stream stream A instance from which to read the data to send. System.Int32 length An System.Int32 that specifies the number of bytes to send. System.Action completed An System.Action delegate or null if not needed. The delegate invokes the method called when the send is complete. Remarks The data is sent as the binary data. This method does not wait for the send to be complete. Exceptions Type Condition System.InvalidOperationException The current state of the manager is not Start. System.ArgumentNullException stream is null . System.ArgumentException stream cannot be read. -or- length is less than 1. -or- No data could be read from stream . BroadcastAsync(Stream, Int32, Action) Sends the data from stream asynchronously to every client in the WebSocket service. Declaration public void BroadcastAsync(Stream stream, int length, Action completed) Parameters Type Name Description Stream stream A instance from which to read the data to send. System.Int32 length An System.Int32 that specifies the number of bytes to send. System.Action completed An System.Action delegate or null if not needed. The delegate invokes the method called when the send is complete. Remarks The data is sent as the binary data. This method does not wait for the send to be complete. Exceptions Type Condition System.InvalidOperationException The current state of the manager is not Start. System.ArgumentNullException stream is null . System.ArgumentException stream cannot be read. -or- length is less than 1. -or- No data could be read from stream . BroadcastAsync(Byte[], Action) Sends data asynchronously to every client in the WebSocket service. Declaration public void BroadcastAsync(byte[] data, Action completed) Parameters Type Name Description System.Byte [] data An array of System.Byte that represents the binary data to send. System.Action completed An System.Action delegate or null if not needed. The delegate invokes the method called when the send is complete. Remarks This method does not wait for the send to be complete. Exceptions Type Condition System.InvalidOperationException The current state of the manager is not Start. System.ArgumentNullException data is null . BroadcastAsync(Byte[], Action) Sends data asynchronously to every client in the WebSocket service. Declaration public void BroadcastAsync(byte[] data, Action completed) Parameters Type Name Description System.Byte [] data An array of System.Byte that represents the binary data to send. System.Action completed An System.Action delegate or null if not needed. The delegate invokes the method called when the send is complete. Remarks This method does not wait for the send to be complete. Exceptions Type Condition System.InvalidOperationException The current state of the manager is not Start. System.ArgumentNullException data is null . BroadcastAsync(String, Action) Sends data asynchronously to every client in the WebSocket service. Declaration public void BroadcastAsync(string data, Action completed) Parameters Type Name Description System.String data A System.String that represents the text data to send. System.Action completed An System.Action delegate or null if not needed. The delegate invokes the method called when the send is complete. Remarks This method does not wait for the send to be complete. Exceptions Type Condition System.InvalidOperationException The current state of the manager is not Start. System.ArgumentNullException data is null . System.ArgumentException data could not be UTF-8-encoded. BroadcastAsync(String, Action) Sends data asynchronously to every client in the WebSocket service. Declaration public void BroadcastAsync(string data, Action completed) Parameters Type Name Description System.String data A System.String that represents the text data to send. System.Action completed An System.Action delegate or null if not needed. The delegate invokes the method called when the send is complete. Remarks This method does not wait for the send to be complete. Exceptions Type Condition System.InvalidOperationException The current state of the manager is not Start. System.ArgumentNullException data is null . System.ArgumentException data could not be UTF-8-encoded. CloseSession(String) Closes the specified session. Declaration public void CloseSession(string id) Parameters Type Name Description System.String id A System.String that represents the ID of the session to close. Exceptions Type Condition System.ArgumentNullException id is null . System.ArgumentException id is an empty string. System.InvalidOperationException The session could not be found. CloseSession(String) Closes the specified session. Declaration public void CloseSession(string id) Parameters Type Name Description System.String id A System.String that represents the ID of the session to close. Exceptions Type Condition System.ArgumentNullException id is null . System.ArgumentException id is an empty string. System.InvalidOperationException The session could not be found. CloseSession(String, UInt16, String) Closes the specified session with code and reason . Declaration public void CloseSession(string id, ushort code, string reason) Parameters Type Name Description System.String id A System.String that represents the ID of the session to close. System.UInt16 code A System.UInt16 that represents the status code indicating the reason for the close. The status codes are defined in Section 7.4 of RFC 6455. System.String reason A System.String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Exceptions Type Condition System.ArgumentNullException id is null . System.ArgumentException id is an empty string. -or- code is 1010 (mandatory extension). -or- code is 1005 (no status) and there is reason . -or- reason could not be UTF-8-encoded. System.InvalidOperationException The session could not be found. System.ArgumentOutOfRangeException code is less than 1000 or greater than 4999. -or- The size of reason is greater than 123 bytes. CloseSession(String, UInt16, String) Closes the specified session with code and reason . Declaration public void CloseSession(string id, ushort code, string reason) Parameters Type Name Description System.String id A System.String that represents the ID of the session to close. System.UInt16 code A System.UInt16 that represents the status code indicating the reason for the close. The status codes are defined in Section 7.4 of RFC 6455. System.String reason A System.String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Exceptions Type Condition System.ArgumentNullException id is null . System.ArgumentException id is an empty string. -or- code is 1010 (mandatory extension). -or- code is 1005 (no status) and there is reason . -or- reason could not be UTF-8-encoded. System.InvalidOperationException The session could not be found. System.ArgumentOutOfRangeException code is less than 1000 or greater than 4999. -or- The size of reason is greater than 123 bytes. CloseSession(String, CloseStatusCode, String) Closes the specified session with code and reason . Declaration public void CloseSession(string id, CloseStatusCode code, string reason) Parameters Type Name Description System.String id A System.String that represents the ID of the session to close. CloseStatusCode code One of the CloseStatusCode enum values. It represents the status code indicating the reason for the close. System.String reason A System.String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Exceptions Type Condition System.ArgumentNullException id is null . System.ArgumentException id is an empty string. -or- code is . -or- code is and there is reason . -or- reason could not be UTF-8-encoded. System.InvalidOperationException The session could not be found. System.ArgumentOutOfRangeException The size of reason is greater than 123 bytes. CloseSession(String, CloseStatusCode, String) Closes the specified session with code and reason . Declaration public void CloseSession(string id, CloseStatusCode code, string reason) Parameters Type Name Description System.String id A System.String that represents the ID of the session to close. CloseStatusCode code One of the CloseStatusCode enum values. It represents the status code indicating the reason for the close. System.String reason A System.String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Exceptions Type Condition System.ArgumentNullException id is null . System.ArgumentException id is an empty string. -or- code is . -or- code is and there is reason . -or- reason could not be UTF-8-encoded. System.InvalidOperationException The session could not be found. System.ArgumentOutOfRangeException The size of reason is greater than 123 bytes. PingTo(String) Sends a ping to the client using the specified session. Declaration public bool PingTo(string id) Parameters Type Name Description System.String id A System.String that represents the ID of the session. Returns Type Description System.Boolean true if the send has done with no error and a pong has been received from the client within a time; otherwise, false . Exceptions Type Condition System.ArgumentNullException id is null . System.ArgumentException id is an empty string. System.InvalidOperationException The session could not be found. PingTo(String) Sends a ping to the client using the specified session. Declaration public bool PingTo(string id) Parameters Type Name Description System.String id A System.String that represents the ID of the session. Returns Type Description System.Boolean true if the send has done with no error and a pong has been received from the client within a time; otherwise, false . Exceptions Type Condition System.ArgumentNullException id is null . System.ArgumentException id is an empty string. System.InvalidOperationException The session could not be found. PingTo(String, String) Sends a ping with message to the client using the specified session. Declaration public bool PingTo(string message, string id) Parameters Type Name Description System.String message A System.String that represents the message to send. The size must be 125 bytes or less in UTF-8. System.String id A System.String that represents the ID of the session. Returns Type Description System.Boolean true if the send has done with no error and a pong has been received from the client within a time; otherwise, false . Exceptions Type Condition System.ArgumentNullException id is null . System.ArgumentException id is an empty string. -or- message could not be UTF-8-encoded. System.InvalidOperationException The session could not be found. System.ArgumentOutOfRangeException The size of message is greater than 125 bytes. PingTo(String, String) Sends a ping with message to the client using the specified session. Declaration public bool PingTo(string message, string id) Parameters Type Name Description System.String message A System.String that represents the message to send. The size must be 125 bytes or less in UTF-8. System.String id A System.String that represents the ID of the session. Returns Type Description System.Boolean true if the send has done with no error and a pong has been received from the client within a time; otherwise, false . Exceptions Type Condition System.ArgumentNullException id is null . System.ArgumentException id is an empty string. -or- message could not be UTF-8-encoded. System.InvalidOperationException The session could not be found. System.ArgumentOutOfRangeException The size of message is greater than 125 bytes. SendTo(Stream, Int32, String) Sends the data from stream to the client using the specified session. Declaration public void SendTo(Stream stream, int length, string id) Parameters Type Name Description Stream stream A instance from which to read the data to send. System.Int32 length An System.Int32 that specifies the number of bytes to send. System.String id A System.String that represents the ID of the session. Remarks The data is sent as the binary data. Exceptions Type Condition System.ArgumentNullException id is null . -or- stream is null . System.ArgumentException id is an empty string. -or- stream cannot be read. -or- length is less than 1. -or- No data could be read from stream . System.InvalidOperationException The session could not be found. -or- The current state of the WebSocket connection is not Open. SendTo(Stream, Int32, String) Sends the data from stream to the client using the specified session. Declaration public void SendTo(Stream stream, int length, string id) Parameters Type Name Description Stream stream A instance from which to read the data to send. System.Int32 length An System.Int32 that specifies the number of bytes to send. System.String id A System.String that represents the ID of the session. Remarks The data is sent as the binary data. Exceptions Type Condition System.ArgumentNullException id is null . -or- stream is null . System.ArgumentException id is an empty string. -or- stream cannot be read. -or- length is less than 1. -or- No data could be read from stream . System.InvalidOperationException The session could not be found. -or- The current state of the WebSocket connection is not Open. SendTo(Byte[], String) Sends data to the client using the specified session. Declaration public void SendTo(byte[] data, string id) Parameters Type Name Description System.Byte [] data An array of System.Byte that represents the binary data to send. System.String id A System.String that represents the ID of the session. Exceptions Type Condition System.ArgumentNullException id is null . -or- data is null . System.ArgumentException id is an empty string. System.InvalidOperationException The session could not be found. -or- The current state of the WebSocket connection is not Open. SendTo(Byte[], String) Sends data to the client using the specified session. Declaration public void SendTo(byte[] data, string id) Parameters Type Name Description System.Byte [] data An array of System.Byte that represents the binary data to send. System.String id A System.String that represents the ID of the session. Exceptions Type Condition System.ArgumentNullException id is null . -or- data is null . System.ArgumentException id is an empty string. System.InvalidOperationException The session could not be found. -or- The current state of the WebSocket connection is not Open. SendTo(String, String) Sends data to the client using the specified session. Declaration public void SendTo(string data, string id) Parameters Type Name Description System.String data A System.String that represents the text data to send. System.String id A System.String that represents the ID of the session. Exceptions Type Condition System.ArgumentNullException id is null . -or- data is null . System.ArgumentException id is an empty string. -or- data could not be UTF-8-encoded. System.InvalidOperationException The session could not be found. -or- The current state of the WebSocket connection is not Open. SendTo(String, String) Sends data to the client using the specified session. Declaration public void SendTo(string data, string id) Parameters Type Name Description System.String data A System.String that represents the text data to send. System.String id A System.String that represents the ID of the session. Exceptions Type Condition System.ArgumentNullException id is null . -or- data is null . System.ArgumentException id is an empty string. -or- data could not be UTF-8-encoded. System.InvalidOperationException The session could not be found. -or- The current state of the WebSocket connection is not Open. SendToAsync(Stream, Int32, String, Action<Boolean>) Sends the data from stream asynchronously to the client using the specified session. Declaration public void SendToAsync(Stream stream, int length, string id, Action<bool> completed) Parameters Type Name Description Stream stream A instance from which to read the data to send. System.Int32 length An System.Int32 that specifies the number of bytes to send. System.String id A System.String that represents the ID of the session. System.Action < System.Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks The data is sent as the binary data. This method does not wait for the send to be complete. Exceptions Type Condition System.ArgumentNullException id is null . -or- stream is null . System.ArgumentException id is an empty string. -or- stream cannot be read. -or- length is less than 1. -or- No data could be read from stream . System.InvalidOperationException The session could not be found. -or- The current state of the WebSocket connection is not Open. SendToAsync(Stream, Int32, String, Action<Boolean>) Sends the data from stream asynchronously to the client using the specified session. Declaration public void SendToAsync(Stream stream, int length, string id, Action<bool> completed) Parameters Type Name Description Stream stream A instance from which to read the data to send. System.Int32 length An System.Int32 that specifies the number of bytes to send. System.String id A System.String that represents the ID of the session. System.Action < System.Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks The data is sent as the binary data. This method does not wait for the send to be complete. Exceptions Type Condition System.ArgumentNullException id is null . -or- stream is null . System.ArgumentException id is an empty string. -or- stream cannot be read. -or- length is less than 1. -or- No data could be read from stream . System.InvalidOperationException The session could not be found. -or- The current state of the WebSocket connection is not Open. SendToAsync(Byte[], String, Action<Boolean>) Sends data asynchronously to the client using the specified session. Declaration public void SendToAsync(byte[] data, string id, Action<bool> completed) Parameters Type Name Description System.Byte [] data An array of System.Byte that represents the binary data to send. System.String id A System.String that represents the ID of the session. System.Action < System.Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. Exceptions Type Condition System.ArgumentNullException id is null . -or- data is null . System.ArgumentException id is an empty string. System.InvalidOperationException The session could not be found. -or- The current state of the WebSocket connection is not Open. SendToAsync(Byte[], String, Action<Boolean>) Sends data asynchronously to the client using the specified session. Declaration public void SendToAsync(byte[] data, string id, Action<bool> completed) Parameters Type Name Description System.Byte [] data An array of System.Byte that represents the binary data to send. System.String id A System.String that represents the ID of the session. System.Action < System.Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. Exceptions Type Condition System.ArgumentNullException id is null . -or- data is null . System.ArgumentException id is an empty string. System.InvalidOperationException The session could not be found. -or- The current state of the WebSocket connection is not Open. SendToAsync(String, String, Action<Boolean>) Sends data asynchronously to the client using the specified session. Declaration public void SendToAsync(string data, string id, Action<bool> completed) Parameters Type Name Description System.String data A System.String that represents the text data to send. System.String id A System.String that represents the ID of the session. System.Action < System.Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. Exceptions Type Condition System.ArgumentNullException id is null . -or- data is null . System.ArgumentException id is an empty string. -or- data could not be UTF-8-encoded. System.InvalidOperationException The session could not be found. -or- The current state of the WebSocket connection is not Open. SendToAsync(String, String, Action<Boolean>) Sends data asynchronously to the client using the specified session. Declaration public void SendToAsync(string data, string id, Action<bool> completed) Parameters Type Name Description System.String data A System.String that represents the text data to send. System.String id A System.String that represents the ID of the session. System.Action < System.Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. Exceptions Type Condition System.ArgumentNullException id is null . -or- data is null . System.ArgumentException id is an empty string. -or- data could not be UTF-8-encoded. System.InvalidOperationException The session could not be found. -or- The current state of the WebSocket connection is not Open. Sweep() Cleans up the inactive sessions in the WebSocket service. Declaration public void Sweep() Sweep() Cleans up the inactive sessions in the WebSocket service. Declaration public void Sweep() TryGetSession(String, out IWebSocketSession) Tries to get the session instance with id . Declaration public bool TryGetSession(string id, out IWebSocketSession session) Parameters Type Name Description System.String id A System.String that represents the ID of the session to find. IWebSocketSession session When this method returns, a IWebSocketSession instance or null if not found. The session instance provides the function to access the information in the session. Returns Type Description System.Boolean true if the session is successfully found; otherwise, false . Exceptions Type Condition System.ArgumentNullException id is null . System.ArgumentException id is an empty string. TryGetSession(String, out IWebSocketSession) Tries to get the session instance with id . Declaration public bool TryGetSession(string id, out IWebSocketSession session) Parameters Type Name Description System.String id A System.String that represents the ID of the session to find. IWebSocketSession session When this method returns, a IWebSocketSession instance or null if not found. The session instance provides the function to access the information in the session. Returns Type Description System.Boolean true if the session is successfully found; otherwise, false . Exceptions Type Condition System.ArgumentNullException id is null . System.ArgumentException id is an empty string."
  },
  "api/WebSocketSharp.WebSocket.html": {
    "href": "api/WebSocketSharp.WebSocket.html",
    "title": "Class WebSocket | Unity Algorand SDK",
    "keywords": "Class WebSocket Implements the WebSocket interface. Inheritance System.Object WebSocket Implements System.IDisposable Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public class WebSocket : IDisposable Remarks This class provides a set of methods and properties for two-way communication using the WebSocket protocol. The WebSocket protocol is defined in RFC 6455 . Constructors WebSocket(String, String[]) Initializes a new instance of the WebSocket class with url and optionally protocols . Declaration public WebSocket(string url, params string[] protocols) Parameters Type Name Description System.String url A System.String that specifies the URL to which to connect. The scheme of the URL must be ws or wss. The new instance uses a secure connection if the scheme is wss. System.String [] protocols An array of System.String that specifies the names of the subprotocols if necessary. Each value of the array must be a token defined in RFC 2616 . Exceptions Type Condition System.ArgumentNullException url is null . System.ArgumentException url is an empty string. -or- url is an invalid WebSocket URL string. -or- protocols contains a value that is not a token. -or- protocols contains a value twice. WebSocket(String, String[]) Initializes a new instance of the WebSocket class with url and optionally protocols . Declaration public WebSocket(string url, params string[] protocols) Parameters Type Name Description System.String url A System.String that specifies the URL to which to connect. The scheme of the URL must be ws or wss. The new instance uses a secure connection if the scheme is wss. System.String [] protocols An array of System.String that specifies the names of the subprotocols if necessary. Each value of the array must be a token defined in RFC 2616 . Exceptions Type Condition System.ArgumentNullException url is null . System.ArgumentException url is an empty string. -or- url is an invalid WebSocket URL string. -or- protocols contains a value that is not a token. -or- protocols contains a value twice. Properties Compression Gets or sets the compression method used to compress a message. Declaration public CompressionMethod Compression { get; set; } Property Value Type Description CompressionMethod One of the CompressionMethod enum values. It specifies the compression method used to compress a message. The default value is . Remarks The set operation does nothing if the connection has already been established or it is closing. Exceptions Type Condition System.InvalidOperationException The set operation is not available if this instance is not a client. Compression Gets or sets the compression method used to compress a message. Declaration public CompressionMethod Compression { get; set; } Property Value Type Description CompressionMethod One of the CompressionMethod enum values. It specifies the compression method used to compress a message. The default value is . Remarks The set operation does nothing if the connection has already been established or it is closing. Exceptions Type Condition System.InvalidOperationException The set operation is not available if this instance is not a client. Cookies Gets the HTTP cookies included in the handshake request/response. Declaration public IEnumerable<Cookie> Cookies { get; } Property Value Type Description IEnumerable < Cookie > An System.Collections.Generic.IEnumerable{WebSocketSharp.Net.Cookie} instance. It provides an enumerator which supports the iteration over the collection of the cookies. Cookies Gets the HTTP cookies included in the handshake request/response. Declaration public IEnumerable<Cookie> Cookies { get; } Property Value Type Description IEnumerable < Cookie > An System.Collections.Generic.IEnumerable{WebSocketSharp.Net.Cookie} instance. It provides an enumerator which supports the iteration over the collection of the cookies. Credentials Gets the credentials for the HTTP authentication (Basic/Digest). Declaration public NetworkCredential Credentials { get; } Property Value Type Description NetworkCredential A that represents the credentials used to authenticate the client. The default value is null . Credentials Gets the credentials for the HTTP authentication (Basic/Digest). Declaration public NetworkCredential Credentials { get; } Property Value Type Description NetworkCredential A that represents the credentials used to authenticate the client. The default value is null . EmitOnPing Gets or sets a value indicating whether a OnMessage event is emitted when a ping is received. Declaration public bool EmitOnPing { get; set; } Property Value Type Description System.Boolean true if this instance emits a OnMessage event when receives a ping; otherwise, false . The default value is false . EmitOnPing Gets or sets a value indicating whether a OnMessage event is emitted when a ping is received. Declaration public bool EmitOnPing { get; set; } Property Value Type Description System.Boolean true if this instance emits a OnMessage event when receives a ping; otherwise, false . The default value is false . EnableRedirection Gets or sets a value indicating whether the URL redirection for the handshake request is allowed. Declaration public bool EnableRedirection { get; set; } Property Value Type Description System.Boolean true if this instance allows the URL redirection for the handshake request; otherwise, false . The default value is false . Remarks The set operation does nothing if the connection has already been established or it is closing. Exceptions Type Condition System.InvalidOperationException The set operation is not available if this instance is not a client. EnableRedirection Gets or sets a value indicating whether the URL redirection for the handshake request is allowed. Declaration public bool EnableRedirection { get; set; } Property Value Type Description System.Boolean true if this instance allows the URL redirection for the handshake request; otherwise, false . The default value is false . Remarks The set operation does nothing if the connection has already been established or it is closing. Exceptions Type Condition System.InvalidOperationException The set operation is not available if this instance is not a client. Extensions Gets the extensions selected by server. Declaration public string Extensions { get; } Property Value Type Description System.String A System.String that will be a list of the extensions negotiated between client and server, or an empty string if not specified or selected. Extensions Gets the extensions selected by server. Declaration public string Extensions { get; } Property Value Type Description System.String A System.String that will be a list of the extensions negotiated between client and server, or an empty string if not specified or selected. IsAlive Gets a value indicating whether the connection is alive. Declaration public bool IsAlive { get; } Property Value Type Description System.Boolean true if the connection is alive; otherwise, false . Remarks The get operation returns the value by using a ping/pong if the current state of the connection is Open. IsAlive Gets a value indicating whether the connection is alive. Declaration public bool IsAlive { get; } Property Value Type Description System.Boolean true if the connection is alive; otherwise, false . Remarks The get operation returns the value by using a ping/pong if the current state of the connection is Open. IsSecure Gets a value indicating whether a secure connection is used. Declaration public bool IsSecure { get; } Property Value Type Description System.Boolean true if this instance uses a secure connection; otherwise, false . IsSecure Gets a value indicating whether a secure connection is used. Declaration public bool IsSecure { get; } Property Value Type Description System.Boolean true if this instance uses a secure connection; otherwise, false . Log Gets the logging function. Declaration public Logger Log { get; } Property Value Type Description Logger A Logger that provides the logging function. Remarks The default logging level is . Log Gets the logging function. Declaration public Logger Log { get; } Property Value Type Description Logger A Logger that provides the logging function. Remarks The default logging level is . Origin Gets or sets the value of the HTTP Origin header to send with the handshake request. Declaration public string Origin { get; set; } Property Value Type Description System.String A System.String that represents the value of the Origin header to send. The syntax is <scheme>://<host>[:<port>]. The default value is null . Remarks The HTTP Origin header is defined in Section 7 of RFC 6454 . This instance sends the Origin header if this property has any. The set operation does nothing if the connection has already been established or it is closing. Exceptions Type Condition System.InvalidOperationException The set operation is not available if this instance is not a client. System.ArgumentException The value specified for a set operation is not an absolute URI string. -or- The value specified for a set operation includes the path segments. Origin Gets or sets the value of the HTTP Origin header to send with the handshake request. Declaration public string Origin { get; set; } Property Value Type Description System.String A System.String that represents the value of the Origin header to send. The syntax is <scheme>://<host>[:<port>]. The default value is null . Remarks The HTTP Origin header is defined in Section 7 of RFC 6454 . This instance sends the Origin header if this property has any. The set operation does nothing if the connection has already been established or it is closing. Exceptions Type Condition System.InvalidOperationException The set operation is not available if this instance is not a client. System.ArgumentException The value specified for a set operation is not an absolute URI string. -or- The value specified for a set operation includes the path segments. Protocol Gets the name of subprotocol selected by the server. Declaration public string Protocol { get; } Property Value Type Description System.String A System.String that will be one of the names of subprotocols specified by client. An empty string if not specified or selected. Protocol Gets the name of subprotocol selected by the server. Declaration public string Protocol { get; } Property Value Type Description System.String A System.String that will be one of the names of subprotocols specified by client. An empty string if not specified or selected. ReadyState Gets the current state of the connection. Declaration public WebSocketState ReadyState { get; } Property Value Type Description WebSocketState One of the WebSocketState enum values. It indicates the current state of the connection. The default value is . ReadyState Gets the current state of the connection. Declaration public WebSocketState ReadyState { get; } Property Value Type Description WebSocketState One of the WebSocketState enum values. It indicates the current state of the connection. The default value is . SslConfiguration Gets the configuration for secure connection. Declaration public ClientSslConfiguration SslConfiguration { get; } Property Value Type Description ClientSslConfiguration A that represents the configuration used to establish a secure connection. Remarks This configuration will be referenced when attempts to connect, so it must be configured before any connect method is called. Exceptions Type Condition System.InvalidOperationException This instance is not a client. This instance does not use a secure connection. SslConfiguration Gets the configuration for secure connection. Declaration public ClientSslConfiguration SslConfiguration { get; } Property Value Type Description ClientSslConfiguration A that represents the configuration used to establish a secure connection. Remarks This configuration will be referenced when attempts to connect, so it must be configured before any connect method is called. Exceptions Type Condition System.InvalidOperationException This instance is not a client. This instance does not use a secure connection. Url Gets the URL to which to connect. Declaration public Uri Url { get; } Property Value Type Description System.Uri A System.Uri that represents the URL to which to connect. Url Gets the URL to which to connect. Declaration public Uri Url { get; } Property Value Type Description System.Uri A System.Uri that represents the URL to which to connect. WaitTime Gets or sets the time to wait for the response to the ping or close. Declaration public TimeSpan WaitTime { get; set; } Property Value Type Description System.TimeSpan A System.TimeSpan to wait for the response. The default value is the same as 5 seconds if this instance is a client. Remarks The set operation does nothing if the connection has already been established or it is closing. Exceptions Type Condition System.ArgumentOutOfRangeException The value specified for a set operation is zero or less. WaitTime Gets or sets the time to wait for the response to the ping or close. Declaration public TimeSpan WaitTime { get; set; } Property Value Type Description System.TimeSpan A System.TimeSpan to wait for the response. The default value is the same as 5 seconds if this instance is a client. Remarks The set operation does nothing if the connection has already been established or it is closing. Exceptions Type Condition System.ArgumentOutOfRangeException The value specified for a set operation is zero or less. Methods Accept() Accepts the handshake request. Declaration public void Accept() Remarks This method does nothing if the handshake request has already been accepted. Exceptions Type Condition System.InvalidOperationException This instance is a client. -or- The close process is in progress. -or- The connection has already been closed. Accept() Accepts the handshake request. Declaration public void Accept() Remarks This method does nothing if the handshake request has already been accepted. Exceptions Type Condition System.InvalidOperationException This instance is a client. -or- The close process is in progress. -or- The connection has already been closed. AcceptAsync() Accepts the handshake request asynchronously. Declaration public void AcceptAsync() Remarks This method does not wait for the accept process to be complete. This method does nothing if the handshake request has already been accepted. Exceptions Type Condition System.InvalidOperationException This instance is a client. -or- The close process is in progress. -or- The connection has already been closed. AcceptAsync() Accepts the handshake request asynchronously. Declaration public void AcceptAsync() Remarks This method does not wait for the accept process to be complete. This method does nothing if the handshake request has already been accepted. Exceptions Type Condition System.InvalidOperationException This instance is a client. -or- The close process is in progress. -or- The connection has already been closed. Close() Closes the connection. Declaration public void Close() Remarks This method does nothing if the current state of the connection is Closing or Closed. Close() Closes the connection. Declaration public void Close() Remarks This method does nothing if the current state of the connection is Closing or Closed. Close(UInt16) Closes the connection with the specified code. Declaration public void Close(ushort code) Parameters Type Name Description System.UInt16 code A System.UInt16 that represents the status code indicating the reason for the close. The status codes are defined in Section 7.4 of RFC 6455. Remarks This method does nothing if the current state of the connection is Closing or Closed. Exceptions Type Condition System.ArgumentOutOfRangeException code is less than 1000 or greater than 4999. System.ArgumentException code is 1011 (server error). It cannot be used by clients. -or- code is 1010 (mandatory extension). It cannot be used by servers. Close(UInt16) Closes the connection with the specified code. Declaration public void Close(ushort code) Parameters Type Name Description System.UInt16 code A System.UInt16 that represents the status code indicating the reason for the close. The status codes are defined in Section 7.4 of RFC 6455. Remarks This method does nothing if the current state of the connection is Closing or Closed. Exceptions Type Condition System.ArgumentOutOfRangeException code is less than 1000 or greater than 4999. System.ArgumentException code is 1011 (server error). It cannot be used by clients. -or- code is 1010 (mandatory extension). It cannot be used by servers. Close(UInt16, String) Closes the connection with the specified code and reason. Declaration public void Close(ushort code, string reason) Parameters Type Name Description System.UInt16 code A System.UInt16 that represents the status code indicating the reason for the close. The status codes are defined in Section 7.4 of RFC 6455. System.String reason A System.String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Remarks This method does nothing if the current state of the connection is Closing or Closed. Exceptions Type Condition System.ArgumentOutOfRangeException code is less than 1000 or greater than 4999. -or- The size of reason is greater than 123 bytes. System.ArgumentException code is 1011 (server error). It cannot be used by clients. -or- code is 1010 (mandatory extension). It cannot be used by servers. -or- code is 1005 (no status) and there is reason. -or- reason could not be UTF-8-encoded. Close(UInt16, String) Closes the connection with the specified code and reason. Declaration public void Close(ushort code, string reason) Parameters Type Name Description System.UInt16 code A System.UInt16 that represents the status code indicating the reason for the close. The status codes are defined in Section 7.4 of RFC 6455. System.String reason A System.String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Remarks This method does nothing if the current state of the connection is Closing or Closed. Exceptions Type Condition System.ArgumentOutOfRangeException code is less than 1000 or greater than 4999. -or- The size of reason is greater than 123 bytes. System.ArgumentException code is 1011 (server error). It cannot be used by clients. -or- code is 1010 (mandatory extension). It cannot be used by servers. -or- code is 1005 (no status) and there is reason. -or- reason could not be UTF-8-encoded. Close(CloseStatusCode) Closes the connection with the specified code. Declaration public void Close(CloseStatusCode code) Parameters Type Name Description CloseStatusCode code One of the CloseStatusCode enum values. It represents the status code indicating the reason for the close. Remarks This method does nothing if the current state of the connection is Closing or Closed. Exceptions Type Condition System.ArgumentException code is . It cannot be used by clients. -or- code is . It cannot be used by servers. Close(CloseStatusCode) Closes the connection with the specified code. Declaration public void Close(CloseStatusCode code) Parameters Type Name Description CloseStatusCode code One of the CloseStatusCode enum values. It represents the status code indicating the reason for the close. Remarks This method does nothing if the current state of the connection is Closing or Closed. Exceptions Type Condition System.ArgumentException code is . It cannot be used by clients. -or- code is . It cannot be used by servers. Close(CloseStatusCode, String) Closes the connection with the specified code and reason. Declaration public void Close(CloseStatusCode code, string reason) Parameters Type Name Description CloseStatusCode code One of the CloseStatusCode enum values. It represents the status code indicating the reason for the close. System.String reason A System.String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Remarks This method does nothing if the current state of the connection is Closing or Closed. Exceptions Type Condition System.ArgumentException code is . It cannot be used by clients. -or- code is . It cannot be used by servers. -or- code is and there is reason. -or- reason could not be UTF-8-encoded. System.ArgumentOutOfRangeException The size of reason is greater than 123 bytes. Close(CloseStatusCode, String) Closes the connection with the specified code and reason. Declaration public void Close(CloseStatusCode code, string reason) Parameters Type Name Description CloseStatusCode code One of the CloseStatusCode enum values. It represents the status code indicating the reason for the close. System.String reason A System.String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Remarks This method does nothing if the current state of the connection is Closing or Closed. Exceptions Type Condition System.ArgumentException code is . It cannot be used by clients. -or- code is . It cannot be used by servers. -or- code is and there is reason. -or- reason could not be UTF-8-encoded. System.ArgumentOutOfRangeException The size of reason is greater than 123 bytes. CloseAsync() Closes the connection asynchronously. Declaration public void CloseAsync() Remarks This method does not wait for the close to be complete. This method does nothing if the current state of the connection is Closing or Closed. CloseAsync() Closes the connection asynchronously. Declaration public void CloseAsync() Remarks This method does not wait for the close to be complete. This method does nothing if the current state of the connection is Closing or Closed. CloseAsync(UInt16) Closes the connection asynchronously with the specified code. Declaration public void CloseAsync(ushort code) Parameters Type Name Description System.UInt16 code A System.UInt16 that represents the status code indicating the reason for the close. The status codes are defined in Section 7.4 of RFC 6455. Remarks This method does not wait for the close to be complete. This method does nothing if the current state of the connection is Closing or Closed. Exceptions Type Condition System.ArgumentOutOfRangeException code is less than 1000 or greater than 4999. System.ArgumentException code is 1011 (server error). It cannot be used by clients. -or- code is 1010 (mandatory extension). It cannot be used by servers. CloseAsync(UInt16) Closes the connection asynchronously with the specified code. Declaration public void CloseAsync(ushort code) Parameters Type Name Description System.UInt16 code A System.UInt16 that represents the status code indicating the reason for the close. The status codes are defined in Section 7.4 of RFC 6455. Remarks This method does not wait for the close to be complete. This method does nothing if the current state of the connection is Closing or Closed. Exceptions Type Condition System.ArgumentOutOfRangeException code is less than 1000 or greater than 4999. System.ArgumentException code is 1011 (server error). It cannot be used by clients. -or- code is 1010 (mandatory extension). It cannot be used by servers. CloseAsync(UInt16, String) Closes the connection asynchronously with the specified code and reason. Declaration public void CloseAsync(ushort code, string reason) Parameters Type Name Description System.UInt16 code A System.UInt16 that represents the status code indicating the reason for the close. The status codes are defined in Section 7.4 of RFC 6455. System.String reason A System.String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Remarks This method does not wait for the close to be complete. This method does nothing if the current state of the connection is Closing or Closed. Exceptions Type Condition System.ArgumentOutOfRangeException code is less than 1000 or greater than 4999. -or- The size of reason is greater than 123 bytes. System.ArgumentException code is 1011 (server error). It cannot be used by clients. -or- code is 1010 (mandatory extension). It cannot be used by servers. -or- code is 1005 (no status) and there is reason. -or- reason could not be UTF-8-encoded. CloseAsync(UInt16, String) Closes the connection asynchronously with the specified code and reason. Declaration public void CloseAsync(ushort code, string reason) Parameters Type Name Description System.UInt16 code A System.UInt16 that represents the status code indicating the reason for the close. The status codes are defined in Section 7.4 of RFC 6455. System.String reason A System.String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Remarks This method does not wait for the close to be complete. This method does nothing if the current state of the connection is Closing or Closed. Exceptions Type Condition System.ArgumentOutOfRangeException code is less than 1000 or greater than 4999. -or- The size of reason is greater than 123 bytes. System.ArgumentException code is 1011 (server error). It cannot be used by clients. -or- code is 1010 (mandatory extension). It cannot be used by servers. -or- code is 1005 (no status) and there is reason. -or- reason could not be UTF-8-encoded. CloseAsync(CloseStatusCode) Closes the connection asynchronously with the specified code. Declaration public void CloseAsync(CloseStatusCode code) Parameters Type Name Description CloseStatusCode code One of the CloseStatusCode enum values. It represents the status code indicating the reason for the close. Remarks This method does not wait for the close to be complete. This method does nothing if the current state of the connection is Closing or Closed. Exceptions Type Condition System.ArgumentException code is . It cannot be used by clients. -or- code is . It cannot be used by servers. CloseAsync(CloseStatusCode) Closes the connection asynchronously with the specified code. Declaration public void CloseAsync(CloseStatusCode code) Parameters Type Name Description CloseStatusCode code One of the CloseStatusCode enum values. It represents the status code indicating the reason for the close. Remarks This method does not wait for the close to be complete. This method does nothing if the current state of the connection is Closing or Closed. Exceptions Type Condition System.ArgumentException code is . It cannot be used by clients. -or- code is . It cannot be used by servers. CloseAsync(CloseStatusCode, String) Closes the connection asynchronously with the specified code and reason. Declaration public void CloseAsync(CloseStatusCode code, string reason) Parameters Type Name Description CloseStatusCode code One of the CloseStatusCode enum values. It represents the status code indicating the reason for the close. System.String reason A System.String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Remarks This method does not wait for the close to be complete. This method does nothing if the current state of the connection is Closing or Closed. Exceptions Type Condition System.ArgumentException code is . It cannot be used by clients. -or- code is . It cannot be used by servers. -or- code is and there is reason. -or- reason could not be UTF-8-encoded. System.ArgumentOutOfRangeException The size of reason is greater than 123 bytes. CloseAsync(CloseStatusCode, String) Closes the connection asynchronously with the specified code and reason. Declaration public void CloseAsync(CloseStatusCode code, string reason) Parameters Type Name Description CloseStatusCode code One of the CloseStatusCode enum values. It represents the status code indicating the reason for the close. System.String reason A System.String that represents the reason for the close. The size must be 123 bytes or less in UTF-8. Remarks This method does not wait for the close to be complete. This method does nothing if the current state of the connection is Closing or Closed. Exceptions Type Condition System.ArgumentException code is . It cannot be used by clients. -or- code is . It cannot be used by servers. -or- code is and there is reason. -or- reason could not be UTF-8-encoded. System.ArgumentOutOfRangeException The size of reason is greater than 123 bytes. Connect() Establishes a connection. Declaration public void Connect() Remarks This method does nothing if the connection has already been established. Exceptions Type Condition System.InvalidOperationException This instance is not a client. -or- The close process is in progress. -or- A series of reconnecting has failed. Connect() Establishes a connection. Declaration public void Connect() Remarks This method does nothing if the connection has already been established. Exceptions Type Condition System.InvalidOperationException This instance is not a client. -or- The close process is in progress. -or- A series of reconnecting has failed. ConnectAsync() Establishes a connection asynchronously. Declaration public void ConnectAsync() Remarks This method does not wait for the connect process to be complete. This method does nothing if the connection has already been established. Exceptions Type Condition System.InvalidOperationException This instance is not a client. -or- The close process is in progress. -or- A series of reconnecting has failed. ConnectAsync() Establishes a connection asynchronously. Declaration public void ConnectAsync() Remarks This method does not wait for the connect process to be complete. This method does nothing if the connection has already been established. Exceptions Type Condition System.InvalidOperationException This instance is not a client. -or- The close process is in progress. -or- A series of reconnecting has failed. Ping() Sends a ping using the WebSocket connection. Declaration public bool Ping() Returns Type Description System.Boolean true if the send has done with no error and a pong has been received within a time; otherwise, false . Ping() Sends a ping using the WebSocket connection. Declaration public bool Ping() Returns Type Description System.Boolean true if the send has done with no error and a pong has been received within a time; otherwise, false . Ping(String) Sends a ping with message using the WebSocket connection. Declaration public bool Ping(string message) Parameters Type Name Description System.String message A System.String that represents the message to send. The size must be 125 bytes or less in UTF-8. Returns Type Description System.Boolean true if the send has done with no error and a pong has been received within a time; otherwise, false . Exceptions Type Condition System.ArgumentException message could not be UTF-8-encoded. System.ArgumentOutOfRangeException The size of message is greater than 125 bytes. Ping(String) Sends a ping with message using the WebSocket connection. Declaration public bool Ping(string message) Parameters Type Name Description System.String message A System.String that represents the message to send. The size must be 125 bytes or less in UTF-8. Returns Type Description System.Boolean true if the send has done with no error and a pong has been received within a time; otherwise, false . Exceptions Type Condition System.ArgumentException message could not be UTF-8-encoded. System.ArgumentOutOfRangeException The size of message is greater than 125 bytes. Send(FileInfo) Sends the specified file using the WebSocket connection. Declaration public void Send(FileInfo fileInfo) Parameters Type Name Description FileInfo fileInfo A that specifies the file to send. The file is sent as the binary data. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException fileInfo is null . System.ArgumentException The file does not exist. -or- The file could not be opened. Send(FileInfo) Sends the specified file using the WebSocket connection. Declaration public void Send(FileInfo fileInfo) Parameters Type Name Description FileInfo fileInfo A that specifies the file to send. The file is sent as the binary data. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException fileInfo is null . System.ArgumentException The file does not exist. -or- The file could not be opened. Send(Stream, Int32) Sends the data from the specified stream using the WebSocket connection. Declaration public void Send(Stream stream, int length) Parameters Type Name Description Stream stream A instance from which to read the data to send. The data is sent as the binary data. System.Int32 length An System.Int32 that specifies the number of bytes to send. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException stream is null . System.ArgumentException stream cannot be read. -or- length is less than 1. -or- No data could be read from stream . Send(Stream, Int32) Sends the data from the specified stream using the WebSocket connection. Declaration public void Send(Stream stream, int length) Parameters Type Name Description Stream stream A instance from which to read the data to send. The data is sent as the binary data. System.Int32 length An System.Int32 that specifies the number of bytes to send. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException stream is null . System.ArgumentException stream cannot be read. -or- length is less than 1. -or- No data could be read from stream . Send(Byte[]) Sends the specified data using the WebSocket connection. Declaration public void Send(byte[] data) Parameters Type Name Description System.Byte [] data An array of System.Byte that represents the binary data to send. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException data is null . Send(Byte[]) Sends the specified data using the WebSocket connection. Declaration public void Send(byte[] data) Parameters Type Name Description System.Byte [] data An array of System.Byte that represents the binary data to send. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException data is null . Send(String) Sends the specified data using the WebSocket connection. Declaration public void Send(string data) Parameters Type Name Description System.String data A System.String that represents the text data to send. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException data is null . System.ArgumentException data could not be UTF-8-encoded. Send(String) Sends the specified data using the WebSocket connection. Declaration public void Send(string data) Parameters Type Name Description System.String data A System.String that represents the text data to send. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException data is null . System.ArgumentException data could not be UTF-8-encoded. SendAsync(FileInfo, Action<Boolean>) Sends the specified file asynchronously using the WebSocket connection. Declaration public void SendAsync(FileInfo fileInfo, Action<bool> completed) Parameters Type Name Description FileInfo fileInfo A that specifies the file to send. The file is sent as the binary data. System.Action < System.Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException fileInfo is null . System.ArgumentException The file does not exist. -or- The file could not be opened. SendAsync(FileInfo, Action<Boolean>) Sends the specified file asynchronously using the WebSocket connection. Declaration public void SendAsync(FileInfo fileInfo, Action<bool> completed) Parameters Type Name Description FileInfo fileInfo A that specifies the file to send. The file is sent as the binary data. System.Action < System.Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException fileInfo is null . System.ArgumentException The file does not exist. -or- The file could not be opened. SendAsync(Stream, Int32, Action<Boolean>) Sends the data from the specified stream asynchronously using the WebSocket connection. Declaration public void SendAsync(Stream stream, int length, Action<bool> completed) Parameters Type Name Description Stream stream A instance from which to read the data to send. The data is sent as the binary data. System.Int32 length An System.Int32 that specifies the number of bytes to send. System.Action < System.Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException stream is null . System.ArgumentException stream cannot be read. -or- length is less than 1. -or- No data could be read from stream . SendAsync(Stream, Int32, Action<Boolean>) Sends the data from the specified stream asynchronously using the WebSocket connection. Declaration public void SendAsync(Stream stream, int length, Action<bool> completed) Parameters Type Name Description Stream stream A instance from which to read the data to send. The data is sent as the binary data. System.Int32 length An System.Int32 that specifies the number of bytes to send. System.Action < System.Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException stream is null . System.ArgumentException stream cannot be read. -or- length is less than 1. -or- No data could be read from stream . SendAsync(Byte[], Action<Boolean>) Sends the specified data asynchronously using the WebSocket connection. Declaration public void SendAsync(byte[] data, Action<bool> completed) Parameters Type Name Description System.Byte [] data An array of System.Byte that represents the binary data to send. System.Action < System.Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException data is null . SendAsync(Byte[], Action<Boolean>) Sends the specified data asynchronously using the WebSocket connection. Declaration public void SendAsync(byte[] data, Action<bool> completed) Parameters Type Name Description System.Byte [] data An array of System.Byte that represents the binary data to send. System.Action < System.Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException data is null . SendAsync(String, Action<Boolean>) Sends the specified data asynchronously using the WebSocket connection. Declaration public void SendAsync(string data, Action<bool> completed) Parameters Type Name Description System.String data A System.String that represents the text data to send. System.Action < System.Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException data is null . System.ArgumentException data could not be UTF-8-encoded. SendAsync(String, Action<Boolean>) Sends the specified data asynchronously using the WebSocket connection. Declaration public void SendAsync(string data, Action<bool> completed) Parameters Type Name Description System.String data A System.String that represents the text data to send. System.Action < System.Boolean > completed An Action<bool> delegate or null if not needed. The delegate invokes the method called when the send is complete. true is passed to the method if the send has done with no error; otherwise, false . Remarks This method does not wait for the send to be complete. Exceptions Type Condition System.InvalidOperationException The current state of the connection is not Open. System.ArgumentNullException data is null . System.ArgumentException data could not be UTF-8-encoded. SetCookie(Cookie) Sets an HTTP cookie to send with the handshake request. Declaration public void SetCookie(Cookie cookie) Parameters Type Name Description Cookie cookie A that represents the cookie to send. Remarks This method does nothing if the connection has already been established or it is closing. Exceptions Type Condition System.InvalidOperationException This instance is not a client. System.ArgumentNullException cookie is null . SetCookie(Cookie) Sets an HTTP cookie to send with the handshake request. Declaration public void SetCookie(Cookie cookie) Parameters Type Name Description Cookie cookie A that represents the cookie to send. Remarks This method does nothing if the connection has already been established or it is closing. Exceptions Type Condition System.InvalidOperationException This instance is not a client. System.ArgumentNullException cookie is null . SetCredentials(String, String, Boolean) Sets the credentials for the HTTP authentication (Basic/Digest). Declaration public void SetCredentials(string username, string password, bool preAuth) Parameters Type Name Description System.String username A System.String that represents the username associated with the credentials. null or an empty string if initializes the credentials. System.String password A System.String that represents the password for the username associated with the credentials. null or an empty string if not necessary. System.Boolean preAuth true if sends the credentials for the Basic authentication in advance with the first handshake request; otherwise, false . Remarks This method does nothing if the connection has already been established or it is closing. Exceptions Type Condition System.InvalidOperationException This instance is not a client. System.ArgumentException username contains an invalid character. -or- password contains an invalid character. SetCredentials(String, String, Boolean) Sets the credentials for the HTTP authentication (Basic/Digest). Declaration public void SetCredentials(string username, string password, bool preAuth) Parameters Type Name Description System.String username A System.String that represents the username associated with the credentials. null or an empty string if initializes the credentials. System.String password A System.String that represents the password for the username associated with the credentials. null or an empty string if not necessary. System.Boolean preAuth true if sends the credentials for the Basic authentication in advance with the first handshake request; otherwise, false . Remarks This method does nothing if the connection has already been established or it is closing. Exceptions Type Condition System.InvalidOperationException This instance is not a client. System.ArgumentException username contains an invalid character. -or- password contains an invalid character. SetProxy(String, String, String) Sets the URL of the HTTP proxy server through which to connect and the credentials for the HTTP proxy authentication (Basic/Digest). Declaration public void SetProxy(string url, string username, string password) Parameters Type Name Description System.String url A System.String that represents the URL of the proxy server through which to connect. The syntax is http://<host>[:<port>]. null or an empty string if initializes the URL and the credentials. System.String username A System.String that represents the username associated with the credentials. null or an empty string if the credentials are not necessary. System.String password A System.String that represents the password for the username associated with the credentials. null or an empty string if not necessary. Remarks This method does nothing if the connection has already been established or it is closing. Exceptions Type Condition System.InvalidOperationException This instance is not a client. System.ArgumentException url is not an absolute URI string. -or- The scheme of url is not http. -or- url includes the path segments. -or- username contains an invalid character. -or- password contains an invalid character. SetProxy(String, String, String) Sets the URL of the HTTP proxy server through which to connect and the credentials for the HTTP proxy authentication (Basic/Digest). Declaration public void SetProxy(string url, string username, string password) Parameters Type Name Description System.String url A System.String that represents the URL of the proxy server through which to connect. The syntax is http://<host>[:<port>]. null or an empty string if initializes the URL and the credentials. System.String username A System.String that represents the username associated with the credentials. null or an empty string if the credentials are not necessary. System.String password A System.String that represents the password for the username associated with the credentials. null or an empty string if not necessary. Remarks This method does nothing if the connection has already been established or it is closing. Exceptions Type Condition System.InvalidOperationException This instance is not a client. System.ArgumentException url is not an absolute URI string. -or- The scheme of url is not http. -or- url includes the path segments. -or- username contains an invalid character. -or- password contains an invalid character. Events OnClose Occurs when the WebSocket connection has been closed. Declaration public event EventHandler<CloseEventArgs> OnClose Event Type Type Description System.EventHandler < CloseEventArgs > OnClose Occurs when the WebSocket connection has been closed. Declaration public event EventHandler<CloseEventArgs> OnClose Event Type Type Description System.EventHandler < CloseEventArgs > OnError Occurs when the WebSocket gets an error. Declaration public event EventHandler<ErrorEventArgs> OnError Event Type Type Description System.EventHandler < ErrorEventArgs > OnError Occurs when the WebSocket gets an error. Declaration public event EventHandler<ErrorEventArgs> OnError Event Type Type Description System.EventHandler < ErrorEventArgs > OnMessage Occurs when the WebSocket receives a message. Declaration public event EventHandler<MessageEventArgs> OnMessage Event Type Type Description System.EventHandler < MessageEventArgs > OnMessage Occurs when the WebSocket receives a message. Declaration public event EventHandler<MessageEventArgs> OnMessage Event Type Type Description System.EventHandler < MessageEventArgs > OnOpen Occurs when the WebSocket connection has been established. Declaration public event EventHandler OnOpen Event Type Type Description System.EventHandler OnOpen Occurs when the WebSocket connection has been established. Declaration public event EventHandler OnOpen Event Type Type Description System.EventHandler Explicit Interface Implementations IDisposable.Dispose() Closes the connection and releases all associated resources. Declaration void IDisposable.Dispose() Remarks This method closes the connection with close status 1001 (going away). And this method does nothing if the current state of the connection is Closing or Closed. IDisposable.Dispose() Closes the connection and releases all associated resources. Declaration void IDisposable.Dispose() Remarks This method closes the connection with close status 1001 (going away). And this method does nothing if the current state of the connection is Closing or Closed. Implements System.IDisposable"
  },
  "api/WebSocketSharp.WebSocketException.html": {
    "href": "api/WebSocketSharp.WebSocketException.html",
    "title": "Class WebSocketException | Unity Algorand SDK",
    "keywords": "Class WebSocketException The exception that is thrown when a fatal error occurs in the WebSocket communication. Inheritance System.Object System.Exception WebSocketException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public class WebSocketException : Exception, ISerializable, _Exception Properties Code Gets the status code indicating the cause of the exception. Declaration public CloseStatusCode Code { get; } Property Value Type Description CloseStatusCode One of the CloseStatusCode enum values that represents the status code indicating the cause of the exception. Code Gets the status code indicating the cause of the exception. Declaration public CloseStatusCode Code { get; } Property Value Type Description CloseStatusCode One of the CloseStatusCode enum values that represents the status code indicating the cause of the exception. Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/WebSocketSharp.WebSocketState.html": {
    "href": "api/WebSocketSharp.WebSocketState.html",
    "title": "Enum WebSocketState | Unity Algorand SDK",
    "keywords": "Enum WebSocketState Indicates the state of a WebSocket connection. Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public enum WebSocketState : ushort Remarks The values of this enumeration are defined in The WebSocket API . Fields Name Description Closed Equivalent to numeric value 3. Indicates that the connection has been closed or could not be established. Closing Equivalent to numeric value 2. Indicates that the connection is going through the closing handshake, or the close method has been invoked. Connecting Equivalent to numeric value 0. Indicates that the connection has not yet been established. Open Equivalent to numeric value 1. Indicates that the connection has been established, and the communication is possible."
  },
  "api/WebSocketSharp.WebSocketState_1.html": {
    "href": "api/WebSocketSharp.WebSocketState_1.html",
    "title": "Enum WebSocketState | Unity Algorand SDK",
    "keywords": "Enum WebSocketState Indicates the state of a WebSocket connection. Namespace : WebSocketSharp Assembly : cs.temp.dll.dll Syntax public enum WebSocketState : ushort Remarks The values of this enumeration are defined in The WebSocket API . Fields Name Description Closed Equivalent to numeric value 3. Indicates that the connection has been closed or could not be established. Closing Equivalent to numeric value 2. Indicates that the connection is going through the closing handshake, or the close method has been invoked. Connecting Equivalent to numeric value 0. Indicates that the connection has not yet been established. Open Equivalent to numeric value 1. Indicates that the connection has been established, and the communication is possible."
  },
  "changelog/CHANGELOG.html": {
    "href": "changelog/CHANGELOG.html",
    "title": "Changelog | Unity Algorand SDK",
    "keywords": "Changelog All notable changes to this package will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . 2.0.0-pre.6 (2022-03-01) Bug Fixes walletconnect: fix compile issue for unity 2020 ( e26836a ) Features algod: add overloads for IAlgodClient.SendTransactions that allow sending raw msgpack ( 4befeeb ) lowlevel: add NativeArrayUtil.ConcatAll ( 10644db ) models: add implicit operators for either value type in an either ( 84cfbcf ) BREAKING CHANGES lowlevel: Remove unused struct NativeReferenceOfDisposable from AlgoSdk.LowLevel 2.0.0-pre.5 (2022-02-28) Features accounts: add AccountInfo.EstimateMinBalance ( 51d471b ) transaction: reduce generic constraints related to ITransaction ( 42dfe82 ) 2.0.0-pre.4 (2022-02-28) Features api: add statusCode deserialization field to ErrorResponseFormatter ( 3f69600 ) 2.0.0-pre.3 (2022-02-27) Bug Fixes walletconnect: fix issue where new WalletConnect assembly was not compiling in Unity 2020.3 ( 0a1ec26 ) Code Refactoring walletconnect: move WalletConnect code to its own assembly ( e6668cd ) BREAKING CHANGES walletconnect: Code in the AlgoSdk.WalletConnect namespace are now in the CareBoo.AlgoSdk.WalletConnect assembly. Additionally, Hex has been moved to the AlgoSdk namespace and remains in the CareBoo.AlgoSdk assembly. 2.0.0-pre.2 (2022-02-25) Code Refactoring websocket: move websocket code to its own assembly definition ( 8ff6738 ) BREAKING CHANGES websocket: To reference Netcode.Transports.WebSocket classes, you need to now reference the CareBoo.WebSocket assembly 2.0.0-pre.1 (2022-02-25) Features api: add support for CancellationToken and IProgress<float> ( 6ca2f39 ) BREAKING CHANGES api: API is no longer returning UniTask , and is now returning AlgoApiRequest.Sent . 1.4.0-pre.1 (2022-02-24) Features walletconnect: add Algorand WalletConnect client ( #67 ) ( 3028858 ), closes #65 walletconnect: add QR Code Generator support ( #68 ) ( 1f84dcf ), closes #51 walletconnect: add WalletConnect support ( #69 ) ( c650b15 ), closes #11 walletconnect: add WebSocket support ( e0d2e6d ), closes #59 1.4.0-exp.4 (2022-02-24) Features walletconnect: add WalletConnect support ( #69 ) ( c650b15 ), closes #11 1.4.0-exp.3 (2022-02-22) Features walletconnect: add QR Code Generator support ( #68 ) ( 1f84dcf ), closes #51 1.4.0-exp.2 (2022-02-21) Features walletconnect: add Algorand WalletConnect client ( #67 ) ( 3028858 ), closes #65 1.4.0-exp.1 (2022-02-18) Features walletconnect: add WebSocket support ( e0d2e6d ), closes #59 1.3.0 (2021-11-19) Features logic: add Logic.Sign for signing programs with private keys ( 131ef28 ) logic: add LogicSig.GetAddress ( 9628a9a ) multisig: add Multisig.GetAddress ( e490459 ) 1.2.2 (2021-11-15) Bug Fixes algoapiobject: fix compile err ( 12ca53c ) assetparams: change size of URL FixedString to 128 bytes ( 792d207 ) 1.2.2-pre.2 (2021-11-15) Bug Fixes algoapiobject: fix compile err ( 13692b8 ) 1.2.2-pre.1 (2021-11-13) Bug Fixes assetparams: change size of URL FixedString to 128 bytes ( c964899 ) 1.2.1 (2021-11-09) Bug Fixes error response: fix some responses with response code 0 incorrectly treated as errors ( e605e75 ) 1.2.0 (2021-11-08) Bug Fixes json: fix MultiSig JSON format using incorrect field names ( 83d0950 ) logging: remove unnecessary debug logs ( 7550061 ) msgpack: fix enum serialization when using IL2CPP ( 0c1a4d0 ) plugins: remove \"lib\" prefix from certain plugins ( 0ecf98f ), closes #55 plugins: remove unnecessary android static library plugin ( fc09b66 ) teal: fix TealValue deserialization failing when both uint and bytes values included ( 22cfcd0 ) web response: fix ErrorResponse.IsError not returning true when responseCode == 0 ( 3e1c8d6 ), closes #58 Features api clients: add constructor to api clients that makes the token parameter optional ( 0bcd681 ) api: add custom Request HTTP header support ( a6f51f8 ), closes #58 Performance Improvements plugins: replace debug mode libsodium libraries with release mode ( d7638c8 ), closes #55 1.2.0-pre.3 (2021-11-08) Bug Fixes web response: fix ErrorResponse.IsError not returning true when responseCode == 0 ( 3e1c8d6 ), closes #58 1.2.0-pre.2 (2021-11-07) Features api clients: add constructor to api clients that makes the token parameter optional ( 0bcd681 ) 1.2.0-pre.1 (2021-11-07) Bug Fixes json: fix MultiSig JSON format using incorrect field names ( 83d0950 ) teal: fix TealValue deserialization failing when both uint and bytes values included ( 22cfcd0 ) Features api: add custom Request HTTP header support ( a6f51f8 ), closes #58 Performance Improvements plugins: replace debug mode libsodium libraries with release mode ( d7638c8 ), closes #55 1.1.1-pre.1 (2021-11-05) Bug Fixes logging: remove unnecessary debug logs ( 7550061 ) msgpack: fix enum serialization when using IL2CPP ( 0c1a4d0 ) plugins: remove \"lib\" prefix from certain plugins ( 0ecf98f ), closes #55 plugins: remove unnecessary android static library plugin ( fc09b66 ) 1.1.0 (2021-11-03) Bug Fixes add missing meta files ( 2407941 ) osx: fix multiple sodium.bundle plugins ( b3b9389 ) Features editor: Make many models serializable and add property drawers to render them in editor ( 09185fc ), closes #41 support WebGL ( 1890694 ), closes #52 1.1.0-pre.3 (2021-11-03) Features editor: Make many models serializable and add property drawers to render them in editor ( 09185fc ), closes #41 1.1.0-pre.2 (2021-11-01) Bug Fixes osx: fix multiple sodium.bundle plugins ( b3b9389 ) 1.1.0-pre.1 (2021-10-31) Features support WebGL ( 1890694 ), closes #52 1.0.1-pre.1 (2021-10-29) Bug Fixes add missing meta files ( 2407941 ) 1.0.0 (2021-10-29) Bug Fixes 🐛 fix RawTransaction.Equals ( b0769da ) 🐛 fix compile errs ( 9e59233 ) 🐛 fix crash on ArrayComparer.Equals ( e2931e0 ) 🐛 fix issues with codegen and AOT compilation ( 4d4b583 ) 🐛 fix keyworded enum types formatting as numbers ( ee6f363 ) 🐛 Fix npm release ( e3fed38 ) 🐛 Fix repository ( b4efa6e ) 🐛 fix signatures ( 1e3a9cc ) 🚩 Update package registry ( 64987f8 ) ✅ Fix CI tests on Github Actions can't find libsodium ( db8718a ), closes #12 algod: 🐛 fix AlgodClient.TealCompile ( bd05ed3 ), closes #20 algod: 🐛 fix AssetParams serialization ( 6f2b830 ) algod: 🐛 fix pending transactions not returning messagepack ( 3b881a3 ) algod: 🐛 fix vrfpubkey formatter lookup ( 08a09ae ) algod: 🐛 fix vrfpubkey formatting ( f3c1a56 ) algod: 🐛 replace VrfPubKey with FixedString128Bytes ( e6ce383 ), closes #42 crypto: fix libsodium not working on OSX ( cb0b2c4 ) fix empty dirs finding their way into the project ( 5a00890 ) indexer: 🐛 add missing fields to Account model ( 86122de ) indexer: 🐛 add token back to indexer ( c704eb2 ) indexer: 🐛 fix HealthCheck missing serialization logic ( f11aa38 ) indexer: 🐛 fix indexer requires token ( ef2d461 ) indexer: 🐛 fix transaction formatters missing valid msgpack fields ( e18f84a ) indexer: 🔥 fix huge issue with indexer where query parameters were in body ( 92cb794 ) indexer: ✨ fix TealValue msgpack fieldnames ( 2da8001 ) indexer: fix missing Version field in HealthCheck ( f70c73d ) json: 🐛 fix PrivateKey JSON deserialization err ( 63baf88 ) json: 🐛 fix empty json objects missing begin object '{' char ( d2b0539 ) kmd: 🎨 fix KmdClient API incorrectly using optional args ( 29374e1 ), closes #36 kmd: 🐛 fix GenerateKeyRequest to use wallet_handle_token not password ( 19c3215 ) kmd: 🐛 fix ImportKeyRequest to use wallet_handle_token not password ( 4a60a6c ) kmd: 🐛 fix KmdClient.SignTransaction returning a signed transaction message ( 6df57ec ) kmd: 🐛 fix WalletHandle not added to formatter cache ( be0495d ) kmd: 🐛 fix multisig ( 78559d0 ) serialization: 🐛 fix Block not having a formatter ( d840dfe ) serialization: 🐛 fix BlockResponse Serialization ( 6925142 ) serialization: 🐛 fix JsonWriter not writing to NativeText ( 9a21502 ) serialization: 🐛 fix SignedTransaction serialization ( 2f7bc6b ) serialization: 🐛 fix TransactionId serialization ( f4fcb74 ) serialization: 🐛 fix discrepancy between TransactionId and TransactinIdResponse ( 4bef93f ) serialization: 🐛 fix issue where fixed strings were incorrectly being added to the queryparams ( 338790b ) serialization: 🐛 fix missing AlgoApiObject on all Transaction Params ( d8f5b27 ) transaction: 🐛 fix OnCompletion having incorrect byte values ( 9786105 ) transaction: 🐛 fix incorrect constructor in Transaction.ApplicationCall ( 521fb98 ) transaction: remove unused assetCloseTo param in AssetClawback ( ce4d004 ) Code Refactoring 🔥 remove NativeSliceExtensions ( 325bfa9 ) 🔥 remove some verify methods in the transaction ( 2432bdd ) 🔥 remove unnecessary SendTransactionRaw ( 552dac8 ) ♻️ convert all SignedTransaction<> to a single SignedTransaction ( 4909d60 ) ♻️ rename RawSignedTransaction -> SignedTransaction ( 787b160 ) ♻️ rename RawTransaction -> Transaction ( b3c4129 ) ♻️ rename AlgoApiKeyAttribute -> AlgoApiFieldAttribute ( 607dab2 ) algod: ♻️ rename Block -> BlockResponse ( de1999c ) algod: ♻️ replace AccountParticipation with Transaction.KeyRegistration.Params ( b7e9ba7 ) kmd: ♻️ replace Request with explicit method params ( 1b63b9b ) remove .NET 4.8 requirement ( 077ea1e ), closes #19 #9 Features 👷 Add npmjs support ( 42c57c3 ) ➕ Add libsodium ios, android, and windows ( 066a8ad ) ✨ Add Account.Generate ( 8cfea18 ) ✨ Add Address struct ( 9c63147 ) ✨ Add basic signed transaction support ( 64bfae2 ) ✨ Add basic transaction support for message pack serialization and deserialization ( 13dc164 ) ✨ Add checksums ( 1427b4c ) ✨ add FixedBytesFormatter ( e686c0d ) ✨ Add IEquatable, GetHashCode for RawTransaction ( fea1031 ) ✨ add LogicSig implementation ( bfcea16 ) ✨ Add Mnemonic.FromString and Mnemonic.ToString ( 5f2e0ef ) ✨ add readOnly support ( 4f94ee4 ) ✨ Add Sha512 interop ( 72412b8 ) ✨ Add start of Native Integration with Libsodium ( 04dadfb ) ✨ Added Transaction Header, Payment ( f4f5004 ) ✨ implement asset configuration transaction ( 15201f2 ), closes #27 ✨ implement AssetFreezeTransaction ( aeb6bf7 ), closes #26 ✨ implement AssetTransfer Transaction ( 2d74093 ), closes #23 ✨ update AlgoApiFormatterLookup ( 509f021 ) Add Mnemonic and Key datastructs ( 0338af0 ) Add signed transaction support for payment transactions ( 4cb4b4c ) algod: add support for sending a group of transactions ( c2337e0 ) algod: implement Algod Client ( ba2920e ), closes #10 #16 #18 indexer: ♻️ rename ApplicationStateSchema -> StateSchema ( c2c1752 ) indexer: ✨ add IIndexerClient ( c383659 ) indexer: ✨ implement AccountQuery ( 3bc4c45 ) indexer: ✨ implement AccountResponse ( df7875c ) indexer: ✨ implement AccountsQuery ( eb4f138 ) indexer: ✨ implement AccountsResponse ( 15b95a0 ) indexer: ✨ implement AddressRole ( 819fee1 ) indexer: ✨ implement Application ( 6efc045 ) indexer: ✨ implement ApplicationLocalState ( b9f5e19 ) indexer: ✨ implement ApplicationQuery ( 90529fe ) indexer: ✨ implement ApplicationResponse ( 2968a38 ) indexer: ✨ implement ApplicationsQuery ( 1b2a010 ) indexer: ✨ implement ApplicationsResponse ( f3120b3 ) indexer: ✨ implement Asset ( 3e2b9e6 ) indexer: ✨ implement AssetHolding ( b7e6714 ) indexer: ✨ implement AssetParams ( 3e25148 ) indexer: ✨ implement AssetQuery ( 2c8f30d ) indexer: ✨ implement AssetResponse ( f44da47 ) indexer: ✨ implement AssetsResponse ( abf6ccd ) indexer: ✨ implement BalancesQuery ( 37c652e ) indexer: ✨ implement BalancesResponse ( bef374a ) indexer: ✨ implement Block ( 8168949 ) indexer: ✨ implement BlockRewards ( 43a2e0d ) indexer: ✨ implement BlockUpgradeStatus ( 34ee633 ) indexer: ✨ implement BlockUpgradeVote ( 46bfbdf ) indexer: ✨ implement ErrorResponse msgpack fields ( 7bb31e4 ) indexer: ✨ implement EvalDelta msgpack fields ( e7ce847 ) indexer: ✨ implement EvalDeltaKeyValue msgpack fields ( f564579 ) indexer: ✨ implement HealthCheck ( 57e38ee ) indexer: ✨ implement IndexerClient.GetAccount ( e088877 ) indexer: ✨ implement IndexerClient.GetAccounts ( 1fa9f5b ) indexer: ✨ implement IndexerClient.GetHealth ( ee98909 ) indexer: ✨ implement IndexerClient ( b39c115 ) indexer: ✨ implement LogicSig json fields ( a547772 ) indexer: ✨ implement MiniAssetHolding ( 6df0bd0 ) indexer: ✨ implement MultiSig.SubSignature ( d995b21 ) indexer: ✨ implement MultiSig ( 2b33c02 ) indexer: ✨ implement OnCompletion ( b7181f3 ) indexer: ✨ implement TealKeyValue msgPack fields ( bfcb1ad ) indexer: ✨ implement Transaction.ApplicationCall ( 4e800be ) indexer: ✨ implement Transaction.ApplicationCall model fields ( e05a1b3 ) indexer: ✨ implement Transaction.AssetConfiguration model fields ( b021ac9 ) indexer: ✨ implement Transaction.AssetFreeze model fields ( 655aee9 ) indexer: ✨ implement Transaction.AssetTransfer model fields ( 5322ad7 ) indexer: ✨ implement Transaction.KeyRegistration ( da15081 ) indexer: ✨ implement Transaction.KeyRegistration model fields ( ab75259 ) indexer: ✨ implement TransactionResponse ( 0cdcdde ) indexer: ✨ implement TransactionsQuery ( a9e353a ) indexer: ✨ implement AssetsQuery ( ebfb08c ) indexer: ✨ implement TransactionsResponse ( 27345f5 ) json: ✨ implement JsonReader.Skip ( cba58d6 ) json: ✨ implement JsonWriter.WriteRaw ( f780932 ) json: ✨ implement ReadRaw ( c2ec519 ) kmd: ✨ add Error to ErrorMessage which is used for kmd ( b64aac6 ) kmd: ✨ implement APIV1DELETEKeyResponse ( d273c12 ) kmd: ✨ implement APIV1DELETEMultisigResponse ( b323213 ) kmd: ✨ implement APIV1GETWalletsResponse ( cd7180d ) kmd: ✨ implement APIV1Wallet ( 4b74869 ) kmd: ✨ implement APIV1WalletHandle ( da73b67 ) kmd: ✨ implement CreateWalletRequest ( 02cac0a ) kmd: ✨ implement CreateWalletRequest api fields ( 9f1b667 ) kmd: ✨ implement CreateWalletResponse ( d0c3965 ) kmd: ✨ implement DeleteKeyRequest ( 9de69d0 ) kmd: ✨ implement DeleteMultiSigRequest ( 4d0b859 ) kmd: ✨ implement ExportKeyRequest ( 2dfed57 ) kmd: ✨ implement ExportKeyResponse.Equals ( a5769c7 ) kmd: ✨ implement ExportKeyResponse ( f5dc29a ) kmd: ✨ implement ExportMasterKeyRequest ( b668ac9 ) kmd: ✨ implement ExportMasterKeyResponse ( eaf3066 ) kmd: ✨ implement ExportMultiSigRequest ( eab6771 ) kmd: ✨ implement ExportMultiSigResponse ( 41677c2 ) kmd: ✨ implement GenerateKeyResponse ( 82f0749 ) kmd: ✨ implement GenerateMasterKeyRequest ( 41f2b64 ) kmd: ✨ implement ImportKeyRequest ( 09c8308 ) kmd: ✨ implement ImportKeyResponse ( 338e9e7 ) kmd: ✨ implement ImportMultiSigRequest ( b8eb046 ) kmd: ✨ implement ImportMultiSigResponse ( 6a92419 ) kmd: ✨ implement InitWalletHandleTokenRequest ( 5c2bde4 ) kmd: ✨ implement InitWalletHandleTokenResponse ( 4eacfe2 ) kmd: ✨ implement KmdClient ( b37cef3 ), closes #13 kmd: ✨ implement ListKeysRequest ( 70ce0ff ) kmd: ✨ implement ListKeysResponse ( 6fb2a6d ) kmd: ✨ implement ListMultiSigRequest ( 3da753e ) kmd: ✨ implement ListMultiSigResponse ( d0a6782 ) kmd: ✨ implement ListWalletsRequest ( 91de444 ) kmd: ✨ implement ReleaseWalletHandleTokenRequest ( c6a836d ) kmd: ✨ implement ReleaseWalletHandleTokenResponse ( 3f2d081 ) kmd: ✨ implement RenameWalletRequest ( ccf7d3e ) kmd: ✨ implement RenameWalletResponse ( 1d35264 ) kmd: ✨ implement RenewWalletHandleTokenRequest ( 76269cc ) kmd: ✨ implement RenewWalletHandleTokenResponse ( d4f6a9a ) kmd: ✨ implement SignMultiSigRequest ( d535391 ) kmd: ✨ implement SignMultiSigResponse ( 0b16ac4 ) kmd: ✨ implement SignProgramMultiSigRequest ( 9460af9 ) kmd: ✨ implement SignProgramMultiSigResponse ( ee5ea0e ) kmd: ✨ implement SignProgramRequest ( c8826fa ) kmd: ✨ implement SignTransactionRequest ( 38ec667 ) kmd: ✨ implement SignTransactionResponse ( e88c293 ) kmd: ✨ implement VersionsRequest ( 90f9cb6 ) kmd: ✨ implement VersionsResponse ( 15ab570 ) kmd: ✨ implement WalletInfoResponse ( cb073e9 ) kmd: implement SignProgramResponse ( f529e2a ) msgpack: ✨ implement MessagePackReader.ReadRaw ( 0f6e28a ) msgpack: ✨ implement MessagePackWriter.WriteRaw ( 703544c ) networking: ✨ add ApiResponse API to ApiResponse<> ( b9728f9 ) serialization: ✨ add formatters for PrivateKey , PublicKey , and Signature ( 11d345b ) serialization: ✨ add support for deserializing byte[] ( 6764157 ) serialization: ✨ add support for generically serializing byte enums to strings ( bae5d83 ) serialization: ✨ finish implementing MessagePackReader.Integers and MessagePackWriter.Integers ( d669359 ) serialization: ✨ finish implementing serializer/deserializer methods in EnumFormatter ( 414991f ) serialization: ✨ implement AlgoApiObject ( 9ef3335 ) serialization: ✨ implement Timestamp ( e520962 ) serialization: 🎉 update formatter cache ( ae346d6 ) transaction: ✨ add GetSignature and ToRaw extensions to ITransaction ( 426dea6 ) transaction: ✨ add RegisterAccountOnline and RegisterAccountOffline APIs ( d52e953 ) transaction: ✨ add Transaction.AppCreate and Transaction.AppConfigure APIs ( 0dd2e75 ) transaction: ✨ add Transaction.AssetCreate Transaction.AssetConfigure and Transaction.AssetDelete API ( 4192aba ) transaction: ✨ add Transaction.AssetFreeze API ( d8b5721 ) transaction: ✨ add Transaction.Payment API ( 241ec4c ) transaction: ✨ implement address from application id ( a7df476 ) transaction: ✨ implement AssetClawback and AssetAccept ( ccb2dc6 ), closes #24 #25 transaction: ✨ implement atomic transfers ( c97fdc1 ), closes #45 transaction: ✨ use TransactionParams in Transaction constructors ( c99bd3f ) unity: make AlgoApiClient's Serializable ( a6ef8a4 ) Reverts demo: 🔥 remove bossroom assets... too big to be a sample ( d768029 ) BREAKING CHANGES Removing NativeSliceExtensions algod: AccountParticipation no longer exists transaction: All transaction constructors have been changed to use TransactionParams indexer: Removed token from IndexerClient constructor kmd: changes IKmdClient API to use parameters instead of Request objs indexer: indexer queries are now given as optional arguments remove Transaction.VerifySignature , SignedTransaction.Verify signed transactions are now represented by SignedTransaction (non-generic) renamed RawSignedTransaction -> SignedTransaction RawTransaction renamed to Transaction AlgoApiKeyAttribute -> AlgoApiFieldAttribute algod: Block renamed to BlockResponse Replace Buffer with GetUnsafePtr Algo Serializer API has completely changed... Removes the SendTransactionRaw method from AlgodClient 1.0.0-pre.7 (2021-10-29) Bug Fixes transaction: remove unused assetCloseTo param in AssetClawback ( f45dac1 ) 1.0.0-pre.6 (2021-10-28) Bug Fixes indexer: fix missing Version field in HealthCheck ( 39c3444 ) Features algod: add support for sending a group of transactions ( a7a7695 ) 1.0.0-pre.5 (2021-10-27) Bug Fixes crypto: fix libsodium not working on OSX ( 1154450 ) 1.0.0-pre.4 (2021-10-27) Features unity: make AlgoApiClient's Serializable ( 4a3aa11 ) 1.0.0-pre.3 (2021-10-25) Code Refactoring 🔥 remove NativeSliceExtensions ( c5c7715 ) BREAKING CHANGES Removing NativeSliceExtensions 1.0.0-pre.2 (2021-10-25) Bug Fixes fix empty dirs finding their way into the project ( 82afc9d ) 1.0.0-pre.1 (2021-10-24) Bug Fixes 🐛 fix RawTransaction.Equals ( f6bd889 ) 🐛 fix compile errs ( 7a03ed9 ) 🐛 fix crash on ArrayComparer.Equals ( 8ca1b06 ) 🐛 fix issues with codegen and AOT compilation ( d2f9bdc ) 🐛 fix keyworded enum types formatting as numbers ( d686c13 ) 🐛 Fix npm release ( 9e68078 ) 🐛 Fix repository ( e765589 ) 🐛 fix signatures ( 2fb4614 ) 🚩 Update package registry ( a0800bc ) ✅ Fix CI tests on Github Actions can't find libsodium ( 20c4ad5 ), closes #12 algod: 🐛 fix AlgodClient.TealCompile ( 8f5a67a ), closes #20 algod: 🐛 fix AssetParams serialization ( cbf9a69 ) algod: 🐛 fix pending transactions not returning messagepack ( dca09f8 ) algod: 🐛 fix vrfpubkey formatter lookup ( 0bb0014 ) algod: 🐛 fix vrfpubkey formatting ( 7d02443 ) algod: 🐛 replace VrfPubKey with FixedString128Bytes ( 94b02b0 ), closes #42 indexer: 🐛 add missing fields to Account model ( 5732a1d ) indexer: 🐛 add token back to indexer ( 023cb05 ) indexer: 🐛 fix HealthCheck missing serialization logic ( f5165c6 ) indexer: 🐛 fix indexer requires token ( 57f6114 ) indexer: 🐛 fix transaction formatters missing valid msgpack fields ( bf917ac ) indexer: 🔥 fix huge issue with indexer where query parameters were in body ( 7bcca20 ) indexer: ✨ fix TealValue msgpack fieldnames ( 2a6ef27 ) json: 🐛 fix PrivateKey JSON deserialization err ( cb327e0 ) json: 🐛 fix empty json objects missing begin object '{' char ( af9a2f1 ) kmd: 🎨 fix KmdClient API incorrectly using optional args ( a53998b ), closes #36 kmd: 🐛 fix GenerateKeyRequest to use wallet_handle_token not password ( a86c25e ) kmd: 🐛 fix ImportKeyRequest to use wallet_handle_token not password ( f020a03 ) kmd: 🐛 fix KmdClient.SignTransaction returning a signed transaction message ( f0a354c ) kmd: 🐛 fix WalletHandle not added to formatter cache ( 4c30939 ) kmd: 🐛 fix multisig ( fc7bcd6 ) serialization: 🐛 fix Block not having a formatter ( dec6176 ) serialization: 🐛 fix BlockResponse Serialization ( 1252a16 ) serialization: 🐛 fix JsonWriter not writing to NativeText ( 2b61659 ) serialization: 🐛 fix SignedTransaction serialization ( f4bde8d ) serialization: 🐛 fix TransactionId serialization ( b7e07ca ) serialization: 🐛 fix discrepancy between TransactionId and TransactinIdResponse ( d0c0370 ) serialization: 🐛 fix issue where fixed strings were incorrectly being added to the queryparams ( a3e6fd9 ) serialization: 🐛 fix missing AlgoApiObject on all Transaction Params ( a11015f ) transaction: 🐛 fix OnCompletion having incorrect byte values ( 514a378 ) transaction: 🐛 fix incorrect constructor in Transaction.ApplicationCall ( 98b5829 ) Code Refactoring 🔥 remove some verify methods in the transaction ( 70a8308 ) 🔥 remove unnecessary SendTransactionRaw ( 09b3bdc ) ♻️ convert all SignedTransaction<> to a single SignedTransaction ( 26fa65a ) ♻️ rename RawSignedTransaction -> SignedTransaction ( 059c6a3 ) ♻️ rename RawTransaction -> Transaction ( bade09e ) ♻️ rename AlgoApiKeyAttribute -> AlgoApiFieldAttribute ( 1b37028 ) algod: ♻️ rename Block -> BlockResponse ( eca9fb6 ) algod: ♻️ replace AccountParticipation with Transaction.KeyRegistration.Params ( 3b624ee ) kmd: ♻️ replace Request with explicit method params ( 030a0a9 ) remove .NET 4.8 requirement ( 9f55707 ), closes #19 #9 Features 👷 Add npmjs support ( 56f60f0 ) ➕ Add libsodium ios, android, and windows ( 00c9511 ) ✨ Add Account.Generate ( 95233bf ) ✨ Add Address struct ( d92b903 ) ✨ Add basic signed transaction support ( bb5900f ) ✨ Add basic transaction support for message pack serialization and deserialization ( 63243ed ) ✨ Add checksums ( 2bc2189 ) ✨ add FixedBytesFormatter ( 941eb3f ) ✨ Add IEquatable, GetHashCode for RawTransaction ( 885928e ) ✨ add LogicSig implementation ( 51a21e0 ) ✨ Add Mnemonic.FromString and Mnemonic.ToString ( d3a88c6 ) ✨ add readOnly support ( 6070565 ) ✨ Add Sha512 interop ( 86aabf5 ) ✨ Add start of Native Integration with Libsodium ( 55e325f ) ✨ Added Transaction Header, Payment ( d3ebced ) ✨ implement asset configuration transaction ( 4f9ec58 ), closes #27 ✨ implement AssetFreezeTransaction ( e3233bf ), closes #26 ✨ implement AssetTransfer Transaction ( 62a1841 ), closes #23 ✨ update AlgoApiFormatterLookup ( cc112e5 ) Add Mnemonic and Key datastructs ( 4370f74 ) Add signed transaction support for payment transactions ( c07d370 ) algod: implement Algod Client ( a7c9e90 ), closes #10 #16 #18 indexer: ♻️ rename ApplicationStateSchema -> StateSchema ( 7b02f70 ) indexer: ✨ add IIndexerClient ( 093153e ) indexer: ✨ implement AccountQuery ( bda5301 ) indexer: ✨ implement AccountResponse ( 09d7fb9 ) indexer: ✨ implement AccountsQuery ( e7d56e2 ) indexer: ✨ implement AccountsResponse ( ea01260 ) indexer: ✨ implement AddressRole ( 3325b60 ) indexer: ✨ implement Application ( 144d04d ) indexer: ✨ implement ApplicationLocalState ( 9ad284f ) indexer: ✨ implement ApplicationQuery ( de02370 ) indexer: ✨ implement ApplicationResponse ( fa34b20 ) indexer: ✨ implement ApplicationsQuery ( 914ca8b ) indexer: ✨ implement ApplicationsResponse ( e342cdc ) indexer: ✨ implement Asset ( 161f361 ) indexer: ✨ implement AssetHolding ( 203785a ) indexer: ✨ implement AssetParams ( ac78bfe ) indexer: ✨ implement AssetQuery ( c8eda94 ) indexer: ✨ implement AssetResponse ( cd8e48f ) indexer: ✨ implement AssetsResponse ( ade022d ) indexer: ✨ implement BalancesQuery ( b8f167e ) indexer: ✨ implement BalancesResponse ( c7ae299 ) indexer: ✨ implement Block ( 2533f24 ) indexer: ✨ implement BlockRewards ( bb49cb0 ) indexer: ✨ implement BlockUpgradeStatus ( e9a0423 ) indexer: ✨ implement BlockUpgradeVote ( de5e72e ) indexer: ✨ implement ErrorResponse msgpack fields ( 358e6a6 ) indexer: ✨ implement EvalDelta msgpack fields ( 45b2df2 ) indexer: ✨ implement EvalDeltaKeyValue msgpack fields ( bd3c230 ) indexer: ✨ implement HealthCheck ( a164577 ) indexer: ✨ implement IndexerClient.GetAccount ( 88ba11a ) indexer: ✨ implement IndexerClient.GetAccounts ( 2e427f1 ) indexer: ✨ implement IndexerClient.GetHealth ( 0883ff0 ) indexer: ✨ implement IndexerClient ( d7fd35a ) indexer: ✨ implement LogicSig json fields ( b22297c ) indexer: ✨ implement MiniAssetHolding ( 59941b8 ) indexer: ✨ implement MultiSig.SubSignature ( ef526ec ) indexer: ✨ implement MultiSig ( df959a7 ) indexer: ✨ implement OnCompletion ( 04227b9 ) indexer: ✨ implement TealKeyValue msgPack fields ( e521553 ) indexer: ✨ implement Transaction.ApplicationCall ( 5a5e819 ) indexer: ✨ implement Transaction.ApplicationCall model fields ( 69d64e8 ) indexer: ✨ implement Transaction.AssetConfiguration model fields ( baf7c2e ) indexer: ✨ implement Transaction.AssetFreeze model fields ( be45b90 ) indexer: ✨ implement Transaction.AssetTransfer model fields ( 84aa15e ) indexer: ✨ implement Transaction.KeyRegistration ( 69e004e ) indexer: ✨ implement Transaction.KeyRegistration model fields ( 44029ca ) indexer: ✨ implement TransactionResponse ( 430a1fa ) indexer: ✨ implement TransactionsQuery ( 9ec7f4f ) indexer: ✨ implement AssetsQuery ( e8d6e55 ) indexer: ✨ implement TransactionsResponse ( e1a46f8 ) json: ✨ implement JsonReader.Skip ( 0d6e6ab ) json: ✨ implement JsonWriter.WriteRaw ( 1643bad ) json: ✨ implement ReadRaw ( 384abf8 ) kmd: ✨ add Error to ErrorMessage which is used for kmd ( 3c37a94 ) kmd: ✨ implement APIV1DELETEKeyResponse ( 81f6c1e ) kmd: ✨ implement APIV1DELETEMultisigResponse ( 4c1d6db ) kmd: ✨ implement APIV1GETWalletsResponse ( 9025e9a ) kmd: ✨ implement APIV1Wallet ( e514183 ) kmd: ✨ implement APIV1WalletHandle ( 8bae4b4 ) kmd: ✨ implement CreateWalletRequest ( 63882eb ) kmd: ✨ implement CreateWalletRequest api fields ( f32094f ) kmd: ✨ implement CreateWalletResponse ( 2579231 ) kmd: ✨ implement DeleteKeyRequest ( 5c89319 ) kmd: ✨ implement DeleteMultiSigRequest ( 15afda0 ) kmd: ✨ implement ExportKeyRequest ( a8b1131 ) kmd: ✨ implement ExportKeyResponse.Equals ( 010e656 ) kmd: ✨ implement ExportKeyResponse ( db01766 ) kmd: ✨ implement ExportMasterKeyRequest ( 2a8ed81 ) kmd: ✨ implement ExportMasterKeyResponse ( 2843847 ) kmd: ✨ implement ExportMultiSigRequest ( e67c925 ) kmd: ✨ implement ExportMultiSigResponse ( bac0edb ) kmd: ✨ implement GenerateKeyResponse ( 1d6795f ) kmd: ✨ implement GenerateMasterKeyRequest ( 6503dd8 ) kmd: ✨ implement ImportKeyRequest ( 521f7c1 ) kmd: ✨ implement ImportKeyResponse ( 83798a6 ) kmd: ✨ implement ImportMultiSigRequest ( 5eb5d42 ) kmd: ✨ implement ImportMultiSigResponse ( 001f3ea ) kmd: ✨ implement InitWalletHandleTokenRequest ( 36dd459 ) kmd: ✨ implement InitWalletHandleTokenResponse ( 26db31b ) kmd: ✨ implement KmdClient ( 7433060 ), closes #13 kmd: ✨ implement ListKeysRequest ( b55fe67 ) kmd: ✨ implement ListKeysResponse ( 0096bd5 ) kmd: ✨ implement ListMultiSigRequest ( ce667d1 ) kmd: ✨ implement ListMultiSigResponse ( 550a0ed ) kmd: ✨ implement ListWalletsRequest ( b3b5023 ) kmd: ✨ implement ReleaseWalletHandleTokenRequest ( ff024de ) kmd: ✨ implement ReleaseWalletHandleTokenResponse ( 719c393 ) kmd: ✨ implement RenameWalletRequest ( c5a9f3b ) kmd: ✨ implement RenameWalletResponse ( 6e5b55e ) kmd: ✨ implement RenewWalletHandleTokenRequest ( 0a0d589 ) kmd: ✨ implement RenewWalletHandleTokenResponse ( d85e5f5 ) kmd: ✨ implement SignMultiSigRequest ( e1dfee9 ) kmd: ✨ implement SignMultiSigResponse ( 83ea09f ) kmd: ✨ implement SignProgramMultiSigRequest ( 063ed1d ) kmd: ✨ implement SignProgramMultiSigResponse ( b5e5b5e ) kmd: ✨ implement SignProgramRequest ( 52ccb07 ) kmd: ✨ implement SignTransactionRequest ( c542582 ) kmd: ✨ implement SignTransactionResponse ( d7080ab ) kmd: ✨ implement VersionsRequest ( f70f0fd ) kmd: ✨ implement VersionsResponse ( 7c85ec2 ) kmd: ✨ implement WalletInfoResponse ( 6b3edc7 ) kmd: implement SignProgramResponse ( 978a31d ) msgpack: ✨ implement MessagePackReader.ReadRaw ( c2dec22 ) msgpack: ✨ implement MessagePackWriter.WriteRaw ( d5ae90e ) networking: ✨ add ApiResponse API to ApiResponse<> ( 8556c53 ) serialization: ✨ add formatters for PrivateKey , PublicKey , and Signature ( 2dedd67 ) serialization: ✨ add support for deserializing byte[] ( 3ef497f ) serialization: ✨ add support for generically serializing byte enums to strings ( 424c8b4 ) serialization: ✨ finish implementing MessagePackReader.Integers and MessagePackWriter.Integers ( 37d8f20 ) serialization: ✨ finish implementing serializer/deserializer methods in EnumFormatter ( 3af569f ) serialization: ✨ implement AlgoApiObject ( 74456b6 ) serialization: ✨ implement Timestamp ( cc1159b ) serialization: 🎉 update formatter cache ( 029f841 ) transaction: ✨ add GetSignature and ToRaw extensions to ITransaction ( e4a3ad5 ) transaction: ✨ add RegisterAccountOnline and RegisterAccountOffline APIs ( 71d42c1 ) transaction: ✨ add Transaction.AppCreate and Transaction.AppConfigure APIs ( c64469a ) transaction: ✨ add Transaction.AssetCreate Transaction.AssetConfigure and Transaction.AssetDelete API ( 259b37b ) transaction: ✨ add Transaction.AssetFreeze API ( 160f837 ) transaction: ✨ add Transaction.Payment API ( 88e918d ) transaction: ✨ implement address from application id ( 9e3c883 ) transaction: ✨ implement AssetClawback and AssetAccept ( c3578ec ), closes #24 #25 transaction: ✨ implement atomic transfers ( 21f7ee3 ), closes #45 transaction: ✨ use TransactionParams in Transaction constructors ( a966320 ) Reverts demo: 🔥 remove bossroom assets... too big to be a sample ( e53192d ) BREAKING CHANGES algod: AccountParticipation no longer exists transaction: All transaction constructors have been changed to use TransactionParams indexer: Removed token from IndexerClient constructor kmd: changes IKmdClient API to use parameters instead of Request objs indexer: indexer queries are now given as optional arguments remove Transaction.VerifySignature , SignedTransaction.Verify signed transactions are now represented by SignedTransaction (non-generic) renamed RawSignedTransaction -> SignedTransaction RawTransaction renamed to Transaction AlgoApiKeyAttribute -> AlgoApiFieldAttribute algod: Block renamed to BlockResponse Replace Buffer with GetUnsafePtr Algo Serializer API has completely changed... Removes the SendTransactionRaw method from AlgodClient 1.0.0-exp.27 (2021-10-24) Bug Fixes algod: 🐛 fix AlgodClient.TealCompile ( 8f5a67a ), closes #20 algod: 🐛 fix AssetParams serialization ( cbf9a69 ) algod: 🐛 fix vrfpubkey formatter lookup ( 0bb0014 ) algod: 🐛 fix vrfpubkey formatting ( 7d02443 ) algod: 🐛 replace VrfPubKey with FixedString128Bytes ( 94b02b0 ), closes #42 kmd: 🎨 fix KmdClient API incorrectly using optional args ( a53998b ), closes #36 serialization: 🐛 fix TransactionId serialization ( b7e07ca ) transaction: 🐛 fix OnCompletion having incorrect byte values ( 514a378 ) transaction: 🐛 fix incorrect constructor in Transaction.ApplicationCall ( 98b5829 ) Code Refactoring algod: ♻️ replace AccountParticipation with Transaction.KeyRegistration.Params ( 3b624ee ) Features transaction: ✨ add RegisterAccountOnline and RegisterAccountOffline APIs ( 71d42c1 ) transaction: ✨ add Transaction.AppCreate and Transaction.AppConfigure APIs ( c64469a ) transaction: ✨ add Transaction.AssetCreate Transaction.AssetConfigure and Transaction.AssetDelete API ( 259b37b ) transaction: ✨ add Transaction.AssetFreeze API ( 160f837 ) transaction: ✨ add Transaction.Payment API ( 88e918d ) transaction: ✨ implement address from application id ( 9e3c883 ) transaction: ✨ implement AssetClawback and AssetAccept ( c3578ec ), closes #24 #25 transaction: ✨ implement atomic transfers ( 21f7ee3 ), closes #45 transaction: ✨ use TransactionParams in Transaction constructors ( a966320 ) BREAKING CHANGES algod: AccountParticipation no longer exists transaction: All transaction constructors have been changed to use TransactionParams 1.0.0-exp.27 (2021-10-23) Bug Fixes algod: 🐛 fix AlgodClient.TealCompile ( 8f5a67a ), closes #20 algod: 🐛 fix AssetParams serialization ( cbf9a69 ) algod: 🐛 fix vrfpubkey formatter lookup ( 0bb0014 ) algod: 🐛 fix vrfpubkey formatting ( 7d02443 ) algod: 🐛 replace VrfPubKey with FixedString128Bytes ( 94b02b0 ), closes #42 kmd: 🎨 fix KmdClient API incorrectly using optional args ( a53998b ), closes #36 serialization: 🐛 fix TransactionId serialization ( b7e07ca ) transaction: 🐛 fix OnCompletion having incorrect byte values ( 514a378 ) transaction: 🐛 fix incorrect constructor in Transaction.ApplicationCall ( 98b5829 ) Code Refactoring algod: ♻️ replace AccountParticipation with Transaction.KeyRegistration.Params ( 3b624ee ) Features transaction: ✨ add RegisterAccountOnline and RegisterAccountOffline APIs ( 71d42c1 ) transaction: ✨ add Transaction.AppCreate and Transaction.AppConfigure APIs ( c64469a ) transaction: ✨ add Transaction.AssetCreate Transaction.AssetConfigure and Transaction.AssetDelete API ( 259b37b ) transaction: ✨ add Transaction.AssetFreeze API ( 160f837 ) transaction: ✨ add Transaction.Payment API ( 88e918d ) transaction: ✨ implement address from application id ( 9e3c883 ) transaction: ✨ implement AssetClawback and AssetAccept ( c3578ec ), closes #24 #25 transaction: ✨ implement atomic transfers ( 21f7ee3 ), closes #45 transaction: ✨ use TransactionParams in Transaction constructors ( a966320 ) BREAKING CHANGES algod: AccountParticipation no longer exists transaction: All transaction constructors have been changed to use TransactionParams 1.0.0-exp.26 (2021-10-13) Bug Fixes indexer: 🐛 add token back to indexer ( 023cb05 ) indexer: 🐛 fix indexer requires token ( 57f6114 ) json: 🐛 fix PrivateKey JSON deserialization err ( cb327e0 ) json: 🐛 fix empty json objects missing begin object '{' char ( af9a2f1 ) kmd: 🐛 fix GenerateKeyRequest to use wallet_handle_token not password ( a86c25e ) kmd: 🐛 fix ImportKeyRequest to use wallet_handle_token not password ( f020a03 ) kmd: 🐛 fix KmdClient.SignTransaction returning a signed transaction message ( f0a354c ) kmd: 🐛 fix WalletHandle not added to formatter cache ( 4c30939 ) kmd: 🐛 fix multisig ( fc7bcd6 ) Code Refactoring kmd: ♻️ replace Request with explicit method params ( 030a0a9 ) Features json: ✨ implement JsonReader.Skip ( 0d6e6ab ) serialization: ✨ add support for deserializing byte[] ( 3ef497f ) transaction: ✨ add GetSignature and ToRaw extensions to ITransaction ( e4a3ad5 ) BREAKING CHANGES indexer: Removed token from IndexerClient constructor kmd: changes IKmdClient API to use parameters instead of Request objs 1.0.0-exp.25 (2021-10-08) Bug Fixes 🐛 fix keyworded enum types formatting as numbers ( d686c13 ) algod: 🐛 fix pending transactions not returning messagepack ( dca09f8 ) indexer: 🐛 add missing fields to Account model ( 5732a1d ) indexer: 🐛 fix HealthCheck missing serialization logic ( f5165c6 ) indexer: 🔥 fix huge issue with indexer where query parameters were in body ( 7bcca20 ) serialization: 🐛 fix Block not having a formatter ( dec6176 ) serialization: 🐛 fix BlockResponse Serialization ( 1252a16 ) serialization: 🐛 fix JsonWriter not writing to NativeText ( 2b61659 ) serialization: 🐛 fix discrepancy between TransactionId and TransactinIdResponse ( d0c0370 ) serialization: 🐛 fix issue where fixed strings were incorrectly being added to the queryparams ( a3e6fd9 ) serialization: 🐛 fix missing AlgoApiObject on all Transaction Params ( a11015f ) Features networking: ✨ add ApiResponse API to ApiResponse<> ( 8556c53 ) serialization: ✨ add support for generically serializing byte enums to strings ( 424c8b4 ) serialization: ✨ finish implementing MessagePackReader.Integers and MessagePackWriter.Integers ( 37d8f20 ) serialization: ✨ finish implementing serializer/deserializer methods in EnumFormatter ( 3af569f ) Reverts demo: 🔥 remove bossroom assets... too big to be a sample ( e53192d ) BREAKING CHANGES indexer: indexer queries are now given as optional arguments 1.0.0-exp.24 (2021-10-05) Bug Fixes 🐛 fix signatures ( 2fb4614 ) Features kmd: ✨ add Error to ErrorMessage which is used for kmd ( 3c37a94 ) kmd: ✨ implement APIV1DELETEKeyResponse ( 81f6c1e ) kmd: ✨ implement APIV1DELETEMultisigResponse ( 4c1d6db ) kmd: ✨ implement APIV1GETWalletsResponse ( 9025e9a ) kmd: ✨ implement APIV1Wallet ( e514183 ) kmd: ✨ implement APIV1WalletHandle ( 8bae4b4 ) kmd: ✨ implement CreateWalletRequest ( 63882eb ) kmd: ✨ implement CreateWalletRequest api fields ( f32094f ) kmd: ✨ implement CreateWalletResponse ( 2579231 ) kmd: ✨ implement DeleteKeyRequest ( 5c89319 ) kmd: ✨ implement DeleteMultiSigRequest ( 15afda0 ) kmd: ✨ implement ExportKeyRequest ( a8b1131 ) kmd: ✨ implement ExportKeyResponse.Equals ( 010e656 ) kmd: ✨ implement ExportKeyResponse ( db01766 ) kmd: ✨ implement ExportMasterKeyRequest ( 2a8ed81 ) kmd: ✨ implement ExportMasterKeyResponse ( 2843847 ) kmd: ✨ implement ExportMultiSigRequest ( e67c925 ) kmd: ✨ implement ExportMultiSigResponse ( bac0edb ) kmd: ✨ implement GenerateKeyResponse ( 1d6795f ) kmd: ✨ implement GenerateMasterKeyRequest ( 6503dd8 ) kmd: ✨ implement ImportKeyRequest ( 521f7c1 ) kmd: ✨ implement ImportKeyResponse ( 83798a6 ) kmd: ✨ implement ImportMultiSigRequest ( 5eb5d42 ) kmd: ✨ implement ImportMultiSigResponse ( 001f3ea ) kmd: ✨ implement InitWalletHandleTokenRequest ( 36dd459 ) kmd: ✨ implement InitWalletHandleTokenResponse ( 26db31b ) kmd: ✨ implement KmdClient ( 7433060 ), closes #13 kmd: ✨ implement ListKeysRequest ( b55fe67 ) kmd: ✨ implement ListKeysResponse ( 0096bd5 ) kmd: ✨ implement ListMultiSigRequest ( ce667d1 ) kmd: ✨ implement ListMultiSigResponse ( 550a0ed ) kmd: ✨ implement ListWalletsRequest ( b3b5023 ) kmd: ✨ implement ReleaseWalletHandleTokenRequest ( ff024de ) kmd: ✨ implement ReleaseWalletHandleTokenResponse ( 719c393 ) kmd: ✨ implement RenameWalletRequest ( c5a9f3b ) kmd: ✨ implement RenameWalletResponse ( 6e5b55e ) kmd: ✨ implement RenewWalletHandleTokenRequest ( 0a0d589 ) kmd: ✨ implement RenewWalletHandleTokenResponse ( d85e5f5 ) kmd: ✨ implement SignMultiSigRequest ( e1dfee9 ) kmd: ✨ implement SignMultiSigResponse ( 83ea09f ) kmd: ✨ implement SignProgramMultiSigRequest ( 063ed1d ) kmd: ✨ implement SignProgramMultiSigResponse ( b5e5b5e ) kmd: ✨ implement SignProgramRequest ( 52ccb07 ) kmd: ✨ implement SignTransactionRequest ( c542582 ) kmd: ✨ implement SignTransactionResponse ( d7080ab ) kmd: ✨ implement VersionsRequest ( f70f0fd ) kmd: ✨ implement VersionsResponse ( 7c85ec2 ) kmd: ✨ implement WalletInfoResponse ( 6b3edc7 ) kmd: implement SignProgramResponse ( 978a31d ) serialization: ✨ add formatters for PrivateKey , PublicKey , and Signature ( 2dedd67 ) serialization: 🎉 update formatter cache ( 029f841 ) 1.0.0-exp.23 (2021-10-03) Bug Fixes 🐛 fix RawTransaction.Equals ( f6bd889 ) indexer: 🐛 fix transaction formatters missing valid msgpack fields ( bf917ac ) indexer: ✨ fix TealValue msgpack fieldnames ( 2a6ef27 ) serialization: 🐛 fix SignedTransaction serialization ( f4bde8d ) Code Refactoring 🔥 remove some verify methods in the transaction ( 70a8308 ) ♻️ convert all SignedTransaction<> to a single SignedTransaction ( 26fa65a ) ♻️ rename RawSignedTransaction -> SignedTransaction ( 059c6a3 ) ♻️ rename RawTransaction -> Transaction ( bade09e ) ♻️ rename AlgoApiKeyAttribute -> AlgoApiFieldAttribute ( 1b37028 ) algod: ♻️ rename Block -> BlockResponse ( eca9fb6 ) Features ✨ add readOnly support ( 6070565 ) indexer: ♻️ rename ApplicationStateSchema -> StateSchema ( 7b02f70 ) indexer: ✨ add IIndexerClient ( 093153e ) indexer: ✨ implement AccountQuery ( bda5301 ) indexer: ✨ implement AccountResponse ( 09d7fb9 ) indexer: ✨ implement AccountsQuery ( e7d56e2 ) indexer: ✨ implement AccountsResponse ( ea01260 ) indexer: ✨ implement AddressRole ( 3325b60 ) indexer: ✨ implement Application ( 144d04d ) indexer: ✨ implement ApplicationLocalState ( 9ad284f ) indexer: ✨ implement ApplicationQuery ( de02370 ) indexer: ✨ implement ApplicationResponse ( fa34b20 ) indexer: ✨ implement ApplicationsQuery ( 914ca8b ) indexer: ✨ implement ApplicationsResponse ( e342cdc ) indexer: ✨ implement Asset ( 161f361 ) indexer: ✨ implement AssetHolding ( 203785a ) indexer: ✨ implement AssetParams ( ac78bfe ) indexer: ✨ implement AssetQuery ( c8eda94 ) indexer: ✨ implement AssetResponse ( cd8e48f ) indexer: ✨ implement AssetsResponse ( ade022d ) indexer: ✨ implement BalancesQuery ( b8f167e ) indexer: ✨ implement BalancesResponse ( c7ae299 ) indexer: ✨ implement Block ( 2533f24 ) indexer: ✨ implement BlockRewards ( bb49cb0 ) indexer: ✨ implement BlockUpgradeStatus ( e9a0423 ) indexer: ✨ implement BlockUpgradeVote ( de5e72e ) indexer: ✨ implement ErrorResponse msgpack fields ( 358e6a6 ) indexer: ✨ implement EvalDelta msgpack fields ( 45b2df2 ) indexer: ✨ implement EvalDeltaKeyValue msgpack fields ( bd3c230 ) indexer: ✨ implement HealthCheck ( a164577 ) indexer: ✨ implement IndexerClient.GetAccount ( 88ba11a ) indexer: ✨ implement IndexerClient.GetAccounts ( 2e427f1 ) indexer: ✨ implement IndexerClient.GetHealth ( 0883ff0 ) indexer: ✨ implement IndexerClient ( d7fd35a ) indexer: ✨ implement LogicSig json fields ( b22297c ) indexer: ✨ implement MiniAssetHolding ( 59941b8 ) indexer: ✨ implement MultiSig.SubSignature ( ef526ec ) indexer: ✨ implement MultiSig ( df959a7 ) indexer: ✨ implement OnCompletion ( 04227b9 ) indexer: ✨ implement TealKeyValue msgPack fields ( e521553 ) indexer: ✨ implement Transaction.ApplicationCall ( 5a5e819 ) indexer: ✨ implement Transaction.ApplicationCall model fields ( 69d64e8 ) indexer: ✨ implement Transaction.AssetConfiguration model fields ( baf7c2e ) indexer: ✨ implement Transaction.AssetFreeze model fields ( be45b90 ) indexer: ✨ implement Transaction.AssetTransfer model fields ( 84aa15e ) indexer: ✨ implement Transaction.KeyRegistration ( 69e004e ) indexer: ✨ implement Transaction.KeyRegistration model fields ( 44029ca ) indexer: ✨ implement TransactionResponse ( 430a1fa ) indexer: ✨ implement TransactionsQuery ( 9ec7f4f ) indexer: ✨ implement AssetsQuery ( e8d6e55 ) indexer: ✨ implement TransactionsResponse ( e1a46f8 ) json: ✨ implement JsonWriter.WriteRaw ( 1643bad ) json: ✨ implement ReadRaw ( 384abf8 ) msgpack: ✨ implement MessagePackReader.ReadRaw ( c2dec22 ) msgpack: ✨ implement MessagePackWriter.WriteRaw ( d5ae90e ) serialization: ✨ implement AlgoApiObject ( 74456b6 ) serialization: ✨ implement Timestamp ( cc1159b ) BREAKING CHANGES remove Transaction.VerifySignature , SignedTransaction.Verify signed transactions are now represented by SignedTransaction (non-generic) renamed RawSignedTransaction -> SignedTransaction RawTransaction renamed to Transaction AlgoApiKeyAttribute -> AlgoApiFieldAttribute algod: Block renamed to BlockResponse 1.0.0-exp.22 (2021-09-28) Bug Fixes 🐛 fix crash on ArrayComparer.Equals ( 8ca1b06 ) 🐛 fix issues with codegen and AOT compilation ( d2f9bdc ) 1.0.0-exp.21 (2021-09-28) Features ✨ update AlgoApiFormatterLookup ( cc112e5 ) 1.0.0-exp.20 (2021-09-28) Features ✨ add FixedBytesFormatter ( 941eb3f ) BREAKING CHANGES Replace Buffer with GetUnsafePtr 1.0.0-exp.19 (2021-09-25) Bug Fixes 🐛 fix compile errs ( 7a03ed9 ) 1.0.0-exp.18 (2021-09-25) Features ✨ add LogicSig implementation ( 51a21e0 ) 1.0.0-exp.17 (2021-09-20) Features ✨ implement asset configuration transaction ( 4f9ec58 ), closes #27 ✨ implement AssetFreezeTransaction ( e3233bf ), closes #26 ✨ implement AssetTransfer Transaction ( 62a1841 ), closes #23 1.0.0-exp.16 (2021-09-19) Code Refactoring remove .NET 4.8 requirement ( 9f55707 ), closes #19 #9 BREAKING CHANGES Algo Serializer API has completely changed... 1.0.0-exp.15 (2021-09-03) Code Refactoring 🔥 remove unnecessary SendTransactionRaw ( 09b3bdc ) BREAKING CHANGES Removes the SendTransactionRaw method from AlgodClient 1.0.0-exp.14 (2021-08-30) Features algod: implement Algod Client ( a7c9e90 ), closes #10 #16 #18 1.0.0-exp.13 (2021-08-07) Bug Fixes ✅ Fix CI tests on Github Actions can't find libsodium ( 20c4ad5 ), closes #12 1.0.0-exp.12 (2021-08-04) Features Add signed transaction support for payment transactions ( c07d370 ) 1.0.0-exp.11 (2021-08-03) Features ✨ Add basic signed transaction support ( bb5900f ) 1.0.0-exp.10 (2021-08-03) Features ✨ Add IEquatable, GetHashCode for RawTransaction ( 885928e ) 1.0.0-exp.9 (2021-08-02) Features ✨ Add basic transaction support for message pack serialization and deserialization ( 63243ed ) 1.0.0-exp.8 (2021-07-25) Features ✨ Added Transaction Header, Payment ( d3ebced ) 1.0.0-exp.7 (2021-07-24) Features ✨ Add Account.Generate ( 95233bf ) 1.0.0-exp.6 (2021-07-24) Features 👷 Add npmjs support ( 56f60f0 ) ➕ Add libsodium ios, android, and windows ( 00c9511 ) ✨ Add Address struct ( d92b903 ) ✨ Add checksums ( 2bc2189 ) ✨ Add Sha512 interop ( 86aabf5 ) ✨ Add start of Native Integration with Libsodium ( 55e325f ) 1.0.0-exp.6 (2021-07-23) Features 👷 Add npmjs support ( 56f60f0 ) ➕ Add libsodium ios, android, and windows ( 00c9511 ) ✨ Add checksums ( 2bc2189 ) ✨ Add Sha512 interop ( 86aabf5 ) ✨ Add start of Native Integration with Libsodium ( 55e325f ) 1.0.0-exp.6 (2021-07-21) Features 👷 Add npmjs support ( 56f60f0 ) ➕ Add libsodium ios, android, and windows ( 00c9511 ) ✨ Add Sha512 interop ( 86aabf5 ) ✨ Add start of Native Integration with Libsodium ( 55e325f ) 1.0.0-exp.6 (2021-07-20) Features 👷 Add npmjs support ( 56f60f0 ) ➕ Add libsodium ios, android, and windows ( 00c9511 ) ✨ Add start of Native Integration with Libsodium ( 55e325f ) 1.0.0-exp.6 (2021-07-20) Features 👷 Add npmjs support ( 56f60f0 ) ➕ Add libsodium ios, android, and windows ( 00c9511 ) ✨ Add start of Native Integration with Libsodium ( 55e325f ) 1.0.0-exp.5 (2021-07-12) Bug Fixes 🐛 Fix repository ( e765589 ) 1.0.0-exp.4 (2021-07-12) Bug Fixes 🐛 Fix npm release ( 9e68078 ) 1.0.0-exp.3 (2021-07-12) Bug Fixes 🚩 Update package registry ( a0800bc ) 1.0.0-exp.2 (2021-07-12) Features ✨ Add Mnemonic.FromString and Mnemonic.ToString ( d3a88c6 ) 1.0.0-exp.1 (2021-05-18) Features Add Mnemonic and Key datastructs ( 4370f74 )"
  },
  "license/LICENSE.html": {
    "href": "license/LICENSE.html",
    "title": "| Unity Algorand SDK",
    "keywords": "MIT License Copyright (c) 2020-2022 CareBoo Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "license/Third Party Notices.html": {
    "href": "license/Third Party Notices.html",
    "title": "| Unity Algorand SDK",
    "keywords": "This package contains third-party software components governed by the license(s) indicated below: Component Name: libsodium License Type: ISC License Copyright (c) 2013-2022 Frank Denis Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. Component Name: tweetnacl-js License Type: The Unlicense This is free and unencumbered software released into the public domain. Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means. In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. For more information, please refer to http://unlicense.org Component Name: js-sha512 License Type: MIT Copyright 2014-2018 Chen, Yi-Cyuan Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Component Name: WebSocket transport for Netcode for GameObjects. License Type: MIT Copyright (c) 2021 Unity Technologies Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Component Name: websocket-sharp License Type: MIT Copyright (c) 2010-2022 sta.blockhead Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Component Name: ZXing.Net License Type: Apache License 2.0 Copyright 2013-2022 micjahn Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."
  },
  "manual/index.html": {
    "href": "manual/index.html",
    "title": "Unity Algorand SDK | Unity Algorand SDK",
    "keywords": "Unity Algorand SDK Caution This package has not been audited and isn't suitable for production use. Integrate Algorand blockchain services into your game. Supported Build Targets: [x] Windows [x] Mac OS [x] Linux [x] Android [x] iOS [x] WebGL Installation This SDK is provided as a UPM package in the following locations: Open UPM NPM Registry GitHub Package Registry Open UPM The easiest way to install is to use Open UPM as it manages your scopes automatically. You can install Open UPM here . Then use the Open UPM CLI at the root of your Unity project to install. > cd <your unity project> > openupm add com.careboo.unity-algorand-sdk Manually Adding UPM Scopes If you don't want to use Open UPM, it's straightforward to manually add the UPM registry scopes required for this package. In the Unity Editor, click on Edit -> Project Settings -> Package Manager. Under the Scoped Registries tab, click the + button to add a new Scoped Registry. Set the following values for the Scoped Registry: Name: Open UPM URL: https://package.openupm.com Scopes: - com.cysharp.unitask - com.careboo.unity-algorand-sdk Click on Window -> Package Manager, and the Algorand SDK package should appear in the Packages: My Registries tab. Install the latest version of the Algorand SDK . For more details, see Unity's official documentation on Scoped Registries . Unity Asset Store This SDK will soon be available in the Unity Asset Store . Getting Started The Manual is the best place to start. Check out the Quickstart Guide . There's a Demo game you can try out in the demo branch . Note The documentation is generated per release branch and version. The documentation for a specific version/branch can be found at https://careboo.github.io/unity-algorand-sdk/{version}/ , e.g. https://careboo.github.io/unity-algorand-sdk/1.0.0-pre.3/"
  },
  "manual/quickstart.html": {
    "href": "manual/quickstart.html",
    "title": "Quickstart | Unity Algorand SDK",
    "keywords": "Quickstart Create an Account The following code will generate a new account: // using AlgoSdk; // using UnityEngine; var (privateKey, address) = Account.GenerateAccount(); Debug.Log($\"My address: {address}\"); Debug.Log($\"My private key: {privateKey}\"); Debug.Log($\"My passphrase (mnemonic): {privateKey.ToMnemonic()}\"); Save your address and passphrase in a separate place. Warning Never share your private key or mnemonic. Production environments require stringent private key management. For more information on key management in community Wallets, click here . For the Algorand open source wallet , click here . Fund the Account Before sending transactions to the Algorand network, the account must be funded to cover the minimal transaction fees that exist on Algorand. To fund the account use the Algorand faucet . Connect to a Node Note Prerequisites: Docker Compose Git The easiest way to access a node in development is via the Algorand Sandbox. > git clone https://github.com/algorand/sandbox.git > cd sandbox > ./sandbox up testnet The testnet option will configure the network to use the testnet. Warning The sandbox installation may take a few minutes to startup in order to catch up to the current block round. To learn more about fast catchup, see Sync Node Network using Fast Catchup Once the network is up and running, you should be able to connect to the algod service. Verify that the node is healthy and you can connect to it. Create a new AlgodCheck component that creates an AlgodClient on Start() and makes a GetHealth() request. using AlgoSdk; using Cysharp.Threading.Tasks; using UnityEngine; public class AlgodCheck : MonoBehaviour { AlgodClient algod; public void Start() { algod = new AlgodClient( address: \"http://localhost:4001\", token: \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\" ); CheckAlgodStatus().Forget(); } public async UniTaskVoid CheckAlgodStatus() { var response = await algod.GetHealth(); if (response.Error.IsError) { Debug.LogError(response.Error.Message); } else { Debug.Log(\"Connected to algod!\"); } } } Add the AlgodCheck component to a GameObject in a new scene, and press Play . You should see the Connected to algod! message in the editor console. If you cannot connect, or the node is not healthy, then you should see an error message in the console. Note It's possible the node you're connecting to may require different HTTP request headers for authentication. In that case you can specify the explicit HTTP headers using key-value string tuples: algod = new AlgodClient( \"https://testnet-algorand.api.purestake.io/ps2\", (\"x-api-key\", \"my-super-secret-api-key\") ); Check Your Balance To verify your funds were added to your account, add the following method to your AlgodCheck script. Replace the address with the address of the account you generated earlier. public async UniTaskVoid CheckBalance() { var accountAddress = \"FLWI6UNTQ6CXTKSHOC7QPHYD2L3JVLIPWKNR5FECHX46VOE3DMY24BJASY\"; var (error, accountInfo) = await algod.GetAccountInformation(accountAddress); if (error.IsError) { Debug.LogError(error.Message); } else { Debug.Log($\"My account has {accountInfo.Amount / 1_000_000} algos\"); } } Then call it in your Start() method. public void Start() { // [...] CheckBalance().Forget(); } Your balance should appear in the editor console when you press Play again. Send a Transaction The process for sending a transaction will look like Get the suggested TransactionParams from AlgodClient.GetSuggestedParams() . This contains information like the fee, the hash of the genesis block, and the latest round number. Create a transaction using the static creation methods found in the Transaction class. For a payment transaction, we're going to use Transaction.Payment(Address sender, TransactionParams txnParams, Address receiver, ulong amount) . Sign the transaction using either a secret key or a wallet. Send the signed transaction with AlgodClient.SendTransaction<T>(Signed<T> txn) and save its TransactionId . Wait for the transaction to be confirmed by polling AlgodClient.GetPendingTransaction(TransactionId txid) until it returns PendingTransaction.ConfirmedRound > 0 marking that it was confirmed. Add a new method, MakePayment(PrivateKey privateKey, Address receiver, ulong amount) that will send a PaymentTxn . public async UniTaskVoid MakePayment(PrivateKey privateKey, Address receiver, ulong amount) { // Get the secret key handle and the public key of the sender account. // We'll use the secret key handle to sign the transaction. // The public key will be used as the sender's Address. using var keyPair = privateKey.ToKeyPair(); // Get the suggested transaction params var (txnParamsError, txnParams) = await algod.GetSuggestedParams(); if (txnParamsError.IsError) { Debug.LogError(txnParamsError.Message); return; } // Construct and sign the payment transaction var paymentTxn = Transaction.Payment( sender: keyPair.PublicKey, txnParams: txnParams, receiver: receiver, amount: amount ); var signedTxn = paymentTxn.Sign(keyPair.SecretKey); // Send the transaction var (sendTxnError, txid) = await algod.SendTransaction(signedTxn); if (sendTxnError.IsError) { Debug.LogError(sendTxnError.Message); return; } // Wait for the transaction to be confirmed PendingTransaction pending = default; ErrorResponse error = default; while (pending.ConfirmedRound == 0) { (error, pending) = await algod.GetPendingTransaction(txid); if (error.IsError) { Debug.LogError(error.Message); return; } await UniTask.Delay(1000); } Debug.Log($\"Successfully made payment! Confirmed on round {pending.ConfirmedRound}\"); } To keep things simple, add a new Update() method that will invoke MakePayment whenever the player presses their spacebar. Replace the passphrase with the passphrase you generated earlier. public void Update() { if (Input.GetKeyDown(KeyCode.Space)) { var privateKey = Mnemonic .FromString(\"find paddle girl crumble hammer usual obvious toy actual obscure decorate lock bag inmate author valve course ship burger denial sibling tissue nominee above remove\") .ToPrivateKey(); ulong amount = 100_000; Address receiver = \"HZ57J3K46JIJXILONBBZOHX6BKPXEM2VVXNRFSUED6DKFD5ZD24PMJ3MVA\"; MakePayment(privateKey, receiver, amount).Forget(); } } Now press Play again, then press the spacebar. After a couple seconds, your transaction should be confirmed and you should see a \"Successfully made payment!\" message in the editor console. Complete Example Here is the final code for AlgodCheck component. using AlgoSdk; using Cysharp.Threading.Tasks; using UnityEngine; public class AlgodCheck : MonoBehaviour { AlgodClient algod; public void Start() { algod = new AlgodClient( address: \"http://localhost:4001\", token: \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\" ); CheckAlgodStatus().Forget(); CheckBalance().Forget(); } public void Update() { if (Input.GetKeyDown(KeyCode.Space)) { var privateKey = Mnemonic .FromString(\"find paddle girl crumble hammer usual obvious toy actual obscure decorate lock bag inmate author valve course ship burger denial sibling tissue nominee above remove\") .ToPrivateKey(); ulong amount = 100_000; Address receiver = \"HZ57J3K46JIJXILONBBZOHX6BKPXEM2VVXNRFSUED6DKFD5ZD24PMJ3MVA\"; MakePayment(privateKey, receiver, amount).Forget(); } } public async UniTaskVoid CheckAlgodStatus() { var response = await algod.GetHealth(); if (response.Error.IsError) { Debug.LogError(response.Error.Message); } else { Debug.Log(\"Connected to algod!\"); } } public async UniTaskVoid CheckBalance() { var accountAddress = \"FLWI6UNTQ6CXTKSHOC7QPHYD2L3JVLIPWKNR5FECHX46VOE3DMY24BJASY\"; var (error, accountInfo) = await algod.GetAccountInformation(accountAddress); if (error.IsError) { Debug.LogError(error.Message); } else { Debug.Log($\"My account has {accountInfo.Amount / 1_000_000} algos\"); } } public async UniTaskVoid MakePayment(PrivateKey privateKey, Address receiver, ulong amount) { // Get the secret key handle and the public key of the sender account. // We'll use the secret key handle to sign the transaction. // The public key will be used as the sender's Address. using var keyPair = privateKey.ToKeyPair(); // Get the suggested transaction params var (txnParamsError, txnParams) = await algod.GetSuggestedParams(); if (txnParamsError.IsError) { Debug.LogError(txnParamsError.Message); return; } // Construct and sign the payment transaction var paymentTxn = Transaction.Payment( sender: keyPair.PublicKey, txnParams: txnParams, receiver: receiver, amount: amount ); var signedTxn = paymentTxn.Sign(keyPair.SecretKey); // Send the transaction var (sendTxnError, txid) = await algod.SendTransaction(signedTxn); if (sendTxnError.IsError) { Debug.LogError(sendTxnError.Message); return; } // Wait for the transaction to be confirmed PendingTransaction pending = default; ErrorResponse error = default; while (pending.ConfirmedRound == 0) { (error, pending) = await algod.GetPendingTransaction(txid); if (error.IsError) { Debug.LogError(error.Message); return; } await UniTask.Delay(1000); } Debug.Log($\"Successfully made payment! Confirmed on round {pending.ConfirmedRound}\"); } }"
  },
  "manual/troubleshooting.html": {
    "href": "manual/troubleshooting.html",
    "title": "Troubleshooting | Unity Algorand SDK",
    "keywords": "Troubleshooting Debugging Web Requests Setting the UNITY_ALGO_SDK_DEBUG #define directives will turn on additional HTTP request logging: completed request url: https://testnet-algorand.api.purestake.io/idx2/health uploadedData: downloadedData: {\"data\":{\"migration-required\":false,\"read-only-mode\":true},\"db-available\":true,\"is-migrating\":false,\"message\":\"17756385\",\"round\":17756385} error: method: GET downloadHandler.error: <...snip...> If the data is in JSON or plaintext format, then it will show in the logs as the raw JSON text. If the data is in Message Pack format, it will show as base-64 encoded byte string. Tip When debugging Message Pack, it can be useful to use a visualizer like the one at https://msgpack.dbrgn.ch/ ."
  }
}