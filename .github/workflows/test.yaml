name: Unity Tests

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - "Runtime/**/*.cs"
      - "Runtime/**/*.asmdef"
      - "Runtime/**/*.dll"
      - "Runtime/**/Plugins/**/*"
      - "Editor/**/*.cs"
      - "Editor/**/*.asmdef"
      - "Tests/**/*.cs"
      - "Tests/**/*.asmdef"
      - "**/packages-lock.json"
  workflow_dispatch:

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE_2020 }}

jobs:
  testAllModes:
    name: Test ${{ matrix.unityVersion}} ${{ matrix.targetPlatform }}
    runs-on: macos-latest

    strategy:
      fail-fast: false
      matrix:
        unityVersion: [2020.3.42f1, 2021.3.14f1, 2022.1.23f1]
        targetPlatform:
          - mac-mono
          # - windows-mono
          # - linux-il2cpp
          # - ios
          # - android
          # - webgl

    steps:
      - name: Checkout Algorand.Unity
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Start services
        run: cd .services && docker-compose up --detach

      - name: Get Date
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
        shell: bash
      - name: Cache Library
        uses: actions/cache@v2.1.1
        with:
          path: Algorand.Unity.Package/Library
          key: Library-${{ matrix.unityVersion }}-${{ matrix.targetPlatform }}-${{ steps.get-date.outputs.date }}
          restore-keys: |
            Library-${{ matrix.unityVersion }}-${{ matrix.targetPlatform }}-
            Library-${{ matrix.unityVersion }}-
      - run: echo "::set-output name=result::+Algorand.Unity*,-Algorand.Unity*.Tests,-Algorand.Unity*.Samples*"
        id: assemblyFilters
      - uses: game-ci/unity-test-runner@v2
        id: tests
        with:
          projectPath: ./Algorand.Unity.Package
          artifactsPath: TestResults
          customParameters: -batchMode -burst-disable-compilation -enableCodeCoverage -coverageOptions generateAdditionalMetrics;enableCyclomaticComplexity;assemblyFilters:${{ steps.assemblyFilters.outputs.result }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          useHostNetwork: true
          customImage: unityci/editor:${{ matrix.unityVersion }}-${{ matrix.targetPlatform }}-1
          checkName: Test Results ${{ matrix.unityVersion }} ${{ matrix.targetPlatform }}
      - name: Upload Test Results Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: Unity ${{ matrix.unityVersion }} ${{ matrix.targetPlatform }} Test Results
          path: ${{ steps.tests.outputs.artifactsPath }}
