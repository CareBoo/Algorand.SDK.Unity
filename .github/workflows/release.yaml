name: Create Release

on:
  push:
    branches:
      - main
      - pre
      - exp
      - "[0-9]+.[0-9]+.[0-9]+"
      - "[0-9]+.[0-9]+.x"
      - "[0-9]+.x.x"

jobs:
  semantic_release:
    name: Semantic Release
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
      new_release_channel: ${{ steps.semantic.outputs.new_release_channel }}

    steps:
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "2.1.x"

      - name: Checkout Unity Algorand SDK
        uses: actions/checkout@v2

      - name: Try Build package
        run: ./scripts/buildUnityPackage.sh

      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v2
        with:
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
            @semantic-release/exec
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  npm_publish:
    name: Publish Package to ${{ matrix.registry }}
    runs-on: ubuntu-latest
    needs: semantic_release
    if: needs.semantic_release.outputs.new_release_published == 'true'
    strategy:
      fail-fast: false
      matrix:
        include:
          - registry: https://registry.npmjs.org/
            scope: ""
            token: NPM_TOKEN
          - registry: https://npm.pkg.github.com/
            scope: "@careboo"
            token: GITHUB_TOKEN
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
          ref: ${{ github.ref }}

      - name: Setup npm
        uses: actions/setup-node@v2
        with:
          node-version: "14.x"
          registry-url: ${{ matrix.registry }}

      - name: Publish to ${{ matrix.registry }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets[matrix.token] }}
          RELEASE_CHANNEL: ${{ needs.semantic_release.outputs.new_release_channel }}
        run: |
          npm publish \
            --access=public \
            --tag="${RELEASE_CHANNEL:=latest}" \
            --registry="${{ matrix.registry }}${{ matrix.scope }}"

  build_docs:
    name: Build Docs
    needs: semantic_release
    runs-on: windows-latest
    outputs:
      version: ${{ steps.version.outputs.prop }}
      branch: ${{ steps.branch.outputs.branch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
          ref: ${{ github.ref }}

      - name: Rename README.md
        run: mv README.md index.md

      - name: Get package version
        id: version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: "package.json"
          prop_path: "version"

      - name: Get branch
        id: branch
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"

      - name: Install DocFX
        run: choco install -y docfx

      - name: Update sitemap with branch
        uses: jossef/action-set-json-field@v1
        with:
          file: .docfx/docfx.json
          field: build.sitemap.baseUrl
          value: https://careboo.github.io/unity-algorand-sdk/${{ steps.branch.outputs.branch }}/

      - name: Build Branch Docs
        run: docfx .docfx/docfx.json

      - name: Upload Branch site artifact
        uses: actions/upload-artifact@v1
        with:
          name: _site_branch
          path: _site

      - name: Update sitemap with version
        uses: jossef/action-set-json-field@v1
        with:
          file: .docfx/docfx.json
          field: build.sitemap.baseUrl
          value: https://careboo.github.io/unity-algorand-sdk/${{ steps.version.outputs.prop }}/

      - name: Build Version Docs
        run: docfx .docfx/docfx.json

      - name: Upload Version site artifact
        uses: actions/upload-artifact@v1
        with:
          name: _site_version
          path: _site

  deploy_docs:
    name: Deploy Docs
    needs: build_docs
    runs-on: ubuntu-latest
    steps:
      - name: Download Branch Docs site artifact
        uses: actions/download-artifact@v1
        with:
          name: _site_branch

      - name: Deploy Docs Branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: _site_branch
          destination_dir: ${{ needs.build_docs.outputs.branch }}

      - name: Download Version Docs site artifact
        uses: actions/download-artifact@v1
        with:
          name: _site_version

      - name: Deploy Docs Version
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: _site_version
          destination_dir: ${{ needs.build_docs.outputs.version }}
