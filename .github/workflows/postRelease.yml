name: Post Release

on:
  release:
    types:
      - published

  workflow_dispatch:

jobs:
  read_release:
    name: Read Release
    runs-on: ubuntu-latest
    outputs:
      packageJson: ${{ steps.packageJson.outputs.packageJson }}
      version: ${{ steps.version.outputs.version }}
      uploadUrl: ${{ github.event.release && github.event.release.upload_url || steps.uploadUrl.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v2

      - name: Get package.json
        id: packageJson
        run: |
          content=`cat ./package.json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=packageJson::$content"

      - name: Get version
        id: version
        run: echo "::set-output name=version::${{ fromJson(steps.packageJson.outputs.packageJson).version }}"

      - name: Get Release
        id: uploadUrl
        if: ${{ !(github.event.release) }}
        uses: bruceadams/get-release@v1

  build_unitypackage:
    name: Build unitypackage
    runs-on: ubuntu-latest
    needs: read_release
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - uses: actions/cache@v2
        with:
          path: Unity.AlgoSdk/Library
          key: Library-build_unitypackage-Unity.AlgoSdk-StandaloneLinux64
          restore-keys: |
            Library-build_unitypackage-Unity.AlgoSdk-

      - name: Package unitypackage
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE_2020 }}
        with:
          targetPlatform: StandaloneLinux64
          projectPath: Unity.AlgoSdk
          buildMethod: UnityPackage.Build
          versioning: None
          allowDirtyBuild: true

      - name: Move unitypackage to dist folder
        run: |
          mkdir dist
          mv Unity.AlgoSdk/unity-algorand-sdk.unitypackage dist/unity-algorand-sdk-${{ needs.read_release.outputs.version }}.unitypackage

      - name: Upload dist
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

      - name: Add unitypackage to Release
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ needs.read_release.outputs.uploadUrl }}
          asset_path: dist/*.unitypackage
          overwrite: true

  build_docs:
    name: Build Docs
    runs-on: ubuntu-latest
    needs: read_release
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Rename README.md
        run: mv README.md index.md

      - name: Build Docs
        uses: nikeee/docfx-action@v1.0.0
        with:
          args: .docfx/docfx.json

      - name: Deploy Docs
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: _site
          destination_dir: ${{ needs.read_release.outputs.version }}
