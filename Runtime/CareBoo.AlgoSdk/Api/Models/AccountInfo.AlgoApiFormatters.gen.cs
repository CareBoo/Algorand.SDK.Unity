//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AlgoSdk
{
    
    
    public partial struct AccountInfo
    {
        
        private static bool @__generated__IsValid = AccountInfo.@__generated__InitializeAlgoApiFormatters();
        
        private static bool @__generated__InitializeAlgoApiFormatters()
        {
            AlgoSdk.AlgoApiFormatterLookup.Add<AlgoSdk.AccountInfo>(new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.AccountInfo>(false).Assign("address", (AlgoSdk.AccountInfo x) => x.Address, (ref AlgoSdk.AccountInfo x, AlgoSdk.Address value) => x.Address = value).Assign("amount", (AlgoSdk.AccountInfo x) => x.Amount, (ref AlgoSdk.AccountInfo x, System.UInt64 value) => x.Amount = value).Assign("amount-without-pending-rewards", (AlgoSdk.AccountInfo x) => x.AmountWithoutPendingRewards, (ref AlgoSdk.AccountInfo x, System.UInt64 value) => x.AmountWithoutPendingRewards = value).Assign("apps-local-state", (AlgoSdk.AccountInfo x) => x.ApplicationsLocalState, (ref AlgoSdk.AccountInfo x, AlgoSdk.ApplicationLocalState[] value) => x.ApplicationsLocalState = value, AlgoSdk.ArrayComparer<AlgoSdk.ApplicationLocalState>.Instance).Assign("apps-total-extra-pages", (AlgoSdk.AccountInfo x) => x.ApplicationsTotalExtraPages, (ref AlgoSdk.AccountInfo x, System.UInt64 value) => x.ApplicationsTotalExtraPages = value).Assign("apps-total-schema", (AlgoSdk.AccountInfo x) => x.ApplicationsTotalSchema, (ref AlgoSdk.AccountInfo x, AlgoSdk.StateSchema value) => x.ApplicationsTotalSchema = value).Assign("assets", (AlgoSdk.AccountInfo x) => x.Assets, (ref AlgoSdk.AccountInfo x, AlgoSdk.AssetHolding[] value) => x.Assets = value, AlgoSdk.ArrayComparer<AlgoSdk.AssetHolding>.Instance).Assign("auth-addr", (AlgoSdk.AccountInfo x) => x.AuthAddress, (ref AlgoSdk.AccountInfo x, AlgoSdk.Address value) => x.AuthAddress = value).Assign("closed-at-round", (AlgoSdk.AccountInfo x) => x.ClosedAtRound, (ref AlgoSdk.AccountInfo x, System.UInt64 value) => x.ClosedAtRound = value).Assign("created-apps", (AlgoSdk.AccountInfo x) => x.CreatedApplications, (ref AlgoSdk.AccountInfo x, AlgoSdk.Application[] value) => x.CreatedApplications = value, AlgoSdk.ArrayComparer<AlgoSdk.Application>.Instance).Assign("created-assets", (AlgoSdk.AccountInfo x) => x.CreatedAssets, (ref AlgoSdk.AccountInfo x, AlgoSdk.Asset[] value) => x.CreatedAssets = value, AlgoSdk.ArrayComparer<AlgoSdk.Asset>.Instance).Assign("created-at-round", (AlgoSdk.AccountInfo x) => x.CreatedAtRound, (ref AlgoSdk.AccountInfo x, System.UInt64 value) => x.CreatedAtRound = value).Assign("deleted", (AlgoSdk.AccountInfo x) => x.Deleted, (ref AlgoSdk.AccountInfo x, AlgoSdk.Optional<System.Boolean> value) => x.Deleted = value).Assign("participation", (AlgoSdk.AccountInfo x) => x.Participation, (ref AlgoSdk.AccountInfo x, AlgoSdk.AccountParticipation value) => x.Participation = value).Assign("pending-rewards", (AlgoSdk.AccountInfo x) => x.PendingRewards, (ref AlgoSdk.AccountInfo x, System.UInt64 value) => x.PendingRewards = value).Assign("reward-base", (AlgoSdk.AccountInfo x) => x.RewardBase, (ref AlgoSdk.AccountInfo x, System.UInt64 value) => x.RewardBase = value).Assign("rewards", (AlgoSdk.AccountInfo x) => x.Rewards, (ref AlgoSdk.AccountInfo x, System.UInt64 value) => x.Rewards = value).Assign("round", (AlgoSdk.AccountInfo x) => x.Round, (ref AlgoSdk.AccountInfo x, System.UInt64 value) => x.Round = value).Assign("sig-type", (AlgoSdk.AccountInfo x) => x.SignatureType, (ref AlgoSdk.AccountInfo x, AlgoSdk.SignatureType value) => x.SignatureType = value, AlgoSdk.ByteEnumComparer<AlgoSdk.SignatureType>.Instance).Assign("status", (AlgoSdk.AccountInfo x) => x.Status, (ref AlgoSdk.AccountInfo x, Unity.Collections.FixedString32Bytes value) => x.Status = value).Assign("min-balance", (AlgoSdk.AccountInfo x) => x.MinBalance, (ref AlgoSdk.AccountInfo x, System.UInt64 value) => x.MinBalance = value).Assign("total-apps-opted-in", (AlgoSdk.AccountInfo x) => x.TotalAppsOptedIn, (ref AlgoSdk.AccountInfo x, System.UInt64 value) => x.TotalAppsOptedIn = value).Assign("total-assets-opted-in", (AlgoSdk.AccountInfo x) => x.TotalAssetsOptedIn, (ref AlgoSdk.AccountInfo x, System.UInt64 value) => x.TotalAssetsOptedIn = value).Assign("total-created-apps", (AlgoSdk.AccountInfo x) => x.TotalCreatedApps, (ref AlgoSdk.AccountInfo x, System.UInt64 value) => x.TotalCreatedApps = value).Assign("total-created-assets", (AlgoSdk.AccountInfo x) => x.TotalCreatedAssets, (ref AlgoSdk.AccountInfo x, System.UInt64 value) => x.TotalCreatedAssets = value));
            return true;
        }
    }
}
