//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AlgoSdk
{
    
    
    public partial struct DryrunRequest
    {
        
        private static bool @__generated__IsValid = DryrunRequest.@__generated__InitializeAlgoApiFormatters();
        
        private static bool @__generated__InitializeAlgoApiFormatters()
        {
            AlgoSdk.AlgoApiFormatterLookup.Add<AlgoSdk.DryrunRequest>(new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.DryrunRequest>(false).Assign("accounts", (AlgoSdk.DryrunRequest x) => x.Accounts, (ref AlgoSdk.DryrunRequest x, AlgoSdk.AccountInfo[] value) => x.Accounts = value, AlgoSdk.ArrayComparer<AlgoSdk.AccountInfo>.Instance).Assign("apps", (AlgoSdk.DryrunRequest x) => x.Applications, (ref AlgoSdk.DryrunRequest x, AlgoSdk.Application[] value) => x.Applications = value, AlgoSdk.ArrayComparer<AlgoSdk.Application>.Instance).Assign("latest-timestamp", (AlgoSdk.DryrunRequest x) => x.LatestTimestamp, (ref AlgoSdk.DryrunRequest x, System.UInt64 value) => x.LatestTimestamp = value).Assign("protocol-version", (AlgoSdk.DryrunRequest x) => x.ProtocolVersion, (ref AlgoSdk.DryrunRequest x, Unity.Collections.FixedString64Bytes value) => x.ProtocolVersion = value).Assign("round", (AlgoSdk.DryrunRequest x) => x.Round, (ref AlgoSdk.DryrunRequest x, System.UInt64 value) => x.Round = value).Assign("sources", (AlgoSdk.DryrunRequest x) => x.Sources, (ref AlgoSdk.DryrunRequest x, AlgoSdk.DryrunSource[] value) => x.Sources = value, AlgoSdk.ArrayComparer<AlgoSdk.DryrunSource>.Instance).Assign("txns", (AlgoSdk.DryrunRequest x) => x.Transactions, (ref AlgoSdk.DryrunRequest x, AlgoSdk.Transaction[] value) => x.Transactions = value, AlgoSdk.ArrayComparer<AlgoSdk.Transaction>.Instance));
            return true;
        }
    }
}
