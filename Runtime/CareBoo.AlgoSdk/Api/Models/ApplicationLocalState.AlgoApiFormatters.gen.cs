//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AlgoSdk
{
    
    
    public partial struct ApplicationLocalState
    {
        
        private static bool @__generated__IsValid = ApplicationLocalState.@__generated__InitializeAlgoApiFormatters();
        
        private static bool @__generated__InitializeAlgoApiFormatters()
        {
            AlgoSdk.AlgoApiFormatterLookup.Add<AlgoSdk.ApplicationLocalState>(new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.ApplicationLocalState>(false).Assign("closed-out-at-round", (AlgoSdk.ApplicationLocalState x) => x.ClosedOutAtRound, (ref AlgoSdk.ApplicationLocalState x, System.UInt64 value) => x.ClosedOutAtRound = value).Assign("deleted", (AlgoSdk.ApplicationLocalState x) => x.Deleted, (ref AlgoSdk.ApplicationLocalState x, AlgoSdk.Optional<System.Boolean> value) => x.Deleted = value).Assign("id", (AlgoSdk.ApplicationLocalState x) => x.Id, (ref AlgoSdk.ApplicationLocalState x, System.UInt64 value) => x.Id = value).Assign("key-value", (AlgoSdk.ApplicationLocalState x) => x.KeyValues, (ref AlgoSdk.ApplicationLocalState x, AlgoSdk.TealKeyValue[] value) => x.KeyValues = value, AlgoSdk.ArrayComparer<AlgoSdk.TealKeyValue>.Instance).Assign("opted-in-at-round", (AlgoSdk.ApplicationLocalState x) => x.OptedInAtRound, (ref AlgoSdk.ApplicationLocalState x, System.UInt64 value) => x.OptedInAtRound = value).Assign("schema", (AlgoSdk.ApplicationLocalState x) => x.Schema, (ref AlgoSdk.ApplicationLocalState x, AlgoSdk.StateSchema value) => x.Schema = value));
            return true;
        }
    }
}
