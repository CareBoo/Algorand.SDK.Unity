//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AlgoSdk
{
    
    
    public partial struct MultisigSig
    {
        
        private static bool @__generated__IsValid = MultisigSig.@__generated__InitializeAlgoApiFormatters();
        
        private static bool @__generated__InitializeAlgoApiFormatters()
        {
            AlgoSdk.AlgoApiFormatterLookup.Add<AlgoSdk.MultisigSig>(new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.MultisigSig>(false).Assign("subsig", (AlgoSdk.MultisigSig x) => x.Subsigs, (ref AlgoSdk.MultisigSig x, AlgoSdk.MultisigSig.Subsig[] value) => x.Subsigs = value, AlgoSdk.ArrayComparer<AlgoSdk.MultisigSig.Subsig>.Instance).Assign("thr", (AlgoSdk.MultisigSig x) => x.Threshold, (ref AlgoSdk.MultisigSig x, System.Byte value) => x.Threshold = value).Assign("v", (AlgoSdk.MultisigSig x) => x.Version, (ref AlgoSdk.MultisigSig x, System.Byte value) => x.Version = value));
            return true;
        }
        
        public partial struct Subsig
        {
            
            private static bool @__generated__IsValid = Subsig.@__generated__InitializeAlgoApiFormatters();
            
            private static bool @__generated__InitializeAlgoApiFormatters()
            {
                AlgoSdk.AlgoApiFormatterLookup.Add<AlgoSdk.MultisigSig.Subsig>(new AlgoSdk.AlgoApiObjectFormatter<AlgoSdk.MultisigSig.Subsig>(false).Assign("pk", (AlgoSdk.MultisigSig.Subsig x) => x.PublicKey, (ref AlgoSdk.MultisigSig.Subsig x, AlgoSdk.Crypto.Ed25519.PublicKey value) => x.PublicKey = value).Assign("s", (AlgoSdk.MultisigSig.Subsig x) => x.Sig, (ref AlgoSdk.MultisigSig.Subsig x, AlgoSdk.Sig value) => x.Sig = value));
                return true;
            }
        }
    }
}
